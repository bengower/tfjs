var U6=Object.create;var ob=Object.defineProperty;var W6=Object.getOwnPropertyDescriptor;var K6=Object.getOwnPropertyNames;var V6=Object.getPrototypeOf,H6=Object.prototype.hasOwnProperty;var q6=r=>ob(r,"__esModule",{value:!0});var k0=(r=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(r,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):r)(function(r){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});var wr=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),je=(r,e)=>{for(var t in e)ob(r,t,{get:e[t],enumerable:!0})},j6=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of K6(e))!H6.call(r,o)&&(t||o!=="default")&&ob(r,o,{get:()=>e[o],enumerable:!(n=W6(e,o))||n.enumerable});return r},Fl=(r,e)=>j6(q6(ob(r!=null?U6(V6(r)):{},"default",!e&&r&&r.__esModule?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var V0=wr((pge,K0)=>{K0.exports=er;var As=null;try{As=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function er(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}er.prototype.__isLong__;Object.defineProperty(er.prototype,"__isLong__",{value:!0});function Vn(r){return(r&&r.__isLong__)===!0}er.isLong=Vn;var _0={},L0={};function $l(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=L0[r],n)?n:(t=tr(r,(r|0)<0?-1:0,!0),o&&(L0[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=_0[r],n)?n:(t=tr(r,r<0?-1:0,!1),o&&(_0[r]=t),t))}er.fromInt=$l;function ws(r,e){if(isNaN(r))return e?Ll:Ns;if(e){if(r<0)return Ll;if(r>=z0)return W0}else{if(r<=-B0)return Kn;if(r+1>=B0)return U0}return r<0?ws(-r,e).neg():tr(r%Lm|0,r/Lm|0,e)}er.fromNumber=ws;function tr(r,e,t){return new er(r,e,t)}er.fromBits=tr;var lb=Math.pow;function MC(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return Ns;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return MC(r.substring(1),e,t).neg();for(var o=ws(lb(t,8)),s=Ns,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),u=parseInt(r.substring(a,a+i),t);if(i<8){var l=ws(lb(t,i));s=s.mul(l).add(ws(u))}else s=s.mul(o),s=s.add(ws(u))}return s.unsigned=e,s}er.fromString=MC;function Ea(r,e){return typeof r=="number"?ws(r,e):typeof r=="string"?MC(r,e):tr(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}er.fromValue=Ea;var $0=1<<16,yj=1<<24,Lm=$0*$0,z0=Lm*Lm,B0=z0/2,O0=$l(yj),Ns=$l(0);er.ZERO=Ns;var Ll=$l(0,!0);er.UZERO=Ll;var _m=$l(1);er.ONE=_m;var G0=$l(1,!0);er.UONE=G0;var FC=$l(-1);er.NEG_ONE=FC;var U0=tr(-1,2147483647,!1);er.MAX_VALUE=U0;var W0=tr(-1,-1,!0);er.MAX_UNSIGNED_VALUE=W0;var Kn=tr(0,-2147483648,!1);er.MIN_VALUE=Kn;var Te=er.prototype;Te.toInt=function(){return this.unsigned?this.low>>>0:this.low};Te.toNumber=function(){return this.unsigned?(this.high>>>0)*Lm+(this.low>>>0):this.high*Lm+(this.low>>>0)};Te.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Kn)){var t=ws(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=ws(lb(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),l=a.sub(u.mul(s)).toInt()>>>0,p=l.toString(e);if(a=u,a.isZero())return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}};Te.getHighBits=function(){return this.high};Te.getHighBitsUnsigned=function(){return this.high>>>0};Te.getLowBits=function(){return this.low};Te.getLowBitsUnsigned=function(){return this.low>>>0};Te.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Kn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};Te.isZero=function(){return this.high===0&&this.low===0};Te.eqz=Te.isZero;Te.isNegative=function(){return!this.unsigned&&this.high<0};Te.isPositive=function(){return this.unsigned||this.high>=0};Te.isOdd=function(){return(this.low&1)===1};Te.isEven=function(){return(this.low&1)===0};Te.equals=function(e){return Vn(e)||(e=Ea(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Te.eq=Te.equals;Te.notEquals=function(e){return!this.eq(e)};Te.neq=Te.notEquals;Te.ne=Te.notEquals;Te.lessThan=function(e){return this.comp(e)<0};Te.lt=Te.lessThan;Te.lessThanOrEqual=function(e){return this.comp(e)<=0};Te.lte=Te.lessThanOrEqual;Te.le=Te.lessThanOrEqual;Te.greaterThan=function(e){return this.comp(e)>0};Te.gt=Te.greaterThan;Te.greaterThanOrEqual=function(e){return this.comp(e)>=0};Te.gte=Te.greaterThanOrEqual;Te.ge=Te.greaterThanOrEqual;Te.compare=function(e){if(Vn(e)||(e=Ea(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Te.comp=Te.compare;Te.negate=function(){return!this.unsigned&&this.eq(Kn)?Kn:this.not().add(_m)};Te.neg=Te.negate;Te.add=function(e){Vn(e)||(e=Ea(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=e.high>>>16,i=e.high&65535,u=e.low>>>16,l=e.low&65535,p=0,m=0,c=0,d=0;return d+=s+l,c+=d>>>16,d&=65535,c+=o+u,m+=c>>>16,c&=65535,m+=n+i,p+=m>>>16,m&=65535,p+=t+a,p&=65535,tr(c<<16|d,p<<16|m,this.unsigned)};Te.subtract=function(e){return Vn(e)||(e=Ea(e)),this.add(e.neg())};Te.sub=Te.subtract;Te.multiply=function(e){if(this.isZero())return Ns;if(Vn(e)||(e=Ea(e)),As){var t=As.mul(this.low,this.high,e.low,e.high);return tr(t,As.get_high(),this.unsigned)}if(e.isZero())return Ns;if(this.eq(Kn))return e.isOdd()?Kn:Ns;if(e.eq(Kn))return this.isOdd()?Kn:Ns;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(O0)&&e.lt(O0))return ws(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=e.high>>>16,u=e.high&65535,l=e.low>>>16,p=e.low&65535,m=0,c=0,d=0,f=0;return f+=a*p,d+=f>>>16,f&=65535,d+=s*p,c+=d>>>16,d&=65535,d+=a*l,c+=d>>>16,d&=65535,c+=o*p,m+=c>>>16,c&=65535,c+=s*l,m+=c>>>16,c&=65535,c+=a*u,m+=c>>>16,c&=65535,m+=n*p+o*l+s*u+a*i,m&=65535,tr(d<<16|f,m<<16|c,this.unsigned)};Te.mul=Te.multiply;Te.divide=function(e){if(Vn(e)||(e=Ea(e)),e.isZero())throw Error("division by zero");if(As){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?As.div_u:As.div_s)(this.low,this.high,e.low,e.high);return tr(t,As.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ll:Ns;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Ll;if(e.gt(this.shru(1)))return G0;s=Ll}else{if(this.eq(Kn)){if(e.eq(_m)||e.eq(FC))return Kn;if(e.eq(Kn))return _m;var a=this.shr(1);return n=a.div(e).shl(1),n.eq(Ns)?e.isNegative()?_m:FC:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(Kn))return this.unsigned?Ll:Ns;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=Ns}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),u=i<=48?1:lb(2,i-48),l=ws(n),p=l.mul(e);p.isNegative()||p.gt(o);)n-=u,l=ws(n,this.unsigned),p=l.mul(e);l.isZero()&&(l=_m),s=s.add(l),o=o.sub(p)}return s};Te.div=Te.divide;Te.modulo=function(e){if(Vn(e)||(e=Ea(e)),As){var t=(this.unsigned?As.rem_u:As.rem_s)(this.low,this.high,e.low,e.high);return tr(t,As.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Te.mod=Te.modulo;Te.rem=Te.modulo;Te.not=function(){return tr(~this.low,~this.high,this.unsigned)};Te.and=function(e){return Vn(e)||(e=Ea(e)),tr(this.low&e.low,this.high&e.high,this.unsigned)};Te.or=function(e){return Vn(e)||(e=Ea(e)),tr(this.low|e.low,this.high|e.high,this.unsigned)};Te.xor=function(e){return Vn(e)||(e=Ea(e)),tr(this.low^e.low,this.high^e.high,this.unsigned)};Te.shiftLeft=function(e){return Vn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?tr(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):tr(0,this.low<<e-32,this.unsigned)};Te.shl=Te.shiftLeft;Te.shiftRight=function(e){return Vn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?tr(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):tr(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Te.shr=Te.shiftRight;Te.shiftRightUnsigned=function(e){if(Vn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return tr(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?tr(t,0,this.unsigned):tr(t>>>e-32,0,this.unsigned)};Te.shru=Te.shiftRightUnsigned;Te.shr_u=Te.shiftRightUnsigned;Te.toSigned=function(){return this.unsigned?tr(this.low,this.high,!1):this};Te.toUnsigned=function(){return this.unsigned?this:tr(this.low,this.high,!0)};Te.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Te.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Te.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};er.fromBytes=function(e,t,n){return n?er.fromBytesLE(e,t):er.fromBytesBE(e,t)};er.fromBytesLE=function(e,t){return new er(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};er.fromBytesBE=function(e,t){return new er(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var F1=wr(()=>{});var M1=wr(()=>{});var iP=wr((aP,bk)=>{(function(r,e,t){function n(i){var u=this,l=a();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(i),u.s0<0&&(u.s0+=1),u.s1-=l(i),u.s1<0&&(u.s1+=1),u.s2-=l(i),u.s2<0&&(u.s2+=1),l=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function s(i,u){var l=new n(i),p=u&&u.state,m=l.next;return m.int32=function(){return l.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&o(p,l),m.state=function(){return o(l,{})}),m}function a(){var i=4022871197,u=function(l){l=String(l);for(var p=0;p<l.length;p++){i+=l.charCodeAt(p);var m=.02519603282416938*i;i=m>>>0,m-=i,m*=i,i=m>>>0,m-=i,i+=m*4294967296}return(i>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(aP,typeof bk=="object"&&bk,typeof define=="function"&&define)});var lP=wr((uP,yk)=>{(function(r,e,t){function n(a){var i=this,u="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var p=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^p^p>>>8},a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(uP,typeof yk=="object"&&yk,typeof define=="function"&&define)});var mP=wr((pP,xk)=>{(function(r,e,t){function n(a){var i=this,u="";i.next=function(){var p=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(p^p<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,l==u.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(pP,typeof xk=="object"&&xk,typeof define=="function"&&define)});var dP=wr((cP,Tk)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var l=i.x,p=i.i,m,c,d;return m=l[p],m^=m>>>7,c=m^m<<24,m=l[p+1&7],c^=m^m>>>10,m=l[p+3&7],c^=m^m>>>3,m=l[p+4&7],c^=m^m<<7,m=l[p+7&7],m=m^m<<13,c^=m^m<<9,l[p]=c,i.i=p+1&7,c};function u(l,p){var m,c,d=[];if(p===(p|0))c=d[0]=p;else for(p=""+p,m=0;m<p.length;++m)d[m&7]=d[m&7]<<15^p.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],l.x=d,l.i=0,m=256;m>0;--m)l.next()}u(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.x&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(cP,typeof Tk=="object"&&Tk,typeof define=="function"&&define)});var hP=wr((fP,Ik)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var l=i.w,p=i.X,m=i.i,c,d;return i.w=l=l+1640531527|0,d=p[m+34&127],c=p[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=p[m]=d^c,i.i=m,d+(l^l>>>16)|0};function u(l,p){var m,c,d,f,h,g=[],b=128;for(p===(p|0)?(c=p,p=null):(p=p+"\0",c=0,b=Math.max(b,p.length)),d=0,f=-32;f<b;++f)p&&(c^=p.charCodeAt((f+32)%p.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(p&&p.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;l.w=h,l.X=g,l.i=d}u(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.X&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(fP,typeof Ik=="object"&&Ik,typeof define=="function"&&define)});var bP=wr((gP,Ck)=>{(function(r,e,t){function n(a){var i=this,u="";i.next=function(){var p=i.b,m=i.c,c=i.d,d=i.a;return p=p<<25^p>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-p|0,i.b=p=p<<20^p>>>12^m,i.c=m=m-c|0,i.d=c<<16^m>>>16^d,i.a=d-p|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):u+=a;for(var l=0;l<u.length+20;l++)i.b^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(gP,typeof Ck=="object"&&Ck,typeof define=="function"&&define)});var yP=wr(()=>{});var TP=wr((xP,ny)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),u=t.pow(2,s),l=u*2,p=n-1,m;function c(T,I,k){var w=[];I=I==!0?{entropy:!0}:I||{};var R=g(h(I.entropy?[T,x(e)]:T??b(),3),w),F=new d(w),M=function(){for(var L=F.g(o),z=i,W=0;L<u;)L=(L+W)*n,z*=n,W=F.g(1);for(;L>=l;)L/=2,z/=2,W>>>=1;return(L+W)/z};return M.int32=function(){return F.g(4)|0},M.quick=function(){return F.g(4)/4294967296},M.double=M,g(x(F.S),e),(I.pass||k||function(L,z,W,V){return V&&(V.S&&f(V,F),L.state=function(){return f(F,{})}),W?(t[a]=L,z):L})(M,R,"global"in I?I.global:this==t,I.state)}function d(T){var I,k=T.length,w=this,R=0,F=w.i=w.j=0,M=w.S=[];for(k||(T=[k++]);R<n;)M[R]=R++;for(R=0;R<n;R++)M[R]=M[F=p&F+T[R%k]+(I=M[R])],M[F]=I;(w.g=function(L){for(var z,W=0,V=w.i,j=w.j,q=w.S;L--;)z=q[V=p&V+1],W=W*n+q[p&(q[V]=q[j=p&j+z])+(q[j]=z)];return w.i=V,w.j=j,W})(n)}function f(T,I){return I.i=T.i,I.j=T.j,I.S=T.S.slice(),I}function h(T,I){var k=[],w=typeof T,R;if(I&&w=="object")for(R in T)try{k.push(h(T[R],I-1))}catch{}return k.length?k:w=="string"?T:T+"\0"}function g(T,I){for(var k=T+"",w,R=0;R<k.length;)I[p&R]=p&(w^=I[p&R]*19)+k.charCodeAt(R++);return x(I)}function b(){try{var T;return m&&(T=m.randomBytes)?T=T(n):(T=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(T)),x(T)}catch{var I=r.navigator,k=I&&I.plugins;return[+new Date,r,k,r.screen,x(e)]}}function x(T){return String.fromCharCode.apply(0,T)}if(g(t.random(),e),typeof ny=="object"&&ny.exports){ny.exports=c;try{m=yP()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):t["seed"+a]=c})(typeof self<"u"?self:xP,[],Math)});var jd=wr((SEe,IP)=>{var yY=iP(),xY=lP(),TY=mP(),IY=dP(),CY=hP(),kY=bP(),jl=TP();jl.alea=yY;jl.xor128=xY;jl.xorwow=TY;jl.xorshift7=IY;jl.xor4096=CY;jl.tychei=kY;IP.exports=jl});var hv=wr(()=>{});var _h=wr(()=>{});var Ig=wr(()=>{});var KD=wr(()=>{});var Oq=wr(()=>{});var zq=wr(()=>{});var Gq=wr((_T,HD)=>{var VD=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};function t(){return Be.buffer!=Cr&&ta(Be.buffer),Hp}function n(){return Be.buffer!=Cr&&ta(Be.buffer),qp}function o(){return Be.buffer!=Cr&&ta(Be.buffer),hd}function s(){return Be.buffer!=Cr&&ta(Be.buffer),vg}function a(){return Be.buffer!=Cr&&ta(Be.buffer),Ag}function i(){return Be.buffer!=Cr&&ta(Be.buffer),wg}function u(){return Be.buffer!=Cr&&ta(Be.buffer),Ng}var l=typeof e<"u"?e:{},p,m;l.ready=new Promise(function(N,E){p=N,m=E});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d=Object.assign({},l),f=[],h="./this.program",g=(N,E)=>{throw E},b=typeof window=="object",x=typeof importScripts=="function",T=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",I=l.ENVIRONMENT_IS_PTHREAD||!1,k="";function w(N){return l.locateFile?l.locateFile(N,k):k+N}var R,F,M,L;function z(N){if(N instanceof Sd)return;H("exiting due to exception: "+N)}var W,V,j;if(T){x?k=Ig().dirname(k)+"/":k=__dirname+"/",j=()=>{V||(W=_h(),V=Ig())},R=function(G,X){return j(),G=V.normalize(G),W.readFileSync(G,X?void 0:"utf8")},M=E=>{var G=R(E,!0);return G.buffer||(G=new Uint8Array(G)),G},F=(E,G,X)=>{j(),E=V.normalize(E),W.readFile(E,function(ge,Ce){ge?X(ge):G(Ce.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(E){if(!(E instanceof Sd))throw E}),process.on("unhandledRejection",function(E){throw E}),g=(E,G)=>{if(wl())throw process.exitCode=E,G;z(G),process.exit(E)},l.inspect=function(){return"[Emscripten Module object]"};let N;try{N=KD()}catch(E){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),E}global.Worker=N.Worker}else(b||x)&&(x?k=self.location.href:typeof document<"u"&&document.currentScript&&(k=document.currentScript.src),r&&(k=r),k.indexOf("blob:")!==0?k=k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):k="",T||(R=N=>{var E=new XMLHttpRequest;return E.open("GET",N,!1),E.send(null),E.responseText},x&&(M=N=>{var E=new XMLHttpRequest;return E.open("GET",N,!1),E.responseType="arraybuffer",E.send(null),new Uint8Array(E.response)}),F=(N,E,G)=>{var X=new XMLHttpRequest;X.open("GET",N,!0),X.responseType="arraybuffer",X.onload=()=>{if(X.status==200||X.status==0&&X.response){E(X.response);return}G()},X.onerror=G,X.send(null)}),L=N=>document.title=N);T&&typeof performance>"u"&&(global.performance=Oq().performance);var q=console.log.bind(console),Y=console.warn.bind(console);T&&(j(),q=N=>W.writeSync(1,N+`
`),Y=N=>W.writeSync(2,N+`
`));var J=l.print||q,H=l.printErr||Y;Object.assign(l,d),d=null,l.arguments&&(f=l.arguments),l.thisProgram&&(h=l.thisProgram),l.quit&&(g=l.quit);var te=4;function se(N){se.shown||(se.shown={}),se.shown[N]||(se.shown[N]=1,H(N))}function ae(N,E){if(typeof WebAssembly.Function=="function"){for(var G={i:"i32",j:"i64",f:"f32",d:"f64"},X={parameters:[],results:E[0]=="v"?[]:[G[E[0]]]},ge=1;ge<E.length;++ge)X.parameters.push(G[E[ge]]);return new WebAssembly.Function(X,N)}var Ce=[1,0,1,96],Ne=E.slice(0,1),Ue=E.slice(1),lr={i:127,j:126,f:125,d:124};Ce.push(Ue.length);for(var ge=0;ge<Ue.length;++ge)Ce.push(lr[Ue[ge]]);Ne=="v"?Ce.push(0):Ce=Ce.concat([1,lr[Ne]]),Ce[1]=Ce.length-2;var sa=new Uint8Array([0,97,115,109,1,0,0,0].concat(Ce,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),aa=new WebAssembly.Module(sa),nb=new WebAssembly.Instance(aa,{e:{f:N}}),vd=nb.exports.f;return vd}var pe=[],ie;function be(){if(pe.length)return pe.pop();try{Jn.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return Jn.length-1}function fe(N,E){for(var G=N;G<N+E;G++){var X=Qp(G);X&&ie.set(X,G)}}var Ie=0,we=N=>{Ie=N},Ee=Atomics.load,Le=Atomics.store,Ze=Atomics.compareExchange,ee;l.wasmBinary&&(ee=l.wasmBinary);var gt=l.noExitRuntime||!0;typeof WebAssembly!="object"&&Xp("no native wasm support detected");var Be,Et,Pt=!1,pt;function Jt(N,E){N||Xp(E)}function Ot(N){var E=l["_"+N];return E}function rn(N,E,G,X,ge){var Ce={string:function(On){var sm=0;if(On!=null&&On!==0){var C0=(On.length<<2)+1;sm=om(C0),Bn(On,sm,C0)}return sm},array:function(On){var sm=om(On.length);return ku(On,sm),sm}};function Ne(On){return E==="string"?qr(On):E==="boolean"?Boolean(On):On}var Ue=Ot(N),lr=[],sa=0;if(X)for(var aa=0;aa<X.length;aa++){var nb=Ce[G[aa]];nb?(sa===0&&(sa=xC()),lr[aa]=nb(X[aa])):lr[aa]=X[aa]}var vd=Ue.apply(null,lr);function G6(On){return sa!==0&&Jg(sa),Ne(On)}return vd=G6(vd),vd}function Ht(N,E,G,X){G=G||[];var ge=G.every(function(Ne){return Ne==="number"}),Ce=E!=="string";return Ce&&ge&&!X?Ot(N):function(){return rn(N,E,G,arguments,X)}}var Js=1;function $r(N){var E=new TextDecoder(N);this.decode=G=>(G.buffer instanceof SharedArrayBuffer&&(G=new Uint8Array(G)),E.decode.call(E,G))}var nn=typeof TextDecoder<"u"?new $r("utf8"):void 0;function on(N,E,G){for(var X=E+G,ge=E;N[ge]&&!(ge>=X);)++ge;if(ge-E>16&&N.subarray&&nn)return nn.decode(N.subarray(E,ge));for(var Ce="";E<ge;){var Ne=N[E++];if(!(Ne&128)){Ce+=String.fromCharCode(Ne);continue}var Ue=N[E++]&63;if((Ne&224)==192){Ce+=String.fromCharCode((Ne&31)<<6|Ue);continue}var lr=N[E++]&63;if((Ne&240)==224?Ne=(Ne&15)<<12|Ue<<6|lr:Ne=(Ne&7)<<18|Ue<<12|lr<<6|N[E++]&63,Ne<65536)Ce+=String.fromCharCode(Ne);else{var sa=Ne-65536;Ce+=String.fromCharCode(55296|sa>>10,56320|sa&1023)}}return Ce}function qr(N,E){return N?on(n(),N,E):""}function os(N,E,G,X){if(!(X>0))return 0;for(var ge=G,Ce=G+X-1,Ne=0;Ne<N.length;++Ne){var Ue=N.charCodeAt(Ne);if(Ue>=55296&&Ue<=57343){var lr=N.charCodeAt(++Ne);Ue=65536+((Ue&1023)<<10)|lr&1023}if(Ue<=127){if(G>=Ce)break;E[G++]=Ue}else if(Ue<=2047){if(G+1>=Ce)break;E[G++]=192|Ue>>6,E[G++]=128|Ue&63}else if(Ue<=65535){if(G+2>=Ce)break;E[G++]=224|Ue>>12,E[G++]=128|Ue>>6&63,E[G++]=128|Ue&63}else{if(G+3>=Ce)break;E[G++]=240|Ue>>18,E[G++]=128|Ue>>12&63,E[G++]=128|Ue>>6&63,E[G++]=128|Ue&63}}return E[G]=0,G-ge}function Bn(N,E,G){return os(N,n(),E,G)}function ea(N){for(var E=0,G=0;G<N.length;++G){var X=N.charCodeAt(G);X>=55296&&X<=57343&&(X=65536+((X&1023)<<10)|N.charCodeAt(++G)&1023),X<=127?++E:X<=2047?E+=2:X<=65535?E+=3:E+=4}return E}var ss=typeof TextDecoder<"u"?new $r("utf-16le"):void 0;function ku(N,E){t().set(N,E)}function vl(N,E,G){for(var X=0;X<N.length;++X)t()[E++>>0]=N.charCodeAt(X);G||(t()[E>>0]=0)}function Vp(N,E){return N%E>0&&(N+=E-N%E),N}var Cr,Hp,qp,hd,vg,Ag,r0,wg,Ng;I&&(Cr=l.buffer);function ta(N){Cr=N,l.HEAP8=Hp=new Int8Array(N),l.HEAP16=hd=new Int16Array(N),l.HEAP32=Ag=new Int32Array(N),l.HEAPU8=qp=new Uint8Array(N),l.HEAPU16=vg=new Uint16Array(N),l.HEAPU32=r0=new Uint32Array(N),l.HEAPF32=wg=new Float32Array(N),l.HEAPF64=Ng=new Float64Array(N)}var Dg=l.INITIAL_MEMORY||16777216;if(I)Be=l.wasmMemory,Cr=l.buffer;else if(l.wasmMemory)Be=l.wasmMemory;else if(Be=new WebAssembly.Memory({initial:Dg/65536,maximum:32768,shared:!0}),!(Be.buffer instanceof SharedArrayBuffer))throw H("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),T&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Be&&(Cr=Be.buffer),Dg=Cr.byteLength,ta(Cr);var Jn,jp=[],Su=[],zT=[],Pg=[],Al=!1,GT=!1,Rg=0;function wl(){return gt||Rg>0}function sn(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)n0(l.preRun.shift());Lg(jp)}function gd(){Al=!0,!I&&Lg(Su)}function UT(){I||(He.terminateAllThreads(),GT=!0)}function WT(){if(!I){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)bd(l.postRun.shift());Lg(Pg)}}function n0(N){jp.unshift(N)}function o0(N){Su.unshift(N)}function bd(N){Pg.unshift(N)}var vu=0,Fg=null,ra=null;function yd(N){vu++,l.monitorRunDependencies&&l.monitorRunDependencies(vu)}function s0(N){if(vu--,l.monitorRunDependencies&&l.monitorRunDependencies(vu),vu==0&&(Fg!==null&&(clearInterval(Fg),Fg=null),ra)){var E=ra;ra=null,E()}}l.preloadedImages={},l.preloadedAudios={};function Xp(N){I?postMessage({cmd:"onAbort",arg:N}):l.onAbort&&l.onAbort(N),N="Aborted("+N+")",H(N),Pt=!0,pt=1,N+=". Build with -s ASSERTIONS=1 for more info.";var E=new WebAssembly.RuntimeError(N);throw m(E),E}var KT="data:application/octet-stream;base64,";function Mg(N){return N.startsWith(KT)}function Eg(N){return N.startsWith("file://")}var an;an="tfjs-backend-wasm-threaded-simd.wasm",Mg(an)||(an=w(an));function _g(N){try{if(N==an&&ee)return new Uint8Array(ee);if(M)return M(N);throw"both async and sync fetching of the wasm failed"}catch(E){Xp(E)}}function Yp(){if(!ee&&(b||x)){if(typeof fetch=="function"&&!Eg(an))return fetch(an,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+an+"'";return N.arrayBuffer()}).catch(function(){return _g(an)});if(F)return new Promise(function(N,E){F(an,function(G){N(new Uint8Array(G))},E)})}return Promise.resolve().then(function(){return _g(an)})}function VT(){var N={env:jg,wasi_snapshot_preview1:jg};function E(Ne,Ue){var lr=Ne.exports;if(l.asm=lr,QT(l.asm.emscripten_tls_init),Jn=l.asm.__indirect_function_table,o0(l.asm.__wasm_call_ctors),Et=Ue,!I){var sa=He.unusedWorkers.length;He.unusedWorkers.forEach(function(aa){He.loadWasmModuleToWorker(aa,function(){--sa||s0("wasm-instantiate")})})}}I||yd("wasm-instantiate");function G(Ne){E(Ne.instance,Ne.module)}function X(Ne){return Yp().then(function(Ue){return WebAssembly.instantiate(Ue,N)}).then(function(Ue){return Ue}).then(Ne,function(Ue){H("failed to asynchronously prepare wasm: "+Ue),Xp(Ue)})}function ge(){return!ee&&typeof WebAssembly.instantiateStreaming=="function"&&!Mg(an)&&!Eg(an)&&typeof fetch=="function"?fetch(an,{credentials:"same-origin"}).then(function(Ne){var Ue=WebAssembly.instantiateStreaming(Ne,N);return Ue.then(G,function(lr){return H("wasm streaming compile failed: "+lr),H("falling back to ArrayBuffer instantiation"),X(G)})}):X(G)}if(l.instantiateWasm)try{var Ce=l.instantiateWasm(N,E);return Ce}catch(Ne){return H("Module.instantiateWasm callback failed with error: "+Ne),!1}return ge().catch(m),{}}var a0,i0,HT={};function Lg(N){for(;N.length>0;){var E=N.shift();if(typeof E=="function"){E(l);continue}var G=E.func;typeof G=="number"?E.arg===void 0?Qp(G)():Qp(G)(E.arg):G(E.arg===void 0?null:E.arg)}}function Zp(N){var E=xC(),G=N();return Jg(E),G}function Xq(N){return N}function u0(N){var E=/\b_Z[\w\d_]+/g;return N.replace(E,function(G){var X=G;return G===X?G:X+" ["+G+"]"})}function qT(N){a()[N>>2]=0;var E=He.pthreads[N];delete He.pthreads[N],E.worker.terminate(),yC(N),He.runningWorkers.splice(He.runningWorkers.indexOf(E.worker),1),E.worker.pthread=void 0}function jT(N){var E=He.pthreads[N];E.worker.postMessage({cmd:"cancel"})}function $g(N){var E=He.pthreads[N];if(E){a()[N>>2]=0;var G=E.worker;He.returnWorkerToPool(G)}}function Bg(N){B6(N)}function XT(N){if(N instanceof Sd||N=="unwind")return pt;g(1,N)}var He={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){I?He.initWorker():He.initMainThread()},initMainThread:function(){for(var N=8,E=0;E<N;++E)He.allocateUnusedWorker()},initWorker:function(){gt=!1},pthreads:{},setExitStatus:function(N){pt=N},terminateAllThreads:function(){for(var N in He.pthreads){var E=He.pthreads[N];E&&E.worker&&He.returnWorkerToPool(E.worker)}for(var G=0;G<He.unusedWorkers.length;++G){var X=He.unusedWorkers[G];X.terminate()}He.unusedWorkers=[]},returnWorkerToPool:function(N){He.runWithoutMainThreadQueuedCalls(function(){delete He.pthreads[N.pthread.threadInfoStruct],He.unusedWorkers.push(N),He.runningWorkers.splice(He.runningWorkers.indexOf(N),1),yC(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){a()[I0>>2]=0;try{N()}finally{a()[I0>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in He.tlsInitFunctions)He.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,E){N.onmessage=G=>{var X=G.data,ge=X.cmd;if(N.pthread&&(He.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),X.targetThread&&X.targetThread!=Qg()){var Ce=He.pthreads[X.targetThread];Ce?Ce.worker.postMessage(X,X.transferList):H('Internal error! Worker sent a message "'+ge+'" to target pthread '+X.targetThread+", but that thread no longer exists!"),He.currentProxiedOperationCallerThread=void 0;return}ge==="processQueuedMainThreadWork"?g0():ge==="spawnThread"?zg(X):ge==="cleanupThread"?$g(X.thread):ge==="killThread"?qT(X.thread):ge==="cancelThread"?jT(X.thread):ge==="loaded"?(N.loaded=!0,E&&E(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):ge==="print"?J("Thread "+X.threadId+": "+X.text):ge==="printErr"?H("Thread "+X.threadId+": "+X.text):ge==="alert"?alert("Thread "+X.threadId+": "+X.text):X.target==="setimmediate"?N.postMessage(X):ge==="onAbort"?l.onAbort&&l.onAbort(X.arg):H("worker sent an unknown command "+ge),He.currentProxiedOperationCallerThread=void 0},N.onerror=G=>{var X="worker sent an error!";throw H(X+" "+G.filename+":"+G.lineno+": "+G.message),G},T&&(N.on("message",function(G){N.onmessage({data:G})}),N.on("error",function(G){N.onerror(G)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||r,wasmMemory:Be,wasmModule:Et})},allocateUnusedWorker:function(){var N=w("tfjs-backend-wasm-threaded-simd.worker.js");He.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return He.unusedWorkers.length==0&&(He.allocateUnusedWorker(),He.loadWasmModuleToWorker(He.unusedWorkers[0])),He.unusedWorkers.pop()}};function YT(){var N=Qg(),E=a()[N+44>>2],G=a()[N+48>>2],X=E-G;T0(E,X),Jg(E)}l.establishStackSpace=YT;function Og(N){if(I)return Pl(1,0,N);try{Bg(N)}catch(E){XT(E)}}var Nl=[];function Qp(N){var E=Nl[N];return E||(N>=Nl.length&&(Nl.length=N+1),Nl[N]=E=Jn.get(N)),E}function ZT(N,E){return Qp(N)(E)}l.invokeEntryPoint=ZT;function l0(){var N=new Error;if(!N.stack){try{throw new Error}catch(E){N=E}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function QT(N,E,G){He.tlsInitFunctions.push(N)}function p0(N,E){Jn.set(N,E),Nl[N]=E}var Dl;T?Dl=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:I?Dl=()=>performance.now()-l.__performance_now_clock_drift:Dl=()=>performance.now();var JT=!0;function eI(N){return a()[h0()>>2]=N,N}function tI(N,E){var G;if(N===0)G=Date.now();else if((N===1||N===4)&&JT)G=Dl();else return eI(28),-1;return a()[E>>2]=G/1e3|0,a()[E+4>>2]=G%1e3*1e3*1e3|0,0}function rI(N,E){return tI(N,E)}function nI(N){b0(N,!x,1,!b),He.threadInit()}function oI(N){I?postMessage({cmd:"cleanupThread",thread:N}):$g(N)}function zg(N){var E=He.getNewWorker();if(!E)return 6;He.runningWorkers.push(E);var G=He.pthreads[N.pthread_ptr]={worker:E,threadInfoStruct:N.pthread_ptr};E.pthread=G;var X={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return E.runPthread=()=>{X.time=performance.now(),E.postMessage(X,N.transferList)},E.loaded&&(E.runPthread(),delete E.runPthread),0}function sI(N,E,G,X){if(typeof SharedArrayBuffer>"u")return H("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ge=[],Ce=0;if(I&&(ge.length===0||Ce))return y0(687865856,N,E,G,X);if(Ce)return Ce;var Ne={startRoutine:G,pthread_ptr:N,arg:X,transferList:ge};return I?(Ne.cmd="spawnThread",postMessage(Ne,ge),0):zg(Ne)}function aI(){return 2097152}function iI(N,E){if(N==E)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var G=He.pthreads[N],X=G&&G.worker;if(!X)return;X.postMessage({cmd:"processThreadQueue"})}return 1}function uI(){Xp("")}function lI(){T||x||se("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Gg(){return 2147483648}function pI(N,E,G){n().copyWithin(N,E,E+G)}function mI(){return T?zq().cpus().length:navigator.hardwareConcurrency}function Pl(N,E){var G=arguments.length-2,X=arguments;return Zp(function(){for(var ge=G,Ce=om(ge*8),Ne=Ce>>3,Ue=0;Ue<G;Ue++){var lr=X[2+Ue];u()[Ne+Ue]=lr}return x0(N,ge,Ce,E)})}var xd=[];function cI(N,E,G){xd.length=E;for(var X=G>>3,ge=0;ge<E;ge++)xd[ge]=u()[X+ge];var Ce=N<0,Ne=Ce?HT[-N-1]:RI[N];return Ne.apply(null,xd)}function dI(N){try{return Be.grow(N-Cr.byteLength+65535>>>16),ta(Be.buffer),1}catch{}}function fI(N){var E=n().length;if(N=N>>>0,N<=E)return!1;var G=Gg();if(N>G)return!1;for(var X=1;X<=4;X*=2){var ge=E*(1+.2/X);ge=Math.min(ge,N+100663296);var Ce=Math.min(G,Vp(Math.max(N,ge),65536)),Ne=dI(Ce);if(Ne)return!0}return!1}var at={inEventHandler:0,removeAllEventListeners:function(){for(var N=at.eventHandlers.length-1;N>=0;--N)at._removeHandler(N);at.eventHandlers=[],at.deferredCalls=[]},registerRemoveEventListeners:function(){at.removeEventListenersRegistered||(zT.push(at.removeAllEventListeners),at.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,E,G){function X(Ne,Ue){if(Ne.length!=Ue.length)return!1;for(var lr in Ne)if(Ne[lr]!=Ue[lr])return!1;return!0}for(var ge in at.deferredCalls){var Ce=at.deferredCalls[ge];if(Ce.targetFunction==N&&X(Ce.argsList,G))return}at.deferredCalls.push({targetFunction:N,precedence:E,argsList:G}),at.deferredCalls.sort(function(Ne,Ue){return Ne.precedence<Ue.precedence})},removeDeferredCalls:function(N){for(var E=0;E<at.deferredCalls.length;++E)at.deferredCalls[E].targetFunction==N&&(at.deferredCalls.splice(E,1),--E)},canPerformEventHandlerRequests:function(){return at.inEventHandler&&at.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!at.canPerformEventHandlerRequests())for(var N=0;N<at.deferredCalls.length;++N){var E=at.deferredCalls[N];at.deferredCalls.splice(N,1),--N,E.targetFunction.apply(null,E.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,E){for(var G=0;G<at.eventHandlers.length;++G)at.eventHandlers[G].target==N&&(!E||E==at.eventHandlers[G].eventTypeString)&&at._removeHandler(G--)},_removeHandler:function(N){var E=at.eventHandlers[N];E.target.removeEventListener(E.eventTypeString,E.eventListenerFunc,E.useCapture),at.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var E=function(ge){++at.inEventHandler,at.currentEventHandler=N,at.runDeferredCalls(),N.handlerFunc(ge),at.runDeferredCalls(),--at.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=E,N.target.addEventListener(N.eventTypeString,E,N.useCapture),at.eventHandlers.push(N),at.registerRemoveEventListeners();else for(var G=0;G<at.eventHandlers.length;++G)at.eventHandlers[G].target==N.target&&at.eventHandlers[G].eventTypeString==N.eventTypeString&&at._removeHandler(G--)},queueEventHandlerOnThread_iiii:function(N,E,G,X,ge){Zp(function(){var Ce=om(12);a()[Ce>>2]=G,a()[Ce+4>>2]=X,a()[Ce+8>>2]=ge,bC(N,637534208,E,X,Ce)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return He.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function hI(N){var E=ea(N)+1,G=gC(E);return Bn(N,G,E),G}function gI(N,E,G,X){Zp(function(){var ge=om(12),Ce=0;E&&(Ce=hI(E)),a()[ge>>2]=Ce,a()[ge+4>>2]=G,a()[ge+8>>2]=X,bC(N,657457152,0,Ce,ge)})}function bI(N,E,G,X){E=E?qr(E):"",gI(N,E,G,X)}function yI(N){return N>2?qr(N):N}var xI=[0,typeof document<"u"?document:0,typeof window<"u"?window:0];function TI(N){N=yI(N);var E=xI[N]||(typeof document<"u"?document.querySelector(N):void 0);return E}function Td(N){return TI(N)}function Ug(N,E,G){var X=Td(N);if(!X)return-4;if(X.canvasSharedPtr&&(a()[X.canvasSharedPtr>>2]=E,a()[X.canvasSharedPtr+4>>2]=G),X.offscreenCanvas||!X.controlTransferredOffscreen){X.offscreenCanvas&&(X=X.offscreenCanvas);var ge=!1;if(X.GLctxObject&&X.GLctxObject.GLctx){var Ce=X.GLctxObject.GLctx.getParameter(2978);ge=Ce[0]===0&&Ce[1]===0&&Ce[2]===X.width&&Ce[3]===X.height}X.width=E,X.height=G,ge&&X.GLctxObject.GLctx.viewport(0,0,E,G)}else if(X.canvasSharedPtr){var Ne=a()[X.canvasSharedPtr+8>>2];return bI(Ne,N,E,G),1}else return-4;return 0}function Wg(N,E,G){return I?Pl(2,1,N,E,G):Ug(N,E,G)}function II(N,E,G){var X=Td(N);return X?Ug(N,E,G):Wg(N,E,G)}function CI(){throw"unwind"}function kI(N){var E=N.getExtension("ANGLE_instanced_arrays");if(E)return N.vertexAttribDivisor=function(G,X){E.vertexAttribDivisorANGLE(G,X)},N.drawArraysInstanced=function(G,X,ge,Ce){E.drawArraysInstancedANGLE(G,X,ge,Ce)},N.drawElementsInstanced=function(G,X,ge,Ce,Ne){E.drawElementsInstancedANGLE(G,X,ge,Ce,Ne)},1}function SI(N){var E=N.getExtension("OES_vertex_array_object");if(E)return N.createVertexArray=function(){return E.createVertexArrayOES()},N.deleteVertexArray=function(G){E.deleteVertexArrayOES(G)},N.bindVertexArray=function(G){E.bindVertexArrayOES(G)},N.isVertexArray=function(G){return E.isVertexArrayOES(G)},1}function vI(N){var E=N.getExtension("WEBGL_draw_buffers");if(E)return N.drawBuffers=function(G,X){E.drawBuffersWEBGL(G,X)},1}function AI(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var ur={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(E){ur.lastError||(ur.lastError=E)},getNewId:function(N){for(var E=ur.counter++,G=N.length;G<E;G++)N[G]=null;return E},getSource:function(N,E,G,X){for(var ge="",Ce=0;Ce<E;++Ce){var Ne=X?a()[X+Ce*4>>2]:-1;ge+=qr(a()[G+Ce*4>>2],Ne<0?void 0:Ne)}return ge},createContext:function(N,E){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(ge,Ce){var Ne=N.getContextSafariWebGL2Fixed(ge,Ce);return ge=="webgl"==Ne instanceof WebGLRenderingContext?Ne:null});var G=N.getContext("webgl",E);if(!G)return 0;var X=ur.registerContext(G,E);return X},registerContext:function(N,E){var G=gC(8);a()[G+4>>2]=Qg();var X={handle:G,attributes:E,version:E.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=X),ur.contexts[G]=X,(typeof E.enableExtensionsByDefault>"u"||E.enableExtensionsByDefault)&&ur.initExtensions(X),G},makeContextCurrent:function(N){return ur.currentContext=ur.contexts[N],l.ctx=qg=ur.currentContext&&ur.currentContext.GLctx,!(N&&!qg)},getContext:function(N){return ur.contexts[N]},deleteContext:function(N){ur.currentContext===ur.contexts[N]&&(ur.currentContext=null),typeof at=="object"&&at.removeAllHandlersOnTarget(ur.contexts[N].GLctx.canvas),ur.contexts[N]&&ur.contexts[N].GLctx.canvas&&(ur.contexts[N].GLctx.canvas.GLctxObject=void 0),f0(ur.contexts[N].handle),ur.contexts[N]=null},initExtensions:function(N){if(N||(N=ur.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var E=N.GLctx;kI(E),SI(E),vI(E),E.disjointTimerQueryExt=E.getExtension("EXT_disjoint_timer_query"),AI(E);var G=E.getSupportedExtensions()||[];G.forEach(function(X){!X.includes("lose_context")&&!X.includes("debug")&&E.getExtension(X)})}}},wI=["default","low-power","high-performance"];function NI(N,E){var G=E>>2,X=a()[G+6],ge={alpha:!!a()[G+0],depth:!!a()[G+1],stencil:!!a()[G+2],antialias:!!a()[G+3],premultipliedAlpha:!!a()[G+4],preserveDrawingBuffer:!!a()[G+5],powerPreference:wI[X],failIfMajorPerformanceCaveat:!!a()[G+7],majorVersion:a()[G+8],minorVersion:a()[G+9],enableExtensionsByDefault:a()[G+10],explicitSwapControl:a()[G+11],proxyContextToMainThread:a()[G+12],renderViaOffscreenBackBuffer:a()[G+13]},Ce=Td(N);if(!Ce||ge.explicitSwapControl)return 0;var Ne=ur.createContext(Ce,ge);return Ne}function DI(N,E){return NI(N,E)}var Jp={mappings:{},buffers:[null,[],[]],printChar:function(N,E){var G=Jp.buffers[N];E===0||E===10?((N===1?J:H)(on(G,0)),G.length=0):G.push(E)},varargs:void 0,get:function(){Jp.varargs+=4;var N=a()[Jp.varargs-4>>2];return N},getStr:function(N){var E=qr(N);return E},get64:function(N,E){return N}};function Kg(N){return I?Pl(3,1,N):0}function Vg(N,E,G,X,ge){if(I)return Pl(4,1,N,E,G,X,ge)}function Hg(N,E,G,X){if(I)return Pl(5,1,N,E,G,X);for(var ge=0,Ce=0;Ce<G;Ce++){var Ne=a()[E>>2],Ue=a()[E+4>>2];E+=8;for(var lr=0;lr<Ue;lr++)Jp.printChar(N,n()[Ne+lr]);ge+=Ue}return a()[X>>2]=ge,0}function PI(N){we(N)}He.init();var qg,RI=[null,Og,Wg,Kg,Vg,Hg],m0=!1,jg={__clock_gettime:rI,__emscripten_init_main_thread_js:nI,__emscripten_thread_cleanup:oI,__pthread_create_js:sI,_emscripten_default_pthread_stack_size:aI,_emscripten_notify_thread_queue:iI,abort:uI,emscripten_check_blocking_allowed:lI,emscripten_get_heap_max:Gg,emscripten_get_now:Dl,emscripten_memcpy_big:pI,emscripten_num_logical_cores:mI,emscripten_receive_on_main_thread_js:cI,emscripten_resize_heap:fI,emscripten_set_canvas_element_size:II,emscripten_unwind_to_js_event_loop:CI,emscripten_webgl_create_context:DI,exit:Bg,fd_close:Kg,fd_seek:Vg,fd_write:Hg,memory:Be||l.wasmMemory,setTempRet0:PI},c0=VT(),FI=l.___wasm_call_ctors=function(){return(FI=l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},MI=l._init=function(){return(MI=l._init=l.asm.init).apply(null,arguments)},EI=l._init_with_threads_count=function(){return(EI=l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},_I=l._get_threads_count=function(){return(_I=l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},LI=l._register_tensor=function(){return(LI=l._register_tensor=l.asm.register_tensor).apply(null,arguments)},$I=l._dispose_data=function(){return($I=l._dispose_data=l.asm.dispose_data).apply(null,arguments)},BI=l._dispose=function(){return(BI=l._dispose=l.asm.dispose).apply(null,arguments)},OI=l._Abs=function(){return(OI=l._Abs=l.asm.Abs).apply(null,arguments)},zI=l._Add=function(){return(zI=l._Add=l.asm.Add).apply(null,arguments)},GI=l._AddN=function(){return(GI=l._AddN=l.asm.AddN).apply(null,arguments)},UI=l._All=function(){return(UI=l._All=l.asm.All).apply(null,arguments)},WI=l._Any=function(){return(WI=l._Any=l.asm.Any).apply(null,arguments)},KI=l._ArgMax=function(){return(KI=l._ArgMax=l.asm.ArgMax).apply(null,arguments)},VI=l._AvgPool=function(){return(VI=l._AvgPool=l.asm.AvgPool).apply(null,arguments)},HI=l._BatchMatMul=function(){return(HI=l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},qI=l._Ceil=function(){return(qI=l._Ceil=l.asm.Ceil).apply(null,arguments)},jI=l._ClipByValue=function(){return(jI=l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},XI=l._Conv2D=function(){return(XI=l._Conv2D=l.asm.Conv2D).apply(null,arguments)},YI=l._Conv2DBackpropInput=function(){return(YI=l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},ZI=l._Cos=function(){return(ZI=l._Cos=l.asm.Cos).apply(null,arguments)},QI=l._Cosh=function(){return(QI=l._Cosh=l.asm.Cosh).apply(null,arguments)},JI=l._CropAndResize=function(){return(JI=l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},eC=l._Cumprod=function(){return(eC=l._Cumprod=l.asm.Cumprod).apply(null,arguments)},tC=l._Cumsum=function(){return(tC=l._Cumsum=l.asm.Cumsum).apply(null,arguments)},rC=l._DepthToSpace=function(){return(rC=l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},nC=l._DepthwiseConv2dNative=function(){return(nC=l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},oC=l._Elu=function(){return(oC=l._Elu=l.asm.Elu).apply(null,arguments)},sC=l._Equal=function(){return(sC=l._Equal=l.asm.Equal).apply(null,arguments)},aC=l._Exp=function(){return(aC=l._Exp=l.asm.Exp).apply(null,arguments)},iC=l._FlipLeftRight=function(){return(iC=l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},uC=l._Floor=function(){return(uC=l._Floor=l.asm.Floor).apply(null,arguments)},lC=l._FloorDiv=function(){return(lC=l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},pC=l._FusedBatchNorm=function(){return(pC=l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},mC=l._FusedConv2D=function(){return(mC=l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},Xg=l._FusedDepthwiseConv2D=function(){return(Xg=l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},Yg=l._Gather=function(){return(Yg=l._Gather=l.asm.Gather).apply(null,arguments)},Id=l._GatherNd=function(){return(Id=l._GatherNd=l.asm.GatherNd).apply(null,arguments)},cC=l._Greater=function(){return(cC=l._Greater=l.asm.Greater).apply(null,arguments)},dC=l._GreaterEqual=function(){return(dC=l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},em=l._LeakyRelu=function(){return(em=l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},Cd=l._Less=function(){return(Cd=l._Less=l.asm.Less).apply(null,arguments)},kd=l._LessEqual=function(){return(kd=l._LessEqual=l.asm.LessEqual).apply(null,arguments)},d0=l._Log=function(){return(d0=l._Log=l.asm.Log).apply(null,arguments)},tm=l._LogicalAnd=function(){return(tm=l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},rm=l._LogicalNot=function(){return(rm=l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},fC=l._LogicalOr=function(){return(fC=l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},K=l._LogicalXor=function(){return(K=l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},Q=l._Max=function(){return(Q=l._Max=l.asm.Max).apply(null,arguments)},ye=l._MaxPool=function(){return(ye=l._MaxPool=l.asm.MaxPool).apply(null,arguments)},_e=l._Maximum=function(){return(_e=l._Maximum=l.asm.Maximum).apply(null,arguments)},xt=l._Mean=function(){return(xt=l._Mean=l.asm.Mean).apply(null,arguments)},kt=l._Min=function(){return(kt=l._Min=l.asm.Min).apply(null,arguments)},it=l._Minimum=function(){return(it=l._Minimum=l.asm.Minimum).apply(null,arguments)},ot=l._MirrorPad=function(){return(ot=l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},kr=l._Multiply=function(){return(kr=l._Multiply=l.asm.Multiply).apply(null,arguments)},na=l._Neg=function(){return(na=l._Neg=l.asm.Neg).apply(null,arguments)},oa=l._NonMaxSuppressionV3=function(){return(oa=l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},nm=l._NonMaxSuppressionV4=function(){return(nm=l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},Rl=l._NonMaxSuppressionV5=function(){return(Rl=l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},hC=l._NotEqual=function(){return(hC=l._NotEqual=l.asm.NotEqual).apply(null,arguments)},un=l._OneHot=function(){return(un=l._OneHot=l.asm.OneHot).apply(null,arguments)},Au=l._PadV2=function(){return(Au=l._PadV2=l.asm.PadV2).apply(null,arguments)},Zg=l._Pow=function(){return(Zg=l._Pow=l.asm.Pow).apply(null,arguments)},Yq=l._Prelu=function(){return(Yq=l._Prelu=l.asm.Prelu).apply(null,arguments)},Zq=l._Prod=function(){return(Zq=l._Prod=l.asm.Prod).apply(null,arguments)},Qq=l._RealDiv=function(){return(Qq=l._RealDiv=l.asm.RealDiv).apply(null,arguments)},Jq=l._Relu=function(){return(Jq=l._Relu=l.asm.Relu).apply(null,arguments)},e6=l._Relu6=function(){return(e6=l._Relu6=l.asm.Relu6).apply(null,arguments)},t6=l._ResizeBilinear=function(){return(t6=l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},r6=l._ResizeNearestNeighbor=function(){return(r6=l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},n6=l._Reverse=function(){return(n6=l._Reverse=l.asm.Reverse).apply(null,arguments)},o6=l._RotateWithOffset=function(){return(o6=l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},s6=l._Round=function(){return(s6=l._Round=l.asm.Round).apply(null,arguments)},a6=l._Rsqrt=function(){return(a6=l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},i6=l._ScatterNd=function(){return(i6=l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},u6=l._SelectV2=function(){return(u6=l._SelectV2=l.asm.SelectV2).apply(null,arguments)},l6=l._Sigmoid=function(){return(l6=l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},p6=l._Sin=function(){return(p6=l._Sin=l.asm.Sin).apply(null,arguments)},m6=l._Softmax=function(){return(m6=l._Softmax=l.asm.Softmax).apply(null,arguments)},c6=l._SparseFillEmptyRows=function(){return(c6=l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},d6=l._SparseReshape=function(){return(d6=l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},f6=l._SparseSegmentReduction=function(){return(f6=l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},h6=l._Sqrt=function(){return(h6=l._Sqrt=l.asm.Sqrt).apply(null,arguments)},g6=l._Square=function(){return(g6=l._Square=l.asm.Square).apply(null,arguments)},b6=l._SquaredDifference=function(){return(b6=l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},y6=l._Step=function(){return(y6=l._Step=l.asm.Step).apply(null,arguments)},x6=l._StridedSlice=function(){return(x6=l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},T6=l._Sub=function(){return(T6=l._Sub=l.asm.Sub).apply(null,arguments)},I6=l._Sum=function(){return(I6=l._Sum=l.asm.Sum).apply(null,arguments)},C6=l._Tan=function(){return(C6=l._Tan=l.asm.Tan).apply(null,arguments)},k6=l._Tanh=function(){return(k6=l._Tanh=l.asm.Tanh).apply(null,arguments)},S6=l._Tile=function(){return(S6=l._Tile=l.asm.Tile).apply(null,arguments)},v6=l._TopK=function(){return(v6=l._TopK=l.asm.TopK).apply(null,arguments)},A6=l._Transform=function(){return(A6=l._Transform=l.asm.Transform).apply(null,arguments)},w6=l._Transpose=function(){return(w6=l._Transpose=l.asm.Transpose).apply(null,arguments)},N6=l.__FusedMatMul=function(){return(N6=l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},gC=l._malloc=function(){return(gC=l._malloc=l.asm.malloc).apply(null,arguments)},f0=l._free=function(){return(f0=l._free=l.asm.free).apply(null,arguments)},D6=l._emscripten_tls_init=function(){return(D6=l._emscripten_tls_init=l.asm.emscripten_tls_init).apply(null,arguments)},h0=l.___errno_location=function(){return(h0=l.___errno_location=l.asm.__errno_location).apply(null,arguments)},Qg=l._pthread_self=function(){return(Qg=l._pthread_self=l.asm.pthread_self).apply(null,arguments)},g0=l._emscripten_main_thread_process_queued_calls=function(){return(g0=l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},P6=l.__emscripten_thread_crashed=function(){return(P6=l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},b0=l.__emscripten_thread_init=function(){return(b0=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)},R6=l._emscripten_current_thread_process_queued_calls=function(){return(R6=l._emscripten_current_thread_process_queued_calls=l.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},F6=l._emscripten_main_browser_thread_id=function(){return(F6=l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)},M6=l._emscripten_sync_run_in_main_thread_2=function(){return(M6=l._emscripten_sync_run_in_main_thread_2=l.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},y0=l._emscripten_sync_run_in_main_thread_4=function(){return(y0=l._emscripten_sync_run_in_main_thread_4=l.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},x0=l._emscripten_run_in_main_runtime_thread_js=function(){return(x0=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},bC=l._emscripten_dispatch_to_thread_=function(){return(bC=l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},yC=l.__emscripten_thread_free_data=function(){return(yC=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},E6=l.__emscripten_thread_exit=function(){return(E6=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},_6=l._memalign=function(){return(_6=l._memalign=l.asm.memalign).apply(null,arguments)},T0=l._emscripten_stack_set_limits=function(){return(T0=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},xC=l.stackSave=function(){return(xC=l.stackSave=l.asm.stackSave).apply(null,arguments)},Jg=l.stackRestore=function(){return(Jg=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},om=l.stackAlloc=function(){return(om=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)},L6=l.dynCall_iijjiiii=function(){return(L6=l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},$6=l.dynCall_jiji=function(){return($6=l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)},I0=l.__emscripten_allow_main_runtime_queued_calls=21664;l.cwrap=Ht,l.keepRuntimeAlive=wl,l.PThread=He,l.PThread=He,l.wasmMemory=Be,l.ExitStatus=Sd;var eb;function Sd(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}ra=function N(){eb||TC(),eb||(ra=N)};function TC(N){if(N=N||f,vu>0)return;if(I){p(l),gd(),postMessage({cmd:"loaded"});return}if(sn(),vu>0)return;function E(){eb||(eb=!0,l.calledRun=!0,!Pt&&(gd(),p(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),WT()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),E()},1)):E()}l.run=TC;function B6(N,E){if(pt=N,!E&&I)throw Og(N),"unwind";wl()||UT(),O6(N)}function O6(N){pt=N,wl()||(He.terminateAllThreads(),l.onExit&&l.onExit(N),Pt=!0),g(N,new Sd(N))}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();TC();var tb;c&&(tb={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!c.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!c.unhandledRejection.indexOf(N)>-1})});var rb;if(typeof WasmBackendModule<"u")rb=WasmBackendModule;else if(typeof e<"u")rb=e;else throw new Error("Could not find wasm module in post.js");if(tb){var z6=rb._dispose;rb._dispose=function(){z6(),tb.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),tb.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return e.ready}})();typeof _T=="object"&&typeof HD=="object"?HD.exports=VD:typeof define=="function"&&define.amd?define([],function(){return VD}):typeof _T=="object"&&(_T.WasmBackendModuleThreadedSimd=VD)});var Wq=wr(($T,ZD)=>{var YD=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};var t=typeof e<"u"?e:{},n,o;t.ready=new Promise(function(K,Q){n=K,o=Q});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var a=Object.assign({},t),i=[],u="./this.program",l=(K,Q)=>{throw Q},p=typeof window=="object",m=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d="";function f(K){return t.locateFile?t.locateFile(K,d):d+K}var h,g,b,x;function T(K){if(K instanceof Cd)return;F("exiting due to exception: "+K)}var I,k,w;c?(m?d=Ig().dirname(d)+"/":d=__dirname+"/",w=()=>{k||(I=_h(),k=Ig())},h=function(Q,ye){return w(),Q=k.normalize(Q),I.readFileSync(Q,ye?void 0:"utf8")},b=K=>{var Q=h(K,!0);return Q.buffer||(Q=new Uint8Array(Q)),Q},g=(K,Q,ye)=>{w(),K=k.normalize(K),I.readFile(K,function(_e,xt){_e?ye(_e):Q(xt.buffer)})},process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof Cd))throw K}),process.on("unhandledRejection",function(K){throw K}),l=(K,Q)=>{if(hd())throw process.exitCode=K,Q;T(Q),process.exit(K)},t.inspect=function(){return"[Emscripten Module object]"}):(p||m)&&(m?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):d="",h=K=>{var Q=new XMLHttpRequest;return Q.open("GET",K,!1),Q.send(null),Q.responseText},m&&(b=K=>{var Q=new XMLHttpRequest;return Q.open("GET",K,!1),Q.responseType="arraybuffer",Q.send(null),new Uint8Array(Q.response)}),g=(K,Q,ye)=>{var _e=new XMLHttpRequest;_e.open("GET",K,!0),_e.responseType="arraybuffer",_e.onload=()=>{if(_e.status==200||_e.status==0&&_e.response){Q(_e.response);return}ye()},_e.onerror=ye,_e.send(null)},x=K=>document.title=K);var R=t.print||console.log.bind(console),F=t.printErr||console.warn.bind(console);Object.assign(t,a),a=null,t.arguments&&(i=t.arguments),t.thisProgram&&(u=t.thisProgram),t.quit&&(l=t.quit);var M=4;function L(K){L.shown||(L.shown={}),L.shown[K]||(L.shown[K]=1,F(K))}function z(K,Q){if(typeof WebAssembly.Function=="function"){for(var ye={i:"i32",j:"i64",f:"f32",d:"f64"},_e={parameters:[],results:Q[0]=="v"?[]:[ye[Q[0]]]},xt=1;xt<Q.length;++xt)_e.parameters.push(ye[Q[xt]]);return new WebAssembly.Function(_e,K)}var kt=[1,0,1,96],it=Q.slice(0,1),ot=Q.slice(1),kr={i:127,j:126,f:125,d:124};kt.push(ot.length);for(var xt=0;xt<ot.length;++xt)kt.push(kr[ot[xt]]);it=="v"?kt.push(0):kt=kt.concat([1,kr[it]]),kt[1]=kt.length-2;var na=new Uint8Array([0,97,115,109,1,0,0,0].concat(kt,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),oa=new WebAssembly.Module(na),nm=new WebAssembly.Instance(oa,{e:{f:K}}),Rl=nm.exports.f;return Rl}var W=[],V;function j(){if(W.length)return W.pop();try{ss.grow(1)}catch(K){throw K instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":K}return ss.length-1}function q(K,Q){for(var ye=K;ye<K+Q;ye++){var _e=yd(ye);_e&&V.set(_e,ye)}}var Y=0,J=K=>{Y=K},H;t.wasmBinary&&(H=t.wasmBinary);var te=t.noExitRuntime||!0;typeof WebAssembly!="object"&&Al("no native wasm support detected");var se,ae=!1,pe;function ie(K,Q){K||Al(Q)}function be(K){var Q=t["_"+K];return Q}function fe(K,Q,ye,_e,xt){var kt={string:function(un){var Au=0;if(un!=null&&un!==0){var Zg=(un.length<<2)+1;Au=Id(Zg),gt(un,Au,Zg)}return Au},array:function(un){var Au=Id(un.length);return Pt(un,Au),Au}};function it(un){return Q==="string"?Ze(un):Q==="boolean"?Boolean(un):un}var ot=be(K),kr=[],na=0;if(_e)for(var oa=0;oa<_e.length;oa++){var nm=kt[ye[oa]];nm?(na===0&&(na=Xg()),kr[oa]=nm(_e[oa])):kr[oa]=_e[oa]}var Rl=ot.apply(null,kr);function hC(un){return na!==0&&Yg(na),it(un)}return Rl=hC(Rl),Rl}function Ie(K,Q,ye,_e){ye=ye||[];var xt=ye.every(function(it){return it==="number"}),kt=Q!=="string";return kt&&xt&&!_e?be(K):function(){return fe(K,Q,ye,arguments,_e)}}var we=1,Ee=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Le(K,Q,ye){for(var _e=Q+ye,xt=Q;K[xt]&&!(xt>=_e);)++xt;if(xt-Q>16&&K.subarray&&Ee)return Ee.decode(K.subarray(Q,xt));for(var kt="";Q<xt;){var it=K[Q++];if(!(it&128)){kt+=String.fromCharCode(it);continue}var ot=K[Q++]&63;if((it&224)==192){kt+=String.fromCharCode((it&31)<<6|ot);continue}var kr=K[Q++]&63;if((it&240)==224?it=(it&15)<<12|ot<<6|kr:it=(it&7)<<18|ot<<12|kr<<6|K[Q++]&63,it<65536)kt+=String.fromCharCode(it);else{var na=it-65536;kt+=String.fromCharCode(55296|na>>10,56320|na&1023)}}return kt}function Ze(K,Q){return K?Le(Ht,K,Q):""}function ee(K,Q,ye,_e){if(!(_e>0))return 0;for(var xt=ye,kt=ye+_e-1,it=0;it<K.length;++it){var ot=K.charCodeAt(it);if(ot>=55296&&ot<=57343){var kr=K.charCodeAt(++it);ot=65536+((ot&1023)<<10)|kr&1023}if(ot<=127){if(ye>=kt)break;Q[ye++]=ot}else if(ot<=2047){if(ye+1>=kt)break;Q[ye++]=192|ot>>6,Q[ye++]=128|ot&63}else if(ot<=65535){if(ye+2>=kt)break;Q[ye++]=224|ot>>12,Q[ye++]=128|ot>>6&63,Q[ye++]=128|ot&63}else{if(ye+3>=kt)break;Q[ye++]=240|ot>>18,Q[ye++]=128|ot>>12&63,Q[ye++]=128|ot>>6&63,Q[ye++]=128|ot&63}}return Q[ye]=0,ye-xt}function gt(K,Q,ye){return ee(K,Ht,Q,ye)}function Be(K){for(var Q=0,ye=0;ye<K.length;++ye){var _e=K.charCodeAt(ye);_e>=55296&&_e<=57343&&(_e=65536+((_e&1023)<<10)|K.charCodeAt(++ye)&1023),_e<=127?++Q:_e<=2047?Q+=2:_e<=65535?Q+=3:Q+=4}return Q}var Et=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function Pt(K,Q){rn.set(K,Q)}function pt(K,Q,ye){for(var _e=0;_e<K.length;++_e)rn[Q++>>0]=K.charCodeAt(_e);ye||(rn[Q>>0]=0)}function Jt(K,Q){return K%Q>0&&(K+=Q-K%Q),K}var Ot,rn,Ht,Js,$r,nn,on,qr,os;function Bn(K){Ot=K,t.HEAP8=rn=new Int8Array(K),t.HEAP16=Js=new Int16Array(K),t.HEAP32=nn=new Int32Array(K),t.HEAPU8=Ht=new Uint8Array(K),t.HEAPU16=$r=new Uint16Array(K),t.HEAPU32=on=new Uint32Array(K),t.HEAPF32=qr=new Float32Array(K),t.HEAPF64=os=new Float64Array(K)}var ea=t.INITIAL_MEMORY||16777216,ss,ku=[],vl=[],Vp=[],Cr=!1,Hp=!1,qp=0;function hd(){return te||qp>0}function vg(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)Ng(t.preRun.shift());bd(ku)}function Ag(){Cr=!0,bd(vl)}function r0(){Hp=!0}function wg(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)Dg(t.postRun.shift());bd(Vp)}function Ng(K){ku.unshift(K)}function ta(K){vl.unshift(K)}function Dg(K){Vp.unshift(K)}var Jn=0,jp=null,Su=null;function zT(K){Jn++,t.monitorRunDependencies&&t.monitorRunDependencies(Jn)}function Pg(K){if(Jn--,t.monitorRunDependencies&&t.monitorRunDependencies(Jn),Jn==0&&(jp!==null&&(clearInterval(jp),jp=null),Su)){var Q=Su;Su=null,Q()}}t.preloadedImages={},t.preloadedAudios={};function Al(K){t.onAbort&&t.onAbort(K),K="Aborted("+K+")",F(K),ae=!0,pe=1,K+=". Build with -s ASSERTIONS=1 for more info.";var Q=new WebAssembly.RuntimeError(K);throw o(Q),Q}var GT="data:application/octet-stream;base64,";function Rg(K){return K.startsWith(GT)}function wl(K){return K.startsWith("file://")}var sn;sn="tfjs-backend-wasm.wasm",Rg(sn)||(sn=f(sn));function gd(K){try{if(K==sn&&H)return new Uint8Array(H);if(b)return b(K);throw"both async and sync fetching of the wasm failed"}catch(Q){Al(Q)}}function UT(){if(!H&&(p||m)){if(typeof fetch=="function"&&!wl(sn))return fetch(sn,{credentials:"same-origin"}).then(function(K){if(!K.ok)throw"failed to load wasm binary file at '"+sn+"'";return K.arrayBuffer()}).catch(function(){return gd(sn)});if(g)return new Promise(function(K,Q){g(sn,function(ye){K(new Uint8Array(ye))},Q)})}return Promise.resolve().then(function(){return gd(sn)})}function WT(){var K={env:Zp,wasi_snapshot_preview1:Zp};function Q(it,ot){var kr=it.exports;t.asm=kr,se=t.asm.memory,Bn(se.buffer),ss=t.asm.__indirect_function_table,ta(t.asm.__wasm_call_ctors),Pg("wasm-instantiate")}zT("wasm-instantiate");function ye(it){Q(it.instance)}function _e(it){return UT().then(function(ot){return WebAssembly.instantiate(ot,K)}).then(function(ot){return ot}).then(it,function(ot){F("failed to asynchronously prepare wasm: "+ot),Al(ot)})}function xt(){return!H&&typeof WebAssembly.instantiateStreaming=="function"&&!Rg(sn)&&!wl(sn)&&typeof fetch=="function"?fetch(sn,{credentials:"same-origin"}).then(function(it){var ot=WebAssembly.instantiateStreaming(it,K);return ot.then(ye,function(kr){return F("wasm streaming compile failed: "+kr),F("falling back to ArrayBuffer instantiation"),_e(ye)})}):_e(ye)}if(t.instantiateWasm)try{var kt=t.instantiateWasm(K,Q);return kt}catch(it){return F("Module.instantiateWasm callback failed with error: "+it),!1}return xt().catch(o),{}}var n0,o0;function bd(K){for(;K.length>0;){var Q=K.shift();if(typeof Q=="function"){Q(t);continue}var ye=Q.func;typeof ye=="number"?Q.arg===void 0?yd(ye)():yd(ye)(Q.arg):ye(Q.arg===void 0?null:Q.arg)}}function vu(K){return K}function Fg(K){var Q=/\b_Z[\w\d_]+/g;return K.replace(Q,function(ye){var _e=ye;return ye===_e?ye:_e+" ["+ye+"]"})}var ra=[];function yd(K){var Q=ra[K];return Q||(K>=ra.length&&(ra.length=K+1),ra[K]=Q=ss.get(K)),Q}function s0(){var K=new Error;if(!K.stack){try{throw new Error}catch(Q){K=Q}if(!K.stack)return"(no stack trace available)"}return K.stack.toString()}function Xp(K,Q){ss.set(K,Q),ra[K]=Q}function KT(){Al("")}function Mg(K,Q,ye){Ht.copyWithin(K,Q,Q+ye)}function Eg(){return 2147483648}function an(K){try{return se.grow(K-Ot.byteLength+65535>>>16),Bn(se.buffer),1}catch{}}function _g(K){var Q=Ht.length;K=K>>>0;var ye=Eg();if(K>ye)return!1;for(var _e=1;_e<=4;_e*=2){var xt=Q*(1+.2/_e);xt=Math.min(xt,K+100663296);var kt=Math.min(ye,Jt(Math.max(K,xt),65536)),it=an(kt);if(it)return!0}return!1}var Yp={mappings:{},buffers:[null,[],[]],printChar:function(K,Q){var ye=Yp.buffers[K];Q===0||Q===10?((K===1?R:F)(Le(ye,0)),ye.length=0):ye.push(Q)},varargs:void 0,get:function(){Yp.varargs+=4;var K=nn[Yp.varargs-4>>2];return K},getStr:function(K){var Q=Ze(K);return Q},get64:function(K,Q){return K}};function VT(K){return 0}function a0(K,Q,ye,_e,xt){}function i0(K,Q,ye,_e){for(var xt=0,kt=0;kt<ye;kt++){var it=nn[Q>>2],ot=nn[Q+4>>2];Q+=8;for(var kr=0;kr<ot;kr++)Yp.printChar(K,Ht[it+kr]);xt+=ot}return nn[_e>>2]=xt,0}function HT(K){J(K)}var Lg=!1,Zp={abort:KT,emscripten_memcpy_big:Mg,emscripten_resize_heap:_g,fd_close:VT,fd_seek:a0,fd_write:i0,setTempRet0:HT},Xq=WT(),u0=t.___wasm_call_ctors=function(){return(u0=t.___wasm_call_ctors=t.asm.__wasm_call_ctors).apply(null,arguments)},qT=t._init=function(){return(qT=t._init=t.asm.init).apply(null,arguments)},jT=t._init_with_threads_count=function(){return(jT=t._init_with_threads_count=t.asm.init_with_threads_count).apply(null,arguments)},$g=t._get_threads_count=function(){return($g=t._get_threads_count=t.asm.get_threads_count).apply(null,arguments)},Bg=t._register_tensor=function(){return(Bg=t._register_tensor=t.asm.register_tensor).apply(null,arguments)},XT=t._dispose_data=function(){return(XT=t._dispose_data=t.asm.dispose_data).apply(null,arguments)},He=t._dispose=function(){return(He=t._dispose=t.asm.dispose).apply(null,arguments)},YT=t._Abs=function(){return(YT=t._Abs=t.asm.Abs).apply(null,arguments)},Og=t._Add=function(){return(Og=t._Add=t.asm.Add).apply(null,arguments)},Nl=t._AddN=function(){return(Nl=t._AddN=t.asm.AddN).apply(null,arguments)},Qp=t._All=function(){return(Qp=t._All=t.asm.All).apply(null,arguments)},ZT=t._Any=function(){return(ZT=t._Any=t.asm.Any).apply(null,arguments)},l0=t._ArgMax=function(){return(l0=t._ArgMax=t.asm.ArgMax).apply(null,arguments)},QT=t._AvgPool=function(){return(QT=t._AvgPool=t.asm.AvgPool).apply(null,arguments)},p0=t._BatchMatMul=function(){return(p0=t._BatchMatMul=t.asm.BatchMatMul).apply(null,arguments)},Dl=t._Ceil=function(){return(Dl=t._Ceil=t.asm.Ceil).apply(null,arguments)},JT=t._ClipByValue=function(){return(JT=t._ClipByValue=t.asm.ClipByValue).apply(null,arguments)},eI=t._Conv2D=function(){return(eI=t._Conv2D=t.asm.Conv2D).apply(null,arguments)},tI=t._Conv2DBackpropInput=function(){return(tI=t._Conv2DBackpropInput=t.asm.Conv2DBackpropInput).apply(null,arguments)},rI=t._Cos=function(){return(rI=t._Cos=t.asm.Cos).apply(null,arguments)},nI=t._Cosh=function(){return(nI=t._Cosh=t.asm.Cosh).apply(null,arguments)},oI=t._CropAndResize=function(){return(oI=t._CropAndResize=t.asm.CropAndResize).apply(null,arguments)},zg=t._Cumprod=function(){return(zg=t._Cumprod=t.asm.Cumprod).apply(null,arguments)},sI=t._Cumsum=function(){return(sI=t._Cumsum=t.asm.Cumsum).apply(null,arguments)},aI=t._DepthToSpace=function(){return(aI=t._DepthToSpace=t.asm.DepthToSpace).apply(null,arguments)},iI=t._DepthwiseConv2dNative=function(){return(iI=t._DepthwiseConv2dNative=t.asm.DepthwiseConv2dNative).apply(null,arguments)},uI=t._Elu=function(){return(uI=t._Elu=t.asm.Elu).apply(null,arguments)},lI=t._Equal=function(){return(lI=t._Equal=t.asm.Equal).apply(null,arguments)},Gg=t._Exp=function(){return(Gg=t._Exp=t.asm.Exp).apply(null,arguments)},pI=t._FlipLeftRight=function(){return(pI=t._FlipLeftRight=t.asm.FlipLeftRight).apply(null,arguments)},mI=t._Floor=function(){return(mI=t._Floor=t.asm.Floor).apply(null,arguments)},Pl=t._FloorDiv=function(){return(Pl=t._FloorDiv=t.asm.FloorDiv).apply(null,arguments)},xd=t._FusedBatchNorm=function(){return(xd=t._FusedBatchNorm=t.asm.FusedBatchNorm).apply(null,arguments)},cI=t._FusedConv2D=function(){return(cI=t._FusedConv2D=t.asm.FusedConv2D).apply(null,arguments)},dI=t._FusedDepthwiseConv2D=function(){return(dI=t._FusedDepthwiseConv2D=t.asm.FusedDepthwiseConv2D).apply(null,arguments)},fI=t._Gather=function(){return(fI=t._Gather=t.asm.Gather).apply(null,arguments)},at=t._GatherNd=function(){return(at=t._GatherNd=t.asm.GatherNd).apply(null,arguments)},hI=t._Greater=function(){return(hI=t._Greater=t.asm.Greater).apply(null,arguments)},gI=t._GreaterEqual=function(){return(gI=t._GreaterEqual=t.asm.GreaterEqual).apply(null,arguments)},bI=t._LeakyRelu=function(){return(bI=t._LeakyRelu=t.asm.LeakyRelu).apply(null,arguments)},yI=t._Less=function(){return(yI=t._Less=t.asm.Less).apply(null,arguments)},xI=t._LessEqual=function(){return(xI=t._LessEqual=t.asm.LessEqual).apply(null,arguments)},TI=t._Log=function(){return(TI=t._Log=t.asm.Log).apply(null,arguments)},Td=t._LogicalAnd=function(){return(Td=t._LogicalAnd=t.asm.LogicalAnd).apply(null,arguments)},Ug=t._LogicalNot=function(){return(Ug=t._LogicalNot=t.asm.LogicalNot).apply(null,arguments)},Wg=t._LogicalOr=function(){return(Wg=t._LogicalOr=t.asm.LogicalOr).apply(null,arguments)},II=t._LogicalXor=function(){return(II=t._LogicalXor=t.asm.LogicalXor).apply(null,arguments)},CI=t._Max=function(){return(CI=t._Max=t.asm.Max).apply(null,arguments)},kI=t._MaxPool=function(){return(kI=t._MaxPool=t.asm.MaxPool).apply(null,arguments)},SI=t._Maximum=function(){return(SI=t._Maximum=t.asm.Maximum).apply(null,arguments)},vI=t._Mean=function(){return(vI=t._Mean=t.asm.Mean).apply(null,arguments)},AI=t._Min=function(){return(AI=t._Min=t.asm.Min).apply(null,arguments)},ur=t._Minimum=function(){return(ur=t._Minimum=t.asm.Minimum).apply(null,arguments)},wI=t._MirrorPad=function(){return(wI=t._MirrorPad=t.asm.MirrorPad).apply(null,arguments)},NI=t._Multiply=function(){return(NI=t._Multiply=t.asm.Multiply).apply(null,arguments)},DI=t._Neg=function(){return(DI=t._Neg=t.asm.Neg).apply(null,arguments)},Jp=t._NonMaxSuppressionV3=function(){return(Jp=t._NonMaxSuppressionV3=t.asm.NonMaxSuppressionV3).apply(null,arguments)},Kg=t._NonMaxSuppressionV4=function(){return(Kg=t._NonMaxSuppressionV4=t.asm.NonMaxSuppressionV4).apply(null,arguments)},Vg=t._NonMaxSuppressionV5=function(){return(Vg=t._NonMaxSuppressionV5=t.asm.NonMaxSuppressionV5).apply(null,arguments)},Hg=t._NotEqual=function(){return(Hg=t._NotEqual=t.asm.NotEqual).apply(null,arguments)},PI=t._OneHot=function(){return(PI=t._OneHot=t.asm.OneHot).apply(null,arguments)},qg=t._PadV2=function(){return(qg=t._PadV2=t.asm.PadV2).apply(null,arguments)},RI=t._Pow=function(){return(RI=t._Pow=t.asm.Pow).apply(null,arguments)},m0=t._Prelu=function(){return(m0=t._Prelu=t.asm.Prelu).apply(null,arguments)},jg=t._Prod=function(){return(jg=t._Prod=t.asm.Prod).apply(null,arguments)},c0=t._RealDiv=function(){return(c0=t._RealDiv=t.asm.RealDiv).apply(null,arguments)},FI=t._Relu=function(){return(FI=t._Relu=t.asm.Relu).apply(null,arguments)},MI=t._Relu6=function(){return(MI=t._Relu6=t.asm.Relu6).apply(null,arguments)},EI=t._ResizeBilinear=function(){return(EI=t._ResizeBilinear=t.asm.ResizeBilinear).apply(null,arguments)},_I=t._ResizeNearestNeighbor=function(){return(_I=t._ResizeNearestNeighbor=t.asm.ResizeNearestNeighbor).apply(null,arguments)},LI=t._Reverse=function(){return(LI=t._Reverse=t.asm.Reverse).apply(null,arguments)},$I=t._RotateWithOffset=function(){return($I=t._RotateWithOffset=t.asm.RotateWithOffset).apply(null,arguments)},BI=t._Round=function(){return(BI=t._Round=t.asm.Round).apply(null,arguments)},OI=t._Rsqrt=function(){return(OI=t._Rsqrt=t.asm.Rsqrt).apply(null,arguments)},zI=t._ScatterNd=function(){return(zI=t._ScatterNd=t.asm.ScatterNd).apply(null,arguments)},GI=t._SelectV2=function(){return(GI=t._SelectV2=t.asm.SelectV2).apply(null,arguments)},UI=t._Sigmoid=function(){return(UI=t._Sigmoid=t.asm.Sigmoid).apply(null,arguments)},WI=t._Sin=function(){return(WI=t._Sin=t.asm.Sin).apply(null,arguments)},KI=t._Softmax=function(){return(KI=t._Softmax=t.asm.Softmax).apply(null,arguments)},VI=t._SparseFillEmptyRows=function(){return(VI=t._SparseFillEmptyRows=t.asm.SparseFillEmptyRows).apply(null,arguments)},HI=t._SparseReshape=function(){return(HI=t._SparseReshape=t.asm.SparseReshape).apply(null,arguments)},qI=t._SparseSegmentReduction=function(){return(qI=t._SparseSegmentReduction=t.asm.SparseSegmentReduction).apply(null,arguments)},jI=t._Sqrt=function(){return(jI=t._Sqrt=t.asm.Sqrt).apply(null,arguments)},XI=t._Square=function(){return(XI=t._Square=t.asm.Square).apply(null,arguments)},YI=t._SquaredDifference=function(){return(YI=t._SquaredDifference=t.asm.SquaredDifference).apply(null,arguments)},ZI=t._Step=function(){return(ZI=t._Step=t.asm.Step).apply(null,arguments)},QI=t._StridedSlice=function(){return(QI=t._StridedSlice=t.asm.StridedSlice).apply(null,arguments)},JI=t._Sub=function(){return(JI=t._Sub=t.asm.Sub).apply(null,arguments)},eC=t._Sum=function(){return(eC=t._Sum=t.asm.Sum).apply(null,arguments)},tC=t._Tan=function(){return(tC=t._Tan=t.asm.Tan).apply(null,arguments)},rC=t._Tanh=function(){return(rC=t._Tanh=t.asm.Tanh).apply(null,arguments)},nC=t._Tile=function(){return(nC=t._Tile=t.asm.Tile).apply(null,arguments)},oC=t._TopK=function(){return(oC=t._TopK=t.asm.TopK).apply(null,arguments)},sC=t._Transform=function(){return(sC=t._Transform=t.asm.Transform).apply(null,arguments)},aC=t._Transpose=function(){return(aC=t._Transpose=t.asm.Transpose).apply(null,arguments)},iC=t.__FusedMatMul=function(){return(iC=t.__FusedMatMul=t.asm._FusedMatMul).apply(null,arguments)},uC=t._malloc=function(){return(uC=t._malloc=t.asm.malloc).apply(null,arguments)},lC=t._free=function(){return(lC=t._free=t.asm.free).apply(null,arguments)},pC=t.___errno_location=function(){return(pC=t.___errno_location=t.asm.__errno_location).apply(null,arguments)},mC=t._emscripten_main_thread_process_queued_calls=function(){return(mC=t._emscripten_main_thread_process_queued_calls=t.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Xg=t.stackSave=function(){return(Xg=t.stackSave=t.asm.stackSave).apply(null,arguments)},Yg=t.stackRestore=function(){return(Yg=t.stackRestore=t.asm.stackRestore).apply(null,arguments)},Id=t.stackAlloc=function(){return(Id=t.stackAlloc=t.asm.stackAlloc).apply(null,arguments)},cC=t.dynCall_iijjiiii=function(){return(cC=t.dynCall_iijjiiii=t.asm.dynCall_iijjiiii).apply(null,arguments)},dC=t.dynCall_jiji=function(){return(dC=t.dynCall_jiji=t.asm.dynCall_jiji).apply(null,arguments)};t.cwrap=Ie;var em;function Cd(K){this.name="ExitStatus",this.message="Program terminated with exit("+K+")",this.status=K}Su=function K(){em||kd(),em||(Su=K)};function kd(K){if(K=K||i,Jn>0||(vg(),Jn>0))return;function Q(){em||(em=!0,t.calledRun=!0,!ae&&(Ag(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),wg()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),Q()},1)):Q()}t.run=kd;function d0(K){pe=K,hd()||(t.onExit&&t.onExit(K),ae=!0),l(K,new Cd(K))}if(t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();kd();var tm;s&&(tm={uncaughtException:process.listeners("uncaughtException").filter(function(K){return!s.uncaughtException.indexOf(K)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(K){return!s.unhandledRejection.indexOf(K)>-1})});var rm;if(typeof e<"u")rm=e;else if(typeof WasmBackendModuleThreadedSimd<"u")rm=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(tm){var fC=rm._dispose;rm._dispose=function(){fC(),tm.uncaughtException.forEach(function(K){process.removeListener("uncaughtException",K)}),tm.unhandledRejection.forEach(function(K){process.removeListener("unhandledRejection",K)})}}return e.ready}})();typeof $T=="object"&&typeof ZD=="object"?ZD.exports=YD:typeof define=="function"&&define.amd?define([],function(){return YD}):typeof $T=="object"&&($T.WasmBackendModule=YD)});var X6=1e-7,Y6=1e-4,ri=class{constructor(e,t){this.backend=e;this.dataMover=t;this.data=new WeakMap;this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},as=class{refCount(e){return eo("refCount")}incRef(e){return eo("incRef")}timerAvailable(){return!0}time(e){return eo("time")}read(e){return eo("read")}readSync(e){return eo("readSync")}readToGPU(e,t){return eo("readToGPU")}numDataIds(){return eo("numDataIds")}disposeData(e,t){return eo("disposeData")}write(e,t,n){return eo("write")}move(e,t,n,o,s){return eo("move")}memory(){return eo("memory")}floatPrecision(){return eo("floatPrecision")}epsilon(){return this.floatPrecision()===32?X6:Y6}dispose(){return eo("dispose")}};function eo(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function S0(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,sb(r,e,t)}function Z6(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,sb(r,t,n),sb(e,t,n)}function am(r,e,t){return Math.max(r,Math.min(e,t))}function Q6(r){return r%2===0?r:r+1}function sb(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function J6(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function ej(r,e){let t=Math.random();return e*t+(1-t)*r}function tj(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function P(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function zt(r,e,t=""){P(zn(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function to(r){P(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ia(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||Sr(r)&&!t)for(let n=0;n<r.length;++n)ia(r[n],e,t);else e.push(r);return e}function rt(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function rj(r){return r.length===0}function zn(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Ni(r){return r%1===0}function nj(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function oj(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function sj(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return S0(e),e}function El(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function aj(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=e(s);if(t!=null&&s>=t){o();return}setTimeout(a,i)};a()})}function ij(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function hr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),P(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),P(r.every(n=>Ni(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function IC(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:hr(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function CC(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function kC(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function SC(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function vC(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function uj(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function Sr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function ab(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function AC(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function ua(r){return typeof r=="string"||r instanceof String}function v0(r){return typeof r=="boolean"}function A0(r){return typeof r=="number"}function im(r){return Array.isArray(r)?im(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":A0(r)?"float32":ua(r)?"string":v0(r)?"bool":"float32"}function ni(r){return!!(r&&r.constructor&&r.call&&r.apply)}function um(r,e){for(let t=e;t<r;++t)if(r%t===0)return t;return r}function oi(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function w0(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=t[r+a]}else{let s=e[0],a=e.slice(1),i=a.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=w0(r+u*i,a,t,n)}return o}function Ml(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return w0(0,r,e,t)}function Ad(r,e){let t=lm(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function lm(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function lj(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return Ml(r,new Float32Array(t));if(e==="int32")return Ml(r,new Int32Array(t));if(e==="bool")return Ml(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function wd(r){r.forEach(e=>{P(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function pj(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function mj(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function Nd(r){return r&&r.then&&typeof r.then=="function"}var N0="tfjsflags",ib=class{constructor(e){this.global=e;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=dj;this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Nd(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);N0 in e&&e[N0].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=hj(o,s)})}};function dj(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(fj(e,n[0],n[1]),n.join("="))),e}function fj(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function hj(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function B(){return wC}var wC=null;function D0(r){wC=r}var NC;function DC(){if(NC==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");NC=r}return NC}function gj(){let r=DC();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function Dd(r,e){let t=gj();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var is="Abs",Di="Acos",Pi="Acosh",An="Add",ro="AddN",Ri="All",Fi="Any",no="ArgMax",si="ArgMin",Mi="Asin",Ei="Asinh",_i="Atan",Li="Atanh",$i="Atan2",oo="AvgPool",pm="AvgPoolGrad",wu="AvgPool3D",mm="AvgPool3DGrad",so="BatchMatMul",us="BatchToSpaceND",cm="Bincount",P0="BroadcastTo",dm="BroadcastArgs",Gn="Cast",ao="Ceil",Un="ClipByValue",Nu="Complex",Du="ComplexAbs",ls="Concat",io="Conv2D",fm="Conv2DBackpropFilter",uo="Conv2DBackpropInput",Pu="Conv3D",hm="Conv3DBackpropFilterV2",gm="Conv3DBackpropInputV2",lo="Cos",po="Cosh",la="Cumprod",mo="Cumsum",pa="CropAndResize",bm="DenseBincount",ma="DepthToSpace",co="DepthwiseConv2dNative",ym="DepthwiseConv2dNativeBackpropFilter",xm="DepthwiseConv2dNativeBackpropInput",Tm="Diag",Ru="Dilation2D",Pd="Dilation2DBackpropInput",Rd="Dilation2DBackpropFilter",fo="RealDiv",Fu="Einsum",ho="Elu",Im="EluGrad",Bi="Erf",ca="Equal",go="Exp",ps="ExpandDims",da="Expm1",Cm="FFT",ai="Fill",fa="FlipLeftRight",bo="Floor",yo="FloorDiv",xo="FusedBatchNorm",ms="GatherV2",ha="GatherNd",ga="Greater",To="GreaterEqual",Wn="Identity",km="IFFT",Mu="Imag",Oi="IsFinite",zi="IsInf",Gi="IsNan",Io="LeakyRelu",ba="Less",ya="LessEqual",Sm="LinSpace",Co="Log",Ui="Log1p",xa="LogicalAnd",Ta="LogicalNot",Wi="LogicalOr",R0="LogicalXor",F0="LogSoftmax",Jhe="LowerBound",Eu="LRN",vm="LRNGrad",ko="Max",So="Maximum",vo="MaxPool",Am="MaxPoolGrad",_u="MaxPool3D",wm="MaxPool3DGrad",Nm="MaxPoolWithArgmax",Ao="Mean",wo="Min",No="Minimum",Do="MirrorPad",Ki="Mod",Dm="Multinomial",Po="Multiply",cs="Neg",Ia="NotEqual",Ca="NonMaxSuppressionV3",Vi="NonMaxSuppressionV4",ka="NonMaxSuppressionV5",ds="OnesLike",Sa="OneHot",fs="Pack",Ro="PadV2",ege="Pool",Fo="Pow",Mo="Prelu",Eo="Prod",ii="Range",Lu="Real",Hi="Reciprocal",_o="Relu",hs="Reshape",Lo="ResizeNearestNeighbor",Pm="ResizeNearestNeighborGrad",$o="ResizeBilinear",Rm="ResizeBilinearGrad",Bo="Relu6",va="Reverse",Aa="Round",Oo="Rsqrt",wa="ScatterNd",Fm="SearchSorted",gs="Select",qi="Selu",bs="Slice",zo="Sin",Na="Sinh",ji="Sign",Go="Sigmoid",Xi="Softplus",Uo="Sqrt",Wo="Sum",ys="SpaceToBatchND",xs="SplitV",Ko="Softmax",$u="SparseFillEmptyRows",Yi="SparseReshape",Bu="SparseSegmentMean",Ou="SparseSegmentSum",zu="SparseToDense",Vo="SquaredDifference",ui="Square",Da="StridedSlice",li="StringNGrams",Gu="StringSplit",Uu="StringToHashBucketFast",Ho="Sub",Pa="Tan",qo="Tanh",wn="Tile",Ra="TopK",Fa="Transform",Nn="Transpose",Mm="Unique",Ts="Unpack",Wu="UnsortedSegmentSum",tge="UpperBound",Is="ZerosLike",Cs="Step",_l="FromPixels",Ma="RotateWithOffset",ks="_FusedMatMul",Ss="FusedConv2D",vs="FusedDepthwiseConv2D";function pi(...r){B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(...r)}function bj(...r){B().getBool("IS_TEST")||B().getBool("PROD")||console.log(...r)}var Em=Dd("kernelRegistry",()=>new Map),Fd=Dd("gradRegistry",()=>new Map);function Md(r,e){let t=RC(r,e);return Em.get(t)}function PC(r){return Fd.get(r)}function ub(r){let e=Em.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function Zi(r){let{kernelName:e,backendName:t}=r,n=RC(e,t);Em.has(n)&&pi(`The kernel '${e}' for backend '${t}' is already registered`),Em.set(n,r)}function E0(r){let{kernelName:e}=r;Fd.has(e)&&B().getBool("DEBUG")&&pi(`Overriding the gradient for '${e}'`),Fd.set(e,r)}function age(r,e){let t=RC(r,e);if(!Em.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);Em.delete(t)}function ige(r){if(!Fd.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);Fd.delete(r)}function uge(r,e){ub(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});Zi(o)})}function RC(r,e){return`${e}_${r}`}var y={};je(y,{arraysEqual:()=>zn,assert:()=>P,assertNonNegativeIntegerDimensions:()=>wd,assertNonNull:()=>to,assertShapesMatch:()=>zt,bytesFromStringArray:()=>AC,bytesPerElement:()=>ab,checkConversionForErrors:()=>SC,clamp:()=>am,computeStrides:()=>oi,createScalarValue:()=>Sj,createShuffledIndices:()=>sj,decodeString:()=>Bm,distSquared:()=>tj,encodeString:()=>Vu,fetch:()=>Aj,fingerPrint64:()=>kj,flatten:()=>ia,getArrayFromDType:()=>kC,getTypedArrayFromDType:()=>CC,hasEncodingLoss:()=>uj,hexToLong:()=>Ed,indexToLoc:()=>mj,inferDtype:()=>im,inferFromImplicitShape:()=>ij,isBoolean:()=>v0,isFunction:()=>ni,isInt:()=>Ni,isNumber:()=>A0,isPromise:()=>Nd,isScalarShape:()=>rj,isString:()=>ua,isTypedArray:()=>Sr,isValidDtype:()=>vC,locToIndex:()=>pj,makeOnesTypedArray:()=>Ad,makeZerosNestedTypedArray:()=>lj,makeZerosTypedArray:()=>lm,nearestDivisor:()=>um,nearestLargerEven:()=>Q6,now:()=>zl,parseAxisParam:()=>hr,randUniform:()=>ej,repeatedTry:()=>aj,rightPad:()=>El,shuffle:()=>S0,shuffleCombo:()=>Z6,sizeFromShape:()=>rt,sizeToSquarishShape:()=>oj,squeezeShape:()=>IC,sum:()=>J6,swap:()=>sb,tanh:()=>nj,toNestedArray:()=>Ml,toTypedArray:()=>$m});var _C=Fl(V0());var Ol=_C.default||_C;function Ed(r){return Ol.fromString(r,!0,16)}var q0=Ed("c3a5c85c97cb3127"),Bl=Ed("b492b66fbe98f273"),ln=Ed("9ae16a3b2f90404f");function EC(r){return r.xor(r.shru(47))}function j0(r,e,t){let n=r.slice(e,e+t);return Ol.fromBytes(Array.from(n),!0,!0)}function qt(r,e){return j0(r,e,8)}function H0(r,e){return j0(r,e,4)}function Mr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Ku(r,e,t=Ed("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function xj(r,e,t,n,o,s){o=o.add(r),s=Mr(s.add(o).add(n),21);let a=o;return o=o.add(e),o=o.add(t),s=s.add(Mr(o,44)),[o.add(n),s.add(a)]}function pb(r,e,t,n){return xj(qt(r,e),qt(r,e+8),qt(r,e+16),qt(r,e+24),t,n)}function Tj(r,e=r.length){if(e>=8){let t=ln.add(e*2),n=qt(r,0).add(ln),o=qt(r,e-8),s=Mr(o,37).mul(t).add(n),a=Mr(n,25).add(o).mul(t);return Ku(s,a,t)}if(e>=4){let t=ln.add(e*2),n=H0(r,0);return Ku(n.shl(3).add(e),H0(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),a=e+(o<<2);return EC(ln.mul(s).xor(q0.mul(a))).mul(ln)}return ln}function Ij(r,e=r.length){let t=ln.add(e*2),n=qt(r,0).mul(Bl),o=qt(r,8),s=qt(r,e-8).mul(t),a=qt(r,e-16).mul(ln);return Ku(Mr(n.add(o),43).add(Mr(s,30)).add(a),n.add(Mr(o.add(ln),18)).add(s),t)}function Cj(r,e=r.length){let t=ln.add(e*2),n=qt(r,0).mul(ln),o=qt(r,8),s=qt(r,e-8).mul(t),a=qt(r,e-16).mul(ln),i=Mr(n.add(o),43).add(Mr(s,30)).add(a),u=Ku(i,n.add(Mr(o.add(ln),18)).add(s),t),l=qt(r,16).mul(t),p=qt(r,24),m=i.add(qt(r,e-32)).mul(t),c=u.add(qt(r,e-24)).mul(t);return Ku(Mr(l.add(p),43).add(Mr(m,30)).add(c),l.add(Mr(p.add(n),18)).add(m),t)}function kj(r,e=r.length){let t=Ol.fromNumber(81,!0);if(e<=32)return e<=16?Tj(r,e):Ij(r,e);if(e<=64)return Cj(r,e);let n=t,o=t.mul(Bl).add(113),s=EC(o.mul(ln).add(113)).mul(ln),a=[Ol.UZERO,Ol.UZERO],i=[Ol.UZERO,Ol.UZERO];n=n.mul(ln).add(qt(r,0));let u=0,l=(e-1>>6)*64,p=l+(e-1&63)-63;do n=Mr(n.add(o).add(a[0]).add(qt(r,u+8)),37).mul(Bl),o=Mr(o.add(a[1]).add(qt(r,u+48)),42).mul(Bl),n=n.xor(i[1]),o=o.add(a[0]).add(qt(r,u+40)),s=Mr(s.add(i[0]),33).mul(Bl),a=pb(r,u,a[1].mul(Bl),n.add(i[0])),i=pb(r,u+32,s.add(i[1]),o.add(qt(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let m=Bl.add(s.and(255).shl(1));return u=p,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Mr(n.add(o).add(a[0]).add(qt(r,u+8)),37).mul(m),o=Mr(o.add(a[1]).add(qt(r,u+48)),42).mul(m),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(qt(r,u+40))),s=Mr(s.add(i[0]),33).mul(m),a=pb(r,u,a[1].mul(m),n.add(i[0])),i=pb(r,u+32,s.add(i[1]),o.add(qt(r,u+16))),[s,n]=[n,s],Ku(Ku(a[0],i[0],m).add(EC(o).mul(q0)).add(s),Ku(a[1],i[1],m).add(n),m)}function Sj(r,e){return e==="string"?Vu(r):$m([r],e)}function vj(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function $m(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=ia(r)),B().getBool("DEBUG")&&SC(r,e),vj(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function zl(){return B().platform.now()}function Aj(r,e){return B().platform.fetch(r,e)}function Vu(r,e="utf-8"){return e=e||"utf-8",B().platform.encode(r,e)}function Bm(r,e="utf-8"){return e=e||"utf-8",B().platform.decode(r,e)}var LC=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new X0)}profileKernel(e,t,n){let o,s=()=>{o=n()},a,i=zl();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();a=Promise.resolve({kernelMs:zl()-i})}if(B().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let p=o[l];p.data().then(m=>{wj(m,p.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],s,u[2])})})}};function wj(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var X0=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?El(`${o}ms`,9):o.error,u=El(e,25),l=t.rank,p=t.size,m=El(t.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||t.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${i}	%c${l}D ${m}	%c${p}	%c${c}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function Y0(r,e,t){let n={},o={};for(let u=0;u<e.length;u++)n[e[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],p=l.inputs;for(let m in p){let c=p[m],d=!1;for(let f=0;f<e.length;f++)if(n[c.id]){l.outputs.forEach(h=>n[h.id]=!0),d=!0,o[l.id]=!0;break}if(d)break}}let s={};s[t.id]=!0;let a={};for(let u=r.length-1;u>=0;u--){let l=r[u],p=l.inputs;for(let m=0;m<l.outputs.length;m++)if(s[l.outputs[m].id]){for(let c in p)s[p[c].id]=!0,a[l.id]=!0;break}}let i=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&a[l.id]){let p={};for(let c in l.inputs){let d=l.inputs[c];n[d.id]&&(p[c]=d)}let m=Object.assign({},l);m.inputs=p,m.outputs=l.outputs,i.push(m)}}return i}function Z0(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?a.push(l):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let u in s.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);let l=t(()=>i[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let p=s.inputs[u];if(!zn(l.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${p.shape}'`);if(r[p.id]==null)r[p.id]=l;else{let m=r[p.id];r[p.id]=n(m,l),m.dispose()}}}}var Q0=20,_d=3,$C=7;function J0(r,e,t,n){let o=oi(e),s=Nj(r,e,t,o),a=e.length,i=mb(r,e,t,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(l=>"    "+l).join(`
`)),u.join(`
`)}function Nj(r,e,t,n){let o=rt(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,u=t==="complex64"?$d(r):r;if(i>1)for(let l=0;l<o/s;l++){let p=l*s;for(let m=0;m<s;m++)a[m]=Math.max(a[m],Ld(u[p+m],0,t).length)}return a}function Ld(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed($C))} + ${parseFloat(r[1].toFixed($C))}j`:ua(r)?n=`'${r}'`:t==="bool"?n=e1(r):n=parseFloat(r.toFixed($C)).toString(),El(n,e)}function e1(r){return r===0?"false":"true"}function mb(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){let h=$d(r);return[Ld(h[0],0,t)]}return t==="bool"?[e1(r[0])]:[r[0].toString()]}if(u===1){if(i>Q0){let g=_d*a,b=Array.from(r.slice(0,g)),x=Array.from(r.slice((i-_d)*a,i*a));return t==="complex64"&&(b=$d(b),x=$d(x)),["["+b.map((T,I)=>Ld(T,o[I],t)).join(", ")+", ..., "+x.map((T,I)=>Ld(T,o[i-_d+I],t)).join(", ")+"]"]}let h=t==="complex64"?$d(r):Array.from(r);return["["+h.map((g,b)=>Ld(g,o[b],t)).join(", ")+"]"]}let l=e.slice(1),p=n.slice(1),m=n[0]*a,c=[];if(i>Q0){for(let h=0;h<_d;h++){let g=h*m,b=g+m;c.push(...mb(r.slice(g,b),l,t,p,o,!1))}c.push("...");for(let h=i-_d;h<i;h++){let g=h*m,b=g+m;c.push(...mb(r.slice(g,b),l,t,p,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*m,b=g+m;c.push(...mb(r.slice(g,b),l,t,p,o,h===i-1))}let d=u===2?",":"";c[0]="["+c[0]+d;for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<u;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function $d(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var yt=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=rt(e),n!=null){let o=n.length;P(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||kC(t,this.size),this.strides=oi(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return _a().makeTensor(this.values,this.shape,this.dtype)}},_a=null,Om=null,Dj=null;function t1(r){_a=r}function r1(r){Om=r}function n1(r){Dj=r}var Xe=class{constructor(e,t,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=e.slice(),this.dtype=t||"float32",this.size=rt(e),this.strides=oi(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Om.buffer(this.shape,this.dtype,e)}bufferSync(){return Om.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ml(this.shape,e,this.dtype==="complex64")}arraySync(){return Ml(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=_a().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Bm(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),_a().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=_a().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Bm(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await _a().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(_a().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Om.print(this,e)}clone(){return this.throwIfDisposed(),Om.clone(this)}toString(e=!1){let t=this.dataSync();return J0(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Om.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),_a().makeVariable(this,e,t,n)}};Object.defineProperty(Xe,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function Pj(){return Dd("Tensor",()=>Xe)}Pj();var Hu=class extends Xe{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t;this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!zn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);_a().disposeTensor(this),this.dataId=e.dataId,_a().incRef(this,null)}dispose(){_a().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Hu,Symbol.hasInstance,{value:r=>r instanceof Xe&&r.assign!=null&&r.assign instanceof Function});var Ds={};je(Ds,{assertTypesMatch:()=>BC,getTensorsInContainer:()=>Bd,isTensorInList:()=>Fj,makeTypesMatch:()=>Qe});var o1=(i=>(i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6",i))(o1||{}),s1=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(s1||{}),a1=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(a1||{}),i1=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(i1||{}),u1=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(u1||{}),Rj={float32:i1,int32:s1,bool:a1,complex64:u1};function _t(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return Rj[r][e]}function Qi(r){return _t(r,"int32")}function Qe(r,e){if(r.dtype===e.dtype)return[r,e];let t=_t(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function BC(r,e){P(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function Fj(r,e){return e.some(t=>t.id===r.id)}function Bd(r){let e=[];return l1(r,e,new Set),e}function l1(r,e,t){if(r==null)return;if(r instanceof Xe){e.push(r);return}if(!Mj(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),l1(s,e,t))}}function Mj(r){return Array.isArray(r)||typeof r=="object"}function OC(r){return r.kernelName!=null}var zC=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},db=class{constructor(e){this.ENV=e;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new zC}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(pi(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new LC(this.backendInstance),!0}setupRegisteredKernels(){ub(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ub(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof as)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,pi(`Initialization of backend ${e} failed`),pi(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return pi(`Initialization of backend ${e} failed`),pi(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return db.nextTensorId++}nextVariableId(){return db.nextVariableId++}clone(e){let t=D.runKernel(Wn,{x:e}),n={x:e},o=a=>({x:()=>{let i="float32",u={x:a},l={dtype:i};return D.runKernel(Gn,u,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Md(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u,l=OC(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(OC(e)){let{kernelName:f,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let b=Md(f,this.backendName);P(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{let x=this.backend.numDataIds();u=b.kernelFunc({inputs:h,attrs:g,backend:this.backend});let T=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,T);let I=T.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(o){let k=this.getTensorsForGradient(f,h,I);n=this.saveTensorsForBackwardMode(k)}return I}}else{let{forwardFunc:f}=e,h=g=>{!o||(n=g.map(b=>this.keep(this.clone(b))))};i=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,h));let b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,b),b}}let{inputs:p,attrs:m}=e,c=OC(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(l,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),o&&this.addTapeNode(l,p,t,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(f=>p[f]!=null?p[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=PC(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=s.map(l=>t[l]);let u=n.filter((l,p)=>a[p]);return i.concat(u)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&ua(e[0])&&(s=e.map(u=>Vu(u)));let a=o.write(s,t,n),i=new Xe(t,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let u=this.state.tensorInfo.get(a),l=AC(s);this.state.numBytes+=l-u.bytes,u.bytes=l}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(s,o)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:o,dtype:s}=e,a=new Xe(o,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new Hu(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*ab(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Hu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*ab(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=PC(e);u!=null&&(o=u.gradFunc),o!=null&&(i.gradient=l=>(l=l.map((p,m)=>{if(p==null){let c=n[m],d=lm(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return p}),o(l.length>1?l:l[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Bd(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(s instanceof Xe,()=>"The result y returned by f() must be a tensor.");let a=Y0(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??Ej(s.shape),Z0(i,a,l=>this.tidy(l),_j);let u=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let p of l.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return P(ni(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(i=>i instanceof Xe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((i,u)=>{o[u]=i});let s=(i,u)=>(n=e(...t,u),P(n.value instanceof Xe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(ni(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,u)=>{let l=n.gradFunc(i,u),p=Array.isArray(l)?l:[l];P(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(p.every(c=>c instanceof Xe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return p.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=zl(),n=await this.backend.time(e);return n.wallMs=zl()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new zC;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},cb=db;cb.nextTensorId=0,cb.nextVariableId=0;function Ej(r){let e=Ad(rt(r),"float32");return D.makeTensor(e,r,"float32")}function GC(){let r=DC();if(r._tfengine==null){let e=new ib(r);r._tfengine=new cb(e)}return D0(r._tfengine.ENV),t1(()=>r._tfengine),r._tfengine}var D=GC();function _j(r,e){let t={a:r,b:e};return D.runKernel(An,t)}var qu={};je(qu,{isBrowser:()=>WC,isMobile:()=>Bj,mockIsMobile:()=>$j});function Lj(){return typeof navigator<"u"&&navigator!=null}var UC;function $j(r){UC=r}function Bj(r){if(UC!==void 0)return UC;if(r||Lj()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function WC(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var jo=B();jo.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});jo.registerFlag("IS_BROWSER",()=>WC());jo.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");jo.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));jo.registerFlag("PROD",()=>!1);jo.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>jo.getBool("DEBUG"));jo.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);jo.registerFlag("IS_TEST",()=>!1);jo.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);jo.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);jo.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);jo.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);function Br(r,e){let t=r;if(Sr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||Sr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&B().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&m1(r,n,[]),n}function m1(r,e,t){if(t=t||[],!Array.isArray(r)&&!Sr(r)){P(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}P(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),P(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)m1(r[o],n,t.concat(o))}function p1(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function v(r,e,t,n="numeric"){if(r instanceof Xe)return p1(n,r.dtype,e,t),r;let o=im(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),p1(n,o,e,t),r==null||!Sr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}let s=Br(r,o);!Sr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?$m(r,o):ia(r,[],!0);return D.makeTensor(i,s,o)}function Ji(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>v(s,`${e}[${a}]`,t,n))}var KC="__op";function A(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+KC;let o=(...s)=>{D.startScope(t);try{let a=n(...s);return Nd(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function Oj(r,e){let t=v(r,"real","complex"),n=v(e,"imag","complex");zt(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(Nu,o)}var Dn=A({complex_:Oj});function pn(r,e,t,n){if(n==null&&(n=im(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Sr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){wd(e);let o=rt(e),s=rt(t);P(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],u=a===t.length-1?i!==rt(e.slice(a)):!0;P(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Sr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?$m(r,n):ia(r,[],!0),D.makeTensor(r,e,n)}function Nr(r,e,t){let n=Br(r,t);return pn(r,e,n,t)}var Od={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var fb=4;async function d1(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],u=Array.isArray(r)?r[a].tensor:r[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);let l={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let p=new Promise(async m=>{let c=await u.bytes(),d=c.reduce((g,b)=>g+b.length,0)+fb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let b=c[g],x=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(x,h),h+=fb,f.set(b,h),h+=b.length}m(f)});n.push(p)}else n.push(u.data());e!=null&&(l.group=e),t.push(l)}let s=await Promise.all(n);return{data:zj(s),specs:t}}function hb(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,u=s.shape,l=rt(u),p;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=Od[m.dtype],d=r.slice(o,o+l*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(i==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){p=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=Kj()),p=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(i==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);p=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*c}else if(i==="string"){let m=rt(s.shape);p=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+fb))[0];o+=fb;let f=new Uint8Array(r.slice(o,o+d));p.push(f),o+=d}}else{let m=Od[i],c=r.slice(o,o+l*m);if(i==="float32")p=new Float32Array(c);else if(i==="int32")p=new Int32Array(c);else if(i==="bool")p=new Uint8Array(c);else if(i==="complex64"){p=new Float32Array(c);let d=new Float32Array(p.length/2),f=new Float32Array(p.length/2);for(let b=0;b<d.length;b++)d[b]=p[b*2],f[b]=p[b*2+1];let h=Nr(d,u,"float32"),g=Nr(f,u,"float32");t[a]=Dn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*m}i!=="complex64"&&(t[a]=Nr(p,u,i))}return t}function zj(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var VC=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function c1(r){return VC?Buffer.byteLength(r):new Blob([r]).size}function f1(r){if(VC)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function h1(r){if(VC){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function zm(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function HC(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function gb(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}async function Gm(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await e(r.weightsManifest);t.weightSpecs=n,t.weightData=o}return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),t}function mi(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:c1(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:c1(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function Gj(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function Uj(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function Wj(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function Kj(){let r=Gj(),e=Uj(),t=Wj();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],u=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=u}return new Float32Array(o)}}var Lt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Lt.instance==null&&(Lt.instance=new Lt),Lt.instance}static registerSaveRouter(e){Lt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Lt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Lt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Lt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Lt.getInstance().loadRouters:Lt.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},g1=r=>Lt.registerSaveRouter(r),b1=r=>Lt.registerLoadRouter(r),y1=r=>Lt.getSaveHandlers(r),x1=(r,e)=>Lt.getLoadHandlers(r,e);var qC="tensorflowjs",jC=1,Gl="models_store",ju="model_info_store";function T1(){if(!B().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function XC(r){let e=r.result;e.createObjectStore(Gl,{keyPath:"modelPath"}),e.createObjectStore(ju,{keyPath:"modelPath"})}var eu=class{constructor(e){if(this.indexedDB=T1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(qC,jC);s.onupgradeneeded=()=>XC(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(Gl,"readonly"),l=i.objectStore(Gl).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=p=>(a.close(),o(l.error)),i.oncomplete=()=>a.close()}else{let i=mi(t),u=a.transaction(ju,"readwrite"),l=u.objectStore(ju),p=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),m;p.onsuccess=()=>{m=a.transaction(Gl,"readwrite");let d=m.objectStore(Gl).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=f=>{l=u.objectStore(ju);let h=l.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(d.error)),h.onerror=g=>(a.close(),o(d.error))}},p.onerror=c=>(a.close(),o(p.error)),u.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};eu.URL_SCHEME="indexeddb://";var I1=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(eu.URL_SCHEME)?Vj(r.slice(eu.URL_SCHEME.length)):null;Lt.registerSaveRouter(I1);Lt.registerLoadRouter(I1);function Vj(r){return new eu(r)}function Hj(r){return r.startsWith(eu.URL_SCHEME)?r.slice(eu.URL_SCHEME.length):r}var YC=class{constructor(){this.indexedDB=T1()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(qC,jC);n.onupgradeneeded=()=>XC(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(ju,"readonly"),i=s.objectStore(ju).getAll();i.onsuccess=()=>{let u={};for(let l of i.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},i.onerror=u=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=Hj(e),new Promise((t,n)=>{let o=this.indexedDB.open(qC,jC);o.onupgradeneeded=()=>XC(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(ju,"readwrite"),i=a.objectStore(ju),u=i.get(e),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=i.delete(e),m=()=>{l=s.transaction(Gl,"readwrite");let d=l.objectStore(Gl).delete(e);d.onsuccess=()=>t(u.result.modelArtifactsInfo),d.onerror=f=>n(u.error)};p.onsuccess=m,p.onerror=c=>(m(),s.close(),n(u.error))}},u.onerror=p=>(s.close(),n(u.error)),a.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var tu="/",Um="tensorflowjs_models",C1="info",qj="model_topology",jj="weight_specs",Xj="weight_data",Yj="model_metadata";function k1(r){return{info:[Um,r,C1].join(tu),topology:[Um,r,qj].join(tu),weightSpecs:[Um,r,jj].join(tu),weightData:[Um,r,Xj].join(tu),modelMetadata:[Um,r,Yj].join(tu)}}function S1(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function Zj(r){let e=r.split(tu);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(tu)}function Qj(r){return r.startsWith(ru.URL_SCHEME)?r.slice(ru.URL_SCHEME.length):r}var ru=class{constructor(e){if(!B().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=k1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=mi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,f1(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw S1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=h1(a),t}};ru.URL_SCHEME="localstorage://";var v1=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ru.URL_SCHEME)?Jj(r.slice(ru.URL_SCHEME.length)):null;Lt.registerSaveRouter(v1);Lt.registerLoadRouter(v1);function Jj(r){return new ru(r)}var ZC=class{constructor(){P(B().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Um+tu,n=tu+C1;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=Zj(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=Qj(e);let t=k1(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return S1(t),n}};var Wm="://",Or=class{constructor(){this.managers={}}static getInstance(){return Or.instance==null&&(Or.instance=new Or),Or.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Wm)&&(e=e.slice(0,e.indexOf(Wm))),P(e.length>0,()=>"scheme must not be an empty string.");let n=Or.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=Or.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Or.getInstance().managers)}};function bb(r){if(r.indexOf(Wm)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Or.getSchemes().join(",")}`);return{scheme:r.split(Wm)[0],path:r.split(Wm)[1]}}async function A1(r,e,t=!1){P(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Lt.getLoadHandlers(r);P(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),P(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Lt.getSaveHandlers(e);P(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=bb(r).scheme,u=bb(r).path,l=i===bb(r).scheme,p=await o.load();t&&l&&await Or.getManager(i).removeModel(u);let m=await a.save(p);return t&&!l&&await Or.getManager(i).removeModel(u),m.modelArtifactsInfo}async function w1(){let r=Or.getSchemes(),e={};for(let t of r){let n=await Or.getManager(t).listModels();for(let o in n){let s=t+Wm+o;e[s]=n[o]}}return e}async function N1(r){let e=bb(r);return Or.getManager(e.scheme).removeModel(e.path)}async function D1(r,e){return A1(r,e,!1)}async function P1(r,e){return A1(r,e,!0)}var R1=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(B().get("IS_BROWSER")){B().setPlatform("browser",new R1);try{Or.registerManager(ru.URL_SCHEME,new ZC)}catch{}try{Or.registerManager(eu.URL_SCHEME,new YC)}catch{}}var e5={importFetch:()=>F1()},QC;var E1=class{constructor(){this.util=M1(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return B().global.fetch!=null?B().global.fetch(e,t):(QC==null&&(QC=e5.importFetch()),QC(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};B().get("IS_NODE")&&!B().get("IS_BROWSER")&&B().setPlatform("node",new E1);function xe(r,e="float32",t){return e=e||"float32",wd(r),new yt(r,e,t)}function t5(r,e){let t=v(r,"x","cast");if(!vC(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(Gn,n,o)}var oe=A({cast_:t5});function r5(r){let t={x:v(r,"x","clone","string_or_numeric")};return D.runKernel(Wn,t)}var mn=A({clone_:r5});function yb(r,e=!1){console.log(r.toString(e))}GC();var n5={buffer:xe,cast:oe,clone:mn,print:yb};r1(n5);var Pn={};je(Pn,{browserFiles:()=>$1,browserHTTPRequest:()=>z1,concatenateArrayBuffers:()=>zm,copyModel:()=>D1,decodeWeights:()=>hb,encodeWeights:()=>d1,fromMemory:()=>U1,fromMemorySync:()=>nk,getLoadHandlers:()=>x1,getModelArtifactsForJSON:()=>Gm,getModelArtifactsInfoForJSON:()=>mi,getSaveHandlers:()=>y1,http:()=>Cb,isHTTPScheme:()=>Ib,listModels:()=>w1,loadWeights:()=>B1,moveModel:()=>P1,registerLoadRouter:()=>b1,registerSaveRouter:()=>g1,removeModel:()=>N1,weightsLoaderFactory:()=>tk,withSaveHandler:()=>W1,withSaveHandlerSync:()=>K1});var o5="model",s5=".json",a5=".weights.bin";function _1(r){return new Promise(e=>setTimeout(e)).then(r)}var xb=class{constructor(e){if(!B().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(xb.URL_SCHEME)&&(e=e.slice(xb.URL_SCHEME.length)),(e==null||e.length===0)&&(e=o5),this.modelJsonFileName=e+s5,this.weightDataFileName=e+a5}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=gb(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await _1(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await _1(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:mi(e)}}}},zd=xb;zd.URL_SCHEME="downloads://";var L1=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let u=Gm(s,l=>this.loadWeights(l));e(u)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[t,zm(a)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>HC(s.name)),o={};for(let s of e)s.paths.forEach(a=>{let i=HC(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},i5=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(zd.URL_SCHEME)?u5(r.slice(zd.URL_SCHEME.length)):null;Lt.registerSaveRouter(i5);function u5(r="model"){return new zd(r)}function $1(r){return new L1(r)}function JC(r,e,t,n){a(r),t=t??0,n=n??1,i(t,n);let o=0,s=u=>(u.then(l=>{let p=t+ ++o/r.length*(n-t);return e(p),l}),u);function a(u){P(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,l){P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),P(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function ek(r,e){e==null&&(e={});let t=e.fetchFunc==null?B().platform.fetch:e.fetchFunc,n=r.map(m=>t(m,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await JC(n,e.onProgress,o,s)).map(m=>m.arrayBuffer()),u=.5,l=1;return e.onProgress==null?await Promise.all(i):await JC(i,e.onProgress,u,l)}async function B1(r,e="",t,n){return tk(a=>ek(a,{requestInit:n}))(r,e,t)}function tk(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,x=Od[b]*rt(g.shape),T=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:x})};n!=null?n.forEach((I,k)=>{I===g.name&&(T(),a[k]=!0)}):T(),i.push(g.name),h+=x})}),!a.every(d=>d)){let d=n.filter((f,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let u=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),l=[];u.forEach(d=>{e[d].paths.forEach(f=>{let h=t+(t.endsWith("/")?"":"/")+f;l.push(h)})});let p=await r(l),m={},c=0;return u.forEach(d=>{let f=e[d].paths.length,h=0;for(let I=0;I<f;I++)h+=p[c+I].byteLength;let g=new ArrayBuffer(h),b=new Uint8Array(g),x=0;for(let I=0;I<f;I++){let k=new Uint8Array(p[c+I]);b.set(k,x),x+=k.byteLength}s[d].forEach(I=>{let k=g.slice(I.groupOffset,I.groupOffset+I.sizeBytes),w=hb(k,[I.manifestEntry]);for(let R in w)m[R]=w[R]}),c+=f}),m}}var l5="application/octet-stream",p5="application/json",Tb=class{constructor(e,t){this.DEFAULT_METHOD="POST";if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=B().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=gb(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:p5}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:l5}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:mi(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Gm(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=m5(t),s=this.weightPathPrefix||n,a=[];for(let p of e)a.push(...p.weights);let i=[],u=[];for(let p of e)for(let m of p.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(m)):i.push(s+m+o);this.weightUrlConverter&&i.push(...await Promise.all(u));let l=await ek(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,zm(l)]}};Tb.URL_SCHEME_REGEX=/^https?:\/\//;function m5(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function Ib(r){return r.match(Tb.URL_SCHEME_REGEX)!=null}var O1=(r,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>Ib(n)):t=Ib(r),t)return Cb(r,e)}return null};Lt.registerSaveRouter(O1);Lt.registerLoadRouter(O1);function Cb(r,e){return new Tb(r,e)}function z1(r,e){return Cb(r,e)}var kb=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},rk=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},G1=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function U1(r,e,t,n){let o=arguments;return new G1(nk(...o))}function nk(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new kb(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new kb({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new kb({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function W1(r){return new rk(r)}function K1(r){return new rk(r)}var q1={};je(q1,{confusionMatrix:()=>H1});function c5(r,e,t=!1,n=!1){let o=v(r,"a","matMul"),s=v(e,"b","matMul");[o,s]=Qe(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return D.runKernel(so,a,i)}var qe=A({matMul_:c5});function d5(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:v(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:n};return D.runKernel(Sa,s,a)}var Xu=A({oneHot_:d5});function Jxe(){B().set("PROD",!0)}function eTe(){B().set("DEBUG",!0)}function tTe(){B().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ok(r){B().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}n1(ok);function rTe(){D.disposeVariables()}function Rn(){return D}function Gd(){return D.memory()}function nTe(r){return D.profile(r)}function U(r,e){return D.tidy(r,e)}function Re(r){Bd(r).forEach(t=>t.dispose())}function Gt(r){return D.keep(r)}function oTe(r){return D.time(r)}function f5(r){return D.setBackend(r)}function sTe(){return D.ready()}function aTe(){return D.backendName}function iTe(r){D.removeBackend(r)}function uTe(r){return D.findBackend(r)}function lTe(r){return D.findBackendFactory(r)}function Yu(r,e,t=1){return D.registerBackend(r,e,t)}function V1(){return D.backend}function pTe(r,e){B().setPlatform(r,e)}function h5(r){let t={input:v(r,"input","imag")};return D.runKernel(Mu,t)}var Zu=A({imag_:h5});function g5(r){let t={x:v(r,"x","neg")};return D.runKernel(cs,t)}var et=A({neg_:g5});function b5(r){let t={input:v(r,"input","real")};return D.runKernel(Lu,t)}var nu=A({real_:b5});function y5(r,e,t){let n=v(r,"x","transpose");if(e==null&&(e=n.shape.map((a,i)=>i).reverse()),P(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(a=>{P(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${e}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:e};return n.dtype==="complex64"?U(()=>{let a=nu(n),i=Zu(n);return a=D.runKernel(Nn,{x:a},s),i=D.runKernel(Nn,{x:i},s),t&&(i=et(i)),Dn(a,i)}):D.runKernel(Nn,o,s)}var We=A({transpose_:y5});function x5(r,e,t){let n=v(r,"labels","confusionMatrix"),o=v(e,"predictions","confusionMatrix");P(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),P(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),P(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),P(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),P(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=Xu(oe(n,"int32"),t),a=Xu(oe(o,"int32"),t),i=We(s),u=qe(i,a);return oe(u,"int32")}var H1=A({confusionMatrix_:x5});var Dr={};je(Dr,{assertAndGetBroadcastShape:()=>ze,getBroadcastDims:()=>j1,getReductionAxes:()=>St});function j1(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function St(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function ze(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}var vb={};je(vb,{fromPixels:()=>A5,fromPixelsAsync:()=>S5,toPixels:()=>v5});function Sb(r,e,t){if(to(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Br(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return pn(r,e,n,t)}var Ul;function X1(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o&&o&&r.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(Md(_l,D.backendName)!=null){let f={pixels:r},h={numChannels:e};return D.runKernel(_l,f,h)}let[l,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(a)m=r.getContext("2d").getImageData(0,0,l,p).data;else if(n||t)m=r.data;else if(s||o||i){if(Ul==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Ul=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Ul=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ul.canvas.width=l,Ul.canvas.height=p,Ul.drawImage(r,0,0,l,p),m=Ul.getImageData(0,0,l,p).data}let c;if(e===4)c=new Int32Array(m);else{let f=l*p;c=new Int32Array(f*e);for(let h=0;h<f;h++)for(let g=0;g<e;++g)c[h*e+g]=m[h*4+g]}return Sb(c,[p,l,e],"int32")}function T5(r){return r!=null&&r.data instanceof Uint8Array}function I5(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function C5(r){return r!=null&&r.width!==0&&r.height!==0}function k5(r){return I5()&&!(r instanceof ImageBitmap)&&C5(r)&&!T5(r)}async function S5(r,e=3){let t=null;if(B().getBool("WRAP_TO_IMAGEBITMAP")&&k5(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return X1(t,e)}async function v5(r,e){let t=v(r,"img","toPixels");if(!(r instanceof Xe)){let l=t;t=oe(l,"int32"),l.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let p=[0,0,0,255];for(let c=0;c<s;c++){let d=a[l*s+c];if(t.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(t.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(p[0]=d*i,p[1]=d*i,p[2]=d*i):p[c]=d*i}let m=l*4;u[m+0]=Math.round(p[0]),u[m+1]=Math.round(p[1]),u[m+2]=Math.round(p[2]),u[m+3]=Math.round(p[3])}if(e!=null){e.width=o,e.height=n;let l=e.getContext("2d"),p=new ImageData(u,o,n);l.putImageData(p,0,0)}return t!==r&&t.dispose(),u}var A5=A({fromPixels_:X1});var Ab={};je(Ab,{prepareAndValidate:()=>Y1});function Y1(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(rt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let m=0;m<o.length-1;++m)a*=o[m];let i=r.shape,u=o.slice();u.pop();let l=1;for(let m=s;m<t;++m)l*=i[m],u.push(i[m]);let p=[...oi(r.shape).map(m=>m/l),1].slice(0,s);return[u,a,l,p]}var Ud={};je(Ud,{calculateShapes:()=>Z1,validateInput:()=>wb,validateUpdateShape:()=>sk});function sk(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function wb(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}sk(t,e,r)}function Z1(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let m=o;m<s;++m)a*=t[m];let i=o<1?1:o,u=rt(e.shape)/i,l=[...oi(t.slice(0,o)),1],p=rt(t);return{sliceRank:o,numUpdates:u,sliceSize:a,strides:l,outputSize:p}}var Tt={};je(Tt,{assertParamsValid:()=>N5,computeFlatOffset:()=>M5,computeOutShape:()=>P5,getNormalizedAxes:()=>R5,isSliceContinous:()=>F5,maskToAxes:()=>D5,parseSliceParams:()=>ik,sliceInfo:()=>E5,startForAxis:()=>s2,startIndicesWithElidedDims:()=>r2,stopForAxis:()=>a2,stopIndicesWithElidedDims:()=>n2,stridesForAxis:()=>o2,stridesWithElidedDims:()=>J1});var ak=-2,w5=-1;function N5(r,e,t){let n=r.shape.length;P(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),P(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)P(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function D5(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function P5(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function J1(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function e2(r,e,t){return t<=r?t:t-(e-1)}function t2(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function R5(r,e,t,n,o,s,a,i,u){let l=r.length,p=new Array(l),m=new Array(l),c=new Array(l);if(e.length&&t>0){let d=e[0],f=t+1;p=r2(a,d,f,n,r),m=n2(i,d,f,o,r),c=J1(s,d,f,r)}else for(let d=0;d<l;d++)p[d]=s2(a,n,s,r,d,u),m[d]=a2(i,o,s,r,d,u),c[d]=o2(s,d,u);return{begin:p,end:m,strides:c}}function r2(r,e,t,n,o){let s=[...o],a=t2(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let u=e2(e,t,i),l=n[u];r&1<<u&&(l=0),s[i]=l}return s}function n2(r,e,t,n,o){let s=[...o],a=t2(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let u=e2(e,t,i),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[i]=l}for(let i=0;i<s.length;i++){let u=o[i];s[i]<0&&(s[i]+=u),s[i]=am(0,s[i],o[i])}return s}function o2(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function s2(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),a=am(0,a,u-1),a}function a2(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),i>0?a=am(0,a,u):a=am(-1,a,u-1),a}function F5(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function M5(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function ik(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{P(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(P(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function E5(r,e,t,n,o,s,a,i,u){let l;if(n==null?(l=new Array(e.length),l.fill(1)):l=n,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,m={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let T=0;T<m.dims;T++)p&&(1<<T&i)!==0&&m.numAddAxisAfterEllipsis++,1<<T&a&&(p=!0);p||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};_5(m,c);let d=!0,f=!0,h=!0,g=[],b=[];for(let T=0;T<r.length;++T){if(c.strides[T]===0)throw Error(`strides[${T}] must be non-zero`);let I=!!(c.shrinkAxisMask&1<<T),k=r[T];if(k===-1){g.push(I?1:-1);continue}let w=[c.beginMask&1<<T,c.endMask&1<<T],R=[c.strides[T]>0?0:-1,c.strides[T]>0?k:k-1];if(I&&c.strides[T]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[T]===1;let F=!!(c.beginMask&1<<T&&c.endMask&1<<T);if(c.beginValid&&c.endValid){if(I){let W=c.begin[T]<0?k+c.begin[T]:c.begin[T];if(c.begin[T]=W,c.end[T]=c.begin[T]+1,W<0||W>=k)throw Error(`slice index ${c.begin[T]} of dimension ${T} out of bounds.`)}else c.begin[T]=Q1(c.begin[T],0,c.strides[T],k,w,R),c.end[T]=Q1(c.end[T],1,c.strides[T],k,w,R);let z=c.strides[T]===1&&c.begin[T]===0&&c.end[T]===k;d=d&&z,f=f&&(T===0&&c.strides[T]===1||z)}else d=d&&c.strides[T]===1&&F,f=f&&(T===0&&c.strides[T]===1||F);let M,L=!1;if(c.beginValid&&c.endValid?(M=c.end[T]-c.begin[T],L=!0):I?(M=1,L=!0):F&&k>=0&&(c.strides[T]<0?M=-k:M=k,L=!0),L){let z;M===0||M<0!=c.strides[T]<0?z=0:z=Math.trunc(M/c.strides[T])+(M%c.strides[T]!==0?1:0),g.push(z)}else g.push(-1)}for(let T=0;T<c.finalShapeGatherIndices.length;++T){let I=c.finalShapeGatherIndices[T];I>=0?b.push(g[I]):I===ak&&b.push(1)}return{finalShapeSparse:b.filter((T,I)=>c.finalShapeGatherIndices[I]!==ak),finalShape:b,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function _5(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(ak),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(w5),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function Q1(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var re={};je(re,{Serializable:()=>Nb,SerializationMap:()=>ou,registerClass:()=>Fn});var Nb=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ou=class{constructor(){this.classNameMap={}}static getMap(){return ou.instance==null&&(ou.instance=new ou),ou.instance}static register(e){ou.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Fn(r){P(r.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),P(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ou.register(r)}var p2={};je(p2,{TEST_EPSILON_FLOAT16:()=>i2,encodeStrings:()=>l2,expectArrayBuffersEqual:()=>G5,expectArraysClose:()=>$5,expectArraysEqual:()=>O5,expectNumbersClose:()=>u2,expectPromiseToFail:()=>B5,expectValuesInRange:()=>z5,testEpsilon:()=>Db});var L5=.001,i2=.1;function $5(r,e,t){return t==null&&(t=Db()),uk(r,e,(n,o)=>lk(n,o,t))}function Db(){return D.backend.floatPrecision()===32?L5:i2}function uk(r,e,t){let n=!0;if((Sr(r)||Sr(e))&&(n=!1),Sr(r)&&Sr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=Br(r),i=Br(e);if(!zn(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=Sr(r)?r:ia(r),s=Sr(e)?e:ia(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],u=s[a];if(!t(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function B5(r,e){r().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function O5(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return ua(r)||ua(r[0])||ua(e)||ua(e[0])?uk(r,t,(n,o)=>n==o):uk(r,e,(n,o)=>lk(n,o,0))}function u2(r,e,t){if(t==null&&(t=Db()),!lk(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function lk(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function z5(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function G5(r,e){let t=new Float32Array(r),n=new Float32Array(e);if(t.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${t.length}`);for(let o=0;o<n.length;o++)if(t[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${t[o]} instead`)}function l2(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?l2(t):r[e]=Vu(t)}return r}var U5="0.0.0";function W5(r,e){let t=v(r,"a","add"),n=v(e,"b","add");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(An,o)}var Z=A({add_:W5});function K5(r,e){let t=v(r,"a","floorDiv"),n=v(e,"b","floorDiv");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(yo,o)}var Pb=A({floorDiv_:K5});function V5(r,e){let t=v(r,"a","div"),n=v(e,"b","div");if([t,n]=Qe(t,n),t.dtype==="int32"&&n.dtype==="int32")return Pb(t,n);let o={a:t,b:n},s={};return D.runKernel(fo,o,s)}var me=A({div_:V5});function H5(r,e){let t=v(r,"a","mul"),n=v(e,"b","mul");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(Po,o)}var _=A({mul_:H5});function q5(r){let e=v(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(Du,t)}else{let t={x:e};return D.runKernel(is,t)}}var Ut=A({abs_:q5});function j5(r){let t={x:v(r,"x","acos")};return D.runKernel(Di,t)}var m2=A({acos_:j5});function X5(r){let t={x:v(r,"x","acosh")};return D.runKernel(Pi,t)}var c2=A({acosh_:X5});function Y5(r){P(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),P(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>v(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!zn(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(ro,n)}var d2=A({addN_:Y5});function Z5(r,e=null,t=!1){let o={x:v(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(Ri,o,s)}var Rb=A({all_:Z5});function Q5(r,e=null,t=!1){let o={x:v(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(Fi,o,s)}var Wd=A({any_:Q5});function J5(r,e=0){let n={x:v(r,"x","argMax")},o={axis:e};return D.runKernel(no,n,o)}var Qu=A({argMax_:J5});function e8(r,e=0){let n={x:v(r,"x","argMin")},o={axis:e};return D.runKernel(si,n,o)}var f2=A({argMin_:e8});function t8(r){let t={x:v(r,"x","asin")};return D.runKernel(Mi,t)}var h2=A({asin_:t8});function r8(r){let t={x:v(r,"x","asinh")};return D.runKernel(Ei,t)}var g2=A({asinh_:r8});function n8(r){let t={x:v(r,"x","atan")};return D.runKernel(_i,t)}var b2=A({atan_:n8});function o8(r,e){let t=v(r,"a","atan2"),n=v(e,"b","atan2");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel($i,o)}var y2=A({atan2_:o8});function s8(r){let t={x:v(r,"x","atanh")};return D.runKernel(Li,t)}var x2=A({atanh_:s8});function a8(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],u=I2(o);return Kl(r,i,t,s,n,null,null,u)}function mk(r,e,t,n,o,s,a="channelsLast"){let[i,u]=Fb(e),l;if(a==="channelsLast")l=[i,u,r[3],r[3]];else if(a==="channelsFirst")l=[i,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Kl(r,l,t,n,o,s,!1,a)}function i8(r,e,t,n,o,s,a="NDHWC"){let[i,u,l]=pk(e),p,m;if(a==="NDHWC")m="channelsLast",p=[i,u,l,r[4],r[4]];else if(a==="NCDHW")m="channelsFirst",p=[i,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return T2(r,p,t,n,o,!1,m,s)}function Kl(r,e,t,n,o,s,a=!1,i="channelsLast"){let[u,l,p,m]=[-1,-1,-1,-1];if(i==="channelsLast")[u,l,p,m]=r;else if(i==="channelsFirst")[u,m,l,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[c,d,,f]=e,[h,g]=Fb(t),[b,x]=Fb(n),T=Km(c,b),I=Km(d,x),{padInfo:k,outHeight:w,outWidth:R}=p8(o,l,p,h,g,T,I,s,i),F=a?f*m:f,M;return i==="channelsFirst"?M=[u,F,w,R]:i==="channelsLast"&&(M=[u,w,R,F]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:p,inChannels:m,outHeight:w,outWidth:R,outChannels:F,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:T,effectiveFilterWidth:I,dilationHeight:b,dilationWidth:x,inShape:r,outShape:M,filterShape:e}}function T2(r,e,t,n,o,s=!1,a="channelsLast",i){let[u,l,p,m,c]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,l,p,m,c]=r;else if(a==="channelsFirst")[u,c,l,p,m]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,f,h,,g]=e,[b,x,T]=pk(t),[I,k,w]=pk(n),R=Km(d,I),F=Km(f,k),M=Km(h,w),{padInfo:L,outDepth:z,outHeight:W,outWidth:V}=m8(o,l,p,m,b,x,T,R,F,M,i),j=s?g*c:g,q;return a==="channelsFirst"?q=[u,j,z,W,V]:a==="channelsLast"&&(q=[u,z,W,V,j]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:p,inWidth:m,inChannels:c,outDepth:z,outHeight:W,outWidth:V,outChannels:j,padInfo:L,strideDepth:b,strideHeight:x,strideWidth:T,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:R,effectiveFilterHeight:F,effectiveFilterWidth:M,dilationDepth:I,dilationHeight:k,dilationWidth:w,inShape:r,outShape:q,filterShape:e}}function u8(r,e,t,n,o){n==null&&(n=ck(r,e,t));let s=r[0],a=r[1],i=Wl((s-e+2*n)/t+1,o),u=Wl((a-e+2*n)/t+1,o);return[i,u]}function l8(r,e,t,n,o,s){o==null&&(o=ck(r,e,n));let a=r[0],i=r[1],u=r[2],l=Wl((a-e+2*o)/n+1,s),p=Wl((i-e+2*o)/n+1,s),m=Wl((u-e+2*o)/n+1,s);return[l,p,m,t]}function ck(r,e,t,n=1){let o=Km(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function Fb(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function pk(r){return typeof r=="number"?[r,r,r]:r}function Km(r,e){return e<=1?r:r+(r-1)*(e-1)}function p8(r,e,t,n,o,s,a,i,u){let l,p,m;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=u8([e,t],s,n,r,i);p=d[0],m=d[1]}else if(r==="same"){p=Math.ceil(e/n),m=Math.ceil(t/o);let c=Math.max(0,(p-1)*n+s-e),d=Math.max(0,(m-1)*o+a-t),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),b=d-g;l={top:f,bottom:h,left:g,right:b,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-s+1)/n),m=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let c=u==="channelsLast"?r[1][0]:r[2][0],d=u==="channelsLast"?r[1][1]:r[2][1],f=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},p=Wl((e-s+c+d)/n+1,i),m=Wl((t-a+f+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:p,outWidth:m}}function m8(r,e,t,n,o,s,a,i,u,l,p){let m,c,d,f;if(typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=l8([e,t,n,1],i,1,o,r,p);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(e/o),d=Math.ceil(t/s),f=Math.ceil(n/a);let h=(c-1)*o+i-e,g=(d-1)*s+u-t,b=(f-1)*a+l-n,x=Math.floor(h/2),T=h-x,I=Math.floor(g/2),k=g-I,w=Math.floor(b/2),R=b-w;m={top:I,bottom:k,left:w,right:R,front:x,back:T,type:"SAME"}}else if(r==="valid")m={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},c=Math.ceil((e-i+1)/o),d=Math.ceil((t-u+1)/s),f=Math.ceil((n-l+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function Wl(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Xo(r){let[e,t,n]=Fb(r);return e===1&&t===1&&n===1}function Er(r,e){return Xo(r)||Xo(e)}function I2(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Rt(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")P(Ni(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(o=>{P(Ni(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function c8(r,e){let n={x:v(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(hs,n,o)}var $=A({reshape_:c8});function d8(r,e,t,n,o){let s=v(r,"x","avgPool","float32"),a=1;P(Er(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,u=!1;s.rank===3&&(u=!0,i=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Rt("avgPool",n,o);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(oo,l,p);return m=oe(m,s.dtype),u?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Vm=A({avgPool_:d8});function f8(r,e,t,n,o,s="NDHWC"){let a=v(r,"x","avgPool3d","float32"),i=a,u=!1;a.rank===4&&(u=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),P(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Rt("avgPool3d",n,o);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(wu,l,p);return m=oe(m,i.dtype),u?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Mb=A({avgPool3d_:f8});function h8(r,e=0){P(r.length>=1,()=>"Pass at least one tensor to concat");let t=Ji(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return mn(t[0]);let n=t,o={axis:e};return D.runKernel(ls,n,o)}var mt=A({concat_:h8});function g8(r){let t={x:v(r,"x","sigmoid","float32")};return D.runKernel(Go,t)}var Mn=A({sigmoid_:g8});function b8(r,e,t){let n=v(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(bs,o,s)}var Ge=A({slice_:b8});function y8(r){let t={x:v(r,"x","tanh","float32")};return D.runKernel(qo,t)}var Ju=A({tanh_:y8});function x8(r,e,t,n,o,s){let a=v(r,"forgetBias","basicLSTMCell"),i=v(e,"lstmKernel","basicLSTMCell"),u=v(t,"lstmBias","basicLSTMCell"),l=v(n,"data","basicLSTMCell"),p=v(o,"c","basicLSTMCell"),m=v(s,"h","basicLSTMCell"),c=mt([l,m],1),d=qe(c,i),f=Z(d,u),h=f.shape[0],g=f.shape[1]/4,b=[h,g],x=Ge(f,[0,0],b),T=Ge(f,[0,g],b),I=Ge(f,[0,g*2],b),k=Ge(f,[0,g*3],b),w=Z(_(Mn(x),Ju(T)),_(p,Mn(Z(a,I)))),R=_(Ju(w),Mn(k));return[w,R]}var C2=A({basicLSTMCell_:x8});function T8(r,e,t){let n=v(r,"x","batchToSpaceND"),o=e.reduce((i,u)=>i*u);P(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),P(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),P(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return D.runKernel(us,s,a)}var Hm=A({batchToSpaceND_:T8});function k2(r){let e;return r.rank===0||r.rank===1?e=$(r,[1,1,1,r.size]):r.rank===2?e=$(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function I8(r,e,t,n,o,s){s==null&&(s=.001);let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;n!=null&&(p=v(n,"offset","batchNorm")),P(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(p==null||i.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:k2(a),scale:l,offset:p,mean:i,variance:u},d={varianceEpsilon:s},f=D.runKernel(xo,c,d);return $(f,a.shape)}var el=A({batchNorm_:I8});function C8(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),P(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),el(a,i,u,p,l,s)}var Eb=A({batchNorm2d_:C8});function k8(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),P(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),el(a,i,u,p,l,s)}var _b=A({batchNorm3d_:k8});function S8(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),P(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),el(a,i,u,p,l,s)}var Lb=A({batchNorm4d_:S8});function v8(r,e,t){let n=v(r,"x","bincount"),o=v(e,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return D.runKernel(cm,s,a)}var $b=A({bincount_:v8});function A8(r,e){let t=v(r,"s0","broadcastArgs","int32"),n=v(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return D.runKernel(dm,o)}var S2=A({broadcastArgs_:A8});function w8(r,e){let t=v(r,"broadcastTo","x"),n=t.shape;if(e.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=$(t,l)}let o=t.shape,s=Array.from(e);for(let l=e.length-1;l>=0;l--)if(o[l]===e[l])s[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return mn(t);let i={x:t},u={reps:s};return D.runKernel(wn,i,u)}var qm=A({broadcastTo_:w8});function N8(r){let t={x:v(r,"x","ceil","float32")};return D.runKernel(ao,t)}var v2=A({ceil_:N8});function D8(r,e,t){let n=v(r,"x","clipByValue");P(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Un,o,s)}var zr=A({clipByValue_:D8});function P8(r){return mt(r,0)}var Bb=A({concat1d_:P8});function R8(r,e){return mt(r,e)}var Ob=A({concat2d_:R8});function F8(r,e){return mt(r,e)}var zb=A({concat3d_:F8});function M8(r,e){return mt(r,e)}var Gb=A({concat4d_:M8});function E8(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","conv2d","float32"),u=v(e,"filter","conv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Rt("conv2d",n,a);let m=o==="NHWC"?l.shape[3]:l.shape[1];P(m===u.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${u.shape[2]}.`),P(Er(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let c={x:l,filter:u},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(io,c,d);return p?$(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Zo=A({conv2d_:E8});function _8(r,e,t,n,o="NWC",s=1,a){let i=v(r,"x","conv1d"),u=v(e,"filter","conv1d"),l=i,p=!1;i.rank===2&&(p=!0,l=$(i,[1,i.shape[0],i.shape[1]])),P(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),P(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Rt("conv1d",n,a),P(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),P(Er(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),P(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=$(u,[1,u.shape[0],u.shape[1],u.shape[2]]),c=$(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=Zo(c,m,[1,t],n,"NHWC",[1,s],a);return p?$(g,[g.shape[2],g.shape[3]]):$(g,[g.shape[0],g.shape[2],g.shape[3]])}var Ub=A({conv1d_:_8});function L8(r,e,t,n,o,s="NHWC",a){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,u=e,l=!1;e.rank===3&&(l=!0,u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),P(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),P(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),P(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let p=s==="NHWC"?i[3]:i[1],m=s==="NHWC"?u.shape[3]:u.shape[1];P(p===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[2]}.`),P(m===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${t.shape[3]}.`),Rt("conv2dDerInput",o,a);let c={dy:u,filter:t},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=D.runKernel(uo,c,d);return l?$(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var jm=A({conv2DBackpropInput_:L8});function $8(r,e,t,n,o,s){let a=v(r,"x","conv2dTranspose"),i=v(e,"filter","conv2dTranspose");return jm(t,a,i,n,o,"NHWC",s)}var Wb=A({conv2dTranspose_:$8});function B8(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=v(r,"x","conv3d"),i=v(e,"filter","conv3d"),u=a,l=!1;a.rank===4&&(l=!0,u=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),P(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),P(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),P(Er(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let p={x:u,filter:i},m={strides:t,pad:n,dataFormat:o,dilations:s},c=D.runKernel(Pu,p,m);return l?$(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Kb=A({conv3d_:B8});function O8(r,e,t,n,o){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=$(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=a.shape[4];P(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),P(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),P(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),P(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),P(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);let p={dy:a,filter:t},m={pad:o,strides:n,inputShape:s},c=D.runKernel(gm,p,m);return i?$(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Vb=A({conv3DBackpropInput_:O8});function z8(r,e,t,n,o){let s=v(r,"x","conv3dTranspose"),a=v(e,"filter","conv3dTranspose");return Vb(t,s,a,n,o)}var Hb=A({conv3dTranspose_:z8});function G8(r){let t={x:v(r,"x","cos","float32")};return D.runKernel(lo,t)}var Xm=A({cos_:G8});function U8(r){let t={x:v(r,"x","cosh","float32")};return D.runKernel(po,t)}var qb=A({cosh_:U8});function W8(r,e=0,t=!1,n=!1){let s={x:v(r,"x","cumprod")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(la,s,a)}var Kd=A({cumprod_:W8});function K8(r,e=0,t=!1,n=!1){let s={x:v(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(mo,s,a)}var jb=A({cumsum_:K8});function V8(r,e,t,n=!1){let o=v(r,"x","denseBincount"),s=v(e,"weights","denseBincount");P(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),P(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return D.runKernel(bm,a,i)}var A2=A({denseBincount_:V8});function H8(r,e,t="NHWC"){let n=v(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];P(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),P(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),P(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),P(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},u={blockSize:e,dataFormat:t};return D.runKernel(ma,i,u)}var w2=A({depthToSpace_:H8});function q8(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","depthwiseConv2d","float32"),u=v(e,"filter","depthwiseConv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let m=o==="NHWC"?l.shape[3]:l.shape[1];P(m===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${u.shape[2]}.`),Rt("depthwiseConv2d",n,a);let c={x:l,filter:u},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(co,c,d);return p?$(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var tl=A({depthwiseConv2d_:q8});function j8(r){let t={x:v(r,"x","diag")};return D.runKernel(Tm,t)}var N2=A({diag_:j8});function X8(r,e,t,n,o=[1,1],s="NHWC"){let a=v(r,"x","dilation2d"),i=v(e,"filter","dilation2d");P(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),P(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),P(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=a,l=!1;a.rank===3&&(u=$(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);let p={x:u,filter:i},m={strides:t,pad:n,dilations:o},c=D.runKernel(Ru,p,m);return l?$(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var D2=A({dilation2d_:X8});function Y8(r,e){let t=v(r,"a","equal","string_or_numeric"),n=v(e,"b","equal","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ca,o)}var jr=A({equal_:Y8});function Z8(r,e,t){let n=v(e,"a","where"),o=v(t,"b","where"),s=v(r,"condition","where","bool"),a=ze(ze(s.shape,n.shape),o.shape),i=qm(s,a),u=qm(n,a),l=qm(o,a),p={condition:i,t:u,e:l};return D.runKernel(gs,p)}var Wt=A({where_:Z8});function Q8(r){let t={x:v(r,"x","zerosLike")};return D.runKernel(Is,t)}var De=A({zerosLike_:Q8});function J8(r,e){let t=v(r,"a","div"),n=v(e,"b","div");[t,n]=Qe(t,n);let o=me(t,n),s=De(o),a=jr(n,s);return Wt(a,s,o)}var P2=A({divNoNan_:J8});function eX(r,e){let t=v(r,"t1","dot"),n=v(e,"t2","dot");P((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(P(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=$(t,[1,-1]),i=$(n,[-1,1]),u=qe(a,i);return $(u,[])}else if(t.rank===1&&n.rank===2){let a=$(t,[1,-1]),i=$(n,[n.shape[0],n.shape[1]]),u=qe(a,i);return $(u,[u.size])}else if(t.rank===2&&n.rank===1){let a=$(n,[-1,1]),i=qe(t,a);return $(i,[i.size])}else{let a=$(n,[n.shape[0],n.shape[1]]);return qe(t,a)}}var R2=A({dot_:eX});function tX(r,...e){let t=e.map((o,s)=>v(o,`tensors${s}`,"einsum")),n={equation:r};return D.runKernel(Fu,t,n)}var F2=A({einsum_:tX});function rX(r){let t={x:v(r,"x","elu","float32")};return D.runKernel(ho,t)}var rl=A({elu_:rX});function nX(r){let e=v(r,"x","erf");P(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=oe(e,"float32"));let t={x:e};return D.runKernel(Bi,t)}var M2=A({erf_:nX});function dk(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function E2(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function fk(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Ps(r,e){let t=e.map(n=>1);return E2(r,t,e)}function oX(r,e,t){P(dk(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function hk(r,e){if(dk(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Vd(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function sX(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function aX(r,e=null,t=!1){let o={x:v(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(ko,o,s)}var cn=A({max_:aX});function iX(r,e=null,t=!1){let o={x:v(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(wo,o,s)}var Hd=A({min_:iX});function uX(r,e){let t=v(r,"base","pow"),n=v(e,"exp","pow");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(Fo,o)}var Hn=A({pow_:uX});function ce(r,e){if((Sr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Sr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return pn(r,[],[],e)}function lX(r){let t={x:v(r,"x","sqrt","float32")};return D.runKernel(Uo,t)}var $t=A({sqrt_:lX});function pX(r){let e=v(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var Ye=A({square_:pX});function mX(r,e=null,t=!1){let n=v(r,"x","sum");n.dtype==="bool"&&(n=oe(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Wo,o,s)}var de=A({sum_:mX});function cX(r,e="euclidean",t=null,n=!1){r=v(r,"x","norm");let o=_2(r,e,t),s=o.shape;if(n){let a=hr(t,r.shape);s=Ps(o.shape,a)}return $(o,s)}function _2(r,e,t=null){if(r.rank===0)return Ut(r);if(r.rank!==1&&t===null)return _2($(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return de(Ut(r),t);if(e===1/0)return cn(Ut(r),t);if(e===-1/0)return Hd(Ut(r),t);if(e==="euclidean"||e===2)return $t(de(Hn(Ut(r),ce(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return cn(de(Ut(r),t[0]),t[1]-1);if(e===1/0)return cn(de(Ut(r),t[1]),t[0]);if(e===-1/0)return Hd(de(Ut(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return $t(de(Ye(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Vl=A({norm_:cX});function dX(r,e=null,t=!1){return Vl(r,"euclidean",e,t)}var L2=A({euclideanNorm_:dX});function fX(r){let t={x:v(r,"x","exp")};return D.runKernel(go,t)}var gr=A({exp_:fX});function hX(r,e=0){let t=v(r,"x","expandDims","string_or_numeric");P(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(ps,n,o)}var _r=A({expandDims_:hX});function gX(r){let t={x:v(r,"x","expm1")};return D.runKernel(da,t)}var $2=A({expm1_:gX});function bX(r,e){let t=v(r,"x","tile","string_or_numeric");P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(wn,n,o)}var Xr=A({tile_:bX});function yX(r,e,t,n="float32"){e==null&&(e=r);let o=xe([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=$(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return Xr(_r(a,0),[t[0],1,1]);if(t.length===2)return Xr(_r(_r(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Xr(_r(_r(_r(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Hl=A({eye_:yX});function ci(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(ai,{},n)}function xX(r){let t={x:v(r,"x","floor","float32")};return D.runKernel(bo,t)}var nl=A({floor_:xX});function TX(r,e,t=0,n=0){let o=v(r,"x","gather"),s=v(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return D.runKernel(ms,a,i)}var ol=A({gather_:TX});function IX(r,e){let t=v(r,"a","greater","string_or_numeric"),n=v(e,"b","greater","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ga,o)}var pr=A({greater_:IX});function CX(r,e){let t=v(r,"a","greaterEqual","string_or_numeric"),n=v(e,"b","greaterEqual","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(To,o)}var Rs=A({greaterEqual_:CX});function kX(r){let t={x:v(r,"x","isFinite")};return D.runKernel(Oi,t)}var B2=A({isFinite_:kX});function SX(r){let t={x:v(r,"x","isInf")};return D.runKernel(zi,t)}var O2=A({isInf_:SX});function vX(r){let t={x:v(r,"x","isNaN")};return D.runKernel(Gi,t)}var z2=A({isNaN_:vX});function AX(r,e=.2){let n={x:v(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(Io,n,o)}var Ym=A({leakyRelu_:AX});function wX(r,e){let t=v(r,"a","less","string_or_numeric"),n=v(e,"b","less","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ba,o)}var Xb=A({less_:wX});function NX(r,e){let t=v(r,"a","lessEqual","string_or_numeric"),n=v(e,"b","lessEqual","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ya,o)}var Fs=A({lessEqual_:NX});function G2(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(Sm,{},n)}function DX(r,e=5,t=1,n=1,o=.5){let s=v(r,"x","localResponseNormalization");P(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),P(Ni(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=$(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:a},l={depthRadius:e,bias:t,alpha:n,beta:o},p=D.runKernel(Eu,u,l);return i?$(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var U2=A({localResponseNormalization_:DX});function PX(r){let t={x:v(r,"x","log","float32")};return D.runKernel(Co,t)}var Gr=A({log_:PX});function RX(r){let t={x:v(r,"x","log1p")};return D.runKernel(Ui,t)}var Zm=A({log1p_:RX});function FX(r){return P(ni(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=v(e,"x","tf.grad","string_or_numeric"),o=t!=null?v(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(n),[n],o);return o!=null&&zt(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Zb(a),a[0]})}}function MX(r){return P(ni(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{P(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Ji(e,"args","tf.grads","string_or_numeric"),o=t!=null?v(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(...n),n,o);return o!=null&&zt(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Zb(a),a})}}function EX(r){return P(ni(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{P(e instanceof Xe,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(t==null||t instanceof Xe,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return Zb(n),{grad:n[0],value:o}}}function _X(r){return P(ni(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{P(Array.isArray(e)&&e.every(o=>o instanceof Xe),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(t==null||t instanceof Xe,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&zt(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Zb(n.grads),n}}function Yb(r,e){P(ni(r),()=>"The f passed in variableGrads(f) must be a function"),P(e==null||Array.isArray(e)&&e.every(l=>l instanceof Hu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let l in D.registeredVariables)e.push(D.registeredVariables[l])}let n=t?e.filter(l=>!l.trainable):null,o=e.length;e=e.filter(l=>l.trainable),P(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=D.gradients(r,e,null,s);P(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let u={};return e.forEach((l,p)=>{i[p]!=null&&(u[l.name]=i[p])}),n?.forEach(l=>u[l.name]=null),{value:a,grads:u}}function dn(r){return D.customGrad(r)}function Zb(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function LX(r){let t={x:v(r,"x","softplus")};return D.runKernel(Xi,t)}var su=A({softplus_:LX});function $X(r){let e=v(r,"x","logSigmoid");return dn(n=>({value:et(su(et(n))),gradFunc:a=>_(a,Mn(et(n)))}))(e)}var W2=A({logSigmoid_:$X});function BX(r,e){let t=v(r,"a","sub"),n=v(e,"b","sub");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(Ho,o)}var le=A({sub_:BX});function OX(r,e=-1){let t=v(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return dn((o,s)=>{let i=cn(o,e,!0),u=le(o,i),l=le(oe(u,"float32"),Gr(de(gr(u),e,!0)));return s([l]),{value:l,gradFunc:(m,c)=>{let[d]=c,f=!0,h=gr(d);return le(m,_(de(m,e,f),h))}}})(t)}var Qb=A({logSoftmax_:OX});function zX(r,e=null,t=!1){let n=v(r,"x","logSumExp"),o=hr(e,n.shape),s=cn(n,o,!0),a=le(n,s),i=gr(a),u=de(i,o),l=Gr(u),p=Z($(s,l.shape),l);if(t){let m=Ps(p.shape,o);return $(p,m)}return p}var Jb=A({logSumExp_:zX});function GX(r,e){let t=v(r,"a","logicalAnd","bool"),n=v(e,"b","logicalAnd","bool");ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(xa,o)}var Yr=A({logicalAnd_:GX});function UX(r){let t={x:v(r,"x","logicalNot","bool")};return D.runKernel(Ta,t)}var Qm=A({logicalNot_:UX});function WX(r,e){let t=v(r,"a","logicalOr","bool"),n=v(e,"b","logicalOr","bool");ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Wi,o)}var ey=A({logicalOr_:WX});function KX(r,e){let t=v(r,"a","logicalXor","bool"),n=v(e,"b","logicalXor","bool");return ze(t.shape,n.shape),Yr(ey(r,e),Qm(Yr(r,e)))}var K2=A({logicalXor_:KX});var ty=2147483648;function VX(r,e,t="left"){let n=v(r,"sortedSequence","searchSorted"),o=v(e,"values","searchSorted"),s=n.shape[n.shape.length-1],a=o.shape[o.shape.length-1],i=$(n,[-1,s]),u=$(o,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(rt(u.shape)>=ty)throw new Error(`values tensor size must less than ${ty}`);if(i.shape[1]>=ty)throw new Error(`trailing dim_size must less than ${ty} for int32 output type, was ${i.shape[1]}`);let l={sortedSequence:i,values:u},p={side:t};return D.runKernel(Fm,l,p)}var qd=A({searchSorted_:VX});function V2(r,e){return qd(r,e,"left")}function HX(r,e,t,n,o){let s=v(r,"x","maxPool"),a=1,i=s,u=!1;s.rank===3&&(u=!0,i=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),P(Er(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Rt("maxPool",n,o);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(vo,l,p);return u?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Jm=A({maxPool_:HX});function qX(r,e=[1,1,1],t,n,o,s="NDHWC"){let a=v(r,"x","maxPool3d"),i=a,u=!1;a.rank===4&&(u=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),P(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Rt("maxPool3d",n,o);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(_u,l,p);return u?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var ry=A({maxPool3d_:qX});function jX(r,e,t,n,o=!1){let a={x:v(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},u=D.runKernel(Nm,a,i);return{result:u[0],indexes:u[1]}}var H2=A({maxPoolWithArgmax_:jX});function XX(r,e){let t=v(r,"a","maximum"),n=v(e,"b","maximum");[t,n]=Qe(t,n),t.dtype==="bool"&&(t=oe(t,"int32"),n=oe(n,"int32")),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(So,o)}var Qo=A({maximum_:XX});function YX(r,e=null,t=!1){let o={x:v(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(Ao,o,s)}var Bt=A({mean_:YX});function It(r,e="float32"){if(e==="complex64"){let n=It(r,"float32"),o=It(r,"float32");return Dn(n,o)}let t=lm(rt(r),e);return D.makeTensor(t,r,e)}function br(r,e="float32"){if(e==="complex64"){let n=br(r,"float32"),o=It(r,"float32");return Dn(n,o)}let t=Ad(rt(r),e);return D.makeTensor(t,r,e)}function q2(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=v(r,"x","meshgrid",r instanceof Xe?r.dtype:"float32");if(e===void 0)return[n];let o=v(e,"y","meshgrid",e instanceof Xe?e.dtype:"float32"),s=rt(n.shape),a=rt(o.shape);return t==="xy"?(n=$(n,[1,-1]),o=$(o,[-1,1]),[qe(br([a,1],n.dtype),n),qe(o,br([1,s],o.dtype))]):(n=$(n,[-1,1]),o=$(o,[1,-1]),[qe(n,br([1,a],n.dtype)),qe(br([s,1],o.dtype),o)])}function ZX(r,e){let t=v(r,"a","minimum"),n=v(e,"b","minimum");[t,n]=Qe(t,n),t.dtype==="bool"&&(t=oe(t,"int32"),n=oe(n,"int32")),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(No,o)}var sl=A({minimum_:ZX});function QX(r,e,t){P(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=v(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)P(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return D.runKernel(Do,a,s)}var j2=A({mirrorPad_:QX});function JX(r,e){let t=v(r,"a","mod"),n=v(e,"b","mod");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(Ki,o)}var X2=A({mod_:JX});function eY(r,e=null,t=!1){r=v(r,"x","moments");let n=hr(e,r.shape),o=Bt(r,n,t),s=o.shape;t||(s=Ps(o.shape,n));let a=Ye(le(oe(r,"float32"),$(o,s))),i=Bt(a,n,t);return{mean:o,variance:i}}var ql=A({moments_:eY});function tY(r,e,t,n){let o=v(e,"data","multiRNNCell"),s=Ji(t,"c","multiRNNCell"),a=Ji(n,"h","multiRNNCell"),i=o,u=[];for(let m=0;m<r.length;m++){let c=r[m](i,s[m],a[m]);u.push(c[0]),u.push(c[1]),i=c[1]}let l=[],p=[];for(let m=0;m<u.length;m+=2)l.push(u[m]),p.push(u[m+1]);return[l,p]}var Y2=A({multiRNNCell_:tY});function rY(r,e,t,n=!1){let o=v(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let u={logits:a===1?$(o,[1,-1]):o},l={numSamples:e,seed:t,normalized:n},p=D.runKernel(Dm,u,l);return a===1?$(p,[p.size]):p}var Z2=A({multinomial_:rY});function nY(r,e){let t=v(r,"a","notEqual","string_or_numeric"),n=v(e,"b","notEqual","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Ia,o)}var au=A({notEqual_:nY});function oY(r){let t={x:v(r,"x","onesLike")};return D.runKernel(ds,t)}var Lr=A({onesLike_:oY});function sY(r,e){let t=v(r,"v1","outerProduct"),n=v(e,"v2","outerProduct");P(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=$(t,[-1,1]),s=$(n,[1,-1]);return qe(o,s)}var Q2=A({outerProduct_:sY});function aY(r,e,t=0){let n=v(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(Ro,s,o)}var qn=A({pad_:aY});function iY(r,e,t=0){return P(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),qn(r,[e],t)}var J2=A({pad1d_:iY});function uY(r,e,t=0){return P(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qn(r,e,t)}var eP=A({pad2d_:uY});function lY(r,e,t=0){return P(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qn(r,e,t)}var tP=A({pad3d_:lY});function pY(r,e,t=0){return P(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qn(r,e,t)}var rP=A({pad4d_:pY});function mY(r,e,t){let n=v(r,"x","spaceToBatchND");P(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),P(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),P(n.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+t[u-1][0]+t[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(ys,o,s)}var ec=A({spaceToBatchND_:mY});function cY(r,e,t,n,o,s,a){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=v(r,"x","maxPool"),u=i,l=!1;i.rank===3&&(l=!0,u=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(Er(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let p=mk(u.shape,e,s,o,n),m=[p.dilationHeight,p.dilationWidth],c;n==="same"?c=fY([p.filterHeight,p.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=dY([p.inHeight,p.inWidth],m,c),g=d?n:"valid",b=d?u:ec(u,m,f),T=(t==="avg"?()=>Vm(b,e,s,g,a):()=>Jm(b,e,s,g,a))(),I=d?T:Hm(T,m,h);return l?$(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function dY(r,e,t){let n=t.map(p=>p[0]),o=t.map(p=>p[1]),s=r.concat(n,o),a=e.map((p,m)=>(p-s[m]%p)%p),i=o.map((p,m)=>p+a[m]),u=e.map((p,m)=>[n[m],i[m]]),l=e.map((p,m)=>[0,a[m]]);return[u,l]}function fY(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var nP=A({pool_:cY});function hY(r,e){let t=v(r,"x","prelu"),n=v(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(Mo,o)}var tc=A({prelu_:hY});function gY(r,e=null,t=!1){let n=v(r,"x","prod");n.dtype==="bool"&&(n=oe(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Eo,o,s)}var oP=A({prod_:gY});function bY(r,e,t){let n=rt(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var sP=A({rand_:bY});var oy=Fl(jd());var rc=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=oy.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},kk=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=oy.alea(s.toString()),this.randn=new rc(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Sk=class{constructor(e=0,t=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=oy.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function SY(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new kk(e,t,n,o),a=xe(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var CP=A({randomGamma_:SY});function vY(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new rc(e,t,n,!1,o),a=xe(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Xl=A({randomNormal_:vY});function AY(r,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Xl(r,0,1,e,t)}var kP=A({randomStandardNormal_:AY});function wY(r,e=0,t=1,n="float32",o){let s=xe(r,n),a=new Sk(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var di=A({randomUniform_:wY});function al(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(ii,{},o)}function NY(r){let t={x:v(r,"x","reciprocal")};return D.runKernel(Hi,t)}var SP=A({reciprocal_:NY});function DY(r){let t={x:v(r,"x","relu")};return D.runKernel(_o,t)}var Zr=A({relu_:DY});function PY(r){let t={x:v(r,"x","relu6")};return D.runKernel(Bo,t)}var sy=A({relu6_:PY});function RY(r,e){let n={x:v(r,"x","reverse")},o={dims:e};return D.runKernel(va,n,o)}var Pr=A({reverse_:RY});function FY(r){let e=v(r,"x","reverse");return P(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Pr(e,0)}var vP=A({reverse1d_:FY});function MY(r,e){let t=v(r,"x","reverse");return P(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Pr(t,e)}var AP=A({reverse2d_:MY});function EY(r,e){let t=v(r,"x","reverse");return P(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Pr(t,e)}var wP=A({reverse3d_:EY});function _Y(r,e){let t=v(r,"x","reverse");return P(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Pr(t,e)}var NP=A({reverse4d_:_Y});function LY(r){let t={x:v(r,"x","round")};return D.runKernel(Aa,t)}var ay=A({round_:LY});function $Y(r){let t={x:v(r,"x","rsqrt","float32")};return D.runKernel(Oo,t)}var iy=A({rsqrt_:$Y});function BY(r){let t={x:v(r,"x","selu")};return D.runKernel(qi,t)}var uy=A({selu_:BY});function OY(r,e,t,n,o,s=[1,1],a="NHWC"){let i=v(r,"x","separableConv2d"),u=v(e,"depthwiseFilter","separableConv2d"),l=v(t,"pointwiseFilter","separableConv2d"),p=i,m=!1;if(i.rank===3&&(m=!0,p=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),P(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let c=u.shape[2],d=u.shape[3];P(l.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${l.shape[2]}.`);let f=tl(p,u,n,o,a,s),g=Zo(f,l,1,"valid",a);return m?$(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var ly=A({separableConv2d_:OY});async function zY(r,e){let t=v(r,"x","setdiff1d"),n=v(e,"y","setdiff1d");P(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),P(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),P(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let p=0;p<o.length;p++)a.has(o[p])||i++;let u=new yt([i],t.dtype),l=new yt([i],"int32");for(let p=0,m=0;p<o.length;p++)a.has(o[p])||(u.values[m]=o[p],l.values[m]=p,m++);return[u.toTensor(),l.toTensor()]}var DP=zY;function GY(r){let t={x:v(r,"x","sign")};return D.runKernel(ji,t)}var PP=A({sign_:GY});function UY(r){let t={x:v(r,"x","sin","float32")};return D.runKernel(zo,t)}var py=A({sin_:UY});function WY(r){let t={x:v(r,"x","sinh")};return D.runKernel(Na,t)}var my=A({sinh_:WY});function KY(r,e,t){let n=v(r,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Ge(n,[e],[t])}var nc=A({slice1d_:KY});function VY(r,e,t){let n=v(r,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Ge(n,e,t)}var Xd=A({slice2d_:VY});function HY(r,e,t){let n=v(r,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Ge(n,e,t)}var oc=A({slice3d_:HY});function qY(r,e,t){let n=v(r,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Ge(n,e,t)}var Yl=A({slice4d_:qY});function jY(r,e=-1){let t=v(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel(Ko,n,o)}var sc=A({softmax_:jY});function XY(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(Cm,e)}var ac=A({fft_:XY});function YY(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(km,e)}var Zl=A({ifft_:YY});function ZY(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=$(r,[t,e]);n=Zl(o)}else{let o=[t,2*(e-1)],s=$(nu(r),[t,e]),a=$(Zu(r),[t,e]),i=Pr(Ge(s,[0,1],[t,e-2]),1),u=_(Pr(Ge(a,[0,1],[t,e-2]),1),ce(-1)),l=mt([s,i],1),p=mt([a,u],1),m=$(Dn(l,p),[o[0],o[1]]);n=Zl(m)}if(n=nu(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=$(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var cy=A({irfft_:ZY});function QY(r,e,t=0){let o={x:v(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(xs,o,s)}var Rr=A({split_:QY});function JY(r,e){P(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=Ge(r,f,h),t=e}else if(e!=null&&e>t){let f=r.shape.map(h=>h);f[r.shape.length-1]=e-t,o=mt([r,It(f)],r.shape.length-1),t=e}else o=r;let s=De(o),a=$(Dn(o,s),[n,t]),i=ac(a),u=Math.floor(t/2)+1,l=nu(i),p=Zu(i),m=Rr(l,[u,t-u],l.shape.length-1),c=Rr(p,[u,t-u],p.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=u,$(Dn(m[0],c[0]),d)}var ic=A({rfft_:JY});function eZ(r,e){let t=v(r,"a","squaredDifference"),n=v(e,"b","squaredDifference");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Vo,o,s)}var dy=A({squaredDifference_:eZ});function tZ(r,e){let t=v(r,"x","squeeze","string_or_numeric");return $(t,IC(t.shape,e).newShape)}var Ms=A({squeeze_:tZ});function rZ(r,e=0){let t=Ji(r,"tensors","stack","string_or_numeric");P(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&P(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(fs,n,o)}var yr=A({stack_:rZ});function nZ(r,e=0){let n={x:v(r,"x","step")},o={alpha:e};return D.runKernel(Cs,n,o)}var fi=A({step_:nZ});function oZ(r,e,t,n,o=0,s=0,a=0,i=0,u=0){let p={x:v(r,"x","stridedSlice","string_or_numeric")},m={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return D.runKernel(Da,p,m)}var RP=A({stridedSlice_:oZ});function sZ(r){let t={x:v(r,"x","tan","float32")};return D.runKernel(Pa,t)}var FP=A({tan_:sZ});function jt(r,e){to(r);let t=Br(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return pn(r,null,t,e)}function La(r,e,t){if(to(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Br(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return pn(r,e,n,t)}function MP(r,e,t){if(to(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Br(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return pn(r,e,n,t)}function EP(r,e,t){if(to(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Br(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return pn(r,e,n,t)}function _P(r,e,t){if(to(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Br(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,pn(r,e,n,t)}function aZ(r,e=1,t=!0){let n=v(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,u]=D.runKernel(Ra,s,a);return{values:i,indices:u}}var LP=A({topk_:aZ});function iZ(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new rc(e,t,n,!0,o),a=xe(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var uc=A({truncatedNormal_:iZ});function uZ(r,e=0){let t=v(r,"x","unique","string_or_numeric");P(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=D.runKernel(Mm,n,o);return{values:s,indices:a}}var $P=A({unique_:uZ});function lZ(r,e,t){let n=v(r,"x","unsortedSegmentSum"),o=v(e,"segmentIds","unsortedSegmentSum","int32");P(Ni(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return D.runKernel(Wu,s,a)}var fy=A({unsortedSegmentSum_:lZ});function pZ(r,e=0){let t=v(r,"x","unstack","string_or_numeric");P(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(Ts,n,o)}var Ur=A({unstack_:pZ});function BP(r,e){return qd(r,e,"right")}function hy(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function gy(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=xe(r,"int32"),o=xe([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function mZ(r){let e=v(r,"condition","whereAsync","bool"),t=await e.data(),n=gy(e.shape,t);return r!==e&&e.dispose(),n}var by=mZ;async function cZ(r,e,t){let n=v(r,"tensor","boolMask"),o=v(e,"mask","boolMask","bool"),s=t??0,a=o.rank,i=n.shape;P(a>0,()=>"mask cannot be scalar"),zt(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+a;h++)u*=i[h];let l=i.slice(0,s).concat([u],i.slice(s+a)),p=$(n,l),m=$(o,[-1]),c=await by(m),d=Ms(c,[1]),f=ol(p,d,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),d.dispose(),p.dispose(),m.dispose(),c.dispose(),f}var dZ=cZ;function fZ(r,e,t,n,o=!0){let s=v(r,"v","movingAverage"),a=v(e,"x","movingAverage"),i=v(t,"decay","movingAverage");BC(s,a),P(zn(s.shape,a.shape),()=>"Shape mismatch in v and x");let u=ce(1),l=le(u,i),p=_(le(a,s),l);if(o){P(n!=null,()=>"When using zeroDebias: true, step is required.");let m=v(n,"step","movingAverage");p=me(p,le(u,Hn(i,m)))}return Z(s,p)}var hZ=A({movingAverage_:fZ});function gZ(r,e,t){let n=v(r,"indices","scatterND","int32"),o=v(e,"updates","scatterND");wb(o,n,t);let s={indices:n,updates:o},a={shape:t};return D.runKernel(wa,s,a)}var bZ=A({scatterND_:gZ});function OP(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function xZ(r,e,t,n=0){let o=v(r,"sparseIndices","sparseToDense","int32"),s=v(e,"sparseValues","sparseToDense","string_or_numeric"),a=v(n,"defaultValue","sparseToDense",s.dtype);OP(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},u={outputShape:t};return D.runKernel(zu,i,u)}var TZ=A({sparseToDense_:xZ});function IZ(r,e){let t=v(e,"indices","gatherND","int32"),o={params:v(r,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(ha,o)}var CZ=A({gatherND_:IZ});function zP(r,e){if(e==null)return r.shape.slice();if(zn(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function kZ(r,e,t,n){let o=v(r,"x","dropout");if(P(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),P(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Xe?o.clone():o;let s=zP(o,t),a=1-e,i=me(nl(Z(di(s,0,1,"float32",n),a)),a);return _(o,i)}var vk=A({dropout_:kZ});function Ak(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Yd(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return jt(o,"float32")}async function SZ(r,e,t=1){let n=v(r,"predictions","inTopK"),o=v(e,"targets","inTopK");P(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),P(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),zt(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];P(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[u,l]=[a.length/s,s],p=CC("bool",u);for(let m=0;m<u;m++){let c=m*l,d=a.subarray(c,c+l),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),p[m]=0;for(let h=0;h<t;h++)if(f[h].index===i[m]){p[m]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Nr(p,o.shape,"bool")}var vZ=SZ;var il={};je(il,{conv2d:()=>GP,depthwiseConv2d:()=>UP,matMul:()=>WP});function AZ(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]])),P(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),P(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),P(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let l=s==="NHWC"?i.shape[3]:i.shape[1],p=s==="NHWC"?u.shape[3]:u.shape[1];P(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),P(p===t[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${t[3]}).`),Rt("conv2dDerFilter",o,a);let m={x:i,dy:u},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return D.runKernel(fm,m,c)}var lc=A({conv2DBackpropFilter_:AZ});function Ql(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return _(r,fi(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Jl(r,e){let t=e,n=St(r.shape,e.shape);return n.length>0&&(t=de(t,n)),$(t,r.shape)}function ep(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Zr(r);if(e==="elu")return rl(r);if(e==="relu6")return sy(r);if(e==="prelu")return tc(r,t);if(e==="leakyrelu")return Ym(r,n);if(e==="sigmoid")return Mn(r);throw new Error(`Unknown fused activation ${e}.`)}var tp=(r,e)=>!(r>0)||e==="linear";function wZ({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(u=u||"linear",tp(D.state.gradientDepth,u)===!1){P(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let w=Zo(r,e,t,n,o,s,a);return i!=null&&(w=Z(w,i)),ep(w,u,l,p)}let m=v(r,"x","conv2d","float32"),c=v(e,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=$(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Rt("fused conv2d",n,a);let h=o==="NHWC"?d.shape[3]:d.shape[1];P(c.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),P(Er(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let g=Kl(d.shape,c.shape,t,s,n,a),b;i!=null&&(b=v(i,"bias","fused conv2d"),[b]=Qe(b,m),o==="NHWC"?ze(g.outShape,b.shape):(P(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),P(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(l!=null){let w=l.shape;if(P(w.length<=1||w.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${w.length}.`),w.length===1)P(w[0]===1||w[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the number of output channels (${g.outChannels}).`);else if(w.length===3)try{ze(w,g.outShape)}catch{let F=`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(F)}x=v(l,"prelu weights","fused conv2d")}let T=(w,R)=>{P(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[F,M,L,z]=R,W=Ql(w,L,u);P(Xo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let V=jm(M.shape,W,F,t,n),j=lc(M,W,F.shape,t,n),q=[V,j];if(z!=null){let Y=Jl(z,W);q.push(Y)}return q},I={x:d,filter:c,bias:b,preluActivationWeights:x},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?dn((R,F,M)=>{let L=D.runKernel(Ss,I,k);return M([F,R,L]),f&&(L=$(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:T}})(d,c):dn((R,F,M,L)=>{let z=D.runKernel(Ss,I,k);return L([F,R,z,M]),f&&(z=$(z,[z.shape[1],z.shape[2],z.shape[3]])),{value:z,gradFunc:T}})(d,c,b)}var GP=A({fusedConv2d_:wZ});function NZ(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={x:i,dy:u},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return D.runKernel(ym,l,p)}var yy=A({depthwiseConv2dNativeBackpropFilter_:NZ});function DZ(r,e,t,n,o,s=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={dy:i,filter:t},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},m=D.runKernel(xm,l,p);return u?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var xy=A({depthwiseConv2dNativeBackpropInput_:DZ});function PZ({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(tp(D.state.gradientDepth,u)===!1){let k=tl(r,e,t,n,o,s,a);return i!=null&&(k=Z(k,i)),ep(k,u,l,p)}let m=v(r,"x","depthwiseConv2d","float32"),c=v(e,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=$(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),P(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),P(Er(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),Rt("fused depthwiseConv2d",n,a);let h=Kl(d.shape,c.shape,t,s,n,a,!0),g;i!=null&&(g=v(i,"bias","fused conv2d"),[g]=Qe(g,m),ze(h.outShape,g.shape));let b;l!=null&&(b=v(l,"prelu weights","fused depthwiseConv2d"));let x=(k,w)=>{P(Xo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[R,F,M,L]=w,z=Ql(k,M,u),W=xy(F.shape,z,R,t,n,s,a),V=yy(F,z,R.shape,t,n,s,a);if(L!=null){let j=Jl(g,z);return[W,V,j]}return[W,V]},T={x:d,filter:c,bias:g,preluActivationWeights:b},I={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?dn((w,R,F)=>{let M=D.runKernel(vs,T,I);return F([R,w,M]),f&&(M=$(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:x}})(d,c):dn((w,R,F,M)=>{let L=D.runKernel(vs,T,I);return M([R,w,L,F]),f&&(L=$(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:x}})(d,c,g)}var UP=A({fusedDepthwiseConv2d_:PZ});function RZ({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(tp(D.state.gradientDepth,s)===!1){let z=qe(r,e,t,n);return o!=null&&(z=Z(z,o)),ep(z,s,a,i)}let u=v(r,"a","fused matMul"),l=v(e,"b","fused matMul");[u,l]=Qe(u,l);let p=t?u.shape[u.rank-2]:u.shape[u.rank-1],m=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=t?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=rt(f),b=rt(h);P(p===m,()=>`Error in fused matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${t} and transposeB=${n} must match.`);let T=ze(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([c,d]),I=t?$(u,[g,p,c]):$(u,[g,c,p]),k=n?$(l,[b,d,m]):$(l,[b,m,d]),w;o!=null&&(w=v(o,"bias","fused matMul"),[w]=Qe(w,u),ze(T,w.shape));let R;a!=null&&(R=v(a,"prelu weights","fused matMul"));let F=(z,W)=>{let[V,j,q,Y]=W,J=Ql($(z,q.shape),q,s),H,te;if(!t&&!n?(H=qe(J,j,!1,!0),te=qe(V,J,!0,!1)):!t&&n?(H=qe(J,j,!1,!1),te=qe(J,V,!0,!1)):t&&!n?(H=qe(j,J,!1,!0),te=qe(V,J,!1,!1)):(H=qe(j,J,!0,!0),te=qe(J,V,!0,!0)),o!=null){let se=Jl(Y,J);return[H,te,se]}else return[H,te]},M={a:I,b:k,bias:w,preluActivationWeights:R},L={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?dn((W,V,j)=>{let q=D.runKernel(ks,M,L);return j([W,V,q]),{value:$(q,T),gradFunc:F}})(I,k):dn((W,V,j,q)=>{let Y=D.runKernel(ks,M,L);return q([W,V,Y,j]),{value:$(Y,T),gradFunc:F}})(I,k,w)}var WP=A({fusedMatMul_:RZ});function FZ(r){return Yd(r,.54,.46)}var KP=A({hammingWindow_:FZ});function MZ(r){return Yd(r,.5,.5)}var Ty=A({hannWindow_:MZ});function EZ(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Ge(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,u=mt([Ge(r,s,e-i),ci([i],o)]);a.push(u),s+=t}return a.length===0?La([],[0,e]):$(mt(a),[a.length,e])}var Iy=A({frame_:EZ});function _Z(r,e,t,n,o=Ty){n==null&&(n=Ak(e));let s=Iy(r,e,t),a=_(s,o(e));return ic(a,n)}var VP=A({stft_:_Z});function LZ(r,e,t,n,o="bilinear",s=0){let a=v(r,"image","cropAndResize"),i=v(e,"boxes","cropAndResize","float32"),u=v(t,"boxInd","cropAndResize","int32"),l=i.shape[0];P(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),P(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),P(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let p={image:a,boxes:i,boxInd:u},m={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(pa,p,m)}var HP=A({cropAndResize_:LZ});function $Z(r){let e=v(r,"image","flipLeftRight","float32");P(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(fa,t,{})}var qP=A({flipLeftRight_:$Z});function BZ(r){let e=v(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];P(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Xr(e,o)}var jP=A({grayscaleToRGB_:BZ});function OZ(r,e,t=0,n=.5){let o=v(r,"image","rotateWithOffset","float32");P(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return D.runKernel(Ma,s,a)}var XP=A({rotateWithOffset_:OZ});function Es(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),P(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),P(e.rank===1,()=>"scores must be a 1D tensor"),P(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),P(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function zZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression","float32"),a=v(e,"scores","nonMaxSuppression","float32"),i=Es(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(Ca,{boxes:s,scores:a},u)}var YP=A({nonMaxSuppression_:zZ});function ZP(r,e,t){let n=GZ(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function GZ(r,e,t){return WZ(r,e,t||UZ)}function UZ(r,e){return r>e?1:r<e?-1:0}function WZ(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function Cy(r,e,t,n,o){return wk(r,e,t,n,o,0)}function ky(r,e,t,n,o,s){return wk(r,e,t,n,o,0,!1,s,!0)}function Sy(r,e,t,n,o,s){return wk(r,e,t,n,o,s,!0)}function wk(r,e,t,n,o,s,a=!1,i=!1,u=!1){let l=[];for(let g=0;g<e.length;g++)e[g]>o&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(QP);let p=s>0?-.5/s:0,m=[],c=[];for(;m.length<t&&l.length>0;){let g=l.pop(),{score:b,boxIndex:x,suppressBeginIndex:T}=g;if(b<o)break;let I=!1;for(let k=m.length-1;k>=T;--k){let w=KZ(r,x,m[k]);if(w>=n){I=!0;break}if(g.score=g.score*VZ(n,p,w),g.score<=o)break}g.suppressBeginIndex=m.length,I||(g.score===b?(m.push(x),c.push(g.score)):g.score>o&&ZP(l,g,QP))}let d=m.length,f=t-d;i&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return a&&(h.selectedScores=c),u&&(h.validOutputs=d),h}function KZ(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),p=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(i-s)*(u-a),f=(m-l)*(c-p);if(d<=0||f<=0)return 0;let h=Math.max(s,l),g=Math.max(a,p),b=Math.min(i,m),x=Math.min(u,c),T=Math.max(b-h,0)*Math.max(x-g,0);return T/(d+f-T)}function VZ(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function QP(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function HZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppressionAsync"),a=v(e,"scores","nonMaxSuppressionAsync"),i=Es(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u=await Promise.all([s.data(),a.data()]),l=u[0],p=u[1],{selectedIndices:m}=Cy(l,p,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),jt(m,"int32")}var JP=HZ;function qZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),u=Es(a,i,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:a,scores:i},p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=D.runKernel(ka,l,p);return{selectedIndices:m[0],selectedScores:m[1]}}var eR=A({nonMaxSuppressionWithScore_:qZ});async function jZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),u=Es(a,i,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([a.data(),i.data()]),p=l[0],m=l[1],{selectedIndices:c,selectedScores:d}=Sy(p,m,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:jt(c,"int32"),selectedScores:jt(d)}}var tR=jZ;function XZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),u=Es(a,i,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,c={boxes:a,scores:i},d={maxOutputSize:l,iouThreshold:p,scoreThreshold:m,padToMaxOutputSize:s},f=D.runKernel(Vi,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var rR=A({nonMaxSuppressionPadded_:XZ});async function YZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),u=Es(a,i,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,[c,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:h}=ky(c,d,l,p,m,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:jt(f,"int32"),validOutputs:ce(h,"int32")}}var nR=YZ;function ZZ(r,e,t=!1,n=!1){let o=v(r,"images","resizeBilinear");P(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),P(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=D.runKernel($o,i,u);return a?$(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var oR=A({resizeBilinear_:ZZ});function QZ(r,e,t=!1,n=!1){let o=v(r,"images","resizeNearestNeighbor");P(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),P(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=D.runKernel(Lo,i,u);return a?$(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var sR=A({resizeNearestNeighbor_:QZ});function JZ(r,e="binary",t=!1,n=.5){let o=v(r,"image","threshold"),s=.2989,a=.587,i=.114,u=o.shape[0]*o.shape[1],l=_(jt([n]),255),p,m,c,d;if(P(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),P(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),P(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),P(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[p,m,c]=Rr(o,[1,1,1],-1);let g=_(p,s),b=_(m,a),x=_(c,i);d=Z(Z(g,b),x)}else d=r;if(e==="otsu"){let g=$b(oe(ay(d),"int32"),Nr([]),256);l=eQ(g,u)}let f=t?Fs(d,l):pr(d,l);return oe(_(f,255),"int32")}function eQ(r,e){let t=jt([-1]),n=jt([0]),o=jt([0]),s,a,i,u,l,p;for(let m=0;m<r.size-1;m++){s=Ge(r,0,m+1),a=Ge(r,m+1),l=me(de(s),e),p=me(de(a),e);let c=de(_(s,al(0,s.size)));i=me(c,de(s));let d=ci(a.shape,s.size),f=Z(al(0,a.size),d),h=_(a,f);u=me(de(h),de(a));let g=le(i,u),b=le(i,u),x=_(l,p);o=_(_(x,g),b);let T=pr(o,n);n=Wt(T,o,n),t=Wt(T,jt([m]),t)}return t}var aR=A({threshold_:JZ});function tQ(r,e,t="nearest",n="constant",o=0,s){let a=v(r,"image","transform","float32"),i=v(e,"transforms","transform","float32");P(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),P(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:a,transforms:i},l={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return D.runKernel(Fa,u,l)}var iR=A({transform_:tQ});function rQ(r,e,t){P(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),P(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=v(r,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=$(al(0,s,1,"int32"),[-1,1]),u=al(0,a,1,"int32"),l=le(i,u),p=Yr(Fs(l,ce(+e,"int32")),Rs(l,ce(-t,"int32"))),m=It([s,a],n.dtype);return $(yr(Ur($(n,[-1,s,a])).map(c=>Wt(p,c,m))),o)}var uR=A({bandPart_:rQ});function nQ(r){let e;if(Array.isArray(r)){e=!1,P(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)P(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=Rr(r,r.shape[0],0).map(o=>Ms(o,[0]));P(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=_(de(_(t[a],s)),t[a]);s=le(s,i)}return me(s,Vl(s,"euclidean"))}));return e?yr(t,0):t}var lR=A({gramSchmidt_:nQ});function oQ(r,e=!1){if(P(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return pR(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=Ur($(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,p]=pR(u,e);o.push(l),s.push(p)});let a=$(yr(o,0),r.shape),i=$(yr(s,0),r.shape);return[a,i]}}function pR(r,e=!1){return D.tidy(()=>{P(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=Hl(t),s=mn(r),a=La([[1]],[1,1]),i=mn(a),u=t>=n?n:t;for(let l=0;l<u;++l){let p=s,m=i,c=o;[i,s,o]=D.tidy(()=>{let d=Ge(s,[l,l],[t-l,1]),f=Vl(d),h=Ge(s,[l,l],[1,1]),g=Wt(pr(h,0),La([[-1]]),La([[1]])),b=le(h,_(g,f)),x=me(d,b);x.shape[0]===1?i=mn(a):i=mt([a,Ge(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let T=et(me(qe(g,b),f)),I=Ge(s,[l,0],[t-l,n]),k=_(T,i),w=We(i);if(l===0)s=le(I,qe(k,qe(w,I)));else{let M=le(I,qe(k,qe(w,I)));s=mt([Ge(s,[0,0],[l,n]),M],0)}let R=We(k),F=Ge(o,[0,l],[t,o.shape[1]-l]);if(l===0)o=le(F,qe(qe(F,i),R));else{let M=le(F,qe(qe(F,i),R));o=mt([Ge(o,[0,0],[t,l]),M],1)}return[i,s,o]}),Re([p,m,c])}return!e&&t>n&&(o=Ge(o,[0,0],[t,n]),s=Ge(s,[0,0],[n,n])),[o,s]})}var mR=A({qr_:oQ});var $a=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))($a||{});function sQ(r,e,t=3){let n=v(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=v(e,"weights","computeWeightedLoss"));let s=o==null?n:_(n,o);if(t===0)return s;if(t===2)return de(s);if(t===1){if(o==null)return Bt(s);{let a=n.size/o.size,i=me(de(s),de(o));return a>1?me(i,ce(a)):i}}if(t===3){if(o==null)return me(de(s),ce(n.size));{let a=_(o,br(n.shape)),i=oe(de(au(a,ce(0))),"float32");return me(de(s),i)}}throw Error(`Unknown reduction: ${t}`)}var Wr=A({computeWeightedLoss_:sQ});function aQ(r,e,t,n=3){let o=v(r,"labels","absoluteDifference"),s=v(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=v(t,"weights","absoluteDifference")),zt(o.shape,s.shape,"Error in absoluteDifference: ");let i=Ut(le(o,s));return Wr(i,a,n)}var cR=A({absoluteDifference_:aQ});function iQ(r,e,t,n,o=3){let s=v(r,"labels","cosineDistance"),a=v(e,"predictions","cosineDistance"),i=null;n!=null&&(i=v(n,"weights","cosineDistance")),zt(s.shape,a.shape,"Error in cosineDistance: ");let u=ce(1),l=le(u,de(_(s,a),t,!0));return Wr(l,i,o)}var dR=A({cosineDistance_:iQ});function uQ(r,e,t,n=3){let o=v(r,"labels","hingeLoss"),s=v(e,"predictions","hingeLoss"),a=null;t!=null&&(a=v(t,"weights","hingeLoss")),zt(o.shape,s.shape,"Error in hingeLoss: ");let i=ce(1);o=le(_(ce(2),o),i);let u=Zr(le(i,_(o,s)));return Wr(u,a,n)}var fR=A({hingeLoss_:uQ});function lQ(r,e,t,n=1,o=3){let s=v(r,"labels","huberLoss"),a=v(e,"predictions","huberLoss"),i=null;t!=null&&(i=v(t,"weights","huberLoss")),zt(s.shape,a.shape,"Error in huberLoss: ");let u=ce(n),l=Ut(le(a,s)),p=sl(l,u),m=le(l,p),c=Z(_(ce(.5),Ye(p)),_(u,m));return Wr(c,i,o)}var hR=A({huberLoss_:lQ});function pQ(r,e,t,n=1e-7,o=3){let s=v(r,"labels","logLoss"),a=v(e,"predictions","logLoss"),i=null;t!=null&&(i=v(t,"weights","logLoss")),zt(s.shape,a.shape,"Error in logLoss: ");let u=ce(1),l=ce(n),p=et(_(s,Gr(Z(a,l)))),m=_(le(u,s),Gr(Z(le(u,a),l))),c=le(p,m);return Wr(c,i,o)}var gR=A({logLoss_:pQ});function mQ(r,e,t,n=3){let o=v(r,"labels","meanSquaredError"),s=v(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=v(t,"weights","meanSquaredError")),zt(o.shape,s.shape,"Error in meanSquaredError: ");let i=dy(o,s);return Wr(i,a,n)}var bR=A({meanSquaredError_:mQ});function cQ(r,e){let t=v(r,"labels","sigmoidCrossEntropyWithLogits"),n=v(e,"logits","sigmoidCrossEntropyWithLogits");zt(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Zr(n),s=_(n,t),a=Zm(gr(et(Ut(n))));return Z(le(o,s),a)}function dQ(r,e,t,n=0,o=3){let s=v(r,"multiClassLabels","sigmoidCrossEntropy"),a=v(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","sigmoidCrossEntropy")),zt(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=ce(n),p=ce(1),m=ce(.5);s=Z(_(s,le(p,l)),_(m,l))}let u=cQ(s,a);return Wr(u,i,o)}var yR=A({sigmoidCrossEntropy_:dQ});function fQ(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return dn((o,s,a)=>{let u=Jb(s,[t],!0),l=le(oe(s,"float32"),u);a([o,l]);let p=et(_(l,o));return{value:de(p,[t]),gradFunc:(d,f)=>{let[h,g]=f,b=Ps(d.shape,[t]);return[_($(d,b),le(oe(h,"float32"),gr(g))),_($(d,b),le(gr(g),oe(h,"float32")))]}}})(r,e)}function hQ(r,e,t,n=0,o=3){let s=v(r,"onehotLabels","softmaxCrossEntropy"),a=v(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","softmaxCrossEntropy")),zt(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let l=ce(n),p=ce(1),m=ce(s.shape[1]);s=Z(_(s,le(p,l)),me(l,m))}let u=fQ(s,a);return Wr(u,i,o)}var xR=A({softmaxCrossEntropy_:hQ});function gQ(r,e,t,n){let o=v(r,"indices","sparseFillEmptyRows","int32"),s=v(e,"values","sparseFillEmptyRows"),a=v(t,"denseShape","sparseFillEmptyRows","int32"),i=v(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let u={indices:o,values:s,denseShape:a,defaultValue:i},l=D.runKernel($u,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var TR=A({sparseFillEmptyRows_:gQ});function bQ(r,e,t){let n=v(r,"inputIndices","sparseReshape","int32"),o=v(e,"inputShape","sparseReshape","int32"),s=v(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=D.runKernel(Yi,a);return{outputIndices:i[0],outputShape:i[1]}}var IR=A({sparseReshape_:bQ});function yQ(r,e,t){let n=v(r,"data","sparseSegmentMean"),o=v(e,"indices","sparseSegmentMean","int32"),s=v(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel(Bu,a)}var CR=A({sparseSegmentMean_:yQ});function xQ(r,e,t){let n=v(r,"data","sparseSegmentSum"),o=v(e,"indices","sparseSegmentSum","int32"),s=v(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel(Ou,a)}var kR=A({sparseSegmentSum_:xQ});function TQ(r,e,t,n,o,s,a,i){let u=v(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=v(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},m={data:u,dataSplits:l},c=D.runKernel(li,m,p);return{nGrams:c[0],nGramsSplits:c[1]}}var SR=A({stringNGrams_:TQ});function IQ(r,e,t=!0){let n=v(r,"input","stringSplit","string"),o=v(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},a={input:n,delimiter:o},i=D.runKernel(Gu,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var vR=A({stringSplit_:IQ});function CQ(r,e){let t=v(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return D.runKernel(Uu,o,n)}var AR=A({stringToHashBucketFast_:CQ});var kQ={fft:ac,ifft:Zl,rfft:ic,irfft:cy},SQ={hammingWindow:KP,hannWindow:Ty,frame:Iy,stft:VP},ul={flipLeftRight:qP,grayscaleToRGB:jP,resizeNearestNeighbor:sR,resizeBilinear:oR,rotateWithOffset:XP,cropAndResize:HP,nonMaxSuppression:YP,nonMaxSuppressionAsync:JP,nonMaxSuppressionWithScore:eR,nonMaxSuppressionWithScoreAsync:tR,nonMaxSuppressionPadded:rR,nonMaxSuppressionPaddedAsync:nR,threshold:aR,transform:iR},Nk={bandPart:uR,gramSchmidt:lR,qr:mR},vQ={absoluteDifference:cR,computeWeightedLoss:Wr,cosineDistance:dR,hingeLoss:fR,huberLoss:hR,logLoss:gR,meanSquaredError:bR,sigmoidCrossEntropy:yR,softmaxCrossEntropy:xR},AQ={sparseFillEmptyRows:TR,sparseReshape:IR,sparseSegmentMean:CR,sparseSegmentSum:kR},wQ={stringNGrams:SR,stringSplit:vR,stringToHashBucketFast:AR};var Qr=class extends Nb{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return Re(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Yb(e,t)}dispose(){this.iterations_!=null&&Re(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Qr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var rp=class extends Qr{constructor(e,t,n=null){super();this.learningRate=e;this.rho=t;this.epsilon=n;this.accumulatedGrads=[];this.accumulatedUpdates=[];n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:U(()=>De(s).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:U(()=>De(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let u=this.accumulatedGrads[o].variable,l=this.accumulatedUpdates[o].variable;U(()=>{let p=Z(_(u,this.rho),_(Ye(i),1-this.rho)),m=_(me($t(Z(l,this.epsilon)),$t(Z(u,this.epsilon))),i),c=Z(_(l,this.rho),_(Ye(m),1-this.rho));u.assign(p),l.assign(c);let d=Z(_(m,-this.learningRate),s);s.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Re(this.accumulatedGrads.map(e=>e.variable)),Re(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};rp.className="Adadelta";Fn(rp);var np=class extends Qr{constructor(e,t=.1){super();this.learningRate=e;this.initialAccumulatorValue=t;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:U(()=>ci(s.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[o].variable;U(()=>{let u=Z(i,Ye(a));i.assign(u);let l=Z(_(me(a,$t(Z(u,D.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Re(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};np.className="Adagrad";Fn(np);var op=class extends Qr{constructor(e,t,n,o=null){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];U(()=>{this.accBeta1=ce(t).variable(),this.accBeta2=ce(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);U(()=>{let n=le(1,this.accBeta1),o=le(1,this.accBeta2);t.forEach((s,a)=>{let i=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:U(()=>De(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:U(()=>De(i).variable(u))});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[a].variable,m=this.accumulatedSecondMoment[a].variable,c=Z(_(p,this.beta1),_(l,1-this.beta1)),d=Z(_(m,this.beta2),_(Ye(l),1-this.beta2)),f=me(c,n),h=me(d,o);p.assign(c),m.assign(d);let g=Z(_(me(f,Z($t(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(_(this.accBeta1,this.beta1)),this.accBeta2.assign(_(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Re(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),U(()=>{this.accBeta1.assign(Hn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Hn(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};op.className="Adam";Fn(op);var sp=class extends Qr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.decay=s;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];U(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);U(()=>{let n=le(1,this.accBeta1),o=me(-this.learningRate,Z(_(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:De(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:De(i).variable(u)});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[a].variable,m=this.accumulatedWeightedInfNorm[a].variable,c=Z(_(p,this.beta1),_(l,1-this.beta1)),d=_(m,this.beta2),f=Ut(l),h=Qo(d,f);p.assign(c),m.assign(h);let g=Z(_(me(o,n),me(c,Z(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(Z(this.iteration,1)),this.accBeta1.assign(_(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Re(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};sp.className="Adamax";Fn(sp);var iu=class extends Qr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let a=D.registeredVariables[n];U(()=>{let i=Z(_(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Gt(ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};iu.className="SGD";Fn(iu);var ap=class extends iu{constructor(e,t,n=!1){super(e);this.learningRate=e;this.momentum=t;this.useNesterov=n;this.accumulations=[];this.m=ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${n}/momentum`,variable:U(()=>De(s).variable(!1))});let a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&U(()=>{let u,l=Z(_(this.m,a),i);this.useNesterov?u=Z(_(this.c,Z(i,_(l,this.m))),s):u=Z(_(this.c,l),s),a.assign(l),s.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Re(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ap.className="Momentum";Fn(ap);var ip=class extends Qr{constructor(e,t=.9,n=0,o=null,s=!1){super();this.learningRate=e;this.decay=t;this.momentum=n;this.epsilon=o;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:U(()=>De(s).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:U(()=>De(s).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:U(()=>De(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let u=this.accumulatedMeanSquares[o].variable,l=this.accumulatedMoments[o].variable;U(()=>{let p=Z(_(u,this.decay),_(Ye(i),1-this.decay));if(this.centered){let m=this.accumulatedMeanGrads[o].variable,c=Z(_(m,this.decay),_(i,1-this.decay)),d=me(_(i,this.learningRate),$t(le(p,Z(Ye(c),this.epsilon)))),f=Z(_(l,this.momentum),d);u.assign(p),m.assign(c),l.assign(f);let h=le(s,f);s.assign(h)}else{let m=Z(_(u,this.decay),_(Ye(i),1-this.decay)),c=Z(_(l,this.momentum),me(_(i,this.learningRate),$t(Z(m,this.epsilon))));u.assign(m),l.assign(c);let d=le(s,c);s.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Re(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Re(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Re(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};ip.className="RMSProp";Fn(ip);var hi=class{static sgd(e){return new iu(e)}static momentum(e,t,n=!1){return new ap(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new ip(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new op(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new rp(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new sp(e,t,n,o,s)}static adagrad(e,t=.1){return new np(e,t)}};var up={sgd:hi.sgd,momentum:hi.momentum,adadelta:hi.adadelta,adagrad:hi.adagrad,rmsprop:hi.rmsprop,adamax:hi.adamax,adam:hi.adam};var NQ=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function Zd(){return new Promise(r=>NQ(()=>r()))}var C={};je(C,{ERF_A1:()=>OQ,ERF_A2:()=>zQ,ERF_A3:()=>GQ,ERF_A4:()=>UQ,ERF_A5:()=>WQ,ERF_P:()=>BQ,PARALLELIZE_THRESHOLD:()=>vy,SELU_SCALE:()=>Pk,SELU_SCALEALPHA:()=>Dk,applyActivation:()=>ep,assertAndGetBroadcastShape:()=>ze,assertAxesAreInnerMostDims:()=>oX,assertParamsConsistent:()=>DQ,assignToTypedArray:()=>XQ,axesAreInnerMostDims:()=>dk,calculateShapes:()=>Z1,checkEinsumDimSizes:()=>t7,checkPadOnDimRoundingMode:()=>Rt,combineLocations:()=>E2,complexWithEvenIndex:()=>HQ,complexWithOddIndex:()=>qQ,computeConv2DInfo:()=>Kl,computeConv3DInfo:()=>T2,computeDefaultPad:()=>ck,computeDilation2DInfo:()=>a8,computeOptimalWindowSize:()=>RQ,computeOutAndReduceShapes:()=>fk,computeOutShape:()=>PQ,computePool2DInfo:()=>mk,computePool3DInfo:()=>i8,convertConv2DDataFormat:()=>I2,decodeEinsumEquation:()=>JQ,eitherStridesOrDilationsAreOne:()=>Er,expandShapeToKeepDim:()=>Ps,exponent:()=>ZQ,exponents:()=>YQ,fromStringArrayToUint8:()=>C7,fromUint8ToStringArray:()=>I7,getAxesPermutation:()=>hk,getBroadcastDims:()=>j1,getComplexWithIndex:()=>jQ,getEinsumComputePath:()=>r7,getEinsumPermutation:()=>e7,getFusedBiasGradient:()=>Jl,getFusedDyActivation:()=>Ql,getImageCenter:()=>FQ,getInnerMostAxes:()=>sX,getPermuted:()=>EQ,getReductionAxes:()=>St,getReshaped:()=>MQ,getReshapedPermuted:()=>_Q,getSliceBeginCoords:()=>LQ,getSliceSize:()=>$Q,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>a7,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>i7,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>u7,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>m7,getSparseReshapeInputOutputMismatchErrorMessage:()=>d7,getSparseReshapeInputOutputMultipleErrorMessage:()=>c7,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>l7,getSparseReshapeNegativeOutputDimErrorMessage:()=>p7,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>b7,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>f7,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>h7,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>g7,getUndoAxesPermutation:()=>Vd,isIdentityPermutation:()=>n7,log:()=>bj,mergeRealAndImagArrays:()=>KQ,prepareAndValidate:()=>Y1,prepareSplitSize:()=>s7,segment_util:()=>Fk,shouldFuse:()=>tp,slice_util:()=>Tt,splitRealAndImagArrays:()=>VQ,tupleValuesAreOne:()=>Xo,upcastType:()=>_t,validateInput:()=>wb,validateUpdateShape:()=>sk,warn:()=>pi});function DQ(r,e){let t=r[0].length;r.forEach((o,s)=>{P(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),P(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)P(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function PQ(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var vy=30;function RQ(r){return r<=vy?r:um(r,Math.floor(Math.sqrt(r)))}function FQ(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function MQ(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function EQ(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2===1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function _Q(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function LQ(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function $Q(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var Dk=1.7580993408473768,Pk=1.0507009873554805;var BQ=.3275911,OQ=.254829592,zQ=-.284496736,GQ=1.421413741,UQ=-1.453152027,WQ=1.061405429;function KQ(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function VQ(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function HQ(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function qQ(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function jQ(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function XQ(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function YQ(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function ZQ(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var Rk="->",QQ=/->/g,wR=",",NR="...";function JQ(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(QQ,"").length)/Rk.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Rk}").`);let[n,o]=r.split(Rk);P(n.indexOf(NR)===-1,()=>`The ellipsis notation ("${NR}") is not supported yet.`);let s=n.split(wR),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let c=0;c<n.length;++c){let d=n[c];i.indexOf(d)===-1&&d!==wR&&i.push(d)}let u=new Array(s.length);for(let c=0;c<a;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);u[c]=[];for(let d=0;d<s[c].length;++d)u[c].push(i.indexOf(s[c][d]))}let l=i.length,p=o.length,m=[];for(let c=p;c<l;++c)m.push(c);return{allDims:i,summedDims:m,idDims:u}}function e7(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function t7(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let a=0;a<e[o].length;++a)n[e[o][a]]===void 0?n[e[o][a]]=s[a]:P(n[e[o][a]]===s[a],()=>`Expected dimension ${n[e[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function r7(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<t.length;++a){let i=t[a],u=o7(e,i);for(let l of u)s.indexOf(l)===-1&&(n[a].push(l),s.push(l))}return{path:t,steps:n}}function n7(r){return r.every((e,t)=>e===t)}function o7(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function s7(r,e,t=0){let n=[];if(typeof e=="number")P(r.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);P(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,u)=>u>0?i+u:i);e[s]=r.shape[t]-a}P(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}function a7(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function i7(r,e){return`indices(${r}, 0) is invalid: ${e} < 0`}function u7(r,e,t){return`indices(${r}, 0) is invalid: ${e} >= ${t}`}function l7(r,e){return`only one output dimension may be -1, not both ${r} and ${e}`}function p7(r,e){return`size ${r} must be non-negative, not ${e}`}function m7(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function c7(r,e){let t=rt(r),n=rt(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${e}`}function d7(r,e){let t=rt(r),n=rt(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${e}`}function f7(){return"segment ids must be >= 0"}function h7(){return"segment ids are not increasing"}function g7(r,e){return`Segment id ${r} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function b7(r,e,t){return`Bad: indices[${r}] == ${e} out of range [0, ${t})`}var Fk={};je(Fk,{collectGatherOpShapeInfo:()=>T7,computeOutShape:()=>x7,segOpComputeOptimalWindowSize:()=>y7});function y7(r,e){let t=!1,n;for(r<=vy?(n=r,t=!0):n=um(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=um(r,n+1);return n}function x7(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function T7(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let m=0;m<n;++m)if(r.shape[m]!==e.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${e.shape[m]}.`);let a=r.shape[t],i=[],u=1,l=1,p=1;for(let m=0;m<n;++m)i.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<t;m++)i.push(r.shape[m]),l*=r.shape[m];for(let m=n;m<o;m++)i.push(e.shape[m]);for(let m=t+1;m<s;m++)i.push(r.shape[m]),p*=r.shape[m];return{batchSize:u,sliceSize:p,outerSize:l,dimSize:a,outputShape:i}}function I7(r){try{return r.map(e=>Bm(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function C7(r){return r.map(e=>Vu(e))}var xr={};je(xr,{nonMaxSuppressionV3Impl:()=>Cy,nonMaxSuppressionV4Impl:()=>ky,nonMaxSuppressionV5Impl:()=>Sy,whereImpl:()=>gy});var jn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,jn.prototype)}},Jr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Jr.prototype)}},O=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,O.prototype)}},Pe=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Pe.prototype)}},Qd=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Qd.prototype)}};var Ay=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Ls(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Jo(r,e){if(!r)throw new Qd(e)}function Ek(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Fr(r){return r.length===1?r[0]:r}function vt(r){return Array.isArray(r)?r:[r]}function $s(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function uu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var _s={};function pc(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function Mk(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>Mk(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:Mk(n))}}}function gi(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in _s)a=_s[s];else if(a=e[s],a==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,u;if(a in t?[i,u]=t[a]:a in _s?[i,u]=_s.className:a in e&&([i,u]=e[a]),i==null)throw new O(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let d of Object.keys(_s))l[d]=_s[d];for(let d of Object.keys(t))l[d]=t[d];let p=s.config;p.customObjects=l;let m={..._s};for(let d of Object.keys(t))_s[d]=t[d];Mk(s.config);let c=u(i,s.config,t,o);return _s={...m},c}else{let l={..._s};for(let m of Object.keys(t))_s[m]=t[m];let p=new i(s.config);return _s={...l},p}}}function k7(r,e){return r<e?-1:r>e?1:0}function Jd(r,e){return-1*k7(r,e)}function Bs(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function DR(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function bi(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new O(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function wy(r,e,t=0,n=1/0){return Jo(t>=0),Jo(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function nr(r,e){Array.isArray(r)?(y.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>nr(t,`element ${n+1} of ${e}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${PR(r)}.`)}function PR(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>PR(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function RR(r,e,t){let n=t!=null?t():y.now(),o;return(...a)=>{let i=t!=null?t():y.now();return i-n<e||(n=i,o=r(...a)),o}}function Ny(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var S7=0;function Py(){return S7++}var Dy={};function ll(r=""){return r in Dy||(Dy[r]=0),Dy[r]+=1,r+Dy[r].toString()}var FR=["channelsFirst","channelsLast"],MR=["nearest","bilinear"],ER=["valid","same","causal"],_R=["max","avg"],LR=["sum","mul","concat","ave"];var mc=new Map;function Kt(r){bi(FR,"DataFormat",r)}function BR(r){bi(MR,"InterpolationFormat",r)}function fn(r){bi(ER,"PaddingMode",r)}function _k(r){bi(_R,"PoolMode",r)}var ef=[],$R="/";function Oa(r,e){ef.push(r);try{let t=e();return ef.pop(),t}catch(t){throw ef.pop(),t}}function v7(){return ef.length===0?"":ef.join($R)+$R}function Ry(r){if(!OR(r))throw new Error("Not a valid tensor name: '"+r+"'");return v7()+r}function Fy(r){if(!OR(r))throw new Error("Not a valid tensor name: '"+r+"'");mc.has(r)||mc.set(r,0);let e=mc.get(r);if(mc.set(r,mc.get(r)+1),e>0){let t=`${r}_${e}`;return mc.set(t,1),t}else return r}var A7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function OR(r){return!!r.match(A7)}function zR(r){return r===parseInt(r.toString(),10)}function Os(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function lp(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function za(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function en(r,e){if(e<r)throw new O(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}var Lk;function dr(){return Lk==null&&(Lk=V1().epsilon()),Lk}function hn(){return"channelsLast"}function pp(r,e){return oe(r,e)}function pu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),$(r,t)}function GR(r,e){return U(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=pu(r,1);return Ey(t,[1,e,1])})}function UR(r){let e=[Os(r.shape)];return $(r,e)}function WR(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],Os(r.shape,1)];return $(r,e)}function lu(r,e,t){return U(()=>{switch(r.rank){case 1:return nc(r,e,t);case 2:return Xd(r,[e,0],[t,r.shape[1]]);case 3:return oc(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Yl(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Ge(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Ge(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function $k(r,e,t){return U(()=>{switch(r.rank){case 1:return nc(r,e,t);case 2:return Xd(r,[0,e],[r.shape[0],t]);case 3:return oc(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Yl(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function tf(r,e,t,n){return U(()=>{switch(r.rank){case 1:return nc(r,e,t);case 2:switch(n){case 1:return lu(r,e,t);case 2:return $k(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return lu(r,e,t);case 2:return oc(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return $k(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return lu(r,e,t);case 2:return Yl(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Yl(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return $k(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function cc(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),mt(r,e)}function Ok(r,e){switch(r.rank){case 1:return Bb([r,e]);case 2:return Ob([r,e],0);case 3:return zb([r,e],0);case 4:return Gb([r,e],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Ey(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new O(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Xr(r,e)}function dc(r,e=0,t=1,n,o){return Xl(r,e,t,n,o)}function zs(r,e,t,n){if(r.rank<2||e.rank<2)throw new Pe(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Pe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2)return il.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:n?Bk(r.rank,n,hn()):null,activation:t});{let o=r.shape.slice(),s=o.pop();r=$(r,[-1,s]);let a=e.shape.slice(),i=a.pop(),u=a.pop(),l=[...a,i],p=Array.from({length:e.rank},(f,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=$(We(e,p),[u,-1]);let m=[...o,...l],c=!1,d=!1;return $(il.matMul({a:r,b:e,transposeA:c,transposeB:d,bias:n?Bk(r.rank,n,hn()):null,activation:t}),m)}}function _y(r,e,t){return U(()=>(Array.isArray(e)?e=jt(e,"int32"):e=oe(e,"int32"),ol(r,e,t)))}function mp(r){return _(r,r)}function Bk(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new O(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1,1,1]):$(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,1,1,n[0]]):$(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1,1]):$(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,1,n[0]]):$(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1]):$(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,n[0]]):$(e,[1].concat(n))}else if(r<3)return e;throw new O(`Unsupported input rank by biasAdd: ${e.rank}`)}function gn(r,e,t){return U(()=>(t==null&&(t=hn()),Kt(t),Z(r,Bk(r.rank,e,t))))}function KR(r,e=1){if(e!==1)throw new Pe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return rl(r)}function VR(r){return U(()=>me(r,Z(Ut(r),1)))}function Ly(r,e,t,n){return U(()=>vk(r,e,t,n))}function HR(r){return U(()=>{let e=Z(.5,_(.2,r));return zr(e,0,1)})}function pl(r,e,t=!1){return t?r():e()}var qR=["fanIn","fanOut","fanAvg"],jR=["normal","uniform","truncatedNormal"];function w7(r){bi(qR,"FanMode",r)}function N7(r){bi(jR,"Distribution",r)}var En=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},rf=class extends En{apply(e,t){return It(e,t)}};rf.className="Zeros";re.registerClass(rf);var cp=class extends En{apply(e,t){return br(e,t)}};cp.className="Ones";re.registerClass(cp);var nf=class extends En{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return U(()=>_(ce(this.value),br(e,t)))}getConfig(){return{value:this.value}}};nf.className="Constant";re.registerClass(nf);var of=class extends En{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return di(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};of.className="RandomUniform";re.registerClass(of);var sf=class extends En{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`randomNormal does not support dType ${t}.`);return dc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};sf.className="RandomNormal";re.registerClass(sf);var af=class extends En{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`truncatedNormal does not support dType ${t}.`);return uc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};af.className="TruncatedNormal";re.registerClass(af);var uf=class extends En{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return U(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return _(this.gain,Hl(e[0]))})}getConfig(){return{gain:this.gain}}};uf.className="Identity";re.registerClass(uf);function D7(r,e="channelsLast"){let t,n;if(Kt(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=Os(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=Os(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=Os(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var tn=class extends En{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,w7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,N7(this.distribution),this.seed=e.seed}apply(e,t){let n=D7(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`${this.getClassName()} does not support dType ${t}.`);return uc(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return di(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};tn.className="VarianceScaling";re.registerClass(tn);var fc=class extends tn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return tn.className}};fc.className="GlorotUniform";re.registerClass(fc);var hc=class extends tn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return tn.className}};hc.className="GlorotNormal";re.registerClass(hc);var gc=class extends tn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return tn.className}};gc.className="HeNormal";re.registerClass(gc);var bc=class extends tn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return tn.className}};bc.className="HeUniform";re.registerClass(bc);var yc=class extends tn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return tn.className}};yc.className="LeCunNormal";re.registerClass(yc);var xc=class extends tn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return tn.className}};xc.className="LeCunNormal";re.registerClass(xc);var lf=class extends En{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Pe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return U(()=>{if(e.length<2)throw new Pe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=dc(n,0,1,"float32"),s=Nk.gramSchmidt(o);return e[0]>e[1]&&(s=We(s)),_(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};lf.className="Orthogonal";re.registerClass(lf);var XR={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function YR(r,e={}){return gi(r,re.SerializationMap.getMap().classNameMap,e,"initializer")}function Ft(r){return pc(r)}function Ct(r){if(typeof r=="string"){let e=r in XR?XR[r]:r;if(e==="GlorotNormal")return new hc;if(e==="GlorotUniform")return new fc;if(e==="HeNormal")return new gc;if(e==="HeUniform")return new bc;if(e==="LeCunNormal")return new yc;if(e==="LeCunUniform")return new xc;{let t={};return t.className=e,t.config={},YR(t)}}else return r instanceof En?r:YR(r)}function $y(r){return Array.isArray(r)&&Array.isArray(r[0])}function Tc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Oe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function nt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Ic(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var QR="Variable",By=class{constructor(e,t="float32",n=QR,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=Py(),n=n??QR,this.originalName=Ry(n),this.name=Fy(this.originalName),this.trainable_=o,this.constraint=s,this.val=hy(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),R7(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function R7(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function pf(r){return r.map(e=>e.read())}function Cc(r){r.forEach(e=>{e[0].write(e[1])})}var Mt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},yn=class{constructor(e,t,n,o,s,a,i){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=Py(),a!=null&&(this.originalName=Ry(a),this.name=Fy(this.originalName)),this.rank=t.length}},F7=0,ml=class{constructor(e,t){this.callArgs=t;this.id=F7++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},M7=0,Ke=class extends re.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=M7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=$s(n)+"_"+ll(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Jr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Fr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Fr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new jn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new jn(`Layer ${this.name} is not connected, no input to return.`);return Fr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new jn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new jn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Fr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=vt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=vt(this.inputSpec);if(e.length!==t.length)throw new O(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let u in s.axes){let l=Number(u),p=s.axes[u],m=l>=0?i[l]:i[i.length+l];if(p!=null&&[p,null].indexOf(m)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${p} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let u=s.shape[i],l=o.shape[i];if(u!=null&&l!=null&&u!==l)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=vt(e),o=!0;for(let a of n)if(!(a instanceof yn)){o=!1;break}let s=!0;for(let a of n)if(a instanceof yn){s=!1;break}if(o===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return Oa(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of vt(e))a.push(i.shape);this.build(Fr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=vt(a),u=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(a=Fr(u),this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=E7(e),i=this.computeOutputShape(a),u,l=_7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?u=i.map((p,m)=>new yn(l,p,this,vt(e),t,this.name,m)):u=new yn(l,i,this,vt(e),t,this.name),this.addInboundNode(e,u,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new jn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new jn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Jr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ic(this.weights)}build(e){this.built=!0}getWeights(e=!1){return pf(e?this.trainableWeights:this.weights)}setWeights(e){U(()=>{let t=this.weights;if(t.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=pf(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],u=e[s];if(!y.arraysEqual(a.shape,u.shape))throw new O(`Layer weight shape ${a.shape} not compatible with provided weight shape ${u.shape}`);n.push([i,u])}Cc(n)})}addWeight(e,t,n,o,s,a,i,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=u!=null?u():Ct("zeros"));let l=o.apply(t,n),p=new By(l,n,e,a,i);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(p.read())),a==null&&(a=!0),a?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=vt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let u=vt(e);t=vt(t),n=vt(n),o=vt(o),s=Tc(s),a=Tc(a);let l=[],p=[],m=[];for(let c of u)l.push(c.sourceLayer),p.push(c.nodeIndex),m.push(c.tensorIndex);new ml({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:m,inputTensors:u,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let c=0;c<t.length;c++)t[c].sourceLayer=this,t[c].nodeIndex=this.inboundNodes.length-1,t[c].tensorIndex=c}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function E7(r){r=vt(r);let e=[];for(let t of r)e.push(t.shape);return Fr(e)}function _7(r){return"float32"}function zk(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],u=n.nodeIndices[s],l=zk(a,i,u);for(let p of l)o.indexOf(p)===-1&&o.push(p)}return o}}}var yi=class extends Ke{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:ll("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new yn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new ml({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};yi.className="InputLayer";re.registerClass(yi);function Oy(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new yi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function L7(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return oe(e,r.dtype)}catch{throw new O(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Ga=class{constructor(e){this.id2Value={};this.id2Mask={};this.name2Id={};if(e instanceof Ga)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=L7(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new O(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof yn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof yn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Re(this.id2Mask)}},zy=new Ay,Gy=new Ay;function eF(r){zy?.setMaxEntries(r),Gy?.setMaxEntries(r)}function dp(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(f=>f.name),u=[],l=e.names();for(let f of i)l.indexOf(f)!==-1?u.push(e.getValue(f)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let p=i.join(",")+"|"+e.names().sort().join(","),m=zy.get(p),c;if(m==null){let f=$7(a,e);m=f.sorted,c=f.recipientCounts,zy.put(p,m),Gy.put(p,c)}c={},o||Object.assign(c,Gy.get(p));let d=new Ga(e);for(let f=0;f<m.length;++f){if(n!=null){let M=Gd().numTensors;M>n.maxNumTensors&&(n.maxNumTensors=M),M<n.minNumTensors&&(n.minNumTensors=M)}let h=m[f],g=h.sourceLayer;if(g instanceof yi)continue;let b=[],x=[],T=[],I=!1;for(let M of h.inputs){let L=d.getValue(M),z=d.getMask(M);b.push(L),x.push(z),z!=null&&(I=!0),o||(c[M.name]--,c[M.name]===0&&!e.hasKey(M)&&i.indexOf(M.name)===-1&&!L.isDisposed&&M.sourceLayer.stateful!==!0&&T.push(L))}I&&(t=t||{},t.mask=x[0]);let k=vt(g.apply(b,t)),w=null;g.supportsMasking&&(w=g.computeMask(b,x));let R=O7(h),F=Array.isArray(R)?R:[R];for(let M=0;M<F.length;++M){d.hasKey(F[M])||d.add(F[M],k[M],Array.isArray(w)?w[0]:w);let L=i.indexOf(F[M].name);L!==-1&&(u[L]=k[M])}o||Re(T)}return d.disposeMasks(),s?u:u[0]}function $7(r,e){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=JR(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=JR(s,e);for(let u of a)o.has(u.name)||(t.push(u),o.add(u.name));for(let u in i)n[u]==null&&(n[u]=new Set),i[u].forEach(l=>n[u].add(l))}}return{sorted:t,recipientCounts:B7(n)}}function B7(r){let e={};for(let t in r)e[t]=r[t].size;return e}function JR(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let u=a[a.length-1]===s.length-1;if(i.inputs.length===0||u)s.pop(),n.push(i),t.add(i.name),u&&a.pop();else{a.push(s.length-1);for(let l of i.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(i.name),!t.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function O7(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var z7=B();z7.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,eF);var Uy={kernelName:is,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,fi(oe(t,"float32"),-1))}}};var tF={kernelName:Di,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Ye(oe(t,"float32")),o=$t(le(ce(1),n));return et(me(r,o))}}}};var rF={kernelName:Pi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=$t(le(Ye(oe(t,"float32")),1));return me(r,n)}}}};var nF={kernelName:An,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=r,u=St(t.shape,o);return u.length>0&&(i=de(i,u)),$(i,t.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=de(i,u)),$(i,n.shape)}}}};var oF={kernelName:ro,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var sF={kernelName:no,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var aF={kernelName:si,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var iF={kernelName:Mi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,$t(le(ce(1),Ye(oe(t,"float32")))))}}};var uF={kernelName:Ei,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=$t(Z(ce(1),Ye(oe(t,"float32"))));return me(r,n)}}}};var lF={kernelName:$i,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=Z(Ye(t),Ye(n)),u=_(r,me(n,i)),l=St(t.shape,o);return l.length>0&&(u=de(u,l)),$(u,t.shape)},b:()=>{let i=Z(Ye(t),Ye(n)),u=et(_(r,me(t,i))),l=St(n.shape,o);return l.length>0&&(u=de(u,l)),$(u,n.shape)}}}};var pF={kernelName:_i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Z(Ye(oe(t,"float32")),1))}}};var mF={kernelName:Li,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,le(ce(1),Ye(oe(t,"float32"))))}}};function G7(r,e,t,n,o,s){let a=v(r,"dy","avgPool3dGrad"),i=v(e,"input","avgPool3dGrad"),u=a,l=i,p=!1;i.rank===4&&(p=!0,u=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Rt("avgPool3dGrad",o,s);let m={dy:u,input:l},c={filterSize:t,strides:n,pad:o,dimRoundingMode:s},d=D.runKernel(mm,m,c);return p?$(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var cF=A({avgPool3dGrad_:G7});var dF={kernelName:wu,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=t;return{x:()=>cF(r,n,o,s,a,i)}}};function U7(r,e,t,n,o){let s=v(r,"dy","avgPoolGrad"),a=v(e,"input","avgPoolGrad");P(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,u=s,l=!1;a.rank===3&&(l=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),P(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let p={dy:u,input:i},m={filterSize:t,strides:n,pad:o},c=D.runKernel(pm,p,m);return l?$(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var fF=A({avgPoolGrad_:U7});var hF={kernelName:oo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>fF(r,n,o,s,a)}}};var gF={kernelName:so,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>qe(r,o,!1,!0),b:()=>qe(n,r,!0,!1)}:!s&&a?{a:()=>qe(r,o,!1,!1),b:()=>qe(r,n,!0,!1)}:s&&!a?{a:()=>qe(o,r,!1,!0),b:()=>qe(n,r,!1,!1)}:{a:()=>qe(o,r,!0,!0),b:()=>qe(r,n,!0,!0)}}};var bF={kernelName:us,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>ec(r,n,o)}}};var yF={kernelName:P0,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])a[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>de(r,i,!0)}}};var xF={kernelName:Gn,gradFunc:r=>({x:()=>r.clone()})};var TF={kernelName:ao,gradFunc:r=>({x:()=>De(r)})};var IF={kernelName:Un,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Wt(Yr(Rs(n,o),Fs(n,s)),r,De(r))}}};var CF={kernelName:Du,inputsToSave:["x"],gradFunc:Uy.gradFunc};var kF={kernelName:ls,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(u=>u.shape),{axis:o}=t,s=hr(o,e[0].shape)[0],a=n.map(u=>u[s]);return Rr(r,a,s).map(u=>()=>u)}};var SF={kernelName:io,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:u}=t;return P(Xo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>jm(n.shape,r,o,a,i,u),filter:()=>lc(n,r,o.shape,a,i,u)}}};var vF={kernelName:uo,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:u}=t;return{dy:()=>Zo(r,o,s,a,i,1,u),filter:()=>lc(r,n,o.shape,s,a,i,u)}}};function W7(r,e,t,n,o){let s=r;r.rank===4&&(s=$(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=$(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),P(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),P(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),P(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),P(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),P(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},u={strides:n,pad:o,filterShape:t};return D.runKernel(hm,i,u)}var AF=A({conv3DBackpropFilter_:W7});var wF={kernelName:Pu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;P(Xo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>Vb(a.shape,r,i,o,s),filter:()=>AF(a,r,i.shape,o,s)}}};var NF={kernelName:lo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(et(py(oe(t,"float32"))),r)}}};var DF={kernelName:po,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(my(oe(t,"float32")),r)}}};var PF={kernelName:mo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=hk([o],n.rank),u=jb(r,o,s,!a);return i!=null&&(u=We(u,i)),u}}}};var RF={kernelName:co,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n??[1,1];P(Xo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[u,l]=e;return P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),P(Er(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Rt("depthwiseConv2d",s,a),{x:()=>xy(u.shape,r,l,o,s,i,a),filter:()=>yy(u,r,l.shape,o,s,i,a)}}};var FF={kernelName:Ru,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>D.runKernel(Pd,s,t),filter:()=>D.runKernel(Rd,a,t)}}};var MF={kernelName:ho,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(Im,n)}}};var EF={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=_(gr(et(Ye(t))),2/Math.sqrt(Math.PI));return{x:()=>_(r,n)}}};var _F={kernelName:go,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,t)}}};var LF={kernelName:ps,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>$(r,t.shape)}}};var $F={kernelName:da,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,gr(t))}}};var BF={kernelName:bo,gradFunc:r=>({x:()=>De(r)})};var OF={kernelName:yo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=me(r,oe(n,"float32")),u=St(t.shape,o);return u.length>0?$(de(i,u),t.shape):i},b:()=>{let i=_(r,oe(t,"float32")),u=St(n.shape,o);u.length>0&&(i=$(de(i,u),n.shape));let l=Ye(n);return et(me(i,oe(l,"float32")))}}}};var zF={kernelName:xo,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,u=i??ce(1),l=St(s.shape,o.shape),p=[];if(s.rank===1){for(let I=0;I<o.shape.length-1;++I)p.push(o.shape[I]);p.push(1)}let m=le(o,s),c=_(r,u),d=iy(Z(a,ce(n))),f=_(_(_(d,d),d),ce(-.5));return{x:()=>s.rank===1?$(_(_(r,Xr($(d,[1,1,1,s.shape[0]]),p)),u),o.shape):$(_(_(r,d),u),o.shape),mean:()=>{let I=_(_(d,ce(-1)),c);return s.rank===1&&(I=de(I,l)),$(I,s.shape)},variance:()=>{let I=_(_(f,m),c);return s.rank===1&&(I=de(I,l)),$(I,s.shape)},scale:()=>{let I=_(m,d),k=_(r,I);return s.rank===1&&(k=de(k,l)),$(k,s.shape)},offset:()=>{let I=r;return s.rank===1&&(I=de(I,l)),$(I,s.shape)}}}};var WF={kernelName:ms,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=hr(s,n.shape)[0];return{x:()=>{let u=n.shape,l=o.size,p=u.slice(0,a),m=p.length,c=u.slice(s,u.length).slice(1),d=c.length,f=GF(0,m),h=GF(m+1,m+1+d),g=UF([p,[l],c]),b=$(r,g),x=$(o,[l]),T=UF([[m],f,h]),I=We(b,T),k=fy(I,x,n.shape[a]),w=Vd(T);return k=We(k,w),k},indices:()=>o}}};function GF(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function UF(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var KF={kernelName:To,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>De(t),b:()=>De(n)}}};var VF={kernelName:Wn,gradFunc:r=>({x:()=>oe(r,"float32")})};var HF={kernelName:Oi,gradFunc:r=>({x:()=>De(r)})};var qF={kernelName:zi,gradFunc:r=>({x:()=>De(r)})};var jF={kernelName:Gi,gradFunc:r=>({x:()=>De(r)})};var XF={kernelName:Io,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=pr(n,0);return{x:()=>Wt(s,r,_(r,o))}}};var YF={kernelName:Ui,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Z(t,1))}}};var ZF={kernelName:Co,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,oe(t,"float32"))}}};var QF={kernelName:F0,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let a=gr(n);return le(r,_(de(r,o,!0),a))}}}};function K7(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},u={depthRadius:n,bias:o,alpha:s,beta:a};return D.runKernel(vm,i,u)}var JF=A({localResponseNormalizationBackprop_:K7});var eM={kernelName:Eu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:u}=t;return{x:()=>JF(n,o,r,s,a,i,u)}}};function Wy(r,e,t,n){return e.rank<t.rank&&(e=$(e,Ps(e.shape,n))),r.rank<t.rank&&(r=$(r,Ps(r.shape,n))),{x:()=>_(r,oe(jr(t,e),r.dtype))}}var Gk={kernelName:ko,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=hr(o,s.shape),u=Wy(r,a,s,i);return{x:()=>u.x()}}};var tM={kernelName:So,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>_(r,oe(Rs(t,n),"float32")),b:()=>_(r,oe(Xb(t,n),"float32"))}}};function V7(r,e,t,n,o,s,a){let i=v(r,"dy","maxPool3dGrad"),u=v(e,"input","maxPool3dGrad"),l=v(t,"output","maxPool3dGrad"),p=i,m=u,c=l,d=!1;u.rank===4&&(d=!0,p=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=$(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),c=$(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),P(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),P(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Rt("maxPool3dGrad",s,a);let f={dy:p,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=D.runKernel(wm,f,h);return d?$(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var rM=A({maxPool3dGrad_:V7});var nM={kernelName:_u,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=t;return{x:()=>rM(r,n,o,s,a,i,u)}}};function H7(r,e,t,n,o,s,a){let i=v(r,"dy","maxPoolGrad"),u=v(e,"input","maxPoolGrad"),l=v(t,"output","maxPoolGrad");P(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),P(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),P(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Rt("maxPoolGrad",s,a);let p={dy:i,input:u,output:l},m={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return D.runKernel(Am,p,m)}var oM=A({maxPoolGrad_:H7});var sM={kernelName:vo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>oM(r,n,o,s,a,i)}}};var aM={kernelName:Ao,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=hr(o,n.shape),i=fk(n.shape,s)[1],u=rt(i);return{x:()=>{let p=n.shape.slice();s.forEach(d=>{p[d]=1});let m=$(r,p);return me(_(m,br(n.shape,"float32")),u)}}}};var iM={kernelName:wo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=hr(o,s.shape),u=Wy(r,a,s,i);return{x:()=>u.x()}}};var uM={kernelName:No,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>_(r,oe(Fs(t,n),"float32")),b:()=>_(r,oe(pr(t,n),"float32"))}}};var lM={kernelName:Do,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ge(r,s,n.shape)}}};var pM={kernelName:Ki,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=St(t.shape,o);return i.length>0?$(de(r,i),t.shape):r},b:()=>{let i=_(r,et(nl(me(t,n)))),u=St(n.shape,o);return u.length>0?$(de(i,u),n.shape):i}}}};var mM={kernelName:Po,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=_(r,oe(n,"float32")),u=St(t.shape,o);return u.length>0?$(de(i,u),t.shape):i},b:()=>{let i=_(r,oe(t,"float32")),u=St(n.shape,o);return u.length>0?$(de(i,u),n.shape):i}}}};var cM={kernelName:cs,gradFunc:r=>({x:()=>et(r)})};var dM={kernelName:Sa,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>It(t.shape,"float32")}}};var fM={kernelName:ds,gradFunc:r=>({x:()=>De(r)})};var hM={kernelName:fs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return Ur(r,n).map(s=>()=>s)}};var Uk={kernelName:Ro,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ge(r,s,n.shape)}}};var gM={kernelName:Fo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=ze(s.shape,a.shape);return{a:()=>{let p=oe(a,"float32"),m=_(r,_(p,Hn(s,le(p,ce(1))))),c=St(s.shape,i);return c.length>0&&(m=de(m,c)),$(m,s.shape)},b:()=>{let p=pr(s,0),m=Wt(p,Gr(s),De(s)),c=_(r,_(o,m)),d=St(a.shape,i);return d.length>0&&(c=de(c,d)),$(c,a.shape)}}}};var bM={kernelName:Mo,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=pr(t,0);return{x:()=>Wt(o,r,_(r,n)),alpha:()=>{let s=Wt(o,De(r),_(r,t)),a=St(n.shape,r.shape);return a.length>0&&(s=de(s,a)),$(s,n.shape)}}}};function q7(r,e,t){let n=r.shape.slice();n[t]=1;let o=$(e,n),s=Kd(r,t,!0,!1),a=Kd(r,t,!0,!0),i=_(s,a);return _(o,i)}function j7(r,e,t){let n=r.shape.length,o=n-t.length,s=C.getAxesPermutation(t,n),a=r;s!=null&&(a=We(r,s));let i=a.shape.slice(),l=i.splice(n-t.length,t.length).reduce((c,d)=>c*d,1);i.push(l);let p=a.reshape(i),m=q7(p,e,o);if(m=m.reshape(a.shape),s!=null){let c=C.getUndoAxesPermutation(s);m=We(m,c)}return m}var yM={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=[];return o==null?s=n.shape.map((a,i)=>i):typeof o=="number"?s=[o]:s=o,{x:()=>j7(n,r,s)}}};var xM={kernelName:fo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=me(r,oe(n,"float32")),u=St(t.shape,o);return u.length>0?$(de(i,u),t.shape):i},b:()=>{let i=_(r,oe(t,"float32")),u=St(n.shape,o);u.length>0&&(i=$(de(i,u),n.shape));let l=Ye(n);return et(me(i,oe(l,"float32")))}}}};var TM={kernelName:Hi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,et(Ye(t)))}}};var IM={kernelName:Bo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=_(Fs(t,6),fi(t));return{x:()=>_(r,oe(n,"float32"))}}};var CM={kernelName:_o,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,oe(fi(t),"float32"))}}};var kM={kernelName:hs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>$(r,t.shape)}}};var SM={kernelName:$o,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(Rm,o,t)}}};var vM={kernelName:Lo,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(Pm,o,t)}}};var AM={kernelName:va,gradFunc:(r,e,t)=>{let{dims:n}=t,o=hr(n,r.shape);return{x:()=>Pr(r,o)}}};var wM={kernelName:Aa,gradFunc:r=>({x:()=>De(r)})};var NM={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>et(me(r,_(Hn(t,1.5),2)))}}};var DM={kernelName:gs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>oe(De(t),"float32"),t:()=>_(r,oe(t,r.dtype)),e:()=>_(r,oe(Qm(t),r.dtype))}}};var PM={kernelName:qi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=pr(t,ce(0)),o=ce(Dk),s=ce(Pk),a=_(r,s),i=_(_(r,o),gr(oe(t,"float32")));return Wt(n,a,i)}}}};var RM={kernelName:Go,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,_(t,le(ce(1),t)))}}};var FM={kernelName:ji,gradFunc:r=>({x:()=>De(r)})};var MM={kernelName:zo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(Xm(oe(t,"float32")),r)}}};var EM={kernelName:Na,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(qb(oe(t,"float32")),r)}}};var _M={kernelName:bs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,u]=ik(n,o,s),l=[];for(let p=0;p<r.rank;p++)l.push([i[p],a[p]-i[p]-u[p]]);return{x:()=>qn(r,l)}}};var LM={kernelName:Ko,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=_(r,n);return{logits:()=>le(a,_(de(a,[o],s),n))}}};var $M={kernelName:Xi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,Mn(t))}}};var Wk={kernelName:ys,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Hm(r,n,o)}}};var Kk={kernelName:xs,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>mt(r,n)}}};var BM={kernelName:Uo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,_($t(oe(t,"float32")),2))}}};var OM={kernelName:ui,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,_(oe(t,"float32"),2))}}};var zM={kernelName:Vo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ce(2);return{a:()=>_(r,_(o,le(t,n))),b:()=>_(r,_(o,le(n,t)))}}};var GM={kernelName:Cs,gradFunc:r=>({x:()=>De(r)})};var UM={kernelName:Ho,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=r,u=St(t.shape,o);return u.length>0&&(i=de(i,u)),$(i,t.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=de(i,u)),$(et(i),n.shape)}}}};var WM={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;hr(s,n.shape).forEach(l=>{o[l]=1});let i=$(r,o),u=_(i,br(n.shape,"float32"));return{x:()=>u}}};var KM={kernelName:Pa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Ye(Xm(t)))}}};var VM={kernelName:qo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(le(ce(1),Ye(t)),r)}}};var HM={kernelName:wn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=De(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Z(a,Ge(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)a=Z(a,Ge(r,[i*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)a=Z(a,Ge(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let p=0;p<o[3];++p)a=Z(a,Ge(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var qM={kernelName:Nn,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Vd(o);return{x:()=>We(r,s)}}};var jM={kernelName:Ts,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>yr(r,o)}}};var XM={kernelName:Wu,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>X7(r,t)}}};function X7(r,e){let t=Qo(e,De(e)),n=ol(r,t),o=Rs(e,ce(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=_r(o,i+1);o=Yr(o,br(n.shape,"bool"));let a=De(n);return Wt(o,n,a)}var YM={kernelName:Is,gradFunc:r=>({x:()=>De(r)})};var Y7=[Uy,tF,rF,nF,oF,sF,aF,iF,uF,lF,pF,mF,dF,hF,gF,bF,yF,xF,TF,IF,CF,kF,vF,SF,wF,NF,DF,PF,RF,FF,xM,MF,EF,_F,LF,$F,OF,BF,zF,WF,KF,VF,HF,qF,jF,XF,YF,ZF,QF,eM,Gk,Gk,tM,nM,sM,aM,iM,uM,lM,pM,mM,cM,dM,fM,hM,Uk,Uk,gM,bM,yM,TM,IM,CM,kM,SM,vM,AM,wM,NM,DM,PM,RM,FM,MM,EM,_M,LM,$M,Wk,Wk,Kk,Kk,BM,zM,OM,GM,UM,WM,KM,VM,HM,qM,jM,XM,YM];for(let r of Y7)E0(r);var JM={};je(JM,{maxNorm:()=>Z7,minMaxNorm:()=>eJ,nonNeg:()=>J7,unitNorm:()=>Q7});function Vk(r,e){return U(()=>$t(de(_(r,r),e,!0)))}var kc=class extends re.Serializable{getConfig(){return{}}},mf=class extends kc{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{let t=Vk(e,this.axis),n=zr(t,0,this.maxValue);return _(e,me(n,Z(dr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};mf.className="MaxNorm";re.registerClass(mf);var cf=class extends kc{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>me(e,Z(dr(),Vk(e,this.axis))))}getConfig(){return{axis:this.axis}}};cf.className="UnitNorm";re.registerClass(cf);var df=class extends kc{apply(e){return Zr(e)}};df.className="NonNeg";re.registerClass(df);var ff=class extends kc{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{let t=Vk(e,this.axis),n=Z(_(this.rate,zr(t,this.minValue,this.maxValue)),_(1-this.rate,t));return _(e,me(n,Z(dr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};ff.className="MinMaxNorm";re.registerClass(ff);var ZM={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Xt(r){return pc(r)}function QM(r,e={}){return gi(r,re.SerializationMap.getMap().classNameMap,e,"constraint")}function Yt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in ZM?ZM[r]:r,config:{}};return QM(t)}else return r instanceof kc?r:QM(r)}function Z7(r){return new mf(r)}function Q7(r){return new cf(r)}function J7(){return new df}function eJ(r){return new ff(r)}var eE={};je(eE,{constant:()=>nJ,glorotNormal:()=>pJ,glorotUniform:()=>lJ,heNormal:()=>mJ,heUniform:()=>cJ,identity:()=>iJ,leCunNormal:()=>dJ,leCunUniform:()=>fJ,ones:()=>rJ,orthogonal:()=>hJ,randomNormal:()=>sJ,randomUniform:()=>oJ,truncatedNormal:()=>aJ,varianceScaling:()=>uJ,zeros:()=>tJ});function tJ(){return new rf}function rJ(){return new cp}function nJ(r){return new nf(r)}function oJ(r){return new of(r)}function sJ(r){return new sf(r)}function aJ(r){return new af(r)}function iJ(r){return new uf(r)}function uJ(r){return new tn(r)}function lJ(r){return new fc(r)}function pJ(r){return new hc(r)}function mJ(r){return new gc(r)}function cJ(r){return new bc(r)}function dJ(r){return new yc(r)}function fJ(r){return new xc(r)}function hJ(r){return new lf(r)}var FE={};je(FE,{Layer:()=>Ke,RNN:()=>Us,RNNCell:()=>gl,activation:()=>D9,add:()=>B9,alphaDropout:()=>Iee,average:()=>O9,averagePooling1d:()=>ES,averagePooling2d:()=>_S,averagePooling3d:()=>LS,avgPool1d:()=>j9,avgPool2d:()=>Y9,avgPool3d:()=>Q9,avgPooling1d:()=>X9,avgPooling2d:()=>Z9,avgPooling3d:()=>J9,batchNormalization:()=>V9,bidirectional:()=>dee,concatenate:()=>z9,conv1d:()=>T9,conv2d:()=>I9,conv2dTranspose:()=>C9,conv3d:()=>k9,conv3dTranspose:()=>S9,convLstm2d:()=>lee,convLstm2dCell:()=>pee,cropping2D:()=>A9,dense:()=>P9,depthwiseConv2d:()=>N9,dot:()=>K9,dropout:()=>R9,elu:()=>f9,embedding:()=>$9,flatten:()=>M9,gaussianDropout:()=>Tee,gaussianNoise:()=>xee,globalAveragePooling1d:()=>eee,globalAveragePooling2d:()=>tee,globalMaxPool1d:()=>hee,globalMaxPool2d:()=>gee,globalMaxPooling1d:()=>NE,globalMaxPooling2d:()=>DE,gru:()=>nee,gruCell:()=>oee,input:()=>rS,inputLayer:()=>d9,layerNormalization:()=>H9,leakyReLU:()=>g9,lstm:()=>see,lstmCell:()=>aee,masking:()=>Cee,maxPool1d:()=>bee,maxPool2d:()=>yee,maxPooling1d:()=>PE,maxPooling2d:()=>RE,maxPooling3d:()=>ree,maximum:()=>G9,minimum:()=>U9,multiply:()=>W9,permute:()=>L9,prelu:()=>b9,reLU:()=>h9,repeatVector:()=>E9,reshape:()=>_9,rnn:()=>mee,separableConv2d:()=>v9,simpleRNN:()=>iee,simpleRNNCell:()=>uee,softmax:()=>y9,spatialDropout1d:()=>F9,stackedRNNCells:()=>cee,thresholdedReLU:()=>x9,timeDistributed:()=>fee,upSampling2d:()=>w9,zeroPadding2d:()=>q9});async function xi(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Re(n)}}function Ky(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var gJ=125,cl=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Hk=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},tE=class extends cl{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=U(()=>Z(this.totals[o],_(s,n)));this.totals[o]=i,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:U(()=>{let o=_(me(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Gt(t[n])}))}},qk=class extends cl{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let u=a[i];e.push(u.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},jk=class extends cl{constructor(e,t){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Zd,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=gJ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=RR(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await xi(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await xi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await xi(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await xi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await xi(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await xi(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await xi(e),await this.trainEnd(e))}};function Vy(r,e){return r==null&&(r={}),r instanceof cl?[r]:Array.isArray(r)&&r[0]instanceof cl?r:vt(r).map(n=>new jk(n,e))}var Ua=class{constructor(){}static registerCallbackConstructor(e,t){y.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Ua.checkForDuplicate(t),Ua.constructors[e]==null&&(Ua.constructors[e]=[]),Ua.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Ua.constructors)Ua.constructors[+t].forEach(o=>{if(o===e)throw new O("Duplicate callback constructor.")})}static clear(){Ua.constructors={}}static createCallbacks(e){let t=[];for(let n in Ua.constructors){let o=+n;e>=o&&t.push(...Ua.constructors[o])}return t.map(n=>new n)}},hf=Ua;hf.constructors={};function Hy(r,e,t,n,o,s,a,i,u){let l=new qk,p=[new tE,...hf.createCallbacks(e)];r!=null&&p.push(...r),p.push(l);let m=new Hk(p);return m.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:u}),{callbackList:m,history:l}}function xn(r,e={},t=!1){return gi(r,re.SerializationMap.getMap().classNameMap,e,"layer",t)}function gf(r,e){return U(()=>{r.dtype!=="float32"&&(r=oe(r,"float32"));let t=de(mp(r),e,!0),n=ci(t.shape,dr()),o=$t(Qo(t,n));return me(r,o)})}function Ti(r,e){return U(()=>Bt(mp(le(e,r)),-1))}function Sc(r,e){return U(()=>Bt(Ut(le(e,r)),-1))}function dl(r,e){return U(()=>{let t=le(r,e),n=zr(Ut(r),dr(),Number.MAX_VALUE),o=Ut(me(t,n));return _(100,Bt(o,-1))})}function bJ(r,e){return U(()=>{let t=zr(e,dr(),Number.MAX_VALUE),n=Gr(Z(1,t)),o=zr(r,dr(),Number.MAX_VALUE),s=Gr(Z(1,o));return Bt(mp(le(n,s)),-1)})}function yJ(r,e){return U(()=>{let t=Qo(0,le(1,_(r,e)));return Bt(mp(t),-1)})}function xJ(r,e){return U(()=>{let t=Qo(0,le(1,_(r,e)));return Bt(t,-1)})}function TJ(r,e){return U(()=>{let t=de(_(r,e),-1),n=cn(_(le(1,r),e),-1);return Qo(0,Z(1,le(n,t)))})}function IJ(r,e){return U(()=>{let t=Math.log(2),n=le(e,r),o=le(Z(n,su(_(-2,n))),t);return Bt(o,-1)})}function fp(r,e,t=!1){return U(()=>{if(t)e=sc(e);else{let n=de(e,e.shape.length-1,!0);e=me(e,n)}return e=zr(e,dr(),1-dr()),et(de(_(oe(r,"float32"),Gr(e)),e.shape.length-1))})}function vc(r,e,t=!1){return U(()=>{let n=oe(nl(UR(r)),"int32");e=zr(e,dr(),1-dr());let o=e.shape,s=$(Xu(n,o[o.length-1]),o);return fp(s,e,t)})}function CJ(r,e){if(!y.arraysEqual(r.shape,e.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return U(()=>{let t=Zr(e),n=et(Ut(e));return Z(le(t,_(e,r)),Zm(gr(n)))})}function Ac(r,e){return U(()=>{let t;return t=zr(e,dr(),1-dr()),t=Gr(me(t,le(1,t))),Bt(CJ(r,t),-1)})}function kJ(r,e){return U(()=>{let t=zr(r,dr(),1),n=zr(e,dr(),1);return de(_(r,Gr(me(t,n))),-1)})}function SJ(r,e){return U(()=>{let t=Gr(Z(dr(),e));return Bt(le(e,_(r,t)),-1)})}function yf(r,e){return U(()=>{let t=gf(r,-1),n=gf(e,-1),o=_(t,n);return et(de(o,-1))})}var bf={meanSquaredError:Ti,meanAbsoluteError:Sc,meanAbsolutePercentageError:dl,meanSquaredLogarithmicError:bJ,squaredHinge:yJ,hinge:xJ,categoricalHinge:TJ,logcosh:IJ,categoricalCrossentropy:fp,sparseCategoricalCrossentropy:vc,binaryCrossentropy:Ac,kullbackLeiblerDivergence:kJ,poisson:SJ,cosineProximity:yf};function qy(r){if(typeof r=="string"){if(r in bf)return bf[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(e)}else return r}function xf(r,e){return U(()=>{let t=_(.5,Lr(e)),n=pp(pr(e,t),r.dtype);return Bt(jr(r,n),-1)})}function Tf(r,e){return U(()=>pp(jr(Qu(r,-1),Qu(e,-1)),"float32"))}function nE(r,e){return U(()=>oe(de(Yr(jr(r,1),jr(e,1))),"float32"))}function vJ(r,e){return U(()=>oe(de(Yr(jr(r,1),jr(e,0))),"float32"))}function AJ(r,e){return U(()=>oe(de(Yr(jr(r,0),jr(e,1))),"float32"))}function Xk(r,e){return U(()=>{let t=nE(r,e),n=AJ(r,e),o=Z(t,n);return oe(Wt(pr(o,0),me(t,o),0),"float32")})}function oE(r,e){return U(()=>{let t=nE(r,e),n=vJ(r,e),o=Z(t,n);return oe(Wt(pr(o,0),me(t,o),0),"float32")})}function Xy(r,e){return Ac(r,e)}function Yy(r,e){return r.rank===e.rank&&(r=Ms(r,[r.rank-1])),e=Qu(e,-1),e.dtype!==r.dtype&&(e=oe(e,r.dtype)),oe(jr(r,e),"float32")}var wJ=Ti,NJ=Ti,DJ=Sc,PJ=Sc,RJ=dl,FJ=dl,If=fp,MJ=yf,Yk=vc,jy={binaryAccuracy:xf,categoricalAccuracy:Tf,precision:Xk,categoricalCrossentropy:If,sparseCategoricalCrossentropy:Yk,mse:wJ,MSE:NJ,mae:DJ,MAE:PJ,mape:RJ,MAPE:FJ,cosine:MJ};function sE(r){if(typeof r=="string"&&r in jy)return jy[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function Cf(r){if(Jo(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(bf))if(bf[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(jy))if(jy[t]===r){e=t;break}return e!==void 0?e:r.name}}function iE(r){let e={Adagrad:()=>up.adagrad(.01),Adadelta:()=>up.adadelta(1,.95,dr()),Adam:()=>up.adam(.001,.9,.999,dr()),Adamax:()=>up.adamax(.002,.9,.999,dr(),0),RMSProp:()=>up.rmsprop(.001,.9,0,dr()),SGD:()=>up.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new O(`Unknown Optimizer ${r}`)}function Qk(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!Zk(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function Zk(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!Zk(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!Zk(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function uE(r,e,t,n=console.log){let o=LJ(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(p=>Math.floor(e*p)));let a;if(!o){s.push("Receives inputs"),a=[];for(let p in r.nodesByDepth)a.push(...r.nodesByDepth[p])}n("_".repeat(e)),Zy(s,t,n),n("=".repeat(e));let i=r.layers;for(let p=0;p<i.length;++p)o?$J(i[p],t,n):BJ(i[p],t,a,n),n((p===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let u=_J(r),l=Ic(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(e))}function _J(r){let e;return r.collectedTrainableWeights!=null?e=Ic(r.collectedTrainableWeights):e=Ic(r.trainableWeights),e}function LJ(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function Zy(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function $J(r,e,t){let n,o;try{o=r.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,a=r.getClassName(),i=[`${s} (${a})`,o,n,r.countParams().toString()];Zy(i,e,t)}function BJ(r,e,t,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let a=[];for(let m of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];a.push(`${d}[${f}][${h}]`)}let i=r.name,u=r.getClassName(),l=a.length===0?"":a[0],p=[`${i} (${u})`,s,o,r.countParams().toString(),l];Zy(p,e,n);for(let m=1;m<a.length;++m)Zy(["","","","",a[m]],e,n)}function lE(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function hp(r,e){if(r===null)return null;if(typeof r=="string")return uu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];lE(e,o,s)?t.push(s):t.push(hp(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=uu(n);t[s]=hp(o,s)}}return t}}function Qy(r,e){if(r==null)return null;if(typeof r=="string")return $s(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];lE(e,o,s)?t.push(s):t.push(Qy(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=$s(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=Qy(o,n)}return t}}var kf="0.0.0";var es=class extends Ke{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let x=this.getClassName().toLowerCase();this.name=ll(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Bs(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Bs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let x of this.outputs){let T=x.sourceLayer,I=x.nodeIndex,k=x.tensorIndex;this.outputLayers.push(T),this.outputLayersNodeIndices.push(I),this.outputLayersTensorIndices.push(k)}for(let x of this.inputs){let T=x.sourceLayer,I=x.nodeIndex,k=x.tensorIndex;Jo(I===0,"input layer has >1 nodes"),Jo(k===0,"input layer has >1 tensors"),this.inputLayers.push(T),this.inputLayersNodeIndices.push(I),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){let T=this.inputLayers[x];if(!(T instanceof yi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${T.getClassName()}.`);this.inputNames.push(T.name),this.feedInputShapes.push(T.batchInputShape),this.feedInputNames.push(T.name)}for(let x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);let t={},n={},o={},s={},a={},i=[],u=(x,T,I,k,w,R)=>{(k==null||w==null||R==null)&&(k=x.sourceLayer,w=x.nodeIndex,R=x.tensorIndex);let F=k.inboundNodes[w];if(I.indexOf(F)!==-1)throw new Jr(`The tensor ${x.name} at layer "${k.name}" is part of a cycle.`);if(T.indexOf(F)!==-1)return;this.containerNodes.add(es.nodeKey(k,w)),k.id in a||(a[k.id]=Object.keys(a).length),I.indexOf(F)===-1&&I.push(F);let M=F.inboundLayers.length;for(let L=0;L<M;L++){let z=F.inputTensors[L],W=F.inboundLayers[L],V=F.nodeIndices[L],j=F.tensorIndices[L];u(z,T,I,W,V,j)}for(T.push(F);I.indexOf(F)>=0;)I.splice(I.indexOf(F),1);i.push(F)},l=[],p=[];for(let x of this.outputs)u(x,l,p);let m=i.slice().reverse();for(let x of m){n[x.id]=x,x.id in t||(t[x.id]=0);let T=t[x.id],I=o[x.outboundLayer.id]==null?0:o[x.outboundLayer.id];T=Math.max(T,I),o[x.outboundLayer.id]=T,s[x.outboundLayer.id]=x.outboundLayer,t[x.id]=T;for(let k=0;k<x.inboundLayers.length;k++){let w=x.inboundLayers[k],R=x.nodeIndices[k],F=w.inboundNodes[R],M=t[F.id]==null?0:t[F.id];t[F.id]=Math.max(T+1,M),n[F.id]=F}}let c={};for(let x in t){let T=t[x];T in c||(c[T]=[]),c[T].push(n[x])}let d={};for(let x in o){let T=o[x];T in d||(d[T]=[]),d[T].push(s[x])}let f=Object.keys(d).map(x=>parseInt(x,10)).sort(Jd);this.layers=[];for(let x of f){let T=d[x];T.sort((I,k)=>{let w=a[I.id],R=a[k.id];return w<R?-1:w>R?1:0});for(let I of T)I instanceof es&&this.internalContainerRefs.push(I),this.layers.push(I)}this.layersByDepth=d,f=Object.keys(c).map(x=>parseInt(x,10)).sort(Jd);let h=this.inputs.slice(),g=[];for(let x of f)for(let T of c[x]){let I=T.outboundLayer;if(I!=null){for(let k of T.inputTensors)if(h.indexOf(k)===-1)throw new Jr(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${I.name}". The following previous layers were accessed without issue: ${g}`);for(let k of T.outputTensors)h.push(k);g.push(I.name)}}this.nodesByDepth=c;let b=this.layers.map(x=>x.name);for(let x of b){let T=b.filter(I=>I===x).length;if(T!==1)throw new Jr(`The name "${x}" is used ${T} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new ml({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new O(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let u=a.split("/");i=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new O(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new O(`${a.length} of ${o} weights are not set: ${a}`)}Cc(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${kf}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Qy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return U(()=>{e=vt(e);let n=new Ga;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return dp(this.outputs,n,t)})}computeMask(e,t){return U(()=>{e=vt(e);let n;return t==null?n=Ls(null,e.length):n=vt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Tc(e);if(t.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let u=this.inputLayers[i],l=t[i],p=u.name+"_0_0";n[p]=l}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Jd);if(o.length>1)for(let i of o){let u=this.nodesByDepth[i];for(let l of u){let p=l.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(p.id)!==-1)continue;let m=[];for(let h=0;h<l.inboundLayers.length;h++){let g=l.inboundLayers[h],b=l.nodeIndices[h],x=l.tensorIndices[h],T=`${g.name}_${b}_${x}`,I=n[T];m.push(I)}let c=p.computeOutputShape(Fr(m)),d=Tc(c),f=p.inboundNodes.indexOf(l);for(let h=0;h<d.length;h++){let g=`${p.name}_${f}_${h}`;n[g]=d[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let u=this.outputLayers[i],l=this.outputLayersNodeIndices[i],p=this.outputLayersTensorIndices[i],m=`${u.name}_${l}_${p}`;a.push(m)}for(let i=0;i<a.length;i++){let u=a[i];Jo(u in n),s.push(n[u])}return Fr(s)}runInternalGraph(e,t){t==null&&(t=Ls(null,e.length));let n={};for(let u=0;u<this.inputs.length;++u){let l=this.inputs[u],p=e[u],m=t[u];n[l.id]=[p,m]}let o=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Jd);for(let u of o){let l=this.nodesByDepth[u];for(let p of l){let m=p.outboundLayer,c=p.inputTensors,d=p.outputTensors,f=new Array;for(let h of c)h.id in n&&f.push(n[h.id]);if(f.length===c.length){let h={},g,b,x,T;if(p.callArgs!=null&&(h=p.callArgs),f.length===1){let[I,k]=f[0];h.mask==null&&(h.mask=k),x=vt(m.call(I,h)),T=vt(m.computeMask(I,k)),g=[I],b=[k]}else g=f.map(I=>I[0]),b=f.map(I=>I[1]),h.mask==null&&(h.mask=b),x=vt(m.call(g,h)),T=vt(m.computeMask(g,b));if(m.activityRegularizer)throw new Pe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let I=0;I<d.length;++I){let k=d[I],w=x[I],R=T[I];n[k.id]=[w,R]}}}}let s=[],a=[],i=[];for(let u of this.outputs){Jo(u.id in n,`Could not compute output ${u.name} : ${u.id}`);let[l,p]=n[u.id];i.push(l.shape),s.push(l),a.push(p)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof es?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=es.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new O("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new O(`No such layer: ${e}`)}calculateLosses(){return U(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=es.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),u=a.getConfig(),l=[];for(let m=0;m<a.inboundNodes.length;m++){let c=a.inboundNodes[m],d=es.nodeKey(a,m),f={};if(this.containerNodes.has(d)){if(c.callArgs)try{JSON.stringify(c.callArgs),f=c.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${c.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(c.inboundLayers.length>0){let h=[];for(let g=0;g<c.inboundLayers.length;g++){let b=c.inboundLayers[g],x=c.nodeIndices[g],T=c.tensorIndices[g],I=es.nodeKey(b,x),k=t[I];k==null&&(k=0),h.push([b.name,k,T,f])}l.push(h)}}}let p={};p.name=a.name,p.className=i,p.config=u,p.inboundNodes=l,n.push(p)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],u=this.inputLayersNodeIndices[a],l=es.nodeKey(i,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let m=this.inputLayersTensorIndices[a];o.push([i.name,p,m])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],u=this.outputLayersNodeIndices[a],l=es.nodeKey(i,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let m=this.outputLayersTensorIndices[a];s.push([i.name,p,m])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,b){g.name in a?a[g.name].push(b):a[g.name]=[b]}function u(g,b){let x=[],T;for(let I of b){let k=I[0],w=I[1],R=I[2];if(T=I[3]==null?{}:I[3],!(k in s)){i(g,b);return}let F=s[k];if(F.inboundNodes.length<=w){i(g,b);return}let M=F.inboundNodes[w];x.push(M.outputTensors[R])}x.length>0&&g.apply(Fr(x),T)}function l(g){let b=g.name,x=xn(g,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(o),s[b]=x,g.inboundNodes.forEach(I=>{if(!(I instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${I}`);i(x,I)})}let p=t.name,m=t.layers;for(let g of m)l(g);for(;!DR(a);)for(let g of m){let b=s[g.name];if(b.name in a){let x=a[b.name];delete a[b.name];for(let T of x)u(b,T)}}let c=[],d=[],f=t.inputLayers;for(let g of f){let b=g[0],x=g[1],T=g[2];Jo(b in s);let k=s[b].inboundNodes[x].outputTensors;c.push(k[T])}let h=t.outputLayers;for(let g of h){let b=g[0],x=g[1],T=g[2];Jo(b in s);let k=s[b].inboundNodes[x].outputTensors;d.push(k[T])}return new e({inputs:c,outputs:d,name:p})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){U(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function OJ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Jy(r,e){return OJ(r,e,"classWeight")}async function ex(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=U(()=>{if(r.shape.length===1)return mn(r);if(r.shape.length===2){if(r.shape[1]>1)return Qu(r,1);if(r.shape[1]===1)return $(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Re(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),jt(a,"float32")}else return null}function pE(r,e){return _(r,e)}var zJ=32;function dE(r,e){let t,n,o=e;t=o.xs,n=o.ys,y.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=mE("input",r.inputNames,t),a=mE("output",r.outputNames,n),i=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)y.assert(s[u].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let u=0;u<a.length;u++)y.assert(a[u].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function mE(r,e,t){if(t instanceof Xe)return[t];if(Array.isArray(t))return y.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function GJ(r){if(r.length===3)throw new Pe("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function fE(r,e,t){let n=t.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),y.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),y.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(cE(t.validationData))y.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=GJ(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let p=Vy(t.callbacks,t.yieldEvery),m=t.verbose==null?1:t.verbose,{callbackList:c,history:d}=Hy(p,m,t.epochs,null,null,UJ(e,t),null,o,l);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;f<t.epochs;){let g={};await c.onEpochBegin(f);let b=0,x=0;for(n||(h=await e.iterator());!n||b<t.batchesPerEpoch;){let T=await h.next();if(n&&T.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(T.value!=null){let{xs:I,ys:k}=dE(r,T.value),w={};w.batch=x,w.size=I[0].shape[0],await c.onBatchBegin(x,w);let R=[];if(t.classWeight!=null){let L=Jy(t.classWeight,r.outputNames);for(let z=0;z<L.length;++z)R.push(await ex(k[z],null,L[z]))}let F=I.concat(k).concat(R),M=i(F);Re(F);for(let L=0;L<u.length;++L){let z=u[L],W=M[L];w[z]=W,Gt(W)}await c.onBatchEnd(x,w),Ky(w),x++,b++}if(n?b>=t.batchesPerEpoch:T.done){if(o){let I;cE(t.validationData)?I=vt(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):I=vt(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?zJ:t.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=I[k]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function UJ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function cE(r){return typeof r.iterator=="function"}function WJ(r){return typeof r.next=="function"}async function hE(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Pe("Verbose mode is not implemented yet.");y.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=WJ(e)?e:await e.iterator(),i=0,u=0;for(;!n||u<t.batches;){let l=await a.next();if(s=U(()=>{if(l.value){let{xs:p,ys:m}=dE(r,l.value),c=p.concat(m),d=U(()=>o(c));if(Re(c),u===0)for(let h=0;h<d.length;++h)s.push(ce(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],b=s[h];s[h]=U(()=>Z(s[h],_(f,g))),u>0&&Re(b)}Re(d),i+=f,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let p=s[l];s[l]=me(s[l],i),Re(p)}return Fr(s)}function tx(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function wc(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>lu(n,e,t-e)):lu(r,e,t-e)}function rx(r,e){return U(()=>r==null?null:Array.isArray(r)?r.map(t=>rx(t,e)):_y(r,e.dtype==="int32"?e:oe(e,"int32")))}function nx(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function KJ(r,e,t,n,o,s,a,i,u,l,p,m,c,d,f){o==null&&(o=32),s==null&&(s=1),p==null&&(p=!0),c==null&&(c=0);let h=!1;if(u!=null&&l!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,d,"steps_per_epoch"),b;g!=null&&(b=en(0,g)),a==null&&(a=1);let{callbackList:x,history:T}=Hy(i,a,s,c,g,d,o,h,m);x.setModel(r),r.history=T,await x.onTrainBegin(),r.stopTraining_=!1;for(let I=c;I<s;++I){await x.onEpochBegin(I);let k={};if(d!=null)throw new Pe("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Pe("batch shuffling is not implemneted yet");p&&y.shuffle(b);let w=jt(b),R=nx(g,o);for(let F=0;F<R.length;++F){let M={};if(await x.onBatchBegin(F,M),U(()=>{let L=R[F][0],z=R[F][1],W=lu(w,L,z-L);M.batch=F,M.size=z-L;let V=rx(t,W),j=e(V);for(let q=0;q<n.length;++q){let Y=n[q],J=j[q];M[Y]=J,Gt(J)}if(F===R.length-1&&h){let q=r.testLoop(u,l,o);for(let Y=0;Y<n.length;++Y){let J=n[Y],H=q[Y];Gt(H),k["val_"+J]=H}}}),await x.onBatchEnd(F,M),Ky(M),r.stopTraining_)break}w.dispose()}if(await x.onEpochEnd(I,k),r.stopTraining_)break}return await x.onTrainEnd(),await r.history.syncData(),r.history}async function gE(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,u,l,p,m,c;try{let d=n.batchSize==null?32:n.batchSize;tx(d);let f=!1,h=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,b;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)u=n.validationData[0],l=n.validationData[1];else throw n.validationData.length===3?new Pe("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let M=!0,L=await r.standardizeUserData(u,l,null,null,M,d);p=L[0],m=L[1],b=p.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let M=Math.floor(o[0].shape[0]*(1-n.validationSplit)),L=o[0].shape[0];p=wc(o,M,L),a=o,o=wc(o,0,M),m=wc(s,M,L),i=s,s=wc(s,0,M),b=p.concat(m)}else n.validationSteps!=null&&(g=!0);let x=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let T=r.makeTrainFunction(),I=r.getDedupedMetricsNames(),k,w;g?(r.makeTestFunction(),k=r.testFunction,w=I.slice().concat(I.map(M=>"val_"+M))):(k=null,b=[],w=I.slice());let R=Vy(n.callbacks,n.yieldEvery);return await KJ(r,T,x,I,d,n.epochs,n.verbose,R,k,b,n.shuffle,w,n.initialEpoch,null,null)}finally{r.isTraining=!1,Gs(o,e),Gs(s,t),Gs(a,e),Gs(i,t),Gs(p,u),Gs(m,l),c!=null&&Re(c)}}function Jk(r){let e=[];r instanceof Xe&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(pu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Gs(r,e){if(r==null)return;let t=[];if(e instanceof Xe)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Xe)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function VJ(r){return r instanceof Xe}function eS(r){return Array.isArray(r)}function bE(r){return!VJ(r)&&!eS(r)}function yE(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(eS(r)&&r.length>0)a=!0;else if(bE(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(bE(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new O(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(eS(r)){if(r=r,r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new O(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=Jk(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<t[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=t[a][u];if(p!=null&&p>=0&&l!==p)throw new O(`${o} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function HJ(r,e,t){let n=Bs(r.map(s=>s.shape[0]));n.sort();let o=Bs(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!y.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function qJ(r,e,t){let n=[Ti,Ac,fp];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===fp&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let u=s.shape.slice(1),l=i.slice(1);for(let p=0;p<u.length;++p){let m=u[p],c=l[p];if(c!=null&&m!==c)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function xE(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new O(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<t[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=t[a][u];if(p!=null&&p!==l)throw new O(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function jJ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var XJ="layers-model",ts=class extends es{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");uE(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=iE(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Qr))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new O(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(qy(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>qy(i))}else{let a=qy(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Oa("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=jJ(e.metrics,this.outputNames),s=(a,i,u)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([u,a])};Oa("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(l=>{let p="",m,c,d;for(let f of l){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Ac?["accuracy","acc"].indexOf(f)!==-1?c=xf:["crossentropy","ce"].indexOf(f)!==-1&&(c=Xy):this.lossFunctions[a]===vc?["accuracy","acc"].indexOf(f)!==-1?c=Yy:["crossentropy","ce"].indexOf(f)!==-1&&(c=Yk):["accuracy","acc"].indexOf(f)!==-1?c=Tf:["crossentropy","ce"].indexOf(f)!==-1&&(c=If);let b;["accuracy","acc"].indexOf(f)!==-1?b="acc":["crossentropy","ce"].indexOf(f)!==-1&&(b="ce"),d=c,m=p+b}else d=sE(f),m=p+Cf(f);let h;Oa(m,()=>{h=d}),s(a,m,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;tx(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let u=this.testFunction,l=this.testLoop(u,i,o,n.verbose,n.steps);return Fr(l)}finally{Gs(a[0],e),Gs(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),hE(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new O(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new Ga;if(e instanceof Xe&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],e[u])}else for(let u of this.inputs){let l=e[u.name];if(l==null)throw new O(`No value is provided for the model's input ${u.name}`);a.add(u,l)}let i=dp(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Ls(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let u=a.indexOf(e[i]);if(u!==-1&&(t[i]=s[u],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return U(()=>{let o=this.checkNumSamples(e);if(n)throw new Pe("Verbose predictLoop() is not implemented yet.");let s=nx(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)U(()=>{let l=s[i][0],p=s[i][1],m=wc(e,l,p),c=[];if(Array.isArray(m))for(let f=0;f<m.length;++f)c.push({key:this.inputs[f],value:m[f]});else c.push({key:this.inputs[0],value:m});let d=new Ga(c);return dp(this.outputs,d)}).forEach((l,p)=>a[p].push(l));return Fr(a.map(i=>mt(i,0)))})}predict(e,t={}){let n=Jk(e);xE(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return tx(o),this.predictLoop(n,o)}finally{Gs(n,e)}}predictOnBatch(e){xE(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new Jr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===vc?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=yE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=yE(t,this.feedOutputNames,s,!1,"target"),HJ(e,t,null),qJ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,u]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(o!=null){let p=Jy(o,this.outputNames);l=[];for(let m=0;m<p.length;++m)l.push(await ex(u[m],null,p[m]))}return[i,u,l]}testLoop(e,t,n,o=0,s){return U(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Pe("Verbose mode is not implemented yet.");if(s!=null)throw new Pe("steps mode in testLoop() is not implemented yet");{let u=nx(a,n),l=jt(en(0,a));for(let p=0;p<u.length;++p){let m=u[p][0],c=u[p][1],d=lu(l,m,c-m),f=rx(t,d),h=e(f);if(p===0)for(let g=0;g<h.length;++g)i.push(ce(0));for(let g=0;g<h.length;++g){let b=h[g];i[g]=Z(i[g],_(c-m,b))}}for(let p=0;p<i.length;++p)i[p]=me(i[p],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;Ek(e,o)>1&&(s+=`_${Ek(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let m=[];for(let h=0;h<this.inputs.length;++h)m.push({key:this.inputs[h],value:n[h]});let c=new Ga(m),d=dp(this.outputs,c,{training:!0}),f;for(let h=0;h<this.lossFunctions.length;++h){let b=this.lossFunctions[h](o[h],d[h]);s[h]!=null&&(b=pE(b,s[h]));let x=Bt(b);t.push(x),h===0?f=b:f=Z(f,b)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let b=this.metricsTensors[h][0],x=this.metricsTensors[h][1];g=Bt(b(o[x],d[x]))}Gt(g),a.push(g)}return f=Bt(f),this.calculateLosses().forEach(h=>{f=Z(f,h)}),f},u=this.collectedTrainableWeights.map(m=>m.read()),l=!0;return[this.optimizer_.minimize(i,l,u)].concat(a)}}makeTestFunction(){this.testFunction=e=>U(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:o[l]});let i=new Ga(a),u=dp(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let p=this.lossFunctions[l],m=Bt(p(s[l],u[l]));l===0?n=m:n=Z(n,m),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let p=this.metricsTensors[l][0],m=this.metricsTensors[l][1],c=Bt(p(s[m],u[m]));t.push(c)}return t})}async fit(e,t,n={}){return gE(this,e,t,n)}async fitDataset(e,t){return fE(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),u=[];for(let l of i){let p=await l.data();u.push(p[0])}return Re(i),Gs(n[0],e),Gs(n[1],t),Fr(u)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Gd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Gd().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=$s(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>$s(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=$s(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[$s(Cf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>$s(Cf(e)));{let e={};for(let t in this.metrics)e[t]=$s(Cf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=hp(e.optimizer_config),n=xn(t),o;if(typeof e.loss=="string")o=uu(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>uu(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=uu(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>uu(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=uu(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=Pn.getSaveHandlers(e);if(l.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new O(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Pn.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:XJ,generatedBy:`TensorFlow.js tfjs-layers v${kf}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:p,specs:m}=await Pn.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...m),n.data=Pn.concatenateArrayBuffers([n.data,p])}return this.userDefinedMetadata!=null&&(Qk(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){Qk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ts.className="Model";re.registerClass(ts);var tS=class extends ts{};tS.className="Functional";re.registerClass(tS);async function TE(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=hp(t),o=xn(n,e);if(r.weightsManifest!=null){let s=await Pn.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Re(s)}return o}async function IE(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Pn.getLoadHandlers(r,e);if(t.length===0)t.push(Pn.browserHTTPRequest(r,e));else if(t.length>1)throw new O(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return YJ(r,void 0,e)}async function YJ(r,e,t){if(t==null&&(t={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=xn(hp(o),e,a),u=n.trainingConfig;if(u!=null&&i.loadTrainingConfig(u),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:p}=ZJ(n.weightData,n.weightSpecs);i.loadWeights(l,s),i.optimizer!=null&&p.length>0&&await i.optimizer.setWeights(p),Re(l),Re(p.map(m=>m.tensor))}return i}function ZJ(r,e){let t=Pn.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var ox=class extends ts{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:ll("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof ox||e instanceof ts,n;if(t){if(n=e,n.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=Oy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=zk(this.outputs[0])}this.inboundNodes=[],new ml({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ls(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(nt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ts({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=t}else y.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof ox))throw new Pe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let u of s){let p=xn(u,void 0,o);o&&p.setFastWeightInitDuringBuild(!0),i.add(p)}return i}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},Nc=ox;Nc.className="Sequential";re.registerClass(Nc);function QJ(r){return new ts(r)}function JJ(r){return new Nc(r)}function e9(r,e){return e==null&&(e={}),IE(r,e)}function rS(r){return Oy(r)}function t9(r,e){hf.registerCallbackConstructor(r,e)}var Tn=class extends re.Serializable{getConfig(){return{}}},oS=class extends Tn{apply(e,t=1){return KR(e,t)}};oS.className="elu";re.registerClass(oS);var sS=class extends Tn{apply(e){return uy(e)}};sS.className="selu";re.registerClass(sS);var aS=class extends Tn{apply(e){return Zr(e)}};aS.className="relu";re.registerClass(aS);var iS=class extends Tn{apply(e){return U(()=>sl(6,Zr(e)))}};iS.className="relu6";re.registerClass(iS);var uS=class extends Tn{apply(e){return e}};uS.className="linear";re.registerClass(uS);var lS=class extends Tn{apply(e){return Mn(e)}};lS.className="sigmoid";re.registerClass(lS);var pS=class extends Tn{apply(e){return HR(e)}};pS.className="hardSigmoid";re.registerClass(pS);var mS=class extends Tn{apply(e){return su(e)}};mS.className="softplus";re.registerClass(mS);var cS=class extends Tn{apply(e){return VR(e)}};cS.className="softsign";re.registerClass(cS);var dS=class extends Tn{apply(e){return Ju(e)}};dS.className="tanh";re.registerClass(dS);var Sf=class extends Tn{apply(e,t=-1){return sc(e,t)}};Sf.className="softmax";re.registerClass(Sf);var fS=class extends Tn{apply(e,t=-1){return Qb(e,t)}};fS.className="logSoftmax";re.registerClass(fS);var hS=class extends Tn{apply(e,t=1){return U(()=>_(Mn(_(e,t)),e))}};hS.className="swish";re.registerClass(hS);var gS=class extends Tn{apply(e){return U(()=>_(e,Ju(su(e))))}};gS.className="mish";re.registerClass(gS);function Wa(r){return r.getClassName()}function nS(r,e={}){return gi(r,re.SerializationMap.getMap().classNameMap,e,"activation")}function Ka(r){if(r==null){let e={};return e.className="linear",e.config={},nS(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},nS(e)}else return r instanceof Tn?r:nS(r)}function bS(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var yS=class extends re.Serializable{},gp=class extends yS{constructor(e){super();bS(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return U(()=>{let t=It([1]);return this.hasL1&&(t=Z(t,de(_(this.l1,Ut(e))))),this.hasL2&&(t=Z(t,de(_(this.l2,mp(e))))),$(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};gp.className="L1L2";re.registerClass(gp);function SE(r){return bS(r),new gp({l1:r!=null?r.l1:null,l2:0})}function vE(r){return bS(r),new gp({l2:r!=null?r.l2:null,l1:0})}var CE={l1l2:"L1L2"};function bt(r){return pc(r)}function kE(r,e={}){return gi(r,re.SerializationMap.getMap().classNameMap,e,"regularizer")}function At(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in CE?CE[r]:r,config:{}};return kE(t)}else return r instanceof yS?r:kE(r)}var vf=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=Zr(e);return this.maxValue!=null&&(n=zr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};vf.className="ReLU";re.registerClass(vf);var Af=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return Ym(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Af.className="LeakyReLU";re.registerClass(Af);var wf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ct(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=At(e.alphaRegularizer),this.alphaConstraint=Yt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=nt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Mt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),tc(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Ft(this.alphaInitializer),alphaRegularizer:bt(this.alphaRegularizer),alphaConstraint:Xt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};wf.className="PReLU";re.registerClass(wf);var Nf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Pe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return rl(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Nf.className="ELU";re.registerClass(Nf);var Df=class extends Ke{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return _(n,oe(pr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Df.className="ThresholdedReLU";re.registerClass(Df);var Pf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new Sf().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Pf.className="Softmax";re.registerClass(Pf);function fl(r,e,t){if(typeof r=="number")return Ls(r,e);if(r.length!==e)throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!zR(o))throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function _n(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Va(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+za([t-e,0]);else if(n==="same")r=r*e;else throw new O(`Unsupport padding mode: ${n}.`);return r}function $f(r,e){return U(()=>(Kt(e),e==="channelsFirst"?We(r,[0,2,3,1]):r))}function TS(r,e){return U(()=>(Kt(e),e==="channelsFirst"?We(r,[0,2,3,4,1]):r))}function n9(r,e,t,n=1,o="valid",s,a=1){return U(()=>{if(s==null&&(s=hn()),Kt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=We(r,[0,2,1])),o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Ub(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=gn(i,t)),i})}function AE(r,e,t,n=[1,1],o="valid",s,a,i=null){return U(()=>{if(s==null&&(s=hn()),Kt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=$f(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=il.conv2d({x:u,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(u=We(u,[0,3,1,2])),u})}function o9(r,e,t,n=[1,1,1],o="valid",s,a){return U(()=>{if(s==null&&(s=hn()),Kt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=TS(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Kb(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=gn(i,t)),s==="channelsFirst"&&(i=We(i,[0,4,1,2,3])),i})}var Rc=class extends Ke{constructor(e,t){super(t);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(Rc.verifyArgs(t),this.rank=e,nr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Pe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=fl(t.kernelSize,e,"kernelSize"),this.strides=fl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,fn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Kt(this.dataFormat),this.activation=Ka(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Ct(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Yt(t.biasConstraint),this.biasRegularizer=At(t.biasRegularizer),this.activityRegularizer=At(t.activityRegularizer),this.dilationRate=fl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Jo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!wy(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Wa(this.activation),useBias:this.useBias,biasInitializer:Ft(this.biasInitializer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),biasConstraint:Xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},bp=class extends Rc{constructor(e,t){super(e,t);this.kernel=null;bp.verifyArgs(t),this.filters=t.filters,nr(this.filters,"filters"),this.kernelInitializer=Ct(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Yt(t.kernelConstraint),this.kernelRegularizer=At(t.kernelRegularizer)}build(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return U(()=>{e=Oe(e);let n,o=this.bias==null?null:this.bias.read(),s=Ny(this.activation.getClassName());if(s!=null&&this.rank===2)n=AE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=n9(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=AE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=o9(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Pe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=nt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=_n(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Ft(this.kernelInitializer),kernelRegularizer:bt(this.kernelRegularizer),kernelConstraint:Xt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},IS=class extends bp{constructor(e){super(2,e);IS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!wy(e.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},Dc=IS;Dc.className="Conv2D";re.registerClass(Dc);var CS=class extends bp{constructor(e){super(3,e);CS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},Pc=CS;Pc.className="Conv3D";re.registerClass(Pc);var Rf=class extends Dc{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return U(()=>{let n=Oe(e);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let u=o[a],l=o[i],p=this.kernelSize[0],m=this.kernelSize[1],c=this.strides[0],d=this.strides[1],f=Va(u,c,p,this.padding),h=Va(l,d,m,this.padding),g=[s,f,h,this.filters];this.dataFormat!=="channelsLast"&&(n=We(n,[0,2,3,1]));let b=Wb(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=We(b,[0,3,1,2])),this.bias!=null&&(b=gn(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[o]=Va(t[o],u,a,this.padding),t[s]=Va(t[s],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Rf.className="Conv2DTranspose";re.registerClass(Rf);var Ff=class extends Pc{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return U(()=>{let n=Oe(e);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i,u;this.dataFormat==="channelsFirst"?(u=2,a=3,i=4):(u=1,a=2,i=3);let l=o[u],p=o[a],m=o[i],c=this.kernelSize[0],d=this.kernelSize[1],f=this.kernelSize[2],h=this.strides[0],g=this.strides[1],b=this.strides[2],x=Va(l,h,c,this.padding),T=Va(p,g,d,this.padding),I=Va(m,b,f,this.padding),k=[s,x,T,I,this.filters];this.dataFormat!=="channelsLast"&&(n=We(n,[0,2,3,4,1]));let w=Hb(n,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=We(w,[0,4,1,2,3])),this.bias!==null&&(w=gn(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,o,s,a;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,a=4):(n=4,o=1,s=2,a=3);let i=this.kernelSize[0],u=this.kernelSize[1],l=this.kernelSize[2],p=this.strides[0],m=this.strides[1],c=this.strides[2];return t[n]=this.filters,t[o]=Va(t[o],p,i,this.padding),t[s]=Va(t[s],m,u,this.padding),t[a]=Va(t[a],c,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ff.className="Conv3DTranspose";re.registerClass(Ff);var xS=class extends bp{constructor(e,t){super(e,t);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(t.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ct(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=At(t.depthwiseRegularizer),this.depthwiseConstraint=Yt(t.depthwiseConstraint),this.pointwiseInitializer=Ct(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=At(t.pointwiseRegularizer),this.pointwiseConstraint=Yt(t.pointwiseConstraint)}build(e){if(e=nt(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Mt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return U(()=>{e=Oe(e);let n;if(this.rank===1)throw new Pe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=We(e,[0,2,3,1])),n=ly(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=gn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=We(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.pointwiseInitializer=Ft(this.pointwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.pointwiseRegularizer=bt(this.pointwiseRegularizer),e.depthwiseConstraint=Xt(this.depthwiseConstraint),e.pointwiseConstraint=Xt(this.pointwiseConstraint),e}};xS.className="SeparableConv";var Mf=class extends xS{constructor(e){super(2,e)}};Mf.className="SeparableConv2D";re.registerClass(Mf);var kS=class extends bp{constructor(e){super(1,e);kS.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!wy(e.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Ef=kS;Ef.className="Conv1D";re.registerClass(Ef);var _f=class extends Ke{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return U(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=tf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return tf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=tf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return tf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};_f.className="Cropping2D";re.registerClass(_f);var Lf=class extends Ke{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,BR(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return U(()=>{let n=Oe(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=We(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?ul.resizeNearestNeighbor(n,[s,a]):ul.resizeBilinear(n,[s,a]);return We(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?ul.resizeNearestNeighbor(n,[s,a]):ul.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};Lf.className="UpSampling2D";re.registerClass(Lf);function s9(r,e,t=[1,1],n="valid",o,s){return U(()=>{o==null&&(o=hn()),Kt(o);let a=$f(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=tl(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}var Bf=class extends Rc{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ct(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Yt(e.depthwiseConstraint),this.depthwiseRegularizer=At(e.depthwiseRegularizer)}build(e){if(e=nt(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return U(()=>{e=Oe(e);let n=s9(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=gn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=_n(t,this.kernelSize[0],this.padding,this.strides[0]),a=_n(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.depthwiseConstraint=Xt(this.depthwiseRegularizer),e}};Bf.className="DepthwiseConv2D";re.registerClass(Bf);function SS(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function vS(r,e,t,n=!1,o,s,a=!1,i=!1){return U(()=>{let u=e.shape.length;if(u<3)throw new O(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(en(2,u));if(e=We(e,l),s!=null)throw new Pe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=oe(oe(o,"bool"),"float32"),o.rank===u-1&&(o=_r(o,-1)),o=We(o,l)),n&&(e=Pr(e,0),o!=null&&(o=Pr(o,0)));let p=[],m,c=t,d=e.shape[0],f=Ur(e),h;o!=null&&(h=Ur(o));for(let b=0;b<d;++b){let x=f[b],T=U(()=>r(x,c));if(o==null)m=T[0],c=T[1];else{let I=U(()=>{let k=h[b],w=le(Lr(k),k),R=Z(_(T[0],k),_(c[0],w)),F=c.map((M,L)=>Z(_(T[1][L],k),_(M,w)));return{output:R,newStates:F}});m=I.output,c=I.newStates}i&&p.push(m)}let g;return i&&(g=yr(p,1)),[m,g,c]})}var AS=class extends Ke{constructor(e){super(e);let t;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Ec({cells:e.cell}):t=e.cell,t.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Mt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return en(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){$y(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return U(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Pe("Constants support is not implemented in RNN yet.");$y(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Mt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Mt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){U(()=>{if(!this.stateful)throw new jn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>It([n,o])):this.states_=[It([n,this.cell.stateSize])];else if(e==null)Re(this.states_),this.keptStates!=null&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>It([n,o])):this.states_[0]=It([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!y.arraysEqual(s.shape,i))throw new O(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Gt(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=SS(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Mt({shape:l.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof yn){let l=[e].concat(a),p=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=p;let c=super.apply(l,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return U(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Oe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new O(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},l=vS((f,h)=>{let g=this.cell.call([f].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),p=l[0],m=l[1],c=l[2];this.stateful&&this.resetStates(c,o);let d=this.returnSequences?m:p;return this.returnState?[d].concat(c):d})}getInitialState(e){return U(()=>{let t=It(e.shape);return t=de(t,[1,2]),t=pu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Ey(t,[1,n]):t):this.cell.stateSize>1?[Ey(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===AS.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=xn(o,n);return new e(Object.assign(t,{cell:s}))}},Us=AS;Us.className="RNN";re.registerClass(Us);var gl=class extends Ke{},Fc=class extends gl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=Ka(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=At(e.kernelRegularizer),this.recurrentRegularizer=At(e.recurrentRegularizer),this.biasRegularizer=At(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=lp([1,za([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lp([1,za([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return U(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mu({ones:()=>Lr(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mu({ones:()=>Lr(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=zs(_(e,a),this.kernel.read()):s=zs(e,this.kernel.read()),this.bias!=null&&(s=gn(s,this.bias.read())),i!=null&&(n=_(n,i));let u=Z(s,zs(n,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wa(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};Fc.className="SimpleRNNCell";re.registerClass(Fc);var Of=class extends Us{constructor(e){e.cell=new Fc(e);super(e)}call(e,t){return U(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};Of.className="SimpleRNN";re.registerClass(Of);var Mc=class extends gl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,nr(this.units,"units"),this.activation=Ka(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ka(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=At(e.kernelRegularizer),this.recurrentRegularizer=At(e.recurrentRegularizer),this.biasRegularizer=At(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=lp([1,za([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lp([1,za([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return U(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mu({ones:()=>Lr(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mu({ones:()=>Lr(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,u,l;0<this.dropout&&this.dropout<1&&(e=_(e,s[0]));let p=zs(e,this.kernel.read());this.useBias&&(p=gn(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=_(o,a[0]));let m=this.recurrentKernel.read(),[c,d]=Rr(m,[2*this.units,this.units],m.rank-1),f=zs(o,c),[h,g,b]=Rr(p,3,p.rank-1),[x,T]=Rr(f,2,f.rank-1);i=this.recurrentActivation.apply(Z(h,x)),u=this.recurrentActivation.apply(Z(g,T));let I=zs(_(u,o),d);l=this.activation.apply(Z(b,I));let k=Z(_(i,o),_(Z(1,et(i)),l));return[k,k]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wa(this.activation),recurrentActivation:Wa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Mc.className="GRUCell";re.registerClass(Mc);var zf=class extends Us{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Mc(e);super(e)}call(e,t){return U(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};zf.className="GRU";re.registerClass(zf);var hl=class extends gl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=Ka(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ka(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=At(e.kernelRegularizer),this.recurrentRegularizer=At(e.recurrentRegularizer),this.biasRegularizer=At(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=lp([1,za([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lp([1,za([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var o;e=nt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;n=new(o=class extends En{apply(u,l){let p=s.apply([a]),m=new cp().apply([a]),c=s.apply([a*2]);return Ok(Ok(p,m),c)}},o.className="CustomInit",o)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return U(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mu({ones:()=>Lr(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mu({ones:()=>Lr(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,u,l,p,m;0<this.dropout&&this.dropout<1&&(e=_(e,a[0]));let c=zs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=_(o,i[0])),c=Z(c,zs(o,this.recurrentKernel.read())),this.useBias&&(c=gn(c,this.bias.read()));let[d,f,h,g]=Rr(c,4,c.rank-1);u=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(f),p=Z(_(l,s),_(u,this.activation.apply(h))),m=this.recurrentActivation.apply(g);let b=_(m,this.activation.apply(p));return[b,b,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wa(this.activation),recurrentActivation:Wa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};hl.className="LSTMCell";re.registerClass(hl);var Gf=class extends Us{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new hl(e);super(e)}call(e,t){return U(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Gf.className="LSTM";re.registerClass(Gf);var Ec=class extends gl{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return U(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let u=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=u.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){$y(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{Oa(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(xn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return pf(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}Cc(t)}};Ec.className="StackedRNNCells";re.registerClass(Ec);function mu(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(e(),t):Ly(e(),t),i=()=>pl(a,e,n);return!o||o<=1?Gt(i().clone()):Array(o).fill(void 0).map(i).map(l=>Gt(l.clone()))}var wS=class extends Us{constructor(e){if(e.unroll)throw new Pe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pe("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Mt({ndim:5})]}call(e,t){return U(()=>{if(this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new O("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return U(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=It(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){U(()=>{if(!this.stateful)throw new jn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(s)):this.states_=[It(s)];else if(e==null)Re(this.states_),this.keptStates!=null&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(s)):this.states_[0]=It(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let i=0;i<this.states_.length;++i){let u=e[i],l=s;if(!y.arraysEqual(u.shape,l))throw new O(`State ${i} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${u.shape}`);this.states_[i]=u}}this.states_=this.states_.map(i=>Gt(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,u=t==="channelsFirst",l=e[u?3:2],p=e[u?4:3],m=_n(l,o[0],s,a[0],i[0]),c=_n(p,o[1],s,a[1],i[1]);return[...e.slice(0,2),...u?[n,m,c]:[m,c,n]]}};wS.className="ConvRNN2D";var _c=class extends hl{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super({...e,units:t});this.filters=t,nr(this.filters,"filters"),this.kernelSize=fl(n,2,"kernelSize"),this.kernelSize.forEach(u=>nr(u,"kernelSize")),this.strides=fl(o||1,2,"strides"),this.strides.forEach(u=>nr(u,"strides")),this.padding=s||"valid",fn(this.padding),this.dataFormat=a||"channelsLast",Kt(this.dataFormat),this.dilationRate=fl(i||1,2,"dilationRate"),this.dilationRate.forEach(u=>nr(u,"dilationRate"))}build(e){var i;e=nt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let l=this.biasInitializer,p=this.filters;u=new(i=class extends En{apply(c,d){let f=l.apply([p]),h=br([p]),g=l.apply([p*2]);return cc([f,h,g])}},i.className="CustomInit",i)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return U(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mu({ones:()=>Lr(o),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,l=(se,ae,pe)=>!ae||!ae[pe]?se:_(ae[pe],se),p=l(o,u,0),m=l(o,u,1),c=l(o,u,2),d=l(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mu({ones:()=>Lr(s),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let f=this.recurrentDropoutMask,h=l(s,f,0),g=l(s,f,1),b=l(s,f,2),x=l(s,f,3),T=3,[I,k,w,R]=Rr(this.kernel.read(),i,T),[F,M,L,z]=this.useBias?Rr(this.bias.read(),i):[null,null,null,null];p=this.inputConv(p,I,F,this.padding),m=this.inputConv(m,k,M,this.padding),c=this.inputConv(c,w,L,this.padding),d=this.inputConv(d,R,z,this.padding);let[W,V,j,q]=Rr(this.recurrentKernel.read(),i,T);h=this.recurrentConv(h,W),g=this.recurrentConv(g,V),b=this.recurrentConv(b,j),x=this.recurrentConv(x,q);let Y=this.recurrentActivation.apply(Z(p,h)),J=this.recurrentActivation.apply(Z(m,g)),H=Z(_(J,a),_(Y,this.activation.apply(Z(c,b)))),te=_(this.recurrentActivation.apply(Z(d,x)),this.activation.apply(H));return[te,te,H]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=Zo(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?gn(s,n,this.dataFormat):s}recurrentConv(e,t){return Zo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};_c.className="ConvLSTM2DCell";re.registerClass(_c);var Uf=class extends wS{constructor(e){let t=new _c(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Uf.className="ConvLSTM2D";re.registerClass(Uf);var Lc=class extends Ke{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return pl(()=>Ly(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Lc.className="Dropout";re.registerClass(Lc);var Wf=class extends Lc{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Wf.className="SpatialDropout1D";re.registerClass(Wf);var Kf=class extends Ke{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,nr(this.units,"units"),this.activation=Ka(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Yt(e.kernelConstraint),this.biasConstraint=Yt(e.biasConstraint),this.kernelRegularizer=At(e.kernelRegularizer),this.biasRegularizer=At(e.biasRegularizer),this.activityRegularizer=At(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=nt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=nt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=Ny(this.activation.getClassName()),s;return o!=null?s=zs(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=zs(n,this.kernel.read()),this.bias!=null&&(s=gn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Wa(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),biasConstraint:Xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Kf.className="Dense";re.registerClass(Kf);var Vf=class extends Ke{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=nt(e);for(let t of e.slice(1))if(t==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Os(e,1)]}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=We(n,o)}return WR(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Vf.className="Flatten";re.registerClass(Vf);var Hf=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.activation=Ka(e.activation)}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Wa(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Hf.className="Activation";re.registerClass(Hf);var qf=class extends Ke{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return U(()=>(e=Oe(e),GR(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};qf.className="RepeatVector";re.registerClass(qf);var jf=class extends Ke{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let u=0;u<o.length;++u){let l=o[u];if(this.isUnknown(l))if(a===null)a=u;else throw new O("Can only specifiy one unknown dimension.");else s*=l}let i=Os(e);if(a!==null){if(s===0||i%s!==0)throw new O(n);o[a]=i/s}else if(i!==s)throw new O(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return $(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};jf.className="Reshape";re.registerClass(jf);var Xf=class extends Ke{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=en(1,e.dims.length+1);if(!y.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Mt({ndim:this.dims.length+1})]}computeOutputShape(e){e=nt(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return We(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Xf.className="Permute";re.registerClass(Xf);var Yf=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),o=-1;return Wd(au(n,this.maskValue),o)}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=-1,s=!0,a=Wd(au(n,this.maskValue),o,s);return _(n,oe(a,n.dtype))})}};Yf.className="Masking";re.registerClass(Yf);var Zf=class extends Ke{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(vt(e.inputLength))}this.inputDim=e.inputDim,nr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,nr(this.outputDim,"outputDim"),this.embeddingsInitializer=Ct(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=At(e.embeddingsRegularizer),this.activityRegularizer=At(e.activityRegularizer),this.embeddingsConstraint=Yt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return U(()=>this.maskZero?(e=Oe(e),au(e,De(e))):null)}computeOutputShape(e){if(e=nt(e),this.inputLength==null)return[...e,this.outputDim];let t=vt(this.inputLength);if(t.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);n.dtype!=="int32"&&(n=pp(n,"int32"));let o=_y(this.embeddings.read(),$(n,[n.size]));return $(o,nt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ft(this.embeddingsInitializer),embeddingsRegularizer:bt(this.embeddingsRegularizer),activityRegularizer:bt(this.activityRegularizer),embeddingsConstraint:Xt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Zf.className="Embedding";re.registerClass(Zf);var bl=class extends Ke{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Pe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[nt(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Bs(t),t.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&Bs(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return U(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=za(o);for(let a of e){let i=a.rank;for(let u=0;u<s-i;++u)a=pu(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let u of e){let l=u.rank;if(l==null){let p=u.shape,m=p[0],c=p.slice(1).concat([m]),d=$(u,[m].concat(Os(p.slice(1))));d=We(d,[1,0]),d=$(d,c),n.push(d),s=!0}else if(l>1){let p=en(1,l).concat([0]);n.push(We(u,p)),s=!0}else n.push(u)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let u=a.shape,l=u.length,p=u[l-1],m=[p].concat(u.slice(0,u.length-1));a=$(We($(a,[-1,p]),[1,0]),m)}else if(i>1){let u=[i-1].concat(en(0,i-1));a=We(a,u)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Bs(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return U(()=>{if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(t.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:_r(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=Yr(n,t[o]);return n})}},Jf=class extends bl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Z(t,e[n]);return t})}};Jf.className="Add";re.registerClass(Jf);var eh=class extends bl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=_(t,e[n]);return t})}};eh.className="Multiply";re.registerClass(eh);var th=class extends bl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Z(t,e[n]);return _(1/e.length,t)})}};th.className="Average";re.registerClass(th);var rh=class extends bl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Qo(t,e[n]);return t})}};rh.className="Maximum";re.registerClass(rh);var nh=class extends bl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=sl(t,e[n]);return t})}};nh.className="Minimum";re.registerClass(nh);var oh=class extends bl{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(y.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return U(()=>cc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new O(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return U(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(oe(Lr(e[a]),"bool")):t[a].rank<e[a].rank?o.push(_r(t[a],-1)):o.push(t[a]);let s=mt(o,this.axis);return Rb(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};oh.className="Concatenate";re.registerClass(oh);function Qf(r,e){for(;r<0;)r+=e;return r}function a9(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Pe("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Pe("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return U(()=>{let a;if(n>o){a=n-o;let u=[];for(let l=0;l<a;++l)u.push(1);e=$(e,e.shape.concat(u))}else if(o>n){a=o-n;let u=[];for(let l=0;l<a;++l)u.push(1);r=$(r,r.shape.concat(u))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=de(_(r,e),s[0]):i=de(_(We(r,[1,0]),e),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===e.shape.length-1;i=qe(r,e,u,l)}if(a>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let p=u;p<u+a;++p)l.push(p);i=Ms(i,l)}return i.shape.length===1&&(i=_r(i,1)),i})}var sh=class extends bl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new O(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>Qf(s,e[a].shape.length)):o=[Qf(this.axes,t.shape.length),Qf(this.axes,n.shape.length)],this.normalize&&(t=gf(t,o[0]),n=gf(n,o[1])),a9(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Qf(this.axes,e.length),Qf(this.axes,t.length)],n}computeOutputShape(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};sh.className="Dot";re.registerClass(sh);var ah=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);return pl(()=>Z(dc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};ah.className="GaussianNoise";re.registerClass(ah);var ih=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?pl(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return _(n,dc(n.shape,1,s))},()=>n,t.training||!1):n})}};ih.className="GaussianDropout";re.registerClass(ih);var uh=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return U(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return pl(()=>{let s=Oe(e),a=1.6732632423543772,i=1.0507009873554805,u=-a*i,l=Rs(di(n),this.rate);l=pp(l,"float32");let p=((1-this.rate)*(1+this.rate*u**2))**-.5,m=-p*u*this.rate,c=Z(_(s,l),_(Z(l,-1),u));return Z(_(c,p),m)},()=>Oe(e),t.training||!1)}return e})}};uh.className="AlphaDropout";re.registerClass(uh);function lh(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=Eb(r,e,t,n,o,s);else if(r.rank===3)a=_b(r,e,t,n,o,s);else if(r.rank===4)a=Lb(r,e,t,n,o,s);else throw new Pe(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function i9(r,e,t,n,o=.001){return U(()=>{let s=ql(r,n),a=s.mean,i=s.variance;return[lh(r,a,i,t,e,o),a,i]})}function u9(r,e,t,n,o=.001){return U(()=>{let s=ql(r,n),a=s.mean,i=s.variance,u=[];for(let f of en(0,r.rank))n.indexOf(f)!==-1?u.push(1):u.push(r.shape[f]);let l=$(a,u),p=$(i,u),m=e==null?null:$(e,u),c=t==null?null:$(t,u);return[lh(r,l,p,c,m,o),a,i]})}function l9(r,e,t,n,o=.001){return y.arraysEqual(n.slice().sort(),en(0,r.rank-1))?i9(r,e,t,n,o):u9(r,e,t,n,o)}var ph=class extends Ke{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ct(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ct(e.movingVarianceInitializer||"ones"),this.betaConstraint=Yt(e.betaConstraint),this.gammaConstraint=Yt(e.gammaConstraint),this.betaRegularizer=At(e.betaRegularizer),this.gammaRegularizer=At(e.gammaRegularizer)}build(e){e=nt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new O(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Mt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return U(()=>{let n=t.training==null?!1:t.training,o=Oe(e),s=o.shape,a=s.length,i=en(0,a),u=this.axis>=0?this.axis:this.axis+a;i.splice(u,1);let l=Ls(1,a);l[u]=s[u];let p=i.slice();p.sort();let m=!y.arraysEqual(p,en(0,a).slice(0,a-1)),c=()=>{if(m){let x=$(this.movingMean.read(),l),T=$(this.movingVariance.read(),l),I=this.center?$(this.beta.read(),l):null,k=this.scale?$(this.gamma.read(),l):null;return lh(o,x,T,I,k,this.epsilon)}else return lh(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return c();let[d,f,h]=l9(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(x,T,I)=>{U(()=>{let k=1-I,w=x.read(),R=_(le(w,T),k);x.write(le(w,R))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,h,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),movingMeanInitializer:Ft(this.movingMeanInitializer),movingVarianceInitializer:Ft(this.movingVarianceInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer),betaConstraint:Xt(this.betaConstraint),gammaConstraint:Xt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};ph.className="BatchNormalization";re.registerClass(ph);var mh=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.betaRegularizer=At(e.betaRegularizer),this.gammaRegularizer=At(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=nt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Bs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),o=n.shape,s=o.length;return U(()=>{let{mean:i,variance:u}=ql(n,this.axis,!0),l=Ls(1,s);for(let h of this.axis)l[h]=o[h];let p=h=>h!=null&&h.shape.length!==s?$(h,l):h,m=this.scale?p(this.gamma.read()):null,c=this.center?p(this.beta.read()):null,d=[],f=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(d.push(o[h]),f.push(1)):(d.push(1),f.push(o[h]));return i=Xr(i,d),u=Xr(u,d),m!=null&&(m=Xr(m,f)),c!=null&&(c=Xr(c,f)),lh(n,i,u,c,m,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};mh.className="LayerNormalization";re.registerClass(mh);function p9(r,e,t){return U(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=hn()),t!=="channelsLast"&&t!=="channelsFirst")throw new O(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],qn(r,n)})}var ch=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?hn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=nt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return U(()=>p9(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};ch.className="ZeroPadding2D";re.registerClass(ch);function sx(r,e,t,n,o,s){return U(()=>{Kt(o),_k(s),fn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=hn()),s==null&&(s="max"),r=$f(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Jm(r,e,t,i):a=Vm(r,e,t,i),o==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}function wE(r,e,t,n,o,s){return U(()=>{Kt(o),_k(s),fn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=hn()),s==null&&(s="max"),r=TS(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=ry(r,e,t,i):a=Mb(r,e,t,i),o==="channelsFirst"&&(a=We(a,[0,4,1,2,3])),a})}var NS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(nr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,fn(this.padding),this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){e=nt(e);let t=_n(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return U(()=>{this.invokeCallHook(e,t),e=pu(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ms(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},dh=class extends NS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),fn(o),sx(e,t,n,o,s,"max")}};dh.className="MaxPooling1D";re.registerClass(dh);var fh=class extends NS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),fn(o),sx(e,t,n,o,s,"avg")}};fh.className="AveragePooling1D";re.registerClass(fh);var DS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),fn(this.padding),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=_n(t,this.poolSize[0],this.padding,this.strides[0]),n=_n(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return U(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},hh=class extends DS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),fn(o),sx(e,t,n,o,s,"max")}};hh.className="MaxPooling2D";re.registerClass(hh);var gh=class extends DS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),fn(o),sx(e,t,n,o,s,"avg")}};gh.className="AveragePooling2D";re.registerClass(gh);var PS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),fn(this.padding),this.inputSpec=[new Mt({ndim:5})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=_n(t,this.poolSize[0],this.padding,this.strides[0]),n=_n(n,this.poolSize[1],this.padding,this.strides[1]),o=_n(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return U(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},bh=class extends PS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),fn(o),wE(e,t,n,o,s,"max")}};bh.className="MaxPooling3D";re.registerClass(bh);var yh=class extends PS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),fn(o),wE(e,t,n,o,s,"avg")}};yh.className="AveragePooling3D";re.registerClass(yh);var RS=class extends Ke{constructor(e){super(e);this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pe}},xh=class extends RS{constructor(e){super(e||{})}call(e,t){return U(()=>{let n=Oe(e);return Bt(n,1)})}};xh.className="GlobalAveragePooling1D";re.registerClass(xh);var Th=class extends RS{constructor(e){super(e||{})}call(e,t){return U(()=>{let n=Oe(e);return cn(n,1)})}};Th.className="GlobalMaxPooling1D";re.registerClass(Th);var FS=class extends Ke{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ih=class extends FS{call(e,t){return U(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Bt(n,[1,2]):Bt(n,[2,3])})}};Ih.className="GlobalAveragePooling2D";re.registerClass(Ih);var Ch=class extends FS{call(e,t){return U(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?cn(n,[1,2]):cn(n,[2,3])})}};Ch.className="GlobalMaxPooling2D";re.registerClass(Ch);var MS=class extends Ke{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=xn(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},kh=class extends MS{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=nt(e),e.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=nt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return U(()=>(e=Oe(e),vS((a,i)=>[Oe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};kh.className="TimeDistributed";re.registerClass(kh);function m9(r){bi(LR,"BidirectionalMergeMode",r)}var c9="concat",Sh=class extends MS{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=xn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?c9:e.mergeMode,m9(this.mergeMode),e.weights)throw new Pe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Fr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=SS(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let p=n.map(m=>new Mt({shape:m.shape}));this.forwardLayer.stateSpec=p.slice(0,l/2),this.backwardLayer.stateSpec=p.slice(l/2),i.push(...p)}if(o!=null)throw new Pe("Support for constants in Bidirectional layers is not implemented yet.");let u=a[0]instanceof yn;for(let l of a)if(l instanceof yn!==u)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let l=[e].concat(a),p=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=p;let c=super.apply(l,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return U(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let u=n.slice(0,n.length/2),l=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=Pr(s,1));let i;return this.mergeMode==="concat"?i=cc([o,s]):this.mergeMode==="sum"?i=Z(o,s):this.mergeMode==="ave"?i=_(.5,Z(o,s)):this.mergeMode==="mul"?i=_(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Oa(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Oa(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=xn(t.layer);if(delete t.layer,t.numConstants!=null)throw new Pe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};Sh.className="Bidirectional";re.registerClass(Sh);function d9(r){return new yi(r)}function f9(r){return new Nf(r)}function h9(r){return new vf(r)}function g9(r){return new Af(r)}function b9(r){return new wf(r)}function y9(r){return new Pf(r)}function x9(r){return new Df(r)}function T9(r){return new Ef(r)}function I9(r){return new Dc(r)}function C9(r){return new Rf(r)}function k9(r){return new Pc(r)}function S9(r){return new Ff(r)}function v9(r){return new Mf(r)}function A9(r){return new _f(r)}function w9(r){return new Lf(r)}function N9(r){return new Bf(r)}function D9(r){return new Hf(r)}function P9(r){return new Kf(r)}function R9(r){return new Lc(r)}function F9(r){return new Wf(r)}function M9(r){return new Vf(r)}function E9(r){return new qf(r)}function _9(r){return new jf(r)}function L9(r){return new Xf(r)}function $9(r){return new Zf(r)}function B9(r){return new Jf(r)}function O9(r){return new th(r)}function z9(r){return new oh(r)}function G9(r){return new rh(r)}function U9(r){return new nh(r)}function W9(r){return new eh(r)}function K9(r){return new sh(r)}function V9(r){return new ph(r)}function H9(r){return new mh(r)}function q9(r){return new ch(r)}function ES(r){return new fh(r)}function j9(r){return ES(r)}function X9(r){return ES(r)}function _S(r){return new gh(r)}function Y9(r){return _S(r)}function Z9(r){return _S(r)}function LS(r){return new yh(r)}function Q9(r){return LS(r)}function J9(r){return LS(r)}function eee(r){return new xh(r)}function tee(r){return new Ih(r)}function NE(r){return new Th(r)}function DE(r){return new Ch(r)}function PE(r){return new dh(r)}function RE(r){return new hh(r)}function ree(r){return new bh(r)}function nee(r){return new zf(r)}function oee(r){return new Mc(r)}function see(r){return new Gf(r)}function aee(r){return new hl(r)}function iee(r){return new Of(r)}function uee(r){return new Fc(r)}function lee(r){return new Uf(r)}function pee(r){return new _c(r)}function mee(r){return new Us(r)}function cee(r){return new Ec(r)}function dee(r){return new Sh(r)}function fee(r){return new kh(r)}var hee=NE,gee=DE,bee=PE,yee=RE;function xee(r){return new ah(r)}function Tee(r){return new ih(r)}function Iee(r){return new uh(r)}function Cee(r){return new Yf(r)}var ME={};je(ME,{MAPE:()=>Mee,MSE:()=>Lee,binaryAccuracy:()=>kee,binaryCrossentropy:()=>See,categoricalAccuracy:()=>Aee,categoricalCrossentropy:()=>wee,cosineProximity:()=>Pee,mape:()=>Eee,meanAbsoluteError:()=>Ree,meanAbsolutePercentageError:()=>Fee,meanSquaredError:()=>_ee,mse:()=>$ee,precision:()=>Nee,recall:()=>Dee,sparseCategoricalAccuracy:()=>vee});function kee(r,e){return xf(r,e)}function See(r,e){return Xy(r,e)}function vee(r,e){return Yy(r,e)}function Aee(r,e){return Tf(r,e)}function wee(r,e){return If(r,e)}function Nee(r,e){return Xk(r,e)}function Dee(r,e){return oE(r,e)}function Pee(r,e){return yf(r,e)}function Ree(r,e){return Sc(r,e)}function Fee(r,e){return dl(r,e)}function Mee(r,e){return dl(r,e)}function Eee(r,e){return dl(r,e)}function _ee(r,e){return Ti(r,e)}function Lee(r,e){return Ti(r,e)}function $ee(r,e){return Ti(r,e)}var EE={};je(EE,{modelFromJSON:()=>TE});var _E={};je(_E,{l1:()=>Oee,l1l2:()=>Bee,l2:()=>zee});function Bee(r){return new gp(r)}function Oee(r){return SE(r)}function zee(r){return vE(r)}var $S=class extends cl{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof ts))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function ax(r,e){return r<e}function LE(r,e){return r>e}var BS=class extends $S{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Pe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=ax:this.mode==="max"?this.monitorFunc=LE:this.monitor.indexOf("acc")!==-1?this.monitorFunc=LE:this.monitorFunc=ax,this.monitorFunc===ax&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===ax?1/0:-1/0}async onEpochEnd(e,t){await xi(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function Gee(r){return new BS(r)}var Uee={earlyStopping:Gee};var Wee=B();Wee.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var OS=(ee=>(ee[ee.DT_INVALID=0]="DT_INVALID",ee[ee.DT_FLOAT=1]="DT_FLOAT",ee[ee.DT_DOUBLE=2]="DT_DOUBLE",ee[ee.DT_INT32=3]="DT_INT32",ee[ee.DT_UINT8=4]="DT_UINT8",ee[ee.DT_INT16=5]="DT_INT16",ee[ee.DT_INT8=6]="DT_INT8",ee[ee.DT_STRING=7]="DT_STRING",ee[ee.DT_COMPLEX64=8]="DT_COMPLEX64",ee[ee.DT_INT64=9]="DT_INT64",ee[ee.DT_BOOL=10]="DT_BOOL",ee[ee.DT_QINT8=11]="DT_QINT8",ee[ee.DT_QUINT8=12]="DT_QUINT8",ee[ee.DT_QINT32=13]="DT_QINT32",ee[ee.DT_BFLOAT16=14]="DT_BFLOAT16",ee[ee.DT_QINT16=15]="DT_QINT16",ee[ee.DT_QUINT16=16]="DT_QUINT16",ee[ee.DT_UINT16=17]="DT_UINT16",ee[ee.DT_COMPLEX128=18]="DT_COMPLEX128",ee[ee.DT_HALF=19]="DT_HALF",ee[ee.DT_RESOURCE=20]="DT_RESOURCE",ee[ee.DT_VARIANT=21]="DT_VARIANT",ee[ee.DT_UINT32=22]="DT_UINT32",ee[ee.DT_UINT64=23]="DT_UINT64",ee[ee.DT_FLOAT_REF=101]="DT_FLOAT_REF",ee[ee.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",ee[ee.DT_INT32_REF=103]="DT_INT32_REF",ee[ee.DT_UINT8_REF=104]="DT_UINT8_REF",ee[ee.DT_INT16_REF=105]="DT_INT16_REF",ee[ee.DT_INT8_REF=106]="DT_INT8_REF",ee[ee.DT_STRING_REF=107]="DT_STRING_REF",ee[ee.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",ee[ee.DT_INT64_REF=109]="DT_INT64_REF",ee[ee.DT_BOOL_REF=110]="DT_BOOL_REF",ee[ee.DT_QINT8_REF=111]="DT_QINT8_REF",ee[ee.DT_QUINT8_REF=112]="DT_QUINT8_REF",ee[ee.DT_QINT32_REF=113]="DT_QINT32_REF",ee[ee.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",ee[ee.DT_QINT16_REF=115]="DT_QINT16_REF",ee[ee.DT_QUINT16_REF=116]="DT_QUINT16_REF",ee[ee.DT_UINT16_REF=117]="DT_UINT16_REF",ee[ee.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",ee[ee.DT_HALF_REF=119]="DT_HALF_REF",ee[ee.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",ee[ee.DT_VARIANT_REF=121]="DT_VARIANT_REF",ee[ee.DT_UINT32_REF=122]="DT_UINT32_REF",ee[ee.DT_UINT64_REF=123]="DT_UINT64_REF",ee))(OS||{}),Kee;(e=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=e.CheckpointFormatVersion||={})})(Kee||={});var zS={};function Hee(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};zS[r]=t}function ix(r){return zS[r]}function qee(r){delete zS[r]}function S(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return vr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(i,u).map(c=>vr(c,t,n,o));let l=vr(e.inputNames.slice(i)[0],t,n,o),p=l.dataSync();return s.type==="number"?p[0]:y.toNestedArray(l.shape,p)}let a=e.attrParams[r];return a&&a.value}function vr(r,e,t,n){let[o,s]=In(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[ux(o,i)]);return a!==void 0?e[ux(o,a)][s]:void 0}function $E(r,e,t){return e[ux(r,t.currentContextId)]}function Ws(r,e){let[t,n,o]=In(r);return[ux(t,e&&e.currentContextId),n,o]}function ux(r,e){return e?`${r}-${e}`:r}function In(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],n=e.length===3?e[1]:void 0,o=Number(e[e.length-1]);return[t,o,n]}function vh(r,e,t){let n=S("pad",r,e,t);if(n==="explicit"){n=S("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Ha(r){return r.kept?r:mn(r)}var GS={};je(GS,{json:()=>jee});var jee=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var US={};je(US,{json:()=>Xee});var Xee=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var WS={};je(WS,{json:()=>Yee});var Yee=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var KS={};je(KS,{json:()=>Zee});var Zee=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var VS={};je(VS,{json:()=>Qee});var Qee=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var HS={};je(HS,{json:()=>Jee});var Jee=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var qS={};je(qS,{json:()=>ete});var ete=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var jS={};je(jS,{json:()=>tte});var tte=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var XS={};je(XS,{json:()=>rte});var rte=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var YS={};je(YS,{json:()=>nte});var nte=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var ZS={};je(ZS,{json:()=>ote});var ote=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var QS={};je(QS,{json:()=>ste});var ste=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var JS={};je(JS,{json:()=>ate});var ate=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var ev={};je(ev,{json:()=>ite});var ite=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var tv={};je(tv,{json:()=>ute});var ute=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var rv={};je(rv,{json:()=>lte});var lte=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var nv={};je(nv,{json:()=>pte});var pte=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var ov={};je(ov,{json:()=>mte});var mte=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var sv={};je(sv,{json:()=>cte});var cte=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var xx=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[GS,US,WS,KS,VS,HS,qS,jS,XS,YS,ZS,QS,JS,ev,tv,rv,nv,ov,sv],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),u=[],l=[],p={},m={};t!=null&&(p=this.mapSignatureEntries(t.inputs),m=this.mapSignatureEntries(t.outputs));let c=Object.keys(i);c.forEach(h=>{let g=i[h];g.inputNames.forEach((b,x)=>{let[T,,I]=Ws(b),k=i[T];if(k.outputs!=null){let w=k.outputs.indexOf(I);if(w!==-1){let R=`${T}:${w}`;g.inputNames[x]=R}}g.inputs.push(k),k.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=i[h];g.children.length===0&&l.push(g)}):Object.keys(m).forEach(h=>{let[g]=Ws(h),b=i[g];b!=null&&(b.signatureKey=m[h],l.push(b))}),Object.keys(p).length>0?Object.keys(p).forEach(h=>{let[g]=Ws(h),b=i[g];b&&(b.signatureKey=p[h],u.push(b))}):u=o;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:i,inputs:u,outputs:l,weights:s,placeholders:o,signature:t,functions:d};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=ix(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=lx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=lx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=gx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=gx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=mx(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=mx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=hx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=hx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=px(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=px(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=yx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=yx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=fx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=fx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=bx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=bx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=cx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=cx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=dx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=dx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=BE(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=BE(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let a=[],i=[];e.signature.inputArg.forEach(m=>{let[c]=Ws(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:av(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,a.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=Ws(d),b=s[h];if(b.outputs!=null){let x=b.outputs.indexOf(g);if(x!==-1){let T=`${h}:${x}`;c.inputNames[f]=T}}c.inputs.push(b),b.children.push(c)})});let l=e.ret;e.signature.outputArg.forEach(m=>{let[c,d]=Ws(l[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,i.push(f))});let p=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:p}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function dte(r){let e=B().global;if(typeof e.atob<"u")return e.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function OE(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):dte(r);return e?t:t.toLowerCase()}function lx(r,e,t,n=!1){let o=r[e];return o!=null?OE(o.s,n):t}function px(r,e,t){let n=r[e];return n?n.b:t}function mx(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function av(r){switch(typeof r=="string"&&(r=OS[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function BE(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function cx(r,e,t){let n=r[e];return n&&n.type?av(n.type):t}function dx(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>av(o)):t}function zE(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function fx(r,e,t){let n=r[e];return n&&n.shape?zE(n.shape):t}function hx(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function gx(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>OE(s,n)):t}function bx(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>zE(o)):t}function yx(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var iv=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=[];this.attrs={};this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return vr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return vr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return mx(this.node.rawAttrs,e,t);if(n.s!=null)return lx(this.node.rawAttrs,e,t);if(n.b!=null)return px(this.node.rawAttrs,e,t);if(n.shape!=null)return fx(this.node.rawAttrs,e,t);if(n.type!=null)return cx(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return hx(this.node.rawAttrs,e,t);if(n.list.s!=null)return gx(this.node.rawAttrs,e,t);if(n.list.shape!=null)return bx(this.node.rawAttrs,e,t);if(n.list.b!=null)return yx(this.node.rawAttrs,e,t);if(n.list.type!=null)return dx(this.node.rawAttrs,e,t)}return t}};var ct={};je(ct,{OP_SCOPE_SUFFIX:()=>KC,abs:()=>Ut,acos:()=>m2,acosh:()=>c2,add:()=>Z,addN:()=>d2,all:()=>Rb,any:()=>Wd,argMax:()=>Qu,argMin:()=>f2,asin:()=>h2,asinh:()=>g2,atan:()=>b2,atan2:()=>y2,atanh:()=>x2,avgPool:()=>Vm,avgPool3d:()=>Mb,basicLSTMCell:()=>C2,batchNorm:()=>el,batchNorm2d:()=>Eb,batchNorm3d:()=>_b,batchNorm4d:()=>Lb,batchToSpaceND:()=>Hm,bincount:()=>$b,booleanMaskAsync:()=>dZ,broadcastArgs:()=>S2,broadcastTo:()=>qm,buffer:()=>xe,cast:()=>oe,ceil:()=>v2,clipByValue:()=>zr,clone:()=>mn,complex:()=>Dn,concat:()=>mt,concat1d:()=>Bb,concat2d:()=>Ob,concat3d:()=>zb,concat4d:()=>Gb,conv1d:()=>Ub,conv2d:()=>Zo,conv2dTranspose:()=>Wb,conv3d:()=>Kb,conv3dTranspose:()=>Hb,cos:()=>Xm,cosh:()=>qb,cosineWindow:()=>Yd,cumprod:()=>Kd,cumsum:()=>jb,denseBincount:()=>A2,depthToSpace:()=>w2,depthwiseConv2d:()=>tl,diag:()=>N2,dilation2d:()=>D2,div:()=>me,divNoNan:()=>P2,dot:()=>R2,dropout:()=>vk,einsum:()=>F2,elu:()=>rl,enclosingPowerOfTwo:()=>Ak,equal:()=>jr,erf:()=>M2,euclideanNorm:()=>L2,exp:()=>gr,expandDims:()=>_r,expm1:()=>$2,eye:()=>Hl,fft:()=>ac,fill:()=>ci,floor:()=>nl,floorDiv:()=>Pb,fused:()=>il,gather:()=>ol,gatherND:()=>CZ,greater:()=>pr,greaterEqual:()=>Rs,ifft:()=>Zl,imag:()=>Zu,image:()=>ul,inTopKAsync:()=>vZ,irfft:()=>cy,isFinite:()=>B2,isInf:()=>O2,isNaN:()=>z2,leakyRelu:()=>Ym,less:()=>Xb,lessEqual:()=>Fs,linalg:()=>Nk,linspace:()=>G2,localResponseNormalization:()=>U2,log:()=>Gr,log1p:()=>Zm,logSigmoid:()=>W2,logSoftmax:()=>Qb,logSumExp:()=>Jb,logicalAnd:()=>Yr,logicalNot:()=>Qm,logicalOr:()=>ey,logicalXor:()=>K2,losses:()=>vQ,lowerBound:()=>V2,matMul:()=>qe,max:()=>cn,maxPool:()=>Jm,maxPool3d:()=>ry,maxPoolWithArgmax:()=>H2,maximum:()=>Qo,mean:()=>Bt,meshgrid:()=>q2,min:()=>Hd,minimum:()=>sl,mirrorPad:()=>j2,mod:()=>X2,moments:()=>ql,movingAverage:()=>hZ,mul:()=>_,multiRNNCell:()=>Y2,multinomial:()=>Z2,neg:()=>et,norm:()=>Vl,notEqual:()=>au,oneHot:()=>Xu,ones:()=>br,onesLike:()=>Lr,op:()=>A,outerProduct:()=>Q2,pad:()=>qn,pad1d:()=>J2,pad2d:()=>eP,pad3d:()=>tP,pad4d:()=>rP,pool:()=>nP,pow:()=>Hn,prelu:()=>tc,print:()=>yb,prod:()=>oP,rand:()=>sP,randomGamma:()=>CP,randomNormal:()=>Xl,randomStandardNormal:()=>kP,randomUniform:()=>di,range:()=>al,real:()=>nu,reciprocal:()=>SP,relu:()=>Zr,relu6:()=>sy,reshape:()=>$,reverse:()=>Pr,reverse1d:()=>vP,reverse2d:()=>AP,reverse3d:()=>wP,reverse4d:()=>NP,rfft:()=>ic,round:()=>ay,rsqrt:()=>iy,scalar:()=>ce,scatterND:()=>bZ,searchSorted:()=>qd,selu:()=>uy,separableConv2d:()=>ly,setdiff1dAsync:()=>DP,sigmoid:()=>Mn,sign:()=>PP,signal:()=>SQ,sin:()=>py,sinh:()=>my,slice:()=>Ge,slice1d:()=>nc,slice2d:()=>Xd,slice3d:()=>oc,slice4d:()=>Yl,softmax:()=>sc,softplus:()=>su,spaceToBatchND:()=>ec,sparse:()=>AQ,sparseToDense:()=>TZ,spectral:()=>kQ,split:()=>Rr,sqrt:()=>$t,square:()=>Ye,squaredDifference:()=>dy,squeeze:()=>Ms,stack:()=>yr,step:()=>fi,stridedSlice:()=>RP,string:()=>wQ,sub:()=>le,sum:()=>de,tan:()=>FP,tanh:()=>Ju,tensor:()=>Nr,tensor1d:()=>jt,tensor2d:()=>La,tensor3d:()=>Sb,tensor4d:()=>MP,tensor5d:()=>EP,tensor6d:()=>_P,tile:()=>Xr,topk:()=>LP,transpose:()=>We,truncatedNormal:()=>uc,unique:()=>$P,unsortedSegmentSum:()=>fy,unstack:()=>Ur,upperBound:()=>BP,variable:()=>hy,where:()=>Wt,whereAsync:()=>by,zeros:()=>It,zerosLike:()=>De});var GE=(r,e,t,n=ct)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(S("a",r,e,t),S("b",r,e,t))];case"AddN":return[n.addN(S("tensors",r,e,t))];case"FloorMod":case"Mod":return[n.mod(S("a",r,e,t),S("b",r,e,t))];case"Mul":return[n.mul(S("a",r,e,t),S("b",r,e,t))];case"RealDiv":case"Div":return[n.div(S("a",r,e,t),S("b",r,e,t))];case"DivNoNan":return[n.divNoNan(S("a",r,e,t),S("b",r,e,t))];case"FloorDiv":return[n.floorDiv(S("a",r,e,t),S("b",r,e,t))];case"Sub":return[n.sub(S("a",r,e,t),S("b",r,e,t))];case"Minimum":return[n.minimum(S("a",r,e,t),S("b",r,e,t))];case"Maximum":return[n.maximum(S("a",r,e,t),S("b",r,e,t))];case"Pow":return[n.pow(S("a",r,e,t),S("b",r,e,t))];case"SquaredDifference":return[n.squaredDifference(S("a",r,e,t),S("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var UE=(r,e,t,n=ct)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(S("x",r,e,t))];case"Acos":return[n.acos(S("x",r,e,t))];case"Acosh":return[n.acosh(S("x",r,e,t))];case"Asin":return[n.asin(S("x",r,e,t))];case"Asinh":return[n.asinh(S("x",r,e,t))];case"Atan":return[n.atan(S("x",r,e,t))];case"Atan2":return[n.atan2(S("x",r,e,t),S("y",r,e,t))];case"Atanh":return[n.atanh(S("x",r,e,t))];case"Ceil":return[n.ceil(S("x",r,e,t))];case"Complex":return[n.complex(S("real",r,e,t),S("imag",r,e,t))];case"Cos":return[n.cos(S("x",r,e,t))];case"Cosh":return[n.cosh(S("x",r,e,t))];case"Elu":return[n.elu(S("x",r,e,t))];case"Erf":return[n.erf(S("x",r,e,t))];case"Exp":return[n.exp(S("x",r,e,t))];case"Expm1":return[n.expm1(S("x",r,e,t))];case"Floor":return[n.floor(S("x",r,e,t))];case"Log":return[n.log(S("x",r,e,t))];case"Log1p":return[n.log1p(S("x",r,e,t))];case"Imag":return[n.imag(S("x",r,e,t))];case"Neg":return[n.neg(S("x",r,e,t))];case"Reciprocal":return[n.reciprocal(S("x",r,e,t))];case"Real":return[n.real(S("x",r,e,t))];case"Relu":return[n.relu(S("x",r,e,t))];case"Round":return[n.round(S("x",r,e,t))];case"Selu":return[n.selu(S("x",r,e,t))];case"Sigmoid":return[n.sigmoid(S("x",r,e,t))];case"Sin":return[n.sin(S("x",r,e,t))];case"Sign":return[n.sign(S("x",r,e,t))];case"Sinh":return[n.sinh(S("x",r,e,t))];case"Softplus":return[n.softplus(S("x",r,e,t))];case"Sqrt":return[n.sqrt(S("x",r,e,t))];case"Square":return[n.square(S("x",r,e,t))];case"Tanh":return[n.tanh(S("x",r,e,t))];case"Tan":return[n.tan(S("x",r,e,t))];case"ClipByValue":return[n.clipByValue(S("x",r,e,t),S("clipValueMin",r,e,t),S("clipValueMax",r,e,t))];case"Relu6":return[n.relu6(S("x",r,e,t))];case"Rsqrt":return[n.rsqrt(vr(r.inputNames[0],e,t))];case"Prod":return[n.prod(S("x",r,e,t),S("axes",r,e,t))];case"LeakyRelu":return[n.leakyRelu(S("x",r,e,t),S("alpha",r,e,t))];case"Prelu":return[n.prelu(S("x",r,e,t),S("alpha",r,e,t))];case"IsNan":return[n.isNaN(vr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Xn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){y.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];y.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function WE(r){return!(typeof r=="number"||r.some(e=>e<0))}function $c(r,e,t){let n=Tx(r,t),o=!WE(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=Tx(s.shape,n)}),!WE(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Tx(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var uv=class{constructor(e,t,n,o,s,a,i){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=ce(0),Gt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Xn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Gt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Nr([],[0].concat(this.elementShape));let n=this.readMany(e);return Xn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),yr(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Nr([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Xn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),mt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Ur(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(u=>(n+=u,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];U(()=>{t=$(t,[1,n,s]);for(let u=0;u<e.length;++u){let l=u===0?0:o[u-1],p=[0,l,0],m=[1,e[u],s];a[u]=$(Ge(t,p,m),this.elementShape)}return a});let i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,a)}};var yl=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Xn(t,s.shape,"TensorList shape mismatch: "),Gt(s)}),this.idTensor=ce(0),this.maxNumElements=o,Gt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new yl([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Xn(e,this.elementShape,"TensorList shape mismatch: ");let o=$c(this.elementShape,this.tensors,e);return U(()=>{let s=this.tensors.map(a=>$(a,o));return yr(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=$c(this.elementShape,this.tensors,e),o=this.tensors.pop();return Xn(o.shape,e,"TensorList shape mismatch: "),$(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Xn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Gt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new yl([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Xn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=$c(this.elementShape,this.tensors,t);return $(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Xn(this.elementShape,t.shape,"TensorList shape mismatch: "),Gt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Xn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=$c(this.elementShape,this.tensors,n);return e.length===0?Nr([],[0].concat(o)):U(()=>{let s=e.map(a=>$(this.tensors[a],o));return yr(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Xn(this.elementShape,t,"TensorList shape mismatch: ");let n=$c(this.elementShape,this.tensors,t);return this.size()===0?Nr([],[0].concat(n)):U(()=>{let o=this.tensors.map(s=>$(s,n));return mt(o,0)})}};function KE(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Xn(o,e,"TensorList shape mismatch: ");let s=Ur(r);return new yl(s,e,n)}function VE(r,e,t,n){return new yl([],r,e,n)}function HE(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new yl([],t,r.dtype,n),a=Ur(r,0);return e.forEach((i,u)=>{s.setItem(i,a[u])}),s}function qE(r,e,t){let n=0,o=e.map(p=>(n+=p,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=Tx(s,t),i=n===0?0:r.size/n,u=U(()=>{let p=[];r=$(r,[1,n,i]);for(let m=0;m<e.length;++m){let c=m===0?0:o[m-1],d=[0,c,0],f=[1,e[m],i];p[m]=$(Ge(r,d,f),a)}return r.dispose(),p}),l=new yl([],t,r.dtype,e.length);for(let p=0;p<u.length;p++)l.setItem(p,u[p]);return l}var jE=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=S("thenBranch",r,e,t),o=S("elseBranch",r,e,t),s=S("cond",r,e,t),a=S("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=S("body",r,e,t),o=S("cond",r,e,t),s=S("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(p=>p.id),u=await a[0].data();a.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&p.dispose()});let l=s;for(;u[0];){let p=l;l=await t.functionMap[n].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);let m=l.map(d=>d.id);p.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await t.functionMap[o].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);u=await c[0].data(),c.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return l}case"LoopCond":{let n=S("pred",r,e,t);return[Ha(n)]}case"Switch":{let n=S("pred",r,e,t),o=S("data",r,e,t);return o.kept||(o=Ha(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>vr(o,e,t)!==void 0);if(n){let o=vr(n,e,t);return[Ha(o)]}return}case"Enter":{let n=S("frameName",r,e,t),o=S("tensor",r,e,t);return t.enterFrame(n),[Ha(o)]}case"Exit":{let n=S("tensor",r,e,t);return t.exitFrame(),[Ha(n)]}case"NextIteration":{let n=S("tensor",r,e,t);return t.nextIteration(),[Ha(n)]}case"TensorArrayV3":{let n=S("size",r,e,t),o=S("dtype",r,e,t),s=S("elementShape",r,e,t),a=S("dynamicSize",r,e,t),i=S("clearAfterRead",r,e,t),u=S("identicalElementShapes",r,e,t),l=S("name",r,e,t),p=new uv(l,o,n,s,u,a,i);return t.addTensorArray(p),[p.idTensor,ce(1)]}case"TensorArrayWriteV3":{let n=S("tensorArrayId",r,e,t),o=S("index",r,e,t),s=S("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=S("tensorArrayId",r,e,t),o=S("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=S("tensorArrayId",r,e,t),o=S("indices",r,e,t),s=S("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=S("tensorArrayId",r,e,t),o=S("indices",r,e,t),s=S("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=S("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=S("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=S("tensorArrayId",r,e,t),o=S("tensor",r,e,t),s=S("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=S("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ce(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=S("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=S("tensorListId",r,e,t),o=S("index",r,e,t),s=S("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=S("tensorListId",r,e,t),o=S("index",r,e,t),s=S("elementShape",r,e,t),a=S("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=S("indices",r,e,t),o=S("tensor",r,e,t),s=S("elementShape",r,e,t),a=S("numElements",r,e,t),i=HE(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=S("elementShape",r,e,t),o=S("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=S(s,r,e,t),i=r.op==="TensorListReserve"?-1:a,u=VE(n,o,a,i);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{let n=S("tensorListId",r,e,t),o=S("indices",r,e,t),s=S("elementShape",r,e,t),a=S("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=S("tensorListId",r,e,t),o=S("elementShape",r,e,t),s=S("elementDType",r,e,t),a=S("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=S("tensor",r,e,t),o=S("elementShape",r,e,t),s=S("elementDType",r,e,t),a=KE(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=S("tensorListId",r,e,t),o=t.getTensorList(n.id),s=S("dtype",r,e,t),a=S("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=S("tensorListId",r,e,t),o=S("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=S("tensorListId",r,e,t),o=S("elementShape",r,e,t),s=S("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=S("tensor",r,e,t),o=S("elementShape",r,e,t),s=S("lengths",r,e,t),a=qE(n,s,o);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{let n=S("tensorListId",r,e,t),o=t.getTensorList(n.id);return[ce(o.size(),"int32")]}case"TensorListResize":{let n=S("tensorListId",r,e,t),o=S("size",r,e,t),a=t.getTensorList(n.id).resize(o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function XE(r,e,t){let[n,o]=S("fusedOps",r,e,t),s=n==="biasadd",a=!s,i=o==="prelu",u=n==="fusedbatchnorm",l=S("numArgs",r,e,t);if(s){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=S("strides",r,e,t),m=vh(r,e,t),c=S("dataFormat",r,e,t).toUpperCase(),d=S("dilations",r,e,t),[f,h]=S("args",r,e,t);a&&(h=f,f=void 0);let g=S("leakyreluAlpha",r,e,t);return{stride:p,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var YE=(r,e,t,n=ct)=>{switch(r.op){case"Conv1D":{let o=S("stride",r,e,t),s=S("pad",r,e,t),a=S("dataFormat",r,e,t).toUpperCase(),i=S("dilation",r,e,t);return[n.conv1d(S("x",r,e,t),S("filter",r,e,t),o,s,a,i)]}case"Conv2D":{let o=S("strides",r,e,t),s=vh(r,e,t),a=S("dataFormat",r,e,t).toUpperCase(),i=S("dilations",r,e,t);return[n.conv2d(S("x",r,e,t),S("filter",r,e,t),[o[1],o[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:p,leakyreluAlpha:m}=XE(r,e,t);return[n.fused.conv2d({x:S("x",r,e,t),filter:S("filter",r,e,t),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:p,preluActivationWeights:l,leakyreluAlpha:m})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:p,leakyreluAlpha:m}=XE(r,e,t);return[n.fused.depthwiseConv2d({x:S("x",r,e,t),filter:S("filter",r,e,t),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:p,preluActivationWeights:l,leakyreluAlpha:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=S("outputShape",r,e,t),s=S("strides",r,e,t),a=vh(r,e,t);return[n.conv2dTranspose(S("x",r,e,t),S("filter",r,e,t),o,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=S("strides",r,e,t),s=vh(r,e,t),a=S("dilations",r,e,t),i=S("dataFormat",r,e,t).toUpperCase();return[n.depthwiseConv2d(S("input",r,e,t),S("filter",r,e,t),[o[1],o[2]],s,i,[a[1],a[2]])]}case"Conv3D":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("dataFormat",r,e,t).toUpperCase(),i=S("dilations",r,e,t);return[n.conv3d(S("x",r,e,t),S("filter",r,e,t),[o[1],o[2],o[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t);return[n.avgPool(S("x",r,e,t),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t);return[n.maxPool(S("x",r,e,t),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t),i=S("includeBatchInIndex",r,e,t),{result:u,indexes:l}=n.maxPoolWithArgmax(S("x",r,e,t),[a[1],a[2]],[o[1],o[2]],s,i);return[u,l]}case"AvgPool3D":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t);return[n.avgPool3d(S("x",r,e,t),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t);return[n.maxPool3d(S("x",r,e,t),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("dilations",r,e,t),i=o[1],u=o[2],l=a[1],p=a[2];return[n.dilation2d(S("x",r,e,t),S("filter",r,e,t),[i,u],s,[l,p],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var ZE=(r,e,t,n=ct)=>{switch(r.op){case"Fill":{let o=S("shape",r,e,t),s=S("dtype",r,e,t),a=S("value",r,e,t);return[n.fill(o,a,s)]}case"LinSpace":{let o=S("start",r,e,t),s=S("stop",r,e,t),a=S("num",r,e,t);return[n.linspace(o,s,a)]}case"Multinomial":{let o=S("logits",r,e,t),s=S("numSamples",r,e,t),a=S("seed",r,e,t);return[n.multinomial(o,s,a)]}case"OneHot":{let o=S("indices",r,e,t),s=S("depth",r,e,t),a=S("onValue",r,e,t),i=S("offValue",r,e,t);return[n.oneHot(o,s,a,i)]}case"Ones":return[n.ones(S("shape",r,e,t),S("dtype",r,e,t))];case"OnesLike":return[n.onesLike(S("x",r,e,t))];case"RandomStandardNormal":return[n.randomStandardNormal(S("shape",r,e,t),S("dtype",r,e,t),S("seed",r,e,t))];case"RandomUniform":return[n.randomUniform(S("shape",r,e,t),S("minval",r,e,t),S("maxval",r,e,t),S("dtype",r,e,t))];case"Range":{let o=S("start",r,e,t),s=S("stop",r,e,t),a=S("step",r,e,t);return[n.range(o,s,a,S("dtype",r,e,t))]}case"TruncatedNormal":{let o=S("shape",r,e,t),s=S("mean",r,e,t),a=S("stdDev",r,e,t),i=S("seed",r,e,t);return[n.truncatedNormal(o,s,a,S("dtype",r,e,t),i)]}case"Zeros":return[n.zeros(S("shape",r,e,t),S("dtype",r,e,t))];case"ZerosLike":return[n.zerosLike(S("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function lv(r,e,t){let n=S("boxes",r,e,t),o=S("scores",r,e,t),s=S("maxOutputSize",r,e,t),a=S("iouThreshold",r,e,t),i=S("scoreThreshold",r,e,t),u=S("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}var QE=async(r,e,t,n,o=ct)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l,softNmsSigma:p}=lv(r,e,t),m=await o.image.nonMaxSuppressionWithScoreAsync(s,a,i,u,l,p);return[m.selectedIndices,m.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=lv(r,e,t),p=S("padToMaxOutputSize",r,e,t),m=await o.image.nonMaxSuppressionPaddedAsync(s,a,i,u,l,p);return[m.selectedIndices,m.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=lv(r,e,t);return[await o.image.nonMaxSuppressionAsync(s,a,i,u,l)]}case"Where":{let s=o.cast(S("condition",r,e,t),"bool"),a=[await o.whereAsync(s)];return s.dispose(),a}case"ListDiff":return o.setdiff1dAsync(S("x",r,e,t),S("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var JE=(r,e,t,n=ct)=>{switch(r.op){case"LowerBound":{let o=S("sortedSequence",r,e,t),s=S("values",r,e,t);return[n.lowerBound(o,s)]}case"TopKV2":{let o=S("x",r,e,t),s=S("k",r,e,t),a=S("sorted",r,e,t),i=n.topk(o,s,a);return[i.values,i.indices]}case"UpperBound":{let o=S("sortedSequence",r,e,t),s=S("values",r,e,t);return[n.upperBound(o,s)]}case"Unique":{let o=S("x",r,e,t),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=S("x",r,e,t),s=S("axis",r,e,t),a=n.unique(o,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var e_=(r,e,t,n=ct)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let o=S("default",r,e,t);return[vr(r.name,e,t)||o];case"Placeholder":return[vr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let p=S("x",r,e,t);return[Ha(p)]}case"IdentityN":return S("x",r,e,t).map(p=>Ha(p));case"Snapshot":let s=S("x",r,e,t);return[Ha(s)];case"Shape":return[n.tensor1d(S("x",r,e,t).shape,"int32")];case"ShapeN":return S("x",r,e,t).map(p=>n.tensor1d(p.shape));case"Size":return[n.scalar(S("x",r,e,t).size,"int32")];case"Rank":return[n.scalar(S("x",r,e,t).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let a=S("x",r,e,t),i=S("data",r,e,t),u=S("message",r,e,t),l=S("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let p=0;p<i.length;p++)console.log(Array.prototype.slice.call(i[p].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pv=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=ce(0),this.tensorMap=new Map,Gt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),U(()=>{let o=Ur(t),s=n.length,a=o.length;y.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let u=n[i],l=o[i];Gt(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return U(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return yr(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var t_=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=S("keyDType",r,e,t),s=S("valueDType",r,e,t),a=new pv(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=S("tableHandle",r,e,t,n),s=S("keys",r,e,t),a=S("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=S("tableHandle",r,e,t,n),s=S("keys",r,e,t),a=S("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=S("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var r_=(r,e,t,n=ct)=>{switch(r.op){case"ResizeBilinear":{let o=S("images",r,e,t),s=S("size",r,e,t),a=S("alignCorners",r,e,t),i=S("halfPixelCenters",r,e,t);return[n.image.resizeBilinear(o,[s[0],s[1]],a,i)]}case"ResizeNearestNeighbor":{let o=S("images",r,e,t),s=S("size",r,e,t),a=S("alignCorners",r,e,t),i=S("halfPixelCenters",r,e,t);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],a,i)]}case"CropAndResize":{let o=S("image",r,e,t),s=S("boxes",r,e,t),a=S("boxInd",r,e,t),i=S("cropSize",r,e,t),u=S("method",r,e,t),l=S("extrapolationValue",r,e,t);return[n.image.cropAndResize(o,s,a,i,u,l)]}case"ImageProjectiveTransformV3":{let o=S("images",r,e,t),s=S("transforms",r,e,t),a=S("outputShape",r,e,t),i=S("fillValue",r,e,t),u=S("interpolation",r,e,t),l=S("fillMode",r,e,t);return[n.image.transform(o,s,u.toLowerCase(),l.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var n_=(r,e,t,n=ct)=>{switch(r.op){case"Equal":return[n.equal(S("a",r,e,t),S("b",r,e,t))];case"NotEqual":return[n.notEqual(S("a",r,e,t),S("b",r,e,t))];case"Greater":return[n.greater(S("a",r,e,t),S("b",r,e,t))];case"GreaterEqual":return[n.greaterEqual(S("a",r,e,t),S("b",r,e,t))];case"Less":return[n.less(S("a",r,e,t),S("b",r,e,t))];case"LessEqual":return[n.lessEqual(S("a",r,e,t),S("b",r,e,t))];case"LogicalAnd":return[n.logicalAnd(S("a",r,e,t),S("b",r,e,t))];case"LogicalNot":return[n.logicalNot(S("a",r,e,t))];case"LogicalOr":return[n.logicalOr(S("a",r,e,t),S("b",r,e,t))];case"Select":case"SelectV2":return[n.where(S("condition",r,e,t),S("a",r,e,t),S("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var o_=(r,e,t,n=ct)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(S("a",r,e,t),S("b",r,e,t),S("transposeA",r,e,t),S("transposeB",r,e,t))];case"Einsum":return[n.einsum(S("equation",r,e,t),...S("tensors",r,e,t))];case"Transpose":return[n.transpose(S("x",r,e,t),S("perm",r,e,t))];case"_FusedMatMul":let[o,s]=S("fusedOps",r,e,t),a=o==="biasadd",i=s==="prelu",u=S("numArgs",r,e,t),l=S("leakyreluAlpha",r,e,t);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,m]=S("args",r,e,t);return[n.fused.matMul({a:S("a",r,e,t),b:S("b",r,e,t),transposeA:S("transposeA",r,e,t),transposeB:S("transposeB",r,e,t),bias:p,activation:s,preluActivationWeights:m,leakyreluAlpha:l})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var s_=(r,e,t,n=ct)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(S("x",r,e,t),S("axis",r,e,t),S("keepDims",r,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(S("x",r,e,t),S("mean",r,e,t),S("variance",r,e,t),S("offset",r,e,t),S("scale",r,e,t),S("epsilon",r,e,t))];case"FusedBatchNormV3":return[n.batchNorm(S("x",r,e,t),S("mean",r,e,t),S("variance",r,e,t),S("offset",r,e,t),S("scale",r,e,t),S("epsilon",r,e,t))];case"LRN":return[n.localResponseNormalization(S("x",r,e,t),S("radius",r,e,t),S("bias",r,e,t),S("alpha",r,e,t),S("beta",r,e,t))];case"Softmax":return[n.softmax(S("x",r,e,t))];case"LogSoftmax":return[n.logSoftmax(S("x",r,e,t))];case"SparseToDense":return[n.sparseToDense(S("sparseIndices",r,e,t),S("outputShape",r,e,t),S("sparseValues",r,e,t),S("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var a_=(r,e,t,n=ct)=>{switch(r.op){case"Max":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.max(S("x",r,e,t),i,u)]}case"Mean":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.mean(S("x",r,e,t),i,u)]}case"Min":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.min(S("x",r,e,t),i,u)]}case"Sum":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.sum(S("x",r,e,t),i,u)]}case"All":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.all(S("x",r,e,t),i,u)]}case"Any":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.any(S("x",r,e,t),i,u)]}case"ArgMax":{let i=S("axis",r,e,t);return[n.argMax(S("x",r,e,t),i)]}case"ArgMin":{let i=S("axis",r,e,t);return[n.argMin(S("x",r,e,t),i)]}case"Prod":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.prod(S("x",r,e,t),i,u)]}case"Cumprod":{let i=S("axis",r,e,t),u=S("exclusive",r,e,t),l=S("reverse",r,e,t);return[n.cumprod(S("x",r,e,t),i,u,l)]}case"Cumsum":{let i=S("axis",r,e,t),u=S("exclusive",r,e,t),l=S("reverse",r,e,t);return[n.cumsum(S("x",r,e,t),i,u,l)]}case"Bincount":let o=S("x",r,e,t),s=S("weights",r,e,t),a=S("size",r,e,t);return[n.bincount(o,s,a)];case"DenseBincount":{let i=S("x",r,e,t),u=S("weights",r,e,t),l=S("size",r,e,t),p=S("binaryOutput",r,e,t);return[n.denseBincount(i,u,l,p)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var i_=(r,e,t,n=ct)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=S("n",r,e,t),s=S("axis",r,e,t),a=S("tensors",r,e,t);return a=a.slice(0,o),[n.concat(a,s)]}case"Gather":{let o=S("x",r,e,t),s=S("indices",r,e,t);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=S("axis",r,e,t),s=S("batchDims",r,e,t),a=S("x",r,e,t),i=S("indices",r,e,t);return[n.gather(a,n.cast(i,"int32"),o,s)]}case"Reverse":{let o=S("dims",r,e,t),s=[];for(let i=0;i<o.length;i++)o[i]&&s.push(i);let a=S("x",r,e,t);return[n.reverse(a,s)]}case"ReverseV2":{let o=S("axis",r,e,t),s=S("x",r,e,t);return[n.reverse(s,o)]}case"Slice":{let o=S("begin",r,e,t),s=S("size",r,e,t);return[n.slice(S("x",r,e,t),o,s)]}case"StridedSlice":{let o=S("begin",r,e,t),s=S("end",r,e,t),a=S("strides",r,e,t),i=S("beginMask",r,e,t),u=S("endMask",r,e,t),l=S("ellipsisMask",r,e,t),p=S("newAxisMask",r,e,t),m=S("shrinkAxisMask",r,e,t),c=S("x",r,e,t);return[n.stridedSlice(c,o,s,a,i,u,l,p,m)]}case"Pack":return U(()=>{let o=S("axis",r,e,t),s=S("tensors",r,e,t),a=s[0].shape,i=n.squeeze(s[0]).shape,u=s.map(l=>{let p=y.arraysEqual(l.shape,a);if(!p&&!y.arraysEqual(n.squeeze(l).shape,i))throw new Error("the input tensors shape does not match");return p?l:n.reshape(l,a)});return[n.stack(u,o)]});case"Unpack":{let o=S("axis",r,e,t),s=S("tensor",r,e,t);return n.unstack(s,o)}case"Tile":{let o=S("reps",r,e,t);return[n.tile(S("x",r,e,t),o)]}case"Split":case"SplitV":{let o=S("axis",r,e,t),s=S("numOrSizeSplits",r,e,t),a=S("x",r,e,t);return n.split(a,s,o)}case"ScatterNd":{let o=S("indices",r,e,t),s=S("values",r,e,t),a=S("shape",r,e,t);return[n.scatterND(o,s,a)]}case"GatherNd":{let o=S("x",r,e,t),s=S("indices",r,e,t);return[n.gatherND(o,s)]}case"SparseToDense":{let o=S("sparseIndices",r,e,t),s=S("outputShape",r,e,t),a=S("sparseValues",r,e,t),i=S("defaultValue",r,e,t);return[n.sparseToDense(o,a,s,a.dtype===i.dtype?i:n.cast(i,a.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var u_=(r,e,t,n=ct)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:a,reverseIndexMap:i}=n.sparse.sparseFillEmptyRows(S("indices",r,e,t),S("values",r,e,t),S("denseShape",r,e,t),S("defaultValue",r,e,t));return[o,s,a,i]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(S("inputIndices",r,e,t),S("inputShape",r,e,t),S("newShape",r,e,t));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(S("data",r,e,t),S("indices",r,e,t),S("segmentIds",r,e,t))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(S("data",r,e,t),S("indices",r,e,t),S("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var l_=(r,e,t,n=ct)=>{switch(r.op){case"FFT":return[n.fft(S("x",r,e,t))];case"IFFT":return[n.ifft(S("x",r,e,t))];case"RFFT":return[n.rfft(S("x",r,e,t))];case"IRFFT":return[n.irfft(S("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var p_=(r,e,t,n=ct)=>{switch(r.op){case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(S("data",r,e,t),S("dataSplits",r,e,t),S("separator",r,e,t),S("nGramWidths",r,e,t),S("leftPad",r,e,t),S("rightPad",r,e,t),S("padWidth",r,e,t),S("preserveShortSequences",r,e,t));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:a}=n.string.stringSplit(S("input",r,e,t),S("delimiter",r,e,t),S("skipEmpty",r,e,t));return[o,s,a]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(S("input",r,e,t),S("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var m_=(r,e,t,n=ct)=>{switch(r.op){case"Cast":return[n.cast(S("x",r,e,t),S("dtype",r,e,t))];case"ExpandDims":{let o=S("axis",r,e,t);return[n.expandDims(S("x",r,e,t),o)]}case"Squeeze":{let o=S("axis",r,e,t);return[n.squeeze(S("x",r,e,t),o)]}case"Reshape":return[n.reshape(S("x",r,e,t),S("shape",r,e,t))];case"MirrorPad":return[n.mirrorPad(S("x",r,e,t),S("padding",r,e,t),S("mode",r,e,t))];case"PadV2":case"Pad":return[n.pad(S("x",r,e,t),S("padding",r,e,t),S("constantValue",r,e,t))];case"SpaceToBatchND":{let o=S("blockShape",r,e,t),s=S("paddings",r,e,t);return[n.spaceToBatchND(S("x",r,e,t),o,s)]}case"BatchToSpaceND":{let o=S("blockShape",r,e,t),s=S("crops",r,e,t);return[n.batchToSpaceND(S("x",r,e,t),o,s)]}case"DepthToSpace":{let o=S("blockSize",r,e,t),s=S("dataFormat",r,e,t).toUpperCase();return[n.depthToSpace(S("x",r,e,t),o,s)]}case"BroadcastTo":return[n.broadcastTo(S("x",r,e,t),S("shape",r,e,t))];case"BroadcastArgs":return[n.broadcastArgs(S("s0",r,e,t),S("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function mv(r,e,t,n,o=U){let s=((a,i,u)=>{switch(a.category){case"arithmetic":return o(()=>GE(a,i,u));case"basic_math":return o(()=>UE(a,i,u));case"control":return jE(a,i,u);case"convolution":return o(()=>YE(a,i,u));case"creation":return o(()=>ZE(a,i,u));case"dynamic":return QE(a,i,u);case"evaluation":return o(()=>JE(a,i,u));case"image":return o(()=>r_(a,i,u));case"graph":return o(()=>e_(a,i,u));case"logical":return o(()=>n_(a,i,u));case"matrices":return o(()=>o_(a,i,u));case"normalization":return o(()=>s_(a,i,u));case"reduction":return o(()=>a_(a,i,u));case"slice_join":return o(()=>i_(a,i,u));case"sparse":return o(()=>u_(a,i,u));case"spectral":return o(()=>l_(a,i,u));case"string":return o(()=>p_(a,i,u));case"transformation":return o(()=>m_(a,i,u));case"hash_table":return t_(a,i,u,n);case"custom":let l=ix(a.op);if(l&&l.customExecutor)return l.customExecutor(new iv(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return y.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var Ix=class{constructor(e={},t={},n={},o={}){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function cv(r,e,t,n){let o=new Set,s=[],a=null,i=null,u=new Set,l=Object.keys(r).map(c=>In(c)[0]),p=[];n!=null&&(p=n.map(c=>In(c.name)[0]));let m=[...e];for(;m.length>0;){let c=m.pop();if((dv(c)||Lte(c)||$te(c))&&a==null&&(a=c,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),t[c.name]==null&&l.indexOf(c.name)===-1&&p.indexOf(c.name)===-1){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{u.has(d.name)||(u.add(d.name),m.push(d))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function c_(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],a=Object.keys(o).map(p=>In(p)[0]).map(p=>r.nodes[p]),i=r.initNodes;a.forEach(p=>{n.has(p.name)&&s.push(p)}),r.weights.forEach(p=>{n.has(p.name)&&s.push(p)}),i?.forEach(p=>{n.has(p.name)&&s.push(p)});let u=new Set,l=[];for(;s.length>0;){let p=s.pop();u.add(p.name),e[p.name]||l.push(p),p.children.forEach(m=>{!u.has(m.name)&&n.has(m.name)&&m.inputs.every(c=>u.has(c.name))&&s.push(m)})}return l}var Mte=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Ete=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],_te=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function dv(r){return Mte.indexOf(r.op)>=0}function Lte(r){return Ete.indexOf(r.op)>=0}function $te(r){return _te.indexOf(r.op)>=0}var Bc=class{constructor(e,t){this.graph=e;this.parent=t;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Bc(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=cv(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=t.map(l=>l.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return c_(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(m=>this.graph.nodes[In(m)[0]]),s=t.map(m=>In(m)[0]),a=s.map(m=>this.graph.nodes[m]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),u=this.compiledMap.get(i);u==null&&(u=this.compile(e,a),this.compiledMap.set(i,u));let l={},p={};return U(()=>{let m=new Ix(this.weightMap,l,p,this.functionExecutorMap),c={...this.weightMap};Object.keys(e).forEach(h=>{let[g,b]=In(h),x=[];x[b]=e[h],c[g]=x});let d=this.getFrozenTensorIds(c),f={};for(let h=0;h<u.length;h++){let g=u[h];if(!c[g.name]){let b=mv(g,c,m,this._resourceManager);if(y.isPromise(b))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);c[g.name]=b,this.checkTensorForDisposal(g.name,g,c,m,d,s,f)}}return this.parent==null&&m.dispose(d),t.map(h=>vr(h,c,m))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(u=>{u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length)}),t.inputs.forEach(u=>{if(u.category!=="control"){let l=$E(u.name,n,o);l?.forEach(p=>{if(p&&!p.kept&&!s.has(p.id)){let m=i[p.id];if(m===1){if(!this.keepTensorForDebug)p.dispose();else{let[c,d]=Ws(t.name,o);this.intermediateTensors[c]?this.intermediateTensors[c][d]=p:(this.intermediateTensors[c]=[],this.intermediateTensors[c][d]=p)}delete i[p.id]}else m!=null&&i[p.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=B().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){console.warn(p.message)}this.resetIntermediateTensors();let a=new Ix(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let i=t.map(p=>vr(p,this.tensorsMap,a)),u=i.map(p=>p.id),l=Object.keys(e).map(p=>e[p].id);return this.keepIds=new Set([...u,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(T=>this.graph.nodes[In(T)[0]]),i=n.map(T=>In(T)[0]),u=i.map(T=>this.graph.nodes[T]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:m,syncInputs:c}=cv(e,u,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(T=>({node:T,contexts:t.currentContext})),f={...this.weightMap};Object.keys(e).forEach(T=>{let[I,k]=In(T),w=[];w[k]=e[T],f[I]=w});let h={},g=this.getFrozenTensorIds(f),b={};for(;d.length>0;){let T=this.processStack(a,d,t,f,b,g,i,h,l);await Promise.all(T)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=u.filter(T=>!dv(T)&&!vr(T.name,f,t)).map(T=>T.name);if(x.length>0){let T="";throw m!=null&&(T=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${T}`)}return f}processStack(e,t,n,o,s,a,i,u,l){let p=[];for(;t.length>0;){let m=t.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&S("isConstant",m.node,o,n)&&([c]=Ws(m.node.name,n)),o[m.node.name]==null){let d=mv(m.node,o,n,this._resourceManager);c||([c]=Ws(m.node.name,n));let f=n.currentContext;y.isPromise(d)?p.push(d.then(h=>(o[c]=h,n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,t,n,o,s,l),h))):(o[c]=d,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,t,n,o,s,l))}else this.processChildNodes(m.node,t,n,o,s,l)}return p}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[u]=Ws(i.name,n);s[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!vr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!vr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=In(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((u,l)=>a[l]===-1||a[l]===u);y.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=In(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=In(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var fv=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var Bte="?tfjs-format=file",Ote="model.json",Cx=class{constructor(e,t={},n=Pn){this.modelUrl=e;this.loadOptions=t;this.version="n/a";this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new fv}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return y.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(n=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Bc(xx.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=xx.Instance.transformGraph(e.modelInitializer);this.initializer=new Bc(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let o=n instanceof Xe?[n]:n,s={};return o.forEach((a,i)=>s[this.structuredOutputKeys[i]]=a),s}return n}normalizeInputs(e){if(!(e instanceof Xe)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function zte(r,e={},t=Pn){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof r=="string"&&(r=Ute(r));let n=new Cx(r,e,t);return await n.load(),n}function Gte(r){if(r==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!r.load)throw new Error(`modelUrl IO Handler ${r} has no load function`);let e=new Cx(r);return e.load(),e}function Ute(r){return r.endsWith("/")||(r=r+"/"),`${r}${Ote}${Bte}`}var Wte="0.0.0";var X_={};je(X_,{CSVDataset:()=>Ph,Dataset:()=>Ii,FileDataSource:()=>Lh,TextLineDataset:()=>Nh,URLDataSource:()=>$h,array:()=>E_,csv:()=>W_,func:()=>K_,generator:()=>V_,microphone:()=>q_,version_data:()=>j_,webcam:()=>H_,zip:()=>__});var M_=Fl(jd());var y_=Fl(jd());function d_(r,e){return kx(r,e)}function kx(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(xl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],u=kx(i,e,t,n);s[a]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function f_(r,e=gv){return h_(r,e)}function h_(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(xl(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(l=>l[a]),u=h_(i,e,t);s[a]=u}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function gv(r){return r===null?null:xl(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function Sx(r,e){let t=new Map;kx(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(y.isPromise(s)){let a=await s;t.set(o,a)}}return kx(r,e,t)}function xl(r){let e=!1;if(B().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=hv();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Xe)&&!(r instanceof Promise)&&!e)}function g_(r){return r==null||Kte(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Xe||y.isTypedArray(r)}function Kte(r){return r===null||typeof r!="object"&&typeof r!="function"}function b_(r){return d_(r,Vte)}function Vte(r){return r instanceof Xe?{value:r.clone(),recurse:!1}:xl(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Ah=class{constructor(e){this.capacity=e;this.begin=0;this.end=0;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var bv=class extends Ah{constructor(){super(bv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},vx=bv;vx.INITIAL_CAPACITY=32;function xv(r){return new I_(r)}function wh(r){return new C_(r)}function x_(r,e){return new Tv(r,e)}function T_(r,e=Iv.FAIL){return new R_(r,e)}var mr=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new D_(this,e)}filter(e){return new w_(this,e)}map(e){return new N_(this,e)}mapAsync(e){return new yv(this,e)}serialMapAsync(e){return new yv(this,e).serial()}flatmap(e){return new P_(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new A_(this,e,t)}columnMajorBatch(e,t=!0,n=gv){return this.rowMajorBatch(e,t).map(s=>f_(s,n))}concatenate(e,t){return new Tv(xv([this,e]),t)}take(e){return e<0||e==null?this:new v_(this,e)}skip(e){return e<0||e==null?this:new S_(this,e)}prefetch(e){return new Cv(this,e)}shuffle(e,t){return new F_(this,e,t)}serial(){return new k_(this)}},I_=class extends mr{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:b_(e),done:!1}}},C_=class extends mr{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},k_=class extends mr{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},S_=class extends mr{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Re(e.value)}return this.upstream.next()}},v_=class extends mr{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},A_=class extends mr{constructor(e,t,n=!0){super();this.upstream=e;this.batchSize=t;this.enableSmallLastBatch=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},w_=class extends mr{constructor(e,t){super();this.upstream=e;this.predicate=t;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Re(e.value)}}},N_=class extends mr{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ds.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ds.getTensorsInContainer(n);for(let s of t)Ds.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},D_=class extends mr{constructor(e,t){super();this.upstream=e;this.handler=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},yv=class extends mr{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ds.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Ds.getTensorsInContainer(n);for(let s of t)Ds.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},Oc=class extends mr{constructor(){super();this.outputQueue=new vx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},P_=class extends Oc{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ds.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ds.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Ds.isTensorInList(s,o)||s.dispose();return!0}},Tv=class extends mr{constructor(e,t){super();this.baseErrorHandler=t;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Iv=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))(Iv||{}),R_=class extends mr{constructor(e,t=0){super();this.iterators=e;this.mismatchMode=t;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(a){return a instanceof mr?{value:a.next().then(u=>(t++,u.done&&n++,u.value)),recurse:!1}:{value:null,recurse:!0}}let s=await Sx(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},Cv=class extends mr{constructor(e,t){super();this.upstream=e;this.bufferSize=t;this.buffer=new Ah(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},F_=class extends Cv{constructor(e,t,n){super(e,t);this.upstream=e;this.windowSize=t;this.upstreamExhausted=!1;this.random=y_.alea(n||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var Ii=class{constructor(){this.size=null}batch(e,t=!0){let n=this;y.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),Ln(async()=>(await n.iterator()).columnMajorBatch(e,t,Hte),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Ln(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Ln(async()=>(await t.iterator()).filter(o=>U(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Ln(async()=>(await t.iterator()).map(n=>U(()=>e(n))),this.size)}mapAsync(e){let t=this;return Ln(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Ln(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Ln(async()=>{let o=wh(async()=>({value:await t.iterator(),done:!1}));return x_(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Ln(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=M_.alea(t||y.now().toString());return Ln(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Ln(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ii.MAX_BUFFER_SIZE=1e4;function Ln(r,e=null){return new class extends Ii{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function E_(r){return Ln(async()=>xv(r),r.length)}function __(r){if(!xl(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return Ln(async()=>{let t=await Sx(r,n=>{if(n instanceof Ii)return{value:n.iterator(),recurse:!1};if(xl(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return T_(t,1)},e)}function Hte(r){if(r===null)return null;let e=r[0];return g_(e)?{value:qte(r),recurse:!1}:{value:null,recurse:!0}}function qte(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Xe?yr(r):Nr(r)}var Nh=class extends Ii{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var Ax='"',Dh=Symbol("out"),L_=Symbol("field"),wx=Symbol("quote"),kv=Symbol("quoteafterquote"),$_=Symbol("quoteinquote"),Ph=class extends Ii{constructor(e,t){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new Nh(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(y.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&y.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(y.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let u=t[s],l=null;if(u==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let p=Number(u);if(isNaN(p))i&&i.dtype==="bool"?l=this.getBoolean(u):l=u;else if(!i||!i.dtype)l=p;else switch(i.dtype){case"float32":l=p;break;case"int32":l=Math.floor(p);break;case"bool":l=this.getBoolean(u);break;default:l=p}}i&&i.isLabel?o[a]=l:n[a]=l}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,a=Dh;for(let i=0;i<s;i++)switch(a){case Dh:switch(e.charAt(i)){case Ax:o=i+1,a=wx;break;case this.delimiter:if(o=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Dh;break;default:a=L_,o=i;break}break;case L_:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i)),a=Dh,o=i+1;break;default:}break;case wx:switch(e.charAt(i)){case Ax:a=kv;break;default:}break;case kv:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i-1)),a=Dh,o=i+1;break;case Ax:a=wx;break;default:a=$_;break}break;case $_:switch(e.charAt(i)){case Ax:a=wx;break;default:}break;default:}if(a===kv?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var Rh=class extends mr{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!B().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new Rh(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(y.sizeFromShape(t));return n.set(e,n.length-e.length),Nr(n,t)}};var Fh=class extends mr{constructor(e,t){super();this.webcamVideoElement=e;this.webcamConfig=t;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=jt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-o)/2,i=s+n,u=o+a;this.cropBox=La([a,s,u,i],[1,4])}else this.cropBox=La([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!B().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Fh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&y.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=vb.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return U(()=>{let t=_r(oe(e,"float32"),0),n;n=ul.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return $(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Mh=class{};var Nx=class extends mr{split(e){return new B_(this,e)}},B_=class extends Nx{constructor(e,t){super();this.upstream=e;this.impl=new O_(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},O_=class extends Oc{constructor(e,t){super();this.upstream=e;this.separator=t;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var Sv=class extends mr{decodeUTF8(){return new z_(this)}},z_=class extends Nx{constructor(e){super();this.upstream=e;this.impl=new G_(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},G_=class extends Oc{constructor(e){super();this.upstream=e;if(B().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=hv();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return B().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var Eh=class extends Sv{constructor(e,t={}){super();this.file=e;this.options=t;y.assert(e instanceof Uint8Array||(B().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=i=>{let u=s.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(u)},s.onabort=i=>n(new Error("Aborted")),s.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,o);s.readAsArrayBuffer(a)}this.offset=o}),done:!1}}};async function U_(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=jte(r));let s=await(t||y.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new Eh(a,e)}else throw new Error(s.statusText)}var jte=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function Dx(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var Lh=class extends Mh{constructor(e,t={}){super();this.input=e;this.options=t}async iterator(){if(Dx(this.input)&&B().get("IS_NODE")){let e=_h();this.input=e.readFileSync(this.input.slice(7))}return new Eh(this.input,this.options)}};var $h=class extends Mh{constructor(e,t={}){super();this.url=e;this.fileOptions=t}async iterator(){return Dx(this.url)?new Lh(this.url,this.fileOptions).iterator():U_(this.url,this.fileOptions)}};function W_(r,e={}){return new Ph(new $h(r),e)}function K_(r){let e=wh(r);return Ln(async()=>e)}function V_(r){return Ln(async()=>{let e=await r();return wh(()=>e.next())})}async function H_(r,e){return Fh.create(r,e)}async function q_(r){return Rh.create(r)}var j_="0.0.0";function ne(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&y.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var Xte=xr.whereImpl,vv=class extends as{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new ri(this,Rn())}nextDataId(){return vv.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,B().get("IS_NODE")&&C.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(a=>y.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return C.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>y.decodeString(o));return xe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,t)}makeOutput(e,t,n){return Rn().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=y.now();return e(),{kernelMs:y.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ne([e],"where");let t=this.readSync(e.dataId);return Xte(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Bh=vv;Bh.nextDataId=0;var Vc={};je(Vc,{addImpl:()=>wv,bincountImpl:()=>Uc,bincountReduceImpl:()=>Px,ceilImpl:()=>Nv,concatImpl:()=>yp,equalImpl:()=>Dv,expImpl:()=>Rv,expm1Impl:()=>Mv,floorImpl:()=>Ev,gatherNdImpl:()=>Rx,gatherV2Impl:()=>Fx,greaterEqualImpl:()=>Lv,greaterImpl:()=>_v,lessEqualImpl:()=>Bv,lessImpl:()=>$v,linSpaceImpl:()=>Mx,logImpl:()=>Ov,maxImpl:()=>Ex,maximumImpl:()=>zv,minimumImpl:()=>Gv,multiplyImpl:()=>Oh,negImpl:()=>Uv,notEqualImpl:()=>Wv,prodImpl:()=>Kv,rangeImpl:()=>Tp,rsqrtImpl:()=>Vv,scatterImpl:()=>cu,sigmoidImpl:()=>TL,simpleAbsImpl:()=>Av,sliceImpl:()=>Ip,sparseFillEmptyRowsImpl:()=>_x,sparseReshapeImpl:()=>Lx,sparseSegmentReductionImpl:()=>Kc,sqrtImpl:()=>kL,squaredDifferenceImpl:()=>qv,stridedSliceImpl:()=>$x,stringNGramsImpl:()=>Cp,stringSplitImpl:()=>kp,stringToHashBucketFastImpl:()=>Sp,subImpl:()=>jv,tileImpl:()=>Bx,topKImpl:()=>Ox,transposeImpl:()=>Wc,uniqueImpl:()=>zx});function Av(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var Yte=r=>{let{x:e}=r.inputs,t=r.backend;ne(e,"abs");let n=new Float32Array(y.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=Av(o),t.makeOutput(n,e.shape,e.dtype)},Y_={kernelName:is,backendName:"cpu",kernelFunc:Yte};function st(r){return(e,t,n,o,s)=>{let a=C.assertAndGetBroadcastShape(e,t),i=a.length,u=y.computeStrides(a),l=y.sizeFromShape(a),p=y.getTypedArrayFromDType(s,l),m=e.length,c=t.length,d=y.computeStrides(e),f=y.computeStrides(t),h=C.getBroadcastDims(e,a),g=C.getBroadcastDims(t,a);if(h.length+g.length===0)for(let b=0;b<p.length;++b)p[b]=r(n[b%n.length],o[b%o.length]);else for(let b=0;b<p.length;++b){let x=y.indexToLoc(b,i,u),T=x.slice(-m);h.forEach(R=>T[R]=0);let I=y.locToIndex(T,m,d),k=x.slice(-c);g.forEach(R=>k[R]=0);let w=y.locToIndex(k,c,f);p[b]=r(n[I],o[w])}return[p,a]}}function Ar(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),u=t.data.get(i.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var Z_={kernelName:Nu,backendName:"cpu",kernelFunc:Ar};function zc(r,e,t="float32"){if(t==="complex64"){let o=zc(r,e,"float32"),s=zc(r,e,"float32");return Ar({inputs:{real:o,imag:s},backend:r})}let n=y.makeZerosTypedArray(y.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Kr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Q_={kernelName:Wn,backendName:"cpu",kernelFunc:Kr};function Ks(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var J_={kernelName:Lu,backendName:"cpu",kernelFunc:Ks};function Vs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Kr({inputs:{x:o},backend:t});let a=zc(t,o.shape,o.dtype),i=Vs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Ar({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=Ks({inputs:{input:o},backend:t}),i=Vs({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=Kr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(o.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(o.shape,"int32",i)}if(s==="bool"){let a=t.data.get(o.dataId).values,i=y.toTypedArray([0],o.dtype),[u,l]=st((p,m)=>p!==m?1:0)(o.shape,[],a,i,"bool");return t.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var eL={kernelName:Gn,backendName:"cpu",kernelFunc:Vs};function ut(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;ne([a,i],r);let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,m=a.dtype==="string"?C.fromUint8ToStringArray(l):l,c=a.dtype==="string"?C.fromUint8ToStringArray(p):p,d=n||a.dtype,[f,h]=e(a.shape,i.shape,m,c,d);return u.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let l=Vs({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(l.dataId),m=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,d=u.data.get(m.dataId).values,f=u.data.get(c.dataId).values,h=Vs({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),b=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,T=u.data.get(b.dataId).values,I=u.data.get(x.dataId).values,[k,w,R]=t(a.shape,i.shape,d,f,T,I),F=u.makeTensorInfo(R,"float32",k),M=u.makeTensorInfo(R,"float32",w),L=Ar({inputs:{real:F,imag:M},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(F),u.disposeIntermediateTensorInfo(M),L}else{let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,m=n||a.dtype,[c,d]=e(a.shape,i.shape,l,p,m);return u.makeTensorInfo(d,m,c)}}}function Gc(r){return(e,t,n,o,s,a)=>{let i=C.assertAndGetBroadcastShape(e,t),u=y.sizeFromShape(i),l=i.length,p=y.computeStrides(i),m=y.getTypedArrayFromDType("float32",u),c=y.getTypedArrayFromDType("float32",u),d=C.getBroadcastDims(e,i),f=C.getBroadcastDims(t,i),h=C.mergeRealAndImagArrays(n,o),g=C.mergeRealAndImagArrays(s,a),b=e.length,x=y.computeStrides(e),T=t.length,I=y.computeStrides(t);if(d.length+f.length===0)for(let k=0;k<m.length;k++){let w=k%h.length,R=k%g.length,F=r(h[w*2],h[w*2+1],g[R*2],g[R*2+1]);m[k]=F.real,c[k]=F.imag}else for(let k=0;k<m.length;k++){let w=y.indexToLoc(k,l,p),R=w.slice(-b);d.forEach(W=>R[W]=0);let F=y.locToIndex(R,b,x),M=w.slice(-T);f.forEach(W=>M[W]=0);let L=y.locToIndex(M,T,I),z=r(h[F*2],h[F*2+1],g[L*2],g[L*2+1]);m[k]=z.real,c[k]=z.imag}return[m,c,i]}}var wv=st((r,e)=>r+e),Zte=Gc((r,e,t,n)=>({real:r+t,imag:e+n})),Ci=ut(An,wv,Zte),tL={kernelName:An,backendName:"cpu",kernelFunc:Ci};function Uc(r,e,t,n,o){let s=y.sizeFromShape(n),a=y.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let u=r[i];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?a[u]+=e[i]:a[u]+=1)}return a}function Px(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=xe([o,t],e.dtype);for(let i=0;i<o;i++)for(let u=0;u<s;u++){let l=r.get(i,u);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(n?a.set(1,i,l):e.size>0?a.set(a.get(i,l)+e.get(i,u),i,l):a.set(a.get(i,l)+1,i,l))}return a}function Cn(r){return(e,t,n)=>{let o=y.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Me(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(ne(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=y.sizeFromShape(a.shape),p=t||a.dtype,m=y.getArrayFromDType(p,l);for(let c=0;c<l;++c)m[c]=e(u[c],o);return i.makeTensorInfo(a.shape,p,m)}}function Hs(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(ne(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=t||a.dtype,p=e(u,l,o);return i.makeTensorInfo(a.shape,l,p)}}var Nv=Cn(r=>Math.ceil(r)),Qte=Hs(ao,Nv),rL={kernelName:ao,backendName:"cpu",kernelFunc:Qte};function yp(r,e,t,n){let o=y.getArrayFromDType(t,y.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=y.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?C.fromUint8ToStringArray(a.vals):a.vals,u=0;for(let l=0;l<a.shape[0];++l){let p=l*e[1]+s;for(let m=0;m<a.shape[1];++m)o[p+m]=i[u++]}s+=a.shape[1]})}return o}var Dv=st((r,e)=>r===e?1:0),Pv=ut(ca,Dv,null,"bool"),nL={kernelName:ca,backendName:"cpu",kernelFunc:Pv};var Rv=Cn(r=>Math.exp(r)),Fv=Hs(go,Rv,"float32"),oL={kernelName:go,backendName:"cpu",kernelFunc:Fv};var Mv=Cn(r=>Math.expm1(r)),Jte=Hs(da,Mv),sL={kernelName:da,backendName:"cpu",kernelFunc:Jte};var Ev=Cn(r=>Math.floor(r)),ere=Hs(bo,Ev),aL={kernelName:bo,backendName:"cpu",kernelFunc:ere};function Rx(r,e,t,n,o,s,a,i,u){let l=xe([n,s],t);for(let p=0;p<n;p++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[p*o+d];c+=f*a[d],m.push(f)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${m} does not index into ${i}`);for(let d=0;d<s;d++)l.values[p*s+d]=e.get(...e.indexToLoc(c*s+d))}return l}function Fx(r,e,t){let n=xe(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],u=a[2],l=e.locToIndex([i,u]);a[2]=e.values[l];let p=r.locToIndex(a);0<=p&&p<r.values.length&&(n.values[o]=r.values[p])}return n}var _v=st((r,e)=>r>e?1:0),tre=ut(ga,_v,null,"bool"),iL={kernelName:ga,backendName:"cpu",kernelFunc:tre};var Lv=st((r,e)=>r>=e?1:0),rre=ut(To,Lv,null,"bool"),uL={kernelName:To,backendName:"cpu",kernelFunc:rre};var $v=st((r,e)=>r<e?1:0),nre=ut(ba,$v,null,"bool"),lL={kernelName:ba,backendName:"cpu",kernelFunc:nre};var Bv=st((r,e)=>r<=e?1:0),ore=ut(ya,Bv,null,"bool"),pL={kernelName:ya,backendName:"cpu",kernelFunc:ore};function Mx(r,e,t){let n=(e-r)/(t-1),o=y.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var Ov=Cn(r=>Math.log(r)),sre=Hs(Co,Ov),mL={kernelName:Co,backendName:"cpu",kernelFunc:sre};function Ex(r,e,t,n){let o=y.getTypedArrayFromDType(n,y.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let u=0;u<e;++u){let l=r[a+u];(Number.isNaN(l)||l>i)&&(i=l)}o[s]=i}return o}var zv=st((r,e)=>Math.max(r,e)),are=ut(So,zv),cL={kernelName:So,backendName:"cpu",kernelFunc:are};var Gv=st((r,e)=>Math.min(r,e)),ire=ut(No,Gv),dL={kernelName:No,backendName:"cpu",kernelFunc:ire};var Oh=st((r,e)=>r*e),ure=Gc((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),xp=ut(Po,Oh,ure),fL={kernelName:Po,backendName:"cpu",kernelFunc:xp};function Uv(r,e,t){let n=y.createScalarValue(-1,t);return Oh([],e,n,r,t)}function lre(r){let{inputs:e,backend:t}=r,{x:n}=e;ne(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=Uv(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var hL={kernelName:cs,backendName:"cpu",kernelFunc:lre};var Wv=st((r,e)=>r!==e?1:0),pre=ut(Ia,Wv,null,"bool"),gL={kernelName:Ia,backendName:"cpu",kernelFunc:pre};function Wc(r,e,t,n,o){let s=e.length,a=y.sizeFromShape(e),i=y.computeStrides(e),u=y.computeStrides(o),l=y.getTypedArrayFromDType(t,y.sizeFromShape(o));for(let p=0;p<a;++p){let m=y.indexToLoc(p,s,i),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=y.locToIndex(c,s,u);l[d]=r[p]}return l}function Zt(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;ne(o,"transpose");let a=o.shape.length,i=new Array(a);for(let m=0;m<i.length;m++)i[m]=o.shape[s[m]];let u=n.data.get(o.dataId).values,l=Wc(u,o.shape,o.dtype,s,i);return{dataId:n.write(l,i,o.dtype),shape:i,dtype:o.dtype}}var bL={kernelName:Nn,backendName:"cpu",kernelFunc:Zt};function Kv(r,e,t,n){let[o,s]=C.computeOutAndReduceShapes(r,n),a=_t(e,"int32"),i=y.makeZerosTypedArray(y.sizeFromShape(o),a),u=y.sizeFromShape(s);for(let l=0;l<i.length;++l){let p=l*u,m=1;for(let c=0;c<u;++c)m*=t[p+c];i[l]=m}return{outVals:i,outShape:o,outDtype:a}}function mre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"prod");let i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=C.getAxesPermutation(u,i),p=u,m=o,c=[];l!=null&&(m=Zt({inputs:{x:o},backend:t,attrs:{perm:l}}),c.push(m),p=C.getInnerMostAxes(p.length,i));let d=t.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=Kv(m.shape,m.dtype,d,p),b=h;return a&&(b=C.expandShapeToKeepDim(h,u)),c.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(b,g,f)}var yL={kernelName:Eo,backendName:"cpu",kernelFunc:mre};function Tp(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return y.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),u=y.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+t;return u}var Vv=Cn(r=>1/Math.sqrt(r)),cre=Hs(Oo,Vv),xL={kernelName:Oo,backendName:"cpu",kernelFunc:cre};function cu(r,e,t,n,o,s,a,i,u,l){let p=[n/o,o],m=r.values,c=e.values;if(n===0)return xe(t,e.dtype);let d=xe(p,e.dtype);typeof u=="string"||typeof u=="number"?d.values.fill(u):typeof u=="boolean"&&d.values.fill(+u);for(let f=0;f<s;f++){let h=[],g=0;for(let b=0;b<a;b++){let x=m[f*a+b];h.push(x),g+=x*i[b]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let b=0;b<o;b++)l?d.values[g*o+b]+=c[f*o+b]:d.values[g*o+b]=e.rank===0?c[0]:c[f*o+b]}return d}var TL=Cn(r=>1/(1+Math.exp(-r))),Hv=Me(Go,r=>1/(1+Math.exp(-r))),IL={kernelName:Go,backendName:"cpu",kernelFunc:Hv};function Ip(r,e,t,n,o){let s=Tt.isSliceContinous(n,e,t),a=y.sizeFromShape(t),i=y.computeStrides(n);if(s){let m=Tt.computeFlatOffset(e,i);return o==="string"?r.slice(m,m+a):r.subarray(m,m+a)}let u=o==="string"?C.fromUint8ToStringArray(r):r,l=xe(n,o,u),p=xe(t,o);for(let m=0;m<p.size;++m){let c=p.indexToLoc(m),d=c.map((f,h)=>f+e[h]);p.set(l.get(...d),...c)}return o==="string"?C.fromStringArrayToUint8(p.values):p.values}function qs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;ne(o,"slice");let[i,u]=Tt.parseSliceParams(o,s,a);Tt.assertParamsValid(o,i,u);let l=t.data.get(o.dataId).values,p=Ip(l,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,p)}var CL={kernelName:bs,backendName:"cpu",kernelFunc:qs};function _x(r,e,t,n,o,s,a){let i=e[0],u=s[0],l=new Array(u),p=new Array(i),m=e[1];if(u===0){if(i!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=y.getArrayFromDType(t,0),b=y.getArrayFromDType(o,0);return[g,[0,m],b,l,p]}let c=!0,d=0,f=new Array(u).fill(0);for(let g=0;g<i;++g){let b=r[g*m];if(b<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=u)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,u));++f[b],c=c&&b>=d,d=b}let h=!0;for(let g=0;g<u;++g){let b=f[g]===0;l[g]=b,h=h&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,b=n;for(let x=0;x<i;++x)p[x]=x;return[g,[i,m],b,l,p]}else{let g=f[u-1],b=y.getArrayFromDType(t,g*m),x=y.getArrayFromDType(o,g),T=new Array(u).fill(0);for(let I=0;I<i;++I){let k=r[I*m],w=T[k],R=(k===0?0:f[k-1])+w;T[k]++;for(let F=0;F<m;++F)b[R*m+F]=r[I*m+F];x[R]=n[I],p[I]=R}for(let I=0;I<u;++I)if(T[I]===0){let w=I===0?0:f[I-1];b[w*m+0]=I;for(let R=1;R<m;++R)b[w*m+R]=0;x[w]=a}return[b,[g,m],x,l,p]}}function Lx(r,e,t,n,o){let s=y.sizeFromShape(n),a=e[0],i=o.length,u=[],l=1,p=-1;for(let g=0;g<i;++g){let b=o[g];if(b===-1){if(p!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,g));p=g,u.push(1)}else{if(b<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(g,b));l*=b,u.push(b)}}if(p!==-1){if(l<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/l);if(l*g!==s)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[p]=g}if(y.sizeFromShape(u)!==s)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let h=y.getArrayFromDType(t,a*i);for(let g=0;g<a;++g){let b=0;for(let x=0;x<c;++x)b+=r[g*c+x]*d[x];for(let x=0;x<i;++x)h[g*i+x]=Math.trunc(b/f[x]),b%=f[x]}return[h,[a,i],u]}function Kc(r,e,t,n,o,s=!1,a=0){let i=n.length,u=[e[0],r.length/e[0]],l=u[1],m=i>0?o[i-1]+1:0;if(m<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=e.slice();c[0]=m;let d=c.reduce((T,I)=>T*I,1),f=y.getArrayFromDType(t,d);if(i===0)return m>0&&f.fill(a),[f,c];if(m<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,b=0,x=o[h];for(;;){let T=0;if(g<i){if(T=o[g],x===T){++g;continue}if(x>=T)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=m)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,m));x>b&&f.fill(a,b*l,x*l);for(let I=h;I<g;++I){let k=n[I];if(k<0||k>=u[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(I,n[I],u[0]));for(let w=0;w<l;w++)f[x*l+w]+=r[k*l+w]}if(s)for(let I=0;I<l;I++)f[x*l+I]/=g-h;if(h=g,++g,b=x+1,x=T,g>i)break}return b<m&&f.fill(a,b*l,m*l),[f,c]}var kL=Cn(r=>Math.sqrt(r)),dre=Me(Uo,r=>Math.sqrt(r)),SL={kernelName:Uo,backendName:"cpu",kernelFunc:dre};var qv=st((r,e)=>{let t=r-e;return t*t}),fre=ut(Vo,qv),vL={kernelName:Vo,backendName:"cpu",kernelFunc:fre};function $x(r,e,t,n){let o=xe(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*t[u]+n[u];o.set(e.get(...i),...a)}return o}var AL=class{constructor(e,t,n,o,s,a){this.separator=y.encodeString(e),this.nGramWidths=t,this.leftPad=y.encodeString(n),this.rightPad=y.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,a){for(let i=0;i<s;++i){let u=this.getPadWidth(a),l=Math.max(0,u-i),p=Math.max(0,u-(s-(i+1))),m=a-(l+p),c=t+(l>0?0:i-u),d=0;d+=l*this.leftPad.length;for(let x=0;x<m;++x)d+=e[c+x].length;d+=p*this.rightPad.length,d+=(l+p+m-1)*this.separator.length,n[o+i]=new Uint8Array(d);let h=n[o+i],g=0,b=x=>x.forEach(T=>h[g++]=T);for(let x=0;x<l;++x)b(this.leftPad),b(this.separator);for(let x=0;x<m-1;++x)b(e[c+x]),b(this.separator);if(m>0){b(e[c+m-1]);for(let x=0;x<p;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<p-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let p=t[l]>=u;if(p=p&&t[l]<=n,!p)throw new Error(`Invalid split value ${t[l]}, must be in [${u}, ${n}]`);u=t[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,a=y.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)a[l]=0;return[u,a]}a[0]=0;for(let u=1;u<=s;++u){let l=t[u]-t[u-1],p=0;this.nGramWidths.forEach(m=>{p+=this.getNumNGrams(l,m)}),this.preserveShort&&l>0&&p===0&&(p=1),a[u]=a[u-1]+p}let i=new Array(a[s]);for(let u=0;u<s;++u){let l=t[u],p=a[u];if(this.nGramWidths.forEach(m=>{let c=t[u+1]-t[u],d=this.getNumNGrams(c,m);this.createNGrams(e,l,i,p,d,m),p+=d}),this.preserveShort&&p===a[u]){let m=t[u+1]-t[u];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(e,l,i,p,d,c)}}return[i,a]}};function Cp(r,e,t,n,o,s,a,i){return new AL(t,n,o,s,a,i).compute(r,e)}function hre(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!t||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!t||a.length!==0)&&n.push(a),o=s+1}}function kp(r,e,t){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let c=0;c<n;++c){let d=o.length;hre(r[c],e,t,o);let f=o.length-d;i[c]=f,s+=f,a=Math.max(a,f)}let u=y.getArrayFromDType("int32",s*2),l=new Array(s),p=[n,a],m=0;for(let c=0;c<n;++c)for(let d=0;d<i[c];++d)u[m*2]=c,u[m*2+1]=d,l[m]=o[m],++m;return[u,l,p]}function Sp(r,e){let t=y.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=y.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var jv=st((r,e)=>r-e),gre=Gc((r,e,t,n)=>({real:r-t,imag:e-n})),zh=ut(Ho,jv,gre),wL={kernelName:Ho,backendName:"cpu",kernelFunc:zh};function Bx(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=xe(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let u=0;u<a.length;u++)a[u]=s[u]%r.shape[u];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var Gh=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function NL(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let i=n-t+1,u=e-t+1,l=Math.log(i),p=.5*Math.exp(2*l/3),m=.5*Math.sqrt(l*p*(i-p)/i)*Math.sign(u-i/2),c=Math.max(t,Math.floor(e-u*p/i+m)),d=Math.min(n,Math.floor(e+(i-u)*p/i+m));NL(r,e,c,d)}let o=r[e],s=t,a=n;for(y.swap(r,t,e),Gh(r[n],o)>0&&y.swap(r,t,n);s<a;){for(y.swap(r,s,a),s++,a--;Gh(r[s],o)<0;)s=s+1;for(;Gh(r[a],o)>0;)a=a-1}Gh(r[t],o)===0?y.swap(r,t,a):(a=a+1,y.swap(r,a,n)),a<=e&&(t=a+1),e<=a&&(n=a-1)}}function Ox(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],u=y.getTypedArrayFromDType(t,a*n),l=y.getTypedArrayFromDType("int32",a*n);for(let m=0;m<a;m++){let c=m*i,d=r.subarray(c,c+i),f=new Array(d.length);d.forEach((x,T)=>f[T]={value:x,index:T}),n<f.length&&(NL(f,n),f=f.slice(0,n)),o&&f.sort(Gh);let h=m*n,g=u.subarray(h,h+n),b=l.subarray(h,h+n);for(let x=0;x<n;x++)g[x]=f[x].value,b[x]=f[x].index}let p=e.slice();return p[p.length-1]=n,[xe(p,t,u),xe(p,"int32",l)]}function zx(r,e,t,n){let o=y.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let f=0;f<o;f++)s[0]*=t[f];s[1]=t[o];for(let f=o+1;f<t.length;f++)s[2]*=t[f];let a={},i=new Int32Array(t[o]),u=new yt(s,n,r),l=[],p=s[0]===1&&s[2]===1;for(let f=0;f<t[o];f++){let h;if(p)h=r[f].toString();else{let g=[];for(let b=0;b<s[0];b++)for(let x=0;x<s[2];x++)g.push(u.get(b,f,x));h=g.join(",")}if(a[h]!==void 0)i[f]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[f]=g,l.push(f)}}let m=s.slice();m[1]=Object.keys(a).length;let c=new yt(m,n);l.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let b=0;b<s[2];b++)c.set(u.get(g,f,b),g,h,b)});let d=t.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:i}}var bre="0.0.0";Yu("cpu",()=>new Bh,1);var Xv=Me(ho,r=>r>=0?r:Math.exp(r)-1),DL={kernelName:ho,backendName:"cpu",kernelFunc:Xv};function Yv(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;ne([o],"leakyRelu");let a=y.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,u=y.getTypedArrayFromDType("float32",a);for(let l=0;l<i.length;l++)u[l]=i[l]<0?s*i[l]:i[l];return t.makeTensorInfo(o.shape,"float32",u)}var PL={kernelName:Io,backendName:"cpu",kernelFunc:Yv};var yre=st((r,e)=>r<0?e*r:r);function Zv(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;ne([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,u]=yre(n.shape,o.shape,s,a,"float32");return t.makeTensorInfo(u,"float32",i)}var RL={kernelName:Mo,backendName:"cpu",kernelFunc:Zv};var Qv=Me(_o,r=>Math.max(0,r)),FL={kernelName:_o,backendName:"cpu",kernelFunc:Qv};var Jv=Me(Bo,r=>Math.min(Math.max(0,r),6)),ML={kernelName:Bo,backendName:"cpu",kernelFunc:Jv};function vp(r,e,t,n,o){if(t==="linear")return Kr({inputs:{x:e},backend:r});if(t==="relu")return Qv({inputs:{x:e},backend:r});if(t==="elu")return Xv({inputs:{x:e},backend:r});if(t==="relu6")return Jv({inputs:{x:e},backend:r});if(t==="prelu")return Zv({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return Yv({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return Hv({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function tt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=y.sizeFromShape(o.shape),i=y.inferFromImplicitShape(s,a),u=y.sizeFromShape(i);y.assert(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let l=t.data.get(o.dataId);if(l.complexTensorInfos!=null){let p=l.complexTensorInfos.real,m=l.complexTensorInfos.imag;p.shape=i,m.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var EL={kernelName:hs,backendName:"cpu",kernelFunc:tt};function eA(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;ne([o,s],"matMul");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[l-1]:s.shape[l-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),T=Dr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,p,c]:[g,c,p],k=i?[b,d,m]:[b,m,d],w=tt({inputs:{x:o},backend:t,attrs:{shape:I}}),R=tt({inputs:{x:s},backend:t,attrs:{shape:k}}),F=a?w.shape[1]:w.shape[2],M=a?w.shape[2]:w.shape[1],L=i?R.shape[1]:R.shape[2],z=Math.max(g,b),W=t.data.get(w.dataId).values,V=t.data.get(R.dataId).values,j=y.computeStrides(w.shape),q=y.computeStrides(R.shape),[Y,J,H]=a?[j[0],1,j[1]]:[j[0],j[1],1],[te,se,ae]=i?[1,q[1],q[0]]:[q[1],1,q[0]],pe=M*L,ie=xe([z,M,L],w.dtype),be=ie.values,fe=t.blockSize;for(let Ie=0;Ie<z;Ie++)for(let we=0;we<M;we+=fe)for(let Ee=0;Ee<L;Ee+=fe)for(let Le=0;Le<F;Le+=fe){let Ze=Math.min(we+fe,M),ee=Math.min(Ee+fe,L),gt=Math.min(Le+fe,F);for(let Be=we;Be<Ze;Be++)for(let Et=Ee;Et<ee;Et++){let Pt=0;for(let pt=Le;pt<gt;pt++){let Jt=Math.min(Ie,g-1)*Y,Ot=Math.min(Ie,b-1)*ae,rn=W[Jt+Be*J+pt*H],Ht=V[pt*te+Et*se+Ot];Pt+=rn*Ht}be[Ie*pe+(Be*L+Et)]+=Pt}}return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(R),t.makeTensorInfo(T,ie.dtype,ie.values)}var _L={kernelName:so,backendName:"cpu",kernelFunc:eA};function xre(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c,d,f,h=[];c=eA({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:t}),a&&(d=Ci({inputs:{a:c,b:a},backend:t}),h.push(c),c=d),p&&(f=vp(t,c,p,i,m),h.push(c),c=f);for(let b of h)t.disposeIntermediateTensorInfo(b);return c}var LL={kernelName:ks,backendName:"cpu",kernelFunc:xre};var Tre=Me(Di,r=>Math.acos(r)),$L={kernelName:Di,backendName:"cpu",kernelFunc:Tre};var Ire=Me(Pi,r=>Math.acosh(r)),BL={kernelName:Pi,backendName:"cpu",kernelFunc:Ire};function Cre(r){let{inputs:e,backend:t}=r,n=e;ne(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=xe(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let u=o[i];for(let l=0;l<a.length;l++)a[l]+=u[l]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var OL={kernelName:ro,backendName:"cpu",kernelFunc:Cre};function kre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"all");let i=y.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Zt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("all",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),p.dtype),h=t.data.get(p.dataId).values;for(let b=0;b<f.length;++b){let x=b*d,T=h[x];for(let I=0;I<d;++I){let k=h[x+I];T=T&&k}f[b]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(m,p.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),x=tt({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}var zL={kernelName:Ri,backendName:"cpu",kernelFunc:kre};function Sre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"any");let i=y.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Zt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("any",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),p.dtype),h=t.data.get(p.dataId).values;for(let b=0;b<f.length;++b){let x=b*d,T=h[x];for(let I=0;I<d;++I){let k=h[x+I];T=T||k}f[b]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(m,p.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),x=tt({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}var GL={kernelName:Fi,backendName:"cpu",kernelFunc:Sre};function vre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMax");let a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Zt({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMax",a,u.shape.length);let[p,m]=C.computeOutAndReduceShapes(u.shape,a),c=y.sizeFromShape(p),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=t.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,x=h[b],T=0;for(let I=0;I<f;++I){let k=h[b+I];k>x&&(x=k,T=I)}d[g]=T}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",d)}var UL={kernelName:no,backendName:"cpu",kernelFunc:vre};function Are(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMin");let a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Zt({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMin",a,u.shape.length);let[p,m]=C.computeOutAndReduceShapes(u.shape,a),c=y.sizeFromShape(p),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=t.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,x=h[b],T=0;for(let I=0;I<f;++I){let k=h[b+I];k<x&&(x=k,T=I)}d[g]=T}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",d)}var WL={kernelName:si,backendName:"cpu",kernelFunc:Are};var wre=Me(Mi,r=>Math.asin(r)),KL={kernelName:Mi,backendName:"cpu",kernelFunc:wre};var Nre=Me(Ei,r=>Math.asinh(r)),VL={kernelName:Ei,backendName:"cpu",kernelFunc:Nre};var Dre=Me(_i,r=>Math.atan(r)),HL={kernelName:_i,backendName:"cpu",kernelFunc:Dre};var Pre=st((r,e)=>Math.atan2(r,e)),Rre=ut($i,Pre),qL={kernelName:$i,backendName:"cpu",kernelFunc:Rre};var Fre=Me(Li,r=>Math.atanh(r)),jL={kernelName:Li,backendName:"cpu",kernelFunc:Fre};function Hc(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=xe(o.outShape,t),g=h.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],x=o.outShape[2]*o.outShape[3],T=o.outShape[3];for(let I=0;I<o.batchSize;++I){let k=I*b,w=I*n[0];for(let R=0;R<o.inChannels;++R)for(let F=0;F<o.outHeight;++F){let M=F*a-c,L=Math.max(0,M),z=Math.min(o.inHeight,p+M),W=k+F*x;for(let V=0;V<o.outWidth;++V){let j=V*i-d,q=Math.max(0,j),Y=Math.min(o.inWidth,m+j),J=f,H=0,te=0;for(let ae=L;ae<z;ae+=u){let pe=w+ae*n[1];for(let ie=q;ie<Y;ie+=l){let be=pe+ie*n[2],fe=r[be+R];s==="max"&&fe>J?J=fe:s==="avg"&&(H+=fe,te++)}if(isNaN(J))break}let se=W+V*T+R;g[se]=s==="avg"?H/te:J}}}return h}function Gx(r,e,t,n,o=!1,s=!1){let a=xe(n.outShape,"int32"),i=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=xe(e,t,r);for(let g=0;g<n.batchSize;++g)for(let b=0;b<n.inChannels;++b)for(let x=0;x<n.outHeight;++x){let T=x*i-d,I=T;for(;I<0;)I+=l;let k=Math.min(n.inHeight,m+T);for(let w=0;w<n.outWidth;++w){let R=w*u-f,F=R;for(;F<0;)F+=p;let M=Math.min(n.inWidth,c+R),L=Number.NEGATIVE_INFINITY,z=-1;for(let W=I;W<k;W+=l){let V=W-T;for(let j=F;j<M;j+=p){let q=j-R,Y=h.get(g,W,j,b);Y>L&&(L=Y,o?z=s?((g*n.inHeight+W)*n.inWidth+j)*n.inChannels+b:(W*n.inWidth+j)*n.inChannels+b:z=V*c+q)}}a.set(z,g,x,w,b)}}return a}function Ux(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,p=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,b=o.padInfo.left,x=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,T=xe(o.outShape,t),I=T.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],w=o.outShape[2]*o.outShape[3]*o.outShape[4],R=o.outShape[3]*o.outShape[4],F=o.outShape[4];for(let M=0;M<o.batchSize;++M){let L=M*k,z=M*n[0];for(let W=0;W<o.inChannels;++W)for(let V=0;V<o.outDepth;++V){let j=V*a-h,q=j;for(;q<0;)q+=l;let Y=Math.min(o.inDepth,c+j),J=L+V*w;for(let H=0;H<o.outHeight;++H){let te=H*i-g,se=te;for(;se<0;)se+=p;let ae=Math.min(o.inHeight,d+te),pe=J+H*R;for(let ie=0;ie<o.outWidth;++ie){let be=ie*u-b,fe=be;for(;fe<0;)fe+=m;let Ie=Math.min(o.inWidth,f+be),we=pe+ie*F,Ee=x,Le=0,Ze=0;for(let gt=q;gt<Y;gt+=l){let Be=z+gt*n[1];for(let Et=se;Et<ae;Et+=p){let Pt=Be+Et*n[2];for(let pt=fe;pt<Ie;pt+=m){let Jt=Pt+pt*n[3],Ot=r[Jt+W];if(s==="max"&&Ot>Ee?Ee=Ot:s==="avg"&&(Le+=Ot,Ze++),isNaN(Ee))break}if(isNaN(Ee))break}if(isNaN(Ee))break}let ee=we+W;I[ee]=s==="avg"?Le/Ze:Ee}}}}return T}function XL(r,e){let t=xe(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,c=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let b=0;b<e.outDepth;++b){let x=b*n-c,T=x;for(;T<0;)T+=a;let I=Math.min(e.inDepth,l+x);for(let k=0;k<e.outHeight;++k){let w=k*o-d,R=w;for(;R<0;)R+=i;let F=Math.min(e.inHeight,p+w);for(let M=0;M<e.outWidth;++M){let L=M*s-f,z=L;for(;z<0;)z+=u;let W=Math.min(e.inWidth,m+L),V=Number.NEGATIVE_INFINITY,j=-1;for(let q=T;q<I;q+=a){let Y=q-x;for(let J=R;J<F;J+=i){let H=J-w;for(let te=z;te<W;te+=u){let se=te-L,ae=r.get(h,q,J,te,g);ae>=V&&(V=ae,j=Y*p*m+H*p+se)}}}t.set(j,h,b,k,M,g)}}}return t}function Mre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u),m;if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))m=Kr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=Hc(c,o.shape,o.dtype,d,p,"avg");m=t.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var YL={kernelName:oo,backendName:"cpu",kernelFunc:Mre};function Ere(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;ne(o,"avgPool3d");let p=C.computePool3DInfo(o.shape,s,a,1,i,u,l),m=t.data.get(o.dataId).values,c=Ux(m,o.shape,o.dtype,y.computeStrides(o.shape),p,"avg");return t.makeTensorInfo(c.shape,"float32",c.values)}var ZL={kernelName:wu,backendName:"cpu",kernelFunc:Ere};function _re(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;ne([o,s],"avgPool3DGrad");let p=C.computePool3DInfo(s.shape,a,i,1,u,l),m=p.strideDepth,c=p.strideHeight,d=p.strideWidth,f=p.filterDepth,h=p.filterHeight,g=p.filterWidth,b=p.dilationDepth,x=p.dilationHeight,T=p.dilationWidth,I=p.effectiveFilterDepth,k=p.effectiveFilterHeight,w=p.effectiveFilterWidth,R=I-1-p.padInfo.front,F=w-1-p.padInfo.left,M=k-1-p.padInfo.top,L=xe(s.shape,"float32"),z=1/(f*h*g),W=t.bufferSync(o);for(let V=0;V<p.batchSize;++V)for(let j=0;j<p.inChannels;++j)for(let q=0;q<p.inDepth;++q)for(let Y=0;Y<p.inHeight;++Y)for(let J=0;J<p.inWidth;++J){let H=q-R,te=Y-M,se=J-F,ae=0;for(let pe=0;pe<I;pe+=b){let ie=(H+pe)/m;if(!(ie<0||ie>=p.outDepth||Math.floor(ie)!==ie))for(let be=0;be<k;be+=x){let fe=(te+be)/c;if(!(fe<0||fe>=p.outHeight||Math.floor(fe)!==fe))for(let Ie=0;Ie<w;Ie+=T){let we=(se+Ie)/d;if(we<0||we>=p.outWidth||Math.floor(we)!==we)continue;ae+=W.get(V,ie,fe,we,j)}}}L.set(ae*z,V,q,Y,J,j)}return t.makeTensorInfo(L.shape,L.dtype,L.values)}var QL={kernelName:mm,backendName:"cpu",kernelFunc:_re};function Lre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;ne([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=C.computePool2DInfo(a.shape,i,u,1,l),m=p.strideHeight,c=p.strideWidth,d=p.filterHeight,f=p.filterWidth,h=p.dilationHeight,g=p.dilationWidth,b=p.effectiveFilterHeight,x=p.effectiveFilterWidth,T=x-1-p.padInfo.left,I=b-1-p.padInfo.top,k=xe(a.shape,"float32"),w=1/(d*f),R=t.data.get(o.dataId).values,F=xe(o.shape,"float32",R);for(let M=0;M<p.batchSize;++M)for(let L=0;L<p.inChannels;++L)for(let z=0;z<p.inHeight;++z)for(let W=0;W<p.inWidth;++W){let V=z-I,j=W-T,q=0;for(let Y=0;Y<b;Y+=h){let J=(V+Y)/m;if(!(J<0||J>=p.outHeight||Math.floor(J)!==J))for(let H=0;H<x;H+=g){let te=(j+H)/c;if(te<0||te>=p.outWidth||Math.floor(te)!==te)continue;q+=F.get(M,J,te,L)}}k.set(q*w,M,z,W,L)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var JL={kernelName:pm,backendName:"cpu",kernelFunc:Lre};function $re(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:u}=e;y.assert(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ne([o,i,u,s,a],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=t.data.get(o.dataId).values,m=t.data.get(i.dataId).values,c=t.data.get(u.dataId).values,d=s?t.data.get(s.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(p.length),g=f.length,b=d.length,x=c.length,T=m.length,I=0,k=0,w=0,R=0;for(let F=0;F<p.length;++F)h[F]=f[I++]+(p[F]-m[k++])*d[w++]/Math.sqrt(c[R++]+l),I>=g&&(I=0),k>=T&&(k=0),w>=b&&(w=0),R>=x&&(R=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var e$={kernelName:xo,backendName:"cpu",kernelFunc:$re};function Bre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;ne([o],"batchToSpaceND");let i=s.reduce((b,x)=>b*x),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=tt({inputs:{x:o},backend:t,attrs:{shape:u}}),f=Zt({inputs:{x:d},backend:t,attrs:{perm:l}}),h=tt({inputs:{x:f},backend:t,attrs:{shape:p}}),g=qs({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var t$={kernelName:us,backendName:"cpu",kernelFunc:Bre};function Ore(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Uc(i,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}var r$={kernelName:cm,backendName:"cpu",kernelFunc:Ore};function zre(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var n$={kernelName:dm,backendName:"cpu",kernelFunc:zre};var Gre=Me(Un,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),o$={kernelName:Un,backendName:"cpu",kernelFunc:Gre};var Ure=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(y.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,u=t.data.get(a.dataId).values;for(let l=0;l<i.length;l++){let p=i[l],m=u[l];n[l]=Math.hypot(p,m)}return t.makeOutput(n,e.shape,"float32")},s$={kernelName:Du,backendName:"cpu",kernelFunc:Ure};function ki(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var a$={kernelName:Mu,backendName:"cpu",kernelFunc:ki};function Tl(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(h=>h.shape),s);if(y.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>y.sizeFromShape(h.shape)>0);if(i.length===1)return Kr({inputs:{x:i[0]},backend:t});let u=i.map(h=>h.shape);if(C.assertParamsConsistent(u,s),i[0].dtype==="complex64"){let h=i.map(I=>Ks({inputs:{input:I},backend:t})),g=i.map(I=>ki({inputs:{input:I},backend:t})),b=Tl({inputs:h,backend:t,attrs:{axis:s}}),x=Tl({inputs:g,backend:t,attrs:{axis:s}}),T=Ar({inputs:{real:b,imag:x},backend:t});return h.forEach(I=>t.disposeIntermediateTensorInfo(I)),g.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),T}let l=i.map(h=>{let g=y.sizeFromShape(h.shape.slice(s));return tt({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),p=l.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=C.computeOutShape(l.map(h=>h.shape),1);let m=l[0].shape[0]===1,c=yp(p,a,e[0].dtype,m),d=C.computeOutShape(i.map(h=>h.shape),s),f=t.makeTensorInfo(d,e[0].dtype,c);return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var i$={kernelName:ls,backendName:"cpu",kernelFunc:Tl};function tA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n;ne([o,s],"conv2d");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,b=c.padInfo.left,x=c.padInfo.top,T=c.dataFormat==="channelsLast",I=new yt(c.outShape,o.dtype),k=y.computeStrides(o.shape),w=y.computeStrides(s.shape),R=k[0],F=T?k[1]:k[2],M=T?k[2]:1,L=T?1:k[1],z=I.strides[0],W=T?I.strides[1]:I.strides[2],V=T?I.strides[2]:1,j=T?1:I.strides[1],q=t.data.get(o.dataId).values,Y=t.data.get(s.dataId).values,J=I.values;for(let H=0;H<c.batchSize;++H){let te=H*R,se=H*z;for(let ae=0;ae<c.outHeight;++ae){let pe=se+ae*W,ie=ae*c.strideHeight-x;for(let be=0;be<d;++be){let fe=ie+be*h;if(fe<0||fe>=c.inHeight)continue;let Ie=be*w[0],we=te+fe*F;for(let Ee=0;Ee<c.outWidth;++Ee){let Le=pe+Ee*V,Ze=Ee*c.strideWidth-b;for(let ee=0;ee<f;++ee){let gt=Ze+ee*g;if(gt<0||gt>=c.inWidth)continue;let Be=Ie+ee*w[1],Et=we+gt*M,Pt=Be;for(let pt=0;pt<c.inChannels;++pt){let Jt=q[Et+pt*L];for(let Ot=0;Ot<c.outChannels;++Ot)J[Le+Ot*j]+=Jt*Y[Pt+Ot];Pt+=c.outChannels}}}}}}return t.makeTensorInfo(I.shape,I.dtype,J)}var u$={kernelName:io,backendName:"cpu",kernelFunc:tA};function Wre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n;ne([o,s],"conv2dBackpropFilter");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,p,a,1,i,l,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,b=c.dataFormat==="channelsLast",x=new yt(c.filterShape,"float32"),T=c.padInfo.left,I=c.padInfo.top,k=t.data.get(o.dataId).values,w=t.data.get(s.dataId).values,R=new yt(o.shape,o.dtype,k),F=new yt(s.shape,s.dtype,w);for(let M=0;M<h;++M){let L=Math.max(0,Math.ceil((I-M)/d)),z=Math.min(c.outHeight,(c.inHeight+I-M)/d);for(let W=0;W<g;++W){let V=Math.max(0,Math.ceil((T-W)/f)),j=Math.min(c.outWidth,(c.inWidth+T-W)/f);for(let q=0;q<c.inChannels;++q)for(let Y=0;Y<c.outChannels;++Y){let J=0;for(let H=0;H<c.batchSize;++H)for(let te=L;te<z;++te){let se=M+te*d-I;for(let ae=V;ae<j;++ae){let pe=W+ae*f-T;b?J+=R.get(H,se,pe,q)*F.get(H,te,ae,Y):J+=R.get(H,q,se,pe)*F.get(H,Y,te,ae)}}x.set(J,M,W,q,Y)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var l$={kernelName:fm,backendName:"cpu",kernelFunc:Wre};function Kre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n;ne([o,s],"conv2dBackpropInput");let m=y.computeStrides(s.shape),c=y.computeStrides(o.shape),d=C.convertConv2DDataFormat(l),f=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,d),h=new yt(f.inShape,"float32"),g=h.values,b=t.data.get(o.dataId).values,x=t.data.get(s.dataId).values,[T,I,k]=m,{batchSize:w,filterHeight:R,filterWidth:F,inChannels:M,inHeight:L,inWidth:z,outChannels:W,outHeight:V,outWidth:j,strideHeight:q,strideWidth:Y}=f;d=f.dataFormat;let J=R-1-f.padInfo.top,H=F-1-f.padInfo.left,te=d==="channelsLast",se=h.strides[0],ae=te?h.strides[1]:h.strides[2],pe=te?h.strides[2]:1,ie=te?1:h.strides[1],be=c[0],fe=te?c[1]:c[2],Ie=te?c[2]:1,we=te?1:c[1];for(let Ee=0;Ee<w;++Ee)for(let Le=0;Le<M;++Le)for(let Ze=0;Ze<L;++Ze){let ee=Ze-J,gt=Math.max(0,Math.ceil(ee/q)),Be=Math.min(V,(R+ee)/q);for(let Et=0;Et<z;++Et){let Pt=Et-H,pt=Math.max(0,Math.ceil(Pt/Y)),Jt=Math.min(j,(F+Pt)/Y),Ot=0;for(let Ht=gt;Ht<Be;++Ht){let Js=Ht*q-ee;for(let $r=pt;$r<Jt;++$r){let nn=$r*Y-Pt,on=be*Ee+fe*Ht+Ie*$r,qr=T*(R-1-Js)+I*(F-1-nn)+k*Le;for(let os=0;os<W;++os){let Bn=b[on+we*os],ea=x[qr+os];Ot+=Bn*ea}}}let rn=se*Ee+ae*Ze+pe*Et+ie*Le;g[rn]=Ot}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var p$={kernelName:uo,backendName:"cpu",kernelFunc:Kre};function Vre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n;ne([o,s],"conv3d");let l=C.computeConv3DInfo(o.shape,s.shape,a,u,i),{filterDepth:p,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=l,b=g.front,x=g.left,T=g.top,I=new yt(l.outShape,o.dtype),k=t.data.get(o.dataId).values,w=t.data.get(s.dataId).values,R=I.values,F=y.computeStrides(o.shape),M=y.computeStrides(s.shape);for(let L=0;L<l.batchSize;++L){let z=L*F[0],W=L*I.strides[0];for(let V=0;V<l.outDepth;++V){let j=W+V*I.strides[1],q=V*l.strideDepth-b;for(let Y=0;Y<p;++Y){let J=q+Y*d;if(J<0||J>=l.inDepth)continue;let H=Y*M[0],te=z+J*F[1];for(let se=0;se<l.outHeight;++se){let ae=j+se*I.strides[2],pe=se*l.strideHeight-T;for(let ie=0;ie<m;++ie){let be=pe+ie*f;if(be<0||be>=l.inHeight)continue;let fe=H+ie*M[1],Ie=te+be*F[2];for(let we=0;we<l.outWidth;++we){let Ee=ae+we*l.outChannels,Le=we*l.strideWidth-x;for(let Ze=0;Ze<c;++Ze){let ee=Le+Ze*h;if(ee<0||ee>=l.inWidth)continue;let gt=fe+Ze*M[2],Be=Ie+ee*l.inChannels,Et=gt;for(let Pt=0;Pt<l.inChannels;++Pt){let pt=k[Be+Pt];for(let Jt=0;Jt<l.outChannels;++Jt)R[Ee+Jt]+=pt*w[Et+Jt];Et+=l.outChannels}}}}}}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}var m$={kernelName:Pu,backendName:"cpu",kernelFunc:Vre};function Hre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:u}=n;ne([o,s],"conv3dBackpropFilterV2");let l=y.computeStrides(o.shape),p=y.computeStrides(s.shape),m=C.computeConv3DInfo(o.shape,u,a,1,i),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,b=m.filterWidth,x=new yt(m.filterShape,"float32"),T=x.values,[I,k,w,R]=x.strides,F=t.data.get(s.dataId).values,[M,L,z,W]=p,V=t.data.get(o.dataId).values,[j,q,Y,J]=l,H=m.padInfo.front,te=m.padInfo.left,se=m.padInfo.top;for(let ae=0;ae<h;++ae){let pe=Math.max(0,Math.ceil((H-ae)/c)),ie=Math.min(m.outDepth,(m.inDepth+H-ae)/c),be=ae*I;for(let fe=0;fe<g;++fe){let Ie=Math.max(0,Math.ceil((se-fe)/d)),we=Math.min(m.outHeight,(m.inHeight+se-fe)/d),Ee=fe*k+be;for(let Le=0;Le<b;++Le){let Ze=Math.max(0,Math.ceil((te-Le)/f)),ee=Math.min(m.outWidth,(m.inWidth+te-Le)/f),gt=Le*w+Ee;for(let Be=0;Be<m.inChannels;++Be){let Et=Be*R+gt;for(let Pt=0;Pt<m.outChannels;++Pt){let pt=0;for(let Jt=0;Jt<m.batchSize;++Jt){let Ot=Jt*j,rn=Jt*M;for(let Ht=pe;Ht<ie;++Ht){let $r=(ae+Ht*c-H)*q+Ot,nn=Ht*L+rn;for(let on=Ie;on<we;++on){let os=(fe+on*d-se)*Y+$r,Bn=on*z+nn;for(let ea=Ze;ea<ee;++ea){let ku=(Le+ea*f-te)*J+os,vl=ea*W+Bn;pt+=V[ku+Be]*F[vl+Pt]}}}}T[Et+Pt]=pt}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var c$={kernelName:hm,backendName:"cpu",kernelFunc:Hre};function qre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:u}=n;ne([o],"conv3dBackpropInputV2");let l=y.computeStrides(o.shape),p=y.computeStrides(s.shape),m=C.computeConv3DInfo(u,s.shape,i,1,a),c=new yt(m.inShape,"float32"),d=c.values,[f,h,g,b]=c.strides,x=t.data.get(o.dataId).values,[T,I,k,w]=l,R=t.data.get(s.dataId).values,[F,M,L,z]=p,{batchSize:W,filterDepth:V,filterHeight:j,filterWidth:q,inChannels:Y,inDepth:J,inHeight:H,inWidth:te,outChannels:se,outDepth:ae,outHeight:pe,outWidth:ie,strideDepth:be,strideHeight:fe,strideWidth:Ie}=m,we=V-1-m.padInfo.front,Ee=j-1-m.padInfo.top,Le=q-1-m.padInfo.left;for(let Ze=0;Ze<W;++Ze)for(let ee=0;ee<Y;++ee)for(let gt=0;gt<J;++gt){let Be=gt-we,Et=Math.max(0,Math.ceil(Be/be)),Pt=Math.min(ae,(V+Be)/be);for(let pt=0;pt<H;++pt){let Jt=pt-Ee,Ot=Math.max(0,Math.ceil(Jt/fe)),rn=Math.min(pe,(j+Jt)/fe);for(let Ht=0;Ht<te;++Ht){let Js=Ht-Le,$r=Math.max(0,Math.ceil(Js/Ie)),nn=Math.min(ie,(q+Js)/Ie),on=0;for(let qr=Et;qr<Pt;++qr){let os=qr*be-Be;for(let Bn=Ot;Bn<rn;++Bn){let ea=Bn*fe-Jt;for(let ss=$r;ss<nn;++ss){let ku=ss*Ie-Js,vl=T*Ze+I*qr+k*Bn+w*ss,Vp=F*(V-1-os)+M*(j-1-ea)+L*(q-1-ku)+z*ee;for(let Cr=0;Cr<se;++Cr){let Hp=x[vl+Cr],qp=R[Vp+Cr];on+=Hp*qp}}}}d[f*Ze+h*gt+g*pt+b*Ht+ee]=on}}}return t.makeTensorInfo(c.shape,c.dtype,c.values)}var d$={kernelName:gm,backendName:"cpu",kernelFunc:qre};var jre=Me(lo,r=>Math.cos(r)),f$={kernelName:lo,backendName:"cpu",kernelFunc:jre};var Xre=Me(po,r=>Math.cosh(r)),h$={kernelName:po,backendName:"cpu",kernelFunc:Xre};function Yre(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,[p,m,c,d]=o.shape,f=s.shape[0],[h,g]=i,b=xe([f,h,g,d],"float32"),x=t.data.get(s.dataId).values,T=t.data.get(a.dataId).values,I=t.data.get(o.dataId).values,k=y.computeStrides(o.shape),w=y.computeStrides(b.shape);for(let R=0;R<f;R++){let F=R*4,M=x[F],L=x[F+1],z=x[F+2],W=x[F+3],V=T[R];if(V>=p)continue;let j=h>1?(z-M)*(m-1)/(h-1):0,q=g>1?(W-L)*(c-1)/(g-1):0;for(let Y=0;Y<h;Y++){let J=h>1?M*(m-1)+Y*j:.5*(M+z)*(m-1);if(J<0||J>m-1){for(let H=0;H<g;H++)for(let te=0;te<d;te++){let se=te+H*w[2]+Y*w[1]+R*w[0];b.values[se]=l}continue}if(u==="bilinear"){let H=Math.floor(J),te=Math.ceil(J),se=J-H;for(let ae=0;ae<g;ae++){let pe=g>1?L*(c-1)+ae*q:.5*(L+W)*(c-1);if(pe<0||pe>c-1){for(let Ie=0;Ie<d;Ie++){let we=Ie+ae*w[2]+Y*w[1]+R*w[0];b.values[we]=l}continue}let ie=Math.floor(pe),be=Math.ceil(pe),fe=pe-ie;for(let Ie=0;Ie<d;Ie++){let we=Ie+ie*k[2]+H*k[1]+V*k[0],Ee=I[we];we=Ie+be*k[2]+H*k[1]+V*k[0];let Le=I[we];we=Ie+ie*k[2]+te*k[1]+V*k[0];let Ze=I[we];we=Ie+be*k[2]+te*k[1]+V*k[0];let ee=I[we],gt=Ee+(Le-Ee)*fe,Be=Ze+(ee-Ze)*fe;we=Ie+ae*w[2]+Y*w[1]+R*w[0],b.values[we]=gt+(Be-gt)*se}}}else for(let H=0;H<g;++H){let te=g>1?L*(c-1)+H*q:.5*(L+W)*(c-1);if(te<0||te>c-1){for(let pe=0;pe<d;pe++){let ie=pe+H*w[2]+Y*w[1]+R*w[0];b.values[ie]=l}continue}let se=Math.round(te),ae=Math.round(J);for(let pe=0;pe<d;pe++){let ie=pe+se*k[2]+ae*k[1]+V*k[0],be=pe+H*w[2]+Y*w[1]+R*w[0];b.values[be]=I[ie]}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var g$={kernelName:pa,backendName:"cpu",kernelFunc:Yre};function Zre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;ne(o,"cumprod");let u=C.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Zt({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=C.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let m=_t(l.dtype,"int32"),c=y.makeOnesTypedArray(y.sizeFromShape(l.shape),m),d=t.data.get(l.dataId).values,f=l.shape[l.shape.length-1],h=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<d.length;b+=f)for(let x=0;x<f;x++){let T=h(b,x);if(x===0)c[T]=a?1:d[T];else{let I=h(b,x-1);c[T]=a?d[I]*c[I]:d[T]*c[I]}}let g=t.makeTensorInfo(l.shape,m,c);if(u!=null){let b=C.getUndoAxesPermutation(u),x=Zt({inputs:{x:g},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),x}return g}var b$={kernelName:la,backendName:"cpu",kernelFunc:Zre};function Qre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;ne(o,"cumsum");let u=C.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Zt({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=C.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let m=_t(l.dtype,"int32"),c=y.makeZerosTypedArray(y.sizeFromShape(l.shape),m),d=t.data.get(l.dataId).values,f=l.shape[l.shape.length-1],h=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<d.length;b+=f)for(let x=0;x<f;x++){let T=h(b,x);if(x===0)c[T]=a?0:d[T];else{let I=h(b,x-1);c[T]=a?d[I]+c[I]:d[T]+c[I]}}let g=t.makeTensorInfo(l.shape,m,c);if(u!=null){let b=C.getUndoAxesPermutation(u),x=Zt({inputs:{x:g},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),x}return g}var y$={kernelName:mo,backendName:"cpu",kernelFunc:Qre};function Jre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Uc(u,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=Px(u,l,a,i);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var x$={kernelName:bm,backendName:"cpu",kernelFunc:Jre};function ene(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;y.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],u=o.shape[1],l=o.shape[2],p=o.shape[3],m=u*s,c=l*s,d=p/(s*s),f=t.data.get(o.dataId).values,h=new Float32Array(i*m*c*d),g=0;for(let b=0;b<i;++b)for(let x=0;x<m;++x){let T=Math.floor(x/s),I=x%s;for(let k=0;k<c;++k){let w=Math.floor(k/s),R=k%s,F=(I*s+R)*d;for(let M=0;M<d;++M){let z=M+F+p*(w+l*(T+u*b));h[g++]=f[z]}}}return t.makeTensorInfo([i,m,c,d],o.dtype,h)}var T$={kernelName:ma,backendName:"cpu",kernelFunc:ene};function rA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n;ne([o,s],"depthwiseConv2DNative");let p=y.computeStrides(o.shape),m=y.computeStrides(s.shape),c=u;c==null&&(c=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,l,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:b,padInfo:x}=d,T=x.left,I=x.top,k=d.outChannels/d.inChannels,w=new yt(d.outShape,o.dtype),R=t.data.get(o.dataId).values,F=t.data.get(s.dataId).values,M=w.values;for(let L=0;L<d.batchSize;++L){let z=L*p[0],W=L*w.strides[0];for(let V=0;V<d.outHeight;++V){let j=W+V*w.strides[1],q=V*d.strideHeight-I;for(let Y=0;Y<f;++Y){let J=q+Y*g;if(J<0||J>=d.inHeight)continue;let H=Y*m[0],te=z+J*p[1];for(let se=0;se<d.outWidth;++se){let ae=j+se*w.strides[2],pe=se*d.strideWidth-T;for(let ie=0;ie<h;++ie){let be=pe+ie*b;if(be<0||be>=d.inWidth)continue;let fe=H+ie*m[1],Ie=te+be*d.inChannels,we=ae,Ee=fe;for(let Le=0;Le<d.inChannels;++Le){let Ze=R[Ie+Le];for(let ee=0;ee<k;++ee)M[we+ee]+=Ze*F[Ee+ee];we+=k,Ee+=k}}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}var I$={kernelName:co,backendName:"cpu",kernelFunc:rA};function tne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n;ne([o,s],"depthwiseConv2dNativeBackpropFilter");let m=C.computeConv2DInfo(o.shape,p,a,i,u,l,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new yt(m.filterShape,"float32"),b=m.padInfo.left,x=m.padInfo.top,T=m.outChannels/m.inChannels,I=t.data.get(o.dataId).values,k=new yt(o.shape,o.dtype,I),w=t.data.get(s.dataId).values,R=new yt(s.shape,s.dtype,w);for(let F=0;F<f;++F){let M=Math.max(0,Math.ceil((x-F)/c)),L=Math.min(m.outHeight,(m.inHeight+x-F)/c);for(let z=0;z<h;++z){let W=Math.max(0,Math.ceil((b-z)/d)),V=Math.min(m.outWidth,(m.inWidth+b-z)/d);for(let j=0;j<m.outChannels;++j){let q=Math.trunc(j/T),Y=j%T,J=0;for(let H=0;H<m.batchSize;++H)for(let te=M;te<L;++te){let se=F+te*c-x;for(let ae=W;ae<V;++ae){let pe=z+ae*d-b;J+=k.get(H,se,pe,q)*R.get(H,te,ae,j)}}g.set(J,F,z,q,Y)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var C$={kernelName:ym,backendName:"cpu",kernelFunc:tne};function rne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n;ne([o,s],"depthwiseConv2DNativeBackpropInput");let m=y.computeStrides(o.shape),c=y.computeStrides(s.shape),d=C.computeConv2DInfo(p,s.shape,a,i,u,l,!0),f=new yt(d.inShape,"float32"),h=f.values,[g,b,x]=f.strides,T=t.data.get(o.dataId).values,[I,k,w]=m,R=t.data.get(s.dataId).values,[F,M,L]=c,{batchSize:z,filterHeight:W,filterWidth:V,inChannels:j,inHeight:q,inWidth:Y,outChannels:J,outHeight:H,outWidth:te,strideHeight:se,strideWidth:ae}=d,pe=W-1-d.padInfo.top,ie=V-1-d.padInfo.left,be=J/j;for(let fe=0;fe<z;++fe)for(let Ie=0;Ie<j;++Ie)for(let we=0;we<q;++we){let Ee=we-pe,Le=Math.max(0,Math.ceil(Ee/se)),Ze=Math.min(H,(W+Ee)/se);for(let ee=0;ee<Y;++ee){let gt=ee-ie,Be=Math.max(0,Math.ceil(gt/ae)),Et=Math.min(te,(V+gt)/ae),Pt=0;for(let pt=Le;pt<Ze;++pt){let Jt=pt*se-Ee;for(let Ot=Be;Ot<Et;++Ot){let rn=Ot*ae-gt,Ht=I*fe+k*pt+w*Ot,Js=F*(W-1-Jt)+M*(V-1-rn)+L*Ie;for(let $r=0;$r<be;++$r){let nn=Ie*be+$r,on=T[Ht+nn],qr=R[Js+$r];Pt+=on*qr}}}h[g*fe+b*we+x*ee+Ie]=Pt}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}var k$={kernelName:xm,backendName:"cpu",kernelFunc:rne};function nne(r){let{inputs:e,backend:t}=r,{x:n}=e,o=y.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=xe([o,o],n.dtype),i=a.values;for(let l=0;l<s.length;l++)i[l*o+l]=s[l];let u=[...n.shape,...n.shape];return t.makeTensorInfo(u,a.dtype,a.values)}var S$={kernelName:Tm,backendName:"cpu",kernelFunc:nne};var v$={kernelName:Ru,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,u=e,l=u.data.get(n.dataId).values,p=n.shape.length,m=u.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:b,outWidth:x,padInfo:T,strideHeight:I,strideWidth:k,filterHeight:w,filterWidth:R,dilationHeight:F,dilationWidth:M,outShape:L}=C.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),z=y.sizeFromShape(L),W=L.length,V=y.getArrayFromDType(n.dtype,z);for(let q=0;q<d;++q)for(let Y=0;Y<b;++Y){let J=Y*I-T.top;for(let H=0;H<x;++H){let te=H*k-T.left;for(let se=0;se<g;++se){let ae=Number.MIN_SAFE_INTEGER;for(let ie=0;ie<w;++ie){let be=J+ie*F;if(be>=0&&be<f)for(let fe=0;fe<R;++fe){let Ie=te+fe*M;if(Ie>=0&&Ie<h){let we=y.locToIndex([q,be,Ie,se],p,y.computeStrides(n.shape)),Ee=y.locToIndex([ie,fe,se],c,y.computeStrides(o.shape)),Le=l[we]+m[Ee];Le>ae&&(ae=Le)}}}let pe=y.locToIndex([q,Y,H,se],W,y.computeStrides(L));V[pe]=ae}}}return{dataId:u.write(y.toTypedArray(V,n.dtype),L,n.dtype),shape:L,dtype:n.dtype}}};var A$={kernelName:Rd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=t,l=e,p=y.toNestedArray(n.shape,l.data.get(n.dataId).values),m=y.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:x,strideHeight:T,strideWidth:I,filterHeight:k,filterWidth:w,dilationHeight:R,dilationWidth:F,outShape:M}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);y.assert(s.rank===M.length,()=>`Error in ${Rd}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let L=y.toNestedArray(M,l.data.get(s.dataId).values),z=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let V=0;V<c;++V)for(let j=0;j<g;++j){let q=j*T-x.top;for(let Y=0;Y<b;++Y){let J=Y*I-x.left;for(let H=0;H<h;++H){let te=Number.MIN_SAFE_INTEGER,se=0,ae=0;for(let pe=0;pe<k;++pe){let ie=q+pe*R;if(ie>=0&&ie<d)for(let be=0;be<w;++be){let fe=J+be*F;if(fe>=0&&fe<f){let Ie=p[V][ie][fe][H]+m[pe][be][H];Ie>te&&(te=Ie,se=pe,ae=be)}}}z[se][ae][H]+=L[V][j][Y][H]}}}return{dataId:l.write(y.toTypedArray(z,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var w$={kernelName:Pd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=t,l=e,p=y.toNestedArray(n.shape,l.data.get(n.dataId).values),m=y.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:x,strideHeight:T,strideWidth:I,filterHeight:k,filterWidth:w,dilationHeight:R,dilationWidth:F,outShape:M}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);y.assert(s.rank===M.length,()=>`Error in ${Pd}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let L=y.toNestedArray(M,l.data.get(s.dataId).values),z=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let V=0;V<c;++V)for(let j=0;j<g;++j){let q=j*T-x.top;for(let Y=0;Y<b;++Y){let J=Y*I-x.left;for(let H=0;H<h;++H){let te=Number.MIN_SAFE_INTEGER,se=q<0?0:q,ae=J<0?0:J;for(let pe=0;pe<k;++pe){let ie=q+pe*R;if(ie>=0&&ie<d)for(let be=0;be<w;++be){let fe=J+be*F;if(fe>=0&&fe<f){let Ie=p[V][ie][fe][H]+m[pe][be][H];Ie>te&&(te=Ie,se=ie,ae=fe)}}}z[V][se][ae][H]+=L[V][j][Y][H]}}}return{dataId:l.write(y.toTypedArray(z,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function du(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"sum");let i;o.dtype==="bool"?i=Vs({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=Kr({inputs:{x:o},backend:t});let u=i.shape.length,l=y.parseAxisParam(s,i.shape),p=C.getAxesPermutation(l,u),m=l,c=i;p!=null&&(c=Zt({inputs:{x:i},backend:t,attrs:{perm:p}}),m=C.getInnerMostAxes(m.length,u)),C.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=C.computeOutAndReduceShapes(c.shape,m),h=C.upcastType(c.dtype,"int32"),g=zc(t,d,h),b=y.sizeFromShape(f),x=t.data.get(g.dataId).values,T=t.data.get(c.dataId).values;for(let I=0;I<x.length;++I){let k=I*b,w=0;for(let R=0;R<b;++R)w+=T[k+R];x[I]=w}if(a){let I=C.expandShapeToKeepDim(g.shape,l),k=g;g=tt({inputs:{x:g},backend:t,attrs:{shape:I}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(i),p!=null&&t.disposeIntermediateTensorInfo(c),g}var N$={kernelName:Wo,backendName:"cpu",kernelFunc:du};function one(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:b,expandDims:x}=C.getEinsumPermutation(d,u[g]),T;C.isIdentityPermutation(b)?T=s[g]:(T=Zt({inputs:{x:s[g]},backend:t,attrs:{perm:b}}),f.push(T));let I=T.shape.slice();for(let k=0;k<x.length;++k)I.splice(x[k],0,1);y.arraysEqual(T.shape,I)||(T=tt({inputs:{x:T},backend:t,attrs:{shape:I}}),f.push(T)),c===null?c=T:(c=xp({inputs:{a:T,b:c},backend:t}),f.push(c))}h<m-1&&(l[h]>=0&&(c=du({inputs:{x:c},backend:t,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var D$={kernelName:Fu,backendName:"cpu",kernelFunc:one};function sne(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;ne([n,o],"eluGrad");let s=new Float32Array(y.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let u=0;u<a.length;++u){let l=a[u];l>=1?s[u]=i[u]:s[u]=i[u]*(l+1)}return t.makeTensorInfo(o.shape,"float32",s)}var P$={kernelName:Im,backendName:"cpu",kernelFunc:sne};var ane=C.ERF_P,ine=C.ERF_A1,une=C.ERF_A2,lne=C.ERF_A3,pne=C.ERF_A4,mne=C.ERF_A5,cne=Me(Bi,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+ane*t);return e*(1-((((mne*n+pne)*n+lne)*n+une)*n+ine)*n*Math.exp(-t*t))}),R$={kernelName:Bi,backendName:"cpu",kernelFunc:cne};function qc(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),tt({inputs:{x:o},backend:t,attrs:{shape:i}})}var F$={kernelName:ps,backendName:"cpu",kernelFunc:qc};var dne=st((r,e)=>r/e),Uh=ut(fo,dne),Wh={kernelName:fo,backendName:"cpu",kernelFunc:Uh};function Wx(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[o,s],p=y.sizeFromShape(l),m=y.getTypedArrayFromDType("float32",p),c=y.getTypedArrayFromDType("float32",p);for(let g=0;g<o;g++){let b=qs({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),x=qs({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=Ar({inputs:{real:b,imag:x},backend:t}),{real:I,imag:k}=fne(T,e,t),w=C.mergeRealAndImagArrays(I,k);for(let R=0;R<s;R++){let F=C.getComplexWithIndex(w,R);m[g*s+R]=F.real,c[g*s+R]=F.imag}t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(T)}let d=t.makeTensorInfo(l,"float32",m),f=t.makeTensorInfo(l,"float32",c),h=Ar({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),h}function fne(r,e,t){let n=y.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(hne(n)){let i=nA(s,a,n,e,t),u=[r.shape[0],r.shape[1]];if(e){let l=t.makeTensorInfo(u,"float32",i.real),p=t.makeTensorInfo(u,"float32",i.imag),m=t.makeTensorInfo([],"float32",y.createScalarValue(n,"float32")),c=Kr({inputs:{x:m},backend:t}),d=Wh.kernelFunc({inputs:{a:l,b:m},backend:t}),f=Wh.kernelFunc({inputs:{a:p,b:c},backend:t}),h=t.data.get(d.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return i}else{let i=C.mergeRealAndImagArrays(s,a),u=gne(i,n,e);return C.splitRealAndImagArrays(u)}}function hne(r){return(r&r-1)===0}function nA(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=C.mergeRealAndImagArrays(r,e),a=t/2,i=C.complexWithEvenIndex(s),u=i.real,l=i.imag,p=[u.length],m=o.makeTensorInfo(p,"float32",u),c=o.makeTensorInfo(p,"float32",l),d=Ar({inputs:{real:m,imag:c},backend:o}),f=C.complexWithOddIndex(s),h=f.real,g=f.imag,b=[h.length],x=o.makeTensorInfo(b,"float32",h),T=o.makeTensorInfo(b,"float32",g),I=Ar({inputs:{real:x,imag:T},backend:o}),k=nA(u,l,a,n,o),w=k.real,R=k.imag,F=[w.length],M=o.makeTensorInfo(F,"float32",w),L=o.makeTensorInfo(F,"float32",R),z=Ar({inputs:{real:M,imag:L},backend:o}),W=nA(h,g,a,n,o),V=W.real,j=W.imag,q=[V.length],Y=o.makeTensorInfo(q,"float32",V),J=o.makeTensorInfo(q,"float32",j),H=Ar({inputs:{real:Y,imag:J},backend:o}),te=C.exponents(t,n),se=[te.real.length],ae=o.makeTensorInfo(se,"float32",te.real),pe=o.makeTensorInfo(se,"float32",te.imag),ie=Ar({inputs:{real:ae,imag:pe},backend:o}),be=xp({inputs:{a:ie,b:H},backend:o}),fe=Ci({inputs:{a:z,b:be},backend:o}),Ie=zh({inputs:{a:z,b:be},backend:o}),we=Ks({inputs:{input:fe},backend:o}),Ee=Ks({inputs:{input:Ie},backend:o}),Le=ki({inputs:{input:fe},backend:o}),Ze=ki({inputs:{input:Ie},backend:o}),ee=Tl({inputs:[we,Ee],backend:o,attrs:{axis:0}}),gt=Tl({inputs:[Le,Ze],backend:o,attrs:{axis:0}}),Be=o.data.get(ee.dataId).values,Et=o.data.get(gt.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(M),o.disposeIntermediateTensorInfo(L),o.disposeIntermediateTensorInfo(z),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(pe),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(be),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(Ie),o.disposeIntermediateTensorInfo(we),o.disposeIntermediateTensorInfo(Le),o.disposeIntermediateTensorInfo(Ee),o.disposeIntermediateTensorInfo(Ze),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(gt),{real:Be,imag:Et}}function gne(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let u=C.exponent(o*i,e,t),l=C.getComplexWithIndex(r,i);s+=l.real*u.real-l.imag*u.imag,a+=l.real*u.imag+l.imag*u.real}t&&(s/=e,a/=e),C.assignToTypedArray(n,s,a,o)}return n}function bne(r){let{inputs:e,backend:t}=r,{input:n}=e,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),u=Wx(i,!1,t),l=tt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var M$={kernelName:Cm,backendName:"cpu",kernelFunc:bne};function Kh(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||y.inferDtype(o),i=y.getArrayFromDType(a,y.sizeFromShape(n));return yne(i,o,a),e.makeTensorInfo(n,a,i)}var E$={kernelName:ai,backendName:"cpu",kernelFunc:Kh};function yne(r,e,t){r.fill(e)}var _$={kernelName:fa,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[a,i,u,l]=n.shape,p=o.data.get(n.dataId).values;for(let c=0;c<a;c++){let d=c*u*i*l;for(let f=0;f<i;f++){let h=f*(u*l);for(let g=0;g<u;g++){let b=g*l;for(let x=0;x<l;x++){let T=Math.round(u-g-1),I=d+h+b+x,k=p[I];if(T>=0&&T<u){let w=T*l,R=d+h+w+x;k=p[R]}s[I]=k}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var xne=st((r,e)=>Math.floor(r/e)),Tne=ut(yo,xne,null,"int32"),L$={kernelName:yo,backendName:"cpu",kernelFunc:Tne};function Ine(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=tA({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(a){let g=h;if(p==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){let b=tt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});h=Ci({inputs:{a:h,b},backend:t}),t.disposeIntermediateTensorInfo(b)}else h=Ci({inputs:{a:h,b:a},backend:t});t.disposeIntermediateTensorInfo(g)}if(d){let g=h;if(p==="NCHW"&&d==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let b=tt({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});h=vp(t,h,d,b,f),t.disposeIntermediateTensorInfo(b)}else h=vp(t,h,d,i,f);t.disposeIntermediateTensorInfo(g)}return h}var $$={kernelName:Ss,backendName:"cpu",kernelFunc:Ine};function Cne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=rA({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=Ci({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=vp(t,h,d,i,f),t.disposeIntermediateTensorInfo(g)}return h}var B$={kernelName:vs,backendName:"cpu",kernelFunc:Cne};function kne(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=y.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[u,l,p,m]=C.prepareAndValidate(n,o);if(l===0)return t.makeTensorInfo(u,n.dtype,[]);let c=t.data.get(o.dataId).values,d=t.bufferSync(n),f=Rx(c,d,n.dtype,l,i,p,m,n.shape,s);return t.makeTensorInfo(u,n.dtype,f.values)}var O$={kernelName:ha,backendName:"cpu",kernelFunc:kne};function Sne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;ne([o,s],"gatherV2");let u=y.parseAxisParam(a,o.shape)[0],l=t.data.get(s.dataId).values,p=o.shape[u];for(let I=0;I<l.length;++I){let k=l[I];y.assert(k<=p-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${p-1}]`)}let m=i;i==null&&(m=0);let c=y.sizeFromShape(s.shape),d=C.segment_util.collectGatherOpShapeInfo(o,s,u,m),f=tt({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=tt({inputs:{x:s},backend:t,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],b=t.bufferSync(h),x=t.bufferSync(f),T=Fx(x,b,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(d.outputShape,T.dtype,T.values)}var z$={kernelName:ms,backendName:"cpu",kernelFunc:Sne};function vne(r){let{inputs:e,backend:t}=r,{input:n}=e,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),u=Wx(i,!0,t),l=tt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var G$={kernelName:km,backendName:"cpu",kernelFunc:vne};var Ane=Me(Oi,r=>Number.isFinite(r)?1:0,"bool"),U$={kernelName:Oi,backendName:"cpu",kernelFunc:Ane};var wne=Me(zi,r=>Math.abs(r)===1/0?1:0,"bool"),W$={kernelName:zi,backendName:"cpu",kernelFunc:wne};var Nne=Me(Gi,r=>Number.isNaN(r)?1:0,"bool"),K$={kernelName:Gi,backendName:"cpu",kernelFunc:Nne};function Dne(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=Mx(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var V$={kernelName:Sm,backendName:"cpu",kernelFunc:Dne};var Pne=Me(Ui,r=>Math.log1p(r)),H$={kernelName:Ui,backendName:"cpu",kernelFunc:Pne};var Rne=st((r,e)=>r&&e),Fne=ut(xa,Rne,null,"bool"),q$={kernelName:xa,backendName:"cpu",kernelFunc:Fne};var Mne=Me(Ta,r=>r?0:1,"bool"),j$={kernelName:Ta,backendName:"cpu",kernelFunc:Mne};var Ene=st((r,e)=>r||e),_ne=ut(Wi,Ene,null,"bool"),X$={kernelName:Wi,backendName:"cpu",kernelFunc:_ne};function Lne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:u}=n;ne(o,"LRN");let l=o.shape[3],p=l-1,m=t.data.get(o.dataId).values,c=y.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%l,b=h-g+Math.max(0,g-s),x=h-g+Math.min(g+s,p),T=0;for(;b<=x;b++){let I=m[b];T+=I*I}return T}for(let h=0;h<c;h++){let g=f(h),b=m[h]*Math.pow(a+i*g,-u);d[h]=b}return t.makeTensorInfo(o.shape,o.dtype,d)}var Y$={kernelName:Eu,backendName:"cpu",kernelFunc:Lne};function $ne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:p}=n;ne(a,"LRNGrad");let m=y.sizeFromShape(a.shape),c=a.shape[3],d=t.data.get(a.dataId).values,f=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(m),b=m;for(let x=0;x<b;x++){let T=x%c,I=x-T+Math.max(0,T-i),k=x-T+Math.min(c,T+i+1),w=0;for(let R=I;R<k;R++)w+=Math.pow(f[R],2);w=l*w+u;for(let R=I;R<k;R++){let F=-2*l*p*f[R]*h[x]/w;x===R&&(F+=Math.pow(w,-p)),F*=d[x],g[R]+=F}}return t.makeTensorInfo(a.shape,o.dtype,g)}var Z$={kernelName:vm,backendName:"cpu",kernelFunc:$ne};function oA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,u=o.shape,l=u.length,p=y.parseAxisParam(s,u),m=p,c=C.getAxesPermutation(m,l),d=i.data.get(o.dataId).values;if(c!=null){let I=new Array(l);for(let k=0;k<I.length;k++)I[k]=u[c[k]];d=Wc(d,u,o.dtype,c,I),m=C.getInnerMostAxes(m.length,l),u=I}ne(o,"max"),C.assertAxesAreInnerMostDims("max",m,l);let[f,h]=C.computeOutAndReduceShapes(u,m),g=y.sizeFromShape(h),b=Ex(d,g,f,o.dtype),x=i.write(b,f,o.dtype),T=f;return a&&(T=C.expandShapeToKeepDim(f,p)),{dataId:x,shape:T,dtype:o.dtype}}var Q$={kernelName:ko,backendName:"cpu",kernelFunc:oA};function Bne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u),m;if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))m=Kr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=Hc(c,o.shape,o.dtype,d,p,"max");m=t.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var J$={kernelName:vo,backendName:"cpu",kernelFunc:Bne};function One(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;ne(o,"maxPool3d");let p=C.computePool3DInfo(o.shape,s,a,1,i,u,l),m=t.data.get(o.dataId).values,c=Ux(m,o.shape,o.dtype,y.computeStrides(o.shape),p,"max");return t.makeTensorInfo(c.shape,"float32",c.values)}var eB={kernelName:_u,backendName:"cpu",kernelFunc:One};function zne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;ne([o,s],"maxPool3DGrad");let p=C.computePool3DInfo(s.shape,a,i,1,u,l),m=t.bufferSync(s),c=XL(m,p),d=p.strideDepth,f=p.strideHeight,h=p.strideWidth,g=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,T=p.effectiveFilterDepth,I=p.effectiveFilterHeight,k=p.effectiveFilterWidth,w=T-1-p.padInfo.front,R=k-1-p.padInfo.left,F=I-1-p.padInfo.top,M=xe(s.shape,"float32"),L=t.bufferSync(o);for(let z=0;z<p.batchSize;++z)for(let W=0;W<p.inChannels;++W)for(let V=0;V<p.inDepth;++V)for(let j=0;j<p.inHeight;++j)for(let q=0;q<p.inWidth;++q){let Y=V-w,J=j-F,H=q-R,te=0;for(let se=0;se<T;se+=g){let ae=(Y+se)/d;if(!(ae<0||ae>=p.outDepth||Math.floor(ae)!==ae))for(let pe=0;pe<I;pe+=b){let ie=(J+pe)/f;if(!(ie<0||ie>=p.outHeight||Math.floor(ie)!==ie))for(let be=0;be<k;be+=x){let fe=(H+be)/h;if(fe<0||fe>=p.outWidth||Math.floor(fe)!==fe)continue;let Ie=T*I*k-1-c.get(z,ae,ie,fe,W),we=se*I*k+pe*k+be,Ee=Ie===we?1:0;if(Ee===0)continue;te+=L.get(z,ae,ie,fe,W)*Ee}}}M.set(te,z,V,j,q,W)}return t.makeTensorInfo(M.shape,M.dtype,M.values)}var tB={kernelName:wm,backendName:"cpu",kernelFunc:zne};function Gne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;ne([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,l,1,p,m),d=t.data.get(i.dataId).values,f=xe(c.outShape,i.dtype,Gx(d,i.shape,i.dtype,c).values),h=c.strideHeight,g=c.strideWidth,b=c.dilationHeight,x=c.dilationWidth,T=c.effectiveFilterHeight,I=c.effectiveFilterWidth,k=I-1-c.padInfo.left,w=T-1-c.padInfo.top,R=xe(i.shape,"float32"),F=t.data.get(o.dataId).values,M=xe(o.shape,"float32",F);for(let L=0;L<c.batchSize;++L)for(let z=0;z<c.inChannels;++z)for(let W=0;W<c.inHeight;++W)for(let V=0;V<c.inWidth;++V){let j=W-w,q=V-k,Y=0;for(let J=0;J<T;J+=b){let H=(j+J)/h;if(!(H<0||H>=c.outHeight||Math.floor(H)!==H))for(let te=0;te<I;te+=x){let se=(q+te)/g;if(se<0||se>=c.outWidth||Math.floor(se)!==se)continue;let ae=T*I-1-f.get(L,H,se,z),pe=J*I+te,ie=ae===pe?1:0;if(ie===0)continue;Y+=M.get(L,H,se,z)*ie}}R.set(Y,L,W,V,z)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}var rB={kernelName:Am,backendName:"cpu",kernelFunc:Gne};function nB(r,e,t,n,o){let s=y.computeStrides(e),a=Hc(r,e,t,s,o,"max"),i=Gx(r,e,t,o,!0,n);return[a.values,i.values]}var oB={kernelName:Nm,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,u=t;ne(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,p=C.computePool2DInfo(n.shape,o,s,[1,1],a),[m,c]=nB(l,n.shape,n.dtype,i,p),d=u.write(m,p.outShape,n.dtype),f=u.write(c,p.outShape,n.dtype);return[{dataId:d,shape:p.outShape,dtype:n.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};function Une(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=y.parseAxisParam(s,o.shape),l=C.computeOutAndReduceShapes(o.shape,i)[1],p=y.sizeFromShape(l),m=[],c=t.makeTensorInfo([],"float32",new Float32Array([p]));m.push(c);let d=Vs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});m.push(d);let f=Uh({inputs:{a:d,b:c},backend:t});m.push(f);let h=du({inputs:{x:f},backend:t,attrs:{axis:s,keepDims:a}});return m.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var sB={kernelName:Ao,backendName:"cpu",kernelFunc:Une};function Wne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"min");let i=y.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Zt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),p.dtype),h=t.data.get(p.dataId).values;for(let b=0;b<f.length;++b){let x=b*d,T=h[x];for(let I=0;I<d;++I){let k=h[x+I];(Number.isNaN(k)||k<T)&&(T=k)}f[b]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(m,p.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),x=tt({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}var aB={kernelName:wo,backendName:"cpu",kernelFunc:Wne};function Kne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;ne(o,"mirrorPad");let i=s.map((T,I)=>T[0]+o.shape[I]+T[1]),u=s.map(T=>T[0]),l=s.map((T,I)=>T[0]+o.shape[I]),p=a==="reflect"?0:1,m=t.data.get(o.dataId).values,c=o.shape.length,d=y.computeStrides(o.shape),f=y.sizeFromShape(i),h=i.length,g=y.computeStrides(i),b=y.getTypedArrayFromDType(o.dtype,f);for(let T=0;T<f;T++){let I=y.indexToLoc(T,h,g);for(let w=0;w<h;w++)I[w]<u[w]?I[w]=u[w]*2-I[w]-p:I[w]>=l[w]&&(I[w]=(l[w]-1)*2-I[w]+p);I=I.map((w,R)=>w-u[R]);let k=y.locToIndex(I,c,d);b[T]=m[k]}return{dataId:t.write(b,i,o.dtype),shape:i,dtype:o.dtype}}var iB={kernelName:Do,backendName:"cpu",kernelFunc:Kne};var Vne=st((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),Hne=ut(Ki,Vne),uB={kernelName:Ki,backendName:"cpu",kernelFunc:Hne};var pB=Fl(jd());function sA(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let u=y.parseAxisParam([i],o.shape),l=oA({inputs:{x:o},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),p=C.expandShapeToKeepDim(l.shape,u),m=tt({inputs:{x:l},backend:t,attrs:{shape:p}}),c=zh({inputs:{a:o,b:m},backend:t}),d=Fv({inputs:{x:c},backend:t}),f=du({inputs:{x:d},backend:t,attrs:{axis:u,keepDims:!1}}),h=tt({inputs:{x:f},backend:t,attrs:{shape:p}}),g=Uh({inputs:{a:d,b:h},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var lB={kernelName:Ko,backendName:"cpu",kernelFunc:sA};function qne(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;ne(o,"multinomial");let u=i?o:sA({inputs:{logits:o},backend:t,attrs:{dim:-1}}),l=u.shape[0],p=u.shape[1],m=t.data.get(u.dataId).values,c=[l,s],d=y.makeZerosTypedArray(y.sizeFromShape(c),"int32");for(let f=0;f<l;++f){let h=f*p,g=new Float32Array(p-1);g[0]=m[h];for(let T=1;T<g.length;++T)g[T]=g[T-1]+m[h+T];let b=pB.alea(a.toString()),x=f*s;for(let T=0;T<s;++T){let I=b();d[x+T]=g.length;for(let k=0;k<g.length;k++)if(I<g[k]){d[x+T]=k;break}}}return i||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(c,"int32",d)}var mB={kernelName:Dm,backendName:"cpu",kernelFunc:qne};var jne=xr.nonMaxSuppressionV3Impl;function Xne(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n;ne(o,"NonMaxSuppression");let l=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:m}=jne(l,p,a,i,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var cB={kernelName:Ca,backendName:"cpu",kernelFunc:Xne};var Yne=xr.nonMaxSuppressionV4Impl;function Zne(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n;ne(o,"NonMaxSuppressionPadded");let p=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=Yne(p,m,a,i,u,l);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var dB={kernelName:Vi,backendName:"cpu",kernelFunc:Zne};var Qne=xr.nonMaxSuppressionV5Impl;function Jne(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n;ne(o,"NonMaxSuppressionWithScore");let p=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:b}=Qne(p,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var fB={kernelName:ka,backendName:"cpu",kernelFunc:Jne};function eoe(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n;ne(o,"oneHot");let u=y.sizeFromShape(o.shape),l=new Float32Array(u*s);l.fill(i);let p=t.data.get(o.dataId).values;for(let m=0;m<u;++m)p[m]>=0&&p[m]<s&&(l[m*s+p[m]]=a);return t.makeTensorInfo([...o.shape,s],"int32",l)}var hB={kernelName:Sa,backendName:"cpu",kernelFunc:eoe};function Vh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Ks({inputs:{input:n},backend:t}),s=Vh({inputs:{x:o},backend:t}),a=ki({inputs:{input:n},backend:t}),i=Vh({inputs:{x:a},backend:t}),u=Ar({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Kh({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var gB={kernelName:Is,backendName:"cpu",kernelFunc:Vh};function bB(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Ks({inputs:{input:n},backend:t}),s=bB({inputs:{x:o},backend:t}),a=ki({inputs:{input:n},backend:t}),i=Vh({inputs:{x:a},backend:t}),u=Ar({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Kh({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var yB={kernelName:ds,backendName:"cpu",kernelFunc:bB};function aA(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return qc({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let m=qc({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(m),m}),l=Tl({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var xB={kernelName:fs,backendName:"cpu",kernelFunc:aA};function toe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;ne(o,"pad");let i=s.map((x,T)=>x[0]+o.shape[T]+x[1]),u=s.map(x=>x[0]),l=t.data.get(o.dataId).values,p=y.sizeFromShape(o.shape),m=o.shape.length,c=y.computeStrides(o.shape),d=y.sizeFromShape(i),f=i.length,h=y.computeStrides(i),g=y.getTypedArrayFromDType(o.dtype,d);a!==0&&g.fill(a);for(let x=0;x<p;x++){let I=y.indexToLoc(x,m,c).map((w,R)=>w+u[R]),k=y.locToIndex(I,f,h);g[k]=l[x]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var Kx={kernelName:Ro,backendName:"cpu",kernelFunc:toe};var roe=st((r,e)=>Math.pow(r,e)),noe=ut(Fo,roe),TB={kernelName:Fo,backendName:"cpu",kernelFunc:noe};function ooe(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=Tp(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var IB={kernelName:ii,backendName:"cpu",kernelFunc:ooe};var soe=Me(Hi,r=>1/r),CB={kernelName:Hi,backendName:"cpu",kernelFunc:soe};function aoe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;ne(o,"resizeBilinear");let u=y.computeStrides(o.shape),[l,p]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(y.sizeFromShape([m,l,p,f])),b=[s&&l>1?c-1:c,s&&p>1?d-1:d],x=[s&&l>1?l-1:l,s&&p>1?p-1:p],T=0,I=b[0]/x[0],k=b[1]/x[1];for(let w=0;w<m;w++)for(let R=0;R<l;R++){let F;a?F=I*(R+.5)-.5:F=I*R;let M=Math.max(0,Math.floor(F)),L=F-M,z=Math.min(c-1,Math.ceil(F)),W=w*u[0]+M*u[1],V=w*u[0]+z*u[1];for(let j=0;j<p;j++){let q;a?q=k*(j+.5)-.5:q=k*j;let Y=Math.max(0,Math.floor(q)),J=q-Y,H=Math.min(d-1,Math.ceil(q)),te=W+Y*u[2],se=V+Y*u[2],ae=W+H*u[2],pe=V+H*u[2];for(let ie=0;ie<f;ie++){let be=h[te+ie],fe=h[se+ie],Ie=h[ae+ie],we=h[pe+ie],Ee=be+(Ie-be)*J,Le=fe+(we-fe)*J,Ze=Ee+(Le-Ee)*L;g[T++]=Ze}}}return t.makeTensorInfo([m,l,p,f],"float32",g)}var kB={kernelName:$o,backendName:"cpu",kernelFunc:aoe};function ioe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;ne([s,o],"resizeBilinearGrad");let i=y.computeStrides(o.shape),[u,l,p,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(u*l*p*m),h=[a&&c>1?l-1:l,a&&d>1?p-1:p],g=[a&&c>1?c-1:c,a&&d>1?d-1:d],b=h[0]/g[0],x=h[1]/g[1],T=t.data.get(s.dataId).values,I=0;for(let k=0;k<u;k++){let w=k*i[0];for(let R=0;R<c;R++){let F=R*b,M=Math.floor(F),L=Math.min(Math.ceil(F),l-1),z=w+M*i[1],W=w+L*i[1],V=F-M,j=1-V;for(let q=0;q<d;q++){let Y=q*x,J=Math.floor(Y),H=Math.min(Math.ceil(Y),p-1),te=Y-J,se=1-te,ae=z+J*i[2],pe=z+H*i[2],ie=W+J*i[2],be=W+H*i[2],fe=j*se,Ie=j*te,we=V*se,Ee=V*te;for(let Le=0;Le<m;Le++){let Ze=T[I++];f[ae+Le]+=Ze*fe,f[pe+Le]+=Ze*Ie,f[ie+Le]+=Ze*we,f[be+Le]+=Ze*Ee}}}}return t.makeTensorInfo([u,p,l,m],"float32",f)}var SB={kernelName:Rm,backendName:"cpu",kernelFunc:ioe};function uoe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;ne(o,"resizeNearestNeighbor");let u=y.computeStrides(o.shape),[l,p]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(m*l*p*f),b=[s&&l>1?c-1:c,s&&p>1?d-1:d],x=[s&&l>1?l-1:l,s&&p>1?p-1:p],T=b[0]/x[0],I=b[1]/x[1],k=0;for(let w=0;w<m;w++){let R=w*u[0];for(let F=0;F<l;F++){let M=a?T*(F+.5):T*F,L=Math.min(c-1,s?Math.round(M):Math.floor(M));a&&(L=Math.max(0,L));let z=R+L*u[1];for(let W=0;W<p;W++){let V=a?I*(W+.5):I*W,j=Math.min(d-1,s?Math.round(V):Math.floor(V));a&&(j=Math.max(0,j));let q=z+j*u[2];for(let Y=0;Y<f;Y++){let J=h[q+Y];g[k++]=J}}}}return t.makeTensorInfo([m,l,p,f],o.dtype,g)}var vB={kernelName:Lo,backendName:"cpu",kernelFunc:uoe};function loe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;ne([s,o],"resizeNearestNeighborGrad");let i=y.computeStrides(o.shape),u=y.computeStrides(s.shape),[l,p,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(l*p*m*c),g=t.data.get(s.dataId).values,b=[a&&d>1?p-1:p,a&&f>1?m-1:m],x=[a&&d>1?d-1:d,a&&f>1?f-1:f],T=b[0]/x[0],I=b[1]/x[1],k=1/T,w=1/I,R=Math.ceil(k)*2+2,F=Math.ceil(w)*2+2;for(let M=0;M<l;M++){let L=M*i[0];for(let z=0;z<p;z++){let W=L+z*i[1],V=Math.floor(z*k),j=Math.floor(V-R/2);for(let q=0;q<m;q++){let Y=W+q*i[2],J=Math.floor(q*w),H=Math.floor(J-F/2);for(let te=0;te<c;te++){let se=0;for(let ae=0;ae<R;ae++){let pe=ae+j;if(pe<0||pe>=d)continue;let ie=L+pe*u[1],be=pe*T,fe=Math.min(p-1,a?Math.round(be):Math.floor(be));if(z===fe)for(let Ie=0;Ie<F;Ie++){let we=Ie+H;if(we<0||we>=f)continue;let Ee=ie+we*u[2],Le=we*I,Ze=Math.min(m-1,a?Math.round(Le):Math.floor(Le));q===Ze&&(se+=g[Ee+te])}}h[Y+te]=se}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var AB={kernelName:Pm,backendName:"cpu",kernelFunc:loe};function poe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;ne(o,"reverse");let a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return Kr({inputs:{x:o},backend:t});let u=new yt(o.shape,o.dtype),l=t.bufferSync(o);for(let p=0;p<u.size;p++){let m=u.indexToLoc(p),c=m.slice();i.forEach(d=>c[d]=o.shape[d]-1-c[d]),u.set(l.get(...c),...m)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}var wB={kernelName:va,backendName:"cpu",kernelFunc:poe};var NB={kernelName:Ma,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[l,p,m,c]=n.shape,[d,f]=C.getImageCenter(a,p,m),h=255,g=Math.sin(o),b=Math.cos(o),x=i.data.get(n.dataId).values;for(let I=0;I<l;I++){let k=I*m*p*c;for(let w=0;w<p;w++){let R=w*(m*c);for(let F=0;F<m;F++){let M=F*c;for(let L=0;L<c;L++){let z=[l,w,F,L],W=z[2],V=z[1],j=(W-d)*b-(V-f)*g,q=(W-d)*g+(V-f)*b;j=Math.round(j+d),q=Math.round(q+f);let Y=s;if(typeof s!="number"&&(L===3?Y=h:Y=s[L]),j>=0&&j<m&&q>=0&&q<p){let H=q*(m*c),te=j*c,se=k+H+te+L;Y=x[se]}let J=k+R+M+L;u[J]=Y}}}}return{dataId:i.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var moe=Me(Aa,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2===0?e:e+1}),DB={kernelName:Aa,backendName:"cpu",kernelFunc:moe};function coe(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=!0,d=t.bufferSync(o),f=t.bufferSync(s),h=cu(d,f,a,m,l,u,i,p,0,c);return t.makeTensorInfo(a,h.dtype,h.values)}var PB={kernelName:wa,backendName:"cpu",kernelFunc:coe};function doe(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<e?t=o+1:n=o;return n}function foe(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<=e?t=o+1:n=o;return n}function RB(r,e,t,n,o,s){let a=y.getArrayFromDType("int32",t*o);for(let i=0;i<t;++i){let u=r.slice(i*n,(i+1)*n),l=i*o;for(let p=0;p<o;++p)a[l+p]=s==="left"?doe(u,e[p+l]):foe(u,e[p+l])}return a}function hoe(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=RB(i,u,o.shape[0],o.shape[1],s.shape[1],a);return t.makeTensorInfo(s.shape,"int32",l)}var FB={kernelName:Fm,backendName:"cpu",kernelFunc:hoe};function goe(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;ne([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=_t(o.dtype,s.dtype),m=y.makeZerosTypedArray(y.sizeFromShape(o.shape),p),c=0,d=a===0||a>1||o.shape.length===1?1:y.sizeFromShape(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let h=0;h<d;h++)i[f]===1?m[c++]=u[f]:m[c++]=l[f];return t.makeTensorInfo(o.shape,p,m)}var MB={kernelName:gs,backendName:"cpu",kernelFunc:goe};var boe=C.SELU_SCALEALPHA,yoe=C.SELU_SCALE,xoe=Me(qi,r=>r>=0?yoe*r:boe*(Math.exp(r)-1)),EB={kernelName:qi,backendName:"cpu",kernelFunc:xoe};var Toe=Me(ji,r=>r<0?-1:r>0?1:0),_B={kernelName:ji,backendName:"cpu",kernelFunc:Toe};var Ioe=Me(zo,r=>Math.sin(r)),LB={kernelName:zo,backendName:"cpu",kernelFunc:Ioe};var Coe=Me(Na,r=>Math.sinh(r)),$B={kernelName:Na,backendName:"cpu",kernelFunc:Coe};var koe=11920928955078125e-23,BB=Math.log(koe)+2,Soe=Me(Xi,r=>{let e=r>-BB,t=r<BB,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),OB={kernelName:Xi,backendName:"cpu",kernelFunc:Soe};function voe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;ne([o],"spaceToBatchND");let i=y.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let w=1+s.length;w<o.shape.length;++w)u.push([0,0]);let l=Kx.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(l.shape,s,i,!1),m=C.getPermuted(p.length,s.length,!1),c=C.getReshapedPermuted(l.shape,s,i,!1),h=tt({inputs:{x:l},backend:t,attrs:{shape:p}}),x=Zt({inputs:{x:h},backend:t,attrs:{perm:m}}),k=tt({inputs:{x},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(x),k}var zB={kernelName:ys,backendName:"cpu",kernelFunc:voe};function Aoe(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values[0],[m,c,d,f,h]=_x(i,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var GB={kernelName:$u,backendName:"cpu",kernelFunc:Aoe};function woe(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.data.get(o.dataId).values),i=t.data.get(n.dataId).values,u=Array.from(t.data.get(s.dataId).values),[l,p,m]=Lx(i,n.shape,n.dtype,a,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var UB={kernelName:Yi,backendName:"cpu",kernelFunc:woe};function Noe(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=Kc(a,n.shape,n.dtype,i,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var WB={kernelName:Bu,backendName:"cpu",kernelFunc:Noe};function Doe(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=Kc(a,n.shape,n.dtype,i,u);return t.makeTensorInfo(p,n.dtype,l)}var KB={kernelName:Ou,backendName:"cpu",kernelFunc:Doe};function Poe(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1,f=t.bufferSync(o),h;switch(s.dtype){case"bool":{let g=t.bufferSync(s),b=Boolean(t.data.get(a.dataId).values[0]);h=cu(f,g,i,c,p,l,u,m,b,d);break}case"float32":{let g=t.bufferSync(s),b=t.data.get(a.dataId).values[0];h=cu(f,g,i,c,p,l,u,m,b,d);break}case"int32":{let g=t.bufferSync(s),b=t.data.get(a.dataId).values[0];h=cu(f,g,i,c,p,l,u,m,b,d);break}case"string":{let g=t.bufferSync(s),b=y.decodeString(t.data.get(a.dataId).values[0]);h=cu(f,g,i,c,p,l,u,m,b,d);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return t.makeTensorInfo(i,h.dtype,h.values)}var VB={kernelName:zu,backendName:"cpu",kernelFunc:Poe};function Roe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[i]=m;let d=qs({inputs:{x:o},backend:t,attrs:{begin:l,size:c}});return l[i]+=m,d})}var HB={kernelName:xs,backendName:"cpu",kernelFunc:Roe};var qB={kernelName:ui,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;ne(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let u=o[i];s[i]=u*u}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var Foe=Me(Cs,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),jB={kernelName:Cs,backendName:"cpu",kernelFunc:Foe};function Moe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n;ne(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:I}=Tt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=tt({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=Tt.computeOutShape(x,T,I),R=qs({inputs:{x:o},backend:t,attrs:{begin:x,size:w}});k=tt({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(R)}else{let w=t.bufferSync(o),R=$x(d,w,I,x);k=t.makeTensorInfo(f,R.dtype,R.values)}return k}var XB={kernelName:Da,backendName:"cpu",kernelFunc:Moe};function Eoe(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=e,c=t.data.get(p.dataId).values,d=t.data.get(m.dataId).values,[f,h]=Cp(c,d,o,s,a,i,u,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var YB={kernelName:li,backendName:"cpu",kernelFunc:Eoe};function _oe(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.data.get(s.dataId).values,u=t.data.get(a.dataId).values[0],[l,p,m]=kp(i,u,o),c=p.length;return[t.makeTensorInfo([c,2],"int32",l),t.makeTensorInfo([c],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var ZB={kernelName:Gu,backendName:"cpu",kernelFunc:_oe};function Loe(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.data.get(s.dataId).values,i=Sp(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var QB={kernelName:Uu,backendName:"cpu",kernelFunc:Loe};var $oe=Me(Pa,r=>Math.tan(r)),JB={kernelName:Pa,backendName:"cpu",kernelFunc:$oe};var Boe=Me(qo,r=>Math.tanh(r)),eO={kernelName:qo,backendName:"cpu",kernelFunc:Boe};function Ooe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;ne(o,"tile");let a=Bx(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var tO={kernelName:wn,backendName:"cpu",kernelFunc:Ooe};function zoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;ne(o,"topk");let i=t.data.get(o.dataId).values,[u,l]=Ox(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}var rO={kernelName:Ra,backendName:"cpu",kernelFunc:zoe};function Goe(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=t,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=y.computeStrides(o.shape),x=b[0],T=b[1],I=b[2],k=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(g));k.fill(u);let w=n.data.get(o.dataId).values,R=n.data.get(s.dataId).values;for(let M=0;M<p;++M){let L=s.shape[0]===1?R:R.subarray(M*8,M*8+8);for(let z=0;z<f;++z)for(let W=0;W<h;++W)for(let V=0;V<d;++V){let j,q=L[6]*W+L[7]*z+1;if(q===0)continue;let Y=(L[0]*W+L[1]*z+L[2])/q,J=(L[3]*W+L[4]*z+L[5])/q,H=nO(Y,c,i),te=nO(J,m,i);switch(a){case"nearest":j=Hoe(w,m,c,x,T,I,M,te,H,V,u);break;case"bilinear":j=qoe(w,m,c,x,T,I,M,te,H,V,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let se=M*x+z*T+W*I+V;k[se]=j}return n.makeTensorInfo(g,o.dtype,k)}return{dataId:n.write(k,g,o.dtype),shape:o.shape,dtype:o.dtype}}var oO={kernelName:Fa,backendName:"cpu",kernelFunc:Goe};function nO(r,e,t){switch(t){case"reflect":return Uoe(r,e);case"wrap":return Woe(r,e);case"nearest":return Voe(r,e);case"constant":default:return Koe(r,e)}}function Uoe(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return y.clamp(0,t,e-1)}function Woe(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return y.clamp(0,t,e-1)}function Koe(r,e){return r}function Voe(r,e){return y.clamp(0,r,e-1)}function Hh(r,e,t,n,o,s,a,i,u,l,p){let m=a*n+i*o+u*s+l;return 0<=i&&i<e&&0<=u&&u<t?r[m]:p}function Hoe(r,e,t,n,o,s,a,i,u,l,p){let m=Math.round(i),c=Math.round(u);return Hh(r,e,t,n,o,s,a,m,c,l,p)}function qoe(r,e,t,n,o,s,a,i,u,l,p){let m=Math.floor(i),c=Math.floor(u),d=m+1,f=c+1,h=(f-u)*Hh(r,e,t,n,o,s,a,m,c,l,p)+(u-c)*Hh(r,e,t,n,o,s,a,m,f,l,p),g=(f-u)*Hh(r,e,t,n,o,s,a,d,c,l,p)+(u-c)*Hh(r,e,t,n,o,s,a,d,f,l,p);return(d-i)*h+(i-m)*g}function joe(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;ne(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:l}=zx(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var sO={kernelName:Mm,backendName:"cpu",kernelFunc:joe};function Xoe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],u=new Array(a-1),l=0;for(let d=0;d<a;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(a).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(i);for(let d=0;d<c.length;d++){p[s]=d;let f=qs({inputs:{x:o},backend:t,attrs:{begin:p,size:m}});c[d]=tt({inputs:{x:f},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(f)}return c}var aO={kernelName:Ts,backendName:"cpu",kernelFunc:Xoe};function Yoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;ne(o,"unsortedSegmentSum");let i=o.shape.length,u=s.shape.length,l=[],p=[],m=i-u,c=s;for(let f=0;f<m;++f){let h=qc({inputs:{input:c},backend:t,attrs:{dim:f+1}});c=h,p.push(h)}for(let f=0;f<a;++f){let h=y.createScalarValue(f,"int32"),g=t.makeTensorInfo([],"int32",h),b=Pv({inputs:{a:g,b:c},backend:t}),x=Vs({inputs:{x:b},backend:t,attrs:{dtype:"float32"}}),T=xp({inputs:{a:x,b:o},backend:t}),I=du({inputs:{x:T},backend:t,attrs:{axis:0,keepDims:!1}});l.push(I),p.push(g),p.push(b),p.push(x),p.push(T),p.push(I)}let d=aA({inputs:l,backend:t,attrs:{axis:0}});return p.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var iO={kernelName:Wu,backendName:"cpu",kernelFunc:Yoe};var Zoe=[LL,Y_,$L,BL,tL,OL,zL,GL,UL,WL,KL,VL,HL,qL,jL,YL,ZL,QL,JL,_L,e$,t$,r$,n$,eL,rL,o$,Z_,s$,i$,u$,l$,p$,m$,c$,d$,f$,h$,g$,b$,y$,x$,T$,I$,C$,k$,S$,v$,A$,w$,D$,DL,P$,nL,R$,oL,F$,sL,M$,E$,_$,aL,L$,$$,B$,O$,z$,iL,uL,Q_,G$,a$,U$,W$,K$,PL,lL,pL,V$,mL,H$,q$,j$,X$,Y$,Z$,Q$,cL,J$,eB,tB,rB,oB,sB,aB,dL,iB,uB,mB,fL,hL,cB,dB,fB,gL,hB,yB,xB,Kx,TB,RL,yL,IB,J_,Wh,CB,FL,ML,EL,kB,SB,vB,AB,wB,NB,DB,xL,PB,FB,MB,EB,IL,_B,LB,$B,CL,lB,OB,zB,GB,UB,WB,KB,VB,HB,SL,qB,vL,jB,XB,YB,ZB,QB,wL,N$,JB,eO,tO,rO,oO,bL,sO,aO,iO,gB];for(let r of Zoe)Zi(r);var Yc={};je(Yc,{assertNotComplex:()=>qa,bindCanvasToFramebuffer:()=>ase,bindColorTextureToFramebuffer:()=>Yh,bindTextureToProgramUniformSampler:()=>kA,bindTextureUnit:()=>mO,bindVertexBufferToProgramAttribute:()=>Xx,callAndCheck:()=>ke,canBeRepresented:()=>mA,createFragmentShader:()=>dA,createFramebuffer:()=>TA,createProgram:()=>fA,createStaticIndexBuffer:()=>bA,createStaticVertexBuffer:()=>gA,createTexture:()=>yA,createVertexShader:()=>cA,getBatchDim:()=>hu,getExtensionOrThrow:()=>jc,getFramebufferErrorMessage:()=>cO,getMaxTexturesInShader:()=>AA,getNumChannels:()=>ose,getProgramUniformLocation:()=>CA,getProgramUniformLocationOrThrow:()=>IA,getRowsCols:()=>gu,getShapeAs3D:()=>Zh,getTextureShapeFromLogicalShape:()=>SA,getWebGLDisjointQueryTimerVersion:()=>wA,getWebGLErrorMessage:()=>pO,getWebGLMaxTextureSize:()=>vA,hasExtension:()=>Zn,isCapableOfRenderingToFloatTexture:()=>NA,isDownloadFloatTextureEnabled:()=>DA,isReshapeFree:()=>Il,isWebGLFenceEnabled:()=>PA,isWebGLVersionEnabled:()=>Zx,linkProgram:()=>hA,logShaderSourceAndInfoLog:()=>jx,resetMaxTextureSize:()=>ise,resetMaxTexturesInShader:()=>use,unbindColorTextureFromFramebuffer:()=>Yx,unbindTextureUnit:()=>sse,validateFramebuffer:()=>Xc,validateProgram:()=>Xh,validateTextureSize:()=>xA});var Ap={},iA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function uA(r,e){Ap[r]=e}function Yn(r,e){if(!(r in Ap)||e!=null){let n=Joe(r,e);if(n!==null)Ap[r]=n;else return console.log("Could not get context for WebGL version",r),null}let t=Ap[r];return t==null||t.isContextLost()?(delete Ap[r],Yn(r)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ap[r])}function Qoe(r){if(typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Joe(r,e){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=e??Qoe(r);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Ap[r]},!1),r===1?t.getContext("webgl",iA)||t.getContext("experimental-webgl",iA):t.getContext("webgl2",iA)}function wp(r,e){return[e,r]}function uO(r,e){return r*e}function qh(r){let e=y.sizeFromShape(r),t=Math.ceil(e/4);return y.sizeToSquarishShape(t)}function Si(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function lO(r,e){let[t,n]=Si(r,e);return t*n*4}function jh(r,e){let t=r,n,o,s,a,i,u,l,p,m,c;return B().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,l=4,p=1,m=t.HALF_FLOAT,c=t.FLOAT,u=t.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,l=4,p=4,m=e!=null?e.HALF_FLOAT_OES:null,c=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:p,textureTypeHalfFloat:m,textureTypeFloat:c}}function ke(r,e){let t=e();return B().getBool("DEBUG")&&ese(r),t}function ese(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+pO(r,e))}var tse=596e-10,rse=65504;function mA(r){return!!(B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||tse<Math.abs(r)&&Math.abs(r)<rse)}function pO(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function jc(r,e){return fu(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function cA(r,e){let t=fu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ke(r,()=>r.shaderSource(t,e)),ke(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function dA(r,e){let t=fu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ke(r,()=>r.shaderSource(t,e)),ke(r,()=>r.compileShader(t)),B().get("ENGINE_COMPILE_ONLY"))return t;if(r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw jx(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var nse=/ERROR: [0-9]+:([0-9]+):/g;function jx(r,e){let t=nse.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((m,c)=>y.rightPad((c+1).toString(),s)+m),i=0;for(let m=0;m<a.length;m++)i=Math.max(a[m].length,i);let u=a.slice(0,n-1),l=a.slice(n-1,n),p=a.slice(n);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${y.rightPad(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function fA(r){return fu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function hA(r,e){if(ke(r,()=>r.linkProgram(e)),!B().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Xh(r,e){if(ke(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function gA(r,e){let t=fu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ke(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),ke(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function bA(r,e){let t=fu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ke(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),ke(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function ose(){return B().getNumber("WEBGL_VERSION")===2?1:4}function yA(r){return fu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function xA(r,e){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function TA(r){return fu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Xx(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(ke(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),ke(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),ke(r,()=>r.enableVertexAttribArray(i)),!0)}function mO(r,e,t){dO(r,t),ke(r,()=>r.activeTexture(r.TEXTURE0+t)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function sse(r,e){dO(r,e),ke(r,()=>r.activeTexture(r.TEXTURE0+e)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function IA(r,e,t){return fu(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function CA(r,e,t){return r.getUniformLocation(e,t)}function kA(r,e,t,n){ke(r,()=>mO(r,e,n)),ke(r,()=>r.uniform1i(t,n))}function ase(r){ke(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),ke(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),ke(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function Yh(r,e,t){ke(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),ke(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function Yx(r,e){ke(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),ke(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Xc(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+cO(r,e))}function cO(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function fu(r,e,t){let n=ke(r,()=>e());if(n==null)throw new Error(t);return n}function dO(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function hu(r,e=2){return y.sizeFromShape(r.slice(0,r.length-e))}function gu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Zh(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[hu(r),...gu(r)]),e}function SA(r,e=!1){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?y.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let n=y.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=hu(r),s=2,a=2;return r.length&&([s,a]=gu(r)),n=o*(s/2)*(a/2),y.sizeToSquarishShape(n).map(i=>i*2)}return y.sizeToSquarishShape(n)}function Vx(r){return r%2===0}function Il(r,e){if(r=r.slice(-2),e=e.slice(-2),y.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||Vx(t)&&Vx(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&Vx(r[0])&&Vx(e[0])}var Hx,qx;function vA(r){if(Hx==null){let e=Yn(r);Hx=e.getParameter(e.MAX_TEXTURE_SIZE)}return Hx}function ise(){Hx=null}function use(){qx=null}function AA(r){if(qx==null){let e=Yn(r);qx=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,qx)}function wA(r){if(r===0)return 0;let e,t=Yn(r);return Zn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Zn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Zn(r,e){return r.getExtension(e)!=null}function Zx(r){try{if(Yn(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function NA(r){if(r===0)return!1;let e=Yn(r);if(r===1){if(!Zn(e,"OES_texture_float"))return!1}else if(!Zn(e,"EXT_color_buffer_float"))return!1;return pA(e)}function DA(r){if(r===0)return!1;let e=Yn(r);if(r===1){if(!Zn(e,"OES_texture_float")||!Zn(e,"WEBGL_color_buffer_float"))return!1}else{if(Zn(e,"EXT_color_buffer_float"))return pA(e);let n="EXT_color_buffer_half_float";if(Zn(e,n)){let o=e.getExtension(n);return lse(e,o)}return!1}return pA(e)}function pA(r){let e=jh(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function lse(r,e){let t=jh(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function PA(r){return r!==2?!1:Yn(r).fenceSync!=null}function qa(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&y.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var $e=B();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>Zx(2)?2:Zx(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>vA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>AA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=$e.getNumber("WEBGL_VERSION");return r===0?0:wA(r)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!qu.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>NA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>DA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>PA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>qu.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);$e.registerFlag("WEBGL_EXP_CONV",()=>!1);function Qt(){let r,e,t,n,o,s,a,i,u,l;return B().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function ja(r,e,t="index"){let n=y.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Np(r,e,t="index"){let n=y.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function pse(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function fO(r,e,t="index"){let n=r.map((s,a)=>a),o=pse(n,e);return o.map((s,a)=>{let i=`int ${r[a]} = ${t} / ${o[a]}`,u=a===o.length-1?`int ${r[a+1]} = ${t} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${u};`}).join("")}function Zc(r){let e=y.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Qc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var Qx=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:hO}=C;function gO(r,e,t){let n=[];if(r.forEach(d=>{let f=y.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),t.enableShapeUniforms){let{uniformShape:h}=Jx(t.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>mse(d,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Qt(),u=fse(i),l,p,m=bse(i);return e.isPacked?(l=cse(e.logicalShape,a,t.enableShapeUniforms),p=gse(i)):(l=dse(e.logicalShape,a,t.enableShapeUniforms),p=hse(i)),t.packedInputs&&(m+=Ise),[m,u,p,o,l,s,t.userCode].join(`
`)}function ed(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return Mse(r,e);case 1:return _se(r,e);case 2:return $se(r,e);case 3:return Ose(r,e);case 4:return Gse(r,e);case 5:return Use(r);case 6:return Wse(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function bO(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return Fse(r);case 1:return Ese(r,e);case 2:return Lse(r,e);case 3:return Bse(r,e);default:return zse(r,e)}}function mse(r,e,t=!1,n){let o="";t?o+=bO(r,n):o+=ed(r,n);let s=r.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(t?o+=Kse(r,e):o+=Vse(r,e)),o}function cse(r,e,t){switch(r.length){case 0:return yO();case 1:return Cse(r,e,t);case 2:return Pse(r,e,t);case 3:return Sse(r,e,t);default:return Ase(r,e,t)}}function dse(r,e,t){switch(r.length){case 0:return yO();case 1:return kse(r,e,t);case 2:return Rse(r,e,t);case 3:return vse(r,e,t);case 4:return wse(r,e,t);case 5:return Nse(r,e);case 6:return Dse(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function fse(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function hse(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function gse(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function bse(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${yse}
    ${xse}
    ${Tse}
  `}var yse=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,xse=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Tse=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ise=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function yO(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Cse(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function kse(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Sse(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function vse(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Np(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=ja(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Ase(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",u="b, r, c";for(let l=2;l<r.length-1;l++)a*=r[r.length-l-1],i=`
      int b${l} = index / ${a};
      index -= b${l} * ${a};
    `+i,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function wse(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Np(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=ja(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Nse(r,e){let t=ja(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Dse(r,e){let t=ja(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Pse(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(y.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Rse(r,e,t){return y.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Dp(r){return`offset${r}`}function Fse(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Qt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function Mse(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=Dp(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;let[i,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Ese(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Qt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function _se(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${td(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Dp(t);return a===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Lse(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],u=Qt();if(s!=null&&y.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function $se(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=y.squeezeShape(t),u=a;if(u.length<t.length){let c=rd(r,u),d=["row","col"];return`
      ${ed(c,e)}
      float ${o}(int row, int col) {
        return ${o}(${nd(d,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${td(r)}
      }
    `;let l=s[0],p=s[1],m=Dp(n);return p===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${m};
    vec2 uv = uvFromFlat(${l}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function Bse(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let c=t.slice(1),d=[1,2],f=rd(r,c),h=["b","row","col"];return`
        ${bO(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${nd(h,d)});
        }
      `}let i=Qt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let u=a[0],l=a[1],p=Math.ceil(t[2]/2),m=p*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${m}, ${p}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function Ose(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:u}=y.squeezeShape(t),l=i;if(l.length<t.length){let h=rd(r,l),g=["row","col","depth"];return`
        ${ed(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${nd(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${td(r)}
      }
    `;let p=r.shapeInfo.texShape,m=p[0],c=p[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===a&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Dp(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${a} + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function zse(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Qt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],p=u[1],m=Math.ceil(s[a-1]/2),c=m*Math.ceil(s[a-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<a-1;h++)d=`int b${h}, `+d,c*=s[a-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${l});
      return ${o.texture2D}(${t}, uv);
    }
  `}function Gse(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:u,keptDims:l}=y.squeezeShape(t);if(u.length<t.length){let x=rd(r,u),T=["row","col","depth","depth2"];return`
      ${ed(x,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${nd(T,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${td(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let b=Dp(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${b});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${b});
      return sampleTexture(${n}, uv);
    }
  `}function Use(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:u,keptDims:l}=y.squeezeShape(e);if(u.length<e.length){let h=rd(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${ed(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${nd(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${td(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===i&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Dp(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Wse(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=y.squeezeShape(e);if(o.length<e.length){let g=rd(r,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${ed(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${nd(b,s)});
      }
    `}let a=e[5],i=e[4]*a,u=e[3]*i,l=e[2]*u,p=e[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${l}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${td(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===p&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Dp(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${l} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function td(r){let e=r.name,t=y.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Kse(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=hO(r.shapeInfo.logicalShape,e.logicalShape),u=Ve(a),l=a-s,p,m=["x","y","z","w","u","v"];s===0?p="":a<2&&i.length>=1?p="coords = 0;":p=i.map(x=>`coords.${m[x+l]} = 0;`).join(`
`);let c="";a<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((x,T)=>`coords.${m[T+l]}`).join(", ");let d="return outputValue;",h=y.sizeFromShape(r.shapeInfo.logicalShape)===1,b=y.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!b)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!b)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=s-2,T=s-1;i.indexOf(x)>-1&&i.indexOf(T)>-1?d="return vec4(outputValue.x);":i.indexOf(x)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(T)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function Vse(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===u&&r.shapeInfo.flatOffset==null&&y.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let l=Ve(u),p=hO(r.shapeInfo.logicalShape,e.logicalShape),m=u-i,c,d=["x","y","z","w","u","v"];i===0?c="":u<2&&p.length>=1?c="coords = 0;":c=p.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function Ve(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Jx(r,e,t){let{newShape:n,keptDims:o}=y.squeezeShape(e),s=e.length,a=r&&s===3&&e[0]===1,i=a?e.slice(1):n,u=!r&&s>1&&!y.arraysEqual(e,t)&&n.length<s||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:o}}function rd(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function nd(r,e){return e.map(t=>r[t]).join(", ")}function TO(r,e,t,n){let o=t.map((p,m)=>{let c={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(c.flatOffset=p.texData.slice.flatOffset),{name:e.variableNames[m],shapeInfo:c}}),s=o.map(p=>p.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=gO(o,a,e),u=dA(r.gl,i),l=r.createProgram(u);return B().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:e,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:a,...RA(r,e,l)}}function RA(r,e,t){let n={},o={},s={},a=[],i,u,l,p=null,m=null;m=r.getUniformLocation(t,"NAN",!1),B().getNumber("WEBGL_VERSION")===1&&(p=r.getUniformLocation(t,"INFINITY",!1));let c=!1;for(let d=0;d<e.variableNames.length;d++){let f=e.variableNames[d];n[f]=r.getUniformLocation(t,f,c),n[`offset${f}`]=r.getUniformLocation(t,`offset${f}`,c),e.enableShapeUniforms&&(o[`${f}Shape`]=r.getUniformLocation(t,`${f}Shape`,c),s[`${f}TexShape`]=r.getUniformLocation(t,`${f}TexShape`,c))}return e.enableShapeUniforms&&(i=r.getUniformLocation(t,"outShape",c),l=r.getUniformLocation(t,"outShapeStrides",c),u=r.getUniformLocation(t,"outTexShape",c)),e.customUniforms&&e.customUniforms.forEach((d,f)=>{a[f]=r.getUniformLocation(t,d.name,c)}),{uniformLocations:n,customUniformLocations:a,infLoc:p,nanLoc:m,inShapesLocations:o,inTexShapesLocations:s,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}}function xO(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!y.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function IO(r,e,t,n,o){e.program.enableShapeUniforms||(xO(e.inShapeInfos,t),xO([e.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):r.setOutputMatrixTexture(s.texture,a[0],a[1]),r.setProgram(e.webGLProgram),B().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((u,l)=>{let p=e.program.variableNames[l],m=e.uniformLocations[p],c=e.uniformLocations[`offset${p}`],d=e.inShapesLocations[`${p}Shape`],f=e.inTexShapesLocations[`${p}TexShape`];if(d){let{uniformShape:h}=Jx(e.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(d,new Int32Array(h));break;case 2:r.gl.uniform2iv(d,new Int32Array(h));break;case 3:r.gl.uniform3iv(d,new Int32Array(h));break;case 4:r.gl.uniform4iv(d,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),m!=null){if(u.isUniform){if(y.sizeFromShape(u.shape)<2)r.gl.uniform1f(m,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(m,h)}return}u.texData.slice!=null&&c!=null&&r.gl.uniform1i(c,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,m,l)}});let i=e.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let u=y.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break;default:break}}e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((u,l)=>{let p=e.customUniformLocations[l],m=o[l];if(u.type==="float")r.gl.uniform1fv(p,m);else if(u.type==="vec2")r.gl.uniform2fv(p,m);else if(u.type==="vec3")r.gl.uniform3fv(p,m);else if(u.type==="vec4")r.gl.uniform4fv(p,m);else if(u.type==="int")r.gl.uniform1iv(p,m);else if(u.type==="ivec2")r.gl.uniform2iv(p,m);else if(u.type==="ivec3")r.gl.uniform3iv(p,m);else if(u.type==="ivec4")r.gl.uniform4iv(p,m);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function CO(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let u=a.texData.texShape,{useSqueezeShape:l,uniformShape:p,keptDims:m}=Jx(r.packedInputs,a.shape,u),c="",d="",f="";if(p.length===1&&r.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];c=`${k[0]>1}_${k[1]>1}`}else if(p.length===2&&!r.packedInputs)d=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!r.packedInputs){let k=y.computeStrides(p);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let h=a.shape.length,g=p.length===2&&y.arraysEqual(a.shape,u),b=y.sizeFromShape(a.shape)===1,x=C.getBroadcastDims(a.shape,t.shape),T=!r.packedInputs&&h===t.shape.length&&y.arraysEqual(u,t.texData.texShape),I=r.packedInputs||p.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${T}_${l?m:""}_${p.length}_${b}_${x}_${g}_${c}_${d}_${f}_${I}_${i}`}else{let u=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${u}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${B().getNumber("WEBGL_VERSION")}`,s}function wt(r){return B().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var FA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Qt();this.outputShape=e,this.enableShapeUniforms=wt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Np(["r","c","d"],e):ja(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var MA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Qt();this.outputShape=e,this.enableShapeUniforms=wt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Np(["r","c","d"],e):ja(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var EA=class{constructor(e){this.variableNames=["A"];this.outTexUsage=3;let t=Qt();this.outputShape=e,this.userCode=`
      ${Qx}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var _A=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=3;let t=Qt();this.outputShape=e,this.userCode=`
      ${Qx}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var LA=class{constructor(e,t=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Qt();this.outputShape=e,this.enableShapeUniforms=wt(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Qc():Zc(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var $A=class{constructor(e,t=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Qt();this.outputShape=e,this.enableShapeUniforms=wt(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let u=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Qc():Zc(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var ew={};je(ew,{bindVertexProgramAttributeStreams:()=>HA,createBufferFromOutputTexture:()=>XA,createFloat16MatrixTexture:()=>UA,createFloat16PackedMatrixTexture:()=>VA,createFloat32MatrixTexture:()=>GA,createIndexBuffer:()=>zA,createPackedMatrixTexture:()=>KA,createUnsignedBytesMatrixTexture:()=>WA,createVertexBuffer:()=>OA,createVertexShader:()=>BA,downloadByteEncodedFloatMatrixFromOutputTexture:()=>ZA,downloadFloat32MatrixFromBuffer:()=>YA,downloadMatrixFromPackedOutputTexture:()=>JA,downloadPackedMatrixFromBuffer:()=>QA,getInternalFormatForFloat16MatrixTexture:()=>rT,getInternalFormatForFloat16PackedMatrixTexture:()=>sT,getInternalFormatForFloat32MatrixTexture:()=>tT,getInternalFormatForPackedMatrixTexture:()=>oT,getInternalFormatForUnsignedBytesMatrixTexture:()=>nT,uploadDenseMatrixToTexture:()=>qA,uploadPixelDataToTexture:()=>jA});function BA(r){let e=Qt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return cA(r,t)}function OA(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return gA(r,e)}function zA(r){let e=new Uint16Array([0,1,2,2,1,3]);return bA(r,e)}function Qh(r,e,t,n,o,s){xA(e,t);let a=yA(r),i=r.TEXTURE_2D;return ke(r,()=>r.bindTexture(i,a)),ke(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),ke(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),ke(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),ke(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),B().getNumber("WEBGL_VERSION")===1?ke(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)):ke(r,()=>r.texStorage2D(i,1,n,e,t)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function tT(r){return r.internalFormatFloat}function GA(r,e,t,n){let[o,s]=wp(e,t);return Qh(r,o,s,tT(n),n.textureFormatFloat,r.FLOAT)}function rT(r){return r.internalFormatHalfFloat}function UA(r,e,t,n){let[o,s]=wp(e,t);return Qh(r,o,s,rT(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function nT(r){return r.downloadTextureFormat}function WA(r,e,t,n){let[o,s]=wp(e,t);return Qh(r,o,s,nT(n),r.RGBA,r.UNSIGNED_BYTE)}function oT(r){return r.internalFormatPackedFloat}function KA(r,e,t,n){let[o,s]=Si(e,t);return Qh(r,o,s,oT(n),r.RGBA,r.FLOAT)}function sT(r){return r.internalFormatPackedHalfFloat}function VA(r,e,t,n){let[o,s]=Si(e,t);return Qh(r,o,s,sT(n),r.RGBA,n.textureTypeHalfFloat)}function HA(r,e,t){return ke(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),Xx(r,e,"clipSpacePos",t,3,20,0)&&Xx(r,e,"uv",t,2,20,12)}function qA(r,e,t,n,o,s){ke(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,u;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,u=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,u=s.internalFormatPackedFloat),a.set(o),B().getNumber("WEBGL_VERSION")===2?ke(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,i,a)):ke(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,t,n,0,r.RGBA,i,a)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function jA(r,e,t){ke(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?B().getNumber("WEBGL_VERSION")===2?ke(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):ke(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):B().getNumber("WEBGL_VERSION")===2?ke(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):ke(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function XA(r,e,t,n){let o=r.createBuffer();ke(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return ke(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),ke(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),ke(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function YA(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function ZA(r,e,t,n){let[o,s]=wp(e,t),a=4,i=new Uint8Array(uO(e*t,a));return ke(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function QA(r,e,t,n,o,s,a,i){let u=r,l=new Float32Array(lO(s,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function JA(r,e,t){let n=new Float32Array(e*t*4);return ke(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var od=class{constructor(e){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let t=B().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,uA(t,e)):this.gl=Yn(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),B().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=jc(this.gl,s),Zn(this.gl,a))this.textureHalfFloatExtension=jc(this.gl,a);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Zn(this.gl,o))this.colorBufferHalfFloatExtension=jc(this.gl,o);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Zn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Zn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=OA(this.gl),this.indexBuffer=zA(this.gl),this.framebuffer=TA(this.gl),this.textureConfig=jh(this.gl,this.textureHalfFloatExtension)}get debug(){return B().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ke(e,()=>e.finish()),ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.deleteFramebuffer(this.framebuffer)),ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ke(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),GA(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),UA(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),WA(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jA(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),qA(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),VA(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),KA(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Yx(this.gl,this.framebuffer),this.outputTexture=null),ke(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>ZA(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return QA(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return YA(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=XA(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(B().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>JA(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=BA(t));let n=fA(t);return ke(t,()=>t.attachShader(n,this.vertexShader)),ke(t,()=>t.attachShader(n,e)),hA(t,n),this.debug&&Xh(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=HA(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ke(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Xh(this.gl,this.program),ke(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?IA(this.gl,e,t):CA(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ke(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),kA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=Si(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Xh(this.gl,this.program),Xc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ke(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ke(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=jc(this.gl,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=jse(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Yh(this.gl,e,this.framebuffer),this.debug&&Xc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Yh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Xc(this.gl)):Yx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;Yh(o,e,this.framebuffer),this.debug&&Xc(o),this.outputTexture=e,ke(o,()=>o.viewport(0,0,t,n)),ke(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),ke(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function jse(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:SO,bincountImpl:aT,bincountReduceImpl:vO,ceilImpl:AO,concatImpl:wO,equalImpl:NO,expImpl:DO,expm1Impl:PO,floorImpl:RO,gatherNdImpl:FO,gatherV2Impl:MO,greaterImpl:EO,greaterEqualImpl:_O,lessImpl:LO,lessEqualImpl:$O,linSpaceImpl:BO,logImpl:OO,maxImpl:zO,maximumImpl:GO,minimumImpl:UO,multiplyImpl:WO,negImpl:KO,notEqualImpl:VO,prodImpl:HO,rangeImpl:qO,rsqrtImpl:jO,scatterImpl:XO,sigmoidImpl:YO,simpleAbsImpl:iT,sliceImpl:ZO,sparseFillEmptyRowsImpl:QO,sparseReshapeImpl:JO,sparseSegmentReductionImpl:uT,sqrtImpl:ez,stridedSliceImpl:tz,stringNGramsImpl:rz,stringSplitImpl:nz,stringToHashBucketFastImpl:oz,subImpl:sz,tileImpl:az,topKImpl:iz,transposeImpl:Pp,uniqueImpl:uz}=Vc;function tw(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function or(r,e){return e===1?[r]:tw(r,e)}function lz(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var rw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=wt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=or("rc",this.rank),n=Ve(this.rank),o=this.getOutOfBoundsCondition(t),s=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var Jh=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=e,this.enableShapeUniforms=wt(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Xse(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Qc():Zc(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Xse(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?fO(["r","c","d"],"inputShape"):ja(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var nw=class{constructor(e){this.gpgpu=e;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(e,t,n){let o=mz(t,n),s=cz(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=pz(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let i;return o===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=mz(n,o),a=cz(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=pz(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=B().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[a],p=l.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(p,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Yse(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function pz(r,e,t,n,o){let s=Zse(e,n),a;if(o){let[u,l]=Si(r[0],r[1]);a=u*l}else{let[u,l]=wp(r[0],r[1]);a=u*l}let i=Yse(t,s);return a*i}function Zse(r,e){switch(r){case 3:return oT(e);case 4:return sT(e);case 1:return tT(e);case 0:return rT(e);case 2:return nT(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function Qse(r){return B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function mz(r,e){if(r===1)return 3;if(r===0||r==null)return Qse(e);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function cz(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var kn=class{constructor(e,t){this.variableNames=["A"];this.outputShape=e,this.enableShapeUniforms=wt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Tr="if (isnan(x)) return x;",dz="return x;",ow="return abs(x);";var fz="return (x >= 0.0) ? x : (exp(x) - 1.0);",hz=Tr+`
  return (x < 0.0) ? 0.0 : x;
`,gz=Tr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Rp="return x;",bz="return 1.0 / (1.0 + exp(-1.0 * x));";var xz="return x;",Tz=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Iz=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Cz=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kz="return 1.0 / (1.0 + exp(-1.0 * x));",js=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.enableShapeUniforms=wt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var sw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=e,this.enableShapeUniforms=wt(this.outputShape.length);let t=e.length,n=or("rc",t),o=Ve(t),s=lz(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var eae=xr.whereImpl,tae=1e-7,rae=1e-4,lT={};function nae(r){return r in lT||(lT[r]={}),lT[r]}var oae=B().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),sae=600;function aae(){return B().global.screen==null?1024:B().global.screen.height*B().global.screen.width*window.devicePixelRatio*sae/1024/1024}var aw=class extends as{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!B().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof od)t=e;else{let n=Yn(B().getNumber("WEBGL_VERSION"),e);t=new od(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Yn(B().getNumber("WEBGL_VERSION"));t=new od(n),this.binaryCache=nae(B().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new nw(this.gpgpu),this.numMBBeforeWarning=aae(),this.texData=new ri(this,Rn())}nextDataId(){return aw.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((B().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||B().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:1,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if(B().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:1,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:u}=t;if(a!=null){let c;u?c=new js(i,Rp):c=new kn(i,Rp);let d=this.runWebGLProgram(c,[{dataId:e,shape:i,dtype:o}],o),f=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let l=this.activeTimers!=null,p;l&&(p=y.now());let m;if(o==="complex64"){let c=this.readSync(s.real.dataId),d=this.readSync(s.imag.dataId);m=C.mergeRealAndImagArrays(c,d)}else m=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=y.now()-p),this.convertAndCacheOnCPU(e,m)}async read(e){if(this.pendingRead.has(e)){let f=this.pendingRead.get(e);return new Promise(h=>f.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(s!=null){let f;u?f=new js(o,Rp):f=new kn(o,Rp);let h=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(B().getBool("DEBUG")&&!B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&B().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,p;if(a!=="complex64"&&B().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let f=this.texData.get(p.dataId);l=this.gpgpu.createBufferFromTexture(f.texture.texture,...qh(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let m;if(a==="complex64"){let f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=f[0],g=f[1];m=C.mergeRealAndImagArrays(h,g)}else if(l==null)m=this.getValuesFromTexture(e);else{let f=y.sizeFromShape(o);m=this.gpgpu.downloadFloat32MatrixFromBuffer(l,f)}if(p!=null&&this.disposeIntermediateTensorInfo(p),l!=null){let f=this.gpgpu.gl;ke(f,()=>f.deleteBuffer(l))}let c=this.convertAndCacheOnCPU(e,m),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(f=>f(c)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Rn().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,t={}){let n=this.texData.get(e),{values:o,shape:s,slice:a,dtype:i,isPacked:u,texture:l}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;u?d=new js(s,Rp):d=new kn(s,Rp);let f=this.runWebGLProgram(d,[{dataId:e,shape:s,dtype:i}],i),h=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),h}if(l==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,t.customTexShape),m=Rn().makeTensorFromTensorInfo(p),c=this.texData.get(p.dataId);return{tensorRef:m,...c.texture}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>y.decodeString(o));return xe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!mA(n))throw B().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=y.sizeFromShape(t);if(B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(e),d=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...qh(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(c),f}let a=B().getBool("WEBGL_PACK")&&o===!0,i=a?Zh(t):t,u=a?new _A(i):new EA(i),l=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),p=this.texData.get(l.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),m}timerAvailable(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=y.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=y.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(s);i.kernelMs=y.sum(u),i.getExtraProfileInfo=()=>u.map((l,p)=>({name:a[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(e){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=y.now(),e)}async getQueryTime(e){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=oae){return B().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&y.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return eae(e.shape,t)}packedUnaryOp(e,t,n){let o=new js(e.shape,t),s=this.compileAndRun(o,[e],n);return Rn().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=iT(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(B().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ow,e.dtype);let t=new kn(e.shape,ow),n=this.compileAndRun(t,[e]);return Rn().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(a=>y.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){return Rn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new sw(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new rw(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[hu(e.shape),...gu(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[hu(t),...gu(t)],a=new Jh(s,n),i=!0,u=[n],l=this.runWebGLProgram(a,[o],e.dtype,u,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:o,shape:s,dtype:a}=n;if(t!=null){let c=y.sizeFromShape(s),d=t[0]*t[1]*4;y.assert(c<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Zh(s),u;o?u=new MA(i):u=new FA(i);let l=!0,p=[t??qh(i)],m=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,p,l,t);return{dtype:a,shape:s,dataId:m.dataId}}runWebGLProgram(e,t,n,o,s=!1,a){let i=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===0){let b=a??qh(e.outputShape);u.texShape=b.map(x=>x*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),y.sizeFromShape(i.shape)===0)return u.values=y.getTypedArrayFromDType(i.dtype,0),i;let l=[],p=t.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(b.dataId);if(x.texture==null){if(!e.packedInputs&&y.sizeFromShape(b.shape)<=B().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!x.isPacked!=!!e.packedInputs)b=x.isPacked?this.unpackTensor(b):this.packTensor(b),l.push(b),x=this.texData.get(b.dataId);else if(x.isPacked&&!Il(x.shape,b.shape)){let T=b,I=b.shape;b.shape=x.shape,b=this.packedReshape(b,I),l.push(b),x=this.texData.get(b.dataId),T.shape=I}return{shape:b.shape,texData:x,isUniform:!1}});this.uploadToGPU(i.dataId);let m={shape:i.shape,texData:u,isUniform:!1},c=CO(e,p,m),d=this.getAndSaveBinary(c,()=>TO(this.gpgpu,e,p,m)),f=this.activeTimers!=null,h;f&&(h=this.startTimer()),B().get("ENGINE_COMPILE_ONLY")||IO(this.gpgpu,d,p,m,o),l.forEach(b=>this.disposeIntermediateTensorInfo(b)),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let g=B().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let b=y.now();b-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!B().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let b=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),b}return i}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(B().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=U(()=>{if(!B().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=B().getBool("DEBUG");B().set("DEBUG",!1);let t=this.abs(ce(1e-8)).dataSync()[0];if(B().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?tae:rae}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:u}=t;if(a!=null)return;let l=this.activeTimers!=null,p;l&&(p=y.now());let m=t.texShape;if(m==null&&(m=SA(n,u),t.texShape=m),s!=null){let c=Zh(n),d,f=m[1],h=m[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!g)&&([f,h]=Si(m[0],m[1])),u?d=new $A(c,g):d=new LA(c,g);let b=g?[h,f]:m,x=this.makeTensorInfo(b,o),T=this.texData.get(x.dataId);g?T.usage=2:T.usage=1,T.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,h,s);let I=[[h,f]],k=!0,w=this.runWebGLProgram(d,[x],o,I,k),R=this.texData.get(w.dataId);t.texShape=R.texShape,t.isPacked=R.isPacked,t.usage=R.usage,B().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=R.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(x),l&&(this.uploadWaitMs+=y.now()-p)}else{let c=this.acquireTexture(m,i,o,u);t.texture=c}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=iae(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*y.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(s){throw s}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Zd(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(jx(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:o,nanLoc:s,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:u,outShapeStridesLocation:l,outTexShapeLocation:p}=RA(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=o,e.nanLoc=s,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=u,e.outShapeStridesLocation=l,e.outTexShapeLocation=p}}},eg=aw;eg.nextDataId=0;function iae(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var uae="0.0.0";function Sz(){B().set("WEBGL_FORCE_F16_TEXTURES",!0)}qu.isBrowser()&&Yu("webgl",()=>new eg,2);var H5t={forceHalfFloat:Sz};var pT=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Xs=class{constructor(e,t,n){this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=wt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var Cl=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var Xa=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=wt(s);let a="";if(o)if(s===0||y.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ve(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=or("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function sr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var vz={kernelName:Wn,backendName:"webgl",kernelFunc:sr};function $n(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=sr({inputs:{x:n},backend:t}),u=sr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:u},s}var Az={kernelName:Nu,backendName:"webgl",kernelFunc:$n};var iw="return (a < 0.) ? b * a : a;",uw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),i=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xa(uw,o.shape,a.shape):new Xs(iw,o.shape,a.shape),u=t.runWebGLProgram(i,[o,a],"float32");return t.disposeIntermediateTensorInfo(a),u}var wz={kernelName:Io,backendName:"webgl",kernelFunc:lae};var lw="return (a < 0.) ? b * a : a;",pw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function pae(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xa(pw,n.shape,o.shape):new Xs(lw,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var Nz={kernelName:Mo,backendName:"webgl",kernelFunc:pae};var Ys="if (isnan(x)) return x;",Dz=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Pz=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ae({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,u=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let m=i.texData.get(a.dataId),c=t(m.values,u);return i.makeTensorInfo(a.shape,u,c)}let l=B().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,p;return l?p=new js(a.shape,e):p=new kn(a.shape,r),i.runWebGLProgram(p,[a],u)}}function dt({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:u,b:l}=a,p=i;if(n&&u.dtype==="complex64"){let f=p.texData.get(u.dataId),h=p.texData.get(l.dataId),[g,b]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(T=>{let[I,k]=T,w={dataId:I.dataId,dtype:I.dtype,shape:u.shape},R={dataId:k.dataId,dtype:k.dtype,shape:l.shape},F=new Xs(r,u.shape,l.shape);return p.runWebGLProgram(F,[w,R],_t(I.dtype,k.dtype))}),x=$n({inputs:{real:g,imag:b},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(b),x}let m=s||_t(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||p.shouldExecuteOnCPU([u,l]))&&o!=null){let f=p.texData.get(u.dataId).values,h=p.texData.get(l.dataId).values,g=u.dtype==="string"?C.fromUint8ToStringArray(f):f,b=u.dtype==="string"?C.fromUint8ToStringArray(h):h,[x,T]=o(u.shape,l.shape,g,b,m),I=p.makeTensorInfo(T,m),k=p.texData.get(I.dataId);return k.values=x,I}let c=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,d;return c?d=new Xa(e,u.shape,l.shape,t):d=new Xs(r,u.shape,l.shape),p.runWebGLProgram(d,[u,l],m)}}function bu(r,e=!1){if(r==="linear")return e?xz:dz;if(r==="relu")return e?Iz:hz;if(r==="elu")return e?Tz:fz;if(r==="relu6")return e?Cz:gz;if(r==="prelu")return e?pw:lw;if(r==="leakyrelu")return e?uw:iw;if(r==="sigmoid")return e?kz:bz;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var tg=class{constructor(e,t,n,o=!1,s=!1,a=!1,i=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=wt(this.outputShape.length);let p=o?e[1]:e[2],m=Math.ceil(p/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",b="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");let x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let T="rc.x",I="rc.x";e[0]<t[0]?T=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(I=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${T};
          int batchB = ${I};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}};var mw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},mT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var Rz="return a * b;";function rg(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=C.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),u=t.texData.get(o.dataId),l=new mT(mw.REAL,n.shape,o.shape),p=new mT(mw.IMAG,n.shape,o.shape),m=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],c=t.runWebGLProgram(l,m,"float32"),d=t.runWebGLProgram(p,m,"float32"),f=$n({inputs:{real:c,imag:d},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),u=t.texData.get(o.dataId),[l,p]=WO(n.shape,o.shape,i.values,u.values,s),m=t.makeTensorInfo(p,s),c=t.texData.get(m.dataId);return c.values=l,m}let a;return B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Xa(Rz,n.shape,o.shape):a=new Xs(Rz,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var Fz={kernelName:Po,backendName:"webgl",kernelFunc:rg};function Mz(r,e,t){let n=[hu(r.shape),...gu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[hu(e),...gu(e)],a=new Jh(s,n),i=!0,u=[n],l=t.runWebGLProgram(a,[o],r.dtype,u,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function ue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=y.sizeFromShape(o.shape),u=y.inferFromImplicitShape(s,i),l=y.sizeFromShape(u);y.assert(i===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let p=a.texData.get(o.dataId);return p.isPacked&&!Il(o.shape,u)&&!(p.texture!==null&&Il(p.shape,u))?Mz(o,u,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var Ez={kernelName:hs,backendName:"webgl",kernelFunc:ue};var cT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(t!=null){let m=1/t;l=`sumValue += dot(values * ${y.isInt(m)?m.toPrecision(2):m}, ones);`}let p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var cw=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,m=n%4,c=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function cae(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=C.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function Qn(r,e,t,n){let o=cae(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:u,outSize:l}=o[a],p,m;t==="mean"?p=a===0?new cT({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},i):new cT({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l}):p=new cw({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},t),m=s,s=n.runWebGLProgram(p,[s],e),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var dw=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=Ve(this.rank),s=dae(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function dae(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var fw=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Ve(this.rank),s=tw("rc",this.rank),a=new Array(this.rank);for(let p=0;p<t.length;p++)a[t[p]]=s[p];let i=`vec2(${a.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function kl(r,e,t){let n=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fw(r.shape,e):new dw(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function _z(r,e,t,n){let o=e,s=r.shape.length,a=y.parseAxisParam(o,r.shape),i=a,u=C.getAxesPermutation(i,s),l=u!=null,p=r;l&&(p=kl(r,u,n),i=C.getInnerMostAxes(i.length,s)),C.assertAxesAreInnerMostDims("sum",i,s);let[m,c]=C.computeOutAndReduceShapes(p.shape,i),d=m;t&&(d=C.expandShapeToKeepDim(m,a));let f=y.sizeFromShape(c),g=y.sizeFromShape(r.shape)/f,b=ue({inputs:{x:p},attrs:{shape:[g,f]},backend:n}),x=Qi(r.dtype),T=Qn(b,x,"sum",n),I=ue({inputs:{x:T},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(T),l&&n.disposeIntermediateTensorInfo(p),I}function Fp(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return _z(o,s,a,t)}var Lz={kernelName:Wo,backendName:"webgl",kernelFunc:Fp};function Vt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];let l;if(a.shouldExecuteOnCPU([o])){let m=a.texData.get(o.dataId).values,c=Pp(m,o.shape,o.dtype,s,u);l=a.makeTensorInfo(u,o.dtype);let d=a.texData.get(l.dataId);d.values=c}else l=kl(o,s,a);return l}var $z={kernelName:Nn,backendName:"webgl",kernelFunc:Vt};var hw=1e3;function Mp({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,m=t?r.shape[l-2]:r.shape[l-1],c=n?e.shape[p-1]:e.shape[p-2],d=t?r.shape[l-1]:r.shape[l-2],f=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),b=y.sizeFromShape(h),x=y.sizeFromShape(g),I=Dr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[b,m,d]:[b,d,m],w=n?[x,f,c]:[x,c,f],R=ue({inputs:{x:r},backend:o,attrs:{shape:k}}),F=ue({inputs:{x:e},backend:o,attrs:{shape:w}}),M=[R,F],L=Math.max(b,x),z=t?R.shape[1]:R.shape[2],W=s!=null,V=a!=null,j=u==="leakyrelu",q=u!=null?bu(u,!0):null,Y=W||V||j||q!=null,J;if((d===1||f===1)&&z>hw&&Y===!1){let te=R,se=F;t&&(te=Vt({inputs:{x:R},backend:o,attrs:{perm:[0,2,1]}}),M.push(te)),n&&(se=Vt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),M.push(se));let ae=f!==1,pe=f===1,ie=te;ae&&(ie=ue({inputs:{x:te},backend:o,attrs:{shape:[L,z,1]}}),M.push(ie));let be=f===1?2:1,fe=se;pe&&(fe=ue({inputs:{x:se},backend:o,attrs:{shape:[L,1,z]}}),M.push(fe));let Ie=rg({inputs:{a:ie,b:fe},backend:o});J=Fp({inputs:{x:Ie},backend:o,attrs:{axis:be,keepDims:!0}}),M.push(Ie)}else{let te=_t(r.dtype,e.dtype),se=new tg(k,w,[L,d,f],t,n,W,q,V,j),ae=[R,F];if(s!=null&&ae.push(s),V&&ae.push(a),j){let pe=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));ae.push(pe),M.push(pe)}J=o.runWebGLProgram(se,ae,te)}let H=ue({inputs:{x:J},backend:o,attrs:{shape:I}});M.push(J);for(let te of M)o.disposeIntermediateTensorInfo(te);return H}function fae(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return Mp({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:p})}var Bz={kernelName:ks,backendName:"webgl",kernelFunc:fae};var Oz="return abs(x);";function hae(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=iT(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new js(n.shape,Oz):o=new kn(n.shape,Oz),t.runWebGLProgram(o,[n],n.dtype)}var zz={kernelName:is,backendName:"webgl",kernelFunc:hae};var gae=Tr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,bae=Ae({opSnippet:gae}),Gz={kernelName:Di,backendName:"webgl",kernelFunc:bae};var yae=Tr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,xae=Ae({opSnippet:yae}),Uz={kernelName:Pi,backendName:"webgl",kernelFunc:xae};var Wz="return a + b;",Tae=dt({opSnippet:Wz,packedOpSnippet:Wz,supportsComplex:!0,cpuKernelImpl:SO}),Kz={kernelName:An,backendName:"webgl",kernelFunc:Tae};var gw=class{constructor(e,t){this.outputShape=[];this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var bw=class{constructor(e,t){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function dT(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return sr({inputs:{x:n[0]},backend:t});if(n.length>B().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=dT({inputs:n.slice(0,u),backend:t}),p=dT({inputs:n.slice(u),backend:t});return dT({inputs:[l,p],backend:t})}let o=n.map(u=>u.dtype).reduce((u,l)=>_t(u,l)),s=n.map(u=>u.shape),i=B().getBool("WEBGL_PACK")?new bw(n[0].shape,s):new gw(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var Vz={kernelName:ro,backendName:"webgl",kernelFunc:dT};function Iae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,i)),C.assertAxesAreInnerMostDims("all",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=y.sizeFromShape(d),h=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=Qn(h,h.dtype,"all",t),b;if(a){let x=C.expandShapeToKeepDim(c,u);b=ue({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=ue({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(m),b}var Hz={kernelName:Ri,backendName:"webgl",kernelFunc:Iae};function Cae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,i)),C.assertAxesAreInnerMostDims("any",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=y.sizeFromShape(d),h=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=Qn(h,h.dtype,"any",t),b;if(a){let x=C.expandShapeToKeepDim(c,u);b=ue({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=ue({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(m),b}var qz={kernelName:Fi,backendName:"webgl",kernelFunc:Cae};var yw=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var xw=class{constructor(e,t,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;y.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,u=i.length,l=Ve(u),p=or("coords",u),m,c;if(a===1){c=u+1;let F=Ve(c);m=`
        ${F} sourceLocR = ${F}(${p.join()}, 0);
        ++${p[u-1]};
        ${F} sourceLocG = ${F}(${p.join()}, 0);
        ++${p[u-2]};
        ${F} sourceLocA = ${F}(${p.join()}, 0);
        --${p[u-1]};
        ${F} sourceLocB = ${F}(${p.join()}, 0);
        --${p[u-2]};`}else c=u,m=`
        ${l} sourceLocR = coords;
        ++${p[u-1]};
        ${l} sourceLocG = coords;
        ++${p[u-2]};
        ${l} sourceLocA = coords;
        --${p[u-1]};
        ${l} sourceLocB = coords;
        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(F=>"int "+F),g=or("sourceLocR",c-1).concat("inIdx.r"),b=or("sourceLocG",c-1).concat("inIdx.g"),x=or("sourceLocB",c-1).concat("inIdx.b"),T=or("sourceLocA",c-1).concat("inIdx.a"),I=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${T.join()})));`,w=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,R=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${R}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${p[u-2]} < ${i[u-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function jz(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=C.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},u=new yw(i,t,n==null),l=[e];n!=null&&l.push(n);let p=r.runWebGLProgram(u,l,"int32");if(p.shape[1]===1)return p;let m=jz(r,e,t,p);return r.disposeIntermediateTensorInfo(p),m}function Xz(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=C.computeOptimalWindowSize(s),i=new xw(o,a,t,n==null),u=n==null?[e]:[e,n],l=r.runWebGLProgram(i,u,"int32");if(l.shape.length===e.shape.length){let p=Xz(r,e,t,l);return r.disposeIntermediateTensorInfo(l),p}return l}function fT(r,e,t,n){let o=[t];if(C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!B().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],a=r.texData.get(e.dataId),i=a!==null&&a.isPacked,u=e;i&&(u=r.unpackTensor(e),s.push(u));let[l,p]=C.computeOutAndReduceShapes(u.shape,o),m=y.sizeFromShape(p),c=ue({inputs:{x:u},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=jz(r,c,n);s.push(d);let f=ue({inputs:{x:d},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return Xz(r,e,n)}function kae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Vt({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=fT(t,u,a[0],"max");return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}var Yz={kernelName:no,backendName:"webgl",kernelFunc:kae};function Sae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Vt({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=fT(t,u,a[0],"min");return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}var Zz={kernelName:si,backendName:"webgl",kernelFunc:Sae};var vae=Tr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Aae=Ae({opSnippet:vae}),Qz={kernelName:Mi,backendName:"webgl",kernelFunc:Aae};var wae=Tr+"return log(x + sqrt(x * x + 1.0));",Nae=Ae({opSnippet:wae}),Jz={kernelName:Ei,backendName:"webgl",kernelFunc:Nae};var Dae=Tr+`
  return atan(x);
`,Pae=Ae({opSnippet:Dae}),eG={kernelName:_i,backendName:"webgl",kernelFunc:Pae};var Rae=Dz+`
  return atan(a, b);
`,Fae=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Pz+`
  return result;
`,Mae=dt({opSnippet:Rae,packedOpSnippet:Fae}),tG={kernelName:$i,backendName:"webgl",kernelFunc:Mae};var Eae=Tr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,_ae=Ae({opSnippet:Eae}),rG={kernelName:Li,backendName:"webgl",kernelFunc:_ae};var vi=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,p=e.dilationWidth,m=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,x="0.0";if(h||(x="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:b:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let T="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / count");let k=Math.floor(a/4)*4,w=a%4,R=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${R}
          }

          int xC = xCCorner + ${k};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${R}
          }
        }
        setOutput(${I});
      }
    `}},Ep=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,l=e.strideWidth,p=e.dilationDepth,m=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,b=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;let T=t==="avg",I="0.0";if(T||(I="-1.0 / 1e-20"),n){let L=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${L} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let R=Math.floor(a/4)*4,F=a%4,M=`
      if (${T}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${b}, ${x});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${R}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${M}
            }

            int xC = xCCorner + ${R};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${M}
            }
          }
          setOutput(${w});
        }
      }
    `}};function Lae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;qa(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))return sr({inputs:{x:o},backend:t});let m=new vi(p,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var nG={kernelName:oo,backendName:"webgl",kernelFunc:Lae};function $ae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n,p=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,p,i,u,l),c=new Ep(m,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var oG={kernelName:wu,backendName:"webgl",kernelFunc:$ae};var Tw=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,p=u-1-e.padInfo.top,m=l-1-e.padInfo.left,c=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Iw=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,m=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=m-1-e.padInfo.front,h=c-1-e.padInfo.top,g=d-1-e.padInfo.left,b=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Bae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,l,p),d=new Iw(c);return t.runWebGLProgram(d,[o],a.dtype)}var sG={kernelName:mm,backendName:"webgl",kernelFunc:Bae};function Oae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;qa([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=C.computePool2DInfo(a.shape,i,u,1,l),m=new Tw(p);return t.runWebGLProgram(m,[o],a.dtype)}var aG={kernelName:pm,backendName:"webgl",kernelFunc:Oae};function zae(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Mp({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var iG={kernelName:so,backendName:"webgl",kernelFunc:zae};var Cw=class{constructor(e,t,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var kw=class{constructor(e,t,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Gae=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;y.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);let l=[n,o,s],p=null;a!=null&&(p=a.shape,l.push(a));let m=null;i!=null&&(m=i.shape,l.push(i));let c=B().getBool("WEBGL_PACK_NORMALIZATION")?new kw(n.shape,o.shape,s.shape,p,m,u):new Cw(n.shape,o.shape,s.shape,p,m,u);return e.runWebGLProgram(c,l,l[0].dtype)},uG={kernelName:xo,backendName:"webgl",kernelFunc:Gae};var vw=class{constructor(e){this.variableNames=["source"];this.outputShape=e,this.rank=e.length;let t=Ve(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Uae(this.rank),o,s=e.map((a,i)=>`sourceLoc.${Sw[i]} = start[${i}] + coords.${Sw[i]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},Sw=["x","y","z","w","u","v"];function Uae(r){if(r===1)return"sourceLoc";if(r<=6)return Sw.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Aw=class{constructor(e){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Ve(this.rank),n=or("coords",this.rank),o=or("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,m)=>`start[${m}]`).join()});`:e.map((p,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}};function Wae(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=Tt.computeFlatOffset(e,y.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,u+1),s}function Ya(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,u]=Tt.parseSliceParams(o,s,a);if(Tt.assertParamsValid(o,i,u),y.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.texData.get(o.dataId),c=ZO(m.values,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,c)}let{isPacked:l}=t.texData.get(o.dataId),p=Tt.isSliceContinous(o.shape,i,u);if(l||!p){let m=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Aw(u):new vw(u),c=[i];return t.runWebGLProgram(m,[o],o.dtype,c)}return t.uploadToGPU(o.dataId),Wae(o,i,u,t)}var lG={kernelName:bs,backendName:"webgl",kernelFunc:Ya};var Kae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((x,T)=>x*T),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=[],f=ue({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Vt({inputs:{x:f},backend:t,attrs:{perm:l}}),g=ue({inputs:{x:h},backend:t,attrs:{shape:p}}),b=Ya({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(x=>t.disposeIntermediateTensorInfo(x)),b},pG={kernelName:us,backendName:"webgl",kernelFunc:Kae};function Vae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),u=t.readSync(s.dataId),l=aT(i,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}var mG={kernelName:cm,backendName:"webgl",kernelFunc:Vae};function Hae(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),a=t.readSync(o.dataId),i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var cG={kernelName:dm,backendName:"webgl",kernelFunc:Hae};var qae="return float(a != b);",ww=dt({opSnippet:qae,cpuKernelImpl:VO,dtype:"bool"}),dG={kernelName:Ia,backendName:"webgl",kernelFunc:ww};function yu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.real},backend:t})}var fG={kernelName:Lu,backendName:"webgl",kernelFunc:yu};var jae="return float(int(x));";function hG(r,e){let t=new kn(r.shape,jae),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function Nw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return sr({inputs:{x:o},backend:t});let a=It(o.shape),i=Nw({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=$n({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=yu({inputs:{input:o},backend:t}),i=Nw({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=sr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return hG(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),u=ww({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var gG={kernelName:Gn,backendName:"webgl",kernelFunc:Nw};var bG="return ceil(x);",Xae=Ae({opSnippet:bG,packedOpSnippet:bG,cpuKernelImpl:AO}),yG={kernelName:ao,backendName:"webgl",kernelFunc:Xae};var Dw=class{constructor(e){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var Pw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Yae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;B().getBool("WEBGL_PACK_CLIP")?i=new Pw(o.shape):i=new Dw(o.shape);let u=[[s],[a]];return t.runWebGLProgram(i,[o],o.dtype,u)}var xG={kernelName:Un,backendName:"webgl",kernelFunc:Yae};var Rw=class{constructor(e){this.variableNames=["real","imag"];this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function TG(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function Zae(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new Rw(n.shape),a=[TG(n,o.complexTensorInfos.real),TG(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var IG={kernelName:Du,backendName:"webgl",kernelFunc:Zae};var Fw=class{constructor(e){this.outputShape=[];this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var Mw=class{constructor(e,t){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=C.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=Ve(o),a=or("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let u=new Array(e.length-1);u[0]=e[0][t];for(let h=1;h<u.length;h++)u[h]=u[h-1]+e[h][t];let l=i[t],p=i.slice(-2),m=i.join(),c=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${m}), vec2(${p.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];c+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${hT(i,l,g)}),
            vec2(${hT(p,l,g)}));
        }`}let d=u.length,f=u[u.length-1];c+=`
        return getChannel(
          getT${d}(${hT(i,l,f)}),
          vec2(${hT(p,l,f)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function hT(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function _p(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var CG={kernelName:Mu,backendName:"webgl",kernelFunc:_p};function sd(r,e,t){let n=r[0].dtype;if(n==="complex64"){let m=r.map(g=>yu({inputs:{input:g},backend:t})),c=r.map(g=>_p({inputs:{input:g},backend:t})),d=sd(m,e,t),f=sd(c,e,t),h=$n({inputs:{real:d,imag:f},backend:t});return m.forEach(g=>t.disposeIntermediateTensorInfo(g)),c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),h}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let m=r.map(x=>{let T=y.sizeFromShape(x.shape.slice(e));return ue({inputs:{x},backend:t,attrs:{shape:[-1,T]}})}),c=m.map(x=>({vals:t.readSync(x.dataId),shape:x.shape})),d=C.computeOutShape(m.map(x=>x.shape),1),f=m[0].shape[0]===1,h=wO(c,d,n,f),g=C.computeOutShape(r.map(x=>x.shape),e),b=t.makeTensorInfo(g,n,h);return m.forEach(x=>t.disposeIntermediateTensorInfo(x)),b}let s=B().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>s){let m=[];for(let d=0;d<r.length;d+=s){let f=r.slice(d,d+s);m.push(sd(f,e,t))}let c=sd(m,e,t);for(let d of m)t.disposeIntermediateTensorInfo(d);return c}if(B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let m=new Mw(r.map(c=>c.shape),e);return t.runWebGLProgram(m,r,n)}let{tensors2D:a,outShape:i}=Qae(r,e,t),u=new Fw(a.map(m=>m.shape)),l=t.runWebGLProgram(u,a,n);a.forEach(m=>t.disposeIntermediateTensorInfo(m));let p=ue({inputs:{x:l},attrs:{shape:i},backend:t});return t.disposeIntermediateTensorInfo(l),p}function Qae(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>ue({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function Ew(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(l=>l.shape),s);if(y.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(l=>y.sizeFromShape(l.shape)>0);if(i.length===1)return sr({inputs:{x:i[0]},backend:t});let u=i.map(l=>l.shape);return C.assertParamsConsistent(u,s),sd(i,s,t)}var kG={kernelName:ls,backendName:"webgl",kernelFunc:Ew};var ng=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,p=e.dilationHeight,m=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",b=g?1:2,x=g?2:3,T=g?3:1,I="",k="";n&&(o?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:I=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${T}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${k}
        setOutput(result);
      }
    `}},_w=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,m=e.filterDepth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var og=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=wt(this.outputShape.length);let a=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,p=e.filterWidth,m=p,c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<p;g++)c+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;c+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<p;g++)c+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(m+1)/2;g++){let b=g*2;if(c+=`
           xC = xCCorner + ${b*u};
           `,i===1){if(b<p&&(a%2===1?(c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,u===1&&b>0?c+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<p)){let x=a%2===0?y.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,u>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:c+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):x===1?c+=`
                     xC${b+1} = xTexelC${b};
                     `:c+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<p&&(a%2===1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<p&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<p&&(c+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<p&&(c+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<p&&(c+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   `,c+=`
     }
   `,c+=`
     }
   `;let d="",f="";n&&(o?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:s?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,f="result = activation(result);");let h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${h}
         ${f}
         setOutput(result);
       }
     `}};var Lw=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=e,this.enableShapeUniforms=wt(this.outputShape.length);let{dataFormat:n}=t,o=Qt(),s=n==="channelsLast",a=s?1:2,i=s?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let p=0;p<=1;p++)for(let m=0;m<=1;m++)l+=`
          blockIndex = rc.z + ${m};
          pos = rc.y + ${p};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+m}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+m}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function gT(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function bT({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=r.shape,l=n.texData.get(r.dataId),p=t.inChannels,m=u[0]*u[1]*u[2],c=t.outChannels,d=t.dataFormat==="channelsLast",f=!1,h=!1,g,b=[];if(s!=null){let I=gT(s.shape,d);I!=null&&(s=ue({inputs:{x:s},backend:n,attrs:{shape:I}}),b.push(s))}if(o!=null){let I=gT(o.shape,d);I!=null&&(o=ue({inputs:{x:o},backend:n,attrs:{shape:I}}),b.push(o))}if(!((m===1||c===1)&&p>hw)&&l.isPacked&&d&&l.texture!=null&&u[2]%2!==0&&y.arraysEqual(l.shape.slice(-3),u.slice(-3))){let I=u[0]*u[1]*(u[2]+1),k={dataId:r.dataId,shape:[1,I,t.inChannels],dtype:r.dtype},w=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,y.assert(Il(l.shape,k.shape),()=>`packed reshape ${l.shape} to ${k.shape} isn't free`);let R=ue({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});b.push(R);let F=Mp({a:k,b:R,backend:n,transposeA:f,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),M=n.texData.get(F.dataId);y.assert(M.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=w,M.shape=t.outShape,g=sr({inputs:{x:F},backend:n}),g.shape=t.outShape,b.push(F)}else{let I=t.outHeight*t.outWidth,k=ue({inputs:{x:r},backend:n,attrs:{shape:d?[t.batchSize,I,t.inChannels]:[t.batchSize,t.inChannels,I]}}),w=ue({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),R=Mp({a:d?k:w,b:d?w:k,transposeA:!d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ue({inputs:{x:R},backend:n,attrs:{shape:t.outShape}}),b.push(k),b.push(w),b.push(R)}for(let I of b)n.disposeIntermediateTensorInfo(I);return g}function yT({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:u,filterHeight:l,inChannels:p,outWidth:m,outHeight:c,dataFormat:d}=t,f=d==="channelsLast",h=u*l*p,g=c*m,b=[t.batchSize,h,g],x=!0,T=!1,I=[];if(s!=null){let H=gT(s.shape,f);H!=null&&(s=ue({inputs:{x:s},backend:n,attrs:{shape:H}}),I.push(s))}if(o!=null){let H=gT(o.shape,f);H!=null&&(o=ue({inputs:{x:o},backend:n,attrs:{shape:H}}),I.push(o))}let k=ue({inputs:{x:e},backend:n,attrs:{shape:[1,h,y.sizeFromShape(e.shape)/h]}});I.push(k);let w=new Lw(b,t),R=[r.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],F=n.runWebGLProgram(w,[r],"float32",R),M=ue({inputs:{x:F},backend:n,attrs:{shape:b}});I.push(F),I.push(M);let L=o!=null,z=s!=null,W=i==="leakyrelu",V=i?bu(i,!0):null,j=new tg(f?M.shape:k.shape,f?k.shape:M.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],x,T,L,V,z,W),q=f?[M,k]:[k,M];if(o&&q.push(o),z&&q.push(s),W){let H=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));q.push(H),I.push(H)}let Y=n.runWebGLProgram(j,q,"float32"),J=ue({inputs:{x:Y},backend:n,attrs:{shape:t.outShape}});I.push(Y);for(let H of I)n.disposeIntermediateTensorInfo(H);return J}function Jae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=bT({x:o,filter:s,convInfo:c,backend:t});else if(c.strideWidth<=2&&m==="channelsLast"&&B().getBool("WEBGL_EXP_CONV")){let h=new og(c),g=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];d=t.runWebGLProgram(h,[o,s],"float32",g)}else if(B().getBool("WEBGL_CONV_IM2COL"))d=yT({x:o,filter:s,convInfo:c,backend:t});else{let h=new ng(c);d=t.runWebGLProgram(h,[o,s],"float32")}let f=ue({inputs:{x:d},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(d),f}var SG={kernelName:io,backendName:"webgl",kernelFunc:Jae};var $w=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Bw=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=n-1-e.padInfo.left,l=a?1:2,p=a?2:3,m=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ow=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},zw=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,l=n-1-e.padInfo.top,p=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function eie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,p,a,1,i,l,!1,m),d=new $w(c);return t.runWebGLProgram(d,[o,s],"float32")}var vG={kernelName:fm,backendName:"webgl",kernelFunc:eie};function tie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(l),c=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,m),d=new Bw(c);return t.runWebGLProgram(d,[o,s],"float32")}var AG={kernelName:uo,backendName:"webgl",kernelFunc:tie};function rie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n,l=C.computeConv3DInfo(o.shape,s.shape,a,u,i),p=new _w(l);return t.runWebGLProgram(p,[o,s],"float32")}var wG={kernelName:Pu,backendName:"webgl",kernelFunc:rie};function nie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:u}=n,l=C.computeConv3DInfo(o.shape,u,a,1,i),p=new Ow(l);return t.runWebGLProgram(p,[o,s],"float32")}var NG={kernelName:hm,backendName:"webgl",kernelFunc:nie};function oie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:u}=n,l=C.computeConv3DInfo(u,s.shape,i,1,a),p=new zw(l);return t.runWebGLProgram(p,[o,s],"float32")}var DG={kernelName:gm,backendName:"webgl",kernelFunc:oie};var sie=Ys+`
  return cos(x);
`,aie=Ae({opSnippet:sie}),PG={kernelName:lo,backendName:"webgl",kernelFunc:aie};var iie=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,uie=Ae({opSnippet:iie}),RG={kernelName:po,backendName:"webgl",kernelFunc:uie};var Gw=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,u,l]=e,[p]=t,[m,c]=n;this.outputShape=[p,m,c,l];let d=o==="bilinear"?1:0,[f,h]=[`${i-1}.0`,`${u-1}.0`],[g,b,x]=m>1?[`${(i-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[T,I,k]=c>1?[`${(u-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${T});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${I};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var lie=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,p=new Gw(o.shape,s.shape,i,u,l);return t.runWebGLProgram(p,[o,s,a],"float32")},FG={kernelName:pa,backendName:"webgl",kernelFunc:lie};var xT=class{constructor(e,t,n,o){this.op=e;this.outputShape=t;this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${MG(s,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1],l="",p="";n?(l=o?`end != ${u-1}`:"end != 0",p=o?"end + 1":"end - 1"):(l=o?`end + pow2 < ${u}`:"end >= pow2",p=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ve(s)} coords = getOutputCoords();
        int end = ${EG(s,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${p};
          ${EG(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${MG(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function MG(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function EG(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function TT(r,e,t,n,o,s){let a=e.shape.length,i=C.getAxesPermutation([n],a),u=e;i!=null&&(u=Vt({inputs:{x:e},backend:t,attrs:{perm:i}}));let l=C.getInnerMostAxes(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let p=u.shape[l],m=sr({inputs:{x:u},backend:t});for(let c=0;c<=Math.ceil(Math.log2(p))-1;c++){let d=new xT(r,u.shape,!1,s),f=[[c]],h=m;m=t.runWebGLProgram(d,[m],m.dtype,f),t.disposeIntermediateTensorInfo(h)}if(o){let c=new xT(r,u.shape,o,s),d=m;m=t.runWebGLProgram(c,[m],m.dtype),t.disposeIntermediateTensorInfo(d)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Vt({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(u),d}return m}function mie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return TT("*",o,t,s,a,i)}var _G={kernelName:la,backendName:"webgl",kernelFunc:mie};function cie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return TT("+",o,t,s,a,i)}var LG={kernelName:mo,backendName:"webgl",kernelFunc:cie};function die(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=aT(u,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=vO(u,l,a,i);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var $G={kernelName:bm,backendName:"webgl",kernelFunc:die};var Uw=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function fie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=new Uw(f,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var BG={kernelName:ma,backendName:"webgl",kernelFunc:fie};var sg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=wt(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels,l="",p="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${p}
        setOutput(result);
      }
    `}};var ag=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=wt(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,p=e.filterHeight,m=e.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<m;b++)d+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;d+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let b=0;b<m;b++)d+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(c+1)/2;b++){let x=b*2;if(d+=`
          xC = xCCorner + ${x*l};
          `,u===1){if(x<m&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,l===1&&x>0?d+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<m)){let T=i%2===0?y.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${T};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,l>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:d+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):T===1?d+=`
                    xC${x+1} = xTexelC${x};
                    `:d+=`
                    xCOffset = xC + ${T};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<m&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<m&&(d+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<m&&(d+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<m&&(d+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function hie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let m=C.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!0),c;B().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new ag(m):c=new sg(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return t.runWebGLProgram(c,[o,s],"float32",d)}var OG={kernelName:co,backendName:"webgl",kernelFunc:hie};var Ww=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Kw=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function gie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n,m=C.computeConv2DInfo(o.shape,p,a,i,u,l,!0),c=new Ww(m);return t.runWebGLProgram(c,[o,s],"float32")}var zG={kernelName:ym,backendName:"webgl",kernelFunc:gie};function bie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n,m=C.computeConv2DInfo(p,s.shape,a,i,u,l,!0),c=new Kw(m);return t.runWebGLProgram(c,[o,s],"float32")}var GG={kernelName:xm,backendName:"webgl",kernelFunc:bie};var Vw=class{constructor(e){this.variableNames=["X"];this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function yie(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=ue({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new Vw(s),u=t.runWebGLProgram(i,[a],a.dtype),l=ue({inputs:{x:u},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var UG={kernelName:Tm,backendName:"webgl",kernelFunc:yie};var Hw=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:l,dilationWidth:p}=e,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function xie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n,l=C.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",u),p,m=new Hw(l);p=t.runWebGLProgram(m,[o,s],"float32");let c=ue({inputs:{x:p},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(p),c}var WG={kernelName:Ru,backendName:"webgl",kernelFunc:xie};function Tie(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:b,expandDims:x}=C.getEinsumPermutation(d,u[g]),T;C.isIdentityPermutation(b)?T=s[g]:(T=Vt({inputs:{x:s[g]},backend:t,attrs:{perm:b}}),f.push(T));let I=T.shape.slice();for(let k=0;k<x.length;++k)I.splice(x[k],0,1);y.arraysEqual(T.shape,I)||(T=ue({inputs:{x:T},backend:t,attrs:{shape:I}}),f.push(T)),c===null?c=T:(c=rg({inputs:{a:T,b:c},backend:t}),f.push(c))}h<m-1&&(l[h]>=0&&(c=Fp({inputs:{x:c},backend:t,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var KG={kernelName:Fu,backendName:"webgl",kernelFunc:Tie};var Iie="return (x >= 0.0) ? x : (exp(x) - 1.0);",Cie=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,kie=Ae({opSnippet:Iie,packedOpSnippet:Cie}),VG={kernelName:ho,backendName:"webgl",kernelFunc:kie};var Sie="return (b >= 1.0) ? a : a * (b + 1.0);",vie=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Aie=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xa(vie,n.shape,o.shape):new Xs(Sie,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},HG={kernelName:Im,backendName:"webgl",kernelFunc:Aie};var wie=`
  return vec4(equal(a, b));
`,Nie="return float(a == b);",Die=dt({opSnippet:Nie,packedOpSnippet:wie,dtype:"bool",cpuKernelImpl:NO}),qG={kernelName:ca,backendName:"webgl",kernelFunc:Die};var Pie=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Rie=Ae({opSnippet:Pie}),jG={kernelName:Bi,backendName:"webgl",kernelFunc:Rie};var Fie=Ys+`
  return exp(x);
`,Mie=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qw=Ae({opSnippet:Fie,packedOpSnippet:Mie,cpuKernelImpl:DO,dtype:"float32"}),XG={kernelName:go,backendName:"webgl",kernelFunc:qw};function IT(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),ue({inputs:{x:s},backend:n,attrs:{shape:i}})}var YG={kernelName:ps,backendName:"webgl",kernelFunc:IT};var ZG="return exp(x) - 1.0;",Eie=Ae({opSnippet:ZG,packedOpSnippet:ZG,cpuKernelImpl:PO}),QG={kernelName:da,backendName:"webgl",kernelFunc:Eie};var CT=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function kT(r,e,t){let n=t.texData.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ue({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),u=i.shape,l=new CT("real",u,e),p=new CT("imag",u,e),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],c=t.runWebGLProgram(l,m,"float32"),d=t.runWebGLProgram(p,m,"float32"),f=$n({inputs:{real:c,imag:d},backend:t});t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d);let h=ue({inputs:{x:f},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),h}function _ie(r){let{inputs:e,backend:t}=r,{input:n}=e;return kT(n,!1,t)}var JG={kernelName:Cm,backendName:"webgl",kernelFunc:_ie};var jw=class{constructor(e,t){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function xu(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new jw(n,o),i=[[o]];return e.runWebGLProgram(a,[],s,i)}}var e3={kernelName:ai,backendName:"webgl",kernelFunc:xu};var Xw=class{constructor(e){this.variableNames=["Image"];this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var t3={kernelName:fa,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new Xw(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var r3="return floor(x);",Lie=Ae({opSnippet:r3,packedOpSnippet:r3,cpuKernelImpl:RO}),n3={kernelName:bo,backendName:"webgl",kernelFunc:Lie};var $ie=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Bie=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Oie=dt({opSnippet:$ie,packedOpSnippet:Bie,dtype:"int32"}),o3={kernelName:yo,backendName:"webgl",kernelFunc:Oie};var Yw=class{constructor(e){this.variableNames=["A"];let t=Qt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var Zw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let t=Qt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var s3={kernelName:_l,backendName:"webgl",kernelFunc:zie},ad,Qw=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function zie(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[u,l]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[l,u],m=[l,u,s];if(i||a){let h=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ad==null||h!==Qw)&&(Qw=h,ad=document.createElement("canvas").getContext("2d",{willReadFrequently:Qw})),ad.canvas.width=u,ad.canvas.height=l,ad.drawImage(o,0,0,u,l),o=ad.canvas}let c=t.makeTensorInfo(p,"int32");t.texData.get(c.dataId).usage=2,t.gpgpu.uploadPixelDataToTexture(t.getTexture(c.dataId),o);let d=B().getBool("WEBGL_PACK")?new Zw(m):new Yw(m),f=t.runWebGLProgram(d,[c],"int32");return t.disposeData(c.dataId),f}function Gie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(p),g=C.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h),b,x=[],T=a!=null,I=i!=null,k=d==="leakyrelu",w=()=>{let F=[o,s],M=(L,z)=>{if(z==="NCHW"&&L.shape.length===1&&L.shape[0]!==1){let W=ue({inputs:{x:L},backend:t,attrs:{shape:[L.shape[0],1,1]}});return x.push(W),W}return L};if(T&&F.push(M(a,p)),I&&F.push(M(i,p)),k){let L=t.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));F.push(L),x.push(L)}return F};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=bT({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&h==="channelsLast"&&B().getBool("WEBGL_EXP_CONV")){let F=d?bu(d,!0):null,M=new og(g,T,F,I,k),L=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],z=w();b=t.runWebGLProgram(M,z,"float32",L)}else if(B().getBool("WEBGL_CONV_IM2COL"))b=yT({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{let F=d?bu(d,!1):null,M=new ng(g,T,F,I,k),L=w();b=t.runWebGLProgram(M,L,"float32")}let R=ue({inputs:{x:b},backend:t,attrs:{shape:g.outShape}});return x.push(b),x.forEach(F=>t.disposeIntermediateTensorInfo(F)),R}var a3={kernelName:Ss,backendName:"webgl",kernelFunc:Gie};function Uie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=p;h==null&&(h=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=C.computeConv2DInfo(o.shape,s.shape,u,h,l,m,!0),b=B().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=c?bu(c,b):null,T=[o,s],I=a!=null,k=i!=null,w=c==="leakyrelu";if(I&&T.push(a),k&&T.push(i),w){let L=t.makeTensorInfo([],"float32",y.createScalarValue(d,"float32"));T.push(L),f.push(L)}let R;b?R=new ag(g,I,x,k,w):R=new sg(g,I,x,k,w);let F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],M=t.runWebGLProgram(R,T,"float32",F);return f.forEach(L=>t.disposeIntermediateTensorInfo(L)),M}var i3={kernelName:vs,backendName:"webgl",kernelFunc:Uie};var Jw=class{constructor(e,t,n,o){this.sliceDim=e;this.strides=t;this.paramsShape=o;this.variableNames=["x","indices"];this.outputShape=n;let s=Ve(t.length),a=Ve(n.length),i=this.sliceDim>1?"strides[j]":"strides",u=Ve(o.length),l=o.length>1?"paramsShape[j]":"paramsShape";this.userCode=`
        ${s} strides = ${s}(${this.strides});
        ${u} paramsShape = ${u}(${this.paramsShape});
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            out_of_bounds = out_of_bounds || index < 0;
            out_of_bounds = out_of_bounds || index >= ${l};
            flattenIndex += index * ${i};
          }
          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function Wie(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[u,l,p,m]=C.prepareAndValidate(n,o),c=ue({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),d=ue({inputs:{x:n},backend:t,attrs:{shape:[y.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let b=t.readSync(o.dataId),x=t.bufferSync(n),T=FO(b,x,n.dtype,l,a,p,m,n.shape,i);return t.makeTensorInfo(u,n.dtype,T.values)}let f=new Jw(a,m,[l,p],n.shape),h=t.runWebGLProgram(f,[d,c],d.dtype),g=ue({inputs:{x:h},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var u3={kernelName:ha,backendName:"webgl",kernelFunc:Wie};var eN=class{constructor(e,t){this.variableNames=["A","indices"];this.outputShape=t,this.rank=t.length;let n=Ve(this.rank),o=Kie(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function Kie(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${t[o]}`);return n.join()}function tN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0];if(B().get("DEBUG")){let x=t.readSync(s.dataId),T=o.shape[u];for(let I=0;I<x.length;++I){let k=x[I];y.assert(k<=T-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${T-1}]`)}}let l=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=y.sizeFromShape(s.shape),m=[],c=ue({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=ue({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let x=t.bufferSync(d),T=t.bufferSync(c),I=MO(T,x,f);return m.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(l.outputShape,I.dtype,I.values)}let h=new eN(c.shape,f),g=t.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let b=ue({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return m.forEach(x=>t.disposeIntermediateTensorInfo(x)),b}var l3={kernelName:ms,backendName:"webgl",kernelFunc:tN};var Vie="return float(a > b);",Hie=`
  return vec4(greaterThan(a, b));
`,qie=dt({opSnippet:Vie,packedOpSnippet:Hie,cpuKernelImpl:EO,dtype:"bool"}),p3={kernelName:ga,backendName:"webgl",kernelFunc:qie};var jie="return float(a >= b);",Xie=`
  return vec4(greaterThanEqual(a, b));
`,Yie=dt({opSnippet:jie,packedOpSnippet:Xie,dtype:"bool",cpuKernelImpl:_O}),m3={kernelName:To,backendName:"webgl",kernelFunc:Yie};function Zie(r){let{inputs:e,backend:t}=r,{input:n}=e;return kT(n,!0,t)}var c3={kernelName:km,backendName:"webgl",kernelFunc:Zie};var Qie="return float(!isnan(x) && !isinf(x));",Jie=Ae({opSnippet:Qie,dtype:"bool"}),d3={kernelName:Oi,backendName:"webgl",kernelFunc:Jie};var eue="return float(isinf(x));",tue=Ae({opSnippet:eue,dtype:"bool"}),f3={kernelName:zi,backendName:"webgl",kernelFunc:tue};var rue="return float(isnan(x));",nue=Ae({opSnippet:rue,dtype:"bool"}),h3={kernelName:Gi,backendName:"webgl",kernelFunc:nue};var oue="return float(a < b);",sue=`
  return vec4(lessThan(a, b));
`,aue=dt({opSnippet:oue,packedOpSnippet:sue,cpuKernelImpl:LO,dtype:"bool"}),g3={kernelName:ba,backendName:"webgl",kernelFunc:aue};var iue="return float(a <= b);",uue=`
  return vec4(lessThanEqual(a, b));
`,lue=dt({opSnippet:iue,packedOpSnippet:uue,cpuKernelImpl:$O,dtype:"bool"}),b3={kernelName:ya,backendName:"webgl",kernelFunc:lue};function pue(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=BO(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var y3={kernelName:Sm,backendName:"webgl",kernelFunc:pue};var mue=Ys+`
  return x < 0.0 ? 0./0. : log(x);
`,cue=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,due=Ae({opSnippet:mue,packedOpSnippet:cue,cpuKernelImpl:OO}),x3={kernelName:Co,backendName:"webgl",kernelFunc:due};var fue=Ys+`
  return log(1.0 + x);
`,hue=Ae({opSnippet:fue}),T3={kernelName:Ui,backendName:"webgl",kernelFunc:hue};var gue="return float(a >= 1.0 && b >= 1.0);",bue=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,yue=dt({opSnippet:gue,packedOpSnippet:bue,dtype:"bool"}),I3={kernelName:xa,backendName:"webgl",kernelFunc:yue};var xue="return float(!(x >= 1.0));",Tue=Ae({opSnippet:xue}),C3={kernelName:Ta,backendName:"webgl",kernelFunc:Tue};var Iue="return float(a >= 1.0 || b >= 1.0);",Cue=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,kue=dt({opSnippet:Iue,packedOpSnippet:Cue,dtype:"bool"}),k3={kernelName:Wi,backendName:"webgl",kernelFunc:kue};var rN=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var nN=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var Sue=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:u}=n,l=B().getBool("WEBGL_PACK_NORMALIZATION")?new nN(o.shape,s,a,i,u):new rN(o.shape,s,a,i,u);return t.runWebGLProgram(l,[o],o.dtype)},S3={kernelName:Eu,backendName:"webgl",kernelFunc:Sue};var oN=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var vue=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:p}=n,m=new oN(o.shape,i,u,l,p);return t.runWebGLProgram(m,[o,s,a],o.dtype)},v3={kernelName:vm,backendName:"webgl",kernelFunc:vue};function A3(r,e,t,n){let o=y.sizeFromShape(e),a=y.sizeFromShape(r.shape)/o,i=ue({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Qn(i,r.dtype,"max",n),l=ue({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}function sN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=p!=null,c=t.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let T=t.texData.get(d.dataId).values,I=new Array(i);for(let R=0;R<I.length;R++)I[R]=o.shape[p[R]];let k=Pp(T,o.shape,o.dtype,p,I);d=t.makeTensorInfo(I,o.dtype);let w=t.texData.get(d.dataId);w.values=k}else d=kl(o,p,t);l=C.getInnerMostAxes(l.length,i)}C.assertAxesAreInnerMostDims("max",l,i);let[f,h]=C.computeOutAndReduceShapes(d.shape,l),g=f;a&&(g=C.expandShapeToKeepDim(f,u));let b;if(c){let T=t.texData.get(d.dataId).values,I=zO(T,y.sizeFromShape(h),g,o.dtype);b=t.makeTensorInfo(g,o.dtype);let k=t.texData.get(b.dataId);k.values=I}else b=A3(d,h,g,t);return m&&t.disposeIntermediateTensorInfo(d),b}var w3={kernelName:ko,backendName:"webgl",kernelFunc:sN};var Aue=pT+`
  return max(a, b);
`,wue=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Cl+`
  return result;
`,Nue=dt({opSnippet:Aue,packedOpSnippet:wue,cpuKernelImpl:GO}),N3={kernelName:So,backendName:"webgl",kernelFunc:Nue};function Due(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;qa(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))return sr({inputs:{x:o},backend:t});let m=new vi(p,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var D3={kernelName:vo,backendName:"webgl",kernelFunc:Due};function Pue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=n,p=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,p,i,l,u),c=new Ep(m,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var P3={kernelName:_u,backendName:"webgl",kernelFunc:Pue};var aN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,u=a-1-e.padInfo.left,l=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},iN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=u-1-e.padInfo.front,c=l-1-e.padInfo.top,d=p-1-e.padInfo.left,f=u*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Rue(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,l,p),d=new Ep(c,"max",!0),f=t.runWebGLProgram(d,[a],a.dtype),h=new iN(c),g=t.runWebGLProgram(h,[o,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}var R3={kernelName:wm,backendName:"webgl",kernelFunc:Rue};function Fue(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;qa([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,l,1,p,m),d=!0,f=new vi(c,"max",d),h=t.runWebGLProgram(f,[i],i.dtype),g=new aN(c),b=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),b}var F3={kernelName:Am,backendName:"webgl",kernelFunc:Fue};function M3(r,e,t,n){let o=new vi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new vi(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var E3={kernelName:Nm,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,u=t;y.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];y.assert(C.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let p=C.computePool2DInfo(n.shape,o,s,l,a),[m,c]=M3(n,i,p,u);return[m,c]}};function _3(r,e,t,n){let o=y.sizeFromShape(e),a=y.sizeFromShape(r.shape)/o,i=ue({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Qn(i,"float32","mean",n),l=ue({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}var L3={kernelName:Ao,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,u=y.parseAxisParam(s,n.shape),l=u,p=C.getAxesPermutation(l,i),m=p!=null,c=a.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let I=a.texData.get(f.dataId).values,k=new Array(i);for(let F=0;F<k.length;F++)k[F]=n.shape[p[F]];let w=Pp(I,n.shape,n.dtype,p,k);f=a.makeTensorInfo(k,n.dtype);let R=a.texData.get(f.dataId);R.values=w}else f=kl(n,p,a);d.push(f),l=C.getInnerMostAxes(l.length,i)}C.assertAxesAreInnerMostDims("sum",l,i);let[h,g]=C.computeOutAndReduceShapes(f.shape,l),b=h;o&&(b=C.expandShapeToKeepDim(h,u));let x=_3(f,g,b,a);for(let T of d)a.disposeIntermediateTensorInfo(T);return x}};function Mue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=y.sizeFromShape(d),h=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=Qn(h,h.dtype,"min",t),b;if(a){let x=C.expandShapeToKeepDim(c,u);b=ue({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=ue({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(m),b}var $3={kernelName:wo,backendName:"webgl",kernelFunc:Mue};var Eue=pT+`
  return min(a, b);
`,_ue=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Cl+`
  return result;
`,Lue=dt({opSnippet:Eue,packedOpSnippet:_ue,cpuKernelImpl:UO}),B3={kernelName:No,backendName:"webgl",kernelFunc:Lue};var uN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=t.map((p,m)=>p[0]+e[m]+p[1]);let o=e.length,s=Ve(o),a=t.map(p=>p[0]).join(","),i=t.map((p,m)=>p[0]+e[m]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var lN=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t.map((f,h)=>f[0]+e[h]+f[1]);let o=e.length,s=Ve(o),a=t.map(f=>f[0]).join(","),i=t.map((f,h)=>f[0]+e[h]).join(","),u=or("rc",o),l=or("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${m});
          ${u[o-1]} += 1;
          if(${p}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var $ue=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lN(n.shape,o,s):new uN(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},O3={kernelName:Do,backendName:"webgl",kernelFunc:$ue};var Bue=`if (b == 0.0) return NAN;
  return mod(a, b);`,Oue=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Cl+`
  return result;
`,zue=dt({opSnippet:Bue,packedOpSnippet:Oue}),z3={kernelName:Ki,backendName:"webgl",kernelFunc:zue};var pN=class{constructor(e,t,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var Gue=`
if (a == b) {
  return 1.0;
};
return a / b;`,Uue=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,mN=dt({opSnippet:Gue,packedOpSnippet:Uue,checkOutOfBounds:!0}),G3={kernelName:fo,backendName:"webgl",kernelFunc:mN};var U3="return a - b;",cN=dt({opSnippet:U3,packedOpSnippet:U3,supportsComplex:!0,cpuKernelImpl:sz}),W3={kernelName:Ho,backendName:"webgl",kernelFunc:cN};function dN(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=sN({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),l=ue({inputs:{x:i},backend:t,attrs:{shape:u}}),p=cN({inputs:{a:o,b:l},backend:t}),m=qw({inputs:{x:p},backend:t}),c=Fp({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=ue({inputs:{x:c},backend:t,attrs:{shape:u}}),f=mN({inputs:{a:m,b:d},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}var K3={kernelName:Ko,backendName:"webgl",kernelFunc:dN};function Wue(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,u=i?o:dN({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),l=u.shape[0],p=u.shape[1],m=new pN(l,p,s),c=[[a]],d=t.runWebGLProgram(m,[u],"int32",c);return i||t.disposeIntermediateTensorInfo(u),d}var V3={kernelName:Dm,backendName:"webgl",kernelFunc:Wue};var Kue=Tr+`
  return -x;
`,Vue=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Hue(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=KO(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new js(n.shape,Vue):o=new kn(n.shape,Kue),t.runWebGLProgram(o,[n],n.dtype)}var H3={kernelName:cs,backendName:"webgl",kernelFunc:Hue};var que=xr.nonMaxSuppressionV3Impl;function jue(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m}=que(l,p,a,i,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var q3={kernelName:Ca,backendName:"webgl",kernelFunc:jue};var Xue=xr.nonMaxSuppressionV4Impl;function Yue(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n,p=t.readSync(o.dataId),m=t.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=Xue(p,m,a,i,u,l);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var j3={kernelName:Vi,backendName:"webgl",kernelFunc:Yue};var Zue=xr.nonMaxSuppressionV5Impl;function Que(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:b}=Zue(p,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var X3={kernelName:ka,backendName:"webgl",kernelFunc:Que};var fN=class{constructor(e,t,n,o){this.variableNames=["indices"];this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var Jue=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,u=y.sizeFromShape(o.shape),l=new fN(u,s,a,i),p=ue({inputs:{x:o},backend:t,attrs:{shape:[u]}}),m=t.runWebGLProgram(l,[p],o.dtype);t.disposeIntermediateTensorInfo(p);let c=[...o.shape,s],d=ue({inputs:{x:m},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(m),d},Y3={kernelName:Sa,backendName:"webgl",kernelFunc:Jue};function ig(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=yu({inputs:{input:n},backend:t}),s=ig({inputs:{x:o},backend:t}),a=_p({inputs:{input:n},backend:t}),i=ig({inputs:{x:a},backend:t}),u=$n({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return xu({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var Z3={kernelName:Is,backendName:"webgl",kernelFunc:ig};function Q3(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=yu({inputs:{input:n},backend:t}),s=Q3({inputs:{x:o},backend:t}),a=_p({inputs:{input:n},backend:t}),i=ig({inputs:{x:a},backend:t}),u=$n({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return xu({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var J3={kernelName:ds,backendName:"webgl",kernelFunc:Q3};function ele(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return IT({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let m=IT({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(m),m}),l=Ew({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var eU={kernelName:fs,backendName:"webgl",kernelFunc:ele};var hN=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((l,p)=>l[0]+e[p]+l[1]);let o=e.length,s=Ve(o),a=t.map(l=>l[0]).join(","),i=t.map((l,p)=>l[0]+e[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var gN=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=Ve(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),u=or("rc",o),l=or("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${p}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${p}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var bN=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(y.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return xu({backend:t,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gN(o.shape,s,a):new hN(o.shape,s,a),u=[[a]];return t.runWebGLProgram(i,[o],o.dtype,u)},tU={kernelName:Ro,backendName:"webgl",kernelFunc:bN};var tle=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,rle=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Cl+`
  return result;
`,nle=dt({opSnippet:tle,packedOpSnippet:rle}),rU={kernelName:Fo,backendName:"webgl",kernelFunc:nle};function ole(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=[],l=y.parseAxisParam(s,o.shape),p=l,m=C.getAxesPermutation(p,i),c=o;m!=null&&(c=Vt({inputs:{x:o},backend:t,attrs:{perm:m}}),p=C.getInnerMostAxes(p.length,i),u.push(c)),C.assertAxesAreInnerMostDims("prod",p,i);let d;if(t.shouldExecuteOnCPU([c])){let f=t.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:b}=HO(c.shape,c.dtype,f,p);d=t.makeTensorInfo(g,b,h)}else{let[f,h]=C.computeOutAndReduceShapes(c.shape,p),g=y.sizeFromShape(h),b=ue({inputs:{x:c},backend:t,attrs:{shape:[-1,g]}}),x=Qi(o.dtype),T=Qn(b,x,"prod",t);d=ue({inputs:{x:T},backend:t,attrs:{shape:f}}),u.push(b),u.push(T)}if(a){u.push(d);let f=C.expandShapeToKeepDim(d.shape,l);d=ue({inputs:{x:d},backend:t,attrs:{shape:f}})}return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var nU={kernelName:Eo,backendName:"webgl",kernelFunc:ole};var yN=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=qO(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},oU={kernelName:ii,backendName:"webgl",kernelFunc:yN};var sle="return 1.0 / x;",ale=Ae({opSnippet:sle}),sU={kernelName:Hi,backendName:"webgl",kernelFunc:ale};var ile=Tr+`
  return (x < 0.0) ? 0.0 : x;
`,ule=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,lle=Ae({opSnippet:ile,packedOpSnippet:ule}),aU={kernelName:_o,backendName:"webgl",kernelFunc:lle};var ple=Tr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,mle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cle=Ae({opSnippet:ple,packedOpSnippet:mle}),iU={kernelName:Bo,backendName:"webgl",kernelFunc:cle};var xN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var TN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function dle(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TN(o.shape,u,l,s,a):new xN(o.shape,u,l,s,a);return t.runWebGLProgram(p,[o],"float32")}var uU={kernelName:$o,backendName:"webgl",kernelFunc:dle};var IN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function fle(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new IN(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var lU={kernelName:Rm,backendName:"webgl",kernelFunc:fle};var CN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var kN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function hle(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new kN(o.shape,u,l,s,a):new CN(o.shape,u,l,s,a);return t.runWebGLProgram(p,[o],o.dtype)}var pU={kernelName:Lo,backendName:"webgl",kernelFunc:hle};var SN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function gle(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new SN(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var mU={kernelName:Pm,backendName:"webgl",kernelFunc:gle};var vN=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,u)=>o(u)).join(","),a=Ve(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var AN=class{constructor(e,t){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=or("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ve(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${a}) {
            result.b = ${p(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return c(f)}function l(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function p(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=e.map((x,T)=>d(T,f)),g=h.join(","),b=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function d(f,h){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${h[f]} - 1`:`${h[f]}`}}};function ble(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return sr({inputs:{x:o},backend:t});let u=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AN(o.shape,i):new vN(o.shape,i);return t.runWebGLProgram(u,[o],o.dtype)}var cU={kernelName:va,backendName:"webgl",kernelFunc:ble};var wN=class{constructor(e,t){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var dU={kernelName:Ma,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=new wN(n.shape,s),[l,p]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[[l,p,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(u,[n],n.dtype,m)}};var yle=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,xle=Ae({opSnippet:yle}),fU={kernelName:Aa,backendName:"webgl",kernelFunc:xle};var Tle="return inversesqrt(x);",Ile=Ae({opSnippet:Tle,cpuKernelImpl:jO}),hU={kernelName:Oo,backendName:"webgl",kernelFunc:Ile};var ug=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let u=Ve(s.length),l=Ve(a.length),p="";n===1?p="i":n===2&&(p="i, j");let m=`getIndices(${p})`,c="";o===1?c="i":o===2&&(c="i, coords[1]");let d=`getUpdates(${c})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Cle(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=[m/l,l];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=ue({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),f=ue({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new ug(u,i,d.shape.length,f.shape.length,p,c),b=t.runWebGLProgram(g,[f,d,h],f.dtype),x=ue({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(h),x}var gU={kernelName:wa,backendName:"webgl",kernelFunc:Cle};var NN=class{constructor(e,t,n,o){this.variableNames=["sortedSequence","values"];this.customUniforms=[{name:"numInputs",type:"int"}];this.outputShape=[e,n];let s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=B().getNumber("WEBGL_VERSION")===2?s:a,u=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function kle(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n,i=new NN(o.shape[0],o.shape[1],s.shape[1],a),u=[[o.shape[1]]];return t.runWebGLProgram(i,[o,s],"int32",u)}var bU={kernelName:Fm,backendName:"webgl",kernelFunc:kle};var DN=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let p=0;p<t.length;p++)l.push(`${i[p]}`),p<e&&u.push(`${i[p]}`);o=u.join(),s=l.join()}let a=Ve(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Sle(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new DN(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],_t(o.dtype,s.dtype))}var yU={kernelName:gs,backendName:"webgl",kernelFunc:Sle};var vle=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Ale=Ae({opSnippet:vle}),xU={kernelName:qi,backendName:"webgl",kernelFunc:Ale};var wle=Ys+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Nle=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Dle=Ae({opSnippet:wle,packedOpSnippet:Nle,cpuKernelImpl:YO}),TU={kernelName:Go,backendName:"webgl",kernelFunc:Dle};var Ple=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Rle=Ae({opSnippet:Ple}),IU={kernelName:ji,backendName:"webgl",kernelFunc:Rle};var Fle=Ys+`
  return sin(x);
`,Mle=Ae({opSnippet:Fle}),CU={kernelName:zo,backendName:"webgl",kernelFunc:Mle};var Ele=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,_le=Ae({opSnippet:Ele}),kU={kernelName:Na,backendName:"webgl",kernelFunc:_le};var Lle=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,$le=Ae({opSnippet:Lle}),SU={kernelName:Xi,backendName:"webgl",kernelFunc:$le};var Ble=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,x)=>b*x),u=[[0,0]];u.push(...a);for(let b=1+s.length;b<o.shape.length;++b)u.push([0,0]);let l=[],p=bN({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(p.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(p.shape,s,i,!1),f=ue({inputs:{x:p},backend:t,attrs:{shape:m}}),h=Vt({inputs:{x:f},backend:t,attrs:{perm:c}}),g=ue({inputs:{x:h},backend:t,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(b=>t.disposeIntermediateTensorInfo(b)),g},vU={kernelName:ys,backendName:"webgl",kernelFunc:Ble};function Ole(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.readSync(n.dataId),u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=t.readSync(a.dataId)[0],[m,c,d,f,h]=QO(i,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var AU={kernelName:$u,backendName:"webgl",kernelFunc:Ole};function zle(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.readSync(o.dataId)),i=t.readSync(n.dataId),u=Array.from(t.readSync(s.dataId)),[l,p,m]=JO(i,n.shape,n.dtype,a,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var wU={kernelName:Yi,backendName:"webgl",kernelFunc:zle};function Gle(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=uT(a,n.shape,n.dtype,i,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var NU={kernelName:Bu,backendName:"webgl",kernelFunc:Gle};function Ule(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=uT(a,n.shape,n.dtype,i,u);return t.makeTensorInfo(p,n.dtype,l)}var DU={kernelName:Ou,backendName:"webgl",kernelFunc:Ule};function Wle(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let b=t.bufferSync(o),x=t.bufferSync(s),T=y.decodeString(t.readSync(a.dataId)[0]),I=XO(b,x,i,c,p,l,u,m,T,d);return t.makeTensorInfo(i,I.dtype,I.values)}let f=new ug(l,u,o.shape.length,s.shape.length,m,[c,1],d),h=t.runWebGLProgram(f,[s,o,a],s.dtype),g=ue({inputs:{x:h},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(h),g}var PU={kernelName:zu,backendName:"webgl",kernelFunc:Wle};function Kle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=Ya({inputs:{x:o},backend:t,attrs:{begin:p,size:d}});return p[i]+=c,f})}var RU={kernelName:xs,backendName:"webgl",kernelFunc:Kle};var FU="return sqrt(x);",Vle=Ae({opSnippet:FU,packedOpSnippet:FU,cpuKernelImpl:ez}),MU={kernelName:Uo,backendName:"webgl",kernelFunc:Vle};var Hle="return x * x;",qle=Ae({opSnippet:Hle}),EU={kernelName:ui,backendName:"webgl",kernelFunc:qle};var _U="return (a - b) * (a - b);",jle=dt({opSnippet:_U,packedOpSnippet:_U}),LU={kernelName:Vo,backendName:"webgl",kernelFunc:jle};function Xle({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=Tr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new kn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var $U={kernelName:Cs,backendName:"webgl",kernelFunc:Xle};var PN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=Ve(n.length),a=Ve(n.length),i="";if(o===1)i="coords * strides + begin";else{let u=0;i=n.map((l,p)=>(u++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${u-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Yle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:I}=Tt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=ue({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let R=Tt.computeOutShape(x,T,I),F=Ya({inputs:{x:o},backend:t,attrs:{begin:x,size:R}});k=ue({inputs:{x:F},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(F)}else if(t.shouldExecuteOnCPU([o])){let F=t.readSync(o.dataId),M=xe(o.shape,o.dtype,F),L=tz(d,M,I,x);k=t.makeTensorInfo(f,o.dtype,L.values)}else{let F=new PN(x,I,d);k=t.runWebGLProgram(F,[o],o.dtype)}let w=ue({inputs:{x:k},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(k),w}var BU={kernelName:Da,backendName:"webgl",kernelFunc:Yle};function Zle(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=e,c=t.readSync(p.dataId),d=t.readSync(m.dataId),[f,h]=rz(c,d,o,s,a,i,u,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var OU={kernelName:li,backendName:"webgl",kernelFunc:Zle};function Qle(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.readSync(s.dataId),u=t.readSync(a.dataId)[0],[l,p,m]=nz(i,u,o),c=p.length;return[t.makeTensorInfo([c,2],"int32",l),t.makeTensorInfo([c],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var zU={kernelName:Gu,backendName:"webgl",kernelFunc:Qle};function Jle(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.readSync(s.dataId),i=oz(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var GU={kernelName:Uu,backendName:"webgl",kernelFunc:Jle};var epe="return tan(x);",tpe=Ae({opSnippet:epe}),UU={kernelName:Pa,backendName:"webgl",kernelFunc:tpe};var rpe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,npe=Ae({opSnippet:rpe}),WU={kernelName:qo,backendName:"webgl",kernelFunc:npe};var RN=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=Ve(this.rank),s=ope(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function ope(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function FN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>y.decodeString(c)):u,p=xe(o.shape,o.dtype,l),m=az(p,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new RN(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var KU={kernelName:wn,backendName:"webgl",kernelFunc:FN};var MN=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},EN=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Lp(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function VU(r){let e=1;for(;e<r;)e*=2;return e}function spe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=B().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=B().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,p=l[l.length-1];if(t.shouldExecuteOnCPU([o])||p<i||s>u){let L=t.readSync(o.dataId),[z,W]=iz(L,l,o.dtype,s,a);return[t.makeTensorInfo(z.shape,z.dtype,z.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(s===0)return l[l.length-1]=0,[t.makeTensorInfo(l,o.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(p===1)return[o,xu({attrs:{shape:l,dtype:"int32",value:0},backend:t})];let m=t.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?t.unpackTensor(o):o,h=y.sizeFromShape(l)/p,g=ue({inputs:{x:d},attrs:{shape:[h,p]},backend:t});c&&Lp(t,d);let b=VU(s),x=VU(p),T=null,I=()=>T===null?[g,g]:[g,T],k=(L,z,W)=>{let V=I(),j=new MN(W),Y=[[p],[T===null?1:0],[Number.NEGATIVE_INFINITY],[L],[z]],J=T;T=t.runWebGLProgram(j,V,"int32",Y),Lp(t,J)};for(let L=1;L<b;L*=2){let z=L*2;for(let W=L;W>=1;W/=2)k(z,W,[h,x])}for(let L=x;L>b;L/=2){let z=I(),W=new EN([h,L/2]),j=[[p],[T===null?1:0],[b]],q=T;T=t.runWebGLProgram(W,z,"int32",j),Lp(t,q);let Y=b/2,J=Y*2;for(let H=Y;H>=1;H/=2)k(J,H,T.shape)}let w=T;T=Ya({inputs:{x:T},backend:t,attrs:{begin:0,size:[h,s]}}),Lp(t,w);let R=tN({inputs:{x:g,indices:T},backend:t,attrs:{axis:1,batchDims:1}});Lp(t,g);let F=l.slice(0,-1);F.push(s),w=T,T=ue({inputs:{x:T},attrs:{shape:F},backend:t}),Lp(t,w);let M=R;return R=ue({inputs:{x:R},attrs:{shape:F},backend:t}),Lp(t,M),[R,T]}var HU={kernelName:Ra,backendName:"webgl",kernelFunc:spe};var _N=class{constructor(e,t,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function ape(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=new _N(m,c,a,i,u,g);return t.runWebGLProgram(b,[o,s],"float32")}var qU={kernelName:Fa,backendName:"webgl",kernelFunc:ape};function ipe(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;qa(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=uz(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var jU={kernelName:Mm,backendName:"webgl",kernelFunc:ipe};function upe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=Ya({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),b=ue({inputs:{x:g},backend:t,attrs:{shape:l}});f[h]=b,m.push(g)}return m.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var XU={kernelName:Ts,backendName:"webgl",kernelFunc:upe};var LN=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let u="0.0",l="sumValue",p=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function lpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,u=[],l=0,p=C.getAxesPermutation([l],i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),u.push(m),l=C.getInnerMostAxes(1,i)[0]);let c=C.segment_util.computeOutShape(m.shape,l,a),d=y.sizeFromShape([m.shape[l]]),f=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,d]}});u.push(f);let h=Qi(o.dtype),g=(I,k,w,R,F)=>{let M=I.shape[0],L=I.shape[1],z=C.segment_util.segOpComputeOptimalWindowSize(L,F),W={windowSize:z,inSize:L,batchSize:M,numSegments:F},V=new LN(W,k),j=t.compileAndRun(V,[I,w],R);if(u.push(j),j.shape[1]===F)return j;let q=yN({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),Y=FN({inputs:{x:q},backend:t,attrs:{reps:[L/z]}});return u.push(q),u.push(Y),g(j,k,Y,R,F)},b=g(f,"unsortedSegmentSum",s,h,a),x=ue({inputs:{x:b},backend:t,attrs:{shape:c}}),T=x;if(p!=null){u.push(x);let I=C.getUndoAxesPermutation(p);T=Vt({inputs:{x:T},backend:t,attrs:{perm:I}})}return u.forEach(I=>t.disposeIntermediateTensorInfo(I)),T}var YU={kernelName:Wu,backendName:"webgl",kernelFunc:lpe};var ppe=[Bz,zz,Gz,Uz,Kz,Vz,Hz,qz,Yz,Zz,Qz,Jz,eG,tG,rG,nG,oG,sG,aG,iG,uG,pG,mG,cG,gG,yG,xG,Az,IG,kG,SG,vG,AG,wG,NG,DG,PG,RG,FG,_G,LG,$G,BG,OG,zG,GG,UG,WG,KG,VG,HG,qG,jG,XG,YG,QG,JG,e3,t3,n3,o3,s3,a3,i3,u3,l3,p3,m3,vz,c3,CG,d3,f3,h3,wz,g3,b3,y3,x3,T3,I3,C3,k3,S3,v3,w3,N3,D3,P3,R3,F3,E3,L3,$3,B3,O3,z3,V3,Fz,H3,q3,j3,X3,dG,Y3,J3,eU,tU,rU,Nz,nU,oU,fG,G3,sU,aU,iU,Ez,uU,lU,pU,mU,cU,dU,fU,hU,gU,bU,yU,xU,TU,IU,CU,kU,lG,K3,SU,vU,AU,wU,NU,DU,PU,RU,MU,EU,LU,$U,BU,OU,zU,GU,W3,Lz,UU,WU,KU,HU,qU,$z,jU,XU,YU,Z3];for(let r of ppe)Zi(r);var Tu=B();Tu.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Tu.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Tu.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Tu.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Tu.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Tu.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Tu.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Tu.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Tu.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!1);var mpe="return a + b;",cpe="return areal * breal - aimag * bimag;",dpe="return areal * bimag + aimag * breal;",fpe="return a / b;",hpe="return a * b;",gpe="return (a - b) * (a - b);",bpe="return a - b;",ype="return f32(a == b);",xpe="return vec4<f32>(a == b);",Tpe="return f32(a > b);",Ipe="return vec4<f32>(a > b);",Cpe="return f32(a >= b);",kpe="return vec4<f32>(a >= b);",Spe="return f32(a < b);",vpe="return vec4<f32>(a < b);",Ape="return f32(a <= b);",wpe="return vec4<f32>(a <= b);",Npe="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Dpe=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Ppe=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,QU=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Rpe=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Fpe=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Mpe=`
  if (isnan(a) || isnan(b)) {
    return 1.0;
  }
  return f32(a != b);
`,Epe=`
  var result = vec4<f32>(a != b);
  var isANaN = isnanVec4(a);
  var isBNaN = isnanVec4(b);
  if (isANaN.r || isBNaN.r) {
    result.r = 1.0;
  }
  if (isANaN.g || isBNaN.g) {
    result.g = 1.0;
  }
  if (isANaN.b || isBNaN.b) {
    result.b = 1.0;
  }
  if (isANaN.a || isBNaN.a) {
    result.a = 1.0;
  }

  return result;
`,_pe=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Lpe=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${QU}
  return resultTemp;
  `,$pe="if (a < 0.0) { return b * a; }  return a;",Bpe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function ZU(r,e){let t=e?QU:Ppe;return e?`
    var resultTemp = vec4<f32>(${r}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+t+`
    return resultTemp;
  `:t+`
    return ${r}(a, b);
  `}function $p(r,e){switch(r){case 0:return hpe;case 1:return mpe;case 2:return bpe;case 3:return fpe;case 4:return e?xpe:ype;case 5:return e?Ipe:Tpe;case 6:return e?kpe:Cpe;case 7:return e?vpe:Spe;case 8:return e?wpe:Ape;case 9:return e?Dpe:Npe;case 10:return e?Epe:Mpe;case 11:return gpe;case 12:return e?Fpe:Rpe;case 14:return e?Bpe:$pe;case 15:return ZU("max",e);case 16:return ZU("min",e);case 13:return e?Lpe:_pe;case 17:return cpe;case 18:return dpe;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var Ope="return abs(a);",zpe="return ceil(a);",Gpe="return cos(a);",Upe=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Wpe="return exp(a) - 1.0;",Kpe="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Vpe=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Hpe="return exp(a);",qpe="return floor(a);",jpe="return a;",Xpe=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Ype="return f32(!(a >= 1.0));",Zpe="return -a;",Qpe="if (a < 0.0) { return uniforms.alpha * a; } return a;",Jpe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,eme="return select(a, 0.0, a < 0.0);",tme="return clamp(a, 0.0, 6.0);",rme="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",nme=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,ome="return 1.0/sqrt(a);",sme="return 1.0 / (1.0 + exp(-1.0 * a));",ame="return sin(a);",ime=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,ume="return sqrt(a);",lme="return a * a;",pme=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,mme="return f32(i32((a)));";function Iu(r,e){switch(r){case 0:return Ope;case 2:return Gpe;case 3:return Upe;case 1:return zpe;case 4:return e?Vpe:Kpe;case 5:return Hpe;case 6:return Wpe;case 7:return qpe;case 8:return jpe;case 9:return Xpe;case 10:return Ype;case 11:return Zpe;case 14:return e?Jpe:Qpe;case 12:return e?nme:eme;case 13:return e?rme:tme;case 15:return ome;case 18:return sme;case 16:return ame;case 17:return ime;case 19:return ume;case 20:return lme;case 21:return pme;case 22:return mme;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var cr=r=>{switch(r){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${r}-component is not supported.`)}};function Hr(r,e=!1,t=!1,n=3){if(r===null)return"";let o="";if(r==="linear")o=Iu(8);else if(r==="relu")o=Iu(12,t);else if(r==="elu")o=Iu(4,t);else if(r==="relu6")o=Iu(13,t);else if(r==="prelu")o=$p(14,t);else if(r==="sigmoid")o=Iu(18,t);else if(r==="leakyrelu")o=Iu(14,t);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let a=cr(t?4:1),i="";return e?i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${o}
      }`:i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        ${o}
      }`,i}function Zs(r,e){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}function JU(r,e){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}var rW=(r,e,t,n)=>{let o={dtype:n.dtype,shape:n.shape},s=cme(t,o,e),a=r.createShaderModule({code:s,label:e.constructor.name});return r.createComputePipeline({compute:{module:a,entryPoint:"main"},label:e.constructor.name,layout:"auto"})};function ar(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Ai(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function ve(){return`
    ${Za()}
      let index = getGlobalIndex();
`}function Za(){return`
  ${Bp()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Bp(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function cme(r,e,t){let n=[];if(n.push(`
      const workGroupSizeX = ${t.workGroupSize[0]}u;
      const workGroupSizeY = ${t.workGroupSize[1]}u;
      const workGroupSizeZ = ${t.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${oW(t)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),t.isFromPixels)return n.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${id(e.dtype,t.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[eW,n.join(`
`),tW(e.shape),t.getUserCode()].join(`
`);let o=!1,s=!1,a="struct Uniforms { NAN : f32, ";t.variableNames.forEach((f,h)=>{let g=ar(r[h].shape.length);(g==="vec5"||g==="vec6")&&(s=!0),(o||s)&&(a+="@align(16) "),o=s,a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `});let i=ar(e.shape.length);s=i==="vec5"||i==="vec6",(o||s)&&(a+="@align(16) "),o=s,a+=`outShape : ${i}, `;let u=e.shape.length-1,l=ar(u);s=l==="vec5"||l==="vec6",(o||s)&&(a+="@align(16) "),o=s,a+=`
         outShapeStrides: ${l}, `,t.size&&(o&&(a+="@align(16) "),o=!1,a+="size : i32, "),t.uniforms&&(o&&(a+="@align(16) "),a+=t.uniforms),a+="};",n.push(a),t.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${id(e.dtype,t.isVec4)}>;
    `),t.variableNames.forEach((f,h)=>{n.push(`
      @group(0) @binding(${1+h}) var<storage, read> ${f}: array<${t.variableTypes?t.variableTypes[h]:id(r[h].dtype,t.isVec4)}>;
        `)}),a!==""&&n.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let p=gme(e.shape,t.dispatchLayout),m=[eW,n.join(`
`),tW(e.shape),p,bme(e.shape.length)];t.atomic||m.push(yme(e.shape,e.dtype,t.isVec4));let c=r.map((f,h)=>hme(f,e.shape,t.variableTypes?t.variableTypes[h]==="vec4<f32>":t.isVec4,t.dispatchLayout.x.length===e.shape.length)).join(`
`);return m.push(c),m.push(t.getUserCode()),m.join(`
`)}function nW(r,e,t,n){let o=r.shaderKey;if(r.isFromPixels)return o;let s=t.map(p=>p.dtype).concat(n.dtype),a=t.map(p=>C.getBroadcastDims(p.shape,n.shape)),i=t.map(p=>y.arraysEqual(p.shape,n.shape)).join("_"),u=a.map(p=>p.join("_")).join(";"),l=oW(r)?"flatDispatch":"";return o+="_"+(r.workGroupSize?r.workGroupSize.join(","):"")+e.map(p=>p.length).join(",")+s.join(",")+r.variableNames.join(",")+u+i+l,o}var eW=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function tW(r){let e=r.length;if(e<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let t=y.computeStrides(r),n=ar(e),o=[];for(let a=0;a<e;a++)o.push(`d${a}`);if(t.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s;return s="var index2 = index;"+t.map((a,i)=>{let u=`let ${o[i]} = index2 / uniforms.outShapeStrides.${Ai(i)}`,l=i===t.length-1?`let ${o[i+1]} = index2 - ${o[i]} * uniforms.outShapeStrides.${Ai(i)}`:`index2 = index2 - ${o[i]} * uniforms.outShapeStrides.${Ai(i)}`;return`${u}; ${l};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}function dme(r,e){let t=r.name,n=r.shape.length,o=ar(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=a.map(p=>`${p} : i32`).join(", ");if(n<1)return e?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${t}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${t}[0]);
      }
    `;let u=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,l=`${n}D`;return n===0&&(l="1D"),e?`
      fn ${s}(${i}) -> vec4<f32> {
        return vec4<f32>(${t}[getIndexFromCoords${l}(${o}(${a.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${i}) -> f32 {
      return f32(${t}[getIndexFromCoords${l}(${o}(${a.join(",")}),
        ${u})]);
    }
   `}function fme(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"ByOutput",i=r.shape.length,u=e.length,l=ar(u);if(y.arraysEqual(r.shape,e)&&n)return t?`
      fn ${a}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${o}[globalIndex]);
      }

      fn ${a}Coords(coords : ${l}) -> vec4<f32> {
        return vec4<f32>(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${a}Index(globalIndex : i32) -> f32 {
      return f32(${o}[globalIndex]);
    }

    fn ${a}Coords(coords : ${l}) -> f32 {
      return f32(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let p=C.getBroadcastDims(r.shape,e),m=u-i,c="";if(i===0)return t?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      return get${s}();
    }

    fn ${a}Coords(coords : ${l}) -> vec4<f32> {
      return get${s}();
    }
  `:`
    fn ${a}Index(globalIndex : i32) -> f32{
      return get${s}();
    }

    fn ${a}Coords(coords : ${l}) -> f32{
      return get${s}();
    }
  `;u<2&&p.length>=1?c="coords = 0;":c=p.map(g=>`coords.${Ai(g+m)} = 0;`).join(`
`);let d="";if(u<2&&i>0)d="coords";else if(u>1){let g=ar(i),b=r.shape.map((x,T)=>`coords.${Ai(T+m)}`).join(", ");d=`${g}(${b})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return t?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }

    fn ${a}Coords(coordsIn : ${l}) -> vec4<f32> {
      var coords = coordsIn;
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }
  `:`
  fn ${a}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }

  fn ${a}Coords(coordsIn : ${l}) -> f32 {
    var coords = coordsIn;
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }
`}function hme(r,e,t,n){let o=dme(r,t);return r.shape.length<=e.length&&(o+=fme(r,e,t,n)),o}function gme(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length;if(t.length===s)return`fn getOutputCoords() -> ${ar(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="",i=[t,n,o],u=0;for(let c=0;c<i.length;c++){let d=i[c];if(d.length!==0)if(u+=d.length,d.length===1)a+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=JU(d,"uniforms.outShape");a+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)a+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?a+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:a+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let l=[];for(let c=0;c<u;c++)l.push(`d${c}`);let p=ar(u),m=`fn getOutputCoords() -> ${p} {
  ${a}
`;return l.length===0?m+=`return ${p}(0); }`:m+=`return ${p}(${l.join(",")}); }`,m}function bme(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:y.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function oW(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function id(r,e){return r==="float32"?e?"vec4<f32>":"f32":r==="int32"||r==="bool"?e?"vec4<i32>":"i32":r}function yme(r,e,t){let n=r.length,o=id(e,t),s;if(t?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${o}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${o}(value);
    }`,n>=2){let a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=ar(n);t?s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}var ST={};je(ST,{ArrayBufferToTypedArray:()=>ON,GPUBytesPerElement:()=>BN,MatMulProgramType:()=>zN,computeDispatch:()=>he,computeWorkGroupSizeForConv2d:()=>lg,computeWorkGroupSizeForMatMul:()=>$N,computeWorkPerThreadForConv2d:()=>pg,flatDispatchLayout:()=>Se,isWebGPUSupported:()=>mg,tilesFitEvenlyIntoShape:()=>Tme});var Op=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function Tme(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]===0)}function he(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(Op(r.x.map(i=>e[i]))/(t[0]*n[0])),r.y?Math.ceil(Op(r.y.map(i=>e[i]))/(t[1]*n[1])):1,r.z?Math.ceil(Op(r.z.map(i=>e[i]))/(t[2]*n[2])):1];return[o,s,a]}function lg(r,e,t=!1){if(t)return[8,8,1];let n=Op(r.x.map(s=>e[s])),o=Op(r.y.map(s=>e[s]));return n<=4?[4,16,1]:o<=4?[16,4,1]:[16,16,1]}function $N(r,e,t){return r===1?[32,1,1]:t===1?[1,32,1]:[8,8,1]}function pg(r,e,t=!1){if(t)return[4,4,1];let n=Op(r.x.map(s=>e[s])),o=Op(r.y.map(s=>e[s]));return n<=4?[1,2,1]:o<=4?[2,1,1]:[2,2,1]}function Se(r){return{x:r.map((e,t)=>t)}}function BN(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function ON(r,e){if(e==="float32")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${e}`)}function mg(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}var zN=(a=>(a[a.MatMulPackedVec4Program=0]="MatMulPackedVec4Program",a[a.MatMulReduceProgram=1]="MatMulReduceProgram",a[a.MatMulSplitKProgram=2]="MatMulSplitKProgram",a[a.MatMulSmallOutputSizeProgram=3]="MatMulSmallOutputSizeProgram",a[a.MatMulPackedProgram=4]="MatMulPackedProgram",a[a.MatMulMax=5]="MatMulMax",a))(zN||{});function GN(r,e,t,n,o=!1,s=!1,a=!1,i=1){y.assert(t&&i===1||!t,()=>`transposeA ${t} is not compatible with component size ${i}`);let u=`
      let batch = ${r?"0":"batchIn"};
      let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
      ${t?`value = A[(batch * batchASize + col * uniforms.aShape[2] + row) / ${i}];`:`value = A[(batch * batchASize + row * uniforms.aShape[2] + col) / ${i}];`}

    `,l;return n===!1?l=`value = B[(batch * batchBSize + row * uniforms.bShape[2] + col) / ${i}];`:l=`value = B[(batch * batchBSize + col * uniforms.bShape[2] + row) / ${i}];`,`
  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${cr(i)} {
    var value = ${cr(i)}(0.0);
    let col = colIn * ${i};
    ${o&&a?u:`
    ${t?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${u}
    }
    `}
    return value;
  }

  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${cr(i)} {
    let col = colIn * ${i};
    let batch = ${e?"0":"batchIn"};
    let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
    var value = ${cr(i)}(0.0);
    ${l}
    return value;
  }
  `}function zp(r,e,t,n,o,s,a=!1,i=!1,u=!1,l=1){return`
  ${GN(t,n,o,s,a,i,u,l)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${cr(l)}) {
    let col = colIn * ${l};
    ${a&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Zs(r,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var Ime=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          t * TileInner + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRowStart + inputRow,
          t * TileInner + inputCol);
        `,Cme=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function cg(r,e,t=!1,n=32){let o=r[1]*e[1],s=r[0]*e[0],a=t?o:n,i=t?n:o;y.assert(i%e[1]===0&&a%e[0]===0&&n%e[1]===0,()=>`tileAHight ${i} must be divisible by workGroupSize[1]${e[1]}, tileAWidth ${a} must be divisible by workGroupSize[0]${e[0]}, tileInner ${n} must be divisible by workGroupSize[1]${e[1]}`);let u=i/e[1],l=a/e[0],p=n/e[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${a}>, ${i}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${n}>;
    const RowPerThread = ${r[1]};
    const ColPerThread = ${r[0]};
    const TileInner = ${n};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;
      let batch = i32(globalId.z);
      let globalRowStart = i32(workgroupId.y) * ${o};

      let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${u};
      let tileColA = i32(localId.x) * ${l};
      let tileRowB = i32(localId.y) * ${p};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${u}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${l}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${Ime(t)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch,
              t * TileInner + inputRow,
              globalCol + innerCol);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${Cme(t)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(batch, globalRow + innerRow, globalCol + innerCol,
              acc[innerRow][innerCol]);
        }
      }
    }
  `}var kme=r=>r?`
      mm_readA(batch, colA, globalRow),
      mm_readA(batch, colA + 1, globalRow),
      mm_readA(batch, colA + 2, globalRow),
      mm_readA(batch, colA + 3, globalRow)
  `:`
      mm_readA(batch, globalRow, colA),
      mm_readA(batch, globalRow, colA + 1),
      mm_readA(batch, globalRow, colA + 2),
      mm_readA(batch, globalRow, colA + 3)
  `;function Sme(r,e=!1){return y.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`),`
    const TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${Za()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;
      let batch = i32(globalId.z);
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${kme(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),
                              mm_readB(batch, rowB + 1, globalCol),
                              mm_readB(batch, rowB + 2, globalCol),
                              mm_readB(batch, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var UN=class{constructor(e,t,n,o,s,a=!1,i=!1,u=null,l=null,p=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let m=a?e[1]:e[2];this.workGroupSize=$N(t[1],m,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),y.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=u!=null,d=p!=null;c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.transposeA=a,this.transposeB=i,this.addBias=c,this.activation=l,this.hasPreluActivationWeights=d,this.batchAEqualOne=o,this.batchBEqualOne=s,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],m),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${i}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e,t,n){let o=this.workGroupSize[1]*this.workPerThread,s=this.workGroupSize[0]*this.workPerThread;this.tileInner=32,this.outputShape[1]===1&&(this.tileInner=this.workGroupSize[0]*4);let a=e%o===0,i=t%s===0,u=n%this.tileInner===0;return[a,i,u]}getUserCode(){return`
      ${Hr(this.activation,this.hasPreluActivationWeights)}
      ${zp(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner)}
      ${this.outputShape[1]>1?cg([this.workPerThread,this.workPerThread,1],this.workGroupSize,this.transposeA,this.tileInner):Sme(this.workGroupSize,this.transposeA)}
    `}};var vme=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          t * TileInner + inputRow,
          globalRowStart / ${e} + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          t * TileInner / ${e} + inputCol);
        `,Ame=(r,e)=>r?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached[0] * ACached0[i] + acc[i];
          acc[i] = BCached[1] * ACached1[i] + acc[i];
          acc[i] = BCached[2] * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached[3] * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached[0] * ACached.x + acc[i];
          acc[i] = BCached[1] * ACached.y + acc[i];
          acc[i] = BCached[2] * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached[3] * ACached.w + acc[i];"}
        }`;function dg(r,e,t,n,o=4,s=!1){let a=s?e:n,i=s?n:e,u=s?r[1]:o;return y.assert((s&&e===t||n%4===0||n%3===0)&&r[0]===4&&(o===3||o===4),()=>`tileInner ${n} must be divisible by 4|3. ColPerThread ${r[0]} must be 4.
           innerElementSize ${o} must be 3|4.`),`
  var<workgroup> mm_Asub : array<array<vec${u}<f32>, ${a/u}>, ${i}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${t/r[0]}>, ${n}>;

  const RowPerThread = ${r[1]};
  const ColPerThread = ${r[0]};
  const InnerElementSize = ${o};
  const TileInner = ${n};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
          @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${e===1?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${e===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let globalRowStart = i32(workgroupId.y) * ${e};

    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = localRow * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${vme(s,u)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch, t * TileInner + inputRow, globalCol);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            BCached[0] = mm_Bsub[k * InnerElementSize][tileCol];
            BCached[1] = mm_Bsub[k * InnerElementSize + 1][tileCol];
            BCached[2] = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${o===3?"":"BCached[3] = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${Ame(s,o)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var WN=class{constructor(e,t,n,o,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,8,1];this.isVec4=!0;this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&!s?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let l=a!=null,p=u!=null;l&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1&&!s?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=p,this.batchAEqualOne=n,this.batchBEqualOne=o,this.transposeA=s;let m=s?e[1]:e[2];this.fitAOuter=t[1]%this.tileAOuter===0,this.fitBOuter=t[2]%this.tileBOuter===0,this.fitInner=m%this.tileInner===0,this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}_${this.transposeA}`}getUserCode(){return`
      ${Hr(this.activation,this.hasPreluActivationWeights,!0)}
      ${zp(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,!1,this.fitAOuter,this.fitBOuter,this.fitInner,4)}
      ${dg(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,4,this.transposeA)}
    `}};function wme(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Za()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var KN=class{constructor(e,t,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=a!=null,p=u!=null;l&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=p,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${Hr(this.activation,this.hasPreluActivationWeights)}
      ${zp(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${wme()}
    `}};function Nme(r){let e=r[1],t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Za()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batch, globalRow, globalColA);
    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batch, globalRow, globalColA);
      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var VN=class{constructor(e,t,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[16,8,1];this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];let l=a!=null;l&&this.variableNames.push("bias");let p=u!=null;p&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=p,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${Hr(this.activation,this.hasPreluActivationWeights)}
      ${zp(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${Nme(this.workGroupSize)}
    `}};var HN=class{constructor(e,t,n,o,s=!1,a=!1){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,8,1];this.atomic=!0;this.tileInner=32;y.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.elementsPerThread=[4,4,this.tileInner],this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1),this.dispatch=he(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workGroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=a,this.batchAEqualOne=n,this.batchBEqualOne=o,this.shaderKey=`matMulSplitK_${s}_${a}_${n}_${o}_${this.elementsPerThread}`}getUserCode(){let e=`
     var oldValue = atomicLoad(&(result[flatIndex]));
     var exchanged = false;
     for (; !exchanged;) {
       let newValueF32 = bitcast<f32>(oldValue) + value;
       let newValue = bitcast<i32>(newValueF32);
       let res = atomicCompareExchangeWeak(&(result[flatIndex]), oldValue, newValue);
       oldValue = res.old_value;
       exchanged = res.exchanged;
     }
     `;return`
      ${GN(this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          var value = valueIn;
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          ${e}
        }
      }

      ${this.makeMatMulSplitKSource()}
    `}makeMatMulSplitKSource(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=this.elementsPerThread[1],o=this.elementsPerThread[0],s=this.tileInner/this.workGroupSize[0],a=this.tileInner/this.workGroupSize[1];return y.assert(this.tileInner%this.workGroupSize[0]===0&&this.tileInner%this.workGroupSize[1]===0,()=>`tileInner ${this.tileInner} must be divisible by workGroupSize[0]${this.workGroupSize[0]} and workGroupSize[1]${this.workGroupSize[1]}`),`
      var<workgroup> mm_Asub : array<array<f32, ${this.tileInner}>, ${e}>;
      var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${this.tileInner}>;
      ${Za()}
        let tileRow = i32(localId.y) * ${n};
        let tileCol = i32(localId.x) * ${o};

        let globalRow = i32(globalId.y) * ${n};
        let globalCol = i32(globalId.x) * ${o};
        let batch = 0;
        let kStart = i32(globalId.z) * ${this.tileInner};

        // Load one tile of A into local memory.
        let tileColA = i32(localId.x) * ${s};
        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;
            mm_Asub[inputRow][inputCol] = mm_readA(${this.batchAEqualOne?0:"batch"},
                globalRow + innerRow,
                kStart + inputCol);
          }
        }
        // Load one tile of B into local memory.
        let tileRowB = i32(localId.y) * ${a};
        for (var innerRow = 0; innerRow < ${a}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${o}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(${this.batchBEqualOne?0:"batch"},
                kStart + inputRow,
                globalCol + innerCol);
          }
        }

        workgroupBarrier();

        var acc : array<array<f32, ${o}>, ${n}>;
        // Loop over shared dimension. Compute acc values for a single thread.
        for (var k = 0; k < ${this.tileInner}; k = k + 1) {
          var BCached : array<f32, ${o}>;
          for (var inner = 0; inner < ${o}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
            let ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${o}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${o}; innerCol = innerCol + 1) {
            mm_write(batch, globalRow + innerRow, globalCol + innerCol, acc[innerRow][innerCol]);
          }
        }
      }
    `}},qN=class{constructor(e,t=null,n=null,o=null){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=o!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${Hr(this.activation,this.hasPreluActivationWeights)}
    ${ve()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Zs(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var jN=class{constructor(e){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ve()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function rs(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new jN(n),i=[{type:"float32",data:[o]}];return e.runWebGPUProgram(a,[],s,i)}}var sW={kernelName:ai,backendName:"webgpu",kernelFunc:rs};function Fe(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s),i=y.sizeFromShape(a);return y.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var aW={kernelName:hs,backendName:"webgpu",kernelFunc:Fe};function ud({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,m=t?r.shape[l-2]:r.shape[l-1],c=n?e.shape[p-1]:e.shape[p-2],d=t?r.shape[l-1]:r.shape[l-2],f=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),b=y.sizeFromShape(h),x=y.sizeFromShape(g),I=Dr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[b,m,d]:[b,d,m],w=n?[x,f,c]:[x,c,f],R=Fe({inputs:{x:r},backend:o,attrs:{shape:k}}),F=Fe({inputs:{x:e},backend:o,attrs:{shape:w}}),M=[R,F],L=Math.max(b,x),z=b===1,W=x===1,V=(m%4===0&&!t||d%4===0&&t)&&f%4===0&&!n,j=[R,F],q=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}],Y,J,H=[L,d,f],te=B().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(te<0&&(d*f<=128?te=1:L===1&&d<=128&&f<=48&&c>=2e3?te=2:d<=16&&(f<=512||c>=2*f)||f<=16&&(d<=512||m>=2*d)?te=3:V?te=0:te=4),te){case 0:Y=new WN(k,H,z,W,t,s,u,a);break;case 1:Y=new KN(H,z,W,t,n,s,u,a);break;case 2:{if(J=rs({backend:o,attrs:{shape:H,value:0,dtype:r.dtype}}),Y=new HN(H,c,z,W,t,n),s||u){J=o.runWebGPUProgram(Y,j,r.dtype,q,J);let ae=new qN(J.shape,s,u,a),pe=null,ie=[J];s&&ie.push(s),a&&ie.push(a),u==="leakyrelu"&&(pe=[{type:"float32",data:[i]}],ae.uniforms+=" alpha : f32,");let be=o.runWebGPUProgram(ae,ie,J.dtype,pe);M.push(J);let fe=Fe({inputs:{x:be},backend:o,attrs:{shape:I}});M.push(be);for(let Ie of M)o.disposeData(Ie.dataId);return fe}break}case 3:Y=new VN(k,w,H,t,n,s,u,a);break;case 4:Y=new UN(k,H,B().get("WEBGPU_MATMUL_WORK_PER_THREAD"),z,W,t,n,s,u,a);break;default:throw new Error(`Unsupported MatMulProgramType ${te}.`)}s&&j.push(s),a&&j.push(a),u==="leakyrelu"&&(q.push({type:"float32",data:[i]}),Y.uniforms+=" alpha : f32,"),J=o.runWebGPUProgram(Y,j,r.dtype,q,J);let se=Fe({inputs:{x:J},backend:o,attrs:{shape:I}});M.push(J);for(let ae of M)o.disposeData(ae.dataId);return se}function Dme(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return ud({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:p})}var iW={kernelName:ks,backendName:"webgpu",kernelFunc:Dme};var vT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${$p(this.op,!1)}
      }

      ${ve()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var ld=class{constructor(e,t,n){this.size=!0;this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Se(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length===1&&n.length>1&&t[0]<1024,this.useSharedMemoryWithB=n.length===1&&t.length>1&&n[0]<1024,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4):(y.arraysEqual(t,n)&&y.sizeFromShape(t)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workGroupSize=[128,1,1]),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let e;if(this.type==="shared"){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",n=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];
          let b = getBByOutputCoords(coords);`;e=`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${$p(this.op,this.isVec4)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ve()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${n}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}else{let t=this.type==="vec4"?"vec4<f32>":"f32",n=$p(this.op,this.isVec4);e=`
       fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
         ${n}
       }
       ${ve()}
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `}return e}};function ir(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var uW={kernelName:Wn,backendName:"webgpu",kernelFunc:ir};function Qa(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.tensorMap.get(s.dataId),i=ir({inputs:{x:n},backend:t}),u=ir({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:u},s}var lW={kernelName:Nu,backendName:"webgpu",kernelFunc:Qa};var Ja=class{constructor(e,t){this.variableNames=["A"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Iu(this.op,!1)}
      }
      ${ve()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ft({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=t||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let l=a.tensorMap.get(s.dataId),p=e(l.values,i);return a.makeTensorInfo(s.shape,i,p)}let u=new Ja(s.shape,r);return a.runWebGPUProgram(u,[s],i)}}function Nt({opType:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(t&&a.dtype==="complex64"){let m=u.tensorMap.get(a.dataId),c=u.tensorMap.get(i.dataId),d,f;if(r!==0)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[b,x]=g,T={dataId:b.dataId,dtype:b.dtype,shape:a.shape},I={dataId:x.dataId,dtype:x.dtype,shape:i.shape},k=new ld(r,a.shape,i.shape);return u.runWebGPUProgram(k,[T,I],_t(b.dtype,x.dtype))});else{let g=new vT(17,a.shape,i.shape),b=new vT(18,a.shape,i.shape),x=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}];d=u.runWebGPUProgram(g,x,"float32"),f=u.runWebGPUProgram(b,x,"float32")}let h=Qa({inputs:{real:d,imag:f},backend:u});return u.disposeData(d.dataId),u.disposeData(f.dataId),h}let l=n||_t(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||u.shouldExecuteOnCPU([a,i]))&&e!=null){let m=u.tensorMap.get(a.dataId).values,c=u.tensorMap.get(i.dataId).values,d=a.dtype==="string"?C.fromUint8ToStringArray(m):m,f=a.dtype==="string"?C.fromUint8ToStringArray(c):c,[h,g]=e(a.shape,i.shape,d,f,l);return u.makeTensorInfo(g,l,h)}let p=new ld(r,a.shape,i.shape);return u.runWebGPUProgram(p,[a,i],l)}}var{addImpl:pW,ceilImpl:mW,concatImpl:cW,equalImpl:dW,expImpl:fW,expm1Impl:hW,floorImpl:gW,gatherNdImpl:bW,gatherV2Impl:yW,greaterEqualImpl:xW,greaterImpl:TW,lessEqualImpl:IW,lessImpl:CW,logImpl:kW,maxImpl:SW,maximumImpl:vW,minimumImpl:AW,multiplyImpl:wW,negImpl:NW,notEqualImpl:DW,prodImpl:PW,rangeImpl:RW,rsqrtImpl:FW,scatterImpl:MW,simpleAbsImpl:EW,sliceImpl:_W,stridedSliceImpl:LW,stringNGramsImpl:$W,subImpl:BW,tileImpl:OW,topKImpl:zW,transposeImpl:GW,uniqueImpl:qSr}=Vc;var Pme=ft({opType:0,cpuKernelImpl:EW}),UW={kernelName:is,backendName:"webgpu",kernelFunc:Pme};var Rme=Nt({opType:1,cpuKernelImpl:pW,supportsComplex:!0}),WW={kernelName:An,backendName:"webgpu",kernelFunc:Rme};var XN=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${ve()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Fme(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return ir({inputs:{x:n[0]},backend:t});let o=n.map(i=>i.dtype).reduce((i,u)=>_t(i,u)),s=n.map(i=>i.shape),a=new XN(s);return t.runWebGPUProgram(a,n,o)}var KW={kernelName:ro,backendName:"webgpu",kernelFunc:Fme};var fg=class{constructor(e,t,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="infinityValue : f32,";this.size=!0;let o=[t];C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.length),this.op=n==="min"?"<":">";let[s]=C.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Ai(this.inputShape.length-1)}`,n=()=>{let s="";if(this.outputShape.length===1)this.inputShape.length!==1&&(s+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)s+=`outputCoords.${Ai(a)},`;return s};return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      ${ve()}
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}};var YN=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Bp()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var ZN=class{constructor(e,t){this.variableNames=["A"];this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=ar(this.outputShape.length),t=Mme(this.newDim);return`
      ${ve()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function Mme(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC.${Ai(n)}`;return t.join()}function Sn(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];if(t.shouldExecuteOnCPU([o])){let m=a.tensorMap.get(o.dataId).values,c=GW(m,o.shape,o.dtype,s,u);return t.makeTensorInfo(u,o.dtype,c)}if(o.shape.length===2&&y.arraysEqual(s,[1,0])){let p=new YN(o.shape,s);return a.runWebGPUProgram(p,[o],o.dtype)}let l=new ZN(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}var VW={kernelName:Nn,backendName:"webgpu",kernelFunc:Sn};function Eme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Sn({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=new fg(u.shape,a[0],"max"),m=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=t.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>t.disposeData(d.dataId)),c}var HW={kernelName:no,backendName:"webgpu",kernelFunc:Eme};function _me(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Sn({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=new fg(u.shape,a[0],"min"),m=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=t.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>t.disposeData(d.dataId)),c}var qW={kernelName:si,backendName:"webgpu",kernelFunc:_me};var hg=class{constructor(e,t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${ve()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}};var gg=class{constructor(e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>,";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Lme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))return ir({inputs:{x:o},backend:t});let m,c=[{type:"int32",data:[p.strideHeight,p.strideWidth]}];return p.filterHeight===1&&p.filterWidth===1?m=new gg(p):(m=new hg(p,"avg"),c.push({type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]})),t.runWebGPUProgram(m,[o],o.dtype,c)}var jW={kernelName:oo,backendName:"webgpu",kernelFunc:Lme};function $me(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return ud({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var XW={kernelName:so,backendName:"webgpu",kernelFunc:$me};var JN=class{constructor(e,t){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.rank=t.length,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${ar(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=ar(this.rank),t=Bme(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${QN[a]} = uniforms.start[${a}] + coords.${QN[a]};`),`
      ${ve()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},QN=["x","y","z","w","u","v"];function Bme(r){if(r===1)return"sourceLoc";if(r<=6)return QN.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function ei(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,u]=Tt.parseSliceParams(o,s,a);if(Tt.assertParamsValid(o,i,u),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.tensorMap.get(o.dataId),c=_W(m.values,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,c)}if(y.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);let l=new JN(i,u),p=[{type:"int32",data:i}];return t.runWebGPUProgram(l,[o],o.dtype,p)}var YW={kernelName:bs,backendName:"webgpu",kernelFunc:ei};var Ome=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((x,T)=>x*T),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=[],f=Fe({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Sn({inputs:{x:f},backend:t,attrs:{perm:l}}),g=Fe({inputs:{x:h},backend:t,attrs:{shape:p}}),b=ei({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(x=>t.disposeData(x.dataId)),b},ZW={kernelName:us,backendName:"webgpu",kernelFunc:Ome};var eD=Nt({opType:10,dtype:"bool",cpuKernelImpl:DW}),QW={kernelName:Ia,backendName:"webgpu",kernelFunc:eD};function Cu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return ir({inputs:{x:o.complexTensorInfos.real},backend:t})}var JW={kernelName:Lu,backendName:"webgpu",kernelFunc:Cu};function eK(r,e){let t=new Ja(r.shape,22),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function tD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return ir({inputs:{x:o},backend:t});let a=It(o.shape),i=tD({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Qa({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeData(i.dataId),u}if(o.dtype==="complex64"){let a=Cu({inputs:{input:o},backend:t}),i=tD({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeData(a.dataId),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=ir({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return eK(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),u=eD({inputs:{a:o,b:a},backend:t});return t.disposeData(a.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var tK={kernelName:Gn,backendName:"webgpu",kernelFunc:tD};var zme=ft({opType:1,cpuKernelImpl:mW}),rK={kernelName:ao,backendName:"webgpu",kernelFunc:zme};var rD=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ve()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var nD=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ve()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Gme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i,u=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return y.sizeFromShape(o.shape)%4===0?i=new rD(o.shape):i=new nD(o.shape),t.runWebGPUProgram(i,[o],o.dtype,u)}var nK={kernelName:Un,backendName:"webgpu",kernelFunc:Gme};var oD=class{constructor(e){this.uniforms="";this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)e.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ve()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Gp(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return ir({inputs:{x:o.complexTensorInfos.imag},backend:t})}var oK={kernelName:Mu,backendName:"webgpu",kernelFunc:Gp};function pd(r,e,t){let n=r[0].dtype;if(n==="complex64"){let f=r.map(T=>Cu({inputs:{input:T},backend:t})),h=r.map(T=>Gp({inputs:{input:T},backend:t})),g=pd(f,e,t),b=pd(h,e,t),x=Qa({inputs:{real:g,imag:b},backend:t});return f.forEach(T=>t.disposeData(T.dataId)),h.forEach(T=>t.disposeData(T.dataId)),t.disposeData(g.dataId),t.disposeData(b.dataId),x}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(k=>{let w=y.sizeFromShape(k.shape.slice(e));return Fe({inputs:{x:k},backend:t,attrs:{shape:[-1,w]}})}),h=f.map(k=>({vals:t.readSync(k.dataId),shape:k.shape})),g=C.computeOutShape(f.map(k=>k.shape),1),b=f[0].shape[0]===1,x=cW(h,g,n,b),T=C.computeOutShape(r.map(k=>k.shape),e),I=t.makeTensorInfo(T,n,x);return f.forEach(k=>t.disposeData(k.dataId)),I}let s=t.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>s){let f=[];for(let g=0;g<r.length;g+=s){let b=r.slice(g,g+s);f.push(pd(b,e,t))}let h=pd(f,e,t);for(let g of f)t.disposeData(g.dataId);return h}let{tensors2D:a,outShape:i}=Ume(r,e,t),u=a.map(f=>f.shape),l=new oD(u),p=[],m=new Array(u.length-1);if(m.length>0){m[0]=u[0][1],p.push({type:"int32",data:[m[0]]});for(let f=1;f<m.length;f++)m[f]=m[f-1]+u[f][1],p.push({type:"int32",data:[m[f]]})}let c=t.runWebGPUProgram(l,a,a[0].dtype,p);a.forEach(f=>t.disposeData(f.dataId));let d=Fe({inputs:{x:c},backend:t,attrs:{shape:i}});return t.disposeData(c.dataId),d}function Ume(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>Fe({inputs:{x:s},backend:t,attrs:{shape:[y.sizeFromShape(s.shape.slice(0,e)),y.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function sD(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(l=>l.shape),s);if(y.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(l=>y.sizeFromShape(l.shape)>0);if(i.length===1)return ir({inputs:{x:i[0]},backend:t});let u=i.map(l=>l.shape);return C.assertParamsConsistent(u,s),pd(i,s,t)}var sK={kernelName:ls,backendName:"webgpu",kernelFunc:sD};function Wme(r,e,t,n,o=!1,s=null,a=!1,i=4,u=4,l=4){let p=M=>{switch(M){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${M} is not supported.`)}},m=M=>{switch(M){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${M} is not supported.`)}},c=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,d=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",h=r?"uniforms.xShape[2]":"uniforms.xShape[3]",g=r?"row":"col",b=r?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${b} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${b} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${b} % inChannels;
      var resData = ${cr(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {
        ${c}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${p(i)}
      }
      return resData;`,T=r?e&&n?`
      let col = colIn * ${i};
      ${x}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${cr(i)}(0.0);`:n&&t?`
      let col = colIn * ${i};
      ${x}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${cr(i)}(0.0);`,I=`${m(u)}`,k=cr(l),w=r?cr(i):cr(u),R=r?cr(u):cr(i);return`
      ${Hr(s,a,l===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${w} {
        ${r?T:I}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${R} {
        ${r?I:T}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {
        let col = colIn * ${l};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${d}
        ${Zs(o,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var aD=class{constructor(e,t,n,o,s=!1,a=null,i=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=lg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=pg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),s&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.addBias=s,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=o%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let e=this.isVec4?dg(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize,!this.isChannelsLast):cg(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),t=this.isVec4?[this.isChannelsLast?this.innerElementSize:4,4,4]:[1,1,1];return`
    ${Wme(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}};function aK(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function Kme({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=t.dataFormat==="channelsLast",l=!u,p=!1,m=u&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",c=[],d,f;if(m){let b=t.inHeight*t.inWidth*t.inChannels;d=Fe({inputs:{x:r},backend:n,attrs:{shape:[1,t.batchSize,b]}}),f=Fe({inputs:{x:e},backend:n,attrs:{shape:[1,b,t.outChannels]}})}else d=Fe({inputs:{x:r},backend:n,attrs:{shape:u?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),f=Fe({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(c.push(d),c.push(f),s!=null){let b=aK(s.shape,u);b!=null&&(s=Fe({inputs:{x:s},backend:n,attrs:{shape:b}}),c.push(s))}if(o!=null){let b=aK(o.shape,u);b!=null&&(o=Fe({inputs:{x:o},backend:n,attrs:{shape:b}}),c.push(o))}let h=ud({a:u?d:f,b:u?f:d,transposeA:l,transposeB:p,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=Fe({inputs:{x:h},backend:n,attrs:{shape:t.outShape}});c.push(h);for(let b of c)n.disposeData(b.dataId);return g}function AT({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=o!=null,l=s!=null,p=t.dataFormat==="channelsLast";if(p&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID"||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID"))return Kme({x:r,filter:e,convInfo:t,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});let c=p?t.outHeight*t.outWidth:t.outChannels,d=p?t.outChannels:t.outHeight*t.outWidth,f=t.filterHeight*t.filterWidth*t.inChannels,h=[t.padInfo.top,t.padInfo.left],g=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...h]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[c]},{type:"int32",data:[d]},{type:"int32",data:[f]}],b=new aD(t,c,d,f,u,i,l),x=[],T=[r,e];u&&(!p&&o.shape.length===1&&(o=Fe({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}}),x.push(o)),T.push(o)),l&&(!p&&s.shape.length===1&&(s=Fe({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),x.push(s)),T.push(s)),i==="leakyrelu"&&(g.push({type:"float32",data:[a]}),b.uniforms+=" alpha : f32,");let I=n.runWebGPUProgram(b,T,r.dtype,g);for(let k of x)n.disposeData(k.dataId);return I}function Vme(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=t,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m);return AT({x:o,filter:s,convInfo:c,backend:n})}var iK={kernelName:io,backendName:"webgpu",kernelFunc:Vme};function Hme(r=4){let e=s=>{switch(s){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${s} is not supported.`)}},n=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${cr(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${cr(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${cr(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${cr(r)} {
    let col = colIn * ${r};
    ${n}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${cr(r)} {
    let col = colIn * ${r};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(r)}
    }
    return ${cr(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${cr(r)}) {
    let col = colIn * ${r};
    if (row < uniforms.dimAOuter && (col + ${r-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var iD=class{constructor(e){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e.inShape,y.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=lg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=pg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.innerElementSize=4,this.variableTypes=["vec4<f32>","f32"]):this.innerElementSize=this.elementsPerThread[0],this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}_${this.innerElementSize}`}getUserCode(){let e=this.isVec4?dg(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize):cg(this.elementsPerThread,this.workGroupSize);return`
    ${Hme(this.isVec4?4:1)}
    ${e}
    `}};var uD=class{constructor(e){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.inShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${ve()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function qme(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(l),c=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if(B().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new uD(c);else{f=new iD(c);let h=c.inShape[1]*c.inShape[2],g=c.inShape[3],b=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return t.runWebGPUProgram(f,[o,s],"float32",d)}var uK={kernelName:uo,backendName:"webgpu",kernelFunc:qme};var jme=ft({opType:2}),lK={kernelName:lo,backendName:"webgpu",kernelFunc:jme};var Xme=ft({opType:3}),pK={kernelName:po,backendName:"webgpu",kernelFunc:Xme};var lD=class{constructor(e,t,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,u]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${ve()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var Yme=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,p=new lD(o.shape[3],s.shape,i,u),m=[{type:"float32",data:[l]}];return t.runWebGPUProgram(p,[o,s,a],"float32",m)},mK={kernelName:pa,backendName:"webgpu",kernelFunc:Yme};var wT=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="index : f32,";this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=o,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",n=this.exclusive?t:`getX(${cK(e,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],s="",a="";return this.exclusive?(s=this.reverse?`end != ${o-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${o}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${ve()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${dK(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${s}) {
           let idx = ${a};
           ${dK(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${cK(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function cK(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function dK(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function NT(r,e,t,n,o,s){let a=e.shape.length,i=C.getAxesPermutation([n],a),u=e;i!=null&&(u=Sn({inputs:{x:e},backend:t,attrs:{perm:i}}));let l=C.getInnerMostAxes(1,a)[0];if(l!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let p=u.shape[l],m=ir({inputs:{x:u},backend:t});for(let c=0;c<=Math.ceil(Math.log2(p))-1;c++){let d=new wT(r,u.shape,!1,s),f=m,h=[{type:"float32",data:[c]}];m=t.runWebGPUProgram(d,[m],m.dtype,h),t.disposeData(f.dataId)}if(o){let c=new wT(r,u.shape,o,s),d=m,f=[{type:"float32",data:[0]}];m=t.runWebGPUProgram(c,[m],m.dtype,f),t.disposeData(d.dataId)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Sn({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeData(m.dataId),t.disposeData(u.dataId),d}return m}function Qme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return NT("*",o,t,s,a,i)}var fK={kernelName:la,backendName:"webgpu",kernelFunc:Qme};function Jme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return NT("+",o,t,s,a,i)}var hK={kernelName:mo,backendName:"webgpu",kernelFunc:Jme};var pD=class{constructor(e,t){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32,";this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function ece(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=[{type:"int32",data:[s]}],g=new pD(f,a);return t.runWebGPUProgram(g,[o],o.dtype,h)}var gK={kernelName:ma,backendName:"webgpu",kernelFunc:ece};var mD=class{constructor(e,t,n,o=!1,s=null,a=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[16,16,1];this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=s,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,o=this.workGroupSize[0]+this.filterWidth-1;return`
      ${Hr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${o}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Bp()}
      fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(local_invocation_index) LocalIndex: u32,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${o}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Zs(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var bg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[4,4,4];this.isVec4=!0;this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,4,1]),y.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}`}getUserCode(){let e=4+this.convInfo.filterWidth-1;return`
      ${Hr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, row, col, channel);
        }
        return value;
      }
      ${Bp()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * 4;
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          for (var i = 0; i < ${e}; i++)
          {
            xVals[i] = readX(batch, xR, xCCorner + i, d1);
          }
          for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
            let wValue = getW(wR, wC, d1, 0);
            dotProd[0] = dotProd[0] + xVals[0 + wC] * wValue;
            dotProd[1] = dotProd[1] + xVals[1 + wC] * wValue;
            dotProd[2] = dotProd[2] + xVals[2 + wC] * wValue;
            dotProd[3] = dotProd[3] + xVals[3 + wC] * wValue;
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Zs(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var yg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`;this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${Hr(this.activation,this.hasPreluActivation,!1,4)}

      ${Za()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${Zs(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function tce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(u),c=l;c==null&&(c=[1,1]);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,p,!0,m),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inHeight,d.inWidth]}],h=d.dataFormat==="channelsLast",g;return!h&&d.inHeight>16&&d.inWidth>16&&d.strideHeight===1&&d.strideWidth===1&&d.dilationWidth===1&&d.dilationHeight===1&&d.inChannels===d.outChannels?g=new mD(d.outShape,d.filterHeight,d.filterWidth):h&&d.inHeight>4&&d.inWidth>4&&d.strideHeight===1&&d.strideWidth===1&&d.inChannels===d.outChannels&&d.dilationHeight===1&&d.dilationWidth===1&&d.inChannels%4===0?g=new bg(d):(g=new yg(d),f.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]})),t.runWebGPUProgram(g,[o,s],o.dtype,f)}var bK={kernelName:co,backendName:"webgpu",kernelFunc:tce};var cD=Nt({opType:0,cpuKernelImpl:wW,supportsComplex:!0}),yK={kernelName:Po,backendName:"webgpu",kernelFunc:cD};var dD=class{constructor(e,t){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32,";this.size=!0;this.inputShape=[e.batchSize,e.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ve()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function wi(r,e,t,n,o){let s=r.shape.length,a=[],i=y.parseAxisParam(e,r.shape),u=i,l=C.getAxesPermutation(u,s),p=r;l!=null&&(p=Sn({inputs:{x:r},attrs:{perm:l},backend:o}),u=C.getInnerMostAxes(u.length,s),a.push(p)),C.assertAxesAreInnerMostDims(n,u,s);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=m;t&&(d=C.expandShapeToKeepDim(m,i));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([p])){let h=o.tensorMap.get(p.dataId).values;switch(n){case"max":let g=SW(h,y.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:b,outShape:x,outDtype:T}=PW(p.shape,p.dtype,h,u);f=o.makeTensorInfo(x,T,b);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=y.sizeFromShape(c),b=y.sizeFromShape(p.shape)/h,x={windowSize:h,inSize:h,batchSize:b,outSize:1},T=n==="mean"?"float32":Qi(r.dtype),I=[{type:"int32",data:[h]}],k=new dD(x,n),w=o.runWebGPUProgram(k,[p],T,I);a.push(w),f=Fe({inputs:{x:w},attrs:{shape:d},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),f}function xg(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return wi(o,s,a,"sum",t)}var xK={kernelName:Wo,backendName:"webgpu",kernelFunc:xg};function rce(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:b,expandDims:x}=C.getEinsumPermutation(d,u[g]),T;C.isIdentityPermutation(b)?T=s[g]:(T=Sn({inputs:{x:s[g]},backend:t,attrs:{perm:b}}),f.push(T));let I=T.shape.slice();for(let k=0;k<x.length;++k)I.splice(x[k],0,1);y.arraysEqual(T.shape,I)||(T=Fe({inputs:{x:T},backend:t,attrs:{shape:I}}),f.push(T)),c===null?c=T:(c=cD({inputs:{a:T,b:c},backend:t}),f.push(c))}h<m-1&&(l[h]>=0&&(c=xg({inputs:{x:c},backend:t,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeData(h.dataId);return c}var TK={kernelName:Fu,backendName:"webgpu",kernelFunc:rce};var nce=ft({opType:4}),IK={kernelName:ho,backendName:"webgpu",kernelFunc:nce};var oce=Nt({opType:4,dtype:"bool",cpuKernelImpl:dW}),CK={kernelName:ca,backendName:"webgpu",kernelFunc:oce};var fD=ft({opType:5,cpuKernelImpl:fW,dtype:"float32"}),kK={kernelName:go,backendName:"webgpu",kernelFunc:fD};function DT(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),Fe({inputs:{x:s},backend:n,attrs:{shape:i}})}var SK={kernelName:ps,backendName:"webgpu",kernelFunc:DT};var sce=ft({opType:6,cpuKernelImpl:hW}),vK={kernelName:da,backendName:"webgpu",kernelFunc:sce};var hD=class{constructor(e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var AK={kernelName:fa,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new hD(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var ace=ft({opType:7,cpuKernelImpl:gW}),wK={kernelName:bo,backendName:"webgpu",kernelFunc:ace};var ice=Nt({opType:12,dtype:"int32"}),NK={kernelName:yo,backendName:"webgpu",kernelFunc:ice};var gD=class{constructor(e,t,n=!1){this.isFromPixels=!0;this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${ve()}
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var DK={kernelName:_l,backendName:"webgpu",kernelFunc:uce},md,bD=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),PT=new Map;function uce(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,l=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[p,m]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,p,s],d=B().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&a,f=a||i;if(l||u||f){let x;if(d){let L=o;if(!PT.has(L)||PT.get(L).expired){let z={source:L};PT.set(L,t.device.importExternalTexture(z))}x={width:p,height:m,format:null,usage:null,texture:PT.get(L)}}else{if(f){let V=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(md==null||V!==bD)&&(bD=V,md=document.createElement("canvas").getContext("2d",{willReadFrequently:bD})),md.canvas.width=p,md.canvas.height=m,md.drawImage(o,0,0,p,m),o=md.canvas}let L=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,z="rgba8unorm",W=t.textureManager.acquireTexture(c[1],c[0],z,L);t.queue.copyExternalImageToTexture({source:o},{texture:W},[c[1],c[0]]),x={width:p,height:m,format:z,usage:L,texture:W}}let T=y.sizeFromShape(c),I=y.computeStrides(c),k=new gD(c,s,d),w=[{type:"uint32",data:[T]},{type:"uint32",data:[s]},{type:"uint32",data:[...I]}],R=t.makeTensorInfo([m,p],"int32"),F=t.tensorMap.get(R.dataId);F.resourceInfo=x;let M=t.runWebGPUProgram(k,[R],"int32",w);return t.disposeData(R.dataId),M}let h=o.data,g=h;if(s!=null&&s!==4){g=new Uint8Array(o.width*o.height*s);let x=h.length,T=0;for(let I=0;I<x;I++)I%4<s&&(g[T++]=h[I])}let b=t.makeTensorInfo(c,"int32",new Int32Array(g));return t.uploadToGPU(b.dataId),b}var yD=class{constructor(e,t,n,o,s){this.uniforms="varianceEpsilon : f32,";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${ve()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var PK={kernelName:xo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:u}=e,l=t,p=[n,a,i],m=null;s!=null&&(m=s.shape,p.push(s));let c=null;o!=null&&(c=o.shape,p.push(o));let d=new yD(n.shape,a.shape,i.shape,m,c),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(d,p,n.dtype,f)}};function lce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(p),g=C.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h);return AT({x:o,filter:s,convInfo:g,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:d})}var RK={kernelName:Ss,backendName:"webgpu",kernelFunc:lce};function pce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=p;f==null&&(f=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let h=C.computeConv2DInfo(o.shape,s.shape,u,f,l,m,!0),g=[o,s],b=a!=null,x=i!=null;b&&g.push(a),x&&g.push(i);let T=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],I;return h.inHeight>4&&h.inWidth>4&&h.strideHeight===1&&h.strideWidth===1&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?I=new bg(h,b,c,x):(I=new yg(h,b,c,x),T.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),c==="leakyrelu"&&(T.push({type:"float32",data:[d]}),I.uniforms+=" alpha : f32,"),t.runWebGPUProgram(I,g,"float32",T)}var FK={kernelName:vs,backendName:"webgpu",kernelFunc:pce};var xD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${ar(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function mce(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[u,l,p,m]=C.prepareAndValidate(n,o),c=Fe({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),d=Fe({inputs:{x:n},backend:t,attrs:{shape:[y.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let x=t.readSync(o.dataId),T=t.bufferSync(n),I=bW(x,T,n.dtype,l,a,p,m,n.shape,i);return t.makeTensorInfo(u,n.dtype,I.values)}let f=new xD(a,[l,p]),h=[{type:"int32",data:[a]},{type:"int32",data:m}],g=t.runWebGPUProgram(f,[d,c],d.dtype,h),b=Fe({inputs:{x:g},backend:t,attrs:{shape:u}});return t.disposeData(c.dataId),t.disposeData(d.dataId),t.disposeData(g.dataId),b}var MK={kernelName:ha,backendName:"webgpu",kernelFunc:mce};var TD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=cce(this.aShape);return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function cce(r){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let n=0;n<r.length;n++)n===2?t.push("indexZ"):t.push(`${e[n]}`);return t.join()}function ID(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0],l=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=y.sizeFromShape(s.shape),m=[],c=Fe({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=Fe({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let T=t.tensorMap.get(d.dataId).values,I=xe(d.shape,d.dtype,T),w=t.tensorMap.get(c.dataId).values,R=xe(c.shape,c.dtype,w),F=yW(R,I,f);return m.forEach(M=>t.disposeData(M.dataId)),t.makeTensorInfo(l.outputShape,F.dtype,F.values)}let h=new TD(c.shape,f),g=t.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let b=Fe({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return m.forEach(x=>t.disposeData(x.dataId)),b}var EK={kernelName:ms,backendName:"webgpu",kernelFunc:ID};var dce=Nt({opType:5,cpuKernelImpl:TW,dtype:"bool"}),_K={kernelName:ga,backendName:"webgpu",kernelFunc:dce};var fce=Nt({opType:6,dtype:"bool",cpuKernelImpl:xW}),LK={kernelName:To,backendName:"webgpu",kernelFunc:fce};function hce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=[{type:"float32",data:[s]}],i=new Ja(o.shape,14);return i.uniforms="alpha : f32,",t.runWebGPUProgram(i,[o],"float32",a)}var $K={kernelName:Io,backendName:"webgpu",kernelFunc:hce};var gce=Nt({opType:7,dtype:"bool",cpuKernelImpl:CW}),BK={kernelName:ba,backendName:"webgpu",kernelFunc:gce};var bce=Nt({opType:8,dtype:"bool",cpuKernelImpl:IW}),OK={kernelName:ya,backendName:"webgpu",kernelFunc:bce};var yce=ft({opType:9,cpuKernelImpl:kW}),zK={kernelName:Co,backendName:"webgpu",kernelFunc:yce};var xce=Nt({opType:9,dtype:"bool"}),GK={kernelName:xa,backendName:"webgpu",kernelFunc:xce};var Tce=ft({opType:10}),UK={kernelName:Ta,backendName:"webgpu",kernelFunc:Tce};function CD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n;return wi(o,s,a,"max",t)}var WK={kernelName:ko,backendName:"webgpu",kernelFunc:CD};var Ice=Nt({opType:15,cpuKernelImpl:vW}),KK={kernelName:So,backendName:"webgpu",kernelFunc:Ice};function Cce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=C.computePool2DInfo(o.shape,s,a,l,i,u),m,c=[];if(p.filterHeight===1&&p.filterWidth===1){if(y.arraysEqual(p.inShape,p.outShape))return ir({inputs:{x:o},backend:t});m=new gg(p),c.push({type:"int32",data:[p.strideHeight,p.strideWidth]})}else m=new hg(p,"max"),c.push({type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]});return t.runWebGPUProgram(m,[o],o.dtype,c)}var VK={kernelName:vo,backendName:"webgpu",kernelFunc:Cce};function kce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:a}=n;return wi(o,a,s,"mean",t)}var HK={kernelName:Ao,backendName:"webgpu",kernelFunc:kce};function Sce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return wi(o,s,a,"min",t)}var qK={kernelName:wo,backendName:"webgpu",kernelFunc:Sce};var vce=Nt({opType:16,cpuKernelImpl:AW}),jK={kernelName:No,backendName:"webgpu",kernelFunc:vce};var kD=class{constructor(e,t,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,p)=>`uniforms.pad${p}[0]`).join(","),n=this.xShape.map((l,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=ar(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ve()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${u}));
        }
      }
    `}};var XK={kernelName:Do,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=t,i=o.map(p=>({type:"int32",data:[p[0],p[1]]})),u=new kD(n.shape,o,s);return a.runWebGPUProgram(u,[n],n.dtype,i)}};function Ace(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[a,i]=NW(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o=new Ja(n.shape,11);return t.runWebGPUProgram(o,[n],n.dtype)}var YK={kernelName:cs,backendName:"webgpu",kernelFunc:Ace};function wce(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m}=xr.nonMaxSuppressionV3Impl(l,p,a,i,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var ZK={kernelName:Ca,backendName:"webgpu",kernelFunc:wce};function Nce(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:b}=xr.nonMaxSuppressionV5Impl(p,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var QK={kernelName:ka,backendName:"webgpu",kernelFunc:Nce};function Tg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=Cu({inputs:{input:n},backend:t}),s=Tg({inputs:{x:o},backend:t}),a=Gp({inputs:{input:n},backend:t}),i=Tg({inputs:{x:a},backend:t}),u=Qa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),u}else return rs({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var JK={kernelName:Is,backendName:"webgpu",kernelFunc:Tg};function eV(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Cu({inputs:{input:n},backend:t}),s=eV({inputs:{x:o},backend:t}),a=Gp({inputs:{input:n},backend:t}),i=Tg({inputs:{x:a},backend:t}),u=Qa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),u}else return rs({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var tV={kernelName:ds,backendName:"webgpu",kernelFunc:eV};function Dce(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return DT({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let m=DT({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(m),m}),l=sD({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeData(p.dataId)),l}var rV={kernelName:fs,backendName:"webgpu",kernelFunc:Dce};var SD=class{constructor(e,t){this.variableNames=["x"];this.uniforms="constantValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=ar(e),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${o})`:`${o}`,i=e>1?"any(outC < start)":"outC < start",u=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ve()}
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${u}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}};var vD=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(s.every(l=>y.arraysEqual(l,[0,0])))return ir({inputs:{x:o},backend:t});if(y.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return rs({backend:t,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(l=>i.push({type:"int32",data:[l[0],l[1]]}));let u=new SD(o.shape,s);return t.runWebGPUProgram(u,[o],o.dtype,i)},nV={kernelName:Ro,backendName:"webgpu",kernelFunc:vD};var Pce=Nt({opType:13}),oV={kernelName:Fo,backendName:"webgpu",kernelFunc:Pce};function Rce(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new ld(14,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var sV={kernelName:Mo,backendName:"webgpu",kernelFunc:Rce};function Fce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return wi(o,s,a,"prod",t)}var aV={kernelName:Eo,backendName:"webgpu",kernelFunc:Fce};var Mce=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=RW(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},iV={kernelName:ii,backendName:"webgpu",kernelFunc:Mce};var AD=Nt({opType:3}),uV={kernelName:fo,backendName:"webgpu",kernelFunc:AD};var Ece=ft({opType:12}),lV={kernelName:_o,backendName:"webgpu",kernelFunc:Ece};var _ce=ft({opType:13}),pV={kernelName:Bo,backendName:"webgpu",kernelFunc:_ce};var wD=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Lce(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:a,halfPixelCenters:i}=n,[u,l]=a,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[i?.5:0]}],f=new wD(o.shape,u,l);return t.runWebGPUProgram(f,[o],"float32",d)}var mV={kernelName:$o,backendName:"webgpu",kernelFunc:Lce};var ND=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function $ce(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[s?.5:0]}],f=new ND(o.shape,u,l,a);return t.runWebGPUProgram(f,[o],o.dtype,d)}var cV={kernelName:Lo,backendName:"webgpu",kernelFunc:$ce};var DD=class{constructor(e,t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ve()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var dV={kernelName:Ma,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=new DD(n.shape,s),[l,p]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[{type:"float32",data:[l]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),i.runWebGPUProgram(u,[n],n.dtype,m)}};var Bce=ft({opType:15,cpuKernelImpl:FW}),fV={kernelName:Oo,backendName:"webgpu",kernelFunc:Bce};var Up=class{constructor(e,t,n,o,s,a,i,u=!0){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.sumDupeIndices=u,this.dispatchLayout=Se(e),this.dispatch=he(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}_${u}`;let l=ar(s.length);this.uniforms=`sliceDim : i32, strides: ${l}, size: i32,`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="";this.dispatchLayout.x.length===1?(o="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(o="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${Array.from({length:this.updatesRank},(p,m)=>`coords[${m}]`).join(", ")})`,u=(p,m)=>{let c=`atomicAdd(${p}, bitcast<i32>(${m}))`;this.type==="float32"&&(c=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${m});
            loop {
              let info = atomicCompareExchangeWeak(${p}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${m});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${p}, bitcast<i32>(${m}));`;return this.sumDupeIndices?c:d};return`
    ${s}

      ${ve()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${id(this.type,!1)}(${i});
          let flatIndex = getOutputIndexFromCoords(${o});

          ${u("&result[flatIndex]","updateValue")};
        }
      }`}};function Oce(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=[m/l,l];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=Fe({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),f=Fe({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=f.dtype,g=rs({backend:t,attrs:{shape:c,value:0,dtype:h}}),b=y.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:p},{type:"int32",data:[b]}],T=new Up(f.shape,i,d.shape.length,f.shape.length,p,c,h),I=t.runWebGPUProgram(T,[f,d],h,x,g),k=Fe({inputs:{x:I},backend:t,attrs:{shape:a}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(I.dataId),k}var hV={kernelName:wa,backendName:"webgpu",kernelFunc:Oce};var PD=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);e=s.join(),t=a.join()}return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function zce(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new PD(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(a,[n,o,s],_t(o.dtype,s.dtype))}var gV={kernelName:gs,backendName:"webgpu",kernelFunc:zce};var Gce=ft({opType:18}),bV={kernelName:Go,backendName:"webgpu",kernelFunc:Gce};var Uce=ft({opType:16}),yV={kernelName:zo,backendName:"webgpu",kernelFunc:Uce};var Wce=ft({opType:17}),xV={kernelName:Na,backendName:"webgpu",kernelFunc:Wce};var RD=Nt({opType:2,cpuKernelImpl:BW,supportsComplex:!0}),TV={kernelName:Ho,backendName:"webgpu",kernelFunc:RD};function Kce(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=CD({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),l=Fe({inputs:{x:i},backend:t,attrs:{shape:u}}),p=RD({inputs:{a:o,b:l},backend:t}),m=fD({inputs:{x:p},backend:t}),c=xg({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=Fe({inputs:{x:c},backend:t,attrs:{shape:u}}),f=AD({inputs:{a:m,b:d},backend:t});return t.disposeData(i.dataId),t.disposeData(l.dataId),t.disposeData(p.dataId),t.disposeData(m.dataId),t.disposeData(c.dataId),t.disposeData(d.dataId),f}var IV={kernelName:Ko,backendName:"webgpu",kernelFunc:Kce};var Vce=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((b,x)=>b*x),u=[[0,0]];u.push(...a);for(let b=1+s.length;b<o.shape.length;++b)u.push([0,0]);let l=[],p=vD({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(p.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(p.shape,s,i,!1),f=Fe({inputs:{x:p},backend:t,attrs:{shape:m}}),h=Sn({inputs:{x:f},backend:t,attrs:{perm:c}}),g=Fe({inputs:{x:h},backend:t,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(b=>t.disposeData(b.dataId)),g},CV={kernelName:ys,backendName:"webgpu",kernelFunc:Vce};var FD=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Hce(this.rank,"uniforms.");return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Hce(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function MD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>y.decodeString(c)):u,p=xe(o.shape,o.dtype,l),m=OW(p,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new FD(o.shape,s);return t.runWebGPUProgram(a,[o],o.dtype)}var kV={kernelName:wn,backendName:"webgpu",kernelFunc:MD};function qce(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let F=t.bufferSync(o),M=t.bufferSync(s),L=y.decodeString(t.readSync(a.dataId)[0]),z=MW(F,M,i,c,p,l,u,m,L,d);return t.makeTensorInfo(i,z.dtype,z.values)}let f=[c/p,p],h=Fe({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),g=s.shape.length?Fe({inputs:{x:s},backend:t,attrs:{shape:[l,p]}}):ir({inputs:{x:s},backend:t}),b=g.dtype,x=t.makeTensorInfo([],b,y.makeZerosTypedArray(1,b)),T=Fe({inputs:{x:a},backend:t,attrs:{shape:Array(f.length).fill(1)}}),I=MD({inputs:{x:T},backend:t,attrs:{reps:f}}),k=y.sizeFromShape([l,p]),w=[{type:"int32",data:[u]},{type:"int32",data:m},{type:"int32",data:[k]}];switch(l){case 0:break;case 1:{let F=new Up([l,p],u,h.shape.length,g.shape.length,m,f,b,d);t.runWebGPUProgram(F,[g,h],b,w,I)}break;default:{let F=new Up([l,p],u,h.shape.length,x.shape.length,m,f,b,d);t.runWebGPUProgram(F,[x,h],b,w,I)}{let F=new Up([l,p],u,h.shape.length,g.shape.length,m,f,b);t.runWebGPUProgram(F,[g,h],b,w,I)}}let R=Fe({inputs:{x:I},backend:t,attrs:{shape:i}});return t.disposeData(h.dataId),t.disposeData(g.dataId),t.disposeData(T.dataId),t.disposeData(x.dataId),t.disposeData(I.dataId),R}var SV={kernelName:zu,backendName:"webgpu",kernelFunc:qce};function jce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=ei({inputs:{x:o},backend:t,attrs:{begin:p,size:d}});return p[i]+=c,f})}var vV={kernelName:xs,backendName:"webgpu",kernelFunc:jce};var Xce=ft({opType:19}),AV={kernelName:Uo,backendName:"webgpu",kernelFunc:Xce};var wV={kernelName:ui,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new Ja(t.shape,20);return n.runWebGPUProgram(o,[t],t.dtype)}};var Yce=Nt({opType:11}),NV={kernelName:Vo,backendName:"webgpu",kernelFunc:Yce};var ED=class{constructor(e){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=ar(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${ve()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Zce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:I}=Tt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=Fe({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=Tt.computeOutShape(x,T,I),R=ei({inputs:{x:o},backend:t,attrs:{begin:x,size:w}});k=Fe({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeData(R.dataId)}else if(t.shouldExecuteOnCPU([o])){let R=t.readSync(o.dataId),F=xe(o.shape,o.dtype,R),M=LW(d,F,I,x);k=t.makeTensorInfo(f,o.dtype,M.values)}else{let R=new ED(d),F=[{type:"int32",data:x},{type:"int32",data:I}],M=t.runWebGPUProgram(R,[o],o.dtype,F);k=Fe({inputs:{x:M},backend:t,attrs:{shape:f}}),t.disposeData(M.dataId)}return k}var DV={kernelName:Da,backendName:"webgpu",kernelFunc:Zce};function Qce(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=e,c=t.readSync(p.dataId),d=t.readSync(m.dataId),[f,h]=$W(c,d,o,s,a,i,u,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var PV={kernelName:li,backendName:"webgpu",kernelFunc:Qce};var Jce=ft({opType:21}),RV={kernelName:qo,backendName:"webgpu",kernelFunc:Jce};var _D=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${ve()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},LD=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${ve()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function cd(r,e){e!==null&&r.disposeData(e.dataId)}function FV(r){let e=1;for(;e<r;)e*=2;return e}function ede(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=o.shape,u=i[i.length-1];if(t.shouldExecuteOnCPU([o])){let k=t.readSync(o.dataId),[w,R]=zW(k,i,o.dtype,s,a);return[t.makeTensorInfo(w.shape,w.dtype,w.values),t.makeTensorInfo(R.shape,R.dtype,R.values)]}if(s===0)return i[i.length-1]=0,[t.makeTensorInfo(i,o.dtype,[]),t.makeTensorInfo(i,"int32",[])];if(u===1)return[o,rs({attrs:{shape:i,dtype:"int32",value:0},backend:t})];let p=y.sizeFromShape(i)/u,m=Fe({inputs:{x:o},attrs:{shape:[p,u]},backend:t}),c=FV(s),d=FV(u),f=null,h=()=>f===null?[m,m]:[m,f],g=(k,w,R)=>{let F=h(),M=new _D(R),z=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[w]}],W=f;f=t.runWebGPUProgram(M,F,"int32",z),cd(t,W)};for(let k=1;k<c;k*=2){let w=k*2;for(let R=k;R>=1;R/=2)g(w,R,[p,d])}for(let k=d;k>c;k/=2){let w=h(),R=new LD([p,k/2]),M=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],L=f;f=t.runWebGPUProgram(R,w,"int32",M),cd(t,L);let z=c/2,W=z*2;for(let V=z;V>=1;V/=2)g(W,V,f.shape)}let b=f;f=ei({inputs:{x:f},backend:t,attrs:{begin:0,size:[p,s]}}),cd(t,b);let x=ID({inputs:{x:m,indices:f},backend:t,attrs:{axis:1,batchDims:1}});cd(t,m);let T=i.slice(0,-1);T.push(s),b=f,f=Fe({inputs:{x:f},attrs:{shape:T},backend:t}),cd(t,b);let I=x;return x=Fe({inputs:{x},attrs:{shape:T},backend:t}),cd(t,I),[x,f]}var MV={kernelName:Ra,backendName:"webgpu",kernelFunc:ede};var $D=class{constructor(e){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ve()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function tde(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=new $D(g),x=a==="nearest"?1:2,T;switch(i){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}let I=[{type:"int32",data:[x]},{type:"int32",data:[T]},{type:"float32",data:[u]}];return t.runWebGPUProgram(b,[o,s],"float32",I)}var EV={kernelName:Fa,backendName:"webgpu",kernelFunc:tde};function rde(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=ei({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),b=Fe({inputs:{x:g},backend:t,attrs:{shape:l}});f[h]=b,m.push(g)}return m.forEach(h=>t.disposeData(h.dataId)),f}var _V={kernelName:Ts,backendName:"webgpu",kernelFunc:rde};var nde=[iW,UW,WW,KW,HW,qW,jW,XW,ZW,tK,rK,nK,lW,sK,iK,uK,lK,pK,mK,fK,hK,gK,bK,TK,IK,CK,kK,SK,vK,sW,AK,DK,wK,NK,PK,RK,FK,MK,EK,_K,LK,uW,oK,$K,BK,OK,zK,GK,UK,WK,KK,VK,HK,qK,jK,XK,yK,YK,ZK,QK,QW,tV,rV,nV,oV,sV,aV,iV,JW,uV,lV,pV,aW,mV,cV,dV,fV,hV,gV,bV,yV,xV,YW,DV,PV,IV,CV,SV,vV,AV,wV,NV,TV,xK,RV,kV,MV,EV,VW,_V,JK];for(let r of nde)Zi(r);var BD=class{constructor(e){this.device=e;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let o=LV(e,t);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(a),a}this.numBytesAllocated+=e;let s=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(o).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let o=LV(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function LV(r,e){return`${r}_${e}`}var OD=class{constructor(e){this.device=e;this.numUsedTextures=0;this.numFreeTextures=0;this.freeTextures=new Map;this.usedTextures=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireTexture(e,t,n,o){let s=BV(n),a=e*t*s,i=$V(e,t,n,o);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let l=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(l),l}this.numBytesAllocated+=a;let u=this.device.createTexture({size:[e,t],format:n,usage:o});return this.usedTextures.get(i).push(u),u}releaseTexture(e,t,n,o,s){if(this.freeTextures.size===0)return;let a=$V(t,n,o,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),u=i.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(u,1);let l=BV(o),p=t*n*l;this.numBytesUsed-=p}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function $V(r,e,t,n){return`${r}_${e}_${t}_${n}`}function BV(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}var ode=B().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),sde=(r,e)=>{let t=r.limits.maxComputeWorkgroupsPerDimension,n=e.dispatchLayout,o=e.dispatch;if(o.every(a=>a<=t))return o;y.assert(o[0]>t&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(o[0]));return s>t?(s=Math.ceil(Math.cbrt(o[0])),y.assert(s<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},zD=class extends as{constructor(e){super();this.commandQueueOwnedIds=new WeakSet;this.dispatchNumberInEncoder=0;this.disposed=!1;this.downloadWaitMs=0;this.tensorDataPendingDisposal=[];this.stagingPendingDisposal=[];this.uniformPendingDisposal=[];this.uploadWaitMs=0;if(!mg())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query"),this.bufferManager=new BD(this.device),this.textureManager=new OD(this.device),this.tensorMap=new ri(this,Rn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return zD.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:o}=this.tensorMap.get(e);return o!=null&&(this.disposeData(o.real.dataId,t),this.disposeData(o.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resourceInfo)){if("texture"in t.resourceInfo){let n=t.resourceInfo;n.texture instanceof GPUTexture&&this.textureManager.releaseTexture(n.texture,n.width,n.height,n.format,n.usage),n.texture=null}else{let n=t.resourceInfo;this.bufferManager.releaseBuffer(n.buffer,n.size,n.usage),n.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.tensorMap.set(o,{dtype:n,shape:t,values:e,refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:o,shape:n,values:t,refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(y.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),o}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=s[0],i=s[1];o=C.mergeRealAndImagArrays(a,i)}else{let s=t.resourceInfo,a=await this.getBufferData(s.buffer,s.size);o=ON(a,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:o,shape:s,resourceInfo:a}=t;if(o==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let i=a.size,u=this.bufferManager.acquireBuffer(i,a.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,u,0,i),this.submitQueue();let l=this.makeTensorInfo(s,o),p=Rn().makeTensorFromTensorInfo(l),m=this.tensorMap.get(l.dataId);return m.resourceInfo={size:i,usage:this.defaultGpuBufferUsage(),buffer:u},{tensorRef:p,buffer:u,bufSize:i}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>y.decodeString(o));return xe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,t)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(s);return i.kernelMs=y.sum(u),i.getExtraProfileInfo=()=>u.map((l,p)=>({name:a[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,t,n){return t==="string"&&n!=null&&n.length>0&&y.isString(n[0])&&(n=n.map(s=>y.encodeString(s))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){let o=t.resourceInfo;return o.texture instanceof GPUExternalTexture?o.texture:o.texture.createView()}let n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.resourceInfo)return;let n=BN(t.dtype)*y.sizeFromShape(t.shape),o=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:o},t.values){let s=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),a=s.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),s.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(s,0,o,0,n);let i={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:s};this.stagingPendingDisposal.push(i)}}makeUniforms(e){let t=0,n=0,o=[];e.forEach(u=>{u.data.length===0&&(u.data=[1]);let l;switch(u.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:y.assert(!1,()=>`Unsupported ${u.data.length}D shape`)}(n===5||n===6)&&(l=16),t=Math.ceil(t/l)*l,n=u.data.length,o.push(t),t+=u.data.length*4});let s=new ArrayBuffer(t);e.forEach((u,l)=>{let p=o[l];u.type==="int32"?new Int32Array(s,p,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(s,p,u.data.length).set(u.data):new Float32Array(s,p,u.data.length).set(u.data)});let a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(a,0,s,0,t);let i={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:a};return this.uniformPendingDisposal.push(i),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,n,o,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),y.sizeFromShape(s.shape)===0)return this.tensorMap.get(s.dataId).values=y.getTypedArrayFromDType(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=sde(this.device,e);let a=[],i=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]}),i=t.concat(s).map(b=>b.shape);let h="int32";i.map(b=>{a.push({type:h,data:b})});let g=y.computeStrides(s.shape);if(a.push({type:h,data:g}),e.size){let b=y.sizeFromShape(e.outputShape);a.push({type:h,data:[e.isVec4?b/4:b]})}}let u=t.map((h,g)=>{if(h.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(h.dataId),{dtype:this.tensorMap.get(h.dataId).dtype,shape:h.shape,name:e.variableNames[g]}}),l=nW(e,i,u,s),p;l in this.pipelineCache?p=this.pipelineCache[l]:(p=rW(this.device,e,u,s),this.pipelineCache[l]=p),o&&(a=[...a,...o]);let m=[this.tensorToBinding(s),...t.map(h=>this.tensorToBinding(h)),this.makeUniforms(a)],c=this.device.createBindGroup({layout:p.getBindGroupLayout(0),entries:m.map((h,g)=>({binding:g,resource:h}))});this.ensureCommandEncoderReady();let d=this.getComputePass(),f=this.activeTimers!=null;return f&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,0),d.setPipeline(p),d.setBindGroup(0,c),d.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),f&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(h=>{this.commandQueueOwnedIds.add(h.dataId)}),this.commandQueueOwnedIds.add(s.dataId),B().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),f&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}async getTimeFromQuerySet(e){let t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=ode){return B().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resourceInfo==null&&y.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},dd=zD;dd.nextDataId=0;var OV={};je(OV,{WebGPUBackend:()=>dd,webgpu_util:()=>ST});mg()&&Yu("webgpu",async()=>{B().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:B().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t=e.limits,n={},o=e.features.has("timestamp-query");n.requiredLimits={maxComputeWorkgroupStorageSize:t.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.maxStorageBufferBindingSize},o&&(n.requiredFeatures=["timestamp-query"]);let s=await e.requestDevice(n);return new dd(s)},3);var Je=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(Je||{}),Wp=(i=>(i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu",i))(Wp||{});var zV;function ade(r){zV=r.wasm.cwrap(ks,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function ide(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=0;if(a!=null){let F=t.dataIdMap.get(a.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);f=F.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=Wp[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let b=u?o.shape[2]:o.shape[1],x=l?s.shape[1]:s.shape[2],T=Dr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),I=t.makeOutput([...T,b,x],o.dtype),k=t.dataIdMap.get(I.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer),R=new Uint8Array(new Int32Array(s.shape).buffer);return zV(c,w,o.shape.length,d,R,s.shape.length,u,l,g,f,h,m||0,k),I}var GV={kernelName:ks,backendName:"wasm",setupFunc:ade,kernelFunc:ide};function lt(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,u=a.dataIdMap.get(i.dataId).id,l=a.makeOutput(i.shape,e||i.dtype),p=a.dataIdMap.get(l.dataId).id;return y.sizeFromShape(l.shape)===0||t(u,Je[i.dtype],p),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var UV=lt(is);function ht(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:u}=a,{a:l,b:p}=u,m=i.dataIdMap.get(l.dataId).id,c=i.dataIdMap.get(p.dataId).id,d=t??l.dtype,f=C.assertAndGetBroadcastShape(l.shape,p.shape),h=i.makeOutput(f,d);if(y.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),b=new Uint8Array(new Int32Array(p.shape).buffer),x=i.dataIdMap.get(h.dataId).id;return(()=>n(m,g,l.shape.length,c,b,p.shape.length,Je[l.dtype],x))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var ude=!0,WV=ht(An,ude);var KV;function lde(r){KV=r.wasm.cwrap(ro,null,["array","number","number","number"])}function pde(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(y.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return KV(s,o.length,Je[n.dtype],a),n}var VV={kernelName:ro,backendName:"wasm",setupFunc:lde,kernelFunc:pde};function Kp(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var HV={kernelName:Wn,backendName:"wasm",kernelFunc:Kp};var qV;function mde(r){qV=r.wasm.cwrap(Nn,null,["number","array","number","number","number","array","number"])}function ns(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=dde(e.x.shape,n.perm),a=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(a=!1);let i=cde(e.x.shape,n.perm),u={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let f=Kp({inputs:e,backend:t});return f.shape=i,f}let l=t.makeOutput(i,u.dtype),p=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(l.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(u.shape).buffer);return qV(p,d,u.shape.length,Je[u.dtype],m,c,s.length),l}function cde(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function dde(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var jV={kernelName:Nn,backendName:"wasm",kernelFunc:ns,setupFunc:mde};function vn(r,e,t){let n=r.shape,o=r.shape.length,s=y.parseAxisParam(e,n),a=s,i=C.getAxesPermutation(a,o),u=null,l=!1;if(i!=null){let p=new Array(o);for(let d=0;d<p.length;d++)p[d]=n[i[d]];a=C.getInnerMostAxes(a.length,o),u=ns({inputs:{x:r},attrs:{perm:i},backend:t});let m=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(u.dataId).id!==m&&(l=!0)}return{transposed:u,originalAxes:s,axes:a,inputWasTransposed:l}}var XV;function fde(r){XV=r.wasm.cwrap(Ri,null,["number, number, number"])}function hde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,e);if(d){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let f=l.shape.length;C.assertAxesAreInnerMostDims("all",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),x=e.makeOutput(h,a.dtype);if(y.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;XV(u,b,T)}if(d&&e.disposeData(p.dataId),s){let T=C.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var YV={kernelName:Ri,backendName:"wasm",setupFunc:fde,kernelFunc:hde};var ZV;function gde(r){ZV=r.wasm.cwrap(Fi,null,["number, number, number"])}function bde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,e);if(d){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let f=l.shape.length;C.assertAxesAreInnerMostDims("any",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),x=e.makeOutput(h,a.dtype);if(y.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;ZV(u,b,T)}if(d&&e.disposeData(p.dataId),s){let T=C.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var QV={kernelName:Fi,backendName:"wasm",setupFunc:gde,kernelFunc:bde};var JV;function yde(r){JV=r.wasm.cwrap(no,null,["number","number","number","number","number"])}function xde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,u=s,{transposed:l,axes:p,inputWasTransposed:m}=vn(s,o,e);if(m){let b=e.dataIdMap.get(l.dataId).id;b!==a&&(u=l,i=b)}let c=u.shape.slice(0,-1),d=e.makeOutput(c,"int32"),f=e.dataIdMap.get(d.dataId).id,h=y.sizeFromShape(d.shape),g=u.shape[p[0]];return JV(i,Je[u.dtype],h,g,f),m&&e.disposeData(l.dataId),d}var e4={kernelName:no,backendName:"wasm",kernelFunc:xde,setupFunc:yde};var t4;function Tde(r){t4=r.wasm.cwrap(oo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ide(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=t,p=C.computePool2DInfo(o.shape,a,i,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,b=p.strideHeight,x=p.strideWidth,T=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let I=n.makeOutput(p.outShape,"float32"),k=n.dataIdMap.get(I.dataId).id;return t4(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,x,T,k),I}var r4={kernelName:oo,backendName:"wasm",setupFunc:Tde,kernelFunc:Ide};function fr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s);return y.assert(s===y.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var n4={kernelName:hs,backendName:"wasm",kernelFunc:fr};var o4;function Cde(r){o4=r.wasm.cwrap(so,null,["number","array","number","number","array","number","number","number","number"])}function kde(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[l-1]:s.shape[l-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),T=Dr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,p,c]:[g,c,p],k=i?[b,d,m]:[b,m,d],w=fr({inputs:{x:o},backend:t,attrs:{shape:I}}),R=fr({inputs:{x:s},backend:t,attrs:{shape:k}}),F=t.dataIdMap.get(w.dataId).id,M=t.dataIdMap.get(R.dataId).id,L=a?w.shape[2]:w.shape[1],z=i?R.shape[1]:R.shape[2],W=Math.max(g,b),V=t.makeOutput([W,L,z],w.dtype),j=t.dataIdMap.get(V.dataId).id,q=new Uint8Array(new Int32Array(w.shape).buffer),Y=new Uint8Array(new Int32Array(R.shape).buffer);return o4(F,q,w.shape.length,M,Y,R.shape.length,a,i,j),t.disposeData(w.dataId),t.disposeData(R.dataId),V.shape=T,V}var s4={kernelName:so,backendName:"wasm",setupFunc:Cde,kernelFunc:kde};function Qs(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=Tt.parseSliceParams(e,t,n),i=Tt.isSliceContinous(e.shape,s,a),u=o.readSync(e.dataId),l=o.makeOutput(a,e.dtype),p=y.computeStrides(e.shape),m=o.dataIdMap.get(l.dataId);if(i){let f=Tt.computeFlatOffset(s,p);return e.dtype==="string"?m.stringBytes=u.slice(f,f+y.sizeFromShape(a)):o.typedArrayFromHeap(l).set(u.subarray(f,f+y.sizeFromShape(a))),l}if(e.dtype==="string"){let f=Ip(u,s,a,e.shape,e.dtype);return m.stringBytes=f,l}let c=o.typedArrayFromHeap(l),d=e.shape.length;if(d===2)Sde(u,p[0],c,s,a);else if(d===3)vde(u,p[0],p[1],c,s,a);else if(d===4)Ade(u,p[0],p[1],p[2],c,s,a);else{let f=Ip(u,s,a,e.shape,e.dtype);c.set(f)}return l}function Sde(r,e,t,n,o){let s=0,a=n[0],i=n[1],u=a+o[0];for(let l=a;l<u;l++){let p=l*e+i;t.set(r.subarray(p,p+o[1]),s),s+=o[1]}}function vde(r,e,t,n,o,s){let a=0,i=o[0],u=o[1],l=o[2],p=i+s[0],m=u+s[1];for(let c=i;c<p;c++)for(let d=u;d<m;d++){let f=c*e+d*t+l;n.set(r.subarray(f,f+s[2]),a),a+=s[2]}}function Ade(r,e,t,n,o,s,a){let i=0,u=s[0],l=s[1],p=s[2],m=u+a[0],c=l+a[1],d=p+a[2],f=s[3];for(let h=u;h<m;h++)for(let g=l;g<c;g++)for(let b=p;b<d;b++){let x=h*e+g*t+b*n+f;o.set(r.subarray(x,x+a[3]),i),i+=a[3]}}var a4={kernelName:bs,backendName:"wasm",kernelFunc:Qs};function wde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n,i=s.reduce((b,x)=>b*x),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=fr({inputs:{x:o},backend:t,attrs:{shape:u}}),f=ns({inputs:{x:d},backend:t,attrs:{perm:l}}),h=fr({inputs:{x:f},backend:t,attrs:{shape:p}}),g=Qs({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(d.dataId),g}var i4={kernelName:us,backendName:"wasm",kernelFunc:wde};function ti(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var u4={kernelName:Gn,backendName:"wasm",kernelFunc:ti};var l4=lt(ao);var p4;function Nde(r){p4=r.wasm.cwrap(Un,null,["number","number","number","number"])}function Dde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id;return p4(i,s,a,l),u}var m4={kernelName:Un,backendName:"wasm",setupFunc:Nde,kernelFunc:Dde};function GD(r){let{inputs:e,backend:t}=r,n=y.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=C.computeOutShape(e.map(d=>d.shape),n),s=e.filter(d=>y.sizeFromShape(d.shape)>0);if(s.length===1)return Kp({inputs:{x:s[0]},backend:t});let a=t.makeOutput(o,e[0].dtype);if(y.sizeFromShape(o)===0)return a;let i=s.map(d=>d.shape);if(C.assertParamsConsistent(i,n),s[0].dtype==="string"){let d=s.map(T=>{let I=y.sizeFromShape(T.shape.slice(n));return fr({inputs:{x:T},backend:t,attrs:{shape:[-1,I]}})}),f=d.map(T=>({vals:t.readSync(T.dataId),shape:T.shape}));o=C.computeOutShape(d.map(T=>T.shape),1);let h=d[0].shape[0]===1,g=yp(f,o,e[0].dtype,h),b=C.computeOutShape(s.map(T=>T.shape),n);a.shape=b;let x=t.dataIdMap.get(a.dataId);return x.stringBytes=C.fromStringArrayToUint8(g),d.forEach(T=>t.disposeData(T.dataId)),a}let u=y.sizeFromShape(s[0].shape.slice(0,n)),l=0,p=s.map(d=>{let f=y.sizeFromShape(d.shape.slice(n));return l+=f,f}),m=s.map(d=>t.typedArrayFromHeap(d)),c=t.typedArrayFromHeap(a);for(let d=0;d<u;d++){let f=d*l;for(let h=0;h<m.length;h++){let g=p[h],b=d*g,x=m[h].subarray(b,b+g);c.set(x,f),f+=g}}return a}var c4={kernelName:ls,backendName:"wasm",kernelFunc:GD};var d4;function Pde(r){d4=r.wasm.cwrap(io,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Rde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m,dataFormat:c}=t,d=C.convertConv2DDataFormat(c),f=C.computeConv2DInfo(o.shape,s.shape,u,l,p,m,!1,d),h=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,x=f.padInfo.right,T=f.padInfo.bottom,I=f.padInfo.left,k=f.dilationHeight,w=f.dilationWidth,R=f.strideHeight,F=f.strideWidth,M=f.inChannels,L=f.outChannels,z=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let W=n.makeOutput(f.outShape,"float32"),V=n.dataIdMap.get(W.dataId).id;return d4(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,b,x,T,I,z,k,w,R,F,M,L,V),W}var f4={kernelName:io,backendName:"wasm",setupFunc:Pde,kernelFunc:Rde};var h4;function Fde(r){h4=r.wasm.cwrap(uo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Mde(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,inputShape:p}=n,m=1,c=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(p,s.shape,a,m,i,l,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:b,inHeight:x,inWidth:T,outChannels:I,outHeight:k,outWidth:w,strideHeight:R,strideWidth:F}=d,M=h-1-d.padInfo.top,L=g-1-d.padInfo.left,z=d.dataFormat==="channelsLast",W=y.computeStrides(d.inShape),V=y.computeStrides(o.shape),[j,q,Y]=y.computeStrides(s.shape),J=W[0],H=z?W[1]:W[2],te=z?W[2]:1,se=z?1:W[1],ae=V[0],pe=z?V[1]:V[2],ie=z?V[2]:1,be=z?1:V[1],fe=e.makeOutput(d.inShape,"float32"),Ie=e.dataIdMap.get(fe.dataId).id,we=e.dataIdMap.get(o.dataId).id,Ee=e.dataIdMap.get(s.dataId).id;return h4(we,Ee,f,h,g,x,T,b,k,w,I,R,F,M,L,j,q,Y,J,H,te,se,ae,pe,ie,be,Ie),fe}var g4={kernelName:uo,backendName:"wasm",setupFunc:Fde,kernelFunc:Mde};var b4=lt(lo);var y4=lt(po);var x4=(t=>(t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest",t))(x4||{}),T4;function Ede(r){T4=r.wasm.cwrap(pa,null,["number","number","number","number","array","number","number","number","number","number"])}function _de(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:u,boxInd:l}=t,p=u.shape[0],[m,c]=a,d=[p,m,c,i.shape[3]],f=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=ti({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(h.dataId));let g=f.id,b=e.dataIdMap.get(u.dataId).id,x=e.dataIdMap.get(l.dataId).id,T=e.makeOutput(d,"float32"),I=e.dataIdMap.get(T.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return T4(g,b,x,p,k,m,c,x4[o],s,I),h!=null&&e.disposeData(h.dataId),T}var I4={kernelName:pa,backendName:"wasm",setupFunc:Ede,kernelFunc:_de};var C4;function Lde(r){C4=r.wasm.cwrap(la,null,["number","number","number","number","number","number"])}function $de(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([s],u),p=o;l!==null&&(p=ns({inputs:{x:o},attrs:{perm:l},backend:t}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumprod",[m],u);let c=t.makeOutput(p.shape,p.dtype),d=p.shape[m],f=t.dataIdMap.get(p.dataId).id,h=t.dataIdMap.get(c.dataId).id;C4(f,a?1:0,i?1:0,d,h,Je[o.dtype]);let g=c;if(l!==null){let b=C.getUndoAxesPermutation(l);g=ns({inputs:{x:c},attrs:{perm:b},backend:t}),t.disposeData(p.dataId),t.disposeData(c.dataId)}return g}var k4={kernelName:la,backendName:"wasm",setupFunc:Lde,kernelFunc:$de};var S4;function Bde(r){S4=r.wasm.cwrap(mo,null,["number","number","number","number","number","number"])}function Ode(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([s],u),p=o;l!==null&&(p=ns({inputs:{x:o},attrs:{perm:l},backend:t}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumsum",[m],u);let c=t.makeOutput(p.shape,p.dtype),d=p.shape[m],f=t.dataIdMap.get(p.dataId).id,h=t.dataIdMap.get(c.dataId).id;S4(f,a?1:0,i?1:0,d,h,Je[o.dtype]);let g=c;if(l!==null){let b=C.getUndoAxesPermutation(l);g=ns({inputs:{x:c},attrs:{perm:b},backend:t}),t.disposeData(p.dataId),t.disposeData(c.dataId)}return g}var v4={kernelName:mo,backendName:"wasm",setupFunc:Bde,kernelFunc:Ode};var A4;function zde(r){A4=r.wasm.cwrap(ma,null,["number","number","number","array","number","array","array","number","number"])}function Gde(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=e.makeOutput(f,"float32"),b=e.dataIdMap.get(o.dataId).id,x=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),T=new Uint8Array(new Int32Array(f).buffer),I=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer),k=e.dataIdMap.get(h.dataId).id;return A4(b,s,a==="NHWC"?1:0,x,o.shape.length-1,T,I,f.length,k),h}var w4={kernelName:ma,backendName:"wasm",setupFunc:zde,kernelFunc:Gde};var N4;function Ude(r){N4=r.wasm.cwrap(co,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m}=t,c=l??[1,1],d=C.computeConv2DInfo(o.shape,s.shape,u,c,p,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,b=d.padInfo.right,x=d.padInfo.bottom,T=d.padInfo.left,I=d.dilationHeight,k=d.dilationWidth,w=d.strideHeight,R=d.strideWidth,F=d.inChannels,M=d.outChannels,L=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let z=n.makeOutput(d.outShape,"float32"),W=n.dataIdMap.get(z.dataId).id;return N4(a,o.shape[0],o.shape[1],o.shape[2],i,f,h,g,b,x,T,L,I,k,w,R,F,M,W),z}var D4={kernelName:co,backendName:"wasm",setupFunc:Ude,kernelFunc:Wde};var P4=lt(ho);var Kde=!1,R4=ht(ca,Kde,"bool");var F4=lt(go,"float32");function RT(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),fr({inputs:{x:o},backend:n,attrs:{shape:i}})}var M4={kernelName:ps,backendName:"wasm",kernelFunc:RT};function UD(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var E4={kernelName:ai,backendName:"wasm",kernelFunc:UD};var _4;function Vde(r){_4=r.wasm.cwrap(fa,null,["number","number","number","number","number","number"])}function Hde(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,u,l,p]=n.shape;return _4(s,i,u,l,p,a),o}var L4={kernelName:fa,backendName:"wasm",kernelFunc:Hde,setupFunc:Vde};var $4=lt(bo);var qde=!1,B4=ht(yo,qde);var O4;function jde(r){O4=r.wasm.cwrap(xo,null,["number","number","number","number","number","number","number"])}function Xde(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:u,scale:l}=t,p=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(a.dataId).id,c=e.dataIdMap.get(i.dataId).id,d=u!=null?e.dataIdMap.get(u.dataId).id:0,f=l!=null?e.dataIdMap.get(l.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(y.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return O4(p,m,c,d,f,o,g),h}var z4={kernelName:xo,backendName:"wasm",setupFunc:jde,kernelFunc:Xde};var G4;function Yde(r){G4=r.wasm.cwrap(Ss,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Zde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,u,p,l,c),g=Wp[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,I=0;if(a!=null){let ie=n.dataIdMap.get(a.dataId);if(ie.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ie.shape.length}.`);if(ie.shape[0]!==T)throw new Error(`FusedConv2D bias shape (${ie.shape}) does not match the number of output channels (${T})`);I=ie.id}let k=h.filterHeight,w=h.filterWidth,R=h.padInfo.top,F=h.padInfo.right,M=h.padInfo.bottom,L=h.padInfo.left,z=h.dilationHeight,W=h.dilationWidth,V=h.strideHeight,j=h.strideWidth,q=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,J=h.batchSize,H=h.inHeight,te=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return G4(b,J,H,te,x,k,w,I,R,F,M,L,Y,z,W,V,j,q,T,g,pe,f||0,ae),se}var U4={kernelName:Ss,backendName:"wasm",setupFunc:Yde,kernelFunc:Zde};var W4;function Qde(r){W4=r.wasm.cwrap(vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Jde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,u,p,l,c,!0),g=Wp[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,I=0;if(a!=null){let ie=n.dataIdMap.get(a.dataId);if(ie.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ie.shape.length}.`);if(ie.shape[0]!==T)throw new Error(`FusedDepthwiseConv2D bias shape (${ie.shape}) does not match the number of output channels (${T})`);I=ie.id}let k=h.filterHeight,w=h.filterWidth,R=h.padInfo.top,F=h.padInfo.right,M=h.padInfo.bottom,L=h.padInfo.left,z=h.dilationHeight,W=h.dilationWidth,V=h.strideHeight,j=h.strideWidth,q=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,J=h.batchSize,H=h.inHeight,te=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return W4(b,J,H,te,x,k,w,I,R,F,M,L,Y,z,W,V,j,q,T,g,pe,f||0,ae),se}var K4={kernelName:vs,backendName:"wasm",setupFunc:Qde,kernelFunc:Jde};var V4;function efe(r){V4=r.wasm.cwrap(ha,null,["number","number","number","number","number","number","array","number"])}function tfe(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,u]=Ab.prepareAndValidate(n,o),l=e.makeOutput(s,n.dtype);if(a===0)return l;let p=o.shape,m=p[p.length-1],d=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),b=e.dataIdMap.get(l.dataId).id;return V4(d,Je[n.dtype],h,a,m,i,g,b),l}var H4={kernelName:ha,backendName:"wasm",setupFunc:efe,kernelFunc:tfe};var q4;function rfe(r){q4=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function nfe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0],l=e.readSync(s.dataId),p=o.shape[u];for(let M=0;M<l.length;++M){let L=l[M];y.assert(L<=p-1&&L>=0,()=>`GatherV2: the index value ${L} is not in [0, ${p-1}]`)}let m=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),c=fr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:e}),d=y.sizeFromShape(s.shape),f=fr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:e}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=e.makeOutput(h,o.dtype);if(y.sizeFromShape(o.shape)===0)return g;let b=c.shape.length-1,T=e.dataIdMap.get(c.dataId).id,k=e.dataIdMap.get(f.dataId).id,w=e.dataIdMap.get(g.dataId).id,R=new Uint8Array(new Int32Array(y.computeStrides(c.shape)).buffer),F=new Uint8Array(new Int32Array(y.computeStrides(h)).buffer);return q4(T,Je[o.dtype],R,b,k,m.batchSize,F,w),e.disposeData(c.dataId),e.disposeData(f.dataId),g.shape=m.outputShape,g}var j4={kernelName:ms,backendName:"wasm",setupFunc:rfe,kernelFunc:nfe};var ofe=!1,X4=ht(ga,ofe,"bool");var sfe=!1,Y4=ht(To,sfe,"bool");var Z4;function afe(r){Z4=r.wasm.cwrap(Io,null,["number","number","number","number"])}function ife(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(y.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;Z4(o,Je[e.dtype],t,a)}return s}var Q4={kernelName:Io,backendName:"wasm",setupFunc:afe,kernelFunc:ife};var ufe=!1,J4=ht(ba,ufe,"bool");var lfe=!1,eH=ht(ya,lfe,"bool");var tH=lt(Co);var pfe=!1,rH=ht(xa,pfe,"bool");var nH=lt(Ta);var mfe=!1,oH=ht(Wi,mfe,"bool");var cfe=!1,sH=ht(R0,cfe,"bool");var aH;function dfe(r){aH=r.wasm.cwrap(ko,null,["number","number","number","number"])}function ffe(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,e);if(d){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let f=l.shape.length;C.assertAxesAreInnerMostDims("max",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),x=e.makeOutput(h,a.dtype);if(y.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;aH(u,Je[a.dtype],b,T)}if(d&&e.disposeData(p.dataId),s){let T=C.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var iH={kernelName:ko,backendName:"wasm",setupFunc:dfe,kernelFunc:ffe};var hfe=!1,uH=ht(So,hfe);var lH;function gfe(r){lH=r.wasm.cwrap(vo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function bfe(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;y.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=t,p=C.computePool2DInfo(o.shape,a,i,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,b=p.dilationHeight,x=p.dilationWidth,T=p.strideHeight,I=p.strideWidth,k=p.inChannels,w=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let R=n.makeOutput(p.outShape,"float32"),F=n.dataIdMap.get(R.dataId).id;return lH(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,x,T,I,k,w,F),R}var pH={kernelName:vo,backendName:"wasm",setupFunc:gfe,kernelFunc:bfe};var mH;function yfe(r){mH=r.wasm.cwrap(Ao,null,["number, number, number"])}function xfe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,e),f=m;if(d){let I=e.dataIdMap.get(p.dataId).id;I!==i&&(l=p,u=I,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("mean",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),b=y.sizeFromShape(g),x=l;l.dtype!=="float32"&&(x=ti({backend:e,inputs:{x:l},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(x.dataId).id);let T=e.makeOutput(h,"float32");if(y.sizeFromShape(l.shape)!==0){let I=e.dataIdMap.get(T.dataId).id;mH(u,b,I)}if(d&&e.disposeData(p.dataId),s){let I=C.expandShapeToKeepDim(T.shape,c);T.shape=I}return l.dtype!=="float32"&&e.disposeData(x.dataId),T}var cH={kernelName:Ao,backendName:"wasm",setupFunc:yfe,kernelFunc:xfe};var dH;function Tfe(r){dH=r.wasm.cwrap(wo,null,["number","number","number","number"])}function Ife(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,e);if(d){let T=e.dataIdMap.get(p.dataId).id;T!==i&&(l=p,u=T)}let f=l.shape.length;C.assertAxesAreInnerMostDims("min",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),x=e.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;dH(u,Je[a.dtype],b,T)}if(d&&e.disposeData(p.dataId),s){let T=C.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var fH={kernelName:wo,backendName:"wasm",setupFunc:Tfe,kernelFunc:Ife};var Cfe=!1,hH=ht(No,Cfe);var gH=(t=>(t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric",t))(gH||{}),bH;function kfe(r){bH=r.wasm.cwrap(Do,null,["number","array","number","number","array","array","number","number"])}function Sfe(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+e.shape[h]+f[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),p=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(p).buffer),d=new Uint8Array(new Int32Array(m).buffer);return bH(a,l,e.shape.length,Je[e.dtype],c,d,gH[o],u),i}var yH={kernelName:Do,backendName:"wasm",kernelFunc:Sfe,setupFunc:kfe};var vfe=!0,xH=ht(Po,vfe);var TH=lt(cs);function fd(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var IH;function Afe(r){IH=r.wasm.cwrap(Ca,"number",["number","number","number","number","number"])}function wfe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:u}=t,l=e.dataIdMap.get(i.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=IH(l,p,s,o,a),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=fd(e,m);return e.wasm._free(f),e.wasm._free(h),e.makeOutput([d],"int32",c)}var CH={kernelName:Ca,backendName:"wasm",setupFunc:Afe,kernelFunc:wfe};var kH;function Nfe(r){kH=r.wasm.cwrap(Vi,"number",["number","number","number","number","number","bool"])}function Dfe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(l.dataId).id,c=kH(p,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=fd(e,c);e.wasm._free(h);let b=e.makeOutput([f],"int32",d),x=e.makeOutput([],"int32",g);return[b,x]}var SH={kernelName:Vi,backendName:"wasm",setupFunc:Nfe,kernelFunc:Dfe};var vH;function Pfe(r){vH=r.wasm.cwrap(ka,"number",["number","number","number","number","number","number"])}function Rfe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(l.dataId).id,c=vH(p,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=fd(e,c);e.wasm._free(g);let b=e.makeOutput([f],"int32",d),x=e.makeOutput([f],"float32",h);return[b,x]}var AH={kernelName:ka,backendName:"wasm",setupFunc:Pfe,kernelFunc:Rfe};var Ffe=!1,wH=ht(Ia,Ffe,"bool");var NH;function Mfe(r){NH=r.wasm.cwrap(Sa,null,["number","number","number","number","number"])}function Efe(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,u=t.makeOutput([...o.shape,s],"int32"),l=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(o.dataId).id;return NH(m,s,a,i,l),u}var DH={kernelName:Sa,backendName:"wasm",setupFunc:Mfe,kernelFunc:Efe};function _fe(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var PH={kernelName:ds,backendName:"wasm",kernelFunc:_fe};function Lfe(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return RT({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let m=RT({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(m),m}),l=GD({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeData(p.dataId)),l}var RH={kernelName:fs,backendName:"wasm",kernelFunc:Lfe};var FH;function $fe(r){FH=r.wasm.cwrap(Ro,null,["number","array","number","number","array","array","number","number"])}function Bfe(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(y.sizeFromShape(e.shape)===0)return UD({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(e.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return FH(a,p,e.shape.length,Je[e.dtype],d,f,o,l),i}var FT={kernelName:Ro,backendName:"wasm",kernelFunc:Bfe,setupFunc:$fe};var Ofe=!1,MH=ht(Fo,Ofe);var EH;function zfe(r){EH=r.wasm.cwrap(Mo,null,["number","number","number"])}function Gfe(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=s,u=n,l=u;u.dtype!=="float32"&&(l=ti({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(l.dataId).id);let p=t.makeOutput(n.shape,"float32"),m=t.dataIdMap.get(p.dataId).id;return EH(i,a,m),u.dtype!=="float32"&&t.disposeData(l.dataId),p}var _H={kernelName:Mo,backendName:"wasm",setupFunc:zfe,kernelFunc:Gfe};var LH;function Ufe(r){LH=r.wasm.cwrap(Eo,null,["number","number","number","number"])}function Wfe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,e),f=m;if(d){let T=e.dataIdMap.get(p.dataId).id;T!==i&&(l=p,u=T,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("prod",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),b=y.sizeFromShape(g),x=e.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;LH(u,b,Je[x.dtype],T)}if(d&&e.disposeData(p.dataId),s){let T=C.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var $H={kernelName:Eo,backendName:"wasm",setupFunc:Ufe,kernelFunc:Wfe};var Kfe=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=Tp(n,o,s,a),u=e.makeOutput([i.length],a);return e.typedArrayFromHeap(u).set(i),u},BH={kernelName:ii,backendName:"wasm",kernelFunc:Kfe};var Vfe=!0,OH=ht(fo,Vfe);var zH=lt(_o);var GH=lt(Bo);var UH;function Hfe(r){UH=r.wasm.cwrap($o,null,["number","number","number","number","number","number","number","number","number","number"])}function qfe(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,m,c,d]=o.shape,f=[p,u,l,d],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=ti({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let b=h.id,x=e.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return x;let T=e.dataIdMap.get(x.dataId).id;return UH(b,p,m,c,d,u,l,s?1:0,a?1:0,T),g!=null&&e.disposeData(g.dataId),x}var WH={kernelName:$o,backendName:"wasm",setupFunc:Hfe,kernelFunc:qfe};var KH;function jfe(r){KH=r.wasm.cwrap(Lo,null,["number","number","number","number","number","number","number","number","number","number"])}function Xfe(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,m,c,d]=o.shape,f=[p,u,l,d],h=e.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return h;let g=e.dataIdMap.get(o.dataId),b;g.dtype!=="float32"&&(b=ti({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),g=e.dataIdMap.get(b.dataId));let x=g.id,T=e.dataIdMap.get(h.dataId).id;return KH(x,p,m,c,d,u,l,s?1:0,a?1:0,T),b!=null&&e.disposeData(b.dataId),h}var VH={kernelName:Lo,backendName:"wasm",setupFunc:jfe,kernelFunc:Xfe};var HH;function Yfe(r){HH=r.wasm.cwrap(va,null,["number","array","number","array","number","number"])}function Zfe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=y.parseAxisParam(s,o.shape);if(o.shape.length===0)return Kp({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);HH(u,p,a.length,m,o.shape.length,l);let c=fr({inputs:{x:i},attrs:{shape:o.shape},backend:t});return t.disposeData(i.dataId),c}var qH={kernelName:va,backendName:"wasm",kernelFunc:Zfe,setupFunc:Yfe};var jH;function Qfe(r){jH=r.wasm.cwrap(Ma,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Jfe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(u.dataId).id,[m,c,d,f]=o.shape,[h,g]=C.getImageCenter(i,c,d),b=a===0,x=255,T=typeof a=="number"?[a,a,a,b?0:x]:[...a,x],I=new Uint8Array(new Int32Array(T).buffer);return jH(l,m,c,d,f,s,h,g,I,T.length,p),u}var XH={kernelName:Ma,backendName:"wasm",kernelFunc:Jfe,setupFunc:Qfe};var YH=lt(Aa);var ZH=lt(Oo);var QH;function ehe(r){QH=r.wasm.cwrap(wa,null,["number","number","number","number","number","number","array","number","number"])}function the(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(y.sizeFromShape(a)===0)return i;let{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=Ud.calculateShapes(s,o,a),f=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,b=new Uint8Array(new Int32Array(m).buffer),x=e.dataIdMap.get(i.dataId).id;return QH(f,g,Je[s.dtype],u,l,p,b,c,x),i}var JH={kernelName:wa,backendName:"wasm",setupFunc:ehe,kernelFunc:the};var eq;function rhe(r){eq=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function nhe(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(l.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:y.sizeFromShape(o.shape.slice(1));return eq(a,i,u,d,p),l}var tq={kernelName:gs,backendName:"wasm",kernelFunc:nhe,setupFunc:rhe};var rq;function ohe(r){rq=r.wasm.cwrap(Go,null,["number","number"])}function she(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return y.sizeFromShape(o.shape)===0||rq(n,s),o}var nq={kernelName:"Sigmoid",backendName:"wasm",setupFunc:ohe,kernelFunc:she};var oq=lt(zo);var sq;function ahe(r){sq=r.wasm.cwrap(Ko,null,["number","number","number","number"])}function ihe(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],u=y.sizeFromShape(t.shape)/i;return y.sizeFromShape(s.shape)===0||sq(o,a,i,u),s}var aq={kernelName:Ko,backendName:"wasm",setupFunc:ahe,kernelFunc:ihe};function uhe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n,i=y.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let w=1+s.length;w<o.shape.length;++w)u.push([0,0]);let l=FT.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(l.shape,s,i,!1),m=C.getPermuted(p.length,s.length,!1),c=C.getReshapedPermuted(l.shape,s,i,!1),h=fr({inputs:{x:l},backend:t,attrs:{shape:p}}),x=ns({inputs:{x:h},backend:t,attrs:{perm:m}}),k=fr({inputs:{x},backend:t,attrs:{shape:c}});return t.disposeData(l.dataId),t.disposeData(h.dataId),t.disposeData(x.dataId),k}var iq={kernelName:ys,backendName:"wasm",kernelFunc:uhe};var uq;function lhe(r){uq=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function phe(r){let{backend:e,inputs:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t,i=n.shape[0],u=n.shape[1],l=e.readSync(s.dataId)[0],p=[i+l,u],m=e.dataIdMap.get(n.dataId).id,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(a.dataId).id,f=e.makeOutput(p,n.dtype),h=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(p.slice(0,1),o.dtype),b=e.dataIdMap.get(g.dataId).id,x=e.makeOutput([l],"bool"),T=e.dataIdMap.get(x.dataId).id,I=e.makeOutput([i],n.dtype),k=e.dataIdMap.get(I.dataId).id,w=e.makeOutput([4],"int32"),R=e.dataIdMap.get(w.dataId).id,F=uq(m,c,Je[o.dtype],i,l,u,d,h,b,T,k,R),M=e.readSync(w.dataId),L;switch(M[0]){case 1:{L=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(M[1]);break}case 2:{L=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(M[1],M[2]);break}case 3:L=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(M[1],M[2],M[3]);break;default:L=""}if(e.disposeData(w.dataId),L)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(I.dataId),new Error(L);let z=f,W=g;return F!==p[0]&&(z=Qs({inputs:{x:f},attrs:{begin:0,size:[F,u]},backend:e}),W=Qs({inputs:{x:g},attrs:{begin:0,size:F},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[z,W,x,I]}var lq={kernelName:$u,backendName:"wasm",setupFunc:lhe,kernelFunc:phe};var pq;function mhe(r){pq=r.wasm.cwrap(Yi,null,["number","number","number","number","number","number","number"])}function che(r){let{backend:e,inputs:t}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(s.dataId).id,l=n.shape[0],p=y.sizeFromShape(s.shape),m=e.makeOutput([l,p],n.dtype),c=e.dataIdMap.get(m.dataId).id,d=e.makeOutput([p],s.dtype),f=e.dataIdMap.get(d.dataId).id,h=e.makeOutput([3],"int32"),g=e.dataIdMap.get(h.dataId).id;pq(a,i,u,l,c,f,g);let b=e.readSync(h.dataId),x;switch(b[0]){case 0:{x=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{x=C.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:x=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let T=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));x=C.getSparseReshapeInputOutputMultipleErrorMessage(T,I);break}case 4:{let T=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));x=C.getSparseReshapeInputOutputMismatchErrorMessage(T,I);break}default:x=""}if(e.disposeData(h.dataId),x)throw e.disposeData(m.dataId),e.disposeData(d.dataId),new Error(x);return[m,d]}var mq={kernelName:Yi,backendName:"wasm",setupFunc:mhe,kernelFunc:che};var cq;function MT(r){cq=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function ET(r,e){let{backend:t,inputs:n}=r,{data:o,indices:s,segmentIds:a}=n,i=s.shape[0],u=t.readSync(a.dataId,i-1,i)[0],p=i>0?u+1:0;if(p<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=p;let c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(a.dataId).id,h=t.makeOutput(m,o.dtype),g=t.dataIdMap.get(h.dataId).id,b=t.makeOutput([4],"int32"),x=t.dataIdMap.get(b.dataId).id;cq(c,Je[o.dtype],o.shape[0],d,f,g,x,e,0);let T=t.readSync(b.dataId),I;switch(T[0]){case 0:{I=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{I=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:I=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T[1],T[2]);break;case 3:I=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(T[1],T[2],T[3]);break;default:I=""}if(t.disposeData(b.dataId),I)throw t.disposeData(h.dataId),new Error(I);return h}function dhe(r){return ET(r,!0)}var dq={kernelName:Bu,backendName:"wasm",setupFunc:MT,kernelFunc:dhe};function fhe(r){return ET(r,!1)}var fq={kernelName:Ou,backendName:"wasm",setupFunc:MT,kernelFunc:fhe};function hhe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[i]=m;let d=Qs({inputs:{x:o},attrs:{begin:l,size:c},backend:n});return l[i]+=m,d})}var hq={kernelName:xs,backendName:"wasm",kernelFunc:hhe};var gq=lt(Uo);var bq=lt(ui);var ghe=!0,yq=ht(Vo,ghe);var xq;function bhe(r){xq=r.wasm.cwrap(Cs,null,["number","number","number","number"])}function yhe(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),u=e.dataIdMap.get(i.dataId).id;return xq(a,o,Je[s.dtype],u),i}var Tq={kernelName:Cs,backendName:"wasm",setupFunc:bhe,kernelFunc:yhe};var Iq;function xhe(r){Iq=r.wasm.cwrap(Da,null,["number","array","number","array","array","array","array","array","number","number"])}function The(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:I}=Tt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=fr({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=Tt.computeOutShape(x,T,I),R=Qs({inputs:{x:o},backend:e,attrs:{begin:x,size:w}});k=fr({inputs:{x:R},backend:e,attrs:{shape:f}}),e.disposeData(R.dataId)}else{let w=e.makeOutput(d,"float32"),R=e.dataIdMap.get(o.dataId).id,F=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),M=new Uint8Array(new Int32Array(x).buffer),L=new Uint8Array(new Int32Array(T).buffer),z=new Uint8Array(new Int32Array(I).buffer),W=new Uint8Array(new Int32Array(d).buffer),V=new Uint8Array(new Int32Array(y.computeStrides(d)).buffer),j=e.dataIdMap.get(w.dataId).id;Iq(R,F,o.shape.length,M,L,z,W,V,d.length,j),k=fr({inputs:{x:w},backend:e,attrs:{shape:f}}),e.disposeData(w.dataId)}return k}var Cq={kernelName:Da,backendName:"wasm",setupFunc:xhe,kernelFunc:The};function Ihe(r){let{backend:e,inputs:t,attrs:n}=r,{data:o,dataSplits:s}=t,{separator:a,nGramWidths:i,leftPad:u,rightPad:l,padWidth:p,preserveShortSequences:m}=n,c=e.readSync(o.dataId),d=e.readSync(s.dataId),[f,h]=Cp(c,d,a,i,u,l,p,m),g=e.makeOutput([f.length],"string"),b=e.dataIdMap.get(g.dataId);b.stringBytes=f;let x=e.makeOutput(s.shape,"int32");return e.typedArrayFromHeap(x).set(h),[g,x]}var kq={kernelName:li,backendName:"wasm",kernelFunc:Ihe};function Che(r){let{backend:e,inputs:t,attrs:n}=r,{input:o,delimiter:s}=t,{skipEmpty:a}=n,i=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,p,m]=kp(i,u[0],a),c=p.length,d=e.makeOutput([c,2],"int32");e.typedArrayFromHeap(d).set(l);let h=e.makeOutput([c],"string"),g=e.dataIdMap.get(h.dataId);g.stringBytes=p;let b=e.makeOutput([2],"int32");return e.typedArrayFromHeap(b).set(m),[d,h,b]}var Sq={kernelName:Gu,backendName:"wasm",kernelFunc:Che};function khe(r){let{backend:e,inputs:t,attrs:n}=r,{input:o}=t,{numBuckets:s}=n,a=e.readSync(o.dataId),i=Sp(a,s),u=e.makeOutput(o.shape,"int32");return e.typedArrayFromHeap(u).set(i),u}var vq={kernelName:Uu,backendName:"wasm",kernelFunc:khe};var She=!0,Aq=ht(Ho,She);var wq;function vhe(r){wq=r.wasm.cwrap(Wo,null,["number","number","number","number"])}function Ahe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,e),f=m;if(d){let T=e.dataIdMap.get(p.dataId).id;T!==i&&(l=p,u=T,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("sum",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),b=y.sizeFromShape(g),x=e.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;wq(u,b,Je[x.dtype],T)}if(d&&e.disposeData(p.dataId),s){let T=C.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var Nq={kernelName:Wo,backendName:"wasm",setupFunc:vhe,kernelFunc:Ahe};var Dq=lt(Pa);var Pq=lt(qo);var Rq;function whe(r){Rq=r.wasm.cwrap(wn,null,["number","array","number","array","number","number"])}function Nhe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let c=0;c<i.length;c++)i[c]=o.shape[c]*a[c];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(i).buffer),p=t.makeOutput(i,o.dtype),m=t.dataIdMap.get(p.dataId).id;return Rq(s,u,o.shape.length,l,i.length,Je[p.dtype],m),p}var Fq={kernelName:wn,backendName:"wasm",setupFunc:whe,kernelFunc:Nhe};var Mq;function Dhe(r){Mq=r.wasm.cwrap(Ra,null,["number","array","number","number","number","bool","number","number"])}var Phe=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=e.makeOutput(u,n.dtype),p=e.dataIdMap.get(l.dataId).id,m=e.makeOutput(u,"int32"),c=e.dataIdMap.get(m.dataId).id;return Mq(a,i,n.shape.length,Je[n.dtype],o,s,p,c),[l,m]},Eq={kernelName:Ra,backendName:"wasm",setupFunc:Dhe,kernelFunc:Phe};var _q;function Rhe(r){_q=r.wasm.cwrap(Fa,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Fhe(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),x=e.makeOutput(g,o.dtype),T=e.dataIdMap.get(x.dataId).id,k=e.dataIdMap.get(o.dataId).id,R=e.dataIdMap.get(s.dataId).id,F=a==="nearest"?1:2,M;switch(i){case"constant":M=1;break;case"reflect":M=2;break;case"wrap":M=3;break;case"nearest":M=4;break;default:M=1;break}return _q(k,R,s.shape[0]>1,p,f,h,d,c,m,b,o.shape.length-1,F,M,u,T),x}var Lq={kernelName:Fa,backendName:"wasm",setupFunc:Rhe,kernelFunc:Fhe};function Mhe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,u=new Array(i-1),l=0;for(let d=0;d<i;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(a),m=new Array(i).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<p.length;d++)m[s]=d,p[d]=Qs({inputs:{x:o},attrs:{begin:m,size:c},backend:t});return p.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:u}))}var $q={kernelName:Ts,backendName:"wasm",kernelFunc:Mhe};function Ehe(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var Bq={kernelName:Is,backendName:"wasm",kernelFunc:Ehe};var _he=[GV,UV,WV,VV,YV,QV,e4,r4,s4,i4,u4,l4,m4,c4,f4,g4,b4,y4,I4,k4,v4,w4,D4,P4,R4,F4,M4,E4,L4,$4,B4,z4,U4,K4,H4,j4,X4,Y4,HV,Q4,J4,eH,tH,rH,nH,oH,sH,iH,uH,pH,cH,fH,hH,yH,xH,TH,CH,SH,AH,wH,DH,PH,RH,FT,MH,_H,$H,BH,OH,zH,GH,n4,WH,VH,qH,XH,YH,ZH,JH,tq,nq,oq,a4,aq,iq,lq,mq,dq,fq,hq,gq,bq,yq,Tq,Cq,kq,Sq,vq,Aq,Nq,Dq,Pq,Fq,Eq,Lq,jV,$q,Bq];for(let r of _he)Zi(r);var WD=B();WD.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));WD.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(WD.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var JD=Fl(Gq());var Dt={},Uq=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";Uq&&(qD=KD(),jD=qD.parentPort,jD.on("message",function(r){onmessage({data:r})}),XD=_h(),Object.assign(global,{self:global,require:k0,Module:Dt,location:{href:__filename},Worker:qD.Worker,importScripts:function(r){(0,eval)(XD.readFileSync(r,"utf8"))},postMessage:function(r){jD.postMessage(r)},performance:global.performance||{now:function(){return Date.now()}}}));var qD,jD,XD;function Lhe(){var r=Array.prototype.slice.call(arguments).join(" ");if(Uq){XD.writeSync(2,r+`
`);return}console.error(r)}function $he(){var r=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:r,threadId:Dt._pthread_self()})}var LT=Lhe;self.alert=$he;Dt.instantiateWasm=(r,e)=>{var t=new WebAssembly.Instance(Dt.wasmModule,r);return e(t),Dt.wasmModule=null,t.exports};self.onmessage=r=>{try{if(r.data.cmd==="load"){if(Dt.wasmModule=r.data.wasmModule,Dt.wasmMemory=r.data.wasmMemory,Dt.buffer=Dt.wasmMemory.buffer,Dt.ENVIRONMENT_IS_PTHREAD=!0,typeof r.data.urlOrBlob=="string")importScripts(r.data.urlOrBlob);else{var e=URL.createObjectURL(r.data.urlOrBlob);importScripts(e),URL.revokeObjectURL(e)}WasmBackendModuleThreadedSimd(Dt).then(function(n){Dt=n})}else if(r.data.cmd==="run"){Dt.__performance_now_clock_drift=performance.now()-r.data.time,Dt.__emscripten_thread_init(r.data.threadInfoStruct,0,0,1),Dt.establishStackSpace(),Dt.PThread.receiveObjectTransfer(r.data),Dt.PThread.threadInit();try{var t=Dt.invokeEntryPoint(r.data.start_routine,r.data.arg);Dt.keepRuntimeAlive()?Dt.PThread.setExitStatus(t):Dt.__emscripten_thread_exit(t)}catch(n){if(n!="unwind")if(n instanceof Dt.ExitStatus)Dt.keepRuntimeAlive()||Dt.__emscripten_thread_exit(n.status);else throw n}}else r.data.cmd==="cancel"?Dt._pthread_self()&&Dt.__emscripten_thread_exit(-1):r.data.target==="setimmediate"||(r.data.cmd==="processThreadQueue"?Dt._pthread_self()&&Dt._emscripten_current_thread_process_queued_calls():r.data.cmd==="processProxyingQueue"?Dt._pthread_self()&&Dt._emscripten_proxy_execute_queue(r.data.queue):(LT("worker.js received unknown command "+r.data.cmd),LT(r.data)))}catch(n){throw LT("worker.js onmessage() captured an uncaught exception: "+n),n&&n.stack&&LT(n.stack),Dt.__emscripten_thread_crashed&&Dt.__emscripten_thread_crashed(),n}};var e0=Fl(Wq());var Kq=JD.default||JD,Bhe=e0.default||e0,OT=class extends as{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(jq),QD=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new ri(this,Rn())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=y.now();return e(),{kernelMs:y.now()-t}}move(e,t,n,o,s){let a=this.dataIdNextNumber++;if(o==="string"){let p=t;this.dataIdMap.set(e,{id:a,stringBytes:p,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let i=y.sizeFromShape(n),u=i*y.bytesPerElement(o),l=this.wasm._malloc(u);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(a,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:o,dtype:s,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(s==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||y.sizeFromShape(a);let u=y.bytesPerElement(s),l=this.wasm.HEAPU8.slice(o+t*u,o+n*u);return zhe(l.buffer,s)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=y.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=y.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,a);case"int32":return new Int32Array(o,s,a);case"bool":return new Uint8Array(o,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Ohe(r){return(e,t)=>(y.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function Vq(r,e,t){if(BT!=null)return BT;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),kg!=null&&kg[n]!=null?kg[n]:t+n}async function qq(){let[r,e]=await Promise.all([B().getAsync("WASM_HAS_SIMD_SUPPORT"),B().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){let l=(void 0).replace(/\n/g,"\\n"),p=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(p)}return i.endsWith(".wasm")?Vq(r,e,Cg??u):u+i},t0&&(o.instantiateWasm=Ohe(Vq(r,e,Cg??"")));let s=!1;o.onAbort=()=>{if(s||Sg)return;Sg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&r&&BT==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Kq.toString()],{type:"text/javascript"}),a=Kq(o)):a=Bhe(o),a.then(i=>{s=!0,Sg=!1;let u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},t({wasm:i})}).catch(n)})}function zhe(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var Ghe=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],BT=null,Cg=null,kg={},Sg=!1,t0=!1;function Uhe(r,e=!1){if(ok("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Sg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");BT=r,t0=e}function Whe(r,e=!1){if(Sg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")Cg=r;else{kg=r;let t=Ghe.filter(n=>kg[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}t0=e}var jq=-1,QD=-1;function Khe(r){jq=r}function Vhe(){if(QD===-1)throw new Error("WASM backend not initialized.");return QD}var Hhe="0.0.0";var qhe=2;Yu("wasm",async()=>{let{wasm:r}=await qq();return new OT(r)},qhe);var Sl="3.19.0-20220729",TQr={tfjs:Sl,"tfjs-core":Sl,"tfjs-data":Sl,"tfjs-layers":Sl,"tfjs-converter":Sl,"tfjs-backend-cpu":Sl,"tfjs-backend-webgl":Sl,"tfjs-backend-wasm":Sl};export{is as Abs,Di as Acos,Pi as Acosh,rp as AdadeltaOptimizer,np as AdagradOptimizer,op as AdamOptimizer,sp as AdamaxOptimizer,An as Add,ro as AddN,Ri as All,Fi as Any,no as ArgMax,si as ArgMin,Mi as Asin,Ei as Asinh,_i as Atan,$i as Atan2,Li as Atanh,oo as AvgPool,wu as AvgPool3D,mm as AvgPool3DGrad,pm as AvgPoolGrad,OT as BackendWasm,so as BatchMatMul,us as BatchToSpaceND,cm as Bincount,dm as BroadcastArgs,P0 as BroadcastTo,$S as Callback,Hk as CallbackList,Gn as Cast,ao as Ceil,Un as ClipByValue,Nu as Complex,Du as ComplexAbs,ls as Concat,io as Conv2D,fm as Conv2DBackpropFilter,uo as Conv2DBackpropInput,Pu as Conv3D,hm as Conv3DBackpropFilterV2,gm as Conv3DBackpropInputV2,lo as Cos,po as Cosh,pa as CropAndResize,la as Cumprod,mo as Cumsum,jk as CustomCallback,ri as DataStorage,bm as DenseBincount,ma as DepthToSpace,co as DepthwiseConv2dNative,ym as DepthwiseConv2dNativeBackpropFilter,xm as DepthwiseConv2dNativeBackpropInput,Tm as Diag,Ru as Dilation2D,Rd as Dilation2DBackpropFilter,Pd as Dilation2DBackpropInput,wC as ENV,BS as EarlyStopping,Fu as Einsum,ho as Elu,Im as EluGrad,ib as Environment,ca as Equal,Bi as Erf,go as Exp,ps as ExpandDims,da as Expm1,Cm as FFT,ai as Fill,fa as FlipLeftRight,bo as Floor,yo as FloorDiv,_l as FromPixels,xo as FusedBatchNorm,Ss as FusedConv2D,vs as FusedDepthwiseConv2D,od as GPGPUContext,ha as GatherNd,ms as GatherV2,Cx as GraphModel,ga as Greater,To as GreaterEqual,qk as History,km as IFFT,Wn as Identity,Mu as Imag,Mt as InputSpec,Oi as IsFinite,zi as IsInf,Gi as IsNan,as as KernelBackend,Eu as LRN,vm as LRNGrad,By as LayerVariable,ts as LayersModel,Io as LeakyRelu,ba as Less,ya as LessEqual,Sm as LinSpace,Co as Log,Ui as Log1p,F0 as LogSoftmax,xa as LogicalAnd,Ta as LogicalNot,Wi as LogicalOr,R0 as LogicalXor,Jhe as LowerBound,Bh as MathBackendCPU,eg as MathBackendWebGL,ko as Max,vo as MaxPool,_u as MaxPool3D,wm as MaxPool3DGrad,Am as MaxPoolGrad,Nm as MaxPoolWithArgmax,So as Maximum,Ao as Mean,wo as Min,No as Minimum,Do as MirrorPad,Ki as Mod,ap as MomentumOptimizer,Dm as Multinomial,Po as Multiply,cs as Neg,Ca as NonMaxSuppressionV3,Vi as NonMaxSuppressionV4,ka as NonMaxSuppressionV5,Ia as NotEqual,KC as OP_SCOPE_SUFFIX,Sa as OneHot,ds as OnesLike,Qr as Optimizer,hi as OptimizerConstructors,fs as Pack,Ro as PadV2,ege as Pool,Fo as Pow,Mo as Prelu,Eo as Prod,ip as RMSPropOptimizer,Us as RNN,ii as Range,o1 as Rank,Lu as Real,fo as RealDiv,Hi as Reciprocal,$a as Reduction,_o as Relu,Bo as Relu6,hs as Reshape,$o as ResizeBilinear,Rm as ResizeBilinearGrad,Lo as ResizeNearestNeighbor,Pm as ResizeNearestNeighborGrad,va as Reverse,Ma as RotateWithOffset,Aa as Round,Oo as Rsqrt,iu as SGDOptimizer,wa as ScatterNd,Fm as SearchSorted,gs as Select,qi as Selu,Nc as Sequential,Go as Sigmoid,ji as Sign,zo as Sin,Na as Sinh,bs as Slice,Ko as Softmax,Xi as Softplus,ys as SpaceToBatchND,$u as SparseFillEmptyRows,Yi as SparseReshape,Bu as SparseSegmentMean,Ou as SparseSegmentSum,zu as SparseToDense,xs as SplitV,Uo as Sqrt,ui as Square,Vo as SquaredDifference,Cs as Step,Da as StridedSlice,li as StringNGrams,Gu as StringSplit,Uu as StringToHashBucketFast,Ho as Sub,Wo as Sum,yn as SymbolicTensor,Pa as Tan,qo as Tanh,Xe as Tensor,yt as TensorBuffer,wn as Tile,Ra as TopK,Fa as Transform,Nn as Transpose,Mm as Unique,Ts as Unpack,Wu as UnsortedSegmentSum,tge as UpperBound,Hu as Variable,Is as ZerosLike,ks as _FusedMatMul,Ut as abs,m2 as acos,c2 as acosh,Z as add,d2 as addN,Rb as all,Wd as any,Qu as argMax,f2 as argMin,h2 as asin,g2 as asinh,b2 as atan,y2 as atan2,x2 as atanh,Vm as avgPool,Mb as avgPool3d,V1 as backend,C as backend_util,C2 as basicLSTMCell,el as batchNorm,Eb as batchNorm2d,_b as batchNorm3d,Lb as batchNorm4d,Hm as batchToSpaceND,$b as bincount,dZ as booleanMaskAsync,S2 as broadcastArgs,qm as broadcastTo,Dr as broadcast_util,vb as browser,xe as buffer,Uee as callbacks,oe as cast,v2 as ceil,zr as clipByValue,mn as clone,Dn as complex,mt as concat,Bb as concat1d,Ob as concat2d,zb as concat3d,Gb as concat4d,JM as constraints,Ub as conv1d,Zo as conv2d,Wb as conv2dTranspose,Kb as conv3d,Hb as conv3dTranspose,uge as copyRegisteredKernels,Xm as cos,qb as cosh,Yd as cosineWindow,Kd as cumprod,jb as cumsum,dn as customGrad,X_ as data,A2 as denseBincount,ok as deprecationWarn,w2 as depthToSpace,tl as depthwiseConv2d,qee as deregisterOp,qu as device_util,N2 as diag,D2 as dilation2d,tTe as disableDeprecationWarnings,Re as dispose,rTe as disposeVariables,me as div,P2 as divNoNan,R2 as dot,vk as dropout,F2 as einsum,rl as elu,eTe as enableDebugMode,Jxe as enableProdMode,Ak as enclosingPowerOfTwo,Rn as engine,B as env,jr as equal,M2 as erf,L2 as euclideanNorm,gr as exp,_r as expandDims,$2 as expm1,Hl as eye,ac as fft,ci as fill,uTe as findBackend,lTe as findBackendFactory,nl as floor,Pb as floorDiv,Sz as forceHalfFloat,il as fused,ol as gather,CZ as gatherND,Ab as gather_util,aTe as getBackend,PC as getGradient,Md as getKernel,ub as getKernelsForBackend,Vhe as getThreadsCount,ew as gpgpu_util,FX as grad,MX as grads,pr as greater,Rs as greaterEqual,Zl as ifft,Zu as imag,ul as image,vZ as inTopKAsync,eE as initializers,rS as input,Pn as io,cy as irfft,B2 as isFinite,O2 as isInf,z2 as isNaN,Gt as keep,xr as kernel_impls,FE as layers,Ym as leakyRelu,Xb as less,Fs as lessEqual,Nk as linalg,G2 as linspace,zte as loadGraphModel,Gte as loadGraphModelSync,e9 as loadLayersModel,U2 as localResponseNormalization,Gr as log,Zm as log1p,W2 as logSigmoid,Qb as logSoftmax,Jb as logSumExp,Yr as logicalAnd,Qm as logicalNot,ey as logicalOr,K2 as logicalXor,vQ as losses,V2 as lowerBound,qe as matMul,q1 as math,cn as max,Jm as maxPool,ry as maxPool3d,H2 as maxPoolWithArgmax,Qo as maximum,Bt as mean,Gd as memory,q2 as meshgrid,ME as metrics,Hd as min,sl as minimum,j2 as mirrorPad,X2 as mod,QJ as model,EE as models,ql as moments,hZ as movingAverage,_ as mul,Y2 as multiRNNCell,Z2 as multinomial,et as neg,Zd as nextFrame,Vl as norm,au as notEqual,Xu as oneHot,br as ones,Lr as onesLike,A as op,Q2 as outerProduct,qn as pad,J2 as pad1d,eP as pad2d,tP as pad3d,rP as pad4d,nP as pool,Hn as pow,tc as prelu,yb as print,oP as prod,nTe as profile,sP as rand,CP as randomGamma,Xl as randomNormal,kP as randomStandardNormal,di as randomUniform,al as range,sTe as ready,nu as real,SP as reciprocal,Yu as registerBackend,t9 as registerCallbackConstructor,E0 as registerGradient,Zi as registerKernel,Hee as registerOp,_E as regularizers,Zr as relu,sy as relu6,iTe as removeBackend,$ as reshape,Pr as reverse,vP as reverse1d,AP as reverse2d,wP as reverse3d,NP as reverse4d,ic as rfft,ay as round,iy as rsqrt,ce as scalar,bZ as scatterND,Ud as scatter_util,qd as searchSorted,uy as selu,ly as separableConv2d,JJ as sequential,re as serialization,f5 as setBackend,pTe as setPlatform,Khe as setThreadsCount,Uhe as setWasmPath,Whe as setWasmPaths,uA as setWebGLContext,DP as setdiff1dAsync,Vc as shared,Mn as sigmoid,PP as sign,SQ as signal,py as sin,my as sinh,Ge as slice,nc as slice1d,Xd as slice2d,oc as slice3d,Yl as slice4d,Tt as slice_util,sc as softmax,su as softplus,ec as spaceToBatchND,AQ as sparse,TZ as sparseToDense,kQ as spectral,Rr as split,$t as sqrt,Ye as square,dy as squaredDifference,Ms as squeeze,yr as stack,fi as step,RP as stridedSlice,wQ as string,le as sub,de as sum,Qi as sumOutType,FP as tan,Ju as tanh,Nr as tensor,jt as tensor1d,La as tensor2d,Sb as tensor3d,MP as tensor4d,EP as tensor5d,_P as tensor6d,Ds as tensor_util,p2 as test_util,U as tidy,Xr as tile,oTe as time,LP as topk,up as train,We as transpose,uc as truncatedNormal,$P as unique,ige as unregisterGradient,age as unregisterKernel,fy as unsortedSegmentSum,Ur as unstack,_t as upcastType,BP as upperBound,y as util,EX as valueAndGrad,_X as valueAndGrads,hy as variable,Yb as variableGrads,TQr as version,Wte as version_converter,U5 as version_core,bre as version_cpu,kf as version_layers,Hhe as version_wasm,uae as version_webgl,H5t as webgl,Yc as webgl_util,OV as webgpu,Wt as where,by as whereAsync,It as zeros,De as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
