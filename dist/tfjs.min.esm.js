var yj=Object.create;var Kg=Object.defineProperty;var xj=Object.getOwnPropertyDescriptor;var Tj=Object.getOwnPropertyNames;var kj=Object.getPrototypeOf,Ij=Object.prototype.hasOwnProperty;var BN=r=>Kg(r,"__esModule",{value:!0});var ns=(r=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(r,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):r)(function(r){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});var Sn=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Qe=(r,e)=>{BN(r);for(var t in e)Kg(r,t,{get:e[t],enumerable:!0})},Cj=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Tj(e))!Ij.call(r,n)&&n!=="default"&&Kg(r,n,{get:()=>e[n],enumerable:!(t=xj(e,n))||t.enumerable});return r},Tl=r=>Cj(BN(Kg(r!=null?yj(kj(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var oD=Sn((hme,nD)=>{nD.exports=Jt;var ws=null;try{ws=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Jt(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Jt.prototype.__isLong__;Object.defineProperty(Jt.prototype,"__isLong__",{value:!0});function Vn(r){return(r&&r.__isLong__)===!0}Jt.isLong=Vn;var qN={},XN={};function wl(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=XN[r],n)?n:(t=er(r,(r|0)<0?-1:0,!0),o&&(XN[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=qN[r],n)?n:(t=er(r,r<0?-1:0,!1),o&&(qN[r]=t),t))}Jt.fromInt=wl;function Ss(r,e){if(isNaN(r))return e?Sl:_s;if(e){if(r<0)return Sl;if(r>=QN)return rD}else{if(r<=-ZN)return jn;if(r+1>=ZN)return tD}return r<0?Ss(-r,e).neg():er(r%wc|0,r/wc|0,e)}Jt.fromNumber=Ss;function er(r,e,t){return new Jt(r,e,t)}Jt.fromBits=er;var Xg=Math.pow;function vk(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return _s;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return vk(r.substring(1),e,t).neg();for(var o=Ss(Xg(t,8)),s=_s,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),u=parseInt(r.substring(a,a+i),t);if(i<8){var l=Ss(Xg(t,i));s=s.mul(l).add(Ss(u))}else s=s.mul(o),s=s.add(Ss(u))}return s.unsigned=e,s}Jt.fromString=vk;function ka(r,e){return typeof r=="number"?Ss(r,e):typeof r=="string"?vk(r,e):er(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Jt.fromValue=ka;var YN=1<<16,jj=1<<24,wc=YN*YN,QN=wc*wc,ZN=QN/2,JN=wl(jj),_s=wl(0);Jt.ZERO=_s;var Sl=wl(0,!0);Jt.UZERO=Sl;var Sc=wl(1);Jt.ONE=Sc;var eD=wl(1,!0);Jt.UONE=eD;var wk=wl(-1);Jt.NEG_ONE=wk;var tD=er(4294967295|0,2147483647|0,!1);Jt.MAX_VALUE=tD;var rD=er(4294967295|0,4294967295|0,!0);Jt.MAX_UNSIGNED_VALUE=rD;var jn=er(0,2147483648|0,!1);Jt.MIN_VALUE=jn;var Ie=Jt.prototype;Ie.toInt=function(){return this.unsigned?this.low>>>0:this.low};Ie.toNumber=function(){return this.unsigned?(this.high>>>0)*wc+(this.low>>>0):this.high*wc+(this.low>>>0)};Ie.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(jn)){var t=Ss(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=Ss(Xg(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),l=a.sub(u.mul(s)).toInt()>>>0,p=l.toString(e);if(a=u,a.isZero())return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}};Ie.getHighBits=function(){return this.high};Ie.getHighBitsUnsigned=function(){return this.high>>>0};Ie.getLowBits=function(){return this.low};Ie.getLowBitsUnsigned=function(){return this.low>>>0};Ie.getNumBitsAbs=function(){if(this.isNegative())return this.eq(jn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};Ie.isZero=function(){return this.high===0&&this.low===0};Ie.eqz=Ie.isZero;Ie.isNegative=function(){return!this.unsigned&&this.high<0};Ie.isPositive=function(){return this.unsigned||this.high>=0};Ie.isOdd=function(){return(this.low&1)==1};Ie.isEven=function(){return(this.low&1)==0};Ie.equals=function(e){return Vn(e)||(e=ka(e)),this.unsigned!==e.unsigned&&this.high>>>31==1&&e.high>>>31==1?!1:this.high===e.high&&this.low===e.low};Ie.eq=Ie.equals;Ie.notEquals=function(e){return!this.eq(e)};Ie.neq=Ie.notEquals;Ie.ne=Ie.notEquals;Ie.lessThan=function(e){return this.comp(e)<0};Ie.lt=Ie.lessThan;Ie.lessThanOrEqual=function(e){return this.comp(e)<=0};Ie.lte=Ie.lessThanOrEqual;Ie.le=Ie.lessThanOrEqual;Ie.greaterThan=function(e){return this.comp(e)>0};Ie.gt=Ie.greaterThan;Ie.greaterThanOrEqual=function(e){return this.comp(e)>=0};Ie.gte=Ie.greaterThanOrEqual;Ie.ge=Ie.greaterThanOrEqual;Ie.compare=function(e){if(Vn(e)||(e=ka(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Ie.comp=Ie.compare;Ie.negate=function(){return!this.unsigned&&this.eq(jn)?jn:this.not().add(Sc)};Ie.neg=Ie.negate;Ie.add=function(e){Vn(e)||(e=ka(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=e.high>>>16,i=e.high&65535,u=e.low>>>16,l=e.low&65535,p=0,c=0,m=0,f=0;return f+=s+l,m+=f>>>16,f&=65535,m+=o+u,c+=m>>>16,m&=65535,c+=n+i,p+=c>>>16,c&=65535,p+=t+a,p&=65535,er(m<<16|f,p<<16|c,this.unsigned)};Ie.subtract=function(e){return Vn(e)||(e=ka(e)),this.add(e.neg())};Ie.sub=Ie.subtract;Ie.multiply=function(e){if(this.isZero())return _s;if(Vn(e)||(e=ka(e)),ws){var t=ws.mul(this.low,this.high,e.low,e.high);return er(t,ws.get_high(),this.unsigned)}if(e.isZero())return _s;if(this.eq(jn))return e.isOdd()?jn:_s;if(e.eq(jn))return this.isOdd()?jn:_s;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(JN)&&e.lt(JN))return Ss(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=e.high>>>16,u=e.high&65535,l=e.low>>>16,p=e.low&65535,c=0,m=0,f=0,d=0;return d+=a*p,f+=d>>>16,d&=65535,f+=s*p,m+=f>>>16,f&=65535,f+=a*l,m+=f>>>16,f&=65535,m+=o*p,c+=m>>>16,m&=65535,m+=s*l,c+=m>>>16,m&=65535,m+=a*u,c+=m>>>16,m&=65535,c+=n*p+o*l+s*u+a*i,c&=65535,er(f<<16|d,c<<16|m,this.unsigned)};Ie.mul=Ie.multiply;Ie.divide=function(e){if(Vn(e)||(e=ka(e)),e.isZero())throw Error("division by zero");if(ws){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?ws.div_u:ws.div_s)(this.low,this.high,e.low,e.high);return er(t,ws.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Sl:_s;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Sl;if(e.gt(this.shru(1)))return eD;s=Sl}else{if(this.eq(jn)){if(e.eq(Sc)||e.eq(wk))return jn;if(e.eq(jn))return Sc;var a=this.shr(1);return n=a.div(e).shl(1),n.eq(_s)?e.isNegative()?Sc:wk:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(jn))return this.unsigned?Sl:_s;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=_s}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),u=i<=48?1:Xg(2,i-48),l=Ss(n),p=l.mul(e);p.isNegative()||p.gt(o);)n-=u,l=Ss(n,this.unsigned),p=l.mul(e);l.isZero()&&(l=Sc),s=s.add(l),o=o.sub(p)}return s};Ie.div=Ie.divide;Ie.modulo=function(e){if(Vn(e)||(e=ka(e)),ws){var t=(this.unsigned?ws.rem_u:ws.rem_s)(this.low,this.high,e.low,e.high);return er(t,ws.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Ie.mod=Ie.modulo;Ie.rem=Ie.modulo;Ie.not=function(){return er(~this.low,~this.high,this.unsigned)};Ie.and=function(e){return Vn(e)||(e=ka(e)),er(this.low&e.low,this.high&e.high,this.unsigned)};Ie.or=function(e){return Vn(e)||(e=ka(e)),er(this.low|e.low,this.high|e.high,this.unsigned)};Ie.xor=function(e){return Vn(e)||(e=ka(e)),er(this.low^e.low,this.high^e.high,this.unsigned)};Ie.shiftLeft=function(e){return Vn(e)&&(e=e.toInt()),(e&=63)==0?this:e<32?er(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):er(0,this.low<<e-32,this.unsigned)};Ie.shl=Ie.shiftLeft;Ie.shiftRight=function(e){return Vn(e)&&(e=e.toInt()),(e&=63)==0?this:e<32?er(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):er(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Ie.shr=Ie.shiftRight;Ie.shiftRightUnsigned=function(e){if(Vn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return er(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?er(t,0,this.unsigned):er(t>>>e-32,0,this.unsigned)};Ie.shru=Ie.shiftRightUnsigned;Ie.shr_u=Ie.shiftRightUnsigned;Ie.toSigned=function(){return this.unsigned?er(this.low,this.high,!1):this};Ie.toUnsigned=function(){return this.unsigned?this:er(this.low,this.high,!0)};Ie.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Ie.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Ie.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Jt.fromBytes=function(e,t,n){return n?Jt.fromBytesLE(e,t):Jt.fromBytesBE(e,t)};Jt.fromBytesLE=function(e,t){return new Jt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Jt.fromBytesBE=function(e,t){return new Jt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var WD=Sn(()=>{});var UD=Sn(()=>{});var v0=Sn((C0,VI)=>{(function(r,e,t){function n(i){var u=this,l=a();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(i),u.s0<0&&(u.s0+=1),u.s1-=l(i),u.s1<0&&(u.s1+=1),u.s2-=l(i),u.s2<0&&(u.s2+=1),l=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function s(i,u){var l=new n(i),p=u&&u.state,c=l.next;return c.int32=function(){return l.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,p&&(typeof p=="object"&&o(p,l),c.state=function(){return o(l,{})}),c}function a(){var i=4022871197,u=function(l){l=String(l);for(var p=0;p<l.length;p++){i+=l.charCodeAt(p);var c=.02519603282416938*i;i=c>>>0,c-=i,c*=i,i=c>>>0,c-=i,i+=c*4294967296}return(i>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(C0,typeof VI=="object"&&VI,typeof define=="function"&&define)});var S0=Sn((w0,jI)=>{(function(r,e,t){function n(a){var i=this,u="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var p=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^p^p>>>8},a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(w0,typeof jI=="object"&&jI,typeof define=="function"&&define)});var A0=Sn((_0,HI)=>{(function(r,e,t){function n(a){var i=this,u="";i.next=function(){var p=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(p^p<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,l==u.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(_0,typeof HI=="object"&&HI,typeof define=="function"&&define)});var D0=Sn((N0,qI)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var l=i.x,p=i.i,c,m,f;return c=l[p],c^=c>>>7,m=c^c<<24,c=l[p+1&7],m^=c^c>>>10,c=l[p+3&7],m^=c^c>>>3,c=l[p+4&7],m^=c^c<<7,c=l[p+7&7],c=c^c<<13,m^=c^c<<9,l[p]=m,i.i=p+1&7,m};function u(l,p){var c,m,f=[];if(p===(p|0))m=f[0]=p;else for(p=""+p,c=0;c<p.length;++c)f[c&7]=f[c&7]<<15^p.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?m=f[7]=-1:m=f[c],l.x=f,l.i=0,c=256;c>0;--c)l.next()}u(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(l.x&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(N0,typeof qI=="object"&&qI,typeof define=="function"&&define)});var F0=Sn((P0,XI)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var l=i.w,p=i.X,c=i.i,m,f;return i.w=l=l+1640531527|0,f=p[c+34&127],m=p[c=c+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=p[c]=f^m,i.i=c,f+(l^l>>>16)|0};function u(l,p){var c,m,f,d,h,g=[],y=128;for(p===(p|0)?(m=p,p=null):(p=p+"\0",m=0,y=Math.max(y,p.length)),f=0,d=-32;d<y;++d)p&&(m^=p.charCodeAt((d+32)%p.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,c=g[d&127]^=m+h,f=c==0?f+1:0);for(f>=128&&(g[(p&&p.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],c=g[f=f+1&127],m^=m<<13,c^=c<<17,m^=m>>>15,c^=c>>>12,g[f]=m^c;l.w=h,l.X=g,l.i=f}u(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(l.X&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(P0,typeof XI=="object"&&XI,typeof define=="function"&&define)});var E0=Sn((M0,YI)=>{(function(r,e,t){function n(a){var i=this,u="";i.next=function(){var p=i.b,c=i.c,m=i.d,f=i.a;return p=p<<25^p>>>7^c,c=c-m|0,m=m<<24^m>>>8^f,f=f-p|0,i.b=p=p<<20^p>>>12^c,i.c=c=c-m|0,i.d=m<<16^c>>>16^f,i.a=f-p|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):u+=a;for(var l=0;l<u.length+20;l++)i.b^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(M0,typeof YI=="object"&&YI,typeof define=="function"&&define)});var R0=Sn(()=>{});var $0=Sn((L0,xb)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),u=t.pow(2,s),l=u*2,p=n-1,c;function m(T,k,v){var P=[];k=k==!0?{entropy:!0}:k||{};var A=g(h(k.entropy?[T,x(e)]:T??y(),3),P),F=new f(P),E=function(){for(var L=F.g(o),U=i,K=0;L<u;)L=(L+K)*n,U*=n,K=F.g(1);for(;L>=l;)L/=2,U/=2,K>>>=1;return(L+K)/U};return E.int32=function(){return F.g(4)|0},E.quick=function(){return F.g(4)/4294967296},E.double=E,g(x(F.S),e),(k.pass||v||function(L,U,K,B){return B&&(B.S&&d(B,F),L.state=function(){return d(F,{})}),K?(t[a]=L,U):L})(E,A,"global"in k?k.global:this==t,k.state)}function f(T){var k,v=T.length,P=this,A=0,F=P.i=P.j=0,E=P.S=[];for(v||(T=[v++]);A<n;)E[A]=A++;for(A=0;A<n;A++)E[A]=E[F=p&F+T[A%v]+(k=E[A])],E[F]=k;(P.g=function(L){for(var U,K=0,B=P.i,V=P.j,j=P.S;L--;)U=j[B=p&B+1],K=K*n+j[p&(j[B]=j[V=p&V+U])+(j[V]=U)];return P.i=B,P.j=V,K})(n)}function d(T,k){return k.i=T.i,k.j=T.j,k.S=T.S.slice(),k}function h(T,k){var v=[],P=typeof T,A;if(k&&P=="object")for(A in T)try{v.push(h(T[A],k-1))}catch{}return v.length?v:P=="string"?T:T+"\0"}function g(T,k){for(var v=T+"",P,A=0;A<v.length;)k[p&A]=p&(P^=k[p&A]*19)+v.charCodeAt(A++);return x(k)}function y(){try{var T;return c&&(T=c.randomBytes)?T=T(n):(T=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(T)),x(T)}catch{var k=r.navigator,v=k&&k.plugins;return[+new Date,r,v,r.screen,x(e)]}}function x(T){return String.fromCharCode.apply(0,T)}if(g(t.random(),e),typeof xb=="object"&&xb.exports){xb.exports=m;try{c=R0()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):t["seed"+a]=m})(typeof self!="undefined"?self:L0,[],Math)});var Ff=Sn((_1e,B0)=>{var n8=v0(),o8=S0(),s8=A0(),a8=D0(),i8=F0(),u8=E0(),Vl=$0();Vl.alea=n8;Vl.xor128=o8;Vl.xorwow=s8;Vl.xorshift7=a8;Vl.xor4096=i8;Vl.tychei=u8;B0.exports=Vl});var Qv=Sn(()=>{});var d4=Sn((Wx,xN)=>{var yN=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};function t(){return te.buffer!=Je&&Pr(te.buffer),vt}function n(){return te.buffer!=Je&&Pr(te.buffer),qt}function o(){return te.buffer!=Je&&Pr(te.buffer),In}function s(){return te.buffer!=Je&&Pr(te.buffer),zr}function a(){return te.buffer!=Je&&Pr(te.buffer),rn}var i=typeof e!="undefined"?e:{},u,l;i.ready=new Promise(function(S,M){u=S,l=M});var p={},c;for(c in i)i.hasOwnProperty(c)&&(p[c]=i[c]);var m=[],f="./this.program",d=function(S,M){throw M},h=!1,g=!1,y=!1,x=!1;h=typeof window=="object",g=typeof importScripts=="function",y=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=!h&&!y&&!g;var T=i.ENVIRONMENT_IS_PTHREAD||!1;T&&(Je=i.buffer);var k="";function v(S){return i.locateFile?i.locateFile(S,k):k+S}var P,A,F,E,L,U;if(y){g?k=ns("path").dirname(k)+"/":k=__dirname+"/",P=function(M,z){return L||(L=ns("fs")),U||(U=ns("path")),M=U.normalize(M),L.readFileSync(M,z?null:"utf8")},F=function(M){var z=P(M,!0);return z.buffer||(z=new Uint8Array(z)),he(z.buffer),z},process.argv.length>1&&(f=process.argv[1].replace(/\\/g,"/")),m=process.argv.slice(2),process.on("uncaughtException",function(S){if(!(S instanceof Jm))throw S}),process.on("unhandledRejection",yi),d=function(S){process.exit(S)},i.inspect=function(){return"[Emscripten Module object]"};var K;try{K=ns("worker_threads")}catch(S){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),S}global.Worker=K.Worker}else x?(typeof read!="undefined"&&(P=function(M){return read(M)}),F=function(M){var z;return typeof readbuffer=="function"?new Uint8Array(readbuffer(M)):(z=read(M,"binary"),he(typeof z=="object"),z)},typeof scriptArgs!="undefined"?m=scriptArgs:typeof arguments!="undefined"&&(m=arguments),typeof quit=="function"&&(d=function(S){quit(S)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(h||g)&&(g?k=self.location.href:typeof document!="undefined"&&document.currentScript&&(k=document.currentScript.src),typeof r!="undefined"&&r&&(k=r),k.indexOf("blob:")!==0?k=k.substr(0,k.lastIndexOf("/")+1):k="",y?(P=function(M,z){return L||(L=ns("fs")),U||(U=ns("path")),M=U.normalize(M),L.readFileSync(M,z?null:"utf8")},F=function(M){var z=P(M,!0);return z.buffer||(z=new Uint8Array(z)),he(z.buffer),z}):(P=function(S){var M=new XMLHttpRequest;return M.open("GET",S,!1),M.send(null),M.responseText},g&&(F=function(S){var M=new XMLHttpRequest;return M.open("GET",S,!1),M.responseType="arraybuffer",M.send(null),new Uint8Array(M.response)}),A=function(S,M,z){var q=new XMLHttpRequest;q.open("GET",S,!0),q.responseType="arraybuffer",q.onload=function(){if(q.status==200||q.status==0&&q.response){M(q.response);return}z()},q.onerror=z,q.send(null)}),E=function(S){document.title=S});y&&typeof performance=="undefined"&&(global.performance=ns("perf_hooks").performance);var B=i.print||console.log.bind(console),V=i.printErr||console.warn.bind(console);for(c in p)p.hasOwnProperty(c)&&(i[c]=p[c]);p=null,i.arguments&&(m=i.arguments),i.thisProgram&&(f=i.thisProgram),i.quit&&(d=i.quit);function j(S){j.shown||(j.shown={}),j.shown[S]||(j.shown[S]=1,V(S))}var H=Atomics.load,ee=Atomics.store,Y=Atomics.compareExchange,ne;i.wasmBinary&&(ne=i.wasmBinary);var oe=i.noExitRuntime||!0;typeof WebAssembly!="object"&&yi("no native wasm support detected");var te,le,ae=!1,ge;function he(S,M){S||yi("Assertion failed: "+M)}function Te(S){var M=i["_"+S];return he(M,"Cannot call unknown function "+S+", make sure it is exported"),M}function Se(S,M,z,q,ke){var be={string:function(nn){var Kp=0;if(nn!=null&&nn!==0){var $N=(nn.length<<2)+1;Kp=Gp($N),gt(nn,Kp,$N)}return Kp},array:function(nn){var Kp=Gp(nn.length);return Ot(nn,Kp),Kp}};function xe(nn){return M==="string"?Oe(nn):M==="boolean"?Boolean(nn):nn}var Fe=Te(S),Dt=[],Fr=0;if(q)for(var Sr=0;Sr<q.length;Sr++){var _u=be[z[Sr]];_u?(Fr===0&&(Fr=Zm()),Dt[Sr]=_u(q[Sr])):Dt[Sr]=q[Sr]}var Up=Fe.apply(null,Dt);return Up=xe(Up),Fr!==0&&zp(Fr),Up}function Be(S,M,z,q){z=z||[];var ke=z.every(function(xe){return xe==="number"}),be=M!=="string";return be&&ke&&!q?Te(S):function(){return Se(S,M,z,arguments,q)}}function Re(S,M,z){for(var q=M+z,ke="";!(M>=q);){var be=S[M++];if(!be)return ke;if(!(be&128)){ke+=String.fromCharCode(be);continue}var xe=S[M++]&63;if((be&224)==192){ke+=String.fromCharCode((be&31)<<6|xe);continue}var Fe=S[M++]&63;if((be&240)==224?be=(be&15)<<12|xe<<6|Fe:be=(be&7)<<18|xe<<12|Fe<<6|S[M++]&63,be<65536)ke+=String.fromCharCode(be);else{var Dt=be-65536;ke+=String.fromCharCode(55296|Dt>>10,56320|Dt&1023)}}return ke}function Oe(S,M){return S?Re(n(),S,M):""}function rt(S,M,z,q){if(!(q>0))return 0;for(var ke=z,be=z+q-1,xe=0;xe<S.length;++xe){var Fe=S.charCodeAt(xe);if(Fe>=55296&&Fe<=57343){var Dt=S.charCodeAt(++xe);Fe=65536+((Fe&1023)<<10)|Dt&1023}if(Fe<=127){if(z>=be)break;M[z++]=Fe}else if(Fe<=2047){if(z+1>=be)break;M[z++]=192|Fe>>6,M[z++]=128|Fe&63}else if(Fe<=65535){if(z+2>=be)break;M[z++]=224|Fe>>12,M[z++]=128|Fe>>6&63,M[z++]=128|Fe&63}else{if(z+3>=be)break;M[z++]=240|Fe>>18,M[z++]=128|Fe>>12&63,M[z++]=128|Fe>>6&63,M[z++]=128|Fe&63}}return M[z]=0,z-ke}function gt(S,M,z){return rt(S,n(),M,z)}function Bt(S){for(var M=0,z=0;z<S.length;++z){var q=S.charCodeAt(z);q>=55296&&q<=57343&&(q=65536+((q&1023)<<10)|S.charCodeAt(++z)&1023),q<=127?++M:q<=2047?M+=2:q<=65535?M+=3:M+=4}return M}function Ot(S,M){t().set(S,M)}function kt(S,M){return S%M>0&&(S+=M-S%M),S}var Je,vt,qt,On,gr,In,zr,Vs,rn;function Pr(S){Je=S,i.HEAP8=vt=new Int8Array(S),i.HEAP16=On=new Int16Array(S),i.HEAP32=In=new Int32Array(S),i.HEAPU8=qt=new Uint8Array(S),i.HEAPU16=gr=new Uint16Array(S),i.HEAPU32=zr=new Uint32Array(S),i.HEAPF32=Vs=new Float32Array(S),i.HEAPF64=rn=new Float64Array(S)}var eo=i.INITIAL_MEMORY||16777216;if(T)te=i.wasmMemory,Je=i.buffer;else if(i.wasmMemory)te=i.wasmMemory;else if(te=new WebAssembly.Memory({initial:eo/65536,maximum:2147483648/65536,shared:!0}),!(te.buffer instanceof SharedArrayBuffer))throw V("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");te&&(Je=te.buffer),eo=Je.byteLength,Pr(Je);var br,Cn=[],zn=[],dl=[],hl=[],js=[],bi=!1,Wm=!1;T||zn.push({func:function(){$g()}});function Lp(){if(!T){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;)jx(i.preRun.shift());$p(Cn)}}function kg(){bi=!0,!T&&$p(zn)}function Ig(){T||$p(dl)}function vn(){T||(Wm=!0)}function Cg(){if(!T){if(i.postRun)for(typeof i.postRun=="function"&&(i.postRun=[i.postRun]);i.postRun.length;)Hx(i.postRun.shift());$p(js)}}function jx(S){Cn.unshift(S)}function Hx(S){js.unshift(S)}var rs=0,Um=null,gl=null;function qx(S){he(!T,"addRunDependency cannot be used in a pthread worker"),rs++,i.monitorRunDependencies&&i.monitorRunDependencies(rs)}function Xx(S){if(rs--,i.monitorRunDependencies&&i.monitorRunDependencies(rs),rs==0&&(Um!==null&&(clearInterval(Um),Um=null),gl)){var M=gl;gl=null,M()}}i.preloadedImages={},i.preloadedAudios={};function yi(S){i.onAbort&&i.onAbort(S),T&&console.error("Pthread aborting at "+new Error().stack),S+="",V(S),ae=!0,ge=1,S="abort("+S+"). Build with -s ASSERTIONS=1 for more info.";var M=new WebAssembly.RuntimeError(S);throw l(M),M}function bl(S,M){return String.prototype.startsWith?S.startsWith(M):S.indexOf(M)===0}var Yx="data:application/octet-stream;base64,";function vg(S){return bl(S,Yx)}var Qx="file://";function wg(S){return bl(S,Qx)}var wn="tfjs-backend-wasm-threaded-simd.wasm";vg(wn)||(wn=v(wn));function Zx(S){try{if(S==wn&&ne)return new Uint8Array(ne);if(F)return F(S);throw"both async and sync fetching of the wasm failed"}catch(M){yi(M)}}function Sg(){if(!ne&&(h||g)){if(typeof fetch=="function"&&!wg(wn))return fetch(wn,{credentials:"same-origin"}).then(function(S){if(!S.ok)throw"failed to load wasm binary file at '"+wn+"'";return S.arrayBuffer()}).catch(function(){return Zx(wn)});if(A)return new Promise(function(S,M){A(wn,function(z){S(new Uint8Array(z))},M)})}return Promise.resolve().then(function(){return Zx(wn)})}function Jx(){var S={a:VT};function M(xe,Fe){var Dt=xe.exports;if(i.asm=Dt,br=i.asm.kb,le=Fe,!T){var Fr=Me.unusedWorkers.length;Me.unusedWorkers.forEach(function(Sr){Me.loadWasmModuleToWorker(Sr,function(){--Fr||Xx("wasm-instantiate")})})}}T||qx("wasm-instantiate");function z(xe){M(xe.instance,xe.module)}function q(xe){return Sg().then(function(Fe){return WebAssembly.instantiate(Fe,S)}).then(xe,function(Fe){V("failed to asynchronously prepare wasm: "+Fe),yi(Fe)})}function ke(){return!ne&&typeof WebAssembly.instantiateStreaming=="function"&&!vg(wn)&&!wg(wn)&&typeof fetch=="function"?fetch(wn,{credentials:"same-origin"}).then(function(xe){var Fe=WebAssembly.instantiateStreaming(xe,S);return Fe.then(z,function(Dt){return V("wasm streaming compile failed: "+Dt),V("falling back to ArrayBuffer instantiation"),q(z)})}):q(z)}if(i.instantiateWasm)try{var be=i.instantiateWasm(S,M);return be}catch(xe){return V("Module.instantiateWasm callback failed with error: "+xe),!1}return ke().catch(l),{}}var _g={10072:function(){throw"Canceled!"},10090:function(S,M){setTimeout(function(){PN(S,M)},0)}};function eT(){Me.initRuntime()}function $p(S){for(;S.length>0;){var M=S.shift();if(typeof M=="function"){M(i);continue}var z=M.func;typeof z=="number"?M.arg===void 0?br.get(z)():br.get(z)(M.arg):z(M.arg===void 0?null:M.arg)}}var Iu={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Km(S,M){if(S<=0||S>t().length||S&!0||M<0)return-28;if(M==0)return 0;M>=2147483647&&(M=1/0);var z=Atomics.load(o(),Wp>>2),q=0;if(z==S){var ke=Atomics.compareExchange(o(),Wp>>2,z,0);if(ke==z&&(--M,q=1,M<=0))return 1}var be=Atomics.notify(o(),S>>2,M);if(be>=0)return be+q;throw"Atomics.notify returned an unexpected value "+be}i._emscripten_futex_wake=Km;function tT(S){if(T)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in killThread!";o()[S+12>>2]=0;var M=Me.pthreads[S];M.worker.terminate(),Me.freeThreadData(M),Me.runningWorkers.splice(Me.runningWorkers.indexOf(M.worker),1),M.worker.pthread=void 0}function rT(S){if(T)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cancelThread!";var M=Me.pthreads[S];M.worker.postMessage({cmd:"cancel"})}function Ag(S){if(T)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cleanupThread!";var M=Me.pthreads[S];if(M){o()[S+12>>2]=0;var z=M.worker;Me.returnWorkerToPool(z)}}var Me={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var S=8,M=0;M<S;++M)Me.allocateUnusedWorker()},initRuntime:function(){for(var S=xl(228),M=0;M<228/4;++M)s()[S/4+M]=0;o()[S+12>>2]=S;var z=S+152;o()[z>>2]=z;for(var q=xl(512),M=0;M<128;++M)s()[q/4+M]=0;Atomics.store(s(),S+100>>2,q),Atomics.store(s(),S+40>>2,S),ck(S,!g,1),NN(S)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Me.threadExitHandlers.length>0;)Me.threadExitHandlers.pop()();T&&Su()&&AN()},runExitHandlersAndDeinitThread:function(S,M){Atomics.store(s(),S+56>>2,1),Atomics.store(s(),S+60>>2,0),Me.runExitHandlers(),Atomics.store(s(),S+4>>2,M),Atomics.store(s(),S+0>>2,1),Km(S+0,2147483647),ck(0,0,0)},threadExit:function(S){var M=Su();M&&(Me.runExitHandlersAndDeinitThread(M,S),T&&postMessage({cmd:"exit"}))},threadCancel:function(){Me.runExitHandlersAndDeinitThread(Su(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var S in Me.pthreads){var M=Me.pthreads[S];M&&M.worker&&Me.returnWorkerToPool(M.worker)}Me.pthreads={};for(var z=0;z<Me.unusedWorkers.length;++z){var q=Me.unusedWorkers[z];q.terminate()}Me.unusedWorkers=[];for(var z=0;z<Me.runningWorkers.length;++z){var q=Me.runningWorkers[z],M=q.pthread;Me.freeThreadData(M),q.terminate()}Me.runningWorkers=[]},freeThreadData:function(S){if(!!S){if(S.threadInfoStruct){var M=o()[S.threadInfoStruct+100>>2];o()[S.threadInfoStruct+100>>2]=0,Qm(M),Qm(S.threadInfoStruct)}S.threadInfoStruct=0,S.allocatedOwnStack&&S.stackBase&&Qm(S.stackBase),S.stackBase=0,S.worker&&(S.worker.pthread=null)}},returnWorkerToPool:function(S){Me.runWithoutMainThreadQueuedCalls(function(){delete Me.pthreads[S.pthread.threadInfoStruct],Me.unusedWorkers.push(S),Me.runningWorkers.splice(Me.runningWorkers.indexOf(S),1),Me.freeThreadData(S.pthread),S.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(S){o()[LN>>2]=0;try{S()}finally{o()[LN>>2]=1}},receiveObjectTransfer:function(S){},loadWasmModuleToWorker:function(S,M){S.onmessage=function(z){var q=z.data,ke=q.cmd;if(S.pthread&&(Me.currentProxiedOperationCallerThread=S.pthread.threadInfoStruct),q.targetThread&&q.targetThread!=Su()){var be=Me.pthreads[q.targetThread];be?be.worker.postMessage(z.data,q.transferList):console.error('Internal error! Worker sent a message "'+ke+'" to target pthread '+q.targetThread+", but that thread no longer exists!"),Me.currentProxiedOperationCallerThread=void 0;return}if(ke==="processQueuedMainThreadWork")Wg();else if(ke==="spawnThread")Rg(z.data);else if(ke==="cleanupThread")Ag(q.thread);else if(ke==="killThread")tT(q.thread);else if(ke==="cancelThread")rT(q.thread);else if(ke==="loaded")S.loaded=!0,M&&M(S),S.runPthread&&(S.runPthread(),delete S.runPthread);else if(ke==="print")B("Thread "+q.threadId+": "+q.text);else if(ke==="printErr")V("Thread "+q.threadId+": "+q.text);else if(ke==="alert")alert("Thread "+q.threadId+": "+q.text);else if(ke==="exit"){var xe=S.pthread&&Atomics.load(s(),S.pthread.threadInfoStruct+64>>2);xe&&Me.returnWorkerToPool(S)}else if(ke==="exitProcess")try{bj(q.returnCode)}catch(Fe){if(Fe instanceof Jm)return;throw Fe}else ke==="cancelDone"?Me.returnWorkerToPool(S):ke==="objectTransfer"?Me.receiveObjectTransfer(z.data):z.data.target==="setimmediate"?S.postMessage(z.data):V("worker sent an unknown command "+ke);Me.currentProxiedOperationCallerThread=void 0},S.onerror=function(z){V("pthread sent an error! "+z.filename+":"+z.lineno+": "+z.message)},y&&(S.on("message",function(z){S.onmessage({data:z})}),S.on("error",function(z){S.onerror(z)}),S.on("exit",function(z){})),S.postMessage({cmd:"load",urlOrBlob:i.mainScriptUrlOrBlob||r,wasmMemory:te,wasmModule:le})},allocateUnusedWorker:function(){var S=v("tfjs-backend-wasm-threaded-simd.worker.js");Me.unusedWorkers.push(new Worker(S))},getNewWorker:function(){return Me.unusedWorkers.length==0&&(Me.allocateUnusedWorker(),Me.loadWasmModuleToWorker(Me.unusedWorkers[0])),Me.unusedWorkers.length>0?Me.unusedWorkers.pop():null},busySpinWait:function(S){for(var M=performance.now()+S;performance.now()<M;);}};function nT(S,M){EN(S,M),zp(S)}i.establishStackSpace=nT;function oT(){return oe}i.getNoExitRuntime=oT;function sT(S,M){return br.get(S)(M)}i.invokeEntryPoint=sT;function aT(S,M,z,q){yi("Assertion failed: "+Oe(S)+", at: "+[M?Oe(M):"unknown filename",z,q?Oe(q):"unknown function"])}function iT(S,M){var z=_main(S,M)}var yl;y?yl=function(){var S=process.hrtime();return S[0]*1e3+S[1]/1e6}:T?yl=function(){return performance.now()-i.__performance_now_clock_drift}:typeof dateNow!="undefined"?yl=dateNow:yl=function(){return performance.now()};function uT(S){return o()[SN()>>2]=S,S}function lT(S,M){if(T)return Cu(1,1,S,M)}function pT(S,M){if(S==M)postMessage({cmd:"processQueuedMainThreadWork"});else if(T)postMessage({targetThread:S,cmd:"processThreadQueue"});else{var z=Me.pthreads[S],q=z&&z.worker;if(!q)return;q.postMessage({cmd:"processThreadQueue"})}return 1}function cT(){yi()}function mT(S,M,z){var q=gT(M,z);return _g[S].apply(null,q)}function fT(S,M){}function Ng(S,M,z){if(S<=0||S>t().length||S&!0)return-28;if(h){if(Atomics.load(o(),S>>2)!=M)return-6;for(var ke=performance.now(),be=ke+z,xe=Atomics.exchange(o(),Wp>>2,S);;){if(ke=performance.now(),ke>be)return xe=Atomics.exchange(o(),Wp>>2,0),-73;if(xe=Atomics.exchange(o(),Wp>>2,0),xe==0)break;if(Wg(),Atomics.load(o(),S>>2)!=M)return-6;xe=Atomics.exchange(o(),Wp>>2,S)}return 0}else{var q=Atomics.wait(o(),S>>2,M,z);if(q==="timed-out")return-73;if(q==="not-equal")return-6;if(q==="ok")return 0;throw"Atomics.wait returned an unexpected value "+q}}function dT(S,M,z){n().copyWithin(S,M,M+z)}function hT(){return y?ns("os").cpus().length:navigator.hardwareConcurrency}function Cu(S,M){for(var z=arguments.length-2,q=Zm(),ke=z,be=Gp(ke*8),xe=be>>3,Fe=0;Fe<z;Fe++){var Dt=arguments[2+Fe];a()[xe+Fe]=Dt}var Fr=MN(S,ke,be,M);return zp(q),Fr}var Vm=[],jm=[];function gT(S,M){jm.length=0;var z;for(M>>=2;z=n()[S++];){var q=z<105;q&&M&1&&M++,jm.push(q?a()[M++>>1]:o()[M]),++M}return jm}function bT(S,M,z){Vm.length=M;for(var q=z>>3,ke=0;ke<M;ke++)Vm[ke]=a()[q+ke];var be=S<0,xe=be?_g[-S-1]:KT[S];return xe.apply(null,Vm)}function yT(){return n().length}function xT(S){try{return te.grow(S-Je.byteLength+65535>>>16),Pr(te.buffer),1}catch{}}function TT(S){var M=yT();if(S<=M)return!1;var z=2147483648;if(S>z)return!1;for(var q=1;q<=4;q*=2){var ke=M*(1+.2/q);ke=Math.min(ke,S+100663296);var be=Math.min(z,kt(Math.max(S,ke),65536)),xe=xT(be);if(xe)return!0}return!1}var ot={inEventHandler:0,removeAllEventListeners:function(){for(var S=ot.eventHandlers.length-1;S>=0;--S)ot._removeHandler(S);ot.eventHandlers=[],ot.deferredCalls=[]},registerRemoveEventListeners:function(){ot.removeEventListenersRegistered||(hl.push(ot.removeAllEventListeners),ot.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(S,M,z){function q(xe,Fe){if(xe.length!=Fe.length)return!1;for(var Dt in xe)if(xe[Dt]!=Fe[Dt])return!1;return!0}for(var ke in ot.deferredCalls){var be=ot.deferredCalls[ke];if(be.targetFunction==S&&q(be.argsList,z))return}ot.deferredCalls.push({targetFunction:S,precedence:M,argsList:z}),ot.deferredCalls.sort(function(xe,Fe){return xe.precedence<Fe.precedence})},removeDeferredCalls:function(S){for(var M=0;M<ot.deferredCalls.length;++M)ot.deferredCalls[M].targetFunction==S&&(ot.deferredCalls.splice(M,1),--M)},canPerformEventHandlerRequests:function(){return ot.inEventHandler&&ot.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!ot.canPerformEventHandlerRequests())for(var S=0;S<ot.deferredCalls.length;++S){var M=ot.deferredCalls[S];ot.deferredCalls.splice(S,1),--S,M.targetFunction.apply(null,M.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(S,M){for(var z=0;z<ot.eventHandlers.length;++z)ot.eventHandlers[z].target==S&&(!M||M==ot.eventHandlers[z].eventTypeString)&&ot._removeHandler(z--)},_removeHandler:function(S){var M=ot.eventHandlers[S];M.target.removeEventListener(M.eventTypeString,M.eventListenerFunc,M.useCapture),ot.eventHandlers.splice(S,1)},registerOrRemoveHandler:function(S){var M=function(ke){++ot.inEventHandler,ot.currentEventHandler=S,ot.runDeferredCalls(),S.handlerFunc(ke),ot.runDeferredCalls(),--ot.inEventHandler};if(S.callbackfunc)S.eventListenerFunc=M,S.target.addEventListener(S.eventTypeString,M,S.useCapture),ot.eventHandlers.push(S),ot.registerRemoveEventListeners();else for(var z=0;z<ot.eventHandlers.length;++z)ot.eventHandlers[z].target==S.target&&ot.eventHandlers[z].eventTypeString==S.eventTypeString&&ot._removeHandler(z--)},queueEventHandlerOnThread_iiii:function(S,M,z,q,ke){var be=Zm(),xe=Gp(12);o()[xe>>2]=z,o()[xe+4>>2]=q,o()[xe+8>>2]=ke,pk(0,S,637534208,M,q,xe),zp(be)},getTargetThreadForEventCallback:function(S){switch(S){case 1:return 0;case 2:return Me.currentProxiedOperationCallerThread;default:return S}},getNodeNameForTarget:function(S){return S?S==window?"#window":S==screen?"#screen":S&&S.nodeName?S.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function kT(S){var M=Bt(S)+1,z=xl(M);return gt(S,z,M),z}function IT(S,M,z,q){var ke=Zm(),be=Gp(12),xe=0;M&&(xe=kT(M)),o()[be>>2]=xe,o()[be+4>>2]=z,o()[be+8>>2]=q,pk(0,S,657457152,0,xe,be),zp(ke)}function CT(S,M,z,q){M=M?Oe(M):"",IT(S,M,z,q)}function vT(S){return S>2?Oe(S):S}var wT=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function ST(S){S=vT(S);var M=wT[S]||(typeof document!="undefined"?document.querySelector(S):void 0);return M}function Hm(S){return ST(S)}function Dg(S,M,z){var q=Hm(S);if(!q)return-4;if(q.canvasSharedPtr&&(o()[q.canvasSharedPtr>>2]=M,o()[q.canvasSharedPtr+4>>2]=z),q.offscreenCanvas||!q.controlTransferredOffscreen){q.offscreenCanvas&&(q=q.offscreenCanvas);var ke=!1;if(q.GLctxObject&&q.GLctxObject.GLctx){var be=q.GLctxObject.GLctx.getParameter(2978);ke=be[0]===0&&be[1]===0&&be[2]===q.width&&be[3]===q.height}q.width=M,q.height=z,ke&&q.GLctxObject.GLctx.viewport(0,0,M,z)}else if(q.canvasSharedPtr){var xe=o()[q.canvasSharedPtr+8>>2];return CT(xe,S,M,z),1}else return-4;return 0}function Pg(S,M,z){return T?Cu(2,1,S,M,z):Dg(S,M,z)}function _T(S,M,z){var q=Hm(S);return q?Dg(S,M,z):Pg(S,M,z)}function AT(S){}function NT(S,M){}function DT(S){var M=S.getExtension("ANGLE_instanced_arrays");if(M)return S.vertexAttribDivisor=function(z,q){M.vertexAttribDivisorANGLE(z,q)},S.drawArraysInstanced=function(z,q,ke,be){M.drawArraysInstancedANGLE(z,q,ke,be)},S.drawElementsInstanced=function(z,q,ke,be,xe){M.drawElementsInstancedANGLE(z,q,ke,be,xe)},1}function PT(S){var M=S.getExtension("OES_vertex_array_object");if(M)return S.createVertexArray=function(){return M.createVertexArrayOES()},S.deleteVertexArray=function(z){M.deleteVertexArrayOES(z)},S.bindVertexArray=function(z){M.bindVertexArrayOES(z)},S.isVertexArray=function(z){return M.isVertexArrayOES(z)},1}function FT(S){var M=S.getExtension("WEBGL_draw_buffers");if(M)return S.drawBuffers=function(z,q){M.drawBuffersWEBGL(z,q)},1}function MT(S){return!!(S.multiDrawWebgl=S.getExtension("WEBGL_multi_draw"))}var wt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(M){wt.lastError||(wt.lastError=M)},getNewId:function(S){for(var M=wt.counter++,z=S.length;z<M;z++)S[z]=null;return M},getSource:function(S,M,z,q){for(var ke="",be=0;be<M;++be){var xe=q?o()[q+be*4>>2]:-1;ke+=Oe(o()[z+be*4>>2],xe<0?void 0:xe)}return ke},createContext:function(S,M){var z=S.getContext("webgl",M);if(!z)return 0;var q=wt.registerContext(z,M);return q},registerContext:function(S,M){var z=xl(8);o()[z+4>>2]=Su();var q={handle:z,attributes:M,version:M.majorVersion,GLctx:S};return S.canvas&&(S.canvas.GLctxObject=q),wt.contexts[z]=q,(typeof M.enableExtensionsByDefault=="undefined"||M.enableExtensionsByDefault)&&wt.initExtensions(q),z},makeContextCurrent:function(S){return wt.currentContext=wt.contexts[S],i.ctx=vu=wt.currentContext&&wt.currentContext.GLctx,!(S&&!vu)},getContext:function(S){return wt.contexts[S]},deleteContext:function(S){wt.currentContext===wt.contexts[S]&&(wt.currentContext=null),typeof ot=="object"&&ot.removeAllHandlersOnTarget(wt.contexts[S].GLctx.canvas),wt.contexts[S]&&wt.contexts[S].GLctx.canvas&&(wt.contexts[S].GLctx.canvas.GLctxObject=void 0),Qm(wt.contexts[S].handle),wt.contexts[S]=null},initExtensions:function(S){if(S||(S=wt.currentContext),!S.initExtensionsDone){S.initExtensionsDone=!0;var M=S.GLctx;DT(M),PT(M),FT(M),M.disjointTimerQueryExt=M.getExtension("EXT_disjoint_timer_query"),MT(M);var z=M.getSupportedExtensions()||[];z.forEach(function(q){q.indexOf("lose_context")<0&&q.indexOf("debug")<0&&M.getExtension(q)})}},populateUniformTable:function(S){for(var M=wt.programs[S],z=wt.programInfos[S]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},q=z.uniforms,ke=vu.getProgramParameter(M,35718),be=0;be<ke;++be){var xe=vu.getActiveUniform(M,be),Fe=xe.name;z.maxUniformLength=Math.max(z.maxUniformLength,Fe.length+1),Fe.slice(-1)=="]"&&(Fe=Fe.slice(0,Fe.lastIndexOf("[")));var Dt=vu.getUniformLocation(M,Fe);if(Dt){var Fr=wt.getNewId(wt.uniforms);q[Fe]=[xe.size,Fr],wt.uniforms[Fr]=Dt;for(var Sr=1;Sr<xe.size;++Sr){var _u=Fe+"["+Sr+"]";Dt=vu.getUniformLocation(M,_u),Fr=wt.getNewId(wt.uniforms),wt.uniforms[Fr]=Dt}}}}},ET=["default","low-power","high-performance"];function RT(S,M){var z=M>>2,q=o()[z+(24>>2)],ke={alpha:!!o()[z+(0>>2)],depth:!!o()[z+(4>>2)],stencil:!!o()[z+(8>>2)],antialias:!!o()[z+(12>>2)],premultipliedAlpha:!!o()[z+(16>>2)],preserveDrawingBuffer:!!o()[z+(20>>2)],powerPreference:ET[q],failIfMajorPerformanceCaveat:!!o()[z+(28>>2)],majorVersion:o()[z+(32>>2)],minorVersion:o()[z+(36>>2)],enableExtensionsByDefault:o()[z+(40>>2)],explicitSwapControl:o()[z+(44>>2)],proxyContextToMainThread:o()[z+(48>>2)],renderViaOffscreenBackBuffer:o()[z+(52>>2)]},be=Hm(S);if(!be||ke.explicitSwapControl)return 0;var xe=wt.createContext(be,ke);return xe}function LT(S,M){return RT(S,M)}var Bp={mappings:{},buffers:[null,[],[]],printChar:function(S,M){var z=Bp.buffers[S];M===0||M===10?((S===1?B:V)(Re(z,0)),z.length=0):z.push(M)},varargs:void 0,get:function(){Bp.varargs+=4;var S=o()[Bp.varargs-4>>2];return S},getStr:function(S){var M=Oe(S);return M},get64:function(S,M){return S}};function Fg(S){return T?Cu(3,1,S):0}function Mg(S,M,z,q,ke){if(T)return Cu(4,1,S,M,z,q,ke)}function Eg(S,M,z,q){if(T)return Cu(5,1,S,M,z,q);for(var ke=0,be=0;be<z;be++){for(var xe=o()[M+be*8>>2],Fe=o()[M+(be*8+4)>>2],Dt=0;Dt<Fe;Dt++)Bp.printChar(S,n()[xe+Dt]);ke+=Fe}return o()[q>>2]=ke,0}function $T(S){var M=Me.threadExitHandlers.pop();S&&M()}function BT(S,M){Me.threadExitHandlers.push(function(){br.get(S)(M)})}function Rg(S){if(T)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var M=Me.getNewWorker();if(M.pthread!==void 0)throw"Internal error!";if(!S.pthread_ptr)throw"Internal error, no pthread ptr!";Me.runningWorkers.push(M);for(var z=xl(128*4),q=0;q<128;++q)o()[z+q*4>>2]=0;var ke=S.stackBase+S.stackSize,be=Me.pthreads[S.pthread_ptr]={worker:M,stackBase:S.stackBase,stackSize:S.stackSize,allocatedOwnStack:S.allocatedOwnStack,threadInfoStruct:S.pthread_ptr},xe=be.threadInfoStruct>>2;Atomics.store(s(),xe+(64>>2),S.detached),Atomics.store(s(),xe+(100>>2),z),Atomics.store(s(),xe+(40>>2),be.threadInfoStruct),Atomics.store(s(),xe+(80>>2),S.stackSize),Atomics.store(s(),xe+(76>>2),ke),Atomics.store(s(),xe+(104>>2),S.stackSize),Atomics.store(s(),xe+(104+8>>2),ke),Atomics.store(s(),xe+(104+12>>2),S.detached);var Fe=_N(),Dt=Fe+40;Atomics.store(s(),xe+(172>>2),Dt),M.pthread=be;var Fr={cmd:"run",start_routine:S.startRoutine,arg:S.arg,threadInfoStruct:S.pthread_ptr,stackBase:S.stackBase,stackSize:S.stackSize};M.runPthread=function(){Fr.time=performance.now(),M.postMessage(Fr,S.transferList)},M.loaded&&(M.runPthread(),delete M.runPthread)}function OT(S,M,z,q){if(typeof SharedArrayBuffer=="undefined")return V("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!S)return V("pthread_create called with a null thread pointer!"),28;var ke=[],be=0;if(T&&(ke.length===0||be))return FN(687865856,S,M,z,q);if(be)return be;var xe=0,Fe=0,Dt=0;M&&M!=-1?(xe=o()[M>>2],xe+=81920,Fe=o()[M+8>>2],Dt=o()[M+12>>2]!==0):xe=2097152;var Fr=Fe==0;Fr?Fe=RN(16,xe):(Fe-=xe,he(Fe>0));for(var Sr=xl(228),_u=0;_u<228>>2;++_u)s()[(Sr>>2)+_u]=0;o()[S>>2]=Sr,o()[Sr+12>>2]=Sr;var Up=Sr+152;o()[Up>>2]=Up;var nn={stackBase:Fe,stackSize:xe,allocatedOwnStack:Fr,detached:Dt,startRoutine:z,pthread_ptr:Sr,arg:q,transferList:ke};return T?(nn.cmd="spawnThread",postMessage(nn,ke)):Rg(nn),0}function zT(){if(!!T){var S=Su();if(!!S){var M=Atomics.load(s(),S+56>>2);if(!M){var z=Atomics.load(s(),S+0>>2);if(z==2)throw"Canceled!"}}}}function GT(){y||g||j("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function WT(S,M,z){if(!S)return V("pthread_join attempted on a null thread pointer!"),Iu.ESRCH;if(T&&Su()==S)return V("PThread "+S+" is attempting to join to itself!"),Iu.EDEADLK;if(!T&&DN()==S)return V("Main thread "+S+" is attempting to join to itself!"),Iu.EDEADLK;var q=o()[S+12>>2];if(q!==S)return V("pthread_join attempted on thread "+S+", which does not point to a valid thread, or does not exist anymore!"),Iu.ESRCH;var ke=Atomics.load(s(),S+64>>2);if(ke)return V("Attempted to join thread "+S+", which was already detached!"),Iu.EINVAL;for(z&&GT();;){var be=Atomics.load(s(),S+0>>2);if(be==1){var xe=Atomics.load(s(),S+4>>2);return M&&(o()[M>>2]=xe),Atomics.store(s(),S+64>>2,1),T?postMessage({cmd:"cleanupThread",thread:S}):Ag(S),0}if(!z)return Iu.EBUSY;zT(),T||Wg(),Ng(S+0,be,T?100:1)}}function UT(S,M){return WT(S,M,!0)}function Lg(S){if(T)return Cu(6,1,S);switch(S){case 30:return 16384;case 85:var M=2147483648;return M/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return uT(28),-1}T||Me.initMainThreadBlock();var vu,KT=[null,lT,Pg,Fg,Mg,Eg,Lg],VT={e:aT,r:iT,x:pT,b:cT,y:mT,j:fT,d:Ng,c:Km,f:yl,p:dT,A:hT,u:bT,q:TT,v:_T,i:AT,s:NT,w:LT,l:Fg,n:Mg,g:Eg,o:eT,a:te||i.wasmMemory,z:$T,k:BT,h:OT,m:UT,t:Lg},wN=Jx(),$g=i.___wasm_call_ctors=function(){return($g=i.___wasm_call_ctors=i.asm.B).apply(null,arguments)},jT=i._init=function(){return(jT=i._init=i.asm.C).apply(null,arguments)},HT=i._init_with_threads_count=function(){return(HT=i._init_with_threads_count=i.asm.D).apply(null,arguments)},qT=i._get_threads_count=function(){return(qT=i._get_threads_count=i.asm.E).apply(null,arguments)},XT=i._register_tensor=function(){return(XT=i._register_tensor=i.asm.F).apply(null,arguments)},YT=i._dispose_data=function(){return(YT=i._dispose_data=i.asm.G).apply(null,arguments)},QT=i._dispose=function(){return(QT=i._dispose=i.asm.H).apply(null,arguments)},ZT=i._Abs=function(){return(ZT=i._Abs=i.asm.I).apply(null,arguments)},JT=i._Add=function(){return(JT=i._Add=i.asm.J).apply(null,arguments)},ek=i._AddN=function(){return(ek=i._AddN=i.asm.K).apply(null,arguments)},tk=i._All=function(){return(tk=i._All=i.asm.L).apply(null,arguments)},rk=i._Any=function(){return(rk=i._Any=i.asm.M).apply(null,arguments)},nk=i._ArgMax=function(){return(nk=i._ArgMax=i.asm.N).apply(null,arguments)},ok=i._AvgPool=function(){return(ok=i._AvgPool=i.asm.O).apply(null,arguments)},sk=i._BatchMatMul=function(){return(sk=i._BatchMatMul=i.asm.P).apply(null,arguments)},ak=i._Ceil=function(){return(ak=i._Ceil=i.asm.Q).apply(null,arguments)},ik=i._ClipByValue=function(){return(ik=i._ClipByValue=i.asm.R).apply(null,arguments)},uk=i._Conv2D=function(){return(uk=i._Conv2D=i.asm.S).apply(null,arguments)},Bg=i._Conv2DBackpropInput=function(){return(Bg=i._Conv2DBackpropInput=i.asm.T).apply(null,arguments)},Og=i._Cos=function(){return(Og=i._Cos=i.asm.U).apply(null,arguments)},qm=i._Cosh=function(){return(qm=i._Cosh=i.asm.V).apply(null,arguments)},Op=i._CropAndResize=function(){return(Op=i._CropAndResize=i.asm.W).apply(null,arguments)},lk=i._Cumsum=function(){return(lk=i._Cumsum=i.asm.X).apply(null,arguments)},Xm=i._DepthToSpace=function(){return(Xm=i._DepthToSpace=i.asm.Y).apply(null,arguments)},Z=i._DepthwiseConv2dNative=function(){return(Z=i._DepthwiseConv2dNative=i.asm.Z).apply(null,arguments)},se=i._Elu=function(){return(se=i._Elu=i.asm._).apply(null,arguments)},Ne=i._Equal=function(){return(Ne=i._Equal=i.asm.$).apply(null,arguments)},yt=i._Exp=function(){return(yt=i._Exp=i.asm.aa).apply(null,arguments)},pr=i._FlipLeftRight=function(){return(pr=i._FlipLeftRight=i.asm.ba).apply(null,arguments)},rr=i._Floor=function(){return(rr=i._Floor=i.asm.ca).apply(null,arguments)},ut=i._FloorDiv=function(){return(ut=i._FloorDiv=i.asm.da).apply(null,arguments)},pt=i._FusedBatchNorm=function(){return(pt=i._FusedBatchNorm=i.asm.ea).apply(null,arguments)},Gr=i._FusedConv2D=function(){return(Gr=i._FusedConv2D=i.asm.fa).apply(null,arguments)},xi=i._FusedDepthwiseConv2D=function(){return(xi=i._FusedDepthwiseConv2D=i.asm.ga).apply(null,arguments)},Ti=i._Gather=function(){return(Ti=i._Gather=i.asm.ha).apply(null,arguments)},zg=i._GatherNd=function(){return(zg=i._GatherNd=i.asm.ia).apply(null,arguments)},Ym=i._Greater=function(){return(Ym=i._Greater=i.asm.ja).apply(null,arguments)},Gn=i._GreaterEqual=function(){return(Gn=i._GreaterEqual=i.asm.ka).apply(null,arguments)},wu=i._LeakyRelu=function(){return(wu=i._LeakyRelu=i.asm.la).apply(null,arguments)},Gg=i._Less=function(){return(Gg=i._Less=i.asm.ma).apply(null,arguments)},k4=i._LessEqual=function(){return(k4=i._LessEqual=i.asm.na).apply(null,arguments)},I4=i._Log=function(){return(I4=i._Log=i.asm.oa).apply(null,arguments)},C4=i._LogicalAnd=function(){return(C4=i._LogicalAnd=i.asm.pa).apply(null,arguments)},v4=i._Max=function(){return(v4=i._Max=i.asm.qa).apply(null,arguments)},w4=i._MaxPool=function(){return(w4=i._MaxPool=i.asm.ra).apply(null,arguments)},S4=i._Maximum=function(){return(S4=i._Maximum=i.asm.sa).apply(null,arguments)},_4=i._Mean=function(){return(_4=i._Mean=i.asm.ta).apply(null,arguments)},A4=i._Min=function(){return(A4=i._Min=i.asm.ua).apply(null,arguments)},N4=i._Minimum=function(){return(N4=i._Minimum=i.asm.va).apply(null,arguments)},D4=i._MirrorPad=function(){return(D4=i._MirrorPad=i.asm.wa).apply(null,arguments)},P4=i._Multiply=function(){return(P4=i._Multiply=i.asm.xa).apply(null,arguments)},F4=i._Neg=function(){return(F4=i._Neg=i.asm.ya).apply(null,arguments)},M4=i._NonMaxSuppressionV3=function(){return(M4=i._NonMaxSuppressionV3=i.asm.za).apply(null,arguments)},E4=i._NonMaxSuppressionV4=function(){return(E4=i._NonMaxSuppressionV4=i.asm.Aa).apply(null,arguments)},R4=i._NonMaxSuppressionV5=function(){return(R4=i._NonMaxSuppressionV5=i.asm.Ba).apply(null,arguments)},L4=i._NotEqual=function(){return(L4=i._NotEqual=i.asm.Ca).apply(null,arguments)},$4=i._OneHot=function(){return($4=i._OneHot=i.asm.Da).apply(null,arguments)},B4=i._PadV2=function(){return(B4=i._PadV2=i.asm.Ea).apply(null,arguments)},O4=i._Pow=function(){return(O4=i._Pow=i.asm.Fa).apply(null,arguments)},z4=i._Prelu=function(){return(z4=i._Prelu=i.asm.Ga).apply(null,arguments)},G4=i._Prod=function(){return(G4=i._Prod=i.asm.Ha).apply(null,arguments)},W4=i._RealDiv=function(){return(W4=i._RealDiv=i.asm.Ia).apply(null,arguments)},U4=i._Relu=function(){return(U4=i._Relu=i.asm.Ja).apply(null,arguments)},K4=i._Relu6=function(){return(K4=i._Relu6=i.asm.Ka).apply(null,arguments)},V4=i._ResizeBilinear=function(){return(V4=i._ResizeBilinear=i.asm.La).apply(null,arguments)},j4=i._Reverse=function(){return(j4=i._Reverse=i.asm.Ma).apply(null,arguments)},H4=i._RotateWithOffset=function(){return(H4=i._RotateWithOffset=i.asm.Na).apply(null,arguments)},q4=i._Round=function(){return(q4=i._Round=i.asm.Oa).apply(null,arguments)},X4=i._Rsqrt=function(){return(X4=i._Rsqrt=i.asm.Pa).apply(null,arguments)},Y4=i._ScatterNd=function(){return(Y4=i._ScatterNd=i.asm.Qa).apply(null,arguments)},Q4=i._SelectV2=function(){return(Q4=i._SelectV2=i.asm.Ra).apply(null,arguments)},Z4=i._Sigmoid=function(){return(Z4=i._Sigmoid=i.asm.Sa).apply(null,arguments)},J4=i._Sin=function(){return(J4=i._Sin=i.asm.Ta).apply(null,arguments)},ej=i._Softmax=function(){return(ej=i._Softmax=i.asm.Ua).apply(null,arguments)},tj=i._Sqrt=function(){return(tj=i._Sqrt=i.asm.Va).apply(null,arguments)},rj=i._Square=function(){return(rj=i._Square=i.asm.Wa).apply(null,arguments)},nj=i._SquaredDifference=function(){return(nj=i._SquaredDifference=i.asm.Xa).apply(null,arguments)},oj=i._Step=function(){return(oj=i._Step=i.asm.Ya).apply(null,arguments)},sj=i._StridedSlice=function(){return(sj=i._StridedSlice=i.asm.Za).apply(null,arguments)},aj=i._Sub=function(){return(aj=i._Sub=i.asm._a).apply(null,arguments)},ij=i._Sum=function(){return(ij=i._Sum=i.asm.$a).apply(null,arguments)},uj=i._Tan=function(){return(uj=i._Tan=i.asm.ab).apply(null,arguments)},lj=i._Tanh=function(){return(lj=i._Tanh=i.asm.bb).apply(null,arguments)},pj=i._Tile=function(){return(pj=i._Tile=i.asm.cb).apply(null,arguments)},cj=i._TopK=function(){return(cj=i._TopK=i.asm.db).apply(null,arguments)},mj=i._Transform=function(){return(mj=i._Transform=i.asm.eb).apply(null,arguments)},fj=i._Transpose=function(){return(fj=i._Transpose=i.asm.fb).apply(null,arguments)},dj=i.__FusedMatMul=function(){return(dj=i.__FusedMatMul=i.asm.gb).apply(null,arguments)},xl=i._malloc=function(){return(xl=i._malloc=i.asm.hb).apply(null,arguments)},Qm=i._free=function(){return(Qm=i._free=i.asm.ib).apply(null,arguments)},SN=i.___errno_location=function(){return(SN=i.___errno_location=i.asm.jb).apply(null,arguments)},_N=i._emscripten_get_global_libc=function(){return(_N=i._emscripten_get_global_libc=i.asm.lb).apply(null,arguments)},Su=i._pthread_self=function(){return(Su=i._pthread_self=i.asm.mb).apply(null,arguments)},AN=i.___pthread_tsd_run_dtors=function(){return(AN=i.___pthread_tsd_run_dtors=i.asm.nb).apply(null,arguments)},Wg=i._emscripten_main_thread_process_queued_calls=function(){return(Wg=i._emscripten_main_thread_process_queued_calls=i.asm.ob).apply(null,arguments)},hj=i._emscripten_current_thread_process_queued_calls=function(){return(hj=i._emscripten_current_thread_process_queued_calls=i.asm.pb).apply(null,arguments)},NN=i._emscripten_register_main_browser_thread_id=function(){return(NN=i._emscripten_register_main_browser_thread_id=i.asm.qb).apply(null,arguments)},DN=i._emscripten_main_browser_thread_id=function(){return(DN=i._emscripten_main_browser_thread_id=i.asm.rb).apply(null,arguments)},PN=i.__emscripten_do_dispatch_to_thread=function(){return(PN=i.__emscripten_do_dispatch_to_thread=i.asm.sb).apply(null,arguments)},FN=i._emscripten_sync_run_in_main_thread_4=function(){return(FN=i._emscripten_sync_run_in_main_thread_4=i.asm.tb).apply(null,arguments)},MN=i._emscripten_run_in_main_runtime_thread_js=function(){return(MN=i._emscripten_run_in_main_runtime_thread_js=i.asm.ub).apply(null,arguments)},pk=i.__emscripten_call_on_thread=function(){return(pk=i.__emscripten_call_on_thread=i.asm.vb).apply(null,arguments)},gj=i._emscripten_tls_init=function(){return(gj=i._emscripten_tls_init=i.asm.wb).apply(null,arguments)},ck=i.__emscripten_thread_init=function(){return(ck=i.__emscripten_thread_init=i.asm.xb).apply(null,arguments)},Zm=i.stackSave=function(){return(Zm=i.stackSave=i.asm.yb).apply(null,arguments)},zp=i.stackRestore=function(){return(zp=i.stackRestore=i.asm.zb).apply(null,arguments)},Gp=i.stackAlloc=function(){return(Gp=i.stackAlloc=i.asm.Ab).apply(null,arguments)},EN=i._emscripten_stack_set_limits=function(){return(EN=i._emscripten_stack_set_limits=i.asm.Bb).apply(null,arguments)},RN=i._memalign=function(){return(RN=i._memalign=i.asm.Cb).apply(null,arguments)},LN=i.__emscripten_allow_main_runtime_queued_calls=10064,Wp=i.__emscripten_main_thread_futex=10268;i.cwrap=Be,i.PThread=Me,i.PThread=Me,i.wasmMemory=te,i.ExitStatus=Jm;var Ug;function Jm(S){this.name="ExitStatus",this.message="Program terminated with exit("+S+")",this.status=S}gl=function S(){Ug||mk(),Ug||(gl=S)};function mk(S){if(S=S||m,rs>0)return;if(T){u(i),kg(),postMessage({cmd:"loaded"});return}if(Lp(),rs>0)return;function M(){Ug||(Ug=!0,i.calledRun=!0,!ae&&(kg(),Ig(),u(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),Cg()))}i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),M()},1)):M()}i.run=mk;function bj(S,M){if(!(M&&oe&&S===0)){if(!M&&T)throw postMessage({cmd:"exitProcess",returnCode:S}),new Jm(S);oe||(Me.terminateAllThreads(),ge=S,vn(),i.onExit&&i.onExit(S),ae=!0),d(S,new Jm(S))}}if(i.preInit)for(typeof i.preInit=="function"&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();return T&&(oe=!1,Me.initWorker()),mk(),e.ready}}();typeof Wx=="object"&&typeof xN=="object"?xN.exports=yN:typeof define=="function"&&define.amd?define([],function(){return yN}):typeof Wx=="object"&&(Wx.WasmBackendModuleThreadedSimd=yN)});var g4=Sn((Ux,kN)=>{var TN=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};var t=typeof e!="undefined"?e:{},n,o;t.ready=new Promise(function(Z,se){n=Z,o=se});var s={},a;for(a in t)t.hasOwnProperty(a)&&(s[a]=t[a]);var i=[],u="./this.program",l=function(Z,se){throw se},p=!1,c=!1,m=!1,f=!1;p=typeof window=="object",c=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f=!p&&!m&&!c;var d="";function h(Z){return t.locateFile?t.locateFile(Z,d):d+Z}var g,y,x,T,k,v;m?(c?d=ns("path").dirname(d)+"/":d=__dirname+"/",g=function(se,Ne){return k||(k=ns("fs")),v||(v=ns("path")),se=v.normalize(se),k.readFileSync(se,Ne?null:"utf8")},x=function(se){var Ne=g(se,!0);return Ne.buffer||(Ne=new Uint8Array(Ne)),B(Ne.buffer),Ne},process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(Z){if(!(Z instanceof lk))throw Z}),process.on("unhandledRejection",js),l=function(Z){process.exit(Z)},t.inspect=function(){return"[Emscripten Module object]"}):f?(typeof read!="undefined"&&(g=function(se){return read(se)}),x=function(se){var Ne;return typeof readbuffer=="function"?new Uint8Array(readbuffer(se)):(Ne=read(se,"binary"),B(typeof Ne=="object"),Ne)},typeof scriptArgs!="undefined"?i=scriptArgs:typeof arguments!="undefined"&&(i=arguments),typeof quit=="function"&&(l=function(Z){quit(Z)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(p||c)&&(c?d=self.location.href:typeof document!="undefined"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.lastIndexOf("/")+1):d="",g=function(Z){var se=new XMLHttpRequest;return se.open("GET",Z,!1),se.send(null),se.responseText},c&&(x=function(Z){var se=new XMLHttpRequest;return se.open("GET",Z,!1),se.responseType="arraybuffer",se.send(null),new Uint8Array(se.response)}),y=function(Z,se,Ne){var yt=new XMLHttpRequest;yt.open("GET",Z,!0),yt.responseType="arraybuffer",yt.onload=function(){if(yt.status==200||yt.status==0&&yt.response){se(yt.response);return}Ne()},yt.onerror=Ne,yt.send(null)},T=function(Z){document.title=Z});var P=t.print||console.log.bind(console),A=t.printErr||console.warn.bind(console);for(a in s)s.hasOwnProperty(a)&&(t[a]=s[a]);s=null,t.arguments&&(i=t.arguments),t.thisProgram&&(u=t.thisProgram),t.quit&&(l=t.quit);var F;t.wasmBinary&&(F=t.wasmBinary);var E=t.noExitRuntime||!0;typeof WebAssembly!="object"&&js("no native wasm support detected");var L,U=!1,K;function B(Z,se){Z||js("Assertion failed: "+se)}function V(Z){var se=t["_"+Z];return B(se,"Cannot call unknown function "+Z+", make sure it is exported"),se}function j(Z,se,Ne,yt,pr){var rr={string:function(Gn){var wu=0;if(Gn!=null&&Gn!==0){var Gg=(Gn.length<<2)+1;wu=qm(Gg),te(Gn,wu,Gg)}return wu},array:function(Gn){var wu=qm(Gn.length);return le(Gn,wu),wu}};function ut(Gn){return se==="string"?ne(Gn):se==="boolean"?Boolean(Gn):Gn}var pt=V(Z),Gr=[],xi=0;if(yt)for(var Ti=0;Ti<yt.length;Ti++){var zg=rr[Ne[Ti]];zg?(xi===0&&(xi=Bg()),Gr[Ti]=zg(yt[Ti])):Gr[Ti]=yt[Ti]}var Ym=pt.apply(null,Gr);return Ym=ut(Ym),xi!==0&&Og(xi),Ym}function H(Z,se,Ne,yt){Ne=Ne||[];var pr=Ne.every(function(ut){return ut==="number"}),rr=se!=="string";return rr&&pr&&!yt?V(Z):function(){return j(Z,se,Ne,arguments,yt)}}var ee=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function Y(Z,se,Ne){for(var yt=se+Ne,pr=se;Z[pr]&&!(pr>=yt);)++pr;if(pr-se>16&&Z.subarray&&ee)return ee.decode(Z.subarray(se,pr));for(var rr="";se<pr;){var ut=Z[se++];if(!(ut&128)){rr+=String.fromCharCode(ut);continue}var pt=Z[se++]&63;if((ut&224)==192){rr+=String.fromCharCode((ut&31)<<6|pt);continue}var Gr=Z[se++]&63;if((ut&240)==224?ut=(ut&15)<<12|pt<<6|Gr:ut=(ut&7)<<18|pt<<12|Gr<<6|Z[se++]&63,ut<65536)rr+=String.fromCharCode(ut);else{var xi=ut-65536;rr+=String.fromCharCode(55296|xi>>10,56320|xi&1023)}}return rr}function ne(Z,se){return Z?Y(Te,Z,se):""}function oe(Z,se,Ne,yt){if(!(yt>0))return 0;for(var pr=Ne,rr=Ne+yt-1,ut=0;ut<Z.length;++ut){var pt=Z.charCodeAt(ut);if(pt>=55296&&pt<=57343){var Gr=Z.charCodeAt(++ut);pt=65536+((pt&1023)<<10)|Gr&1023}if(pt<=127){if(Ne>=rr)break;se[Ne++]=pt}else if(pt<=2047){if(Ne+1>=rr)break;se[Ne++]=192|pt>>6,se[Ne++]=128|pt&63}else if(pt<=65535){if(Ne+2>=rr)break;se[Ne++]=224|pt>>12,se[Ne++]=128|pt>>6&63,se[Ne++]=128|pt&63}else{if(Ne+3>=rr)break;se[Ne++]=240|pt>>18,se[Ne++]=128|pt>>12&63,se[Ne++]=128|pt>>6&63,se[Ne++]=128|pt&63}}return se[Ne]=0,Ne-pr}function te(Z,se,Ne){return oe(Z,Te,se,Ne)}function le(Z,se){he.set(Z,se)}function ae(Z,se){return Z%se>0&&(Z+=se-Z%se),Z}var ge,he,Te,Se,Be,Re,Oe,rt,gt;function Bt(Z){ge=Z,t.HEAP8=he=new Int8Array(Z),t.HEAP16=Se=new Int16Array(Z),t.HEAP32=Re=new Int32Array(Z),t.HEAPU8=Te=new Uint8Array(Z),t.HEAPU16=Be=new Uint16Array(Z),t.HEAPU32=Oe=new Uint32Array(Z),t.HEAPF32=rt=new Float32Array(Z),t.HEAPF64=gt=new Float64Array(Z)}var Ot=t.INITIAL_MEMORY||16777216,kt,Je=[],vt=[],qt=[],On=[],gr=!1;vt.push({func:function(){Sg()}});function In(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)Pr(t.preRun.shift());rs(Je)}function zr(){gr=!0,rs(vt)}function Vs(){rs(qt)}function rn(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)eo(t.postRun.shift());rs(On)}function Pr(Z){Je.unshift(Z)}function eo(Z){On.unshift(Z)}var br=0,Cn=null,zn=null;function dl(Z){br++,t.monitorRunDependencies&&t.monitorRunDependencies(br)}function hl(Z){if(br--,t.monitorRunDependencies&&t.monitorRunDependencies(br),br==0&&(Cn!==null&&(clearInterval(Cn),Cn=null),zn)){var se=zn;zn=null,se()}}t.preloadedImages={},t.preloadedAudios={};function js(Z){t.onAbort&&t.onAbort(Z),Z+="",A(Z),U=!0,K=1,Z="abort("+Z+"). Build with -s ASSERTIONS=1 for more info.";var se=new WebAssembly.RuntimeError(Z);throw o(se),se}function bi(Z,se){return String.prototype.startsWith?Z.startsWith(se):Z.indexOf(se)===0}var Wm="data:application/octet-stream;base64,";function Lp(Z){return bi(Z,Wm)}var kg="file://";function Ig(Z){return bi(Z,kg)}var vn="tfjs-backend-wasm.wasm";Lp(vn)||(vn=h(vn));function Cg(Z){try{if(Z==vn&&F)return new Uint8Array(F);if(x)return x(Z);throw"both async and sync fetching of the wasm failed"}catch(se){js(se)}}function jx(){if(!F&&(p||c)){if(typeof fetch=="function"&&!Ig(vn))return fetch(vn,{credentials:"same-origin"}).then(function(Z){if(!Z.ok)throw"failed to load wasm binary file at '"+vn+"'";return Z.arrayBuffer()}).catch(function(){return Cg(vn)});if(y)return new Promise(function(Z,se){y(vn,function(Ne){Z(new Uint8Array(Ne))},se)})}return Promise.resolve().then(function(){return Cg(vn)})}function Hx(){var Z={a:wn};function se(ut,pt){var Gr=ut.exports;t.asm=Gr,L=t.asm.h,Bt(L.buffer),kt=t.asm.Sa,hl("wasm-instantiate")}dl("wasm-instantiate");function Ne(ut){se(ut.instance)}function yt(ut){return jx().then(function(pt){return WebAssembly.instantiate(pt,Z)}).then(ut,function(pt){A("failed to asynchronously prepare wasm: "+pt),js(pt)})}function pr(){return!F&&typeof WebAssembly.instantiateStreaming=="function"&&!Lp(vn)&&!Ig(vn)&&typeof fetch=="function"?fetch(vn,{credentials:"same-origin"}).then(function(ut){var pt=WebAssembly.instantiateStreaming(ut,Z);return pt.then(Ne,function(Gr){return A("wasm streaming compile failed: "+Gr),A("falling back to ArrayBuffer instantiation"),yt(Ne)})}):yt(Ne)}if(t.instantiateWasm)try{var rr=t.instantiateWasm(Z,se);return rr}catch(ut){return A("Module.instantiateWasm callback failed with error: "+ut),!1}return pr().catch(o),{}}function rs(Z){for(;Z.length>0;){var se=Z.shift();if(typeof se=="function"){se(t);continue}var Ne=se.func;typeof Ne=="number"?se.arg===void 0?kt.get(Ne)():kt.get(Ne)(se.arg):Ne(se.arg===void 0?null:se.arg)}}function Um(){js()}function gl(Z,se,Ne){Te.copyWithin(Z,se,se+Ne)}function qx(){return Te.length}function Xx(Z){try{return L.grow(Z-ge.byteLength+65535>>>16),Bt(L.buffer),1}catch{}}function yi(Z){var se=qx(),Ne=2147483648;if(Z>Ne)return!1;for(var yt=1;yt<=4;yt*=2){var pr=se*(1+.2/yt);pr=Math.min(pr,Z+100663296);var rr=Math.min(Ne,ae(Math.max(Z,pr),65536)),ut=Xx(rr);if(ut)return!0}return!1}var bl={mappings:{},buffers:[null,[],[]],printChar:function(Z,se){var Ne=bl.buffers[Z];se===0||se===10?((Z===1?P:A)(Y(Ne,0)),Ne.length=0):Ne.push(se)},varargs:void 0,get:function(){bl.varargs+=4;var Z=Re[bl.varargs-4>>2];return Z},getStr:function(Z){var se=ne(Z);return se},get64:function(Z,se){return Z}};function Yx(Z){return 0}function vg(Z,se,Ne,yt,pr){}function Qx(Z,se,Ne,yt){for(var pr=0,rr=0;rr<Ne;rr++){for(var ut=Re[se+rr*8>>2],pt=Re[se+(rr*8+4)>>2],Gr=0;Gr<pt;Gr++)bl.printChar(Z,Te[ut+Gr]);pr+=pt}return Re[yt>>2]=pr,0}function wg(){return 28}var wn={a:Um,d:gl,e:yi,f:Yx,c:vg,b:Qx,g:wg},Zx=Hx(),Sg=t.___wasm_call_ctors=function(){return(Sg=t.___wasm_call_ctors=t.asm.i).apply(null,arguments)},Jx=t._init=function(){return(Jx=t._init=t.asm.j).apply(null,arguments)},_g=t._init_with_threads_count=function(){return(_g=t._init_with_threads_count=t.asm.k).apply(null,arguments)},eT=t._get_threads_count=function(){return(eT=t._get_threads_count=t.asm.l).apply(null,arguments)},$p=t._register_tensor=function(){return($p=t._register_tensor=t.asm.m).apply(null,arguments)},Iu=t._dispose_data=function(){return(Iu=t._dispose_data=t.asm.n).apply(null,arguments)},Km=t._dispose=function(){return(Km=t._dispose=t.asm.o).apply(null,arguments)},tT=t._Abs=function(){return(tT=t._Abs=t.asm.p).apply(null,arguments)},rT=t._Add=function(){return(rT=t._Add=t.asm.q).apply(null,arguments)},Ag=t._AddN=function(){return(Ag=t._AddN=t.asm.r).apply(null,arguments)},Me=t._All=function(){return(Me=t._All=t.asm.s).apply(null,arguments)},nT=t._Any=function(){return(nT=t._Any=t.asm.t).apply(null,arguments)},oT=t._ArgMax=function(){return(oT=t._ArgMax=t.asm.u).apply(null,arguments)},sT=t._AvgPool=function(){return(sT=t._AvgPool=t.asm.v).apply(null,arguments)},aT=t._BatchMatMul=function(){return(aT=t._BatchMatMul=t.asm.w).apply(null,arguments)},iT=t._Ceil=function(){return(iT=t._Ceil=t.asm.x).apply(null,arguments)},yl=t._ClipByValue=function(){return(yl=t._ClipByValue=t.asm.y).apply(null,arguments)},uT=t._Conv2D=function(){return(uT=t._Conv2D=t.asm.z).apply(null,arguments)},lT=t._Conv2DBackpropInput=function(){return(lT=t._Conv2DBackpropInput=t.asm.A).apply(null,arguments)},pT=t._Cos=function(){return(pT=t._Cos=t.asm.B).apply(null,arguments)},cT=t._Cosh=function(){return(cT=t._Cosh=t.asm.C).apply(null,arguments)},mT=t._CropAndResize=function(){return(mT=t._CropAndResize=t.asm.D).apply(null,arguments)},fT=t._Cumsum=function(){return(fT=t._Cumsum=t.asm.E).apply(null,arguments)},Ng=t._DepthToSpace=function(){return(Ng=t._DepthToSpace=t.asm.F).apply(null,arguments)},dT=t._DepthwiseConv2dNative=function(){return(dT=t._DepthwiseConv2dNative=t.asm.G).apply(null,arguments)},hT=t._Elu=function(){return(hT=t._Elu=t.asm.H).apply(null,arguments)},Cu=t._Equal=function(){return(Cu=t._Equal=t.asm.I).apply(null,arguments)},Vm=t._Exp=function(){return(Vm=t._Exp=t.asm.J).apply(null,arguments)},jm=t._FlipLeftRight=function(){return(jm=t._FlipLeftRight=t.asm.K).apply(null,arguments)},gT=t._Floor=function(){return(gT=t._Floor=t.asm.L).apply(null,arguments)},bT=t._FloorDiv=function(){return(bT=t._FloorDiv=t.asm.M).apply(null,arguments)},yT=t._FusedBatchNorm=function(){return(yT=t._FusedBatchNorm=t.asm.N).apply(null,arguments)},xT=t._FusedConv2D=function(){return(xT=t._FusedConv2D=t.asm.O).apply(null,arguments)},TT=t._FusedDepthwiseConv2D=function(){return(TT=t._FusedDepthwiseConv2D=t.asm.P).apply(null,arguments)},ot=t._Gather=function(){return(ot=t._Gather=t.asm.Q).apply(null,arguments)},kT=t._GatherNd=function(){return(kT=t._GatherNd=t.asm.R).apply(null,arguments)},IT=t._Greater=function(){return(IT=t._Greater=t.asm.S).apply(null,arguments)},CT=t._GreaterEqual=function(){return(CT=t._GreaterEqual=t.asm.T).apply(null,arguments)},vT=t._LeakyRelu=function(){return(vT=t._LeakyRelu=t.asm.U).apply(null,arguments)},wT=t._Less=function(){return(wT=t._Less=t.asm.V).apply(null,arguments)},ST=t._LessEqual=function(){return(ST=t._LessEqual=t.asm.W).apply(null,arguments)},Hm=t._Log=function(){return(Hm=t._Log=t.asm.X).apply(null,arguments)},Dg=t._LogicalAnd=function(){return(Dg=t._LogicalAnd=t.asm.Y).apply(null,arguments)},Pg=t._Max=function(){return(Pg=t._Max=t.asm.Z).apply(null,arguments)},_T=t._MaxPool=function(){return(_T=t._MaxPool=t.asm._).apply(null,arguments)},AT=t._Maximum=function(){return(AT=t._Maximum=t.asm.$).apply(null,arguments)},NT=t._Mean=function(){return(NT=t._Mean=t.asm.aa).apply(null,arguments)},DT=t._Min=function(){return(DT=t._Min=t.asm.ba).apply(null,arguments)},PT=t._Minimum=function(){return(PT=t._Minimum=t.asm.ca).apply(null,arguments)},FT=t._MirrorPad=function(){return(FT=t._MirrorPad=t.asm.da).apply(null,arguments)},MT=t._Multiply=function(){return(MT=t._Multiply=t.asm.ea).apply(null,arguments)},wt=t._Neg=function(){return(wt=t._Neg=t.asm.fa).apply(null,arguments)},ET=t._NonMaxSuppressionV3=function(){return(ET=t._NonMaxSuppressionV3=t.asm.ga).apply(null,arguments)},RT=t._NonMaxSuppressionV4=function(){return(RT=t._NonMaxSuppressionV4=t.asm.ha).apply(null,arguments)},LT=t._NonMaxSuppressionV5=function(){return(LT=t._NonMaxSuppressionV5=t.asm.ia).apply(null,arguments)},Bp=t._NotEqual=function(){return(Bp=t._NotEqual=t.asm.ja).apply(null,arguments)},Fg=t._OneHot=function(){return(Fg=t._OneHot=t.asm.ka).apply(null,arguments)},Mg=t._PadV2=function(){return(Mg=t._PadV2=t.asm.la).apply(null,arguments)},Eg=t._Pow=function(){return(Eg=t._Pow=t.asm.ma).apply(null,arguments)},$T=t._Prelu=function(){return($T=t._Prelu=t.asm.na).apply(null,arguments)},BT=t._Prod=function(){return(BT=t._Prod=t.asm.oa).apply(null,arguments)},Rg=t._RealDiv=function(){return(Rg=t._RealDiv=t.asm.pa).apply(null,arguments)},OT=t._Relu=function(){return(OT=t._Relu=t.asm.qa).apply(null,arguments)},zT=t._Relu6=function(){return(zT=t._Relu6=t.asm.ra).apply(null,arguments)},GT=t._ResizeBilinear=function(){return(GT=t._ResizeBilinear=t.asm.sa).apply(null,arguments)},WT=t._Reverse=function(){return(WT=t._Reverse=t.asm.ta).apply(null,arguments)},UT=t._RotateWithOffset=function(){return(UT=t._RotateWithOffset=t.asm.ua).apply(null,arguments)},Lg=t._Round=function(){return(Lg=t._Round=t.asm.va).apply(null,arguments)},vu=t._Rsqrt=function(){return(vu=t._Rsqrt=t.asm.wa).apply(null,arguments)},KT=t._ScatterNd=function(){return(KT=t._ScatterNd=t.asm.xa).apply(null,arguments)},VT=t._SelectV2=function(){return(VT=t._SelectV2=t.asm.ya).apply(null,arguments)},wN=t._Sigmoid=function(){return(wN=t._Sigmoid=t.asm.za).apply(null,arguments)},$g=t._Sin=function(){return($g=t._Sin=t.asm.Aa).apply(null,arguments)},jT=t._Softmax=function(){return(jT=t._Softmax=t.asm.Ba).apply(null,arguments)},HT=t._Sqrt=function(){return(HT=t._Sqrt=t.asm.Ca).apply(null,arguments)},qT=t._Square=function(){return(qT=t._Square=t.asm.Da).apply(null,arguments)},XT=t._SquaredDifference=function(){return(XT=t._SquaredDifference=t.asm.Ea).apply(null,arguments)},YT=t._Step=function(){return(YT=t._Step=t.asm.Fa).apply(null,arguments)},QT=t._StridedSlice=function(){return(QT=t._StridedSlice=t.asm.Ga).apply(null,arguments)},ZT=t._Sub=function(){return(ZT=t._Sub=t.asm.Ha).apply(null,arguments)},JT=t._Sum=function(){return(JT=t._Sum=t.asm.Ia).apply(null,arguments)},ek=t._Tan=function(){return(ek=t._Tan=t.asm.Ja).apply(null,arguments)},tk=t._Tanh=function(){return(tk=t._Tanh=t.asm.Ka).apply(null,arguments)},rk=t._Tile=function(){return(rk=t._Tile=t.asm.La).apply(null,arguments)},nk=t._TopK=function(){return(nk=t._TopK=t.asm.Ma).apply(null,arguments)},ok=t._Transform=function(){return(ok=t._Transform=t.asm.Na).apply(null,arguments)},sk=t._Transpose=function(){return(sk=t._Transpose=t.asm.Oa).apply(null,arguments)},ak=t.__FusedMatMul=function(){return(ak=t.__FusedMatMul=t.asm.Pa).apply(null,arguments)},ik=t._malloc=function(){return(ik=t._malloc=t.asm.Qa).apply(null,arguments)},uk=t._free=function(){return(uk=t._free=t.asm.Ra).apply(null,arguments)},Bg=t.stackSave=function(){return(Bg=t.stackSave=t.asm.Ta).apply(null,arguments)},Og=t.stackRestore=function(){return(Og=t.stackRestore=t.asm.Ua).apply(null,arguments)},qm=t.stackAlloc=function(){return(qm=t.stackAlloc=t.asm.Va).apply(null,arguments)};t.cwrap=H;var Op;function lk(Z){this.name="ExitStatus",this.message="Program terminated with exit("+Z+")",this.status=Z}zn=function Z(){Op||Xm(),Op||(zn=Z)};function Xm(Z){if(Z=Z||i,br>0||(In(),br>0))return;function se(){Op||(Op=!0,t.calledRun=!0,!U&&(zr(),Vs(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),rn()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),se()},1)):se()}if(t.run=Xm,t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();return Xm(),e.ready}}();typeof Ux=="object"&&typeof kN=="object"?kN.exports=TN:typeof define=="function"&&define.amd?define([],function(){return TN}):typeof Ux=="object"&&(Ux.WasmBackendModule=TN)});var vj=1e-7,wj=1e-4,Wa=class{constructor(e,t){this.backend=e;this.dataMover=t;this.data=new WeakMap;this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},os=class{refCount(e){return ss("refCount")}incRef(e){return ss("incRef")}timerAvailable(){return!0}time(e){return ss("time")}read(e){return ss("read")}readSync(e){return ss("readSync")}numDataIds(){return ss("numDataIds")}disposeData(e,t){return ss("disposeData")}write(e,t,n){return ss("write")}move(e,t,n,o,s){return ss("move")}memory(){return ss("memory")}floatPrecision(){return ss("floatPrecision")}epsilon(){return this.floatPrecision()===32?vj:wj}dispose(){return ss("dispose")}};function ss(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function ON(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Vg(r,e,t)}function Sj(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Vg(r,t,n),Vg(e,t,n)}function Vp(r,e,t){return Math.max(r,Math.min(e,t))}function _j(r){return r%2==0?r:r+1}function Vg(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function Aj(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function Nj(r,e){let t=Math.random();return e*t+(1-t)*r}function Dj(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function D(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Ut(r,e,t=""){D(on(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function to(r){D(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Hs(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||kr(r)&&!t)for(let n=0;n<r.length;++n)Hs(r[n],e,t);else e.push(r);return e}function ct(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function Pj(r){return r.length===0}function on(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function mt(r){return r%1==0}function Fj(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function Mj(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function Ej(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return ON(e),e}function kl(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function Rj(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=e(s);if(t!=null&&s>=t){o();return}setTimeout(a,i)};a()})}function Lj(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function yr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),D(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),D(r.every(n=>mt(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function fk(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:yr(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function dk(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function hk(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function gk(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function bk(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function $j(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function kr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function jg(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function yk(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function qs(r){return typeof r=="string"||r instanceof String}function zN(r){return typeof r=="boolean"}function GN(r){return typeof r=="number"}function jp(r){return Array.isArray(r)?jp(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":GN(r)?"float32":qs(r)?"string":zN(r)?"bool":"float32"}function Ua(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Hp(r,e){for(let t=e;t<r;++t)if(r%t==0)return t;return r}function Ka(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function WN(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=t[r+a]}else{let s=e[0],a=e.slice(1),i=a.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=WN(r+u*i,a,t,n)}return o}function Il(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return WN(0,r,e,t)}function ef(r,e){let t=qp(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function qp(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function Bj(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return Il(r,new Float32Array(t));if(e==="int32")return Il(r,new Int32Array(t));if(e==="bool")return Il(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function tf(r){r.forEach(e=>{D(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function Oj(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function zj(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function rf(r){return r&&r.then&&typeof r.then=="function"}function ro(...r){W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(...r)}function Gj(...r){W().getBool("IS_TEST")||W().getBool("PROD")||console.log(...r)}var UN="tfjsflags",Hg=class{constructor(e){this.global=e;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=Wj;this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&ro(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];ro(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(rf(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);UN in e&&e[UN].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=Kj(o,s)})}};function Wj(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(Uj(e,n[0],n[1]),n.join("="))),e}function Uj(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function Kj(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function W(){return xk}var xk=null;function KN(r){xk=r}var Tk;function kk(){if(Tk==null){let r;if(typeof window!="undefined")r=window;else if(typeof global!="undefined")r=global;else if(typeof process!="undefined")r=process;else if(typeof self!="undefined")r=self;else throw new Error("Could not find a global object");Tk=r}return Tk}function Vj(){let r=kk();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function nf(r,e){let t=Vj();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var as="Abs",ki="Acos",Ii="Acosh",_n="Add",no="AddN",Ci="All",vi="Any",oo="ArgMax",Va="ArgMin",wi="Asin",Si="Asinh",_i="Atan",Ai="Atanh",Ni="Atan2",so="AvgPool",Xp="AvgPoolGrad",Au="AvgPool3D",Yp="AvgPool3DGrad",ao="BatchMatMul",is="BatchToSpaceND",Qp="Bincount",VN="BroadcastTo",Zp="BroadcastArgs",Wn="Cast",io="Ceil",Un="ClipByValue",Nu="Complex",Du="ComplexAbs",us="Concat",uo="Conv2D",Jp="Conv2DBackpropFilter",lo="Conv2DBackpropInput",Pu="Conv3D",ec="Conv3DBackpropFilterV2",tc="Conv3DBackpropInputV2",po="Cos",co="Cosh",Xs="Cumsum",Ys="CropAndResize",rc="DenseBincount",Qs="DepthToSpace",mo="DepthwiseConv2dNative",nc="DepthwiseConv2dNativeBackpropFilter",oc="DepthwiseConv2dNativeBackpropInput",sc="Diag",Fu="Dilation2D",of="Dilation2DBackpropInput",sf="Dilation2DBackpropFilter",fo="RealDiv",Mu="Einsum",ho="Elu",ac="EluGrad",Di="Erf",Zs="Equal",go="Exp",ls="ExpandDims",Js="Expm1",ic="FFT",ja="Fill",ea="FlipLeftRight",bo="Floor",yo="FloorDiv",xo="FusedBatchNorm",ps="GatherV2",ta="GatherNd",ra="Greater",To="GreaterEqual",Kn="Identity",uc="IFFT",Eu="Imag",Pi="IsFinite",Fi="IsInf",Mi="IsNan",na="LeakyRelu",oa="Less",sa="LessEqual",lc="LinSpace",ko="Log",Ei="Log1p",aa="LogicalAnd",Ri="LogicalNot",Cl="LogicalOr",jN="LogSoftmax",Ru="LRN",pc="LRNGrad",Io="Max",Co="Maximum",vo="MaxPool",cc="MaxPoolGrad",Lu="MaxPool3D",mc="MaxPool3DGrad",fc="MaxPoolWithArgmax",wo="Mean",So="Min",_o="Minimum",Ao="MirrorPad",Li="Mod",dc="Multinomial",No="Multiply",cs="Neg",ia="NotEqual",ua="NonMaxSuppressionV3",$i="NonMaxSuppressionV4",la="NonMaxSuppressionV5",ms="OnesLike",pa="OneHot",fs="Pack",Do="PadV2",ame="Pool",Po="Pow",Fo="Prelu",ca="Prod",Ha="Range",$u="Real",Bi="Reciprocal",Mo="Relu",ds="Reshape",qa="ResizeNearestNeighbor",hc="ResizeNearestNeighborGrad",Eo="ResizeBilinear",gc="ResizeBilinearGrad",Ro="Relu6",ma="Reverse",fa="Round",Lo="Rsqrt",da="ScatterNd",hs="Select",Oi="Selu",gs="Slice",$o="Sin",ha="Sinh",zi="Sign",Bo="Sigmoid",Gi="Softplus",Oo="Sqrt",zo="Sum",bs="SpaceToBatchND",ys="SplitV",Go="Softmax",bc="SparseFillEmptyRows",yc="SparseReshape",xc="SparseSegmentMean",Tc="SparseSegmentSum",Bu="SparseToDense",Wo="SquaredDifference",Xa="Square",ga="StridedSlice",Ou="StringNGrams",kc="StringSplit",Ic="StringToHashBucketFast",Uo="Sub",ba="Tan",Ko="Tanh",An="Tile",ya="TopK",xa="Transform",Vo="Transpose",Cc="Unique",xs="Unpack",zu="UnsortedSegmentSum",Ts="ZerosLike",ks="Step",vl="FromPixels",Ta="RotateWithOffset",Is="_FusedMatMul",Cs="FusedConv2D",vs="FusedDepthwiseConv2D";var vc=nf("kernelRegistry",()=>new Map),af=nf("gradRegistry",()=>new Map);function uf(r,e){let t=Ck(r,e);return vc.get(t)}function Ik(r){return af.get(r)}function qg(r){let e=vc.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function Wi(r){let{kernelName:e,backendName:t}=r,n=Ck(e,t);vc.has(n)&&ro(`The kernel '${e}' for backend '${t}' is already registered`),vc.set(n,r)}function HN(r){let{kernelName:e}=r;af.has(e)&&W().getBool("DEBUG")&&ro(`Overriding the gradient for '${e}'`),af.set(e,r)}function cme(r,e){let t=Ck(r,e);if(!vc.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);vc.delete(t)}function mme(r){if(!af.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);af.delete(r)}function fme(r,e){qg(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});Wi(o)})}function Ck(r,e){return`${e}_${r}`}var b={};Qe(b,{arraysEqual:()=>on,assert:()=>D,assertNonNegativeIntegerDimensions:()=>tf,assertNonNull:()=>to,assertShapesMatch:()=>Ut,bytesFromStringArray:()=>yk,bytesPerElement:()=>jg,checkConversionForErrors:()=>gk,clamp:()=>Vp,computeStrides:()=>Ka,createScalarValue:()=>Zj,createShuffledIndices:()=>Ej,decodeString:()=>Ac,distSquared:()=>Dj,encodeString:()=>Wu,fetch:()=>eH,fingerPrint64:()=>Qj,flatten:()=>Hs,getArrayFromDType:()=>hk,getTypedArrayFromDType:()=>dk,hasEncodingLoss:()=>$j,hexToLong:()=>lf,indexToLoc:()=>zj,inferDtype:()=>jp,inferFromImplicitShape:()=>Lj,isBoolean:()=>zN,isFunction:()=>Ua,isInt:()=>mt,isNumber:()=>GN,isPromise:()=>rf,isScalarShape:()=>Pj,isString:()=>qs,isTypedArray:()=>kr,isValidDtype:()=>bk,locToIndex:()=>Oj,makeOnesTypedArray:()=>ef,makeZerosNestedTypedArray:()=>Bj,makeZerosTypedArray:()=>qp,nearestDivisor:()=>Hp,nearestLargerEven:()=>_j,now:()=>Nl,parseAxisParam:()=>yr,randUniform:()=>Nj,repeatedTry:()=>Rj,rightPad:()=>kl,shuffle:()=>ON,shuffleCombo:()=>Sj,sizeFromShape:()=>ct,sizeToSquarishShape:()=>Mj,squeezeShape:()=>fk,sum:()=>Aj,swap:()=>Vg,tanh:()=>Fj,toNestedArray:()=>Il,toTypedArray:()=>_c});var sD=Tl(oD());var _l=sD.default||sD;function lf(r){return _l.fromString(r,!0,16)}var aD=lf("c3a5c85c97cb3127"),Al=lf("b492b66fbe98f273"),sn=lf("9ae16a3b2f90404f");function Sk(r){return r.xor(r.shru(47))}function iD(r,e,t){let n=r.slice(e,e+t);return _l.fromBytes(Array.from(n),!0,!0)}function Xt(r,e){return iD(r,e,8)}function uD(r,e){return iD(r,e,4)}function Mr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Gu(r,e,t=lf("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function Hj(r,e,t,n,o,s){o=o.add(r),s=Mr(s.add(o).add(n),21);let a=o;return o=o.add(e),o=o.add(t),s=s.add(Mr(o,44)),[o.add(n),s.add(a)]}function Yg(r,e,t,n){return Hj(Xt(r,e),Xt(r,e+8),Xt(r,e+16),Xt(r,e+24),t,n)}function qj(r,e=r.length){if(e>=8){let t=sn.add(e*2),n=Xt(r,0).add(sn),o=Xt(r,e-8),s=Mr(o,37).mul(t).add(n),a=Mr(n,25).add(o).mul(t);return Gu(s,a,t)}if(e>=4){let t=sn.add(e*2),n=uD(r,0);return Gu(n.shl(3).add(e),uD(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),a=e+(o<<2);return Sk(sn.mul(s).xor(aD.mul(a))).mul(sn)}return sn}function Xj(r,e=r.length){let t=sn.add(e*2),n=Xt(r,0).mul(Al),o=Xt(r,8),s=Xt(r,e-8).mul(t),a=Xt(r,e-16).mul(sn);return Gu(Mr(n.add(o),43).add(Mr(s,30)).add(a),n.add(Mr(o.add(sn),18)).add(s),t)}function Yj(r,e=r.length){let t=sn.add(e*2),n=Xt(r,0).mul(sn),o=Xt(r,8),s=Xt(r,e-8).mul(t),a=Xt(r,e-16).mul(sn),i=Mr(n.add(o),43).add(Mr(s,30)).add(a),u=Gu(i,n.add(Mr(o.add(sn),18)).add(s),t),l=Xt(r,16).mul(t),p=Xt(r,24),c=i.add(Xt(r,e-32)).mul(t),m=u.add(Xt(r,e-24)).mul(t);return Gu(Mr(l.add(p),43).add(Mr(c,30)).add(m),l.add(Mr(p.add(n),18)).add(c),t)}function Qj(r,e=r.length){let t=_l.fromNumber(81,!0);if(e<=32)return e<=16?qj(r,e):Xj(r,e);if(e<=64)return Yj(r,e);let n=t,o=t.mul(Al).add(113),s=Sk(o.mul(sn).add(113)).mul(sn),a=[_l.UZERO,_l.UZERO],i=[_l.UZERO,_l.UZERO];n=n.mul(sn).add(Xt(r,0));let u=0,l=(e-1>>6)*64,p=l+(e-1&63)-63;do n=Mr(n.add(o).add(a[0]).add(Xt(r,u+8)),37).mul(Al),o=Mr(o.add(a[1]).add(Xt(r,u+48)),42).mul(Al),n=n.xor(i[1]),o=o.add(a[0]).add(Xt(r,u+40)),s=Mr(s.add(i[0]),33).mul(Al),a=Yg(r,u,a[1].mul(Al),n.add(i[0])),i=Yg(r,u+32,s.add(i[1]),o.add(Xt(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let c=Al.add(s.and(255).shl(1));return u=p,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Mr(n.add(o).add(a[0]).add(Xt(r,u+8)),37).mul(c),o=Mr(o.add(a[1]).add(Xt(r,u+48)),42).mul(c),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(Xt(r,u+40))),s=Mr(s.add(i[0]),33).mul(c),a=Yg(r,u,a[1].mul(c),n.add(i[0])),i=Yg(r,u+32,s.add(i[1]),o.add(Xt(r,u+16))),[s,n]=[n,s],Gu(Gu(a[0],i[0],c).add(Sk(o).mul(aD)).add(s),Gu(a[1],i[1],c).add(n),c)}function Zj(r,e){return e==="string"?Wu(r):_c([r],e)}function Jj(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function _c(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Hs(r)),W().getBool("DEBUG")&&gk(r,e),Jj(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Nl(){return W().platform.now()}function eH(r,e){return W().platform.fetch(r,e)}function Wu(r,e="utf-8"){return e=e||"utf-8",W().platform.encode(r,e)}function Ac(r,e="utf-8"){return e=e||"utf-8",W().platform.decode(r,e)}var _k=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new lD)}profileKernel(e,t,n){let o,s=()=>{o=n()},a,i=Nl();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();a=Promise.resolve({kernelMs:Nl()-i})}if(W().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let p=o[l];p.data().then(c=>{tH(c,p.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],s,u[2])})})}};function tH(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var lD=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?kl(`${o}ms`,9):o.error,u=kl(e,25),l=t.rank,p=t.size,c=kl(t.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let h=d.shape||t.shape,g=h.length;m+=`${f}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${i}	%c${l}D ${c}	%c${p}	%c${m}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function pD(r,e,t){let n={},o={};for(let u=0;u<e.length;u++)n[e[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],p=l.inputs;for(let c in p){let m=p[c],f=!1;for(let d=0;d<e.length;d++)if(n[m.id]){l.outputs.forEach(h=>n[h.id]=!0),f=!0,o[l.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let a={};for(let u=r.length-1;u>=0;u--){let l=r[u],p=l.inputs;for(let c=0;c<l.outputs.length;c++)if(s[l.outputs[c].id]){for(let m in p)s[p[m].id]=!0,a[l.id]=!0;break}}let i=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&a[l.id]){let p={};for(let m in l.inputs){let f=l.inputs[m];n[f.id]&&(p[m]=f)}let c=Object.assign({},l);c.inputs=p,c.outputs=l.outputs,i.push(c)}}return i}function cD(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?a.push(l):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let u in s.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);let l=t(()=>i[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let p=s.inputs[u];if(!on(l.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${p.shape}'`);if(r[p.id]==null)r[p.id]=l;else{let c=r[p.id];r[p.id]=n(c,l),c.dispose()}}}}var mD=20,pf=3,Ak=7;function fD(r,e,t,n){let o=Ka(e),s=rH(r,e,t,o),a=e.length,i=Qg(r,e,t,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(l=>"    "+l).join(`
`)),u.join(`
`)}function rH(r,e,t,n){let o=ct(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,u=t==="complex64"?mf(r):r;if(i>1)for(let l=0;l<o/s;l++){let p=l*s;for(let c=0;c<s;c++)a[c]=Math.max(a[c],cf(u[p+c],0,t).length)}return a}function cf(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(Ak))} + ${parseFloat(r[1].toFixed(Ak))}j`:qs(r)?n=`'${r}'`:t==="bool"?n=dD(r):n=parseFloat(r.toFixed(Ak)).toString(),kl(n,e)}function dD(r){return r===0?"false":"true"}function Qg(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){let h=mf(r);return[cf(h[0],0,t)]}return t==="bool"?[dD(r[0])]:[r[0].toString()]}if(u===1){if(i>mD){let g=pf*a,y=Array.from(r.slice(0,g)),x=Array.from(r.slice((i-pf)*a,i*a));return t==="complex64"&&(y=mf(y),x=mf(x)),["["+y.map((T,k)=>cf(T,o[k],t)).join(", ")+", ..., "+x.map((T,k)=>cf(T,o[i-pf+k],t)).join(", ")+"]"]}let h=t==="complex64"?mf(r):Array.from(r);return["["+h.map((g,y)=>cf(g,o[y],t)).join(", ")+"]"]}let l=e.slice(1),p=n.slice(1),c=n[0]*a,m=[];if(i>mD){for(let h=0;h<pf;h++){let g=h*c,y=g+c;m.push(...Qg(r.slice(g,y),l,t,p,o,!1))}m.push("...");for(let h=i-pf;h<i;h++){let g=h*c,y=g+c;m.push(...Qg(r.slice(g,y),l,t,p,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*c,y=g+c;m.push(...Qg(r.slice(g,y),l,t,p,o,h===i-1))}let f=u===2?",":"";m[0]="["+m[0]+f;for(let h=1;h<m.length-1;h++)m[h]=" "+m[h]+f;let d=`,
`;for(let h=2;h<u;h++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function mf(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var xt=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=ct(e),n!=null){let o=n.length;D(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||hk(t,this.size),this.strides=Ka(e)}set(e,...t){t.length===0&&(t=[0]),D(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ya().makeTensor(this.values,this.shape,this.dtype)}},Ya=null,Nc=null,nH=null;function hD(r){Ya=r}function gD(r){Nc=r}function bD(r){nH=r}var Ye=class{constructor(e,t,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=e.slice(),this.dtype=t||"float32",this.size=ct(e),this.strides=Ka(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Nc.buffer(this.shape,this.dtype,e)}bufferSync(){return Nc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Il(this.shape,e,this.dtype==="complex64")}arraySync(){return Il(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Ya().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Ac(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Ya().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Ac(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ya().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ya().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Nc.print(this,e)}clone(){return this.throwIfDisposed(),Nc.clone(this)}toString(e=!1){let t=this.dataSync();return fD(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Nc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ya().makeVariable(this,e,t,n)}};Object.defineProperty(Ye,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function oH(){return nf("Tensor",()=>Ye)}oH();var Uu=class extends Ye{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t;this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!on(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ya().disposeTensor(this),this.dataId=e.dataId,Ya().incRef(this,null)}dispose(){Ya().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Uu,Symbol.hasInstance,{value:r=>r instanceof Ye&&r.assign!=null&&r.assign instanceof Function});var As={};Qe(As,{assertTypesMatch:()=>Ek,getTensorsInContainer:()=>ff,isTensorInList:()=>aH,makeTypesMatch:()=>Ze});var Nk;(function(i){i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6"})(Nk||(Nk={}));var Dk;(function(o){o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64"})(Dk||(Dk={}));var Pk;(function(o){o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64"})(Pk||(Pk={}));var Fk;(function(o){o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64"})(Fk||(Fk={}));var Mk;(function(o){o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64"})(Mk||(Mk={}));var sH={float32:Fk,int32:Dk,bool:Pk,complex64:Mk};function Kt(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return sH[r][e]}function Ui(r){return Kt(r,"int32")}function Ze(r,e){if(r.dtype===e.dtype)return[r,e];let t=Kt(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function Ek(r,e){D(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function aH(r,e){return e.some(t=>t.id===r.id)}function ff(r){let e=[],t=new Set;return yD(r,e,t),e}function yD(r,e,t){if(r==null)return;if(r instanceof Ye){e.push(r);return}if(!iH(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),yD(s,e,t))}}function iH(r){return Array.isArray(r)||typeof r=="object"}function Rk(r){return r.kernelName!=null}var Lk=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Jg=class{constructor(e){this.ENV=e;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new Lk}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ro(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new _k(this.backendInstance),!0}setupRegisteredKernels(){qg(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){qg(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof os)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,ro(`Initialization of backend ${e} failed`),ro(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return ro(`Initialization of backend ${e} failed`),ro(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return Jg.nextTensorId++}nextVariableId(){return Jg.nextVariableId++}clone(e){let t=N.runKernel(Kn,{x:e}),n={x:e},o=a=>({x:()=>{let i="float32",u={x:a},l={dtype:i};return N.runKernel(Wn,u,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(uf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u,l=Rk(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Rk(e)){let{kernelName:d,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let y=uf(d,this.backendName);D(y!=null,()=>`Cannot find registered kernel '${d}' for backend '${this.backendName}'`),i=()=>{let x=this.backend.numDataIds();u=y.kernelFunc({inputs:h,attrs:g,backend:this.backend});let T=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,x,T);let k=T.map(v=>{if(v.rank!=null)return v;let{dataId:P,shape:A,dtype:F}=v;return this.makeTensorFromDataId(P,A,F)});if(o){let v=this.getTensorsForGradient(d,h,k);n=this.saveTensorsForBackwardMode(v)}return k}}else{let{forwardFunc:d}=e,h=g=>{!o||(n=g.map(y=>this.keep(this.clone(y))))};i=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>d(this.backend,h));let y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,y),y}}let{inputs:p,attrs:c}=e,m=Rk(e)?null:e.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(f=this.profiler.profileKernel(l,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),o&&this.addTapeNode(l,p,t,m,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(d=>p[d]!=null?p[d].shape:null),outputShapes:t.map(d=>d.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=Ik(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(D(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=s.map(l=>t[l]);let u=n.filter((l,p)=>a[p]);return i.concat(u)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&qs(e[0])&&(s=e.map(u=>Wu(u)));let a=o.write(s,t,n),i=new Ye(t,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let u=this.state.tensorInfo.get(a),l=yk(s);this.state.numBytes+=l-u.bytes,u.bytes=l}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s=new Ye(t,n,e,this.nextTensorId());return this.trackTensor(s,o),s}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new Uu(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*jg(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Uu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*jg(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=Ik(e);u!=null&&(o=u.gradFunc),o!=null&&(i.gradient=l=>(l=l.map((p,c)=>{if(p==null){let m=n[c],f=qp(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return p}),o(l.length>1?l:l[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=ff(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(D(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));D(s instanceof Ye,()=>"The result y returned by f() must be a tensor.");let a=pD(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??uH(s.shape),cD(i,a,l=>this.tidy(l),lH);let u=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let p of l.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return D(Ua(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{D(t.every(i=>i instanceof Ye),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((i,u)=>{o[u]=i});let s=(i,u)=>(n=e(...t,u),D(n.value instanceof Ye,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(Ua(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,u)=>{let l=n.gradFunc(i,u),p=Array.isArray(l)?l:[l];D(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(p.every(m=>m instanceof Ye),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return p.forEach((m,f)=>{c[f]=()=>m}),c};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Nl(),n=await this.backend.time(e);return n.wallMs=Nl()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Lk;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Zg=Jg;Zg.nextTensorId=0,Zg.nextVariableId=0;function uH(r){let e=ef(ct(r),"float32");return N.makeTensor(e,r,"float32")}function $k(){let r=kk();if(r._tfengine==null){let e=new Hg(r);r._tfengine=new Zg(e)}return KN(r._tfengine.ENV),hD(()=>r._tfengine),r._tfengine}var N=$k();function lH(r,e){let t={a:r,b:e};return N.runKernel(_n,t)}var Ki={};Qe(Ki,{isBrowser:()=>Ok,isMobile:()=>mH,mockIsMobile:()=>cH});function pH(){return typeof navigator!="undefined"&&navigator!=null}var Bk;function cH(r){Bk=r}function mH(r){if(Bk!==void 0)return Bk;if(r||pH()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window!="undefined"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Ok(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Ia=W();Ia.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ia.registerFlag("IS_BROWSER",()=>Ok());Ia.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Ia.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ia.registerFlag("PROD",()=>!1);Ia.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ia.getBool("DEBUG"));Ia.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ia.registerFlag("IS_TEST",()=>!1);Ia.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ia.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Wr(r,e){let t=r;if(kr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||kr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&W().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&xD(r,n,[]),n}function xD(r,e,t){if(t=t||[],!Array.isArray(r)&&!kr(r)){D(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}D(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),D(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)xD(r[o],n,t.concat(o))}function TD(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function C(r,e,t,n="numeric"){if(r instanceof Ye)return TD(n,r.dtype,e,t),r;let o=jp(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),TD(n,o,e,t),r==null||!kr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}let s=Wr(r,o);!kr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?_c(r,o):Hs(r,[],!0);return N.makeTensor(i,s,o)}function Vi(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>C(s,`${e}[${a}]`,t,n))}var kD="__op";function _(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+kD;let o=(...s)=>{N.startScope(t);try{let a=n(...s);return rf(a)&&console.error("Cannot return a Promise inside of tidy."),N.endScope(a),a}catch(a){throw N.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function fH(r,e){let t=C(r,"real","complex"),n=C(e,"imag","complex");Ut(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return N.runKernel(Nu,o)}var Hn=_({complex_:fH});function an(r,e,t,n){if(n==null&&(n=jp(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!kr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){tf(e);let o=ct(e),s=ct(t);D(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],u=a===t.length-1?i!==ct(e.slice(a)):!0;D(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!kr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?_c(r,n):Hs(r,[],!0),N.makeTensor(r,e,n)}function Er(r,e,t){let n=Wr(r,t);return an(r,e,n,t)}var df={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var eb=4;async function ID(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],u=Array.isArray(r)?r[a].tensor:r[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);let l={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let p=new Promise(async c=>{let m=await u.bytes(),f=m.reduce((g,y)=>g+y.length,0)+eb*m.length,d=new Uint8Array(f),h=0;for(let g=0;g<m.length;g++){let y=m[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);d.set(x,h),h+=eb,d.set(y,h),h+=y.length}c(d)});n.push(p)}else n.push(u.data());e!=null&&(l.group=e),t.push(l)}let s=await Promise.all(n);return{data:dH(s),specs:t}}function tb(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,u=s.shape,l=ct(u),p;if("quantization"in s){let c=s.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${s.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=df[c.dtype],f=r.slice(o,o+l*m),d=c.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(i==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){p=new Float32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];p[h]=g*c.scale+c.min}}else if(c.dtype==="float16")n===void 0&&(n=yH()),p=n(d);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(i==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);p=new Int32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];p[h]=Math.round(g*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*m}else if(i==="string"){let c=ct(s.shape);p=[];for(let m=0;m<c;m++){let f=new Uint32Array(r.slice(o,o+eb))[0];o+=eb;let d=new Uint8Array(r.slice(o,o+f));p.push(d),o+=f}}else{let c=df[i],m=r.slice(o,o+l*c);if(i==="float32")p=new Float32Array(m);else if(i==="int32")p=new Int32Array(m);else if(i==="bool")p=new Uint8Array(m);else if(i==="complex64"){p=new Float32Array(m);let f=new Float32Array(p.length/2),d=new Float32Array(p.length/2);for(let y=0;y<f.length;y++)f[y]=p[y*2],d[y]=p[y*2+1];let h=Er(f,u,"float32"),g=Er(d,u,"float32");t[a]=Hn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*c}i!=="complex64"&&(t[a]=Er(p,u,i))}return t}function dH(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var zk=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function CD(r){return zk?Buffer.byteLength(r):new Blob([r]).size}function vD(r){if(zk)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function wD(r){if(zk){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function Dc(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function Gk(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function rb(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}async function Pc(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await e(r.weightsManifest);t.weightSpecs=n,t.weightData=o}return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),t}function Qa(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:CD(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:CD(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function hH(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)==0;)o-=8388608,n<<=1;return n&=~8388608,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function gH(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function bH(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function yH(){let r=hH(),e=gH(),t=bH();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],u=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=u}return new Float32Array(o)}}var Rt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Rt.instance==null&&(Rt.instance=new Rt),Rt.instance}static registerSaveRouter(e){Rt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Rt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Rt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Rt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Rt.getInstance().loadRouters:Rt.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},SD=r=>Rt.registerSaveRouter(r),_D=r=>Rt.registerLoadRouter(r),AD=r=>Rt.getSaveHandlers(r),ND=(r,e)=>Rt.getLoadHandlers(r,e);var Wk="tensorflowjs",Uk=1,Dl="models_store",Ku="model_info_store";function DD(){if(!W().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window=="undefined"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Kk(r){let e=r.result;e.createObjectStore(Dl,{keyPath:"modelPath"}),e.createObjectStore(Ku,{keyPath:"modelPath"})}var ji=class{constructor(e){if(this.indexedDB=DD(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(Wk,Uk);s.onupgradeneeded=()=>Kk(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(Dl,"readonly"),l=i.objectStore(Dl).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=p=>(a.close(),o(l.error)),i.oncomplete=()=>a.close()}else{let i=Qa(t),u=a.transaction(Ku,"readwrite"),l=u.objectStore(Ku),p=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),c;p.onsuccess=()=>{c=a.transaction(Dl,"readwrite");let f=c.objectStore(Dl).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});f.onsuccess=()=>n({modelArtifactsInfo:i}),f.onerror=d=>{l=u.objectStore(Ku);let h=l.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(f.error)),h.onerror=g=>(a.close(),o(f.error))}},p.onerror=m=>(a.close(),o(p.error)),u.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};ji.URL_SCHEME="indexeddb://";var PD=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ji.URL_SCHEME)?xH(r.slice(ji.URL_SCHEME.length)):null;Rt.registerSaveRouter(PD);Rt.registerLoadRouter(PD);function xH(r){return new ji(r)}function TH(r){return r.startsWith(ji.URL_SCHEME)?r.slice(ji.URL_SCHEME.length):r}var Vk=class{constructor(){this.indexedDB=DD()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Wk,Uk);n.onupgradeneeded=()=>Kk(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Ku,"readonly"),i=s.objectStore(Ku).getAll();i.onsuccess=()=>{let u={};for(let l of i.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},i.onerror=u=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=TH(e),new Promise((t,n)=>{let o=this.indexedDB.open(Wk,Uk);o.onupgradeneeded=()=>Kk(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(Ku,"readwrite"),i=a.objectStore(Ku),u=i.get(e),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=i.delete(e),c=()=>{l=s.transaction(Dl,"readwrite");let f=l.objectStore(Dl).delete(e);f.onsuccess=()=>t(u.result.modelArtifactsInfo),f.onerror=d=>n(u.error)};p.onsuccess=c,p.onerror=m=>(c(),s.close(),n(u.error))}},u.onerror=p=>(s.close(),n(u.error)),a.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var Hi="/",Fc="tensorflowjs_models",FD="info",kH="model_topology",IH="weight_specs",CH="weight_data",vH="model_metadata";function MD(r){return{info:[Fc,r,FD].join(Hi),topology:[Fc,r,kH].join(Hi),weightSpecs:[Fc,r,IH].join(Hi),weightData:[Fc,r,CH].join(Hi),modelMetadata:[Fc,r,vH].join(Hi)}}function ED(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function wH(r){let e=r.split(Hi);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(Hi)}function SH(r){return r.startsWith(qi.URL_SCHEME)?r.slice(qi.URL_SCHEME.length):r}var qi=class{constructor(e){if(!W().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=MD(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=Qa(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,vD(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw ED(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=wD(a),t}};qi.URL_SCHEME="localstorage://";var RD=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(qi.URL_SCHEME)?_H(r.slice(qi.URL_SCHEME.length)):null;Rt.registerSaveRouter(RD);Rt.registerLoadRouter(RD);function _H(r){return new qi(r)}var jk=class{constructor(){D(W().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Fc+Hi,n=Hi+FD;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=wH(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=SH(e);let t=MD(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return ED(t),n}};var Mc="://",un=class{constructor(){this.managers={}}static getInstance(){return un.instance==null&&(un.instance=new un),un.instance}static registerManager(e,t){D(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Mc)&&(e=e.slice(0,e.indexOf(Mc))),D(e.length>0,()=>"scheme must not be an empty string.");let n=un.getInstance();D(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function nb(r){if(r.indexOf(Mc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${un.getSchemes().join(",")}`);return{scheme:r.split(Mc)[0],path:r.split(Mc)[1]}}async function LD(r,e,t=!1){D(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Rt.getLoadHandlers(r);D(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),D(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Rt.getSaveHandlers(e);D(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),D(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=nb(r).scheme,u=nb(r).path,l=i===nb(r).scheme,p=await o.load();t&&l&&await un.getManager(i).removeModel(u);let c=await a.save(p);return t&&!l&&await un.getManager(i).removeModel(u),c.modelArtifactsInfo}async function $D(){let r=un.getSchemes(),e={};for(let t of r){let n=await un.getManager(t).listModels();for(let o in n){let s=t+Mc+o;e[s]=n[o]}}return e}async function BD(r){let e=nb(r);return un.getManager(e.scheme).removeModel(e.path)}async function OD(r,e){return LD(r,e,!1)}async function zD(r,e){return LD(r,e,!0)}var GD=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(W().get("IS_BROWSER")){W().setPlatform("browser",new GD);try{un.registerManager(qi.URL_SCHEME,new jk)}catch{}try{un.registerManager(ji.URL_SCHEME,new Vk)}catch{}}var AH={importFetch:()=>WD()},Hk;var KD=class{constructor(){this.util=UD(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return W().global.fetch!=null?W().global.fetch(e,t):(Hk==null&&(Hk=AH.importFetch()),Hk(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};W().get("IS_NODE")&&W().setPlatform("node",new KD);function Ce(r,e="float32",t){return e=e||"float32",tf(r),new xt(r,e,t)}function NH(r,e){let t=C(r,"x","cast");if(!bk(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return N.runKernel(Wn,n,o)}var Q=_({cast_:NH});function DH(r){let t={x:C(r,"x","clone","string_or_numeric")};return N.runKernel(Kn,t)}var Nn=_({clone_:DH});function qk(r,e=!1){console.log(r.toString(e))}$k();var PH={buffer:Ce,cast:Q,clone:Nn,print:qk};gD(PH);var Ur={};Qe(Ur,{browserFiles:()=>HD,browserHTTPRequest:()=>YD,concatenateArrayBuffers:()=>Dc,copyModel:()=>OD,decodeWeights:()=>tb,encodeWeights:()=>ID,fromMemory:()=>ZD,getLoadHandlers:()=>ND,getModelArtifactsForJSON:()=>Pc,getModelArtifactsInfoForJSON:()=>Qa,getSaveHandlers:()=>AD,http:()=>ib,isHTTPScheme:()=>ab,listModels:()=>$D,loadWeights:()=>qD,moveModel:()=>zD,registerLoadRouter:()=>_D,registerSaveRouter:()=>SD,removeModel:()=>BD,weightsLoaderFactory:()=>Qk,withSaveHandler:()=>JD});var FH="model",MH=".json",EH=".weights.bin";function VD(r){return new Promise(e=>setTimeout(e)).then(r)}var ob=class{constructor(e){if(!W().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ob.URL_SCHEME)&&(e=e.slice(ob.URL_SCHEME.length)),(e==null||e.length===0)&&(e=FH),this.modelJsonFileName=e+MH,this.weightDataFileName=e+EH}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=rb(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await VD(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await VD(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Qa(e)}}}},hf=ob;hf.URL_SCHEME="downloads://";var jD=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let u=Pc(s,l=>this.loadWeights(l));e(u)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[t,Dc(a)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>Gk(s.name)),o={};for(let s of e)s.paths.forEach(a=>{let i=Gk(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},RH=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(hf.URL_SCHEME)?LH(r.slice(hf.URL_SCHEME.length)):null;Rt.registerSaveRouter(RH);function LH(r="model"){return new hf(r)}function HD(r){return new jD(r)}function Xk(r,e,t,n){a(r),t=t??0,n=n??1,i(t,n);let o=0,s=u=>(u.then(l=>{let p=t+ ++o/r.length*(n-t);return e(p),l}),u);function a(u){D(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,l){D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),D(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),D(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function Yk(r,e){e==null&&(e={});let t=e.fetchFunc==null?W().platform.fetch:e.fetchFunc,n=r.map(c=>t(c,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await Xk(n,e.onProgress,o,s)).map(c=>c.arrayBuffer()),u=.5,l=1;return e.onProgress==null?await Promise.all(i):await Xk(i,e.onProgress,u,l)}async function qD(r,e="",t,n){return Qk(a=>Yk(a,{requestInit:n}))(r,e,t)}function Qk(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((f,d)=>{let h=0;f.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=df[y]*ct(g.shape),T=()=>{o[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:g,groupOffset:h,sizeBytes:x})};n!=null?n.forEach((k,v)=>{k===g.name&&(T(),a[v]=!0)}):T(),i.push(g.name),h+=x})}),!a.every(f=>f)){let f=n.filter((d,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let u=o.reduce((f,d,h)=>(d&&f.push(h),f),[]),l=[];u.forEach(f=>{e[f].paths.forEach(d=>{let h=t+(t.endsWith("/")?"":"/")+d;l.push(h)})});let p=await r(l),c={},m=0;return u.forEach(f=>{let d=e[f].paths.length,h=0;for(let k=0;k<d;k++)h+=p[m+k].byteLength;let g=new ArrayBuffer(h),y=new Uint8Array(g),x=0;for(let k=0;k<d;k++){let v=new Uint8Array(p[m+k]);y.set(v,x),x+=v.byteLength}s[f].forEach(k=>{let v=g.slice(k.groupOffset,k.groupOffset+k.sizeBytes),P=tb(v,[k.manifestEntry]);for(let A in P)c[A]=P[A]}),m+=d}),c}}var $H="application/octet-stream",BH="application/json",sb=class{constructor(e,t){this.DEFAULT_METHOD="POST";if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(D(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=W().platform.fetch,D(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&D(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=rb(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:BH}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:$H}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Qa(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Pc(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=OH(t),s=this.weightPathPrefix||n,a=[];for(let p of e)a.push(...p.weights);let i=[],u=[];for(let p of e)for(let c of p.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(c)):i.push(s+c+o);this.weightUrlConverter&&i.push(...await Promise.all(u));let l=await Yk(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Dc(l)]}};sb.URL_SCHEME_REGEX=/^https?:\/\//;function OH(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function ab(r){return r.match(sb.URL_SCHEME_REGEX)!=null}var XD=(r,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>ab(n)):t=ab(r),t)return ib(r,e)}return null};Rt.registerSaveRouter(XD);Rt.registerLoadRouter(XD);function ib(r,e){return new sb(r,e)}function YD(r,e){return ib(r,e)}var ub=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},QD=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function ZD(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new ub(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ub({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ub({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function JD(r){return new QD(r)}var t0={};Qe(t0,{confusionMatrix:()=>e0});function zH(r,e,t=!1,n=!1){let o=C(r,"a","matMul"),s=C(e,"b","matMul");[o,s]=Ze(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return N.runKernel(ao,a,i)}var Ve=_({matMul_:zH});function GH(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:C(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:n};return N.runKernel(pa,s,a)}var Xi=_({oneHot_:GH});function WH(r,e){let t=C(r,"x","transpose");if(e==null&&(e=t.shape.map((s,a)=>a).reverse()),D(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{D(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let n={x:t},o={perm:e};return N.runKernel(Vo,n,o)}var qe=_({transpose_:WH});function UH(r,e,t){let n=C(r,"labels","confusionMatrix"),o=C(e,"predictions","confusionMatrix");D(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),D(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),D(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),D(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),D(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=Xi(Q(n,"int32"),t),a=Xi(Q(o,"int32"),t),i=qe(s),u=Ve(i,a);return Q(u,"int32")}var e0=_({confusionMatrix_:UH});var lb={};Qe(lb,{fromPixels:()=>YH,fromPixelsAsync:()=>qH,toPixels:()=>XH});function Zk(r,e,t){if(to(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Wr(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return an(r,e,n,t)}var Pl;function r0(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData!="undefined"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o){let d=2;if(o&&r.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(uf(vl,N.backendName)!=null){let d={pixels:r},h={numChannels:e};return N.runKernel(vl,d,h)}let[l,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c;if(a)c=r.getContext("2d").getImageData(0,0,l,p).data;else if(n||t)c=r.data;else if(s||o||i){if(Pl==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Pl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Pl=document.createElement("canvas").getContext("2d");Pl.canvas.width=l,Pl.canvas.height=p,Pl.drawImage(r,0,0,l,p),c=Pl.getImageData(0,0,l,p).data}let m;if(e===4)m=new Int32Array(c);else{let d=l*p;m=new Int32Array(d*e);for(let h=0;h<d;h++)for(let g=0;g<e;++g)m[h*e+g]=c[h*4+g]}return Zk(m,[p,l,e],"int32")}function KH(r){return r!=null&&r.data instanceof Uint8Array}function VH(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function jH(r){return r!=null&&r.width!==0&&r.height!==0}function HH(r){return VH()&&!(r instanceof ImageBitmap)&&jH(r)&&!KH(r)}async function qH(r,e=3){let t=null;if(W().getBool("WRAP_TO_IMAGEBITMAP")&&HH(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return r0(t,e)}async function XH(r,e){let t=C(r,"img","toPixels");if(!(r instanceof Ye)){let l=t;t=Q(l,"int32"),l.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let p=[0,0,0,255];for(let m=0;m<s;m++){let f=a[l*s+m];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(p[0]=f*i,p[1]=f*i,p[2]=f*i):p[m]=f*i}let c=l*4;u[c+0]=Math.round(p[0]),u[c+1]=Math.round(p[1]),u[c+2]=Math.round(p[2]),u[c+3]=Math.round(p[3])}if(e!=null){e.width=o,e.height=n;let l=e.getContext("2d"),p=new ImageData(u,o,n);l.putImageData(p,0,0)}return t!==r&&t.dispose(),u}var YH=_({fromPixels_:r0});var pb={};Qe(pb,{prepareAndValidate:()=>n0});function n0(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(ct(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let c=0;c<o.length-1;++c)a*=o[c];let i=r.shape,u=o.slice();u.pop();let l=1;for(let c=s;c<t;++c)l*=i[c],u.push(i[c]);let p=[...Ka(r.shape).map(c=>c/l),1].slice(0,s);return[u,a,l,p]}var mb={};Qe(mb,{calculateShapes:()=>o0,validateInput:()=>cb,validateUpdateShape:()=>Jk});function Jk(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function cb(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}Jk(t,e,r)}function o0(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let c=o;c<s;++c)a*=t[c];let i=o<1?1:o,u=ct(e.shape)/i,l=[...Ka(t.slice(0,o)),1],p=ct(t);return{sliceRank:o,numUpdates:u,sliceSize:a,strides:l,outputSize:p}}var It={};Qe(It,{assertParamsValid:()=>ZH,computeFlatOffset:()=>nq,computeOutShape:()=>eq,getNormalizedAxes:()=>tq,isSliceContinous:()=>rq,maskToAxes:()=>JH,parseSliceParams:()=>tI,sliceInfo:()=>oq,startForAxis:()=>c0,startIndicesWithElidedDims:()=>u0,stopForAxis:()=>m0,stopIndicesWithElidedDims:()=>l0,stridesForAxis:()=>p0,stridesWithElidedDims:()=>s0});var eI=-2,QH=-1;function ZH(r,e,t){let n=r.shape.length;D(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),D(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)D(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function JH(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function eq(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function s0(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function a0(r,e,t){return t<=r?t:t-(e-1)}function i0(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function tq(r,e,t,n,o,s,a,i,u){let l=r.length,p=new Array(l),c=new Array(l),m=new Array(l);if(e.length&&t>0){let f=e[0],d=t+1;p=u0(a,f,d,n,r),c=l0(i,f,d,o,r),m=s0(s,f,d,r)}else for(let f=0;f<l;f++)p[f]=c0(a,n,s,r,f,u),c[f]=m0(i,o,s,r,f,u),m[f]=p0(s,f,u);return{begin:p,end:c,strides:m}}function u0(r,e,t,n,o){let s=[...o],a=i0(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let u=a0(e,t,i),l=n[u];r&1<<u&&(l=0),s[i]=l}return s}function l0(r,e,t,n,o){let s=[...o],a=i0(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let u=a0(e,t,i),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[i]=l}for(let i=0;i<s.length;i++){let u=o[i];s[i]<0&&(s[i]+=u),s[i]=Vp(0,s[i],o[i])}return s}function p0(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function c0(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),a=Vp(0,a,u-1),a}function m0(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),i>0?a=Vp(0,a,u):a=Vp(-1,a,u-1),a}function rq(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function nq(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function tI(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{D(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(D(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function oq(r,e,t,n,o,s,a,i,u){let l;if(n==null?(l=new Array(e.length),l.fill(1)):l=n,a!=null&&(a&a-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,c={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let T=0;T<c.dims;T++)p&&(1<<T&i)!=0&&c.numAddAxisAfterEllipsis++,1<<T&a&&(p=!0);p||(c.ellipsisMask|=1<<c.dims,c.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};sq(c,m);let f=!0,d=!0,h=!0,g=[],y=[];for(let T=0;T<r.length;++T){if(m.strides[T]===0)throw Error(`strides[${T}] must be non-zero`);let k=!!(m.shrinkAxisMask&1<<T),v=r[T];if(v===-1){g.push(k?1:-1);continue}let P=[m.beginMask&1<<T,m.endMask&1<<T],A=[m.strides[T]>0?0:-1,m.strides[T]>0?v:v-1];if(k&&m.strides[T]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&m.strides[T]===1;let F=!!(m.beginMask&1<<T&&m.endMask&1<<T);if(m.beginValid&&m.endValid){if(k){let K=m.begin[T]<0?v+m.begin[T]:m.begin[T];if(m.begin[T]=K,m.end[T]=m.begin[T]+1,K<0||K>=v)throw Error(`slice index ${m.begin[T]} of dimension ${T} out of bounds.`)}else m.begin[T]=f0(m.begin[T],0,m.strides[T],v,P,A),m.end[T]=f0(m.end[T],1,m.strides[T],v,P,A);let U=m.strides[T]===1&&m.begin[T]===0&&m.end[T]===v;f=f&&U,d=d&&(T===0&&m.strides[T]===1||U)}else f=f&&m.strides[T]===1&&F,d=d&&(T===0&&m.strides[T]===1||F);let E,L=!1;if(m.beginValid&&m.endValid?(E=m.end[T]-m.begin[T],L=!0):k?(E=1,L=!0):F&&v>=0&&(m.strides[T]<0?E=-v:E=v,L=!0),L){let U;E===0||E<0!=m.strides[T]<0?U=0:U=Math.trunc(E/m.strides[T])+(E%m.strides[T]!=0?1:0),g.push(U)}else g.push(-1)}for(let T=0;T<m.finalShapeGatherIndices.length;++T){let k=m.finalShapeGatherIndices[T];k>=0?y.push(g[k]):k===eI&&y.push(1)}return{finalShapeSparse:y.filter((T,k)=>m.finalShapeGatherIndices[k]!==eI),finalShape:y,isIdentity:f,sliceDim0:d,isSimpleSlice:h,begin:m.begin,end:m.end,strides:m.strides}}function sq(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(eI),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(QH),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function f0(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var J={};Qe(J,{Serializable:()=>fb,SerializationMap:()=>Yi,registerClass:()=>Dn});var fb=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Yi=class{constructor(){this.classNameMap={}}static getMap(){return Yi.instance==null&&(Yi.instance=new Yi),Yi.instance}static register(e){Yi.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Dn(r){D(r.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),D(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Yi.register(r)}var b0={};Qe(b0,{TEST_EPSILON_FLOAT16:()=>d0,encodeStrings:()=>g0,expectArrayBuffersEqual:()=>cq,expectArraysClose:()=>iq,expectArraysEqual:()=>lq,expectNumbersClose:()=>h0,expectPromiseToFail:()=>uq,expectValuesInRange:()=>pq,testEpsilon:()=>db});var aq=.001,d0=.1;function iq(r,e,t){return t==null&&(t=db()),rI(r,e,(n,o)=>nI(n,o,t))}function db(){return N.backend.floatPrecision()===32?aq:d0}function rI(r,e,t){let n=!0;if((kr(r)||kr(e))&&(n=!1),kr(r)&&kr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=Wr(r),i=Wr(e);if(!on(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=kr(r)?r:Hs(r),s=kr(e)?e:Hs(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],u=s[a];if(!t(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}}function uq(r,e){r().then(()=>e.fail(),()=>e())}function lq(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return qs(r)||qs(r[0])||qs(e)||qs(e[0])?rI(r,t,(n,o)=>n==o):rI(r,e,(n,o)=>nI(n,o,0))}function h0(r,e,t){if(t==null&&(t=db()),!nI(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function nI(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function pq(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function cq(r,e){expect(new Float32Array(r)).toEqual(new Float32Array(e))}function g0(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?g0(t):r[e]=Wu(t)}return r}var mq="0.0.0";function obe(){W().set("PROD",!0)}function sbe(){W().set("DEBUG",!0)}function abe(){W().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function oI(r){W().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}bD(oI);function ibe(){N.disposeVariables()}function jo(){return N}function gf(){return N.memory()}function ube(r){return N.profile(r)}function G(r,e){return N.tidy(r,e)}function Ee(r){ff(r).forEach(t=>t.dispose())}function Vt(r){return N.keep(r)}function lbe(r){return N.time(r)}function fq(r){return N.setBackend(r)}function pbe(){return N.ready()}function cbe(){return N.backendName}function mbe(r){N.removeBackend(r)}function fbe(r){return N.findBackend(r)}function dbe(r){return N.findBackendFactory(r)}function Vu(r,e,t=1){return N.registerBackend(r,e,t)}function y0(){return N.backend}function hbe(r,e){W().setPlatform(r,e)}function dq(r,e){let t=C(r,"a","add"),n=C(e,"b","add");[t,n]=Ze(t,n);let o={a:t,b:n};return N.runKernel(_n,o)}var X=_({add_:dq});function hq(r,e){let t=C(r,"a","floorDiv"),n=C(e,"b","floorDiv");[t,n]=Ze(t,n);let o={a:t,b:n};return N.runKernel(yo,o)}var bf=_({floorDiv_:hq});function gq(r,e){let t=C(r,"a","div"),n=C(e,"b","div");if([t,n]=Ze(t,n),t.dtype==="int32"&&n.dtype==="int32")return bf(t,n);let o={a:t,b:n},s={};return N.runKernel(fo,o,s)}var pe=_({div_:gq});function bq(r,e){let t=C(r,"a","mul"),n=C(e,"b","mul");[t,n]=Ze(t,n);let o={a:t,b:n};return N.runKernel(No,o)}var R=_({mul_:bq});function yq(r){let e=C(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return N.runKernel(Du,t)}else{let t={x:e};return N.runKernel(as,t)}}var zt=_({abs_:yq});function xq(r){let t={x:C(r,"x","acos")};return N.runKernel(ki,t)}var sI=_({acos_:xq});function Tq(r){let t={x:C(r,"x","acosh")};return N.runKernel(Ii,t)}var aI=_({acosh_:Tq});function kq(r){D(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),D(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>C(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!on(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return N.runKernel(no,n)}var iI=_({addN_:kq});function Iq(r,e=null,t=!1){let o={x:C(r,"x","all","bool")},s={axis:e,keepDims:t};return N.runKernel(Ci,o,s)}var yf=_({all_:Iq});function Cq(r,e=null,t=!1){let o={x:C(r,"x","any","bool")},s={axis:e,keepDims:t};return N.runKernel(vi,o,s)}var Ec=_({any_:Cq});function vq(r,e=0){let n={x:C(r,"x","argMax")},o={axis:e};return N.runKernel(oo,n,o)}var Qi=_({argMax_:vq});function wq(r,e=0){let n={x:C(r,"x","argMin")},o={axis:e};return N.runKernel(Va,n,o)}var uI=_({argMin_:wq});function Sq(r){let t={x:C(r,"x","asin")};return N.runKernel(wi,t)}var lI=_({asin_:Sq});function _q(r){let t={x:C(r,"x","asinh")};return N.runKernel(Si,t)}var pI=_({asinh_:_q});function Aq(r){let t={x:C(r,"x","atan")};return N.runKernel(_i,t)}var cI=_({atan_:Aq});function Nq(r,e){let t=C(r,"a","atan2"),n=C(e,"b","atan2");[t,n]=Ze(t,n);let o={a:t,b:n};return N.runKernel(Ni,o)}var mI=_({atan2_:Nq});function Dq(r){let t={x:C(r,"x","atanh")};return N.runKernel(Ai,t)}var fI=_({atanh_:Dq});function Pq(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],u=T0(o);return Fl(r,i,t,s,n,null,null,u)}function dI(r,e,t,n,o,s,a="channelsLast"){let[i,u]=hb(e),l;if(a==="channelsLast")l=[i,u,r[3],r[3]];else if(a==="channelsFirst")l=[i,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Fl(r,l,t,n,o,s,!1,a)}function Fq(r,e,t,n,o,s,a="NDHWC"){let[i,u,l]=gI(e),p,c;if(a==="NDHWC")c="channelsLast",p=[i,u,l,r[4],r[4]];else if(a==="NCDHW")c="channelsFirst",p=[i,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return x0(r,p,t,n,o,!1,c,s)}function Fl(r,e,t,n,o,s,a=!1,i="channelsLast"){let[u,l,p,c]=[-1,-1,-1,-1];if(i==="channelsLast")[u,l,p,c]=r;else if(i==="channelsFirst")[u,c,l,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[m,f,,d]=e,[h,g]=hb(t),[y,x]=hb(n),T=Rc(m,y),k=Rc(f,x),{padInfo:v,outHeight:P,outWidth:A}=Rq(o,l,p,h,g,T,k,s,i),F=a?d*c:d,E;return i==="channelsFirst"?E=[u,F,P,A]:i==="channelsLast"&&(E=[u,P,A,F]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:p,inChannels:c,outHeight:P,outWidth:A,outChannels:F,padInfo:v,strideHeight:h,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:T,effectiveFilterWidth:k,dilationHeight:y,dilationWidth:x,inShape:r,outShape:E,filterShape:e}}function x0(r,e,t,n,o,s=!1,a="channelsLast",i){let[u,l,p,c,m]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,l,p,c,m]=r;else if(a==="channelsFirst")[u,m,l,p,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[f,d,h,,g]=e,[y,x,T]=gI(t),[k,v,P]=gI(n),A=Rc(f,k),F=Rc(d,v),E=Rc(h,P),{padInfo:L,outDepth:U,outHeight:K,outWidth:B}=Lq(o,l,p,c,y,x,T,A,F,E,i),V=s?g*m:g,j;return a==="channelsFirst"?j=[u,V,U,K,B]:a==="channelsLast"&&(j=[u,U,K,B,V]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:p,inWidth:c,inChannels:m,outDepth:U,outHeight:K,outWidth:B,outChannels:V,padInfo:L,strideDepth:y,strideHeight:x,strideWidth:T,filterDepth:f,filterHeight:d,filterWidth:h,effectiveFilterDepth:A,effectiveFilterHeight:F,effectiveFilterWidth:E,dilationDepth:k,dilationHeight:v,dilationWidth:P,inShape:r,outShape:j,filterShape:e}}function Mq(r,e,t,n,o){n==null&&(n=hI(r,e,t));let s=r[0],a=r[1],i=Ml((s-e+2*n)/t+1,o),u=Ml((a-e+2*n)/t+1,o);return[i,u]}function Eq(r,e,t,n,o,s){o==null&&(o=hI(r,e,n));let a=r[0],i=r[1],u=r[2],l=Ml((a-e+2*o)/n+1,s),p=Ml((i-e+2*o)/n+1,s),c=Ml((u-e+2*o)/n+1,s);return[l,p,c,t]}function hI(r,e,t,n=1){let o=Rc(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function hb(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function gI(r){return typeof r=="number"?[r,r,r]:r}function Rc(r,e){return e<=1?r:r+(r-1)*(e-1)}function Rq(r,e,t,n,o,s,a,i,u){let l,p,c;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=Mq([e,t],s,n,r,i);p=f[0],c=f[1]}else if(r==="same"){p=Math.ceil(e/n),c=Math.ceil(t/o);let m=Math.max(0,(p-1)*n+s-e),f=Math.max(0,(c-1)*o+a-t),d=Math.floor(m/2),h=m-d,g=Math.floor(f/2),y=f-g;l={top:d,bottom:h,left:g,right:y,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-s+1)/n),c=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let m=u==="channelsLast"?r[1][0]:r[2][0],f=u==="channelsLast"?r[1][1]:r[2][1],d=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:m,bottom:f,left:d,right:h,type:m===0&&f===0&&d===0&&h===0?"VALID":"EXPLICIT"},p=Ml((e-s+m+f)/n+1,i),c=Ml((t-a+d+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:p,outWidth:c}}function Lq(r,e,t,n,o,s,a,i,u,l,p){let c,m,f,d;if(typeof r=="number"){c={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=Eq([e,t,n,1],i,1,o,r,p);m=g[0],f=g[1],d=g[2]}else if(r==="same"){m=Math.ceil(e/o),f=Math.ceil(t/s),d=Math.ceil(n/a);let h=(m-1)*o+i-e,g=(f-1)*s+u-t,y=(d-1)*a+l-n,x=Math.floor(h/2),T=h-x,k=Math.floor(g/2),v=g-k,P=Math.floor(y/2),A=y-P;c={top:k,bottom:v,left:P,right:A,front:x,back:T,type:"SAME"}}else if(r==="valid")c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-i+1)/o),f=Math.ceil((t-u+1)/s),d=Math.ceil((n-l+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:c,outDepth:m,outHeight:f,outWidth:d}}function Ml(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ho(r){let[e,t,n]=hb(r);return e===1&&t===1&&n===1}function Rr(r,e){return Ho(r)||Ho(e)}function T0(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function $q(r,e){let n={x:C(r,"x","reshape","string_or_numeric")},o={shape:e};return N.runKernel(ds,n,o)}var $=_({reshape_:$q});function Bq(r,e,t,n,o){let s=C(r,"x","avgPool","float32"),a=1;D(Rr(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,u=!1;s.rank===3&&(u=!0,i=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),o!=null&&D(mt(n),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},c=N.runKernel(so,l,p);return c=Q(c,s.dtype),u?$(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var El=_({avgPool_:Bq});function Oq(r,e,t,n,o,s="NDHWC"){let a=C(r,"x","avgPool3d","float32"),i=a,u=!1;a.rank===4&&(u=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),o!=null&&D(mt(n),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},c=N.runKernel(Au,l,p);return c=Q(c,i.dtype),u?$(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var xf=_({avgPool3d_:Oq});function zq(r,e=0){D(r.length>=1,()=>"Pass at least one tensor to concat");let t=Vi(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Nn(t[0]);let n=t,o={axis:e};return N.runKernel(us,n,o)}var lt=_({concat_:zq});function Gq(r){let t={x:C(r,"x","sigmoid","float32")};return N.runKernel(Bo,t)}var ln=_({sigmoid_:Gq});function Wq(r,e,t){let n=C(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return N.runKernel(gs,o,s)}var Ue=_({slice_:Wq});function Uq(r){let t={x:C(r,"x","tanh","float32")};return N.runKernel(Ko,t)}var Zi=_({tanh_:Uq});function Kq(r,e,t,n,o,s){let a=C(r,"forgetBias","basicLSTMCell"),i=C(e,"lstmKernel","basicLSTMCell"),u=C(t,"lstmBias","basicLSTMCell"),l=C(n,"data","basicLSTMCell"),p=C(o,"c","basicLSTMCell"),c=C(s,"h","basicLSTMCell"),m=lt([l,c],1),f=Ve(m,i),d=X(f,u),h=d.shape[0],g=d.shape[1]/4,y=[h,g],x=Ue(d,[0,0],y),T=Ue(d,[0,g],y),k=Ue(d,[0,g*2],y),v=Ue(d,[0,g*3],y),P=X(R(ln(x),Zi(T)),R(p,ln(X(a,k)))),A=R(Zi(P),ln(v));return[P,A]}var Vq=_({basicLSTMCell_:Kq});function jq(r,e,t){let n=C(r,"x","batchToSpaceND"),o=e.reduce((i,u)=>i*u);D(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),D(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),D(n.shape[0]%o==0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return N.runKernel(is,s,a)}var Rl=_({batchToSpaceND_:jq});function k0(r){let e;return r.rank===0||r.rank===1?e=$(r,[1,1,1,r.size]):r.rank===2?e=$(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function Hq(r,e,t,n,o,s){s==null&&(s=.001);let a=C(r,"x","batchNorm"),i=C(e,"mean","batchNorm"),u=C(t,"variance","batchNorm"),l;o!=null&&(l=C(o,"scale","batchNorm"));let p;n!=null&&(p=C(n,"offset","batchNorm")),D(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(p==null||i.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:k0(a),scale:l,offset:p,mean:i,variance:u},f={varianceEpsilon:s},d=N.runKernel(xo,m,f);return $(d,a.shape)}var Za=_({batchNorm_:Hq});function qq(r,e,t,n,o,s){let a=C(r,"x","batchNorm"),i=C(e,"mean","batchNorm"),u=C(t,"variance","batchNorm"),l;o!=null&&(l=C(o,"scale","batchNorm"));let p;return n!=null&&(p=C(n,"offset","batchNorm")),D(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),D(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&D(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),Za(a,i,u,p,l,s)}var bI=_({batchNorm2d_:qq});function Xq(r,e,t,n,o,s){let a=C(r,"x","batchNorm"),i=C(e,"mean","batchNorm"),u=C(t,"variance","batchNorm"),l;o!=null&&(l=C(o,"scale","batchNorm"));let p;return n!=null&&(p=C(n,"offset","batchNorm")),D(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),D(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&D(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),Za(a,i,u,p,l,s)}var yI=_({batchNorm3d_:Xq});function Yq(r,e,t,n,o,s){let a=C(r,"x","batchNorm"),i=C(e,"mean","batchNorm"),u=C(t,"variance","batchNorm"),l;o!=null&&(l=C(o,"scale","batchNorm"));let p;return n!=null&&(p=C(n,"offset","batchNorm")),D(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),D(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&D(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),Za(a,i,u,p,l,s)}var xI=_({batchNorm4d_:Yq});function Qq(r,e,t){let n=C(r,"x","bincount"),o=C(e,"weights","bincount");D(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return N.runKernel(Qp,s,a)}var Tf=_({bincount_:Qq});function Zq(r,e){let t=C(r,"s0","broadcastArgs","int32"),n=C(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return N.runKernel(Zp,o)}var TI=_({broadcastArgs_:Zq});function Jq(r,e){let t=C(r,"broadcastTo","x"),n=t.shape;if(e.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=$(t,l)}let o=t.shape,s=Array.from(e);for(let l=e.length-1;l>=0;l--)if(o[l]===e[l])s[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return Nn(t);let i={x:t},u={reps:s};return N.runKernel(An,i,u)}var Ll=_({broadcastTo_:Jq});function e6(r){let t={x:C(r,"x","ceil","float32")};return N.runKernel(io,t)}var kI=_({ceil_:e6});function t6(r,e,t){let n=C(r,"x","clipByValue");D(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return N.runKernel(Un,o,s)}var Lr=_({clipByValue_:t6});function r6(r){return lt(r,0)}var II=_({concat1d_:r6});function n6(r,e){return lt(r,e)}var CI=_({concat2d_:n6});function o6(r,e){return lt(r,e)}var vI=_({concat3d_:o6});function s6(r,e){return lt(r,e)}var wI=_({concat4d_:s6});function a6(r,e,t,n,o="NHWC",s=[1,1],a){let i=C(r,"x","conv2d","float32"),u=C(e,"filter","conv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),a!=null&&D(mt(n),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let c=o==="NHWC"?l.shape[3]:l.shape[1];D(c===u.shape[2],()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${u.shape[2]}.`),D(Rr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let m={x:l,filter:u},f={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},d=N.runKernel(uo,m,f);return p?$(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var qn=_({conv2d_:a6});function i6(r,e,t,n,o="NWC",s=1,a){let i=C(r,"x","conv1d"),u=C(e,"filter","conv1d"),l=i,p=!1;i.rank===2&&(p=!0,l=$(i,[1,i.shape[0],i.shape[1]])),D(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),D(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),a!=null&&D(mt(n),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),D(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),D(Rr(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),D(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let c=$(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=$(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=qn(m,c,[1,t],n,"NHWC",[1,s],a);return p?$(g,[g.shape[2],g.shape[3]]):$(g,[g.shape[0],g.shape[2],g.shape[3]])}var kf=_({conv1d_:i6});function u6(r,e,t,n,o,s="NHWC",a){D(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,u=e,l=!1;e.rank===3&&(l=!0,u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),D(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),D(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),D(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let p=s==="NHWC"?i[3]:i[1],c=s==="NHWC"?u.shape[3]:u.shape[1];D(p===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[2]}.`),D(c===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[3]}.`),a!=null&&D(mt(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let m={dy:u,filter:t},f={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},d=N.runKernel(lo,m,f);return l?$(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Lc=_({conv2DBackpropInput_:u6});function l6(r,e,t,n,o,s){let a=C(r,"x","conv2dTranspose"),i=C(e,"filter","conv2dTranspose");return Lc(t,a,i,n,o,"NHWC",s)}var If=_({conv2dTranspose_:l6});function p6(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=C(r,"x","conv3d"),i=C(e,"filter","conv3d"),u=a,l=!1;a.rank===4&&(l=!0,u=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),D(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),D(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),D(Rr(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),D(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let p={x:u,filter:i},c={strides:t,pad:n,dataFormat:o,dilations:s},m=N.runKernel(Pu,p,c);return l?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Cf=_({conv3d_:p6});function c6(r,e,t,n,o){D(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=$(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=a.shape[4];D(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),D(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),D(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),D(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),D(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);let p={dy:a,filter:t},c={pad:o,strides:n,inputShape:s},m=N.runKernel(tc,p,c);return i?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var gb=_({conv3DBackpropInput_:c6});function m6(r,e,t,n,o){let s=C(r,"x","conv3dTranspose"),a=C(e,"filter","conv3dTranspose");return gb(t,s,a,n,o)}var SI=_({conv3dTranspose_:m6});function f6(r){let t={x:C(r,"x","cos","float32")};return N.runKernel(po,t)}var $l=_({cos_:f6});function d6(r){let t={x:C(r,"x","cosh","float32")};return N.runKernel(co,t)}var vf=_({cosh_:d6});function h6(r,e=0,t=!1,n=!1){let s={x:C(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return N.runKernel(Xs,s,a)}var wf=_({cumsum_:h6});function g6(r,e,t,n=!1){let o=C(r,"x","denseBincount"),s=C(e,"weights","denseBincount");D(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),D(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return N.runKernel(rc,a,i)}var _I=_({denseBincount_:g6});function b6(r,e,t="NHWC"){let n=C(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];D(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),D(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),D(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),D(a%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},u={blockSize:e,dataFormat:t};return N.runKernel(Qs,i,u)}var AI=_({depthToSpace_:b6});function y6(r,e,t,n,o="NHWC",s=[1,1],a){let i=C(r,"x","depthwiseConv2d","float32"),u=C(e,"filter","depthwiseConv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),D(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),a!=null&&D(mt(n),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let c={x:l,filter:u},m={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(mo,c,m);return p?$(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ji=_({depthwiseConv2d_:y6});function x6(r){let t={x:C(r,"x","diag")};return N.runKernel(sc,t)}var T6=_({diag_:x6});function k6(r,e,t,n,o=[1,1],s="NHWC"){let a=C(r,"x","dilation2d"),i=C(e,"filter","dilation2d");D(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),D(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),D(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=a,l=!1;a.rank===3&&(u=$(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);let p={x:u,filter:i},c={strides:t,pad:n,dilations:o},m=N.runKernel(Fu,p,c);return l?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var NI=_({dilation2d_:k6});function I6(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function Pt(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function je(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}function C6(r,e){let t=C(r,"a","equal","string_or_numeric"),n=C(e,"b","equal","string_or_numeric");[t,n]=Ze(t,n),je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(Zs,o)}var Kr=_({equal_:C6});function v6(r,e,t){let n=C(e,"a","where"),o=C(t,"b","where"),s=C(r,"condition","where","bool"),a=je(je(s.shape,n.shape),o.shape),i=Ll(s,a),u=Ll(n,a),l=Ll(o,a),p={condition:i,t:u,e:l};return N.runKernel(hs,p)}var Gt=_({where_:v6});function w6(r){let t={x:C(r,"x","zerosLike")};return N.runKernel(Ts,t)}var De=_({zerosLike_:w6});function S6(r,e){let t=C(r,"a","div"),n=C(e,"b","div");[t,n]=Ze(t,n);let o=pe(t,n),s=De(o),a=Kr(n,s);return Gt(a,s,o)}var DI=_({divNoNan_:S6});function _6(r,e){let t=C(r,"t1","dot"),n=C(e,"t2","dot");D((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(D(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=$(t,[1,-1]),i=$(n,[-1,1]),u=Ve(a,i);return $(u,[])}else if(t.rank===1&&n.rank===2){let a=$(t,[1,-1]),i=$(n,[n.shape[0],n.shape[1]]),u=Ve(a,i);return $(u,[u.size])}else if(t.rank===2&&n.rank===1){let a=$(n,[-1,1]),i=Ve(t,a);return $(i,[i.size])}else{let a=$(n,[n.shape[0],n.shape[1]]);return Ve(t,a)}}var A6=_({dot_:_6});function N6(r,...e){let t=e.map((o,s)=>C(o,`tensors${s}`,"einsum")),n={equation:r};return N.runKernel(Mu,t,n)}var PI=_({einsum_:N6});function D6(r){let t={x:C(r,"x","elu","float32")};return N.runKernel(ho,t)}var eu=_({elu_:D6});function P6(r){let e=C(r,"x","erf");D(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Q(e,"float32"));let t={x:e};return N.runKernel(Di,t)}var FI=_({erf_:P6});function F6(r){let t={x:C(r,"x","exp")};return N.runKernel(go,t)}var cr=_({exp_:F6});function M6(r,e=0){let t=C(r,"x","expandDims","string_or_numeric");D(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return N.runKernel(ls,n,o)}var _r=_({expandDims_:M6});function E6(r){let t={x:C(r,"x","expm1")};return N.runKernel(Js,t)}var MI=_({expm1_:E6});function R6(r,e){let t=C(r,"x","tile","string_or_numeric");D(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return N.runKernel(An,n,o)}var Vr=_({tile_:R6});function L6(r,e,t,n="float32"){e==null&&(e=r);let o=Ce([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=$(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return Vr(_r(a,0),[t[0],1,1]);if(t.length===2)return Vr(_r(_r(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Vr(_r(_r(_r(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var $c=_({eye_:L6});function Ca(r,e,t){let n={shape:r,value:e,dtype:t};return N.runKernel(ja,{},n)}function $6(r){let t={x:C(r,"x","floor","float32")};return N.runKernel(bo,t)}var tu=_({floor_:$6});function B6(r,e,t=0,n=0){let o=C(r,"x","gather"),s=C(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return N.runKernel(ps,a,i)}var Ja=_({gather_:B6});function O6(r,e){let t=C(r,"a","greater","string_or_numeric"),n=C(e,"b","greater","string_or_numeric");[t,n]=Ze(t,n),je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(ra,o)}var nr=_({greater_:O6});function z6(r,e){let t=C(r,"a","greaterEqual","string_or_numeric"),n=C(e,"b","greaterEqual","string_or_numeric");[t,n]=Ze(t,n),je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(To,o)}var qo=_({greaterEqual_:z6});function G6(r){let t={input:C(r,"input","imag")};return N.runKernel(Eu,t)}var Bl=_({imag_:G6});function W6(r){let t={x:C(r,"x","isFinite")};return N.runKernel(Pi,t)}var U6=_({isFinite_:W6});function K6(r){let t={x:C(r,"x","isInf")};return N.runKernel(Fi,t)}var V6=_({isInf_:K6});function j6(r){let t={x:C(r,"x","isNaN")};return N.runKernel(Mi,t)}var EI=_({isNaN_:j6});function H6(r,e=.2){let n={x:C(r,"x","leakyRelu")},o={alpha:e};return N.runKernel(na,n,o)}var Ol=_({leakyRelu_:H6});function q6(r,e){let t=C(r,"a","less","string_or_numeric"),n=C(e,"b","less","string_or_numeric");[t,n]=Ze(t,n),je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(oa,o)}var Sf=_({less_:q6});function X6(r,e){let t=C(r,"a","lessEqual","string_or_numeric"),n=C(e,"b","lessEqual","string_or_numeric");[t,n]=Ze(t,n),je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(sa,o)}var Xo=_({lessEqual_:X6});function RI(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return N.runKernel(lc,{},n)}function Y6(r,e=5,t=1,n=1,o=.5){let s=C(r,"x","localResponseNormalization");D(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),D(mt(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=$(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:a},l={depthRadius:e,bias:t,alpha:n,beta:o},p=N.runKernel(Ru,u,l);return i?$(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var LI=_({localResponseNormalization_:Y6});function Q6(r){let t={x:C(r,"x","log","float32")};return N.runKernel(ko,t)}var $r=_({log_:Q6});function Z6(r){let t={x:C(r,"x","log1p")};return N.runKernel(Ei,t)}var zl=_({log1p_:Z6});function J6(r){return D(Ua(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=C(e,"x","tf.grad","string_or_numeric"),o=t!=null?C(t,"dy","tf.grad"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(n),[n],o);return o!=null&&Ut(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),yb(a),a[0]})}}function e5(r){return D(Ua(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{D(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Vi(e,"args","tf.grads","string_or_numeric"),o=t!=null?C(t,"dy","tf.grads"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(...n),n,o);return o!=null&&Ut(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),yb(a),a})}}function t5(r){return D(Ua(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{D(e instanceof Ye,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=N.gradients(()=>r(e),[e],t);return yb(n),{grad:n[0],value:o}}}function r5(r){return D(Ua(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{D(Array.isArray(e)&&e.every(o=>o instanceof Ye),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=N.gradients(()=>r(...e),e,t);return t!=null&&Ut(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),yb(n.grads),n}}function bb(r,e){D(Ua(r),()=>"The f passed in variableGrads(f) must be a function"),D(e==null||Array.isArray(e)&&e.every(l=>l instanceof Uu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let l in N.registeredVariables)e.push(N.registeredVariables[l])}let n=t?e.filter(l=>!l.trainable):null,o=e.length;e=e.filter(l=>l.trainable),D(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=N.gradients(r,e,null,s);D(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let u={};return e.forEach((l,p)=>{i[p]!=null&&(u[l.name]=i[p])}),n!=null&&n.forEach(l=>u[l.name]=null),{value:a,grads:u}}function pn(r){return N.customGrad(r)}function yb(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function n5(r){let t={x:C(r,"x","neg")};return N.runKernel(cs,t)}var et=_({neg_:n5});function o5(r){let t={x:C(r,"x","softplus")};return N.runKernel(Gi,t)}var ei=_({softplus_:o5});function s5(r){let e=C(r,"x","logSigmoid");return pn(n=>({value:et(ei(et(n))),gradFunc:a=>R(a,ln(et(n)))}))(e)}var a5=_({logSigmoid_:s5});function i5(r,e=null,t=!1){let o={x:C(r,"x","max")},s={reductionIndices:e,keepDims:t};return N.runKernel(Io,o,s)}var Qr=_({max_:i5});function u5(r,e){let t=C(r,"a","sub"),n=C(e,"b","sub");[t,n]=Ze(t,n);let o={a:t,b:n};return N.runKernel(Uo,o)}var ue=_({sub_:u5});function l5(r,e=null,t=!1){let n=C(r,"x","sum");n.dtype==="bool"&&(n=Q(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return N.runKernel(zo,o,s)}var me=_({sum_:l5});function p5(r,e=-1){let t=C(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return pn((o,s)=>{let a=!0,i=Qr(o,e,!0),u=ue(o,i),l=ue(Q(u,"float32"),$r(me(cr(u),e,a)));return s([l]),{value:l,gradFunc:(c,m)=>{let[f]=m,d=!0,h=cr(f);return ue(c,R(me(c,e,d),h))}}})(t)}var _f=_({logSoftmax_:p5});function $I(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function I0(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function BI(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Ns(r,e){let t=e.map(n=>1);return I0(r,t,e)}function c5(r,e,t){D($I(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function OI(r,e){if($I(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Af(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function m5(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function f5(r,e=null,t=!1){let n=C(r,"x","logSumExp"),o=yr(e,n.shape),s=Qr(n,o,!0),a=ue(n,s),i=cr(a),u=me(i,o),l=$r(u),p=X($(s,l.shape),l);if(t){let c=Ns(p.shape,o);return $(p,c)}return p}var zI=_({logSumExp_:f5});function d5(r,e){let t=C(r,"a","logicalAnd","bool"),n=C(e,"b","logicalAnd","bool");je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(aa,o)}var jr=_({logicalAnd_:d5});function h5(r){let t={x:C(r,"x","logicalNot","bool")};return N.runKernel(Ri,t)}var Gl=_({logicalNot_:h5});function g5(r,e){let t=C(r,"a","logicalOr","bool"),n=C(e,"b","logicalOr","bool");je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(Cl,o)}var Nf=_({logicalOr_:g5});function b5(r,e){let t=C(r,"a","logicalXor","bool"),n=C(e,"b","logicalXor","bool");return je(t.shape,n.shape),jr(Nf(r,e),Gl(jr(r,e)))}var y5=_({logicalXor_:b5});function x5(r,e,t,n,o){let s=C(r,"x","maxPool"),a=1,i=s,u=!1;s.rank===3&&(u=!0,i=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),D(Rr(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),o!=null&&D(mt(n),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},c=N.runKernel(vo,l,p);return u?$(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Wl=_({maxPool_:x5});function T5(r,e=[1,1,1],t,n,o,s="NDHWC"){let a=C(r,"x","maxPool3d"),i=a,u=!1;a.rank===4&&(u=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),o!=null&&D(mt(n),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},c=N.runKernel(Lu,l,p);return u?$(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Df=_({maxPool3d_:T5});function k5(r,e,t,n,o=!1){let a={x:C(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},u=N.runKernel(fc,a,i);return{result:u[0],indexes:u[1]}}var GI=_({maxPoolWithArgmax_:k5});function I5(r,e){let t=C(r,"a","maximum"),n=C(e,"b","maximum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=Q(t,"int32"),n=Q(n,"int32")),je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(Co,o)}var Xn=_({maximum_:I5});function C5(r,e=null,t=!1){let o={x:C(r,"x","mean")},s={axis:e,keepDims:t};return N.runKernel(wo,o,s)}var Lt=_({mean_:C5});function Tt(r,e="float32"){if(e==="complex64"){let n=Tt(r,"float32"),o=Tt(r,"float32");return Hn(n,o)}let t=qp(ct(r),e);return N.makeTensor(t,r,e)}function mr(r,e="float32"){if(e==="complex64"){let n=mr(r,"float32"),o=Tt(r,"float32");return Hn(n,o)}let t=ef(ct(r),e);return N.makeTensor(t,r,e)}function v5(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=C(r,"x","meshgrid",r instanceof Ye?r.dtype:"float32");if(e===void 0)return[n];let o=C(e,"y","meshgrid",e instanceof Ye?e.dtype:"float32"),s=ct(n.shape),a=ct(o.shape);return t==="xy"?(n=$(n,[1,-1]),o=$(o,[-1,1]),[Ve(mr([a,1],n.dtype),n),Ve(o,mr([1,s],o.dtype))]):(n=$(n,[-1,1]),o=$(o,[1,-1]),[Ve(n,mr([1,a],n.dtype)),Ve(mr([s,1],o.dtype),o)])}function w5(r,e=null,t=!1){let o={x:C(r,"x","min")},s={axis:e,keepDims:t};return N.runKernel(So,o,s)}var Bc=_({min_:w5});function S5(r,e){let t=C(r,"a","minimum"),n=C(e,"b","minimum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=Q(t,"int32"),n=Q(n,"int32")),je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(_o,o)}var ru=_({minimum_:S5});function _5(r,e,t){D(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=C(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)D(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return N.runKernel(Ao,a,s)}var WI=_({mirrorPad_:_5});function A5(r,e){let t=C(r,"a","mod"),n=C(e,"b","mod");[t,n]=Ze(t,n);let o={a:t,b:n};return N.runKernel(Li,o)}var UI=_({mod_:A5});function N5(r){let e=C(r,"x","square"),t={};return N.runKernel("Square",{x:e},t)}var Xe=_({square_:N5});function D5(r,e=null,t=!1){r=C(r,"x","moments");let n=yr(e,r.shape),o=Lt(r,n,t),s=o.shape;t||(s=Ns(o.shape,n));let a=Xe(ue(Q(r,"float32"),$(o,s))),i=Lt(a,n,t);return{mean:o,variance:i}}var Oc=_({moments_:D5});function P5(r,e,t,n){let o=C(e,"data","multiRNNCell"),s=Vi(t,"c","multiRNNCell"),a=Vi(n,"h","multiRNNCell"),i=o,u=[];for(let c=0;c<r.length;c++){let m=r[c](i,s[c],a[c]);u.push(m[0]),u.push(m[1]),i=m[1]}let l=[],p=[];for(let c=0;c<u.length;c+=2)l.push(u[c]),p.push(u[c+1]);return[l,p]}var F5=_({multiRNNCell_:P5});function M5(r,e,t,n=!1){let o=C(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let u={logits:a===1?$(o,[1,-1]):o},l={numSamples:e,seed:t,normalized:n},p=N.runKernel(dc,u,l);return a===1?$(p,[p.size]):p}var KI=_({multinomial_:M5});function E5(r,e){let t=C(r,"a","notEqual","string_or_numeric"),n=C(e,"b","notEqual","string_or_numeric");[t,n]=Ze(t,n),je(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(ia,o)}var ti=_({notEqual_:E5});function R5(r){let t={x:C(r,"x","onesLike")};return N.runKernel(ms,t)}var Ar=_({onesLike_:R5});function L5(r,e){let t=C(r,"v1","outerProduct"),n=C(e,"v2","outerProduct");D(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=$(t,[-1,1]),s=$(n,[1,-1]);return Ve(o,s)}var $5=_({outerProduct_:L5});function B5(r,e,t=0){let n=C(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return N.runKernel(Do,s,o)}var Pn=_({pad_:B5});function O5(r,e,t=0){return D(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Pn(r,[e],t)}var z5=_({pad1d_:O5});function G5(r,e,t=0){return D(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Pn(r,e,t)}var W5=_({pad2d_:G5});function U5(r,e,t=0){return D(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Pn(r,e,t)}var K5=_({pad3d_:U5});function V5(r,e,t=0){return D(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Pn(r,e,t)}var j5=_({pad4d_:V5});function H5(r,e,t){let n=C(r,"x","spaceToBatchND");D(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),D(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),D(n.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+t[u-1][0]+t[u-1][1])%e[u-1]==0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return N.runKernel(bs,o,s)}var Ul=_({spaceToBatchND_:H5});function q5(r,e,t,n,o,s){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=C(r,"x","maxPool"),i=a,u=!1;a.rank===3&&(u=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(Rr(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let l=dI(i.shape,e,s,o,n),p=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=Y5([l.filterHeight,l.filterWidth],p):c=[[0,0],[0,0]];let m=p[0]===1&&p[1]===1,[f,d]=X5([l.inHeight,l.inWidth],p,c),h=m?n:"valid",g=m?i:Ul(i,p,f),x=(t==="avg"?()=>El(g,e,s,h):()=>Wl(g,e,s,h))(),T=m?x:Rl(x,p,d);return u?$(T,[T.shape[1],T.shape[2],T.shape[3]]):T}function X5(r,e,t){let n=t.map(p=>p[0]),o=t.map(p=>p[1]),s=r.concat(n,o),a=e.map((p,c)=>(p-s[c]%p)%p),i=o.map((p,c)=>p+a[c]),u=e.map((p,c)=>[n[c],i[c]]),l=e.map((p,c)=>[0,a[c]]);return[u,l]}function Y5(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var Q5=_({pool_:q5});function Z5(r,e){let t=C(r,"base","pow"),n=C(e,"exp","pow");[t,n]=Ze(t,n);let o={a:t,b:n};return N.runKernel(Po,o)}var Fn=_({pow_:Z5});function J5(r,e){let t=C(r,"x","prelu"),n=C(e,"alpha","prelu"),o={x:t,alpha:n};return N.runKernel(Fo,o)}var Kl=_({prelu_:J5});function e8(r,e=null,t=!1){let n=C(r,"x","prod");n.dtype==="bool"&&(n=Q(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return N.runKernel(ca,o,s)}var Pf=_({prod_:e8});function t8(r,e,t){let n=ct(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return N.makeTensor(o,r,t)}var r8=_({rand_:t8});var Tb=Tl(Ff());var zc=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=Tb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},QI=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=Tb.alea(s.toString()),this.randn=new zc(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},ZI=class{constructor(e=0,t=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Tb.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function l8(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new QI(e,t,n,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var p8=_({randomGamma_:l8});function c8(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new zc(e,t,n,!1,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var kb=_({randomNormal_:c8});function m8(r,e=0,t=1,n="float32",o){let s=Ce(r,n),a=new ZI(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var va=_({randomUniform_:m8});function nu(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return N.runKernel(Ha,{},o)}function f8(r){let t={input:C(r,"input","real")};return N.runKernel($u,t)}var ju=_({real_:f8});function d8(r){let t={x:C(r,"x","reciprocal")};return N.runKernel(Bi,t)}var JI=_({reciprocal_:d8});function h8(r){let t={x:C(r,"x","relu")};return N.runKernel(Mo,t)}var Hr=_({relu_:h8});function g8(r){let t={x:C(r,"x","relu6")};return N.runKernel(Ro,t)}var Mf=_({relu6_:g8});function b8(r,e){let n={x:C(r,"x","reverse")},o={dims:e};return N.runKernel(ma,n,o)}var xr=_({reverse_:b8});function y8(r){let e=C(r,"x","reverse");return D(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),xr(e,0)}var x8=_({reverse1d_:y8});function T8(r,e){let t=C(r,"x","reverse");return D(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),xr(t,e)}var k8=_({reverse2d_:T8});function I8(r,e){let t=C(r,"x","reverse");return D(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),xr(t,e)}var C8=_({reverse3d_:I8});function v8(r,e){let t=C(r,"x","reverse");return D(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),xr(t,e)}var w8=_({reverse4d_:v8});function S8(r){let t={x:C(r,"x","round")};return N.runKernel(fa,t)}var Ef=_({round_:S8});function _8(r){let t={x:C(r,"x","rsqrt","float32")};return N.runKernel(Lo,t)}var Rf=_({rsqrt_:_8});function ce(r,e){if((kr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&kr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return an(r,[],[],e)}function A8(r){let t={x:C(r,"x","selu")};return N.runKernel(Oi,t)}var Lf=_({selu_:A8});function N8(r,e,t,n,o,s=[1,1],a="NHWC"){let i=C(r,"x","separableConv2d"),u=C(e,"depthwiseFilter","separableConv2d"),l=C(t,"pointwiseFilter","separableConv2d"),p=i,c=!1;if(i.rank===3&&(c=!0,p=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),D(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),D(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let m=u.shape[2],f=u.shape[3];D(l.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${l.shape[2]}.`);let d=Ji(p,u,n,o,a,s),g=qn(d,l,1,"valid",a);return c?$(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var eC=_({separableConv2d_:N8});async function D8(r,e){let t=C(r,"x","setdiff1d"),n=C(e,"y","setdiff1d");D(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),D(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),D(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let p=0;p<o.length;p++)a.has(o[p])||i++;let u=new xt([i],t.dtype),l=new xt([i],"int32");for(let p=0,c=0;p<o.length;p++)a.has(o[p])||(u.values[c]=o[p],l.values[c]=p,c++);return[u.toTensor(),l.toTensor()]}var tC=D8;function P8(r){let t={x:C(r,"x","sign")};return N.runKernel(zi,t)}var rC=_({sign_:P8});function F8(r){let t={x:C(r,"x","sin","float32")};return N.runKernel($o,t)}var $f=_({sin_:F8});function M8(r){let t={x:C(r,"x","sinh")};return N.runKernel(ha,t)}var Bf=_({sinh_:M8});function E8(r,e,t){let n=C(r,"x","slice1d");return D(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Ue(n,[e],[t])}var Of=_({slice1d_:E8});function R8(r,e,t){let n=C(r,"x","slice2d");return D(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Ue(n,e,t)}var Ib=_({slice2d_:R8});function L8(r,e,t){let n=C(r,"x","slice3d");return D(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Ue(n,e,t)}var zf=_({slice3d_:L8});function $8(r,e,t){let n=C(r,"x","slice4d");return D(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Ue(n,e,t)}var Gc=_({slice4d_:$8});function B8(r,e=-1){let t=C(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return N.runKernel(Go,n,o)}var jl=_({softmax_:B8});function O8(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return N.runKernel(ic,e)}var Hl=_({fft_:O8});function z8(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return N.runKernel(uc,e)}var Hu=_({ifft_:z8});function G8(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=$(r,[t,e]);n=Hu(o)}else{let o=[t,2*(e-1)],s=$(ju(r),[t,e]),a=$(Bl(r),[t,e]),i=xr(Ue(s,[0,1],[t,e-2]),1),u=R(xr(Ue(a,[0,1],[t,e-2]),1),ce(-1)),l=lt([s,i],1),p=lt([a,u],1),c=$(Hn(l,p),[o[0],o[1]]);n=Hu(c)}if(n=ju(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=$(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Gf=_({irfft_:G8});function W8(r,e,t=0){let o={x:C(r,"x","split")},s={numOrSizeSplits:e,axis:t};return N.runKernel(ys,o,s)}var Ir=_({split_:W8});function U8(r,e){D(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let d=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=Ue(r,d,h),t=e}else if(e!=null&&e>t){let d=r.shape.map(h=>h);d[r.shape.length-1]=e-t,o=lt([r,Tt(d)],r.shape.length-1),t=e}else o=r;let s=De(o),a=$(Hn(o,s),[n,t]),i=Hl(a),u=Math.floor(t/2)+1,l=ju(i),p=Bl(i),c=Ir(l,[u,t-u],l.shape.length-1),m=Ir(p,[u,t-u],p.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=u,$(Hn(c[0],m[0]),f)}var ql=_({rfft_:U8});function K8(r){let t={x:C(r,"x","sqrt","float32")};return N.runKernel(Oo,t)}var $t=_({sqrt_:K8});function V8(r,e){let t=C(r,"a","squaredDifference"),n=C(e,"b","squaredDifference");[t,n]=Ze(t,n),je(t.shape,n.shape);let o={a:t,b:n},s={};return N.runKernel(Wo,o,s)}var Wf=_({squaredDifference_:V8});function j8(r,e){let t=C(r,"x","squeeze");return $(t,fk(t.shape,e).newShape)}var cn=_({squeeze_:j8});function H8(r,e=0){let t=Vi(r,"tensors","stack","string_or_numeric");D(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&D(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return N.runKernel(fs,n,o)}var fr=_({stack_:H8});function q8(r,e=0){let n={x:C(r,"x","step")},o={alpha:e};return N.runKernel(ks,n,o)}var ou=_({step_:q8});function X8(r,e,t,n,o=0,s=0,a=0,i=0,u=0){let p={x:C(r,"x","stridedSlice","string_or_numeric")},c={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return N.runKernel(ga,p,c)}var nC=_({stridedSlice_:X8});function Y8(r){let t={x:C(r,"x","tan","float32")};return N.runKernel(ba,t)}var oC=_({tan_:Y8});function Wt(r,e){to(r);let t=Wr(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return an(r,null,t,e)}function ri(r,e,t){if(to(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Wr(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return an(r,e,n,t)}function Q8(r,e,t){if(to(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Wr(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return an(r,e,n,t)}function Z8(r,e,t){if(to(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Wr(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return an(r,e,n,t)}function J8(r,e,t){if(to(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Wr(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,an(r,e,n,t)}function eX(r,e=1,t=!0){let n=C(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,u]=N.runKernel(ya,s,a);return{values:i,indices:u}}var sC=_({topk_:eX});function tX(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new zc(e,t,n,!0,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Xl=_({truncatedNormal_:tX});function rX(r,e=0){let t=C(r,"x","unique","string_or_numeric");D(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=N.runKernel(Cc,n,o);return{values:s,indices:a}}var Cb=_({unique_:rX});function nX(r,e,t){let n=C(r,"x","unsortedSegmentSum"),o=C(e,"segmentIds","unsortedSegmentSum","int32");D(mt(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return N.runKernel(zu,s,a)}var aC=_({unsortedSegmentSum_:nX});function oX(r,e=0){let t=C(r,"x","unstack","string_or_numeric");D(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return N.runKernel(xs,n,o)}var Br=_({unstack_:oX});function iC(r,e=!0,t,n){return N.makeVariable(r,e,t,n)}function vb(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Ce(r,"int32"),o=Ce([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function sX(r){let e=C(r,"condition","whereAsync","bool"),t=await e.data(),n=vb(e.shape,t);return r!==e&&e.dispose(),n}var Uf=sX;async function aX(r,e,t){let n=C(r,"tensor","boolMask"),o=C(e,"mask","boolMask","bool"),s=t??0,a=o.rank,i=n.shape;D(a>0,()=>"mask cannot be scalar"),Ut(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+a;h++)u*=i[h];let l=i.slice(0,s).concat([u],i.slice(s+a)),p=$(n,l),c=$(o,[-1]),m=await Uf(c),f=cn(m,[1]),d=Ja(p,f,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),f.dispose(),p.dispose(),c.dispose(),m.dispose(),d}var pLe=aX;function iX(r,e="euclidean",t=null,n=!1){r=C(r,"x","norm");let o=O0(r,e,t),s=o.shape;if(n){let a=yr(t,r.shape);s=Ns(o.shape,a)}return $(o,s)}function O0(r,e,t=null){if(r.rank===0)return zt(r);if(r.rank!==1&&t===null)return O0($(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return me(zt(r),t);if(e===1/0)return Qr(zt(r),t);if(e===-1/0)return Bc(zt(r),t);if(e==="euclidean"||e===2)return $t(me(Fn(zt(r),ce(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Qr(me(zt(r),t[0]),t[1]-1);if(e===1/0)return Qr(me(zt(r),t[1]),t[0]);if(e===-1/0)return Bc(me(zt(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return $t(me(Xe(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var wb=_({norm_:iX});function uX(r,e,t,n,o=!0){let s=C(r,"v","movingAverage"),a=C(e,"x","movingAverage"),i=C(t,"decay","movingAverage");Ek(s,a),D(on(s.shape,a.shape),()=>"Shape mismatch in v and x");let u=ce(1),l=ue(u,i),p=R(ue(a,s),l);if(o){D(n!=null,()=>"When using zeroDebias: true, step is required.");let c=C(n,"step","movingAverage");p=pe(p,ue(u,Fn(i,c)))}return X(s,p)}var LLe=_({movingAverage_:uX});function lX(r,e,t){let n=C(r,"indices","scatterND","int32"),o=C(e,"updates","scatterND");cb(o,n,t);let s={indices:n,updates:o},a={shape:t};return N.runKernel(da,s,a)}var z0=_({scatterND_:lX});function G0(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function pX(r,e,t,n=0){let o=C(r,"sparseIndices","sparseToDense","int32"),s=C(e,"sparseValues","sparseToDense"),a=C(n,"defaultValue","sparseToDense",s.dtype);G0(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},u={outputShape:t};return N.runKernel(Bu,i,u)}var Sb=_({sparseToDense_:pX});function cX(r,e){let t=C(e,"indices","gatherND","int32"),o={params:C(r,"x","gatherND","string_or_numeric"),indices:t};return N.runKernel(ta,o)}var W0=_({gatherND_:cX});function U0(r,e){if(e==null)return r.shape.slice();if(on(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function mX(r,e,t,n){let o=C(r,"x","dropout");if(D(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),D(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Ye?o.clone():o;let s=U0(o,t),a=1-e,i=pe(tu(X(va(s,0,1,"float32",n),a)),a);return R(o,i)}var K0=_({dropout_:mX});function V0(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function _b(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return Wt(o,"float32")}async function fX(r,e,t=1){let n=C(r,"predictions","inTopK"),o=C(e,"targets","inTopK");D(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),D(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Ut(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];D(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[u,l]=[a.length/s,s],p=dk("bool",u);for(let c=0;c<u;c++){let m=c*l,f=a.subarray(m,m+l),d=[];for(let h=0;h<f.length;h++)d.push({value:f[h],index:h});d.sort((h,g)=>g.value-h.value),p[c]=0;for(let h=0;h<t;h++)if(d[h].index===i[c]){p[c]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Er(p,o.shape,"bool")}var w$e=fX;var Ds={};Qe(Ds,{conv2d:()=>j0,depthwiseConv2d:()=>H0,matMul:()=>q0});function dX(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]])),D(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),D(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),D(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let l=s==="NHWC"?i.shape[3]:i.shape[1],p=s==="NHWC"?u.shape[3]:u.shape[1];D(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),D(p===t[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${t[3]}).`),a!=null&&D(mt(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let c={x:i,dy:u},m={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return N.runKernel(Jp,c,m)}var Wc=_({conv2DBackpropFilter_:dX});function Yl(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return R(r,ou(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Ql(r,e){let t=e,n=Pt(r.shape,e.shape);return n.length>0&&(t=me(t,n)),$(t,r.shape)}function Zl(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Hr(r);if(e==="elu")return eu(r);if(e==="relu6")return Mf(r);if(e==="prelu")return Kl(r,t);if(e==="leakyrelu")return Ol(r,n);if(e==="sigmoid")return ln(r);throw new Error(`Unknown fused activation ${e}.`)}var Jl=(r,e)=>!(r>0)||e==="linear";function hX({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(u=u||"linear",Jl(N.state.gradientDepth,u)===!1){let v=qn(r,e,t,n,o,s,a);return i!=null&&(v=X(v,i)),Zl(v,u,l,p)}let c=C(r,"x","conv2d","float32"),m=C(e,"filter","conv2d","float32"),f=c,d=!1;c.rank===3&&(d=!0,f=$(c,[1,c.shape[0],c.shape[1],c.shape[2]])),D(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),D(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),a!=null&&D(mt(n),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),D(f.shape[3]===m.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${m.shape[2]}.`),D(Rr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),D(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let h=Fl(f.shape,m.shape,t,s,n,a),g;i!=null&&(g=C(i,"bias","fused conv2d"),[g]=Ze(g,c),je(h.outShape,g.shape));let y;l!=null&&(y=C(l,"prelu weights","fused conv2d"));let x=(v,P)=>{let[A,F,E,L]=P,U=Yl(v,E,u);D(Ho(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let K=Lc(F.shape,U,A,t,n),B=Wc(F,U,A.shape,t,n),V=[K,B];if(L!=null){let j=Ql(L,U);V.push(j)}return V},T={x:f,filter:m,bias:g,preluActivationWeights:y},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?pn((P,A,F)=>{let E=N.runKernel(Cs,T,k);return F([A,P,E]),d&&(E=$(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(f,m):pn((P,A,F,E)=>{let L=N.runKernel(Cs,T,k);return E([A,P,L,F]),d&&(L=$(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:x}})(f,m,g)}var j0=_({fusedConv2d_:hX});function gX(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={x:i,dy:u},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return N.runKernel(nc,l,p)}var Ab=_({depthwiseConv2dNativeBackpropFilter_:gX});function bX(r,e,t,n,o,s=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={dy:i,filter:t},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},c=N.runKernel(oc,l,p);return u?$(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Nb=_({depthwiseConv2dNativeBackpropInput_:bX});function yX({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(Jl(N.state.gradientDepth,u)===!1){let v=Ji(r,e,t,n,o,s,a);return i!=null&&(v=X(v,i)),Zl(v,u,l,p)}let c=C(r,"x","depthwiseConv2d","float32"),m=C(e,"filter","depthwiseConv2d","float32"),f=c,d=!1;c.rank===3&&(d=!0,f=$(c,[1,c.shape[0],c.shape[1],c.shape[2]])),D(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),D(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),D(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),D(Rr(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),a!=null&&D(mt(n),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${n}.`);let h=Fl(f.shape,m.shape,t,s,n,a,!0),g;i!=null&&(g=C(i,"bias","fused conv2d"),[g]=Ze(g,c),je(h.outShape,g.shape));let y;l!=null&&(y=C(l,"prelu weights","fused depthwiseConv2d"));let x=(v,P)=>{D(Ho(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[A,F,E,L]=P,U=Yl(v,E,u),K=Nb(F.shape,U,A,t,n,s,a),B=Ab(F,U,A.shape,t,n,s,a);if(L!=null){let V=Ql(g,U);return[K,B,V]}return[K,B]},T={x:f,filter:m,bias:g,preluActivationWeights:y},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?pn((P,A,F)=>{let E=N.runKernel(vs,T,k);return F([A,P,E]),d&&(E=$(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(f,m):pn((P,A,F,E)=>{let L=N.runKernel(vs,T,k);return E([A,P,L,F]),d&&(L=$(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:x}})(f,m,g)}var H0=_({fusedDepthwiseConv2d_:yX});function xX({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(Jl(N.state.gradientDepth,s)===!1){let L=Ve(r,e,t,n);return o!=null&&(L=X(L,o)),Zl(L,s,a,i)}let u=C(r,"a","fused matMul"),l=C(e,"b","fused matMul");[u,l]=Ze(u,l);let p=t?u.shape[u.rank-2]:u.shape[u.rank-1],c=n?l.shape[l.rank-1]:l.shape[l.rank-2],m=t?u.shape[u.rank-1]:u.shape[u.rank-2],f=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=ct(d),y=ct(h);D(u.rank>=2&&l.rank>=2&&u.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`),D(on(d,h),()=>`Error in fused matMul: outer dimensions (${d}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`),D(p===c,()=>`Error in fused matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${t} and transposeB=${n} must match.`);let x=u.shape.slice(0,-2).concat([m,f]),T=t?$(u,[g,p,m]):$(u,[g,m,p]),k=n?$(l,[y,f,c]):$(l,[y,c,f]),v;o!=null&&(v=C(o,"bias","fused matMul"),[v]=Ze(v,u),je(x,v.shape));let P;a!=null&&(P=C(a,"prelu weights","fused matMul"));let A=(L,U)=>{let[K,B,V,j]=U,H=Yl($(L,V.shape),V,s),ee,Y;if(!t&&!n?(ee=Ve(H,B,!1,!0),Y=Ve(K,H,!0,!1)):!t&&n?(ee=Ve(H,B,!1,!1),Y=Ve(H,K,!0,!1)):t&&!n?(ee=Ve(B,H,!1,!0),Y=Ve(K,H,!1,!1)):(ee=Ve(B,H,!0,!0),Y=Ve(H,K,!0,!0)),o!=null){let ne=Ql(j,H);return[ee,Y,ne]}else return[ee,Y]},F={a:T,b:k,bias:v,preluActivationWeights:P},E={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?pn((U,K,B)=>{let V=N.runKernel(Is,F,E);return B([U,K,V]),{value:$(V,x),gradFunc:A}})(T,k):pn((U,K,B,V)=>{let j=N.runKernel(Is,F,E);return V([U,K,j,B]),{value:$(j,x),gradFunc:A}})(T,k,v)}var q0=_({fusedMatMul_:xX});function TX(r){return _b(r,.54,.46)}var X0=_({hammingWindow_:TX});function kX(r){return _b(r,.5,.5)}var Db=_({hannWindow_:kX});function IX(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Ue(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,u=lt([Ue(r,s,e-i),Ca([i],o)]);a.push(u),s+=t}return a.length===0?ri([],[0,e]):$(lt(a),[a.length,e])}var Pb=_({frame_:IX});function CX(r,e,t,n,o=Db){n==null&&(n=V0(e));let s=Pb(r,e,t),a=R(s,o(e));return ql(a,n)}var Y0=_({stft_:CX});function vX(r,e,t,n,o="bilinear",s=0){let a=C(r,"image","cropAndResize"),i=C(e,"boxes","cropAndResize","float32"),u=C(t,"boxInd","cropAndResize","int32"),l=i.shape[0];D(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),D(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),D(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),D(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),D(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let p={image:a,boxes:i,boxInd:u},c={method:o,extrapolationValue:s,cropSize:n};return N.runKernel(Ys,p,c)}var Q0=_({cropAndResize_:vX});function wX(r){let e=C(r,"image","flipLeftRight","float32");D(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return N.runKernel(ea,t,{})}var Z0=_({flipLeftRight_:wX});function SX(r){let e=C(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];D(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),D(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Vr(e,o)}var J0=_({grayscaleToRGB_:SX});function _X(r,e,t=0,n=.5){let o=C(r,"image","rotateWithOffset","float32");D(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return N.runKernel(Ta,s,a)}var e2=_({rotateWithOffset_:_X});function Ps(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),D(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),D(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),D(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),D(e.rank===1,()=>"scores must be a 1D tensor"),D(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),D(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function AX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=C(r,"boxes","nonMaxSuppression","float32"),a=C(e,"scores","nonMaxSuppression","float32"),i=Ps(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return N.runKernel(ua,{boxes:s,scores:a},u)}var t2=_({nonMaxSuppression_:AX});function r2(r,e,t){let n=NX(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function NX(r,e,t){return PX(r,e,t||DX)}function DX(r,e){return r>e?1:r<e?-1:0}function PX(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function Fb(r,e,t,n,o){return uC(r,e,t,n,o,0)}function Mb(r,e,t,n,o,s){return uC(r,e,t,n,o,0,!1,s,!0)}function Eb(r,e,t,n,o,s){return uC(r,e,t,n,o,s,!0)}function uC(r,e,t,n,o,s,a=!1,i=!1,u=!1){let l=[];for(let g=0;g<e.length;g++)e[g]>o&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(n2);let p=s>0?-.5/s:0,c=[],m=[];for(;c.length<t&&l.length>0;){let g=l.pop(),{score:y,boxIndex:x,suppressBeginIndex:T}=g;if(y<o)break;let k=!1;for(let v=c.length-1;v>=T;--v){let P=FX(r,x,c[v]);if(P>=n){k=!0;break}if(g.score=g.score*MX(n,p,P),g.score<=o)break}g.suppressBeginIndex=c.length,k||(g.score===y?(c.push(x),m.push(g.score)):g.score>o&&r2(l,g,n2))}let f=c.length,d=t-f;i&&d>0&&(c.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let h={selectedIndices:c};return a&&(h.selectedScores=m),u&&(h.validOutputs=f),h}function FX(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),p=Math.min(o[1],o[3]),c=Math.max(o[0],o[2]),m=Math.max(o[1],o[3]),f=(i-s)*(u-a),d=(c-l)*(m-p);if(f<=0||d<=0)return 0;let h=Math.max(s,l),g=Math.max(a,p),y=Math.min(i,c),x=Math.min(u,m),T=Math.max(y-h,0)*Math.max(x-g,0);return T/(f+d-T)}function MX(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function n2(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function EX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=C(r,"boxes","nonMaxSuppressionAsync"),a=C(e,"scores","nonMaxSuppressionAsync"),i=Ps(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u=await Promise.all([s.data(),a.data()]),l=u[0],p=u[1],{selectedIndices:c}=Fb(l,p,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),Wt(c,"int32")}var o2=EX;function RX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=C(r,"boxes","nonMaxSuppression"),i=C(e,"scores","nonMaxSuppression"),u=Ps(a,i,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:a,scores:i},p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},c=N.runKernel(la,l,p);return{selectedIndices:c[0],selectedScores:c[1]}}var s2=_({nonMaxSuppressionWithScore_:RX});async function LX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=C(r,"boxes","nonMaxSuppressionAsync"),i=C(e,"scores","nonMaxSuppressionAsync"),u=Ps(a,i,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([a.data(),i.data()]),p=l[0],c=l[1],{selectedIndices:m,selectedScores:f}=Eb(p,c,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Wt(m,"int32"),selectedScores:Wt(f)}}var a2=LX;function $X(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=C(r,"boxes","nonMaxSuppression"),i=C(e,"scores","nonMaxSuppression"),u=Ps(a,i,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,c=u.scoreThreshold,m={boxes:a,scores:i},f={maxOutputSize:l,iouThreshold:p,scoreThreshold:c,padToMaxOutputSize:s},d=N.runKernel($i,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var i2=_({nonMaxSuppressionPadded_:$X});async function BX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=C(r,"boxes","nonMaxSuppressionAsync"),i=C(e,"scores","nonMaxSuppressionAsync"),u=Ps(a,i,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,c=u.scoreThreshold,[m,f]=await Promise.all([a.data(),i.data()]),{selectedIndices:d,validOutputs:h}=Mb(m,f,l,p,c,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Wt(d,"int32"),validOutputs:ce(h,"int32")}}var u2=BX;function OX(r,e,t=!1,n=!1){let o=C(r,"images","resizeBilinear");D(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),D(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),D(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=N.runKernel(Eo,i,u);return a?$(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var l2=_({resizeBilinear_:OX});function zX(r,e,t=!1,n=!1){let o=C(r,"images","resizeNearestNeighbor");D(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),D(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),D(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=N.runKernel(qa,i,u);return a?$(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var p2=_({resizeNearestNeighbor_:zX});function GX(r,e="binary",t=!1,n=.5){let o=C(r,"image","threshold"),s=.2989,a=.587,i=.114,u=o.shape[0]*o.shape[1],l=R(Wt([n]),255),p,c,m,f;if(D(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),D(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),D(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),D(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[p,c,m]=Ir(o,[1,1,1],-1);let g=R(p,s),y=R(c,a),x=R(m,i);f=X(X(g,y),x)}else f=r;if(e==="otsu"){let g=Tf(Q(Ef(f),"int32"),Er([]),256);l=WX(g,u)}let d=t?Xo(f,l):nr(f,l);return Q(R(d,255),"int32")}function WX(r,e){let t=Wt([-1]),n=Wt([0]),o=Wt([0]),s,a,i,u,l,p;for(let c=0;c<r.size-1;c++){s=Ue(r,0,c+1),a=Ue(r,c+1),l=pe(me(s),e),p=pe(me(a),e);let m=me(R(s,nu(0,s.size)));i=pe(m,me(s));let f=Ca(a.shape,s.size),d=X(nu(0,a.size),f),h=R(a,d);u=pe(me(h),me(a));let g=ue(i,u),y=ue(i,u),x=R(l,p);o=R(R(x,g),y);let T=nr(o,n);n=Gt(T,o,n),t=Gt(T,Wt([c]),t)}return t}var c2=_({threshold_:GX});function UX(r,e,t="nearest",n="constant",o=0,s){let a=C(r,"image","transform","float32"),i=C(e,"transforms","transform","float32");D(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:a,transforms:i},l={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return N.runKernel(xa,u,l)}var m2=_({transform_:UX});function KX(r,e,t){D(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),D(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=C(r,"a","bandPart");D(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=$(nu(0,s,1,"int32"),[-1,1]),u=nu(0,a,1,"int32"),l=ue(i,u),p=jr(Xo(l,ce(+e,"int32")),qo(l,ce(-t,"int32"))),c=Tt([s,a],n.dtype);return $(fr(Br($(n,[-1,s,a])).map(m=>Gt(p,m,c))),o)}var f2=_({bandPart_:KX});function VX(r){let e;if(Array.isArray(r)){e=!1,D(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)D(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=Ir(r,r.shape[0],0).map(o=>cn(o,[0]));D(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(N.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=R(me(R(t[a],s)),t[a]);s=ue(s,i)}return pe(s,wb(s,"euclidean"))}));return e?fr(t,0):t}var d2=_({gramSchmidt_:VX});function jX(r,e=!1){if(D(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return h2(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=Br($(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,p]=h2(u,e);o.push(l),s.push(p)});let a=$(fr(o,0),r.shape),i=$(fr(s,0),r.shape);return[a,i]}}function h2(r,e=!1){return N.tidy(()=>{D(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=$c(t),s=Nn(r),a=ri([[1]],[1,1]),i=Nn(a),u=t>=n?n:t;for(let l=0;l<u;++l){let p=s,c=i,m=o;[i,s,o]=N.tidy(()=>{let f=Ue(s,[l,l],[t-l,1]),d=wb(f),h=Ue(s,[l,l],[1,1]),g=Gt(nr(h,0),ri([[-1]]),ri([[1]])),y=ue(h,R(g,d)),x=pe(f,y);x.shape[0]===1?i=Nn(a):i=lt([a,Ue(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let T=et(pe(Ve(g,y),d)),k=Ue(s,[l,0],[t-l,n]),v=R(T,i),P=qe(i);if(l===0)s=ue(k,Ve(v,Ve(P,k)));else{let E=ue(k,Ve(v,Ve(P,k)));s=lt([Ue(s,[0,0],[l,n]),E],0)}let A=qe(v),F=Ue(o,[0,l],[t,o.shape[1]-l]);if(l===0)o=ue(F,Ve(Ve(F,i),A));else{let E=ue(F,Ve(Ve(F,i),A));o=lt([Ue(o,[0,0],[t,l]),E],1)}return[i,s,o]}),Ee([p,c,m])}return!e&&t>n&&(o=Ue(o,[0,0],[t,n]),s=Ue(s,[0,0],[n,n])),[o,s]})}var g2=_({qr_:jX});var or;(function(o){o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(or||(or={}));function HX(r,e,t=or.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=C(e,"weights","computeWeightedLoss"));let s=o==null?n:R(n,o);if(t===or.NONE)return s;if(t===or.SUM)return me(s);if(t===or.MEAN){if(o==null)return Lt(s);{let a=n.size/o.size,i=pe(me(s),me(o));return a>1?pe(i,ce(a)):i}}if(t===or.SUM_BY_NONZERO_WEIGHTS){if(o==null)return pe(me(s),ce(n.size));{let a=R(o,mr(n.shape)),i=Q(me(ti(a,ce(0))),"float32");return pe(me(s),i)}}throw Error(`Unknown reduction: ${t}`)}var qr=_({computeWeightedLoss_:HX});function qX(r,e,t,n=or.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"labels","absoluteDifference"),s=C(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=C(t,"weights","absoluteDifference")),Ut(o.shape,s.shape,"Error in absoluteDifference: ");let i=zt(ue(o,s));return qr(i,a,n)}var b2=_({absoluteDifference_:qX});function XX(r,e,t,n,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"labels","cosineDistance"),a=C(e,"predictions","cosineDistance"),i=null;n!=null&&(i=C(n,"weights","cosineDistance")),Ut(s.shape,a.shape,"Error in cosineDistance: ");let u=ce(1),l=ue(u,me(R(s,a),t,!0));return qr(l,i,o)}var y2=_({cosineDistance_:XX});function YX(r,e,t,n=or.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"labels","hingeLoss"),s=C(e,"predictions","hingeLoss"),a=null;t!=null&&(a=C(t,"weights","hingeLoss")),Ut(o.shape,s.shape,"Error in hingeLoss: ");let i=ce(1);o=ue(R(ce(2),o),i);let u=Hr(ue(i,R(o,s)));return qr(u,a,n)}var x2=_({hingeLoss_:YX});function QX(r,e,t,n=1,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"labels","huberLoss"),a=C(e,"predictions","huberLoss"),i=null;t!=null&&(i=C(t,"weights","huberLoss")),Ut(s.shape,a.shape,"Error in huberLoss: ");let u=ce(n),l=zt(ue(a,s)),p=ru(l,u),c=ue(l,p),m=X(R(ce(.5),Xe(p)),R(u,c));return qr(m,i,o)}var T2=_({huberLoss_:QX});function ZX(r,e,t,n=1e-7,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"labels","logLoss"),a=C(e,"predictions","logLoss"),i=null;t!=null&&(i=C(t,"weights","logLoss")),Ut(s.shape,a.shape,"Error in logLoss: ");let u=ce(1),l=ce(n),p=et(R(s,$r(X(a,l)))),c=R(ue(u,s),$r(X(ue(u,a),l))),m=ue(p,c);return qr(m,i,o)}var k2=_({logLoss_:ZX});function JX(r,e,t,n=or.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"labels","meanSquaredError"),s=C(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=C(t,"weights","meanSquaredError")),Ut(o.shape,s.shape,"Error in meanSquaredError: ");let i=Wf(o,s);return qr(i,a,n)}var I2=_({meanSquaredError_:JX});function eY(r,e){let t=C(r,"labels","sigmoidCrossEntropyWithLogits"),n=C(e,"logits","sigmoidCrossEntropyWithLogits");Ut(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Hr(n),s=R(n,t),a=zl(cr(et(zt(n))));return X(ue(o,s),a)}function tY(r,e,t,n=0,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"multiClassLabels","sigmoidCrossEntropy"),a=C(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=C(t,"weights","sigmoidCrossEntropy")),Ut(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=ce(n),p=ce(1),c=ce(.5);s=X(R(s,ue(p,l)),R(c,l))}let u=eY(s,a);return qr(u,i,o)}var C2=_({sigmoidCrossEntropy_:tY});function rY(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return pn((o,s,a)=>{let u=zI(s,[t],!0),l=ue(Q(s,"float32"),u);a([o,l]);let p=et(R(l,o));return{value:me(p,[t]),gradFunc:(f,d)=>{let[h,g]=d,y=Ns(f.shape,[t]);return[R($(f,y),ue(Q(h,"float32"),cr(g))),R($(f,y),ue(cr(g),Q(h,"float32")))]}}})(r,e)}function nY(r,e,t,n=0,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"onehotLabels","softmaxCrossEntropy"),a=C(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=C(t,"weights","softmaxCrossEntropy")),Ut(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let l=ce(n),p=ce(1),c=ce(s.shape[1]);s=X(R(s,ue(p,l)),pe(l,c))}let u=rY(s,a);return qr(u,i,o)}var v2=_({softmaxCrossEntropy_:nY});function oY(r,e,t,n){let o=C(r,"indices","sparseFillEmptyRows"),s=C(e,"values","sparseFillEmptyRows"),a=C(t,"denseShape","sparseFillEmptyRows"),i=C(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let u={indices:o,values:s,denseShape:a,defaultValue:i},l=N.runKernel(bc,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var w2=_({sparseFillEmptyRows_:oY});function sY(r,e,t){let n=C(r,"inputIndices","sparseReshape"),o=C(e,"inputShape","sparseReshape"),s=C(t,"newShape","sparseReshape");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=N.runKernel(yc,a);return{outputIndices:i[0],outputShape:i[1]}}var S2=_({sparseReshape_:sY});function aY(r,e,t){let n=C(r,"data","sparseSegmentMean"),o=C(e,"indices","sparseSegmentMean"),s=C(t,"segmentIds","sparseSegmentMean");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(xc,a)}var _2=_({sparseSegmentMean_:aY});function iY(r,e,t){let n=C(r,"data","sparseSegmentSum"),o=C(e,"indices","sparseSegmentSum"),s=C(t,"segmentIds","sparseSegmentSum");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(Tc,a)}var A2=_({sparseSegmentSum_:iY});function uY(r,e,t,n,o,s,a,i){let u=C(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=C(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},c={data:u,dataSplits:l},m=N.runKernel(Ou,c,p);return{nGrams:m[0],nGramsSplits:m[1]}}var N2=_({stringNGrams_:uY});function lY(r,e,t=!0){let n=C(r,"input","stringSplit","string"),o=C(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},a={input:n,delimiter:o},i=N.runKernel(kc,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var D2=_({stringSplit_:lY});function pY(r,e){let t=C(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return N.runKernel(Ic,o,n)}var P2=_({stringToHashBucketFast_:pY});var NKe={fft:Hl,ifft:Hu,rfft:ql,irfft:Gf},EKe={hammingWindow:X0,hannWindow:Db,frame:Pb,stft:Y0},Mn={flipLeftRight:Z0,grayscaleToRGB:J0,resizeNearestNeighbor:p2,resizeBilinear:l2,rotateWithOffset:e2,cropAndResize:Q0,nonMaxSuppression:t2,nonMaxSuppressionAsync:o2,nonMaxSuppressionWithScore:s2,nonMaxSuppressionWithScoreAsync:a2,nonMaxSuppressionPadded:i2,nonMaxSuppressionPaddedAsync:u2,threshold:c2,transform:m2},F2={bandPart:f2,gramSchmidt:d2,qr:g2},iVe={absoluteDifference:b2,computeWeightedLoss:qr,cosineDistance:y2,hingeLoss:x2,huberLoss:T2,logLoss:k2,meanSquaredError:I2,sigmoidCrossEntropy:C2,softmaxCrossEntropy:v2},Kf={sparseFillEmptyRows:w2,sparseReshape:S2,sparseSegmentMean:_2,sparseSegmentSum:A2},Rb={stringNGrams:N2,stringSplit:D2,stringToHashBucketFast:P2};var Zr=class extends fb{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return Ee(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return bb(e,t)}dispose(){this.iterations_!=null&&Ee(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Zr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var ep=class extends Zr{constructor(e,t,n=null){super();this.learningRate=e;this.rho=t;this.epsilon=n;this.accumulatedGrads=[];this.accumulatedUpdates=[];n==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=N.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:G(()=>De(s).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:G(()=>De(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let u=this.accumulatedGrads[o].variable,l=this.accumulatedUpdates[o].variable;G(()=>{let p=X(R(u,this.rho),R(Xe(i),1-this.rho)),c=R(pe($t(X(l,this.epsilon)),$t(X(u,this.epsilon))),i),m=X(R(l,this.rho),R(Xe(c),1-this.rho));u.assign(p),l.assign(m);let f=X(R(c,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ee(this.accumulatedGrads.map(e=>e.variable)),Ee(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};ep.className="Adadelta";Dn(ep);var tp=class extends Zr{constructor(e,t=.1){super();this.learningRate=e;this.initialAccumulatorValue=t;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=N.registeredVariables[n];if(this.accumulatedGrads[o]==null){let u=!1;this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:G(()=>Ca(s.shape,this.initialAccumulatorValue).variable(u))}}let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[o].variable;G(()=>{let u=X(i,Xe(a));i.assign(u);let l=X(R(pe(a,$t(X(u,N.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ee(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};tp.className="Adagrad";Dn(tp);var rp=class extends Zr{constructor(e,t,n,o=null){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];G(()=>{this.accBeta1=ce(t).variable(),this.accBeta2=ce(n).variable()}),o==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);G(()=>{let n=ue(1,this.accBeta1),o=ue(1,this.accBeta2);t.forEach((s,a)=>{let i=N.registeredVariables[s],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:G(()=>De(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:G(()=>De(i).variable(u))});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,m=X(R(p,this.beta1),R(l,1-this.beta1)),f=X(R(c,this.beta2),R(Xe(l),1-this.beta2)),d=pe(m,n),h=pe(f,o);p.assign(m),c.assign(f);let g=X(R(pe(d,X($t(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ee(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),G(()=>{this.accBeta1.assign(Fn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fn(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};rp.className="Adam";Dn(rp);var np=class extends Zr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.decay=s;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];G(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(t).variable()}),o==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);G(()=>{let n=ue(1,this.accBeta1),o=pe(-this.learningRate,X(R(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=N.registeredVariables[s],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:De(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:De(i).variable(u)});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,m=X(R(p,this.beta1),R(l,1-this.beta1)),f=R(c,this.beta2),d=zt(l),h=Xn(f,d);p.assign(m),c.assign(h);let g=X(R(pe(o,n),pe(m,X(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(X(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ee(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};np.className="Adamax";Dn(np);var su=class extends Zr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let a=N.registeredVariables[n];G(()=>{let i=X(R(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Vt(ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};su.className="SGD";Dn(su);var op=class extends su{constructor(e,t,n=!1){super(e);this.learningRate=e;this.momentum=t;this.useNesterov=n;this.accumulations=[];this.m=ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=N.registeredVariables[n];if(this.accumulations[o]==null){let u=!1;this.accumulations[o]={originalName:`${n}/momentum`,variable:G(()=>De(s).variable(u))}}let a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&G(()=>{let u,l=X(R(this.m,a),i);this.useNesterov?u=X(R(this.c,X(i,R(l,this.m))),s):u=X(R(this.c,l),s),a.assign(l),s.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ee(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};op.className="Momentum";Dn(op);var sp=class extends Zr{constructor(e,t=.9,n=0,o=null,s=!1){super();this.learningRate=e;this.decay=t;this.momentum=n;this.epsilon=o;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=s,o==null&&(this.epsilon=N.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=N.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:G(()=>De(s).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:G(()=>De(s).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:G(()=>De(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let u=this.accumulatedMeanSquares[o].variable,l=this.accumulatedMoments[o].variable;G(()=>{let p=X(R(u,this.decay),R(Xe(i),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[o].variable,m=X(R(c,this.decay),R(i,1-this.decay)),f=pe(R(i,this.learningRate),$t(ue(p,X(Xe(m),this.epsilon)))),d=X(R(l,this.momentum),f);u.assign(p),c.assign(m),l.assign(d);let h=ue(s,d);s.assign(h)}else{let c=X(R(u,this.decay),R(Xe(i),1-this.decay)),m=X(R(l,this.momentum),pe(R(i,this.learningRate),$t(X(c,this.epsilon))));u.assign(c),l.assign(m);let f=ue(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ee(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ee(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ee(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};sp.className="RMSProp";Dn(sp);var ni=class{static sgd(e){return new su(e)}static momentum(e,t,n=!1){return new op(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new sp(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new rp(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new ep(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new np(e,t,n,o,s)}static adagrad(e,t=.1){return new tp(e,t)}};var ap={sgd:ni.sgd,momentum:ni.momentum,adadelta:ni.adadelta,adagrad:ni.adagrad,rmsprop:ni.rmsprop,adamax:ni.adamax,adam:ni.adam};var cY=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:r=>r())();function lC(){return new Promise(r=>cY(()=>r()))}var I={};Qe(I,{ERF_A1:()=>IY,ERF_A2:()=>CY,ERF_A3:()=>vY,ERF_A4:()=>wY,ERF_A5:()=>SY,ERF_P:()=>kY,PARALLELIZE_THRESHOLD:()=>Lb,SELU_SCALE:()=>cC,SELU_SCALEALPHA:()=>pC,applyActivation:()=>Zl,assertAndGetBroadcastShape:()=>je,assertAxesAreInnerMostDims:()=>c5,assertParamsConsistent:()=>mY,assignToTypedArray:()=>FY,axesAreInnerMostDims:()=>$I,calculateShapes:()=>o0,checkEinsumDimSizes:()=>BY,combineLocations:()=>I0,complexWithEvenIndex:()=>NY,complexWithOddIndex:()=>DY,computeConv2DInfo:()=>Fl,computeConv3DInfo:()=>x0,computeDefaultPad:()=>hI,computeDilation2DInfo:()=>Pq,computeOptimalWindowSize:()=>dY,computeOutAndReduceShapes:()=>BI,computeOutShape:()=>fY,computePool2DInfo:()=>dI,computePool3DInfo:()=>Fq,convertConv2DDataFormat:()=>T0,decodeEinsumEquation:()=>LY,eitherStridesOrDilationsAreOne:()=>Rr,expandShapeToKeepDim:()=>Ns,exponent:()=>EY,exponents:()=>MY,fromStringArrayToUint8:()=>HY,fromUint8ToStringArray:()=>jY,getAxesPermutation:()=>OI,getBroadcastDims:()=>I6,getComplexWithIndex:()=>PY,getEinsumComputePath:()=>OY,getEinsumPermutation:()=>$Y,getFusedBiasGradient:()=>Ql,getFusedDyActivation:()=>Yl,getImageCenter:()=>hY,getInnerMostAxes:()=>m5,getPermuted:()=>bY,getReductionAxes:()=>Pt,getReshaped:()=>gY,getReshapedPermuted:()=>yY,getSliceBeginCoords:()=>xY,getSliceSize:()=>TY,getUndoAxesPermutation:()=>Af,isIdentityPermutation:()=>zY,log:()=>Gj,mergeRealAndImagArrays:()=>_Y,prepareAndValidate:()=>n0,prepareSplitSize:()=>WY,segment_util:()=>fC,shouldFuse:()=>Jl,slice_util:()=>It,splitRealAndImagArrays:()=>AY,tupleValuesAreOne:()=>Ho,upcastType:()=>Kt,validateInput:()=>cb,validateUpdateShape:()=>Jk,warn:()=>ro});function mY(r,e){let t=r[0].length;r.forEach((o,s)=>{D(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),D(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)D(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function fY(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var Lb=30;function dY(r){return r<=Lb?r:Hp(r,Math.floor(Math.sqrt(r)))}function hY(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function gY(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function bY(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2==1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function yY(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function xY(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function TY(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var pC=1.7580993408473768,cC=1.0507009873554805;var kY=.3275911,IY=.254829592,CY=-.284496736,vY=1.421413741,wY=-1.453152027,SY=1.061405429;function _Y(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function AY(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function NY(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function DY(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function PY(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function FY(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function MY(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function EY(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var mC="->",RY=/->/g,M2=",",E2="...";function LY(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(RY,"").length)/mC.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${mC}").`);let[n,o]=r.split(mC);D(n.indexOf(E2)===-1,()=>`The ellipsis notation ("${E2}") is not supported yet.`);let s=n.split(M2),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let m=0;m<o.length;++m){let f=o[m];if(!s.some(d=>d.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);i.indexOf(f)===-1&&i.push(f)}for(let m=0;m<n.length;++m){let f=n[m];i.indexOf(f)===-1&&f!==M2&&i.push(f)}let u=new Array(s.length);for(let m=0;m<a;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let f=0;f<s[m].length;++f)u[m].push(i.indexOf(s[m][f]))}let l=i.length,p=o.length,c=[];for(let m=p;m<l;++m)c.push(m);return{allDims:i,summedDims:c,idDims:u}}function $Y(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function BY(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let a=0;a<e[o].length;++a)n[e[o][a]]===void 0?n[e[o][a]]=s[a]:D(n[e[o][a]]===s[a],()=>`Expected dimension ${n[e[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function OY(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<t.length;++a){let i=t[a],u=GY(e,i);for(let l of u)s.indexOf(l)===-1&&(n[a].push(l),s.push(l))}return{path:t,steps:n}}function zY(r){return r.every((e,t)=>e===t)}function GY(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function WY(r,e,t=0){let n=[];if(typeof e=="number")D(r.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);D(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,u)=>u>0?i+u:i);e[s]=r.shape[t]-a}D(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}var fC={};Qe(fC,{collectGatherOpShapeInfo:()=>VY,computeOutShape:()=>KY,segOpComputeOptimalWindowSize:()=>UY});function UY(r,e){let t=!1,n;for(r<=Lb?(n=r,t=!0):n=Hp(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=Hp(r,n+1);return n}function KY(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function VY(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let c=0;c<n;++c)if(r.shape[c]!==e.shape[c])throw new Error(`x.shape[${c}]: ${r.shape[c]} should be equal to indices.shape[${c}]: ${e.shape[c]}.`);let a=r.shape[t],i=[],u=1,l=1,p=1;for(let c=0;c<n;++c)i.push(r.shape[c]),u*=r.shape[c];for(let c=n;c<t;c++)i.push(r.shape[c]),l*=r.shape[c];for(let c=n;c<o;c++)i.push(e.shape[c]);for(let c=t+1;c<s;c++)i.push(r.shape[c]),p*=r.shape[c];return{batchSize:u,sliceSize:p,outerSize:l,dimSize:a,outputShape:i}}function jY(r){try{return r.map(e=>Ac(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function HY(r){return r.map(e=>Wu(e))}var Tr={};Qe(Tr,{nonMaxSuppressionV3Impl:()=>Fb,nonMaxSuppressionV4Impl:()=>Mb,nonMaxSuppressionV5Impl:()=>Eb,whereImpl:()=>vb});var $b={kernelName:as,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,ou(Q(t,"float32"),-1))}}};var R2={kernelName:ki,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Xe(Q(t,"float32")),o=$t(ue(ce(1),n));return et(pe(r,o))}}}};var L2={kernelName:Ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=$t(ue(Xe(Q(t,"float32")),1));return pe(r,n)}}}};var $2={kernelName:_n,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=je(t.shape,n.shape);return{a:()=>{let i=r,u=Pt(t.shape,o);return u.length>0&&(i=me(i,u)),$(i,t.shape)},b:()=>{let i=r,u=Pt(n.shape,o);return u.length>0&&(i=me(i,u)),$(i,n.shape)}}}};var B2={kernelName:no,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var O2={kernelName:oo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var z2={kernelName:Va,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var G2={kernelName:wi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,$t(ue(ce(1),Xe(Q(t,"float32")))))}}};var W2={kernelName:Si,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=$t(X(ce(1),Xe(Q(t,"float32"))));return pe(r,n)}}}};var U2={kernelName:Ni,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=je(t.shape,n.shape);return{a:()=>{let i=X(Xe(t),Xe(n)),u=R(r,pe(n,i)),l=Pt(t.shape,o);return l.length>0&&(u=me(u,l)),$(u,t.shape)},b:()=>{let i=X(Xe(t),Xe(n)),u=et(R(r,pe(t,i))),l=Pt(n.shape,o);return l.length>0&&(u=me(u,l)),$(u,n.shape)}}}};var K2={kernelName:_i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,X(Xe(Q(t,"float32")),1))}}};var V2={kernelName:Ai,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,ue(ce(1),Xe(Q(t,"float32"))))}}};function qY(r,e,t,n,o,s){let a=C(r,"dy","avgPool3dGrad"),i=C(e,"input","avgPool3dGrad"),u=a,l=i,p=!1;i.rank===4&&(p=!0,u=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),D(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),s!=null&&D(mt(o),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`);let c={dy:u,input:l},m={filterSize:t,strides:n,pad:o,dimRoundingMode:s},f=N.runKernel(Yp,c,m);return p?$(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var j2=_({avgPool3dGrad_:qY});var H2={kernelName:Au,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=t;return{x:()=>j2(r,n,o,s,a,i)}}};function XY(r,e,t,n,o){let s=C(r,"dy","avgPoolGrad"),a=C(e,"input","avgPoolGrad");D(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,u=s,l=!1;a.rank===3&&(l=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),D(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let p={dy:u,input:i},c={filterSize:t,strides:n,pad:o},m=N.runKernel(Xp,p,c);return l?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var q2=_({avgPoolGrad_:XY});var X2={kernelName:so,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>q2(r,n,o,s,a)}}};var Y2={kernelName:ao,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>Ve(r,o,!1,!0),b:()=>Ve(n,r,!0,!1)}:!s&&a?{a:()=>Ve(r,o,!1,!1),b:()=>Ve(r,n,!0,!1)}:s&&!a?{a:()=>Ve(o,r,!1,!0),b:()=>Ve(n,r,!1,!1)}:{a:()=>Ve(o,r,!0,!0),b:()=>Ve(r,n,!0,!0)}}};var Q2={kernelName:is,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Ul(r,n,o)}}};var Z2={kernelName:VN,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])a[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>me(r,i,!0)}}};var J2={kernelName:Wn,gradFunc:r=>({x:()=>r.clone()})};var e1={kernelName:io,gradFunc:r=>({x:()=>De(r)})};var t1={kernelName:Un,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Gt(jr(qo(n,o),Xo(n,s)),r,De(r))}}};var r1={kernelName:Du,inputsToSave:["x"],gradFunc:$b.gradFunc};var n1={kernelName:us,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(u=>u.shape),{axis:o}=t,s=yr(o,e[0].shape)[0],a=n.map(u=>u[s]);return Ir(r,a,s).map(u=>()=>u)}};var o1={kernelName:uo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:u}=t;return D(Ho(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Lc(n.shape,r,o,a,i,u),filter:()=>Wc(n,r,o.shape,a,i,u)}}};var s1={kernelName:lo,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:u}=t;return{dy:()=>qn(r,o,s,a,i,1,u),filter:()=>Wc(r,n,o.shape,s,a,i,u)}}};function YY(r,e,t,n,o){let s=r;r.rank===4&&(s=$(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=$(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),D(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),D(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),D(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),D(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),D(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},u={strides:n,pad:o,filterShape:t};return N.runKernel(ec,i,u)}var a1=_({conv3DBackpropFilter_:YY});var i1={kernelName:Pu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;D(Ho(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>gb(a.shape,r,i,o,s),filter:()=>a1(a,r,i.shape,o,s)}}};var u1={kernelName:po,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(et($f(Q(t,"float32"))),r)}}};var l1={kernelName:co,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(Bf(Q(t,"float32")),r)}}};var p1={kernelName:Xs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=OI([o],n.rank),u=wf(r,o,s,!a);return i!=null&&(u=qe(u,i)),u}}}};var c1={kernelName:mo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n??[1,1];D(Ho(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[u,l]=e;return D(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),D(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),D(Rr(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),a!=null&&D(mt(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),{x:()=>Nb(u.shape,r,l,o,s,i,a),filter:()=>Ab(u,r,l.shape,o,s,i,a)}}};var m1={kernelName:Fu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>N.runKernel(of,s,t),filter:()=>N.runKernel(sf,a,t)}}};var f1={kernelName:ho,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>N.runKernel(ac,n)}}};var d1={kernelName:Di,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=R(cr(et(Xe(t))),2/Math.sqrt(Math.PI));return{x:()=>R(r,n)}}};var h1={kernelName:go,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,t)}}};var g1={kernelName:ls,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>$(r,t.shape)}}};var b1={kernelName:Js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,cr(t))}}};var y1={kernelName:bo,gradFunc:r=>({x:()=>De(r)})};var x1={kernelName:yo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=je(t.shape,n.shape);return{a:()=>{let i=pe(r,Q(n,"float32")),u=Pt(t.shape,o);return u.length>0?$(me(i,u),t.shape):i},b:()=>{let i=R(r,Q(t,"float32")),u=Pt(n.shape,o);u.length>0&&(i=$(me(i,u),n.shape));let l=Xe(n);return et(pe(i,Q(l,"float32")))}}}};var T1={kernelName:xo,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,u=i??ce(1),l=Pt(s.shape,o.shape),p=[];if(s.rank===1){for(let k=0;k<o.shape.length-1;++k)p.push(o.shape[k]);p.push(1)}let c=ue(o,s),m=R(r,u),f=Rf(X(a,ce(n))),d=R(R(R(f,f),f),ce(-.5));return{x:()=>s.rank===1?$(R(R(r,Vr($(f,[1,1,1,s.shape[0]]),p)),u),o.shape):$(R(R(r,f),u),o.shape),mean:()=>{let k=R(R(f,ce(-1)),m);return s.rank===1&&(k=me(k,l)),$(k,s.shape)},variance:()=>{let k=R(R(d,c),m);return s.rank===1&&(k=me(k,l)),$(k,s.shape)},scale:()=>{let k=R(c,f),v=R(r,k);return s.rank===1&&(v=me(v,l)),$(v,s.shape)},offset:()=>{let k=r;return s.rank===1&&(k=me(k,l)),$(k,s.shape)}}}};var k1={kernelName:ps,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=yr(s,n.shape)[0];return{x:()=>{let u=n.shape,l=o.size,p=u.slice(0,a),c=p.length,m=u.slice(s,u.length).slice(1),f=m.length,d=I1(0,c),h=I1(c+1,c+1+f),g=C1([p,[l],m]),y=$(r,g),x=$(o,[l]),T=C1([[c],d,h]),k=qe(y,T),v=aC(k,x,n.shape[a]),P=Af(T);return v=qe(v,P),v},indices:()=>o}}};function I1(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function C1(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var v1={kernelName:To,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>De(t),b:()=>De(n)}}};var w1={kernelName:Kn,gradFunc:r=>({x:()=>Q(r,"float32")})};var S1={kernelName:Pi,gradFunc:r=>({x:()=>De(r)})};var _1={kernelName:Fi,gradFunc:r=>({x:()=>De(r)})};var A1={kernelName:Mi,gradFunc:r=>({x:()=>De(r)})};var N1={kernelName:na,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=nr(n,0);return{x:()=>Gt(s,r,R(r,o))}}};var D1={kernelName:Ei,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,X(t,1))}}};var P1={kernelName:ko,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,Q(t,"float32"))}}};var F1={kernelName:jN,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let s=!0,a=cr(n);return ue(r,R(me(r,o,s),a))}}}};function QY(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},u={depthRadius:n,bias:o,alpha:s,beta:a};return N.runKernel(pc,i,u)}var M1=_({localResponseNormalizationBackprop_:QY});var E1={kernelName:Ru,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:u}=t;return{x:()=>M1(n,o,r,s,a,i,u)}}};function Bb(r,e,t,n){return e.rank<t.rank&&(e=$(e,Ns(e.shape,n))),r.rank<t.rank&&(r=$(r,Ns(r.shape,n))),{x:()=>R(r,Q(Kr(t,e),r.dtype))}}var dC={kernelName:Io,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=yr(o,s.shape),u=Bb(r,a,s,i);return{x:()=>u.x()}}};var R1={kernelName:Co,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>R(r,Q(qo(t,n),"float32")),b:()=>R(r,Q(Sf(t,n),"float32"))}}};function ZY(r,e,t,n,o,s,a){let i=C(r,"dy","maxPool3dGrad"),u=C(e,"input","maxPool3dGrad"),l=C(t,"output","maxPool3dGrad"),p=i,c=u,m=l,f=!1;u.rank===4&&(f=!0,p=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=$(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=$(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),D(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),D(c.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),D(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),a!=null&&D(mt(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let d={dy:p,input:c,output:m},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=N.runKernel(mc,d,h);return f?$(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var L1=_({maxPool3dGrad_:ZY});var $1={kernelName:Lu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=t;return{x:()=>L1(r,n,o,s,a,i,u)}}};function JY(r,e,t,n,o,s,a){let i=C(r,"dy","maxPoolGrad"),u=C(e,"input","maxPoolGrad"),l=C(t,"output","maxPoolGrad");D(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),D(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),D(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),a!=null&&D(mt(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let p={dy:i,input:u,output:l},c={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return N.runKernel(cc,p,c)}var B1=_({maxPoolGrad_:JY});var O1={kernelName:vo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>B1(r,n,o,s,a,i)}}};var z1={kernelName:wo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=yr(o,n.shape),i=BI(n.shape,s)[1],u=ct(i);return{x:()=>{let p=n.shape.slice();s.forEach(f=>{p[f]=1});let c=$(r,p);return pe(R(c,mr(n.shape,"float32")),u)}}}};var G1={kernelName:So,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=yr(o,s.shape),u=Bb(r,a,s,i);return{x:()=>u.x()}}};var W1={kernelName:_o,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>R(r,Q(Xo(t,n),"float32")),b:()=>R(r,Q(nr(t,n),"float32"))}}};var U1={kernelName:Ao,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ue(r,s,n.shape)}}};var K1={kernelName:Li,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=je(t.shape,n.shape);return{a:()=>{let i=Pt(t.shape,o);return i.length>0?$(me(r,i),t.shape):r},b:()=>{let i=R(r,et(tu(pe(t,n)))),u=Pt(n.shape,o);return u.length>0?$(me(i,u),n.shape):i}}}};var V1={kernelName:No,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=je(t.shape,n.shape);return{a:()=>{let i=R(r,Q(n,"float32")),u=Pt(t.shape,o);return u.length>0?$(me(i,u),t.shape):i},b:()=>{let i=R(r,Q(t,"float32")),u=Pt(n.shape,o);return u.length>0?$(me(i,u),n.shape):i}}}};var j1={kernelName:cs,gradFunc:r=>({x:()=>et(r)})};var H1={kernelName:pa,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>Tt(t.shape,"float32")}}};var q1={kernelName:ms,gradFunc:r=>({x:()=>De(r)})};var X1={kernelName:fs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return Br(r,n).map(s=>()=>s)}};var hC={kernelName:Do,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ue(r,s,n.shape)}}};var Y1={kernelName:Po,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=je(s.shape,a.shape);return{a:()=>{let p=Q(a,"float32"),c=R(r,R(p,Fn(s,ue(p,ce(1))))),m=Pt(s.shape,i);return m.length>0&&(c=me(c,m)),$(c,s.shape)},b:()=>{let p=nr(s,0),c=Gt(p,$r(s),De(s)),m=R(r,R(o,c)),f=Pt(a.shape,i);return f.length>0&&(m=me(m,f)),$(m,a.shape)}}}};var Q1={kernelName:Fo,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=nr(t,0);return{x:()=>Gt(o,r,R(r,n)),alpha:()=>{let s=Gt(o,De(r),R(r,t)),a=Pt(n.shape,r.shape);return a.length>0&&(s=me(s,a)),$(s,n.shape)}}}};var Z1={kernelName:fo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=je(t.shape,n.shape);return{a:()=>{let i=pe(r,Q(n,"float32")),u=Pt(t.shape,o);return u.length>0?$(me(i,u),t.shape):i},b:()=>{let i=R(r,Q(t,"float32")),u=Pt(n.shape,o);u.length>0&&(i=$(me(i,u),n.shape));let l=Xe(n);return et(pe(i,Q(l,"float32")))}}}};var J1={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,et(Xe(t)))}}};var eP={kernelName:Ro,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=R(Xo(t,6),ou(t));return{x:()=>R(r,Q(n,"float32"))}}};var tP={kernelName:Mo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,Q(ou(t),"float32"))}}};var rP={kernelName:ds,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>$(r,t.shape)}}};var nP={kernelName:Eo,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>N.runKernel(gc,o,t)}}};var oP={kernelName:qa,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>N.runKernel(hc,o,t)}}};var sP={kernelName:ma,gradFunc:(r,e,t)=>{let{dims:n}=t,o=yr(n,r.shape);return{x:()=>xr(r,o)}}};var aP={kernelName:fa,gradFunc:r=>({x:()=>De(r)})};var iP={kernelName:Lo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>et(pe(r,R(Fn(t,1.5),2)))}}};var uP={kernelName:hs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>Q(De(t),"float32"),t:()=>R(r,Q(t,r.dtype)),e:()=>R(r,Q(Gl(t),r.dtype))}}};var lP={kernelName:Oi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=nr(t,ce(0)),o=ce(pC),s=ce(cC),a=R(r,s),i=R(R(r,o),cr(Q(t,"float32")));return Gt(n,a,i)}}}};var pP={kernelName:Bo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,R(t,ue(ce(1),t)))}}};var cP={kernelName:zi,gradFunc:r=>({x:()=>De(r)})};var mP={kernelName:$o,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R($l(Q(t,"float32")),r)}}};var fP={kernelName:ha,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(vf(Q(t,"float32")),r)}}};var dP={kernelName:gs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,u]=tI(n,o,s),l=[];for(let p=0;p<r.rank;p++)l.push([i[p],a[p]-i[p]-u[p]]);return{x:()=>Pn(r,l)}}};var hP={kernelName:Go,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=R(r,n);return{logits:()=>ue(a,R(me(a,[o],s),n))}}};var gP={kernelName:Gi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,ln(t))}}};var gC={kernelName:bs,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Rl(r,n,o)}}};var bC={kernelName:ys,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>lt(r,n)}}};var bP={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,R($t(Q(t,"float32")),2))}}};var yP={kernelName:Xa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,R(Q(t,"float32"),2))}}};var xP={kernelName:Wo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ce(2);return{a:()=>R(r,R(o,ue(t,n))),b:()=>R(r,R(o,ue(n,t)))}}};var TP={kernelName:ks,gradFunc:r=>({x:()=>De(r)})};var kP={kernelName:Uo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=je(t.shape,n.shape);return{a:()=>{let i=r,u=Pt(t.shape,o);return u.length>0&&(i=me(i,u)),$(i,t.shape)},b:()=>{let i=r,u=Pt(n.shape,o);return u.length>0&&(i=me(i,u)),$(et(i),n.shape)}}}};var IP={kernelName:zo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;yr(s,n.shape).forEach(l=>{o[l]=1});let i=$(r,o),u=R(i,mr(n.shape,"float32"));return{x:()=>u}}};var CP={kernelName:ba,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,Xe($l(t)))}}};var vP={kernelName:Ko,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(ue(ce(1),Xe(t)),r)}}};var wP={kernelName:An,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=De(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=X(a,Ue(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)a=X(a,Ue(r,[i*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)a=X(a,Ue(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let p=0;p<o[3];++p)a=X(a,Ue(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var SP={kernelName:Vo,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Af(o);return{x:()=>qe(r,s)}}};var _P={kernelName:xs,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>fr(r,o)}}};var AP={kernelName:zu,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>e7(r,t)}}};function e7(r,e){let t=Xn(e,De(e)),n=Ja(r,t),o=qo(e,ce(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=_r(o,i+1);o=jr(o,mr(n.shape,"bool"));let a=De(n);return Gt(o,n,a)}var NP={kernelName:Ts,gradFunc:r=>({x:()=>De(r)})};var t7=[$b,R2,L2,$2,B2,O2,z2,G2,W2,U2,K2,V2,H2,X2,Y2,Q2,Z2,J2,e1,t1,r1,n1,s1,o1,i1,u1,l1,p1,c1,m1,Z1,f1,d1,h1,g1,b1,x1,y1,T1,k1,v1,w1,S1,_1,A1,N1,D1,P1,F1,E1,dC,dC,R1,$1,O1,z1,G1,W1,U1,K1,V1,j1,H1,q1,X1,hC,hC,Y1,Q1,J1,eP,tP,rP,nP,oP,sP,aP,iP,uP,lP,pP,cP,mP,fP,dP,hP,gP,gC,gC,bC,bC,bP,xP,yP,TP,kP,IP,CP,vP,wP,SP,_P,AP,NP];for(let r of t7)HN(r);var RP={};Qe(RP,{maxNorm:()=>n7,minMaxNorm:()=>a7,nonNeg:()=>s7,unitNorm:()=>o7});var yC;function dr(){return yC==null&&(yC=y0().epsilon()),yC}function mn(){return"channelsLast"}var Yn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Yn.prototype)}},Jr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Jr.prototype)}},O=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,O.prototype)}},Pe=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Pe.prototype)}},Vf=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Vf.prototype)}};function Fs(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Yo(r,e){if(!r)throw new Vf(e)}function xC(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Nr(r){return r.length===1?r[0]:r}function St(r){return Array.isArray(r)?r:[r]}function Ms(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function au(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Es={};function Uc(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function TC(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>TC(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:TC(n))}}}function oi(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in Es)a=Es[s];else if(a=e[s],a==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,u;if(a in t?[i,u]=t[a]:a in Es?[i,u]=Es.className:a in e&&([i,u]=e[a]),i==null)throw new O(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let f of Object.keys(Es))l[f]=Es[f];for(let f of Object.keys(t))l[f]=t[f];let p=s.config;p.customObjects=l;let c={...Es};for(let f of Object.keys(t))Es[f]=t[f];TC(s.config);let m=u(i,s.config,t,o);return Es={...c},m}else{let l={...Es};for(let c of Object.keys(t))Es[c]=t[c];let p=new i(s.config);return Es={...l},p}}}function r7(r,e){return r<e?-1:r>e?1:0}function jf(r,e){return-1*r7(r,e)}function Rs(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function DP(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function si(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new O(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function Ob(r,e,t=0,n=1/0){return Yo(t>=0),Yo(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function sr(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>sr(t,`element ${n+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${PP(r)}.`)}function PP(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>PP(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function FP(r,e,t){let n=t!=null?t():b.now(),o;return(...a)=>{let i=t!=null?t():b.now();return i-n<e||(n=i,o=r(...a)),o}}function zb(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}function kC(r,e){return G(()=>$t(me(R(r,r),e,!0)))}var Kc=class extends J.Serializable{getConfig(){return{}}},Hf=class extends Kc{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{let t=kC(e,this.axis),n=Lr(t,0,this.maxValue);return R(e,pe(n,X(dr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Hf.className="MaxNorm";J.registerClass(Hf);var qf=class extends Kc{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>pe(e,X(dr(),kC(e,this.axis))))}getConfig(){return{axis:this.axis}}};qf.className="UnitNorm";J.registerClass(qf);var Xf=class extends Kc{apply(e){return Hr(e)}};Xf.className="NonNeg";J.registerClass(Xf);var Yf=class extends Kc{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{let t=kC(e,this.axis),n=X(R(this.rate,Lr(t,this.minValue,this.maxValue)),R(1-this.rate,t));return R(e,pe(n,X(dr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Yf.className="MinMaxNorm";J.registerClass(Yf);var MP={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Yt(r){return Uc(r)}function EP(r,e={}){return oi(r,J.SerializationMap.getMap().classNameMap,e,"constraint")}function Qt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in MP?MP[r]:r,config:{}};return EP(t)}else return r instanceof Kc?r:EP(r)}function n7(r){return new Hf(r)}function o7(r){return new qf(r)}function s7(){return new Xf}function a7(r){return new Yf(r)}var tF={};Qe(tF,{constant:()=>d7,glorotNormal:()=>k7,glorotUniform:()=>T7,heNormal:()=>I7,heUniform:()=>C7,identity:()=>y7,leCunNormal:()=>v7,leCunUniform:()=>w7,ones:()=>f7,orthogonal:()=>S7,randomNormal:()=>g7,randomUniform:()=>h7,truncatedNormal:()=>b7,varianceScaling:()=>x7,zeros:()=>m7});var LP=["channelsFirst","channelsLast"],$P=["nearest","bilinear"],BP=["valid","same","causal"],OP=["max","avg"],zP=["sum","mul","concat","ave"];var Vc=new Map;function jt(r){si(LP,"DataFormat",r)}function GP(r){si($P,"InterpolationFormat",r)}function fn(r){si(BP,"PaddingMode",r)}function IC(r){si(OP,"PoolMode",r)}var Qf=[],WP="/";function wa(r,e){Qf.push(r);try{let t=e();return Qf.pop(),t}catch(t){throw Qf.pop(),t}}function i7(){return Qf.length===0?"":Qf.join(WP)+WP}function Gb(r){if(!UP(r))throw new Error("Not a valid tensor name: '"+r+"'");return i7()+r}function Wb(r){if(!UP(r))throw new Error("Not a valid tensor name: '"+r+"'");Vc.has(r)||Vc.set(r,0);let e=Vc.get(r);if(Vc.set(r,Vc.get(r)+1),e>0){let t=`${r}_${e}`;return Vc.set(t,1),t}else return r}var u7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function UP(r){return!!r.match(u7)}function KP(r){return r===parseInt(r.toString(),10)}function Ls(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function ip(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function Sa(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function en(r,e){if(e<r)throw new O(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}function up(r,e){return Q(r,e)}function iu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),$(r,t)}function VP(r,e){return G(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=iu(r,1);return Ub(t,[1,e,1])})}function jP(r){let e=[Ls(r.shape)];return $(r,e)}function HP(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],Ls(r.shape,1)];return $(r,e)}function uu(r,e,t){return G(()=>{switch(r.rank){case 1:return Of(r,e,t);case 2:return Ib(r,[e,0],[t,r.shape[1]]);case 3:return zf(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Gc(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Ue(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Ue(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function CC(r,e,t){return G(()=>{switch(r.rank){case 1:return Of(r,e,t);case 2:return Ib(r,[0,e],[r.shape[0],t]);case 3:return zf(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Gc(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Zf(r,e,t,n){return G(()=>{switch(r.rank){case 1:return Of(r,e,t);case 2:switch(n){case 1:return uu(r,e,t);case 2:return CC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return uu(r,e,t);case 2:return zf(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return CC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return uu(r,e,t);case 2:return Gc(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Gc(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return CC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function jc(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),lt(r,e)}function vC(r,e){switch(r.rank){case 1:return II([r,e]);case 2:return CI([r,e],0);case 3:return vI([r,e],0);case 4:return wI([r,e],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Ub(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new O(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Vr(r,e)}function Hc(r,e=0,t=1,n,o){return kb(r,e,t,n,o)}function $s(r,e,t,n){if(r.rank<2||e.rank<2)throw new Pe(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Pe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2){let o=!1,s=!1;return Ds.matMul({a:r,b:e,transposeA:o,transposeB:s,bias:n?wC(r.rank,n,mn()):null,activation:t})}else{let o=r.shape.slice(),s=o.pop();r=$(r,[-1,s]);let a=e.shape.slice(),i=a.pop(),u=a.pop(),l=[...a,i],p=Array.from({length:e.rank},(d,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=$(qe(e,p),[u,-1]);let c=[...o,...l],m=!1,f=!1;return $(Ds.matMul({a:r,b:e,transposeA:m,transposeB:f,bias:n?wC(r.rank,n,mn()):null,activation:t}),c)}}function Kb(r,e,t){return G(()=>(Array.isArray(e)?e=Wt(e,"int32"):e=Q(e,"int32"),Ja(r,e,t)))}function lp(r){return R(r,r)}function wC(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new O(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1,1,1]):$(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,1,1,n[0]]):$(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1,1]):$(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,1,n[0]]):$(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1]):$(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,n[0]]):$(e,[1].concat(n))}else if(r<3)return e;throw new O(`Unsupported input rank by biasAdd: ${e.rank}`)}function dn(r,e,t){return G(()=>(t==null&&(t=mn()),jt(t),X(r,wC(r.rank,e,t))))}function qP(r,e=1){if(e!==1)throw new Pe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return eu(r)}function XP(r){return G(()=>pe(r,X(zt(r),1)))}function Vb(r,e,t,n){return G(()=>K0(r,e,t,n))}function YP(r){return G(()=>{let e=X(.5,R(.2,r));return Lr(e,0,1)})}function qu(r,e,t=!1){return t?r():e()}var QP=["fanIn","fanOut","fanAvg"],ZP=["normal","uniform","truncatedNormal"];function l7(r){si(QP,"FanMode",r)}function p7(r){si(ZP,"Distribution",r)}var En=class extends J.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Jf=class extends En{apply(e,t){return Tt(e,t)}};Jf.className="Zeros";J.registerClass(Jf);var pp=class extends En{apply(e,t){return mr(e,t)}};pp.className="Ones";J.registerClass(pp);var ed=class extends En{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return G(()=>R(ce(this.value),mr(e,t)))}getConfig(){return{value:this.value}}};ed.className="Constant";J.registerClass(ed);var td=class extends En{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return va(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};td.className="RandomUniform";J.registerClass(td);var rd=class extends En{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`randomNormal does not support dType ${t}.`);return Hc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};rd.className="RandomNormal";J.registerClass(rd);var nd=class extends En{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`truncatedNormal does not support dType ${t}.`);return Xl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};nd.className="TruncatedNormal";J.registerClass(nd);var od=class extends En{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return G(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,$c(e[0]))})}getConfig(){return{gain:this.gain}}};od.className="Identity";J.registerClass(od);function c7(r,e="channelsLast"){let t,n;if(jt(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=Ls(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=Ls(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=Ls(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var tn=class extends En{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,l7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,p7(this.distribution),this.seed=e.seed}apply(e,t){let n=c7(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`${this.getClassName()} does not support dType ${t}.`);return Xl(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return va(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};tn.className="VarianceScaling";J.registerClass(tn);var qc=class extends tn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return tn.className}};qc.className="GlorotUniform";J.registerClass(qc);var Xc=class extends tn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return tn.className}};Xc.className="GlorotNormal";J.registerClass(Xc);var Yc=class extends tn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return tn.className}};Yc.className="HeNormal";J.registerClass(Yc);var Qc=class extends tn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return tn.className}};Qc.className="HeUniform";J.registerClass(Qc);var Zc=class extends tn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return tn.className}};Zc.className="LeCunNormal";J.registerClass(Zc);var Jc=class extends tn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return tn.className}};Jc.className="LeCunNormal";J.registerClass(Jc);var sd=class extends En{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Pe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return G(()=>{if(e.length<2)throw new Pe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=Hc(n,0,1,"float32"),s=F2.gramSchmidt(o);return e[0]>e[1]&&(s=qe(s)),R(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};sd.className="Orthogonal";J.registerClass(sd);var JP={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function eF(r,e={}){return oi(r,J.SerializationMap.getMap().classNameMap,e,"initializer")}function Ft(r){return Uc(r)}function Ct(r){if(typeof r=="string"){let e=r in JP?JP[r]:r;if(e==="GlorotNormal")return new Xc;if(e==="GlorotUniform")return new qc;if(e==="HeNormal")return new Yc;if(e==="HeUniform")return new Qc;if(e==="LeCunNormal")return new Zc;if(e==="LeCunUniform")return new Jc;{let t={};return t.className=e,t.config={},eF(t)}}else return r instanceof En?r:eF(r)}function m7(){return new Jf}function f7(){return new pp}function d7(r){return new ed(r)}function h7(r){return new td(r)}function g7(r){return new rd(r)}function b7(r){return new nd(r)}function y7(r){return new od(r)}function x7(r){return new tn(r)}function T7(r){return new qc(r)}function k7(r){return new Xc(r)}function I7(r){return new Yc(r)}function C7(r){return new Qc(r)}function v7(r){return new Zc(r)}function w7(r){return new Jc(r)}function S7(r){return new sd(r)}var LF={};Qe(LF,{Layer:()=>Ke,RNN:()=>Bs,RNNCell:()=>tl,activation:()=>qQ,add:()=>nZ,alphaDropout:()=>zZ,average:()=>oZ,averagePooling1d:()=>gv,averagePooling2d:()=>bv,averagePooling3d:()=>yv,avgPool1d:()=>fZ,avgPool2d:()=>hZ,avgPool3d:()=>bZ,avgPooling1d:()=>dZ,avgPooling2d:()=>gZ,avgPooling3d:()=>yZ,batchNormalization:()=>pZ,bidirectional:()=>FZ,concatenate:()=>sZ,conv1d:()=>OQ,conv2d:()=>zQ,conv2dTranspose:()=>GQ,conv3d:()=>WQ,conv3dTranspose:()=>UQ,convLstm2d:()=>AZ,convLstm2dCell:()=>NZ,cropping2D:()=>VQ,dense:()=>XQ,depthwiseConv2d:()=>HQ,dot:()=>lZ,dropout:()=>YQ,elu:()=>MQ,embedding:()=>rZ,flatten:()=>ZQ,gaussianDropout:()=>OZ,gaussianNoise:()=>BZ,globalAveragePooling1d:()=>xZ,globalAveragePooling2d:()=>TZ,globalMaxPool1d:()=>EZ,globalMaxPool2d:()=>RZ,globalMaxPooling1d:()=>FF,globalMaxPooling2d:()=>MF,gru:()=>IZ,gruCell:()=>CZ,input:()=>BC,inputLayer:()=>FQ,layerNormalization:()=>cZ,leakyReLU:()=>RQ,lstm:()=>vZ,lstmCell:()=>wZ,masking:()=>GZ,maxPool1d:()=>LZ,maxPool2d:()=>$Z,maxPooling1d:()=>EF,maxPooling2d:()=>RF,maxPooling3d:()=>kZ,maximum:()=>aZ,minimum:()=>iZ,multiply:()=>uZ,permute:()=>tZ,prelu:()=>LQ,reLU:()=>EQ,repeatVector:()=>JQ,reshape:()=>eZ,rnn:()=>DZ,separableConv2d:()=>KQ,simpleRNN:()=>SZ,simpleRNNCell:()=>_Z,softmax:()=>$Q,spatialDropout1d:()=>QQ,stackedRNNCells:()=>PZ,thresholdedReLU:()=>BQ,timeDistributed:()=>MZ,upSampling2d:()=>jQ,zeroPadding2d:()=>mZ});var _7=0;function jb(){return _7++}var Hb={};function Xu(r=""){return r in Hb||(Hb[r]=0),Hb[r]+=1,r+Hb[r].toString()}function qb(r){return Array.isArray(r)&&Array.isArray(r[0])}function em(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function We(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function tt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function tm(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var rF="Variable",Xb=class{constructor(e,t="float32",n=rF,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=jb(),n=n??rF,this.originalName=Gb(n),this.name=Wb(this.originalName),this.trainable_=o,this.constraint=s,this.val=iC(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),A7(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function A7(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function ad(r){return r.map(e=>e.read())}function rm(r){r.forEach(e=>{e[0].write(e[1])})}var Mt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},hn=class{constructor(e,t,n,o,s,a,i){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=jb(),a!=null&&(this.originalName=Gb(a),this.name=Wb(this.originalName)),this.rank=t.length}},N7=0,Yu=class{constructor(e,t){this.callArgs=t;this.id=N7++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},D7=0,Ke=class extends J.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=D7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Ms(n)+"_"+Xu(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Jr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Nr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Nr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Yn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Yn(`Layer ${this.name} is not connected, no input to return.`);return Nr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Yn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Yn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Nr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=St(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=St(this.inputSpec);if(e.length!==t.length)throw new O(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let u in s.axes){let l=Number(u),p=s.axes[u],c=l>=0?i[l]:i[i.length+l];if(p!=null&&[p,null].indexOf(c)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${p} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let u=s.shape[i],l=o.shape[i];if(u!=null&&l!=null&&u!==l)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=St(e),o=!0;for(let a of n)if(!(a instanceof hn)){o=!1;break}let s=!0;for(let a of n)if(a instanceof hn){s=!1;break}if(o===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return wa(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of St(e))a.push(i.shape);this.build(Nr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=St(a),u=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(a=Nr(u),this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=P7(e),i=this.computeOutputShape(a),u,l=F7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?u=i.map((p,c)=>new hn(l,p,this,St(e),t,this.name,c)):u=new hn(l,i,this,St(e),t,this.name),this.addInboundNode(e,u,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Yn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Yn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Jr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return tm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ad(e?this.trainableWeights:this.weights)}setWeights(e){G(()=>{let t=this.weights;if(t.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=ad(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],u=e[s];if(!b.arraysEqual(a.shape,u.shape))throw new O(`Layer weight shape ${a.shape} not compatible with provided weight shape ${u.shape}`);n.push([i,u])}rm(n)})}addWeight(e,t,n,o,s,a,i,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=u!=null?u():Ct("zeros"));let l=o.apply(t,n),p=new Xb(l,n,e,a,i);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(p.read())),a==null&&(a=!0),a?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=St(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let u=St(e);t=St(t),n=St(n),o=St(o),s=em(s),a=em(a);let l=[],p=[],c=[];for(let m of u)l.push(m.sourceLayer),p.push(m.nodeIndex),c.push(m.tensorIndex);new Yu({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:c,inputTensors:u,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function P7(r){r=St(r);let e=[];for(let t of r)e.push(t.shape);return Nr(e)}function F7(r){return"float32"}function SC(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],u=n.nodeIndices[s],l=SC(a,i,u);for(let p of l)o.indexOf(p)===-1&&o.push(p)}return o}}}var ai=class extends Ke{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Xu("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new hn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Yu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};ai.className="InputLayer";J.registerClass(ai);function Yb(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new ai({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function ii(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Ee(n)}}function Qb(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var nF;(function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"})(nF||(nF={}));var M7=125,Qu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},_C=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},oF=class extends Qu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=G(()=>X(this.totals[o],R(s,n)));this.totals[o]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:G(()=>{let o=R(pe(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Vt(t[n])}))}},AC=class extends Qu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let u=a[i];e.push(u.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},NC=class extends Qu{constructor(e,t){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||lC,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=M7),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=FP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await ii(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ii(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await ii(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ii(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await ii(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await ii(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ii(e),await this.trainEnd(e))}};function Zb(r,e){return r==null&&(r={}),r instanceof Qu?[r]:Array.isArray(r)&&r[0]instanceof Qu?r:St(r).map(n=>new NC(n,e))}var _a=class{constructor(){}static registerCallbackConstructor(e,t){b.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),_a.checkForDuplicate(t),_a.constructors[e]==null&&(_a.constructors[e]=[]),_a.constructors[e].push(t)}static checkForDuplicate(e){for(let t in _a.constructors)_a.constructors[+t].forEach(o=>{if(o===e)throw new O("Duplicate callback constructor.")})}static clear(){_a.constructors={}}static createCallbacks(e){let t=[];for(let n in _a.constructors){let o=+n;e>=o&&t.push(..._a.constructors[o])}return t.map(n=>new n)}},id=_a;id.constructors={};function Jb(r,e,t,n,o,s,a,i,u){let l=new AC,p=[new oF,...id.createCallbacks(e)];r!=null&&p.push(...r),p.push(l);let c=new _C(p);return c.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:u}),{callbackList:c,history:l}}function gn(r,e={},t=!1){return oi(r,J.SerializationMap.getMap().classNameMap,e,"layer",t)}function ud(r,e){return G(()=>{r.dtype!=="float32"&&(r=Q(r,"float32"));let t=me(lp(r),e,!0),n=Ca(t.shape,dr()),o=$t(Xn(t,n));return pe(r,o)})}function ui(r,e){return G(()=>Lt(lp(ue(e,r)),-1))}function nm(r,e){return G(()=>Lt(zt(ue(e,r)),-1))}function Zu(r,e){return G(()=>{let t=ue(r,e),n=Lr(zt(r),dr(),Number.MAX_VALUE),o=zt(pe(t,n));return R(100,Lt(o,-1))})}function E7(r,e){return G(()=>{let t=Lr(e,dr(),Number.MAX_VALUE),n=$r(X(1,t)),o=Lr(r,dr(),Number.MAX_VALUE),s=$r(X(1,o));return Lt(lp(ue(n,s)),-1)})}function R7(r,e){return G(()=>{let t=Xn(0,ue(1,R(r,e)));return Lt(lp(t),-1)})}function L7(r,e){return G(()=>{let t=Xn(0,ue(1,R(r,e)));return Lt(t,-1)})}function $7(r,e){return G(()=>{let t=me(R(r,e),-1),n=Qr(R(ue(1,r),e),-1);return Xn(0,X(1,ue(n,t)))})}function B7(r,e){return G(()=>{let t=Math.log(2),n=ue(e,r),o=ue(X(n,ei(R(-2,n))),t);return Lt(o,-1)})}function cp(r,e,t=!1){return G(()=>{if(t)e=jl(e);else{let n=me(e,e.shape.length-1,!0);e=pe(e,n)}return e=Lr(e,dr(),1-dr()),et(me(R(Q(r,"float32"),$r(e)),e.shape.length-1))})}function om(r,e,t=!1){return G(()=>{let n=Q(tu(jP(r)),"int32");e=Lr(e,dr(),1-dr());let o=e.shape,s=$(Xi(n,o[o.length-1]),o);return cp(s,e,t)})}function O7(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return G(()=>{let t=Hr(e),n=et(zt(e));return X(ue(t,R(e,r)),zl(cr(n)))})}function sm(r,e){return G(()=>{let t;return t=Lr(e,dr(),1-dr()),t=$r(pe(t,ue(1,t))),Lt(O7(r,t),-1)})}function z7(r,e){return G(()=>{let t=Lr(r,dr(),1),n=Lr(e,dr(),1);return me(R(r,$r(pe(t,n))),-1)})}function G7(r,e){return G(()=>{let t=$r(X(dr(),e));return Lt(ue(e,R(r,t)),-1)})}function ld(r,e){return G(()=>{let t=ud(r,-1),n=ud(e,-1),o=R(t,n);return et(me(o,-1))})}var pd={meanSquaredError:ui,meanAbsoluteError:nm,meanAbsolutePercentageError:Zu,meanSquaredLogarithmicError:E7,squaredHinge:R7,hinge:L7,categoricalHinge:$7,logcosh:B7,categoricalCrossentropy:cp,sparseCategoricalCrossentropy:om,binaryCrossentropy:sm,kullbackLeiblerDivergence:z7,poisson:G7,cosineProximity:ld};function ey(r){if(typeof r=="string"){if(r in pd)return pd[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(e)}else return r}function cd(r,e){return G(()=>{let t=R(.5,Ar(e)),n=up(nr(e,t),r.dtype);return Lt(Kr(r,n),-1)})}function md(r,e){return G(()=>up(Kr(Qi(r,-1),Qi(e,-1)),"float32"))}function sF(r,e){return G(()=>Q(me(jr(Kr(r,1),Kr(e,1))),"float32"))}function W7(r,e){return G(()=>Q(me(jr(Kr(r,1),Kr(e,0))),"float32"))}function U7(r,e){return G(()=>Q(me(jr(Kr(r,0),Kr(e,1))),"float32"))}function DC(r,e){return G(()=>{let t=sF(r,e),n=U7(r,e),o=X(t,n);return Q(Gt(nr(o,0),pe(t,o),0),"float32")})}function aF(r,e){return G(()=>{let t=sF(r,e),n=W7(r,e),o=X(t,n);return Q(Gt(nr(o,0),pe(t,o),0),"float32")})}function ty(r,e){return sm(r,e)}function ry(r,e){return r.rank===e.rank&&(r=cn(r,[r.rank-1])),e=Qi(e,-1),e.dtype!==r.dtype&&(e=Q(e,r.dtype)),Q(Kr(r,e),"float32")}var K7=ui,V7=ui,j7=nm,H7=nm,q7=Zu,X7=Zu,fd=cp,Y7=ld,PC=om,ny={binaryAccuracy:cd,categoricalAccuracy:md,precision:DC,categoricalCrossentropy:fd,sparseCategoricalCrossentropy:PC,mse:K7,MSE:V7,mae:j7,MAE:H7,mape:q7,MAPE:X7,cosine:Y7};function iF(r){if(typeof r=="string"&&r in ny)return ny[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function dd(r){if(Yo(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(pd))if(pd[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(ny))if(ny[t]===r){e=t;break}return e!==void 0?e:r.name}}function uF(r){let e={Adagrad:()=>ap.adagrad(.01),Adadelta:()=>ap.adadelta(1,.95,dr()),Adam:()=>ap.adam(.001,.9,.999,dr()),Adamax:()=>ap.adamax(.002,.9,.999,dr(),0),RMSProp:()=>ap.rmsprop(.001,.9,0,dr()),SGD:()=>ap.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new O(`Unknown Optimizer ${r}`)}var lF=1*1024*1024;function FC(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!MC(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>lF&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${lF}.`)}}function MC(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!MC(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!MC(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function pF(r,e,t,n=console.log){let o=Z7(r),s=["Layer (type)","Output shape","Param #"];o?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(p=>Math.floor(e*p)));let a;if(!o){s.push("Receives inputs"),a=[];for(let p in r.nodesByDepth)a.push(...r.nodesByDepth[p])}n("_".repeat(e)),oy(s,t,n),n("=".repeat(e));let i=r.layers;for(let p=0;p<i.length;++p)o?J7(i[p],t,n):eQ(i[p],t,a,n),n((p===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let u=Q7(r),l=tm(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(e))}function Q7(r){let e;return r.collectedTrainableWeights!=null?e=tm(r.collectedTrainableWeights):e=tm(r.trainableWeights),e}function Z7(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function oy(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function J7(r,e,t){let n;try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let o=r.name,s=r.getClassName(),a=[`${o} (${s})`,n,r.countParams().toString()];oy(a,e,t)}function eQ(r,e,t,n){let o;try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let s=[];for(let p of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(p)===-1))for(let c=0;c<p.inboundLayers.length;++c){let m=p.inboundLayers[c].name,f=p.nodeIndices[c],d=p.tensorIndices[c];s.push(`${m}[${f}][${d}]`)}let a=r.name,i=r.getClassName(),u=s.length===0?"":s[0],l=[`${a} (${i})`,o,r.countParams().toString(),u];oy(l,e,n);for(let p=1;p<s.length;++p)oy(["","","",s[p]],e,n)}function cF(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function mp(r,e){if(r===null)return null;if(typeof r=="string")return au(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];cF(e,o,s)?t.push(s):t.push(mp(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=au(n);t[s]=mp(o,s)}}return t}}function sy(r,e){if(r==null)return null;if(typeof r=="string")return Ms(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];cF(e,o,s)?t.push(s):t.push(sy(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=Ms(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=sy(o,n)}return t}}var hd="0.0.0";function tQ(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return Q(e,r.dtype)}catch{throw new O(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Aa=class{constructor(e){this.id2Value={};this.id2Mask={};this.name2Id={};if(e instanceof Aa)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=tQ(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new O(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof hn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ee(this.id2Mask)}},EC={},mF={};function fp(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(d=>d.name),u=[],l=e.names();for(let d of i)l.indexOf(d)!==-1?u.push(e.getValue(d)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let p=i.join(",")+"|"+e.names().join(","),c,m;if(EC[p]==null){let d=rQ(a,e);c=d.sorted,m=d.recipientCounts,EC[p]=c,mF[p]=m}c=EC[p],m={},o||Object.assign(m,mF[p]);let f=new Aa(e);for(let d=0;d<c.length;++d){if(n!=null){let E=gf().numTensors;E>n.maxNumTensors&&(n.maxNumTensors=E),E<n.minNumTensors&&(n.minNumTensors=E)}let h=c[d],g=h.sourceLayer;if(g instanceof ai)continue;let y=[],x=[],T=[],k=!1;for(let E of h.inputs){let L=f.getValue(E),U=f.getMask(E);y.push(L),x.push(U),U!=null&&(k=!0),o||(m[E.name]--,m[E.name]===0&&!e.hasKey(E)&&i.indexOf(E.name)===-1&&!L.isDisposed&&E.sourceLayer.stateful!==!0&&T.push(L))}k&&(t=t||{},t.mask=x[0]);let v=St(g.apply(y,t)),P=null;g.supportsMasking&&(P=g.computeMask(y,x));let A=oQ(h),F=Array.isArray(A)?A:[A];for(let E=0;E<F.length;++E){f.hasKey(F[E])||f.add(F[E],v[E],Array.isArray(P)?P[0]:P);let L=i.indexOf(F[E].name);L!==-1&&(u[L]=v[E])}o||Ee(T)}return f.disposeMasks(),s?u:u[0]}function rQ(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=fF(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=fF(s,e);for(let u of a)o.has(u.name)||(t.push(u),o.add(u.name));for(let u in i)n[u]==null&&(n[u]=new Set),i[u].forEach(l=>n[u].add(l))}}return{sorted:t,recipientCounts:nQ(n)}}function nQ(r){let e={};for(let t in r)e[t]=r[t].size;return e}function fF(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let u=a[a.length-1]===s.length-1;if(i.inputs.length===0||u)s.pop(),n.push(i),t.add(i.name),u&&a.pop();else{a.push(s.length-1);for(let l of i.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(i.name),!t.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function oQ(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var Qo=class extends Ke{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let x=this.getClassName().toLowerCase();this.name=Xu(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Rs(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Rs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let x of this.outputs){let T=x.sourceLayer,k=x.nodeIndex,v=x.tensorIndex;this.outputLayers.push(T),this.outputLayersNodeIndices.push(k),this.outputLayersTensorIndices.push(v)}for(let x of this.inputs){let T=x.sourceLayer,k=x.nodeIndex,v=x.tensorIndex;Yo(k===0,"input layer has >1 nodes"),Yo(v===0,"input layer has >1 tensors"),this.inputLayers.push(T),this.inputLayersNodeIndices.push(k),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){let T=this.inputLayers[x];if(!(T instanceof ai))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${T.getClassName()}.`);this.inputNames.push(T.name),this.feedInputShapes.push(T.batchInputShape),this.feedInputNames.push(T.name)}for(let x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);let t={},n={},o={},s={},a={},i=[],u=(x,T,k,v,P,A)=>{(v==null||P==null||A==null)&&(v=x.sourceLayer,P=x.nodeIndex,A=x.tensorIndex);let F=v.inboundNodes[P];if(k.indexOf(F)!==-1)throw new Jr(`The tensor ${x.name} at layer "${v.name}" is part of a cycle.`);if(T.indexOf(F)!==-1)return;this.containerNodes.add(Qo.nodeKey(v,P)),v.id in a||(a[v.id]=Object.keys(a).length),k.indexOf(F)===-1&&k.push(F);let E=F.inboundLayers.length;for(let L=0;L<E;L++){let U=F.inputTensors[L],K=F.inboundLayers[L],B=F.nodeIndices[L],V=F.tensorIndices[L];u(U,T,k,K,B,V)}for(T.push(F);k.indexOf(F)>=0;)k.splice(k.indexOf(F),1);i.push(F)},l=[],p=[];for(let x of this.outputs)u(x,l,p);let c=i.slice().reverse();for(let x of c){n[x.id]=x,x.id in t||(t[x.id]=0);let T=t[x.id],k=o[x.outboundLayer.id]==null?0:o[x.outboundLayer.id];T=Math.max(T,k),o[x.outboundLayer.id]=T,s[x.outboundLayer.id]=x.outboundLayer,t[x.id]=T;for(let v=0;v<x.inboundLayers.length;v++){let P=x.inboundLayers[v],A=x.nodeIndices[v],F=P.inboundNodes[A],E=t[F.id]==null?0:t[F.id];t[F.id]=Math.max(T+1,E),n[F.id]=F}}let m={};for(let x in t){let T=t[x];T in m||(m[T]=[]),m[T].push(n[x])}let f={};for(let x in o){let T=o[x];T in f||(f[T]=[]),f[T].push(s[x])}let d=Object.keys(f).map(x=>parseInt(x,10)).sort(jf);this.layers=[];for(let x of d){let T=f[x];T.sort((k,v)=>{let P=a[k.id],A=a[v.id];return P<A?-1:P>A?1:0});for(let k of T)k instanceof Qo&&this.internalContainerRefs.push(k),this.layers.push(k)}this.layersByDepth=f,d=Object.keys(m).map(x=>parseInt(x,10)).sort(jf);let h=this.inputs.slice(),g=[];for(let x of d)for(let T of m[x]){let k=T.outboundLayer;if(k!=null){for(let v of T.inputTensors)if(h.indexOf(v)===-1)throw new Jr(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${k.name}". The following previous layers were accessed without issue: ${g}`);for(let v of T.outputTensors)h.push(v);g.push(k.name)}}this.nodesByDepth=m;let y=this.layers.map(x=>x.name);for(let x of y){let T=y.filter(k=>k===x).length;if(T!==1)throw new Jr(`The name "${x}" is used ${T} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Yu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new O(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let u=a.split("/");i=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new O(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new O(`${a.length} of ${o} weights are not set: ${a}`)}rm(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${hd}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=sy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return G(()=>{e=St(e);let n=new Aa;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return fp(this.outputs,n,t)})}computeMask(e,t){return G(()=>{e=St(e);let n;return t==null?n=Fs(null,e.length):n=St(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=em(e);if(t.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let u=this.inputLayers[i],l=t[i],p=u.name+"_0_0";n[p]=l}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(jf);if(o.length>1)for(let i of o){let u=this.nodesByDepth[i];for(let l of u){let p=l.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(p.id)!==-1)continue;let c=[];for(let h=0;h<l.inboundLayers.length;h++){let g=l.inboundLayers[h],y=l.nodeIndices[h],x=l.tensorIndices[h],T=`${g.name}_${y}_${x}`,k=n[T];c.push(k)}let m=p.computeOutputShape(Nr(c)),f=em(m),d=p.inboundNodes.indexOf(l);for(let h=0;h<f.length;h++){let g=`${p.name}_${d}_${h}`;n[g]=f[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let u=this.outputLayers[i],l=this.outputLayersNodeIndices[i],p=this.outputLayersTensorIndices[i],c=`${u.name}_${l}_${p}`;a.push(c)}for(let i=0;i<a.length;i++){let u=a[i];Yo(u in n),s.push(n[u])}return Nr(s)}runInternalGraph(e,t){t==null&&(t=Fs(null,e.length));let n={};for(let u=0;u<this.inputs.length;++u){let l=this.inputs[u],p=e[u],c=t[u];n[l.id]=[p,c]}let o=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(jf);for(let u of o){let l=this.nodesByDepth[u];for(let p of l){let c=p.outboundLayer,m=p.inputTensors,f=p.outputTensors,d=new Array;for(let h of m)h.id in n&&d.push(n[h.id]);if(d.length===m.length){let h={},g,y,x,T;if(p.callArgs!=null&&(h=p.callArgs),d.length===1){let[k,v]=d[0];h.mask==null&&(h.mask=v),x=St(c.call(k,h)),T=St(c.computeMask(k,v)),g=[k],y=[v]}else g=d.map(k=>k[0]),y=d.map(k=>k[1]),h.mask==null&&(h.mask=y),x=St(c.call(g,h)),T=St(c.computeMask(g,y));if(c.activityRegularizer)throw new Pe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let k=0;k<f.length;++k){let v=f[k],P=x[k],A=T[k];n[v.id]=[P,A]}}}}let s=[],a=[],i=[];for(let u of this.outputs){Yo(u.id in n,`Could not compute output ${u.name} : ${u.id}`);let[l,p]=n[u.id];i.push(l.shape),s.push(l),a.push(p)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof Qo?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=Qo.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new O("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new O(`No such layer: ${e}`)}calculateLosses(){return G(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=Qo.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),u=a.getConfig(),l=[];for(let c=0;c<a.inboundNodes.length;c++){let m=a.inboundNodes[c],f=Qo.nodeKey(a,c),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let h=[];for(let g=0;g<m.inboundLayers.length;g++){let y=m.inboundLayers[g],x=m.nodeIndices[g],T=m.tensorIndices[g],k=Qo.nodeKey(y,x),v=t[k];v==null&&(v=0),h.push([y.name,v,T,d])}l.push(h)}}}let p={};p.name=a.name,p.className=i,p.config=u,p.inboundNodes=l,n.push(p)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],u=this.inputLayersNodeIndices[a],l=Qo.nodeKey(i,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let c=this.inputLayersTensorIndices[a];o.push([i.name,p,c])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],u=this.outputLayersNodeIndices[a],l=Qo.nodeKey(i,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let c=this.outputLayersTensorIndices[a];s.push([i.name,p,c])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function u(g,y){let x=[],T;for(let k of y){let v=k[0],P=k[1],A=k[2];if(T=k[3]==null?{}:k[3],!(v in s)){i(g,y);return}let F=s[v];if(F.inboundNodes.length<=P){i(g,y);return}let E=F.inboundNodes[P];x.push(E.outputTensors[A])}x.length>0&&g.apply(Nr(x),T)}function l(g){let y=g.name,x=gn(g,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(o),s[y]=x,g.inboundNodes.forEach(k=>{if(!(k instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${k}`);i(x,k)})}let p=t.name,c=t.layers;for(let g of c)l(g);for(;!DP(a);)for(let g of c){let y=s[g.name];if(y.name in a){let x=a[y.name];delete a[y.name];for(let T of x)u(y,T)}}let m=[],f=[],d=t.inputLayers;for(let g of d){let y=g[0],x=g[1],T=g[2];Yo(y in s);let v=s[y].inboundNodes[x].outputTensors;m.push(v[T])}let h=t.outputLayers;for(let g of h){let y=g[0],x=g[1],T=g[2];Yo(y in s);let v=s[y].inboundNodes[x].outputTensors;f.push(v[T])}return new e({inputs:m,outputs:f,name:p})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){G(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function sQ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function ay(r,e){return sQ(r,e,"classWeight")}async function iy(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=G(()=>{if(r.shape.length===1)return Nn(r);if(r.shape.length===2){if(r.shape[1]>1)return Qi(r,1);if(r.shape[1]===1)return $(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Ee(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Wt(a,"float32")}else return null}function dF(r,e){return R(r,e)}var aQ=32;function hF(r,e){let t,n,o=e;t=o.xs,n=o.ys,b.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=gF("input",r.inputNames,t),a=gF("output",r.outputNames,n),i=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)b.assert(s[u].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let u=0;u<a.length;u++)b.assert(a[u].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function gF(r,e,t){if(t instanceof Ye)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function iQ(r){if(r.length===3)throw new Pe("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function bF(r,e,t){let n=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(yF(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=iQ(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let p=Zb(t.callbacks,t.yieldEvery),c=t.verbose==null?1:t.verbose,{callbackList:m,history:f}=Jb(p,c,t.epochs,null,null,uQ(e,t),null,o,l);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let d=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;d<t.epochs;){let g={};await m.onEpochBegin(d);let y=0,x=0;for(n||(h=await e.iterator());n?y<t.batchesPerEpoch:!0;){let T=await h.next();if(n&&T.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(T.value!=null){let{xs:k,ys:v}=hF(r,T.value),P={};P.batch=x,P.size=k[0].shape[0],await m.onBatchBegin(x,P);let A=[];if(t.classWeight!=null){let L=ay(t.classWeight,r.outputNames);for(let U=0;U<L.length;++U)A.push(await iy(v[U],null,L[U]))}let F=k.concat(v).concat(A),E=i(F);Ee(F);for(let L=0;L<u.length;++L){let U=u[L],K=E[L];P[U]=K,Vt(K)}await m.onBatchEnd(x,P),Qb(P),x++,y++}if(n?y>=t.batchesPerEpoch:T.done){if(o){let k;yF(t.validationData)?k=St(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):k=St(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?aQ:t.validationBatchSize,verbose:0}));for(let v=0;v<r.metricsNames.length;++v)g[`val_${r.metricsNames[v]}`]=k[v]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(d,g),d++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function uQ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function yF(r){return typeof r.iterator=="function"}function lQ(r){return typeof r.next=="function"}async function xF(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Pe("Verbose mode is not implemented yet.");b.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=lQ(e)?e:await e.iterator(),i=0,u=0;for(;n?u<t.batches:!0;){let l=await a.next();if(s=G(()=>{if(l.value){let{xs:p,ys:c}=hF(r,l.value),m=p.concat(c),f=G(()=>o(m));if(Ee(m),u===0)for(let h=0;h<f.length;++h)s.push(ce(0));let d=m[0].shape[0];for(let h=0;h<f.length;++h){let g=f[h],y=s[h];s[h]=G(()=>X(s[h],R(d,g))),u>0&&Ee(y)}Ee(f),i+=d,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let p=s[l];s[l]=pe(s[l],i),Ee(p)}return Nr(s)}function uy(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function am(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>uu(n,e,t-e)):uu(r,e,t-e)}function ly(r,e){return G(()=>r==null?null:Array.isArray(r)?r.map(t=>ly(t,e)):Kb(r,e.dtype==="int32"?e:Q(e,"int32")))}function py(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function pQ(r,e,t,n,o,s,a,i,u,l,p,c,m,f,d){o==null&&(o=32),s==null&&(s=1),p==null&&(p=!0),m==null&&(m=0);let h=!1;if(u!=null&&l!=null&&(h=!0),d!=null&&(h=!0,f==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,f,"steps_per_epoch"),y;g!=null&&(y=en(0,g)),a==null&&(a=1);let{callbackList:x,history:T}=Jb(i,a,s,m,g,f,o,h,c);x.setModel(r),r.history=T,await x.onTrainBegin(),r.stopTraining_=!1;for(let k=m;k<s;++k){await x.onEpochBegin(k);let v={};if(f!=null)throw new Pe("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Pe("batch shuffling is not implemneted yet");p&&b.shuffle(y);let P=Wt(y),A=py(g,o);for(let F=0;F<A.length;++F){let E={};if(await x.onBatchBegin(F,E),G(()=>{let L=A[F][0],U=A[F][1],K=uu(P,L,U-L);E.batch=F,E.size=U-L;let B=ly(t,K),V=e(B);for(let j=0;j<n.length;++j){let H=n[j],ee=V[j];E[H]=ee,Vt(ee)}if(F===A.length-1&&h){let j=r.testLoop(u,l,o);for(let H=0;H<n.length;++H){let ee=n[H],Y=j[H];Vt(Y),v["val_"+ee]=Y}}}),await x.onBatchEnd(F,E),Qb(E),r.stopTraining_)break}P.dispose()}if(await x.onEpochEnd(k,v),r.stopTraining_)break}return await x.onTrainEnd(),await r.history.syncData(),r.history}async function TF(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,u,l,p;try{let c=n.batchSize==null?32:n.batchSize;uy(c);let m=!1,f=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,m,c);o=f[0],s=f[1],p=f[2];let d=!1,h;if(n.validationData!=null&&n.validationData.length>0){if(d=!0,n.validationData.length===2)a=n.validationData[0],i=n.validationData[1];else throw n.validationData.length===3?new Pe("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let A=!0,F=await r.standardizeUserData(a,i,null,null,A,c);u=F[0],l=F[1],h=u.concat(l)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){d=!0;let A=Math.floor(o[0].shape[0]*(1-n.validationSplit)),F=o[0].shape[0];u=am(o,A,F),o=am(o,0,A),l=am(s,A,F),s=am(s,0,A),h=u.concat(l)}else n.validationSteps!=null&&(d=!0);let g=o.concat(s).concat(p);r.checkTrainableWeightsConsistency();let y=r.makeTrainFunction(),x=r.getDedupedMetricsNames(),T,k;d?(r.makeTestFunction(),T=r.testFunction,k=x.slice().concat(x.map(A=>"val_"+A))):(T=null,h=[],k=x.slice());let v=Zb(n.callbacks,n.yieldEvery);return await pQ(r,y,g,x,c,n.epochs,n.verbose,v,T,h,n.shuffle,k,n.initialEpoch,null,null)}finally{r.isTraining=!1,Ju(o,e),Ju(s,t),Ju(u,a),Ju(l,i),p!=null&&Ee(p)}}function RC(r){let e=[];r instanceof Ye&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(iu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Ju(r,e){if(r==null)return;let t=[];if(e instanceof Ye)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Ye)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function cQ(r){return r instanceof Ye}function LC(r){return Array.isArray(r)}function kF(r){return!cQ(r)&&!LC(r)}function IF(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(LC(r)&&r.length>0)a=!0;else if(kF(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(kF(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new O(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(LC(r)){if(r=r,r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new O(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=RC(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<t[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=t[a][u];if(p!=null&&p>=0&&l!==p)throw new O(`${o} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function mQ(r,e,t){let n=Rs(r.map(s=>s.shape[0]));n.sort();let o=Rs(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function fQ(r,e,t){let n=[ui,sm,cp];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===cp&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let u=s.shape.slice(1),l=i.slice(1);for(let p=0;p<u.length;++p){let c=u[p],m=l[p];if(m!=null&&c!==m)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function CF(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new O(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<t[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=t[a][u];if(p!=null&&p!==l)throw new O(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function dQ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var hQ="layers-model",Zo=class extends Qo{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");pF(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=uF(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Zr))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new O(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(ey(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>ey(i))}else{let a=ey(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],wa("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=dQ(e.metrics,this.outputNames),s=(a,i,u)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([u,a])};wa("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(l=>{let p="",c,m,f;for(let d of l){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===sm?["accuracy","acc"].indexOf(d)!==-1?m=cd:["crossentropy","ce"].indexOf(d)!==-1&&(m=ty):this.lossFunctions[a]===om?["accuracy","acc"].indexOf(d)!==-1?m=ry:["crossentropy","ce"].indexOf(d)!==-1&&(m=PC):["accuracy","acc"].indexOf(d)!==-1?m=md:["crossentropy","ce"].indexOf(d)!==-1&&(m=fd);let y;["accuracy","acc"].indexOf(d)!==-1?y="acc":["crossentropy","ce"].indexOf(d)!==-1&&(y="ce"),f=m,c=p+y}else f=iF(d),c=p+dd(d);let h;wa(c,()=>{h=f}),s(a,c,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;uy(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let u=this.testFunction,l=this.testLoop(u,i,o,n.verbose,n.steps);return Nr(l)}finally{Ju(a[0],e),Ju(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),xF(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new O(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new Aa;if(e instanceof Ye&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],e[u])}else for(let u of this.inputs){let l=e[u.name];if(l==null)throw new O(`No value is provided for the model's input ${u.name}`);a.add(u,l)}let i=fp(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Fs(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let u=a.indexOf(e[i]);if(u!==-1&&(t[i]=s[u],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return G(()=>{let o=this.checkNumSamples(e);if(n)throw new Pe("Verbose predictLoop() is not implemented yet.");let s=py(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)G(()=>{let l=s[i][0],p=s[i][1],c=am(e,l,p),m=[];if(Array.isArray(c))for(let d=0;d<c.length;++d)m.push({key:this.inputs[d],value:c[d]});else m.push({key:this.inputs[0],value:c});let f=new Aa(m);return fp(this.outputs,f)}).forEach((l,p)=>a[p].push(l));return Nr(a.map(i=>lt(i,0)))})}predict(e,t={}){let n=RC(e);CF(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return uy(o),this.predictLoop(n,o)}finally{Ju(n,e)}}predictOnBatch(e){CF(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new Jr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===om?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=IF(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=IF(t,this.feedOutputNames,s,!1,"target"),mQ(e,t,null),fQ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!=0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,u]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(o!=null){let p=ay(o,this.outputNames);l=[];for(let c=0;c<p.length;++c)l.push(await iy(u[c],null,p[c]))}return[i,u,l]}testLoop(e,t,n,o=0,s){return G(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Pe("Verbose mode is not implemented yet.");if(s!=null)throw new Pe("steps mode in testLoop() is not implemented yet");{let u=py(a,n),l=Wt(en(0,a));for(let p=0;p<u.length;++p){let c=u[p][0],m=u[p][1],f=uu(l,c,m-c),d=ly(t,f),h=e(d);if(p===0)for(let g=0;g<h.length;++g)i.push(ce(0));for(let g=0;g<h.length;++g){let y=h[g];i[g]=X(i[g],R(m-c,y))}}for(let p=0;p<i.length;++p)i[p]=pe(i[p],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;xC(e,o)>1&&(s+=`_${xC(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let c=[];for(let h=0;h<this.inputs.length;++h)c.push({key:this.inputs[h],value:n[h]});let m=new Aa(c),f=fp(this.outputs,m,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let y=this.lossFunctions[h](o[h],f[h]);s[h]!=null&&(y=dF(y,s[h]));let x=Lt(y);t.push(x),h===0?d=y:d=X(d,y)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let y=this.metricsTensors[h][0],x=this.metricsTensors[h][1];g=Lt(y(o[x],f[x]))}Vt(g),a.push(g)}return d=Lt(d),this.calculateLosses().forEach(h=>{d=X(d,h)}),d},u=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(i,l,u)].concat(a)}}makeTestFunction(){this.testFunction=e=>G(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:o[l]});let i=new Aa(a),u=fp(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let p=this.lossFunctions[l],c=Lt(p(s[l],u[l]));l===0?n=c:n=X(n,c),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let p=this.metricsTensors[l][0],c=this.metricsTensors[l][1],m=Lt(p(s[c],u[c]));t.push(m)}return t})}async fit(e,t,n={}){return TF(this,e,t,n)}async fitDataset(e,t){return bF(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),u=[];for(let l of i){let p=await l.data();u.push(p[0])}return Ee(i),Nr(u)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=gf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-gf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Ms(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Ms(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=Ms(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ms(dd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ms(dd(e)));{let e={};for(let t in this.metrics)e[t]=Ms(dd(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=mp(e.optimizer_config),n=gn(t),o;if(typeof e.loss=="string")o=au(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>au(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=au(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>au(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=au(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=Ur.getSaveHandlers(e);if(l.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new O(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Ur.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:hQ,generatedBy:`TensorFlow.js tfjs-layers v${hd}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:p,specs:c}=await Ur.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...c),n.data=Ur.concatenateArrayBuffers([n.data,p])}if(this.userDefinedMetadata!=null){let l=!0;FC(this.userDefinedMetadata,this.name,l),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){FC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Zo.className="Model";J.registerClass(Zo);var $C=class extends Zo{};$C.className="Functional";J.registerClass($C);async function vF(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=mp(t),o=gn(n,e);if(r.weightsManifest!=null){let s=await Ur.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Ee(s)}return o}async function wF(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Ur.getLoadHandlers(r,e);if(t.length===0)t.push(Ur.browserHTTPRequest(r,e));else if(t.length>1)throw new O(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return gQ(r,void 0,e)}async function gQ(r,e,t){if(t==null&&(t={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=gn(mp(o),e,a),u=n.trainingConfig;if(u!=null&&i.loadTrainingConfig(u),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:p}=bQ(n.weightData,n.weightSpecs);i.loadWeights(l,s),i.optimizer!=null&&p.length>0&&await i.optimizer.setWeights(p),Ee(l),Ee(p.map(c=>c.tensor))}return i}function bQ(r,e){let t=Ur.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var cy=class extends Zo{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Xu("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof cy||e instanceof Zo,n;if(t){if(n=e,n.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=Yb({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=SC(this.outputs[0])}this.inboundNodes=[],new Yu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Fs(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(tt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=t}else b.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof cy))throw new Pe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let u of s){let p=gn(u,void 0,o);o&&p.setFastWeightInitDuringBuild(!0),i.add(p)}return i}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},im=cy;im.className="Sequential";J.registerClass(im);function yQ(r){return new Zo(r)}function xQ(r){return new im(r)}function TQ(r,e){return e==null&&(e={}),wF(r,e)}function BC(r){return Yb(r)}function kQ(r,e){id.registerCallbackConstructor(r,e)}var bn=class extends J.Serializable{getConfig(){return{}}},OC=class extends bn{apply(e,t=1){return qP(e,t)}};OC.className="elu";J.registerClass(OC);var zC=class extends bn{apply(e){return Lf(e)}};zC.className="selu";J.registerClass(zC);var GC=class extends bn{apply(e){return Hr(e)}};GC.className="relu";J.registerClass(GC);var WC=class extends bn{apply(e){return G(()=>ru(6,Hr(e)))}};WC.className="relu6";J.registerClass(WC);var UC=class extends bn{apply(e){return e}};UC.className="linear";J.registerClass(UC);var KC=class extends bn{apply(e){return ln(e)}};KC.className="sigmoid";J.registerClass(KC);var VC=class extends bn{apply(e){return YP(e)}};VC.className="hardSigmoid";J.registerClass(VC);var jC=class extends bn{apply(e){return ei(e)}};jC.className="softplus";J.registerClass(jC);var HC=class extends bn{apply(e){return XP(e)}};HC.className="softsign";J.registerClass(HC);var qC=class extends bn{apply(e){return Zi(e)}};qC.className="tanh";J.registerClass(qC);var gd=class extends bn{apply(e,t=-1){return jl(e,t)}};gd.className="softmax";J.registerClass(gd);var XC=class extends bn{apply(e,t=-1){return _f(e,t)}};XC.className="logSoftmax";J.registerClass(XC);var YC=class extends bn{apply(e,t=1){return G(()=>R(ln(R(e,t)),e))}};YC.className="swish";J.registerClass(YC);var QC=class extends bn{apply(e){return G(()=>R(e,Zi(ei(e))))}};QC.className="mish";J.registerClass(QC);function Na(r){return r.getClassName()}function ZC(r,e={}){return oi(r,J.SerializationMap.getMap().classNameMap,e,"activation")}function Da(r){if(r==null){let e={};return e.className="linear",e.config={},ZC(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},ZC(e)}else return r instanceof bn?r:ZC(r)}function JC(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var ev=class extends J.Serializable{},dp=class extends ev{constructor(e){super();JC(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return G(()=>{let t=Tt([1]);return this.hasL1&&(t=X(t,me(R(this.l1,zt(e))))),this.hasL2&&(t=X(t,me(R(this.l2,lp(e))))),$(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};dp.className="L1L2";J.registerClass(dp);function SF(r){return JC(r),new dp({l1:r!=null?r.l1:null,l2:0})}function _F(r){return JC(r),new dp({l2:r!=null?r.l2:null,l1:0})}var AF={l1l2:"L1L2"};function bt(r){return Uc(r)}function NF(r,e={}){return oi(r,J.SerializationMap.getMap().classNameMap,e,"regularizer")}function _t(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in AF?AF[r]:r,config:{}};return NF(t)}else return r instanceof ev?r:NF(r)}var bd=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=We(e);let n=Hr(e);return this.maxValue!=null&&(n=Lr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};bd.className="ReLU";J.registerClass(bd);var yd=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=We(e);return Ol(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};yd.className="LeakyReLU";J.registerClass(yd);var xd=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ct(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_t(e.alphaRegularizer),this.alphaConstraint=Qt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=tt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Mt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=We(e),Kl(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Ft(this.alphaInitializer),alphaRegularizer:bt(this.alphaRegularizer),alphaConstraint:Yt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};xd.className="PReLU";J.registerClass(xd);var Td=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Pe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=We(e);return eu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Td.className="ELU";J.registerClass(Td);var kd=class extends Ke{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=We(e);return R(n,Q(nr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};kd.className="ThresholdedReLU";J.registerClass(kd);var Id=class extends Ke{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new gd().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=We(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Id.className="Softmax";J.registerClass(Id);function el(r,e,t){if(typeof r=="number")return Fs(r,e);if(r.length!==e)throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!KP(o))throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Rn(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Pa(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+Sa([t-e,0]);else if(n==="same")r=r*e;else throw new O(`Unsupport padding mode: ${n}.`);return r}function Cd(r,e){return G(()=>(jt(e),e==="channelsFirst"?qe(r,[0,2,3,1]):r))}function tv(r,e){return G(()=>(jt(e),e==="channelsFirst"?qe(r,[0,2,3,4,1]):r))}function IQ(r,e,t,n=1,o="valid",s,a=1){return G(()=>{if(s==null&&(s=mn()),jt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=qe(r,[0,2,1])),o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=kf(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=dn(i,t)),i})}function DF(r,e,t,n=[1,1],o="valid",s,a,i=null){return G(()=>{if(s==null&&(s=mn()),jt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=Cd(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Ds.conv2d({x:u,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(u=qe(u,[0,3,1,2])),u})}function CQ(r,e,t,n=[1,1,1],o="valid",s,a){return G(()=>{if(s==null&&(s=mn()),jt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=tv(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Cf(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=dn(i,t)),s==="channelsFirst"&&(i=qe(i,[0,4,1,2,3])),i})}var um=class extends Ke{constructor(e,t){super(t);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(um.verifyArgs(t),this.rank=e,sr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Pe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=el(t.kernelSize,e,"kernelSize"),this.strides=el(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,fn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,jt(this.dataFormat),this.activation=Da(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Ct(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Qt(t.biasConstraint),this.biasRegularizer=_t(t.biasRegularizer),this.activityRegularizer=_t(t.activityRegularizer),this.dilationRate=el(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Yo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Ob(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Na(this.activation),useBias:this.useBias,biasInitializer:Ft(this.biasInitializer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),biasConstraint:Yt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},hp=class extends um{constructor(e,t){super(e,t);this.kernel=null;hp.verifyArgs(t),this.filters=t.filters,sr(this.filters,"filters"),this.kernelInitializer=Ct(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Qt(t.kernelConstraint),this.kernelRegularizer=_t(t.kernelRegularizer)}build(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return G(()=>{e=We(e);let n,o=this.bias==null?null:this.bias.read(),s=zb(this.activation.getClassName());if(s!=null&&this.rank===2)n=DF(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=IQ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=DF(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=CQ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Pe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=tt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=Rn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Ft(this.kernelInitializer),kernelRegularizer:bt(this.kernelRegularizer),kernelConstraint:Yt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},nv=class extends hp{constructor(e){super(2,e);nv.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Ob(e.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},lm=nv;lm.className="Conv2D";J.registerClass(lm);var ov=class extends hp{constructor(e){super(3,e);ov.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},pm=ov;pm.className="Conv3D";J.registerClass(pm);var vd=class extends lm{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{let n=We(e);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let u=o[a],l=o[i],p=this.kernelSize[0],c=this.kernelSize[1],m=this.strides[0],f=this.strides[1],d=Pa(u,m,p,this.padding),h=Pa(l,f,c,this.padding),g=[s,d,h,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,1]));let y=If(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=qe(y,[0,3,1,2])),this.bias!=null&&(y=dn(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[o]=Pa(t[o],u,a,this.padding),t[s]=Pa(t[s],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};vd.className="Conv2DTranspose";J.registerClass(vd);var wd=class extends pm{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{let n=We(e);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i,u;this.dataFormat==="channelsFirst"?(u=2,a=3,i=4):(u=1,a=2,i=3);let l=o[u],p=o[a],c=o[i],m=this.kernelSize[0],f=this.kernelSize[1],d=this.kernelSize[2],h=this.strides[0],g=this.strides[1],y=this.strides[2],x=Pa(l,h,m,this.padding),T=Pa(p,g,f,this.padding),k=Pa(c,y,d,this.padding),v=[s,x,T,k,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,4,1]));let P=SI(n,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(P=qe(P,[0,4,1,2,3])),this.bias!==null&&(P=dn(P,this.bias.read(),this.dataFormat)),this.activation!==null&&(P=this.activation.apply(P)),P})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,o,s,a;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,a=4):(n=4,o=1,s=2,a=3);let i=this.kernelSize[0],u=this.kernelSize[1],l=this.kernelSize[2],p=this.strides[0],c=this.strides[1],m=this.strides[2];return t[n]=this.filters,t[o]=Pa(t[o],p,i,this.padding),t[s]=Pa(t[s],c,u,this.padding),t[a]=Pa(t[a],m,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};wd.className="Conv3DTranspose";J.registerClass(wd);var rv=class extends hp{constructor(e,t){super(e,t);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(t.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ct(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_t(t.depthwiseRegularizer),this.depthwiseConstraint=Qt(t.depthwiseConstraint),this.pointwiseInitializer=Ct(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_t(t.pointwiseRegularizer),this.pointwiseConstraint=Qt(t.pointwiseConstraint)}build(e){if(e=tt(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Mt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{e=We(e);let n;if(this.rank===1)throw new Pe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=qe(e,[0,2,3,1])),n=eC(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=dn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=qe(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.pointwiseInitializer=Ft(this.pointwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.pointwiseRegularizer=bt(this.pointwiseRegularizer),e.depthwiseConstraint=Yt(this.depthwiseConstraint),e.pointwiseConstraint=Yt(this.pointwiseConstraint),e}};rv.className="SeparableConv";var Sd=class extends rv{constructor(e){super(2,e)}};Sd.className="SeparableConv2D";J.registerClass(Sd);var sv=class extends hp{constructor(e){super(1,e);sv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Ob(e.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},_d=sv;_d.className="Conv1D";J.registerClass(_d);var Ad=class extends Ke{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return G(()=>{if(e=We(e),this.dataFormat==="channelsLast"){let n=Zf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Zf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Zf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Zf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Ad.className="Cropping2D";J.registerClass(Ad);var Nd=class extends Ke{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,GP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return G(()=>{let n=We(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=qe(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?Mn.resizeNearestNeighbor(n,[s,a]):Mn.resizeBilinear(n,[s,a]);return qe(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?Mn.resizeNearestNeighbor(n,[s,a]):Mn.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Nd.className="UpSampling2D";J.registerClass(Nd);function vQ(r,e,t=[1,1],n="valid",o,s){return G(()=>{o==null&&(o=mn()),jt(o);let a=Cd(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Ji(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=qe(a,[0,3,1,2])),a})}var Dd=class extends um{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ct(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Qt(e.depthwiseConstraint),this.depthwiseRegularizer=_t(e.depthwiseRegularizer)}build(e){if(e=tt(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{e=We(e);let n=vQ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=dn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Rn(t,this.kernelSize[0],this.padding,this.strides[0]),a=Rn(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.depthwiseConstraint=Yt(this.depthwiseRegularizer),e}};Dd.className="DepthwiseConv2D";J.registerClass(Dd);function av(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function iv(r,e,t,n=!1,o,s,a=!1,i=!1){return G(()=>{let u=e.shape.length;if(u<3)throw new O(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(en(2,u));if(e=qe(e,l),s!=null)throw new Pe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=Q(Q(o,"bool"),"float32"),o.rank===u-1&&(o=_r(o,-1)),o=qe(o,l)),n&&(e=xr(e,0),o!=null&&(o=xr(o,0)));let p=[],c,m=t,f=e.shape[0],d=Br(e),h;o!=null&&(h=Br(o));for(let y=0;y<f;++y){let x=d[y],T=G(()=>r(x,m));if(o==null)c=T[0],m=T[1];else{let k=G(()=>{let v=h[y],P=ue(Ar(v),v),A=X(R(T[0],v),R(m[0],P)),F=m.map((E,L)=>X(R(T[1][L],v),R(E,P)));return{output:A,newStates:F}});c=k.output,m=k.newStates}i&&p.push(c)}let g;return i&&(g=fr(p,1)),[c,g,m]})}var uv=class extends Ke{constructor(e){super(e);let t;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new fm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Mt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return en(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){qb(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return G(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Pe("Constants support is not implemented in RNN yet.");qb(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Mt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new Pe("Constants support is not implemented in RNN yet.");this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Mt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new Yn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Tt([n,o])):this.states_=[Tt([n,this.cell.stateSize])];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Tt([n,o])):this.states_[0]=Tt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!b.arraysEqual(s.shape,i))throw new O(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Vt(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=av(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Mt({shape:l.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof hn){let l=[e].concat(a),p=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=p;let m=super.apply(l,t);return this.inputSpec=c,m}else return super.apply(e,t)}call(e,t){return G(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=We(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new O(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},l=iv((d,h)=>{let g=this.cell.call([d].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),p=l[0],c=l[1],m=l[2];this.stateful&&this.resetStates(m,o);let f=this.returnSequences?c:p;return this.returnState?[f].concat(m):f})}getInitialState(e){return G(()=>{let t=Tt(e.shape);return t=me(t,[1,2]),t=iu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Ub(t,[1,n]):t):this.cell.stateSize>1?[Ub(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===uv.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=gn(o,n);return new e(Object.assign(t,{cell:s}))}},Bs=uv;Bs.className="RNN";J.registerClass(Bs);var tl=class extends Ke{},cm=class extends tl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,sr(this.units,"units"),this.activation=Da(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Qt(e.kernelConstraint),this.recurrentConstraint=Qt(e.recurrentConstraint),this.biasConstraint=Qt(e.biasConstraint),this.dropout=ip([1,Sa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ip([1,Sa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lu({ones:()=>Ar(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lu({ones:()=>Ar(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=$s(R(e,a),this.kernel.read()):s=$s(e,this.kernel.read()),this.bias!=null&&(s=dn(s,this.bias.read())),i!=null&&(n=R(n,i));let u=X(s,$s(n,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Na(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Yt(this.kernelConstraint),recurrentConstraint:Yt(this.recurrentConstraint),biasConstraint:Yt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};cm.className="SimpleRNNCell";J.registerClass(cm);var Pd=class extends Bs{constructor(e){e.cell=new cm(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};Pd.className="SimpleRNN";J.registerClass(Pd);var mm=class extends tl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,sr(this.units,"units"),this.activation=Da(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Da(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Qt(e.kernelConstraint),this.recurrentConstraint=Qt(e.recurrentConstraint),this.biasConstraint=Qt(e.biasConstraint),this.dropout=ip([1,Sa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ip([1,Sa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lu({ones:()=>Ar(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lu({ones:()=>Ar(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,u,l;0<this.dropout&&this.dropout<1&&(e=R(e,s[0]));let p=$s(e,this.kernel.read());this.useBias&&(p=dn(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,a[0]));let c=this.recurrentKernel.read(),[m,f]=Ir(c,[2*this.units,this.units],c.rank-1),d=$s(o,m),[h,g,y]=Ir(p,3,p.rank-1),[x,T]=Ir(d,2,d.rank-1);i=this.recurrentActivation.apply(X(h,x)),u=this.recurrentActivation.apply(X(g,T));let k=$s(R(u,o),f);l=this.activation.apply(X(y,k));let v=X(R(i,o),R(X(1,et(i)),l));return[v,v]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Na(this.activation),recurrentActivation:Na(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Yt(this.kernelConstraint),recurrentConstraint:Yt(this.recurrentConstraint),biasConstraint:Yt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};mm.className="GRUCell";J.registerClass(mm);var Fd=class extends Bs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mm(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Fd.className="GRU";J.registerClass(Fd);var rl=class extends tl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,sr(this.units,"units"),this.activation=Da(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Da(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Qt(e.kernelConstraint),this.recurrentConstraint=Qt(e.recurrentConstraint),this.biasConstraint=Qt(e.biasConstraint),this.dropout=ip([1,Sa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ip([1,Sa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var o;e=tt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;n=new(o=class extends En{apply(u,l){let p=s.apply([a]),c=new pp().apply([a]),m=s.apply([a*2]);return vC(vC(p,c),m)}},o.className="CustomInit",o)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return G(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lu({ones:()=>Ar(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lu({ones:()=>Ar(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,u,l,p,c;0<this.dropout&&this.dropout<1&&(e=R(e,a[0]));let m=$s(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,i[0])),m=X(m,$s(o,this.recurrentKernel.read())),this.useBias&&(m=dn(m,this.bias.read()));let[f,d,h,g]=Ir(m,4,m.rank-1);u=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(d),p=X(R(l,s),R(u,this.activation.apply(h))),c=this.recurrentActivation.apply(g);let y=R(c,this.activation.apply(p));return[y,y,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Na(this.activation),recurrentActivation:Na(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Yt(this.kernelConstraint),recurrentConstraint:Yt(this.recurrentConstraint),biasConstraint:Yt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};rl.className="LSTMCell";J.registerClass(rl);var Md=class extends Bs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rl(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Md.className="LSTM";J.registerClass(Md);var fm=class extends tl{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return G(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let u=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=u.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){qb(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{wa(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(gn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return ad(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}rm(t)}};fm.className="StackedRNNCells";J.registerClass(fm);function lu(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(e(),t):Vb(e(),t),i=()=>qu(a,e,n);return!o||o<=1?Vt(i().clone()):Array(o).fill(void 0).map(i).map(l=>Vt(l.clone()))}var lv=class extends Bs{constructor(e){if(e.unroll)throw new Pe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pe("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Mt({ndim:5})]}call(e,t){return G(()=>{if(this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new O("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return G(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=Tt(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new Yn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Tt(s)):this.states_=[Tt(s)];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Tt(s)):this.states_[0]=Tt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let i=0;i<this.states_.length;++i){let u=e[i],l=s;if(!b.arraysEqual(u.shape,l))throw new O(`State ${i} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${u.shape}`);this.states_[i]=u}}this.states_=this.states_.map(i=>Vt(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,u=t==="channelsFirst",l=e[u?3:2],p=e[u?4:3],c=Rn(l,o[0],s,a[0],i[0]),m=Rn(p,o[1],s,a[1],i[1]);return[...e.slice(0,2),...u?[n,c,m]:[c,m,n]]}};lv.className="ConvRNN2D";var dm=class extends rl{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super({...e,units:t});this.filters=t,sr(this.filters,"filters"),this.kernelSize=el(n,2,"kernelSize"),this.kernelSize.forEach(u=>sr(u,"kernelSize")),this.strides=el(o||1,2,"strides"),this.strides.forEach(u=>sr(u,"strides")),this.padding=s||"valid",fn(this.padding),this.dataFormat=a||"channelsLast",jt(this.dataFormat),this.dilationRate=el(i||1,2,"dilationRate"),this.dilationRate.forEach(u=>sr(u,"dilationRate"))}build(e){var i;e=tt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let l=this.biasInitializer,p=this.filters;u=new(i=class extends En{apply(m,f){let d=l.apply([p]),h=mr([p]),g=l.apply([p*2]);return jc([d,h,g])}},i.className="CustomInit",i)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return G(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lu({ones:()=>Ar(o),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,l=(oe,te,le)=>!te||!te[le]?oe:R(te[le],oe),p=l(o,u,0),c=l(o,u,1),m=l(o,u,2),f=l(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lu({ones:()=>Ar(s),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,h=l(s,d,0),g=l(s,d,1),y=l(s,d,2),x=l(s,d,3),T=3,[k,v,P,A]=Ir(this.kernel.read(),i,T),[F,E,L,U]=this.useBias?Ir(this.bias.read(),i):[null,null,null,null];p=this.inputConv(p,k,F,this.padding),c=this.inputConv(c,v,E,this.padding),m=this.inputConv(m,P,L,this.padding),f=this.inputConv(f,A,U,this.padding);let[K,B,V,j]=Ir(this.recurrentKernel.read(),i,T);h=this.recurrentConv(h,K),g=this.recurrentConv(g,B),y=this.recurrentConv(y,V),x=this.recurrentConv(x,j);let H=this.recurrentActivation.apply(X(p,h)),ee=this.recurrentActivation.apply(X(c,g)),Y=X(R(ee,a),R(H,this.activation.apply(X(m,y)))),ne=R(this.recurrentActivation.apply(X(f,x)),this.activation.apply(Y));return[ne,ne,Y]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=qn(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?dn(s,n,this.dataFormat):s}recurrentConv(e,t){return qn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};dm.className="ConvLSTM2DCell";J.registerClass(dm);var Ed=class extends lv{constructor(e){let t=new dm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Ed.className="ConvLSTM2D";J.registerClass(Ed);var hm=class extends Ke{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=We(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return qu(()=>Vb(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};hm.className="Dropout";J.registerClass(hm);var Rd=class extends hm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Rd.className="SpatialDropout1D";J.registerClass(Rd);var Ld=class extends Ke{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,sr(this.units,"units"),this.activation=Da(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Qt(e.kernelConstraint),this.biasConstraint=Qt(e.biasConstraint),this.kernelRegularizer=_t(e.kernelRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=tt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=tt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=We(e),o=zb(this.activation.getClassName()),s;return o!=null?s=$s(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=$s(n,this.kernel.read()),this.bias!=null&&(s=dn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Na(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Yt(this.kernelConstraint),biasConstraint:Yt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Ld.className="Dense";J.registerClass(Ld);var $d=class extends Ke{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tt(e);for(let t of e.slice(1))if(t==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ls(e,1)]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=We(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=qe(n,o)}return HP(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};$d.className="Flatten";J.registerClass($d);var Bd=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.activation=Da(e.activation)}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=We(e);return this.activation.apply(n)})}getConfig(){let e={activation:Na(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Bd.className="Activation";J.registerClass(Bd);var Od=class extends Ke{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return G(()=>(e=We(e),VP(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Od.className="RepeatVector";J.registerClass(Od);var zd=class extends Ke{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let u=0;u<o.length;++u){let l=o[u];if(this.isUnknown(l))if(a===null)a=u;else throw new O("Can only specifiy one unknown dimension.");else s*=l}let i=Ls(e);if(a!==null){if(s===0||i%s!=0)throw new O(n);o[a]=i/s}else if(i!==s)throw new O(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=We(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return $(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};zd.className="Reshape";J.registerClass(zd);var Gd=class extends Ke{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=en(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Mt({ndim:this.dims.length+1})]}computeOutputShape(e){e=tt(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return qe(We(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Gd.className="Permute";J.registerClass(Gd);var Wd=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=We(e),o=-1;return Ec(ti(n,this.maskValue),o)}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=We(e),o=-1,s=!0,a=Ec(ti(n,this.maskValue),o,s);return R(n,Q(a,n.dtype))})}};Wd.className="Masking";J.registerClass(Wd);var Ud=class extends Ke{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(St(e.inputLength))}this.inputDim=e.inputDim,sr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,sr(this.outputDim,"outputDim"),this.embeddingsInitializer=Ct(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_t(e.embeddingsRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.embeddingsConstraint=Qt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return G(()=>this.maskZero?(e=We(e),ti(e,De(e))):null)}computeOutputShape(e){if(e=tt(e),this.inputLength==null)return[...e,this.outputDim];let t=St(this.inputLength);if(t.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=We(e);n.dtype!=="int32"&&(n=up(n,"int32"));let o=Kb(this.embeddings.read(),$(n,[n.size]));return $(o,tt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ft(this.embeddingsInitializer),embeddingsRegularizer:bt(this.embeddingsRegularizer),activityRegularizer:bt(this.activityRegularizer),embeddingsConstraint:Yt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Ud.className="Embedding";J.registerClass(Ud);var nl=class extends Ke{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Pe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tt(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Rs(t),t.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&Rs(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return G(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=Sa(o);for(let a of e){let i=a.rank;for(let u=0;u<s-i;++u)a=iu(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let u of e){let l=u.rank;if(l==null){let p=u.shape,c=p[0],m=p.slice(1).concat([c]),f=$(u,[c].concat(Ls(p.slice(1))));f=qe(f,[1,0]),f=$(f,m),n.push(f),s=!0}else if(l>1){let p=en(1,l).concat([0]);n.push(qe(u,p)),s=!0}else n.push(u)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let u=a.shape,l=u.length,p=u[l-1],c=[p].concat(u.slice(0,u.length-1));a=$(qe($(a,[-1,p]),[1,0]),c)}else if(i>1){let u=[i-1].concat(en(0,i-1));a=qe(a,u)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Rs(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return G(()=>{if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(t.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:_r(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=jr(n,t[o]);return n})}},Kd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return t})}};Kd.className="Add";J.registerClass(Kd);var Vd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=R(t,e[n]);return t})}};Vd.className="Multiply";J.registerClass(Vd);var jd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return R(1/e.length,t)})}};jd.className="Average";J.registerClass(jd);var Hd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Xn(t,e[n]);return t})}};Hd.className="Maximum";J.registerClass(Hd);var qd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ru(t,e[n]);return t})}};qd.className="Minimum";J.registerClass(qd);var Xd=class extends nl{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(b.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return G(()=>jc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new O(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return G(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(Q(Ar(e[a]),"bool")):t[a].rank<e[a].rank?o.push(_r(t[a],-1)):o.push(t[a]);let s=lt(o,this.axis);return yf(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Xd.className="Concatenate";J.registerClass(Xd);function Yd(r,e){for(;r<0;)r+=e;return r}function wQ(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Pe("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Pe("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return G(()=>{let a;if(n>o){a=n-o;let u=[];for(let l=0;l<a;++l)u.push(1);e=$(e,e.shape.concat(u))}else if(o>n){a=o-n;let u=[];for(let l=0;l<a;++l)u.push(1);r=$(r,r.shape.concat(u))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=me(R(r,e),s[0]):i=me(R(qe(r,[1,0]),e),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===e.shape.length-1;i=Ve(r,e,u,l)}if(a>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let p=u;p<u+a;++p)l.push(p);i=cn(i,l)}return i.shape.length===1&&(i=_r(i,1)),i})}var Qd=class extends nl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new O(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>Yd(s,e[a].shape.length)):o=[Yd(this.axes,t.shape.length),Yd(this.axes,n.shape.length)],this.normalize&&(t=ud(t,o[0]),n=ud(n,o[1])),wQ(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Yd(this.axes,e.length),Yd(this.axes,t.length)],n}computeOutputShape(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Qd.className="Dot";J.registerClass(Qd);var Zd=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=We(e);return qu(()=>X(Hc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Zd.className="GaussianNoise";J.registerClass(Zd);var Jd=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=We(e);return this.rate>0&&this.rate<1?qu(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return R(n,Hc(n.shape,1,s))},()=>n,t.training||!1):n})}};Jd.className="GaussianDropout";J.registerClass(Jd);var eh=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||We(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return qu(()=>{let s=We(e),a=1.6732632423543772,i=1.0507009873554805,u=-a*i,l=qo(va(n),this.rate);l=up(l,"float32");let p=((1-this.rate)*(1+this.rate*u**2))**-.5,c=-p*u*this.rate,m=X(R(s,l),R(X(l,-1),u));return X(R(m,p),c)},()=>We(e),t.training||!1)}return e})}};eh.className="AlphaDropout";J.registerClass(eh);function th(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=bI(r,e,t,n,o,s);else if(r.rank===3)a=yI(r,e,t,n,o,s);else if(r.rank===4)a=xI(r,e,t,n,o,s);else throw new Pe(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function SQ(r,e,t,n,o=.001){return G(()=>{let s=Oc(r,n),a=s.mean,i=s.variance;return[th(r,a,i,t,e,o),a,i]})}function _Q(r,e,t,n,o=.001){return G(()=>{let s=Oc(r,n),a=s.mean,i=s.variance,u=[];for(let d of en(0,r.rank))n.indexOf(d)!==-1?u.push(1):u.push(r.shape[d]);let l=$(a,u),p=$(i,u),c=e==null?null:$(e,u),m=t==null?null:$(t,u);return[th(r,l,p,m,c,o),a,i]})}function AQ(r,e,t,n,o=.001){return b.arraysEqual(n.slice().sort(),en(0,r.rank-1))?SQ(r,e,t,n,o):_Q(r,e,t,n,o)}var rh=class extends Ke{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ct(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ct(e.movingVarianceInitializer||"ones"),this.betaConstraint=Qt(e.betaConstraint),this.gammaConstraint=Qt(e.gammaConstraint),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer)}build(e){e=tt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new O(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Mt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return G(()=>{let n=t.training==null?!1:t.training,o=We(e),s=o.shape,a=s.length,i=en(0,a),u=this.axis>=0?this.axis:this.axis+a;i.splice(u,1);let l=Fs(1,a);l[u]=s[u];let p=i.slice();p.sort();let c=!b.arraysEqual(p,en(0,a).slice(0,a-1)),m=()=>{if(c){let x=$(this.movingMean.read(),l),T=$(this.movingVariance.read(),l),k=this.center?$(this.beta.read(),l):null,v=this.scale?$(this.gamma.read(),l):null;return th(o,x,T,k,v,this.epsilon)}else return th(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return m();let[f,d,h]=AQ(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(x,T,k)=>{G(()=>{let v=1-k,P=x.read(),A=R(ue(P,T),v);x.write(ue(P,A))})};return(()=>{g(this.movingMean,d,this.momentum),g(this.movingVariance,h,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),movingMeanInitializer:Ft(this.movingMeanInitializer),movingVarianceInitializer:Ft(this.movingVarianceInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer),betaConstraint:Yt(this.betaConstraint),gammaConstraint:Yt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};rh.className="BatchNormalization";J.registerClass(rh);var nh=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=tt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Rs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=We(e),o=n.shape,s=o.length;return G(()=>{let a=!0,{mean:i,variance:u}=Oc(n,this.axis,a),l=Fs(1,s);for(let h of this.axis)l[h]=o[h];let p=h=>h!=null&&h.shape.length!==s?$(h,l):h,c=p(this.gamma.read()),m=p(this.beta.read()),f=[],d=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(f.push(o[h]),d.push(1)):(f.push(1),d.push(o[h]));return i=Vr(i,f),u=Vr(u,f),c=Vr(c,d),m=Vr(m,d),th(n,i,u,m,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};nh.className="LayerNormalization";J.registerClass(nh);function NQ(r,e,t){return G(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=mn()),t!=="channelsLast"&&t!=="channelsFirst")throw new O(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],Pn(r,n)})}var oh=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?mn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=tt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return G(()=>NQ(We(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};oh.className="ZeroPadding2D";J.registerClass(oh);function my(r,e,t,n,o,s){return G(()=>{jt(o),IC(s),fn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=mn()),s==null&&(s="max"),r=Cd(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Wl(r,e,t,i):a=El(r,e,t,i),o==="channelsFirst"&&(a=qe(a,[0,3,1,2])),a})}function PF(r,e,t,n,o,s){return G(()=>{jt(o),IC(s),fn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=mn()),s==null&&(s="max"),r=tv(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Df(r,e,t,i):a=xf(r,e,t,i),o==="channelsFirst"&&(a=qe(a,[0,4,1,2,3])),a})}var pv=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(sr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);sr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,fn(this.padding),this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){e=tt(e);let t=Rn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return G(()=>{this.invokeCallHook(e,t),e=iu(We(e),2);let n=this.poolingFunction(We(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return cn(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},sh=class extends pv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),my(e,t,n,o,s,"max")}};sh.className="MaxPooling1D";J.registerClass(sh);var ah=class extends pv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),my(e,t,n,o,s,"avg")}};ah.className="AveragePooling1D";J.registerClass(ah);var cv=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];sr(this.poolSize,"poolSize"),sr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),fn(this.padding),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Rn(t,this.poolSize[0],this.padding,this.strides[0]),n=Rn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(We(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ih=class extends cv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),my(e,t,n,o,s,"max")}};ih.className="MaxPooling2D";J.registerClass(ih);var uh=class extends cv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),my(e,t,n,o,s,"avg")}};uh.className="AveragePooling2D";J.registerClass(uh);var mv=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];sr(this.poolSize,"poolSize"),sr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),fn(this.padding),this.inputSpec=[new Mt({ndim:5})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Rn(t,this.poolSize[0],this.padding,this.strides[0]),n=Rn(n,this.poolSize[1],this.padding,this.strides[1]),o=Rn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(We(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},lh=class extends mv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),PF(e,t,n,o,s,"max")}};lh.className="MaxPooling3D";J.registerClass(lh);var ph=class extends mv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),PF(e,t,n,o,s,"avg")}};ph.className="AveragePooling3D";J.registerClass(ph);var fv=class extends Ke{constructor(e){super(e);this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pe}},ch=class extends fv{constructor(e){super(e||{})}call(e,t){return G(()=>{let n=We(e);return Lt(n,1)})}};ch.className="GlobalAveragePooling1D";J.registerClass(ch);var mh=class extends fv{constructor(e){super(e||{})}call(e,t){return G(()=>{let n=We(e);return Qr(n,1)})}};mh.className="GlobalMaxPooling1D";J.registerClass(mh);var dv=class extends Ke{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},fh=class extends dv{call(e,t){return G(()=>{let n=We(e);return this.dataFormat==="channelsLast"?Lt(n,[1,2]):Lt(n,[2,3])})}};fh.className="GlobalAveragePooling2D";J.registerClass(fh);var dh=class extends dv{call(e,t){return G(()=>{let n=We(e);return this.dataFormat==="channelsLast"?Qr(n,[1,2]):Qr(n,[2,3])})}};dh.className="GlobalMaxPooling2D";J.registerClass(dh);var hv=class extends Ke{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=gn(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},hh=class extends hv{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=tt(e),e.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=tt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return G(()=>(e=We(e),iv((a,i)=>[We(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};hh.className="TimeDistributed";J.registerClass(hh);function DQ(r){si(zP,"BidirectionalMergeMode",r)}var PQ="concat",gh=class extends hv{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=gn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=gn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?PQ:e.mergeMode,DQ(this.mergeMode),e.weights)throw new Pe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Nr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=av(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let p=n.map(c=>new Mt({shape:c.shape}));this.forwardLayer.stateSpec=p.slice(0,l/2),this.backwardLayer.stateSpec=p.slice(l/2),i.push(...p)}if(o!=null)throw new Pe("Support for constants in Bidirectional layers is not implemented yet.");let u=a[0]instanceof hn;for(let l of a)if(l instanceof hn!==u)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let l=[e].concat(a),p=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=p;let m=super.apply(l,t);return this.inputSpec=c,m}else return super.apply(e,t)}call(e,t){return G(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let u=n.slice(0,n.length/2),l=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=xr(s,1));let i;return this.mergeMode==="concat"?i=jc([o,s]):this.mergeMode==="sum"?i=X(o,s):this.mergeMode==="ave"?i=R(.5,X(o,s)):this.mergeMode==="mul"?i=R(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){wa(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),wa(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=gn(t.layer);if(delete t.layer,t.numConstants!=null)throw new Pe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};gh.className="Bidirectional";J.registerClass(gh);function FQ(r){return new ai(r)}function MQ(r){return new Td(r)}function EQ(r){return new bd(r)}function RQ(r){return new yd(r)}function LQ(r){return new xd(r)}function $Q(r){return new Id(r)}function BQ(r){return new kd(r)}function OQ(r){return new _d(r)}function zQ(r){return new lm(r)}function GQ(r){return new vd(r)}function WQ(r){return new pm(r)}function UQ(r){return new wd(r)}function KQ(r){return new Sd(r)}function VQ(r){return new Ad(r)}function jQ(r){return new Nd(r)}function HQ(r){return new Dd(r)}function qQ(r){return new Bd(r)}function XQ(r){return new Ld(r)}function YQ(r){return new hm(r)}function QQ(r){return new Rd(r)}function ZQ(r){return new $d(r)}function JQ(r){return new Od(r)}function eZ(r){return new zd(r)}function tZ(r){return new Gd(r)}function rZ(r){return new Ud(r)}function nZ(r){return new Kd(r)}function oZ(r){return new jd(r)}function sZ(r){return new Xd(r)}function aZ(r){return new Hd(r)}function iZ(r){return new qd(r)}function uZ(r){return new Vd(r)}function lZ(r){return new Qd(r)}function pZ(r){return new rh(r)}function cZ(r){return new nh(r)}function mZ(r){return new oh(r)}function gv(r){return new ah(r)}function fZ(r){return gv(r)}function dZ(r){return gv(r)}function bv(r){return new uh(r)}function hZ(r){return bv(r)}function gZ(r){return bv(r)}function yv(r){return new ph(r)}function bZ(r){return yv(r)}function yZ(r){return yv(r)}function xZ(r){return new ch(r)}function TZ(r){return new fh(r)}function FF(r){return new mh(r)}function MF(r){return new dh(r)}function EF(r){return new sh(r)}function RF(r){return new ih(r)}function kZ(r){return new lh(r)}function IZ(r){return new Fd(r)}function CZ(r){return new mm(r)}function vZ(r){return new Md(r)}function wZ(r){return new rl(r)}function SZ(r){return new Pd(r)}function _Z(r){return new cm(r)}function AZ(r){return new Ed(r)}function NZ(r){return new dm(r)}function DZ(r){return new Bs(r)}function PZ(r){return new fm(r)}function FZ(r){return new gh(r)}function MZ(r){return new hh(r)}var EZ=FF,RZ=MF,LZ=EF,$Z=RF;function BZ(r){return new Zd(r)}function OZ(r){return new Jd(r)}function zZ(r){return new eh(r)}function GZ(r){return new Wd(r)}var $F={};Qe($F,{MAPE:()=>ZZ,MSE:()=>tJ,binaryAccuracy:()=>WZ,binaryCrossentropy:()=>UZ,categoricalAccuracy:()=>VZ,categoricalCrossentropy:()=>jZ,cosineProximity:()=>XZ,mape:()=>JZ,meanAbsoluteError:()=>YZ,meanAbsolutePercentageError:()=>QZ,meanSquaredError:()=>eJ,mse:()=>rJ,precision:()=>HZ,recall:()=>qZ,sparseCategoricalAccuracy:()=>KZ});function WZ(r,e){return cd(r,e)}function UZ(r,e){return ty(r,e)}function KZ(r,e){return ry(r,e)}function VZ(r,e){return md(r,e)}function jZ(r,e){return fd(r,e)}function HZ(r,e){return DC(r,e)}function qZ(r,e){return aF(r,e)}function XZ(r,e){return ld(r,e)}function YZ(r,e){return nm(r,e)}function QZ(r,e){return Zu(r,e)}function ZZ(r,e){return Zu(r,e)}function JZ(r,e){return Zu(r,e)}function eJ(r,e){return ui(r,e)}function tJ(r,e){return ui(r,e)}function rJ(r,e){return ui(r,e)}var BF={};Qe(BF,{modelFromJSON:()=>vF});var OF={};Qe(OF,{l1:()=>oJ,l1l2:()=>nJ,l2:()=>sJ});function nJ(r){return new dp(r)}function oJ(r){return SF(r)}function sJ(r){return _F(r)}var xv=class extends Qu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Zo))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function fy(r,e){return r<e}function zF(r,e){return r>e}var Tv=class extends xv{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Pe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=fy:this.mode==="max"?this.monitorFunc=zF:this.monitor.indexOf("acc")!==-1?this.monitorFunc=zF:this.monitorFunc=fy,this.monitorFunc===fy&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===fy?1/0:-1/0}async onEpochEnd(e,t){await ii(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function aJ(r){return new Tv(r)}var iJ={earlyStopping:aJ};var Os;(function(B){B[B.DT_INVALID=0]="DT_INVALID",B[B.DT_FLOAT=1]="DT_FLOAT",B[B.DT_DOUBLE=2]="DT_DOUBLE",B[B.DT_INT32=3]="DT_INT32",B[B.DT_UINT8=4]="DT_UINT8",B[B.DT_INT16=5]="DT_INT16",B[B.DT_INT8=6]="DT_INT8",B[B.DT_STRING=7]="DT_STRING",B[B.DT_COMPLEX64=8]="DT_COMPLEX64",B[B.DT_INT64=9]="DT_INT64",B[B.DT_BOOL=10]="DT_BOOL",B[B.DT_QINT8=11]="DT_QINT8",B[B.DT_QUINT8=12]="DT_QUINT8",B[B.DT_QINT32=13]="DT_QINT32",B[B.DT_BFLOAT16=14]="DT_BFLOAT16",B[B.DT_FLOAT_REF=101]="DT_FLOAT_REF",B[B.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",B[B.DT_INT32_REF=103]="DT_INT32_REF",B[B.DT_UINT8_REF=104]="DT_UINT8_REF",B[B.DT_INT16_REF=105]="DT_INT16_REF",B[B.DT_INT8_REF=106]="DT_INT8_REF",B[B.DT_STRING_REF=107]="DT_STRING_REF",B[B.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",B[B.DT_INT64_REF=109]="DT_INT64_REF",B[B.DT_BOOL_REF=110]="DT_BOOL_REF",B[B.DT_QINT8_REF=111]="DT_QINT8_REF",B[B.DT_QUINT8_REF=112]="DT_QUINT8_REF",B[B.DT_QINT32_REF=113]="DT_QINT32_REF",B[B.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Os||(Os={}));var GF;(function(e){let r;(function(s){s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"})(r=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(GF||(GF={}));var kv={};function uJ(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};kv[r]=t}function dy(r){return kv[r]}function lJ(r){delete kv[r]}function w(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return Cr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(i,u).map(m=>Cr(m,t,n,o));let l=Cr(e.inputNames.slice(i)[0],t,n,o),p=l.dataSync();return s.type==="number"?p[0]:b.toNestedArray(l.shape,p)}let a=e.attrParams[r];return a&&a.value}function Cr(r,e,t,n){let[o,s]=yn(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[hy(o,i)]);return a!==void 0?e[hy(o,a)][s]:void 0}function WF(r,e,t){return e[hy(r,t.currentContextId)]}function Fa(r,e){let[t,n,o]=yn(r);return[hy(t,e&&e.currentContextId),n,o]}function hy(r,e){return e?`${r}-${e}`:r}function yn(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],n=e.length===3?e[1]:void 0,o=Number(e[e.length-1]);return[t,o,n]}function bh(r,e,t){let n=w("pad",r,e,t);if(n==="explicit"){n=w("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Ma(r){return r.kept?r:Nn(r)}var Iv={};Qe(Iv,{json:()=>pJ});var pJ=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Cv={};Qe(Cv,{json:()=>cJ});var cJ=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var vv={};Qe(vv,{json:()=>mJ});var mJ=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var wv={};Qe(wv,{json:()=>fJ});var fJ=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var Sv={};Qe(Sv,{json:()=>dJ});var dJ=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var _v={};Qe(_v,{json:()=>hJ});var hJ=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Av={};Qe(Av,{json:()=>gJ});var gJ=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var Nv={};Qe(Nv,{json:()=>bJ});var bJ=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var Dv={};Qe(Dv,{json:()=>yJ});var yJ=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var Pv={};Qe(Pv,{json:()=>xJ});var xJ=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var Fv={};Qe(Fv,{json:()=>TJ});var TJ=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Mv={};Qe(Mv,{json:()=>kJ});var kJ=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var Ev={};Qe(Ev,{json:()=>IJ});var IJ=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var Rv={};Qe(Rv,{json:()=>CJ});var CJ=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var Lv={};Qe(Lv,{json:()=>vJ});var vJ=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var $v={};Qe($v,{json:()=>wJ});var wJ=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var Bv={};Qe(Bv,{json:()=>SJ});var SJ=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var Ov={};Qe(Ov,{json:()=>_J});var _J=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var zv={};Qe(zv,{json:()=>AJ});var AJ=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var gy=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[Iv,Cv,vv,wv,Sv,_v,Av,Nv,Dv,Pv,Fv,Mv,Ev,Rv,Lv,$v,Bv,Ov,zv],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),u=[],l=[],p={},c={};t!=null&&(p=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let m=Object.keys(i);m.forEach(h=>{let g=i[h];g.inputNames.forEach((y,x)=>{let[T,,k]=Fa(y),v=i[T];if(v.outputs!=null){let P=v.outputs.indexOf(k);if(P!==-1){let A=`${T}:${P}`;g.inputNames[x]=A}}g.inputs.push(v),v.children.push(g)})}),Object.keys(c).length===0?m.forEach(h=>{let g=i[h];g.children.length===0&&l.push(g)}):Object.keys(c).forEach(h=>{let[g]=Fa(h),y=i[g];y!=null&&(y.signatureKey=c[h],l.push(y))}),Object.keys(p).length>0?Object.keys(p).forEach(h=>{let[g]=Fa(h),y=i[g];y&&(y.signatureKey=p[h],u.push(y))}):u=o;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let d={nodes:i,inputs:u,outputs:l,weights:s,placeholders:o,signature:t,functions:f};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=dy(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=by(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=by(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=vy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=vy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=xy(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=xy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=Cy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Cy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=yy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=yy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=Sy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Sy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=Iy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Iy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=wy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=wy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=Ty(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Ty(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=ky(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ky(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=KF(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=KF(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((c,m)=>(c[m.name]=this.mapNode(m),m.op==="Const"&&o.push(c[m.name]),c),{}));let a=[],i=[];e.signature.inputArg.forEach(c=>{let[m]=Fa(c.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Gv(c.type),type:"dtype"}},children:[]};f.signatureKey=c.name,a.push(f),s[m]=f}),Object.keys(s).forEach(c=>{let m=s[c];m.inputNames.forEach((f,d)=>{let[h,,g]=Fa(f),y=s[h];if(y.outputs!=null){let x=y.outputs.indexOf(g);if(x!==-1){let T=`${h}:${x}`;m.inputNames[d]=T}}m.inputs.push(y),y.children.push(m)})});let l=e.ret;e.signature.outputArg.forEach(c=>{let[m,f]=Fa(l[c.name]),d=s[m];d!=null&&(d.defaultOutput=f,i.push(d))});let p=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:p}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function NJ(r){let e=W().global;if(typeof e.atob!="undefined")return e.atob(r);if(typeof Buffer!="undefined")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function UF(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):NJ(r);return e?t:t.toLowerCase()}function by(r,e,t,n=!1){let o=r[e];return o!=null?UF(o.s,n):t}function yy(r,e,t){let n=r[e];return n?n.b:t}function xy(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function Gv(r){switch(typeof r=="string"&&(r=Os[r]),r){case Os.DT_FLOAT:return"float32";case Os.DT_INT32:case Os.DT_INT64:case Os.DT_INT8:case Os.DT_UINT8:return"int32";case Os.DT_BOOL:return"bool";case Os.DT_DOUBLE:return"float32";case Os.DT_STRING:return"string";default:return null}}function KF(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function Ty(r,e,t){let n=r[e];return n&&n.type?Gv(n.type):t}function ky(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>Gv(o)):t}function VF(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Iy(r,e,t){let n=r[e];return n&&n.shape?VF(n.shape):t}function Cy(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function vy(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>UF(s,n)):t}function wy(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>VF(o)):t}function Sy(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var Wv=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=[];this.attrs={};this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return Cr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Cr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return xy(this.node.rawAttrs,e,t);if(n.s!=null)return by(this.node.rawAttrs,e,t);if(n.b!=null)return yy(this.node.rawAttrs,e,t);if(n.shape!=null)return Iy(this.node.rawAttrs,e,t);if(n.type!=null)return Ty(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Cy(this.node.rawAttrs,e,t);if(n.list.s!=null)return vy(this.node.rawAttrs,e,t);if(n.list.shape!=null)return wy(this.node.rawAttrs,e,t);if(n.list.b!=null)return Sy(this.node.rawAttrs,e,t);if(n.list.type!=null)return ky(this.node.rawAttrs,e,t)}return t}};var jF=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[X(w("a",r,e,t),w("b",r,e,t))];case"AddN":return[iI(w("tensors",r,e,t))];case"FloorMod":case"Mod":return[UI(w("a",r,e,t),w("b",r,e,t))];case"Mul":return[R(w("a",r,e,t),w("b",r,e,t))];case"RealDiv":case"Div":return[pe(w("a",r,e,t),w("b",r,e,t))];case"DivNoNan":return[DI(w("a",r,e,t),w("b",r,e,t))];case"FloorDiv":return[bf(w("a",r,e,t),w("b",r,e,t))];case"Sub":return[ue(w("a",r,e,t),w("b",r,e,t))];case"Minimum":return[ru(w("a",r,e,t),w("b",r,e,t))];case"Maximum":return[Xn(w("a",r,e,t),w("b",r,e,t))];case"Pow":return[Fn(w("a",r,e,t),w("b",r,e,t))];case"SquaredDifference":return[Wf(w("a",r,e,t),w("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var HF=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[zt(w("x",r,e,t))];case"Acos":return[sI(w("x",r,e,t))];case"Acosh":return[aI(w("x",r,e,t))];case"Asin":return[lI(w("x",r,e,t))];case"Asinh":return[pI(w("x",r,e,t))];case"Atan":return[cI(w("x",r,e,t))];case"Atan2":return[mI(w("x",r,e,t),w("y",r,e,t))];case"Atanh":return[fI(w("x",r,e,t))];case"Ceil":return[kI(w("x",r,e,t))];case"Complex":return[Hn(w("real",r,e,t),w("imag",r,e,t))];case"Cos":return[$l(w("x",r,e,t))];case"Cosh":return[vf(w("x",r,e,t))];case"Elu":return[eu(w("x",r,e,t))];case"Erf":return[FI(w("x",r,e,t))];case"Exp":return[cr(w("x",r,e,t))];case"Expm1":return[MI(w("x",r,e,t))];case"Floor":return[tu(w("x",r,e,t))];case"Log":return[$r(w("x",r,e,t))];case"Log1p":return[zl(w("x",r,e,t))];case"Imag":return[Bl(w("x",r,e,t))];case"Neg":return[et(w("x",r,e,t))];case"Reciprocal":return[JI(w("x",r,e,t))];case"Real":return[ju(w("x",r,e,t))];case"Relu":return[Hr(w("x",r,e,t))];case"Round":return[Ef(w("x",r,e,t))];case"Selu":return[Lf(w("x",r,e,t))];case"Sigmoid":return[ln(w("x",r,e,t))];case"Sin":return[$f(w("x",r,e,t))];case"Sign":return[rC(w("x",r,e,t))];case"Sinh":return[Bf(w("x",r,e,t))];case"Softplus":return[ei(w("x",r,e,t))];case"Sqrt":return[$t(w("x",r,e,t))];case"Square":return[Xe(w("x",r,e,t))];case"Tanh":return[Zi(w("x",r,e,t))];case"Tan":return[oC(w("x",r,e,t))];case"ClipByValue":return[Lr(w("x",r,e,t),w("clipValueMin",r,e,t),w("clipValueMax",r,e,t))];case"Relu6":return[Mf(w("x",r,e,t))];case"Rsqrt":return[Rf(Cr(r.inputNames[0],e,t))];case"Prod":return[Pf(w("x",r,e,t),w("axes",r,e,t))];case"LeakyRelu":return[Ol(w("x",r,e,t),w("alpha",r,e,t))];case"Prelu":return[Kl(w("x",r,e,t),w("alpha",r,e,t))];case"IsNan":return[EI(Cr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Qn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){b.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];b.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function qF(r){return!(typeof r=="number"||r.some(e=>e<0))}function gm(r,e,t){let n=_y(r,t),o=!qF(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=_y(s.shape,n)}),!qF(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function _y(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var Uv=class{constructor(e,t,n,o,s,a,i){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=ce(0),Vt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Qn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Vt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Er([],[0].concat(this.elementShape));let n=this.readMany(e);return Qn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),fr(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Er([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Qn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),lt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Br(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(u=>(n+=u,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];G(()=>{t=$(t,[1,n,s]);for(let u=0;u<e.length;++u){let l=u===0?0:o[u-1],p=[0,l,0],c=[1,e[u],s];a[u]=$(Ue(t,p,c),this.elementShape)}return a});let i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,a)}};var gp=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Qn(t,s.shape,"TensorList shape mismatch: "),Vt(s)}),this.idTensor=ce(0),this.maxNumElements=o,Vt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new gp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Qn(e,this.elementShape,"TensorList shape mismatch: ");let o=gm(this.elementShape,this.tensors,e);return G(()=>{let s=this.tensors.map(a=>$(a,o));return fr(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=gm(this.elementShape,this.tensors,e),o=this.tensors.pop();return Qn(o.shape,e,"TensorList shape mismatch: "),$(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Qn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Vt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Qn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=gm(this.elementShape,this.tensors,t);return $(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Qn(this.elementShape,t.shape,"TensorList shape mismatch: "),Vt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Qn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=gm(this.elementShape,this.tensors,n);return e.length===0?Er([],[0].concat(o)):G(()=>{let s=e.map(a=>$(this.tensors[a],o));return fr(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Qn(this.elementShape,t,"TensorList shape mismatch: ");let n=gm(this.elementShape,this.tensors,t);return this.size()===0?Er([],[0].concat(n)):G(()=>{let o=this.tensors.map(s=>$(s,n));return lt(o,0)})}};function XF(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Qn(o,e,"TensorList shape mismatch: ");let s=Br(r);return new gp(s,e,n)}function YF(r,e,t){return new gp([],r,e,t)}function QF(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new gp([],t,r.dtype,n),a=Br(r,0);return e.forEach((i,u)=>{s.setItem(i,a[u])}),s}function ZF(r,e,t){let n=0,o=e.map(p=>(n+=p,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=_y(s,t),i=n===0?0:r.size/n,u=G(()=>{let p=[];r=$(r,[1,n,i]);for(let c=0;c<e.length;++c){let m=c===0?0:o[c-1],f=[0,m,0],d=[1,e[c],i];p[c]=$(Ue(r,f,d),a)}return r.dispose(),p}),l=new gp([],t,r.dtype,e.length);for(let p=0;p<u.length;p++)l.setItem(p,u[p]);return l}var JF=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=w("thenBranch",r,e,t),o=w("elseBranch",r,e,t),s=w("cond",r,e,t),a=w("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=w("body",r,e,t),o=w("cond",r,e,t),s=w("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(p=>p.id),u=await a[0].data();a.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&p.dispose()});let l=s;for(;u[0];){let p=l;l=await t.functionMap[n].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);let c=l.map(f=>f.id);p.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&c.indexOf(f.id)===-1&&f.dispose()});let m=await t.functionMap[o].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);u=await m[0].data(),m.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&c.indexOf(f.id)===-1&&f.dispose()})}return l}case"LoopCond":{let n=w("pred",r,e,t);return[Ma(n)]}case"Switch":{let n=w("pred",r,e,t),o=w("data",r,e,t);return o.kept||(o=Ma(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>Cr(o,e,t)!==void 0);if(n){let o=Cr(n,e,t);return[Ma(o)]}return}case"Enter":{let n=w("frameName",r,e,t),o=w("tensor",r,e,t);return t.enterFrame(n),[Ma(o)]}case"Exit":{let n=w("tensor",r,e,t);return t.exitFrame(),[Ma(n)]}case"NextIteration":{let n=w("tensor",r,e,t);return t.nextIteration(),[Ma(n)]}case"TensorArrayV3":{let n=w("size",r,e,t),o=w("dtype",r,e,t),s=w("elementShape",r,e,t),a=w("dynamicSize",r,e,t),i=w("clearAfterRead",r,e,t),u=w("identicalElementShapes",r,e,t),l=w("name",r,e,t),p=new Uv(l,o,n,s,u,a,i);return t.addTensorArray(p),[p.idTensor,ce(1)]}case"TensorArrayWriteV3":{let n=w("tensorArrayId",r,e,t),o=w("index",r,e,t),s=w("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=w("tensorArrayId",r,e,t),o=w("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=w("tensorArrayId",r,e,t),o=w("indices",r,e,t),s=w("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=w("tensorArrayId",r,e,t),o=w("indices",r,e,t),s=w("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=w("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=w("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=w("tensorArrayId",r,e,t),o=w("tensor",r,e,t),s=w("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=w("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ce(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=w("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=w("tensorListId",r,e,t),o=w("index",r,e,t),s=w("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=w("tensorListId",r,e,t),o=w("index",r,e,t),s=w("elementShape",r,e,t),a=w("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=w("indices",r,e,t),o=w("tensor",r,e,t),s=w("elementShape",r,e,t),a=w("numElements",r,e,t),i=QF(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=w("elementShape",r,e,t),o=w("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=w(s,r,e,t),i=YF(n,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{let n=w("tensorListId",r,e,t),o=w("indices",r,e,t),s=w("elementShape",r,e,t),a=w("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=w("tensorListId",r,e,t),o=w("elementShape",r,e,t),s=w("elementDType",r,e,t),a=w("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=w("tensor",r,e,t),o=w("elementShape",r,e,t),s=w("elementDType",r,e,t),a=XF(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":{let n=w("tensorListId",r,e,t),o=t.getTensorList(n.id),s=w("dtype",r,e,t),a=w("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=w("tensorListId",r,e,t),o=w("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=w("tensorListId",r,e,t),o=w("elementShape",r,e,t),s=w("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=w("tensor",r,e,t),o=w("elementShape",r,e,t),s=w("lengths",r,e,t),a=ZF(n,s,o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function eM(r,e,t){let[n,o]=w("fusedOps",r,e,t),s=n==="biasadd",a=!s,i=o==="prelu",u=n==="fusedbatchnorm",l=w("numArgs",r,e,t);if(s){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=w("strides",r,e,t),c=bh(r,e,t),m=w("dataFormat",r,e,t).toUpperCase(),f=w("dilations",r,e,t),[d,h]=w("args",r,e,t);a&&(h=d,d=void 0);let g=w("leakyreluAlpha",r,e,t);return{stride:p,pad:c,dataFormat:m,dilations:f,biasArg:d,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var tM=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=w("stride",r,e,t),o=w("pad",r,e,t),s=w("dataFormat",r,e,t).toUpperCase(),a=w("dilation",r,e,t);return[kf(w("x",r,e,t),w("filter",r,e,t),n,o,s,a)]}case"Conv2D":{let n=w("strides",r,e,t),o=bh(r,e,t),s=w("dataFormat",r,e,t).toUpperCase(),a=w("dilations",r,e,t);return[qn(w("x",r,e,t),w("filter",r,e,t),[n[1],n[2]],o,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:p}=eM(r,e,t);return[Ds.conv2d({x:w("x",r,e,t),filter:w("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:p}=eM(r,e,t);return[Ds.depthwiseConv2d({x:w("x",r,e,t),filter:w("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=w("outputShape",r,e,t),o=w("strides",r,e,t),s=bh(r,e,t);return[If(w("x",r,e,t),w("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=w("strides",r,e,t),o=bh(r,e,t),s=w("dilations",r,e,t),a=w("dataFormat",r,e,t).toUpperCase();return[Ji(w("input",r,e,t),w("filter",r,e,t),[n[1],n[2]],o,a,[s[1],s[2]])]}case"Conv3D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("dataFormat",r,e,t).toUpperCase(),a=w("dilations",r,e,t);return[Cf(w("x",r,e,t),w("filter",r,e,t),[n[1],n[2],n[3]],o,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[El(w("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Wl(w("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t),a=w("includeBatchInIndex",r,e,t),{result:i,indexes:u}=GI(w("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,a);return[i,u]}case"AvgPool3D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[xf(w("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Df(w("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("dilations",r,e,t),a=n[1],i=n[2],u=s[1],l=s[2];return[NI(w("x",r,e,t),w("filter",r,e,t),[a,i],o,[u,l],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var rM=(r,e,t)=>{switch(r.op){case"Fill":{let n=w("shape",r,e,t),o=w("dtype",r,e,t),s=w("value",r,e,t);return[Ca(n,s,o)]}case"LinSpace":{let n=w("start",r,e,t),o=w("stop",r,e,t),s=w("num",r,e,t);return[RI(n,o,s)]}case"Multinomial":{let n=w("logits",r,e,t),o=w("numSamples",r,e,t),s=w("seed",r,e,t);return[KI(n,o,s)]}case"OneHot":{let n=w("indices",r,e,t),o=w("depth",r,e,t),s=w("onValue",r,e,t),a=w("offValue",r,e,t);return[Xi(n,o,s,a)]}case"Ones":return[mr(w("shape",r,e,t),w("dtype",r,e,t))];case"OnesLike":return[Ar(w("x",r,e,t))];case"RandomUniform":return[va(w("shape",r,e,t),w("minval",r,e,t),w("maxval",r,e,t),w("dtype",r,e,t))];case"Range":{let n=w("start",r,e,t),o=w("stop",r,e,t),s=w("step",r,e,t);return[nu(n,o,s,w("dtype",r,e,t))]}case"TruncatedNormal":{let n=w("shape",r,e,t),o=w("mean",r,e,t),s=w("stdDev",r,e,t),a=w("seed",r,e,t);return[Xl(n,o,s,w("dtype",r,e,t),a)]}case"Zeros":return[Tt(w("shape",r,e,t),w("dtype",r,e,t))];case"ZerosLike":return[De(w("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Kv(r,e,t){let n=w("boxes",r,e,t),o=w("scores",r,e,t),s=w("maxOutputSize",r,e,t),a=w("iouThreshold",r,e,t),i=w("scoreThreshold",r,e,t),u=w("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}var nM=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}=Kv(r,e,t),l=await Mn.nonMaxSuppressionWithScoreAsync(n,o,s,a,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=Kv(r,e,t),u=w("padToMaxOutputSize",r,e,t),l=await Mn.nonMaxSuppressionPaddedAsync(n,o,s,a,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=Kv(r,e,t);return[await Mn.nonMaxSuppressionAsync(n,o,s,a,i)]}case"Where":{let n=Q(w("condition",r,e,t),"bool"),o=[await Uf(n)];return n.dispose(),o}case"ListDiff":return tC(w("x",r,e,t),w("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var oM=(r,e,t)=>{switch(r.op){case"TopKV2":{let n=w("x",r,e,t),o=w("k",r,e,t),s=w("sorted",r,e,t),a=sC(n,o,s);return[a.values,a.indices]}case"Unique":{let n=w("x",r,e,t),o=Cb(n);return[o.values,o.indices]}case"UniqueV2":{let n=w("x",r,e,t),o=w("axis",r,e,t),s=Cb(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var sM=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=w("default",r,e,t);return[Cr(r.name,e,t)||n];case"Placeholder":return[Cr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=w("x",r,e,t);return[Ma(l)]}case"IdentityN":return w("x",r,e,t).map(l=>Ma(l));case"Snapshot":let o=w("x",r,e,t);return[Ma(o)];case"Shape":return[Wt(w("x",r,e,t).shape,"int32")];case"ShapeN":return w("x",r,e,t).map(l=>Wt(l.shape));case"Size":return[ce(w("x",r,e,t).size,"int32")];case"Rank":return[ce(w("x",r,e,t).rank,"int32")];case"NoOp":return[ce(1)];case"Print":let s=w("x",r,e,t),a=w("data",r,e,t),i=w("message",r,e,t),u=w("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let l=0;l<a.length;l++)console.log(Array.prototype.slice.call(a[l].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Vv=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=ce(0),this.tensorMap=new Map,Vt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),G(()=>{let o=Br(t),s=n.length,a=o.length;b.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let u=n[i],l=o[i];Vt(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return G(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return fr(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var aM=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=w("keyDType",r,e,t),s=w("valueDType",r,e,t),a=new Vv(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=w("tableHandle",r,e,t,n),s=w("keys",r,e,t),a=w("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=w("tableHandle",r,e,t,n),s=w("keys",r,e,t),a=w("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=w("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var iM=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=w("images",r,e,t),o=w("size",r,e,t),s=w("alignCorners",r,e,t),a=w("halfPixelCenters",r,e,t);return[Mn.resizeBilinear(n,[o[0],o[1]],s,a)]}case"ResizeNearestNeighbor":{let n=w("images",r,e,t),o=w("size",r,e,t),s=w("alignCorners",r,e,t),a=w("halfPixelCenters",r,e,t);return[Mn.resizeNearestNeighbor(n,[o[0],o[1]],s,a)]}case"CropAndResize":{let n=w("image",r,e,t),o=w("boxes",r,e,t),s=w("boxInd",r,e,t),a=w("cropSize",r,e,t),i=w("method",r,e,t),u=w("extrapolationValue",r,e,t);return[Mn.cropAndResize(n,o,s,a,i,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uM=(r,e,t)=>{switch(r.op){case"Equal":return[Kr(w("a",r,e,t),w("b",r,e,t))];case"NotEqual":return[ti(w("a",r,e,t),w("b",r,e,t))];case"Greater":return[nr(w("a",r,e,t),w("b",r,e,t))];case"GreaterEqual":return[qo(w("a",r,e,t),w("b",r,e,t))];case"Less":return[Sf(w("a",r,e,t),w("b",r,e,t))];case"LessEqual":return[Xo(w("a",r,e,t),w("b",r,e,t))];case"LogicalAnd":return[jr(w("a",r,e,t),w("b",r,e,t))];case"LogicalNot":return[Gl(w("a",r,e,t))];case"LogicalOr":return[Nf(w("a",r,e,t),w("b",r,e,t))];case"Select":case"SelectV2":return[Gt(w("condition",r,e,t),w("a",r,e,t),w("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lM=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ve(w("a",r,e,t),w("b",r,e,t),w("transposeA",r,e,t),w("transposeB",r,e,t))];case"Einsum":return[PI(w("equation",r,e,t),...w("tensors",r,e,t))];case"Transpose":return[qe(w("x",r,e,t),w("perm",r,e,t))];case"_FusedMatMul":let[n,o]=w("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=w("numArgs",r,e,t),u=w("leakyreluAlpha",r,e,t);if(s){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,p]=w("args",r,e,t);return[Ds.matMul({a:w("a",r,e,t),b:w("b",r,e,t),transposeA:w("transposeA",r,e,t),transposeB:w("transposeB",r,e,t),bias:l,activation:o,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pM=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Za(w("x",r,e,t),w("mean",r,e,t),w("variance",r,e,t),w("offset",r,e,t),w("scale",r,e,t),w("epsilon",r,e,t))];case"FusedBatchNormV3":return[Za(w("x",r,e,t),w("mean",r,e,t),w("variance",r,e,t),w("offset",r,e,t),w("scale",r,e,t),w("epsilon",r,e,t))];case"LRN":return[LI(w("x",r,e,t),w("radius",r,e,t),w("bias",r,e,t),w("alpha",r,e,t),w("beta",r,e,t))];case"Softmax":return[jl(w("x",r,e,t))];case"LogSoftmax":return[_f(w("x",r,e,t))];case"SparseToDense":return[Sb(w("sparseIndices",r,e,t),w("outputShape",r,e,t),w("sparseValues",r,e,t),w("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var cM=(r,e,t)=>{switch(r.op){case"Max":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Qr(w("x",r,e,t),a,i)]}case"Mean":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Lt(w("x",r,e,t),a,i)]}case"Min":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Bc(w("x",r,e,t),a,i)]}case"Sum":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[me(w("x",r,e,t),a,i)]}case"All":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[yf(w("x",r,e,t),a,i)]}case"Any":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Ec(w("x",r,e,t),a,i)]}case"ArgMax":{let a=w("axis",r,e,t);return[Qi(w("x",r,e,t),a)]}case"ArgMin":{let a=w("axis",r,e,t);return[uI(w("x",r,e,t),a)]}case"Prod":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Pf(w("x",r,e,t),a,i)]}case"Cumsum":{let a=w("axis",r,e,t),i=w("exclusive",r,e,t),u=w("reverse",r,e,t);return[wf(w("x",r,e,t),a,i,u)]}case"Bincount":let n=w("x",r,e,t),o=w("weights",r,e,t),s=w("size",r,e,t);return[Tf(n,o,s)];case"DenseBincount":{let a=w("x",r,e,t),i=w("weights",r,e,t),u=w("size",r,e,t),l=w("binaryOutput",r,e,t);return[_I(a,i,u,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var mM=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=w("n",r,e,t),o=w("axis",r,e,t),s=w("tensors",r,e,t);return s=s.slice(0,n),[lt(s,o)]}case"Gather":{let n=w("x",r,e,t),o=w("indices",r,e,t);return[Ja(n,Q(o,"int32"),0)]}case"GatherV2":{let n=w("axis",r,e,t),o=w("batchDims",r,e,t),s=w("x",r,e,t),a=w("indices",r,e,t);return[Ja(s,Q(a,"int32"),n,o)]}case"Reverse":{let n=w("dims",r,e,t),o=[];for(let a=0;a<n.length;a++)n[a]&&o.push(a);let s=w("x",r,e,t);return[xr(s,o)]}case"ReverseV2":{let n=w("axis",r,e,t),o=w("x",r,e,t);return[xr(o,n)]}case"Slice":{let n=w("begin",r,e,t),o=w("size",r,e,t);return[Ue(w("x",r,e,t),n,o)]}case"StridedSlice":{let n=w("begin",r,e,t),o=w("end",r,e,t),s=w("strides",r,e,t),a=w("beginMask",r,e,t),i=w("endMask",r,e,t),u=w("ellipsisMask",r,e,t),l=w("newAxisMask",r,e,t),p=w("shrinkAxisMask",r,e,t),c=w("x",r,e,t);return[nC(c,n,o,s,a,i,u,l,p)]}case"Pack":return G(()=>{let n=w("axis",r,e,t),o=w("tensors",r,e,t),s=o[0].shape,a=cn(o[0]).shape,i=o.map(u=>{let l=b.arraysEqual(u.shape,s);if(!l&&!b.arraysEqual(cn(u).shape,a))throw new Error("the input tensors shape does not match");return l?u:$(u,s)});return[fr(i,n)]});case"Unpack":{let n=w("axis",r,e,t),o=w("tensor",r,e,t);return Br(o,n)}case"Tile":{let n=w("reps",r,e,t);return[Vr(w("x",r,e,t),n)]}case"Split":case"SplitV":{let n=w("axis",r,e,t),o=w("numOrSizeSplits",r,e,t),s=w("x",r,e,t);return Ir(s,o,n)}case"ScatterNd":{let n=w("indices",r,e,t),o=w("values",r,e,t),s=w("shape",r,e,t);return[z0(n,o,s)]}case"GatherNd":{let n=w("x",r,e,t),o=w("indices",r,e,t);return[W0(n,o)]}case"SparseToDense":{let n=w("sparseIndices",r,e,t),o=w("outputShape",r,e,t),s=w("sparseValues",r,e,t),a=w("defaultValue",r,e,t);return[Sb(n,s,o,s.dtype===a.dtype?a:Q(a,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fM=(r,e,t)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:o,emptyRowIndicator:s,reverseIndexMap:a}=Kf.sparseFillEmptyRows(w("indices",r,e,t),w("values",r,e,t),w("denseShape",r,e,t),w("defaultValue",r,e,t));return[n,o,s,a]}case"SparseReshape":{let{outputIndices:n,outputShape:o}=Kf.sparseReshape(w("inputIndices",r,e,t),w("inputShape",r,e,t),w("newShape",r,e,t));return[n,o]}case"SparseSegmentMean":return[Kf.sparseSegmentMean(w("data",r,e,t),w("indices",r,e,t),w("segmentIds",r,e,t))];case"SparseSegmentSum":return[Kf.sparseSegmentSum(w("data",r,e,t),w("indices",r,e,t),w("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dM=(r,e,t)=>{switch(r.op){case"FFT":return[Hl(w("x",r,e,t))];case"IFFT":return[Hu(w("x",r,e,t))];case"RFFT":return[ql(w("x",r,e,t))];case"IRFFT":return[Gf(w("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hM=(r,e,t)=>{switch(r.op){case"StringNGrams":{let{nGrams:n,nGramsSplits:o}=Rb.stringNGrams(w("data",r,e,t),w("dataSplits",r,e,t),w("separator",r,e,t),w("nGramWidths",r,e,t),w("leftPad",r,e,t),w("rightPad",r,e,t),w("padWidth",r,e,t),w("preserveShortSequences",r,e,t));return[n,o]}case"StringSplit":{let{indices:n,values:o,shape:s}=Rb.stringSplit(w("input",r,e,t),w("delimiter",r,e,t),w("skipEmpty",r,e,t));return[n,o,s]}case"StringToHashBucketFast":return[Rb.stringToHashBucketFast(w("input",r,e,t),w("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gM=(r,e,t)=>{switch(r.op){case"Cast":return[Q(w("x",r,e,t),w("dtype",r,e,t))];case"ExpandDims":{let n=w("axis",r,e,t);return[_r(w("x",r,e,t),n)]}case"Squeeze":{let n=w("axis",r,e,t);return[cn(w("x",r,e,t),n)]}case"Reshape":return[$(w("x",r,e,t),w("shape",r,e,t))];case"MirrorPad":return[WI(w("x",r,e,t),w("padding",r,e,t),w("mode",r,e,t))];case"PadV2":case"Pad":return[Pn(w("x",r,e,t),w("padding",r,e,t),w("constantValue",r,e,t))];case"SpaceToBatchND":{let n=w("blockShape",r,e,t),o=w("paddings",r,e,t);return[Ul(w("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=w("blockShape",r,e,t),o=w("crops",r,e,t);return[Rl(w("x",r,e,t),n,o)]}case"DepthToSpace":{let n=w("blockSize",r,e,t),o=w("dataFormat",r,e,t).toUpperCase();return[AI(w("x",r,e,t),n,o)]}case"BroadcastTo":return[Ll(w("x",r,e,t),w("shape",r,e,t))];case"BroadcastArgs":return[TI(w("s0",r,e,t),w("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function jv(r,e,t,n){let o=((s,a,i)=>{switch(s.category){case"arithmetic":return G(()=>jF(s,a,i));case"basic_math":return G(()=>HF(s,a,i));case"control":return JF(s,a,i);case"convolution":return G(()=>tM(s,a,i));case"creation":return G(()=>rM(s,a,i));case"dynamic":return nM(s,a,i);case"evaluation":return G(()=>oM(s,a,i));case"image":return G(()=>iM(s,a,i));case"graph":return G(()=>sM(s,a,i));case"logical":return G(()=>uM(s,a,i));case"matrices":return G(()=>lM(s,a,i));case"normalization":return G(()=>pM(s,a,i));case"reduction":return G(()=>cM(s,a,i));case"slice_join":return G(()=>mM(s,a,i));case"sparse":return G(()=>fM(s,a,i));case"spectral":return G(()=>dM(s,a,i));case"string":return G(()=>hM(s,a,i));case"transformation":return G(()=>gM(s,a,i));case"hash_table":return aM(s,a,i,n);case"custom":let u=dy(s.op);if(u&&u.customExecutor)return u.customExecutor(new Wv(s,a,i));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return b.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var Ay=class{constructor(e={},t={},n={},o={}){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Hv(r,e,t,n){let o=new Set,s=[],a=null,i=null,u=new Set,l=Object.keys(r).map(m=>yn(m)[0]),p=[];n!=null&&(p=n.map(m=>yn(m.name)[0]));let c=[...e];for(;c.length>0;){let m=c.pop();if((qv(m)||MJ(m)||EJ(m))&&a==null&&(a=m,i=a.children.map(f=>f.name).filter(f=>o.has(f))),o.add(m.name),t[m.name]==null&&l.indexOf(m.name)===-1&&p.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{u.has(f.name)||(u.add(f.name),c.push(f))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function bM(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],a=Object.keys(o).map(p=>yn(p)[0]).map(p=>r.nodes[p]),i=r.initNodes;a.forEach(p=>{n.has(p.name)&&s.push(p)}),r.weights.forEach(p=>{n.has(p.name)&&s.push(p)}),i!=null&&i.forEach(p=>{n.has(p.name)&&s.push(p)});let u=new Set,l=[];for(;s.length>0;){let p=s.pop();u.add(p.name),e[p.name]||l.push(p),p.children.forEach(c=>{!u.has(c.name)&&n.has(c.name)&&c.inputs.every(m=>u.has(m.name))&&s.push(c)})}return l}var DJ=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],PJ=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],FJ=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function qv(r){return DJ.indexOf(r.op)>=0}function MJ(r){return PJ.indexOf(r.op)>=0}function EJ(r){return FJ.indexOf(r.op)>=0}var bm=class{constructor(e,t){this.graph=e;this.parent=t;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new bm(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=Hv(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=t.map(l=>l.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return bM(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(c=>this.graph.nodes[yn(c)[0]]),s=t.map(c=>yn(c)[0]),a=s.map(c=>this.graph.nodes[c]);a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),u=this.compiledMap.get(i);u==null&&(u=this.compile(e,a),this.compiledMap.set(i,u));let l={},p={};return G(()=>{let c=new Ay(this.weightMap,l,p,this.functionExecutorMap),m={...this.weightMap};Object.keys(e).forEach(h=>{let[g,y]=yn(h),x=[];x[y]=e[h],m[g]=x});let f=this.getFrozenTensorIds(m),d={};for(let h=0;h<u.length;h++){let g=u[h];if(!m[g.name]){let y=jv(g,m,c,this._resourceManager);if(b.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);m[g.name]=y,this.checkTensorForDisposal(g.name,g,m,c,f,s,d)}}return this.parent==null&&c.dispose(f),t.map(h=>Cr(h,m,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(u=>{u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length)}),t.inputs.forEach(u=>{if(u.category!=="control"){let l=WF(u.name,n,o);l!=null&&l.forEach(p=>{if(p&&!p.kept&&!s.has(p.id)){let c=i[p.id];c===1?(p.dispose(),delete i[p.id]):c!=null&&i[p.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let a=new Ay(this.weightMap,o,s,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),u=t.map(m=>Cr(m,i,a)),l=u.map(m=>m.id),p=Object.keys(e).map(m=>e[m].id),c=new Set([...l,...p,...this.weightIds]);return Object.keys(i).forEach(m=>{i[m].forEach(d=>{d&&!d.kept&&!d.isDisposed&&!c.has(d.id)&&d.dispose()})}),this.parent==null&&a.dispose(c),u}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(T=>this.graph.nodes[yn(T)[0]]),i=n.map(T=>yn(T)[0]),u=i.map(T=>this.graph.nodes[T]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:c,syncInputs:m}=Hv(e,u,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(T=>({node:T,contexts:t.currentContext})),d={...this.weightMap};Object.keys(e).forEach(T=>{let[k,v]=yn(T),P=[];P[v]=e[T],d[k]=P});let h={},g=this.getFrozenTensorIds(d),y={};for(;f.length>0;){let T=this.processStack(a,f,t,d,y,g,i,h,l);await Promise.all(T)}c==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=u.filter(T=>!qv(T)&&!Cr(T.name,d,t)).map(T=>T.name);if(x.length>0){let T="";throw c!=null&&(T=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${T}`)}return d}processStack(e,t,n,o,s,a,i,u,l){let p=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let m="";if(c.node.op==="Enter"&&w("isConstant",c.node,o,n)&&([m]=Fa(c.node.name,n)),o[c.node.name]==null){let f=jv(c.node,o,n,this._resourceManager);m||([m]=Fa(c.node.name,n));let d=n.currentContext;b.isPromise(f)?p.push(f.then(h=>(o[m]=h,n.currentContext=d,this.checkTensorForDisposal(m,c.node,o,n,a,i,u),this.processChildNodes(c.node,t,n,o,s,l),h))):(o[m]=f,this.checkTensorForDisposal(m,c.node,o,n,a,i,u),this.processChildNodes(c.node,t,n,o,s,l))}else this.processChildNodes(c.node,t,n,o,s,l)}return p}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[u]=Fa(i.name,n);s[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Cr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!Cr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=yn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((u,l)=>a[l]===-1||a[l]===u);b.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=yn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=yn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var Xv=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var RJ="?tfjs-format=file",LJ="model.json",Yv=class{constructor(e,t={}){this.modelUrl=e;this.loadOptions=t;this.version="n/a";t==null&&(this.loadOptions={}),this.resourceManager=new Xv}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Ur.browserHTTPRequest(e,this.loadOptions);else{let t=Ur.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Ur.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Ur.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new bm(gy.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=gy.Instance.transformGraph(e.modelInitializer);this.initializer=new bm(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Ur.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ye)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function $J(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${LJ}${RJ}`);let t=new Yv(r,e);return await t.load(),t}var BJ="0.0.0";var eE={};Qe(eE,{CSVDataset:()=>Ih,Dataset:()=>li,FileDataSource:()=>_h,TextLineDataset:()=>Th,URLDataSource:()=>Ah,array:()=>OM,csv:()=>qM,func:()=>XM,generator:()=>YM,microphone:()=>ZM,version_data:()=>JM,webcam:()=>QM,zip:()=>zM});var BM=Tl(Ff());var CM=Tl(Ff());function yM(r,e){return Ny(r,e)}function Ny(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(ol(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],u=Ny(i,e,t,n);s[a]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function xM(r,e=Zv){return TM(r,e)}function TM(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(ol(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(l=>l[a]),u=TM(i,e,t);s[a]=u}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function Zv(r){return r===null?null:ol(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function Dy(r,e){let t=new Map;Ny(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(b.isPromise(s)){let a=await s;t.set(o,a)}}return Ny(r,e,t)}function ol(r){let e=!1;if(W().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=Qv();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Ye)&&!(r instanceof Promise)&&!e)}function kM(r){return r==null||OJ(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Ye||b.isTypedArray(r)}function OJ(r){return r===null||typeof r!="object"&&typeof r!="function"}function IM(r){return yM(r,zJ)}function zJ(r){return r instanceof Ye?{value:r.clone(),recurse:!1}:ol(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var yh=class{constructor(e){this.capacity=e;this.begin=0;this.end=0;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var Jv=class extends yh{constructor(){super(Jv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},Py=Jv;Py.INITIAL_CAPACITY=32;function ew(r){return new SM(r)}function xh(r){return new _M(r)}function vM(r,e){return new rw(r,e)}function wM(r,e=pu.FAIL){return new LM(r,e)}var ur=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new EM(this,e)}filter(e){return new FM(this,e)}map(e){return new MM(this,e)}mapAsync(e){return new tw(this,e)}serialMapAsync(e){return new tw(this,e).serial()}flatmap(e){return new RM(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new PM(this,e,t)}columnMajorBatch(e,t=!0,n=Zv){return this.rowMajorBatch(e,t).map(s=>xM(s,n))}concatenate(e,t){return new rw(ew([this,e]),t)}take(e){return e<0||e==null?this:new DM(this,e)}skip(e){return e<0||e==null?this:new NM(this,e)}prefetch(e){return new nw(this,e)}shuffle(e,t){return new $M(this,e,t)}serial(){return new AM(this)}},SM=class extends ur{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:IM(e),done:!1}}},_M=class extends ur{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},AM=class extends ur{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},NM=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ee(e.value)}return this.upstream.next()}},DM=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},PM=class extends ur{constructor(e,t,n=!0){super();this.upstream=e;this.batchSize=t;this.enableSmallLastBatch=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},FM=class extends ur{constructor(e,t){super();this.upstream=e;this.predicate=t;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ee(e.value)}}},MM=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=As.getTensorsInContainer(e.value),n=this.transform(e.value),o=As.getTensorsInContainer(n);for(let s of t)As.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},EM=class extends ur{constructor(e,t){super();this.upstream=e;this.handler=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},tw=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=As.getTensorsInContainer(e.value),n=await this.transform(e.value),o=As.getTensorsInContainer(n);for(let s of t)As.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},ym=class extends ur{constructor(){super();this.outputQueue=new Py,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},RM=class extends ym{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=As.getTensorsInContainer(e.value),n=this.transform(e.value),o=As.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)As.isTensorInList(s,o)||s.dispose();return!0}},rw=class extends ur{constructor(e,t){super();this.baseErrorHandler=t;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},pu;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(pu||(pu={}));var LM=class extends ur{constructor(e,t=0){super();this.iterators=e;this.mismatchMode=t;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(a){return a instanceof ur?{value:a.next().then(u=>(t++,u.done&&n++,u.value)),recurse:!1}:{value:null,recurse:!0}}let s=await Dy(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},nw=class extends ur{constructor(e,t){super();this.upstream=e;this.bufferSize=t;this.buffer=new yh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},$M=class extends nw{constructor(e,t,n){super(e,t);this.upstream=e;this.windowSize=t;this.upstreamExhausted=!1;this.random=CM.alea(n||b.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var li=class{constructor(){this.size=null}batch(e,t=!0){let n=this;b.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),Ln(async()=>(await n.iterator()).columnMajorBatch(e,t,GJ),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Ln(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Ln(async()=>(await t.iterator()).filter(o=>G(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Ln(async()=>(await t.iterator()).map(n=>G(()=>e(n))),this.size)}mapAsync(e){let t=this;return Ln(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Ln(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Ln(async()=>{let o=xh(async()=>({value:await t.iterator(),done:!1}));return vM(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Ln(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=BM.alea(t||b.now().toString());return Ln(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Ln(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};li.MAX_BUFFER_SIZE=1e4;function Ln(r,e=null){return new class extends li{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function OM(r){return Ln(async()=>ew(r),r.length)}function zM(r){if(!ol(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return Ln(async()=>{let t=await Dy(r,n=>{if(n instanceof li)return{value:n.iterator(),recurse:!1};if(ol(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return wM(t,pu.SHORTEST)},e)}function GJ(r){if(r===null)return null;let e=r[0];return kM(e)?{value:WJ(r),recurse:!1}:{value:null,recurse:!0}}function WJ(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Ye?fr(r):Er(r)}var Th=class extends li{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var Fy='"',kh=Symbol("out"),GM=Symbol("field"),My=Symbol("quote"),ow=Symbol("quoteafterquote"),WM=Symbol("quoteinquote"),Ih=class extends li{constructor(e,t){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new Th(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(b.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&b.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(b.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let u=t[s],l=null;if(u==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let p=Number(u);if(isNaN(p))i&&i.dtype==="bool"?l=this.getBoolean(u):l=u;else if(!i||!i.dtype)l=p;else switch(i.dtype){case"float32":l=p;break;case"int32":l=Math.floor(p);break;case"bool":l=this.getBoolean(u);break;default:l=p}}i&&i.isLabel?o[a]=l:n[a]=l}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,a=kh;for(let i=0;i<s;i++)switch(a){case kh:switch(e.charAt(i)){case Fy:o=i+1,a=My;break;case this.delimiter:if(o=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=kh;break;default:a=GM,o=i;break}break;case GM:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i)),a=kh,o=i+1;break;default:}break;case My:switch(e.charAt(i)){case Fy:a=ow;break;default:}break;case ow:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i-1)),a=kh,o=i+1;break;case Fy:a=My;break;default:a=WM;break}break;case WM:switch(e.charAt(i)){case Fy:a=My;break;default:}break;default:}if(a===ow?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var Ch=class extends ur{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(W().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new Ch(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(b.sizeFromShape(t));return n.set(e,n.length-e.length),Er(n,t)}};var vh=class extends ur{constructor(e,t){super();this.webcamVideoElement=e;this.webcamConfig=t;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Wt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-o)/2,i=s+n,u=o+a;this.cropBox=ri([a,s,u,i],[1,4])}else this.cropBox=ri([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(W().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new vh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&b.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=lb.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return G(()=>{let t=_r(Q(e,"float32"),0),n;n=Mn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return $(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var wh=class{};var Ey=class extends ur{split(e){return new UM(this,e)}},UM=class extends Ey{constructor(e,t){super();this.upstream=e;this.impl=new KM(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},KM=class extends ym{constructor(e,t){super();this.upstream=e;this.separator=t;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var sw=class extends ur{decodeUTF8(){return new VM(this)}},VM=class extends Ey{constructor(e){super();this.upstream=e;this.impl=new jM(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},jM=class extends ym{constructor(e){super();this.upstream=e;if(W().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Qv();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return W().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var Sh=class extends sw{constructor(e,t={}){super();this.file=e;this.options=t;b.assert(e instanceof Uint8Array||(W().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=i=>{let u=s.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(u)},s.onabort=i=>n(new Error("Aborted")),s.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,o);s.readAsArrayBuffer(a)}this.offset=o}),done:!1}}};async function HM(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=UJ(r));let s=await(t||b.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new Sh(a,e)}else throw new Error(s.statusText)}var UJ=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function Ry(r){return typeof r=="string"&&r.substr(0,7)==="file://"}var _h=class extends wh{constructor(e,t={}){super();this.input=e;this.options=t}async iterator(){if(Ry(this.input)&&W().get("IS_NODE")){let e=ns("fs");this.input=e.readFileSync(this.input.substr(7))}return new Sh(this.input,this.options)}};var Ah=class extends wh{constructor(e,t={}){super();this.url=e;this.fileOptions=t}async iterator(){return Ry(this.url)?new _h(this.url,this.fileOptions).iterator():HM(this.url,this.fileOptions)}};function qM(r,e={}){return new Ih(new Ah(r),e)}function XM(r){let e=xh(r);return Ln(async()=>e)}function YM(r){return Ln(async()=>{let e=await r();return xh(()=>e.next())})}async function QM(r,e){return vh.create(r,e)}async function ZM(r){return Ch.create(r)}var JM="0.0.0";function re(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var KJ=Tr.whereImpl,aw=class extends os{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new Wa(this,jo())}nextDataId(){return aw.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,W().get("IS_NODE")&&I.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return I.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}makeOutput(e,t,n){let o=this.write(e,t,n);return jo().makeTensorFromDataId(o,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){re([e],"where");let t=this.readSync(e.dataId);return KJ(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Nh=aw;Nh.nextDataId=0;var vm={};Qe(vm,{addImpl:()=>uw,bincountImpl:()=>km,bincountReduceImpl:()=>Ly,ceilImpl:()=>lw,concatImpl:()=>bp,equalImpl:()=>pw,expImpl:()=>mw,expm1Impl:()=>dw,floorImpl:()=>hw,gatherNdImpl:()=>$y,gatherV2Impl:()=>By,greaterEqualImpl:()=>bw,greaterImpl:()=>gw,lessEqualImpl:()=>xw,lessImpl:()=>yw,linSpaceImpl:()=>Oy,logImpl:()=>Tw,maxImpl:()=>zy,maximumImpl:()=>kw,minimumImpl:()=>Iw,multiplyImpl:()=>Dh,negImpl:()=>Cw,notEqualImpl:()=>vw,prodImpl:()=>ww,rangeImpl:()=>xp,rsqrtImpl:()=>Sw,sigmoidImpl:()=>wE,simpleAbsImpl:()=>iw,sliceImpl:()=>Tp,sparseFillEmptyRowsImpl:()=>Gy,sparseReshapeImpl:()=>Wy,sparseSegmentReductionImpl:()=>Cm,sqrtImpl:()=>AE,squaredDifferenceImpl:()=>Aw,stridedSliceImpl:()=>Uy,stringNGramsImpl:()=>Ky,stringSplitImpl:()=>Vy,stringToHashBucketFastImpl:()=>jy,subImpl:()=>Nw,tileImpl:()=>Hy,topKImpl:()=>qy,transposeImpl:()=>Im,uniqueImpl:()=>Xy});function iw(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var VJ=r=>{let{x:e}=r.inputs,t=r.backend;re(e,"abs");let n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=iw(o),t.makeOutput(n,e.shape,e.dtype)},tE={kernelName:as,backendName:"cpu",kernelFunc:VJ};function nt(r){return(e,t,n,o,s)=>{let a=I.assertAndGetBroadcastShape(e,t),i=a.length,u=b.computeStrides(a),l=b.sizeFromShape(a),p=b.getTypedArrayFromDType(s,l),c=e.length,m=t.length,f=b.computeStrides(e),d=b.computeStrides(t),h=I.getBroadcastDims(e,a),g=I.getBroadcastDims(t,a);if(h.length+g.length===0)for(let y=0;y<p.length;++y)p[y]=r(n[y%n.length],o[y%o.length]);else for(let y=0;y<p.length;++y){let x=b.indexToLoc(y,i,u),T=x.slice(-c);h.forEach(A=>T[A]=0);let k=b.locToIndex(T,c,f),v=x.slice(-m);g.forEach(A=>v[A]=0);let P=b.locToIndex(v,m,d);p[y]=r(n[k],o[P])}return[p,a]}}function vr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),u=t.data.get(i.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var rE={kernelName:Nu,backendName:"cpu",kernelFunc:vr};function xm(r,e,t="float32"){if(t==="complex64"){let o=xm(r,e,"float32"),s=xm(r,e,"float32");return vr({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Xr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var nE={kernelName:Kn,backendName:"cpu",kernelFunc:Xr};function zs(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var oE={kernelName:$u,backendName:"cpu",kernelFunc:zs};function Gs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Xr({inputs:{x:o},backend:t});let a=xm(t,o.shape,o.dtype),i=Gs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=vr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=zs({inputs:{input:o},backend:t}),i=Gs({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=Xr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(o.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(o.shape,"int32",i)}if(s==="bool"){let a=t.data.get(o.dataId).values,i=b.toTypedArray([0],o.dtype),[u,l]=nt((p,c)=>p!==c?1:0)(o.shape,[],a,i,"bool");return t.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var sE={kernelName:Wn,backendName:"cpu",kernelFunc:Gs};function it(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;re([a,i],r);let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,c=a.dtype==="string"?I.fromUint8ToStringArray(l):l,m=a.dtype==="string"?I.fromUint8ToStringArray(p):p,f=n||a.dtype,[d,h]=e(a.shape,i.shape,c,m,f);return u.makeTensorInfo(h,f,d)}:({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let l=Gs({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(l.dataId),c=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,f=u.data.get(c.dataId).values,d=u.data.get(m.dataId).values,h=Gs({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,T=u.data.get(y.dataId).values,k=u.data.get(x.dataId).values,[v,P,A]=t(a.shape,i.shape,f,d,T,k),F=u.makeTensorInfo(A,"float32",v),E=u.makeTensorInfo(A,"float32",P),L=vr({inputs:{real:F,imag:E},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(F),u.disposeIntermediateTensorInfo(E),L}else{let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,c=n||a.dtype,[m,f]=e(a.shape,i.shape,l,p,c);return u.makeTensorInfo(f,c,m)}}}function Tm(r){return(e,t,n,o,s,a)=>{let i=I.assertAndGetBroadcastShape(e,t),u=b.sizeFromShape(i),l=i.length,p=b.computeStrides(i),c=b.getTypedArrayFromDType("float32",u),m=b.getTypedArrayFromDType("float32",u),f=I.getBroadcastDims(e,i),d=I.getBroadcastDims(t,i),h=I.mergeRealAndImagArrays(n,o),g=I.mergeRealAndImagArrays(s,a),y=e.length,x=b.computeStrides(e),T=t.length,k=b.computeStrides(t);if(f.length+d.length===0)for(let v=0;v<c.length;v++){let P=v%h.length,A=v%g.length,F=r(h[P*2],h[P*2+1],g[A*2],g[A*2+1]);c[v]=F.real,m[v]=F.imag}else for(let v=0;v<c.length;v++){let P=b.indexToLoc(v,l,p),A=P.slice(-y);f.forEach(K=>A[K]=0);let F=b.locToIndex(A,y,x),E=P.slice(-T);d.forEach(K=>E[K]=0);let L=b.locToIndex(E,T,k),U=r(h[F*2],h[F*2+1],g[L*2],g[L*2+1]);c[v]=U.real,m[v]=U.imag}return[c,m,i]}}var uw=nt((r,e)=>r+e),jJ=Tm((r,e,t,n)=>({real:r+t,imag:e+n})),cu=it(_n,uw,jJ),aE={kernelName:_n,backendName:"cpu",kernelFunc:cu};function km(r,e,t,n,o){let s=b.sizeFromShape(n),a=b.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let u=r[i];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?a[u]+=e[i]:a[u]+=1)}return a}function Ly(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=Ce([o,t],e.dtype);for(let i=0;i<o;i++)for(let u=0;u<s;u++){let l=r.get(i,u);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(n?a.set(1,i,l):e.size>0?a.set(a.get(i,l)+e.get(i,u),i,l):a.set(a.get(i,l)+1,i,l))}return a}function xn(r){return(e,t,n)=>{let o=b.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function $e(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(re(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=b.sizeFromShape(a.shape),p=t||a.dtype,c=b.getArrayFromDType(p,l);for(let m=0;m<l;++m)c[m]=e(u[m],o);return i.makeTensorInfo(a.shape,p,c)}}function Ws(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(re(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=t||a.dtype,p=e(u,l,o);return i.makeTensorInfo(a.shape,l,p)}}var lw=xn(r=>Math.ceil(r)),HJ=Ws(io,lw),iE={kernelName:io,backendName:"cpu",kernelFunc:HJ};function bp(r,e,t,n){let o=b.getArrayFromDType(t,b.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=b.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?I.fromUint8ToStringArray(a.vals):a.vals,u=0;for(let l=0;l<a.shape[0];++l){let p=l*e[1]+s;for(let c=0;c<a.shape[1];++c)o[p+c]=i[u++]}s+=a.shape[1]})}return o}var pw=nt((r,e)=>r===e?1:0),cw=it(Zs,pw,null,"bool"),uE={kernelName:Zs,backendName:"cpu",kernelFunc:cw};var mw=xn(r=>Math.exp(r)),fw=Ws(go,mw,"float32"),lE={kernelName:go,backendName:"cpu",kernelFunc:fw};var dw=xn(r=>Math.expm1(r)),qJ=Ws(Js,dw),pE={kernelName:Js,backendName:"cpu",kernelFunc:qJ};var hw=xn(r=>Math.floor(r)),XJ=Ws(bo,hw),cE={kernelName:bo,backendName:"cpu",kernelFunc:XJ};function $y(r,e,t,n,o,s,a,i,u){let l=Ce([n,s],t);for(let p=0;p<n;p++){let c=[],m=0;for(let f=0;f<o;f++){let d=r[p*o+f];m+=d*a[f],c.push(d)}if(m<0||m>=u/s)throw new Error(`Invalid indices: ${c} does not index into ${i}`);for(let f=0;f<s;f++)l.values[p*s+f]=e.get(...e.indexToLoc(m*s+f))}return l}function By(r,e,t){let n=Ce(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],u=a[2],l=e.locToIndex([i,u]);a[2]=e.values[l];let p=r.locToIndex(a);n.values[o]=r.values[p]}return n}var gw=nt((r,e)=>r>e?1:0),YJ=it(ra,gw,null,"bool"),mE={kernelName:ra,backendName:"cpu",kernelFunc:YJ};var bw=nt((r,e)=>r>=e?1:0),QJ=it(To,bw,null,"bool"),fE={kernelName:To,backendName:"cpu",kernelFunc:QJ};var yw=nt((r,e)=>r<e?1:0),ZJ=it(oa,yw,null,"bool"),dE={kernelName:oa,backendName:"cpu",kernelFunc:ZJ};var xw=nt((r,e)=>r<=e?1:0),JJ=it(sa,xw,null,"bool"),hE={kernelName:sa,backendName:"cpu",kernelFunc:JJ};function Oy(r,e,t){let n=(e-r)/(t-1),o=b.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var Tw=xn(r=>Math.log(r)),e9=Ws(ko,Tw),gE={kernelName:ko,backendName:"cpu",kernelFunc:e9};function zy(r,e,t,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let u=0;u<e;++u){let l=r[a+u];(Number.isNaN(l)||l>i)&&(i=l)}o[s]=i}return o}var kw=nt((r,e)=>Math.max(r,e)),t9=it(Co,kw),bE={kernelName:Co,backendName:"cpu",kernelFunc:t9};var Iw=nt((r,e)=>Math.min(r,e)),r9=it(_o,Iw),yE={kernelName:_o,backendName:"cpu",kernelFunc:r9};var Dh=nt((r,e)=>r*e),n9=Tm((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),yp=it(No,Dh,n9),xE={kernelName:No,backendName:"cpu",kernelFunc:yp};function Cw(r,e,t){let n=b.createScalarValue(-1,t);return Dh([],e,n,r,t)}function o9(r){let{inputs:e,backend:t}=r,{x:n}=e;re(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=Cw(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var TE={kernelName:cs,backendName:"cpu",kernelFunc:o9};var vw=nt((r,e)=>r!==e?1:0),s9=it(ia,vw,null,"bool"),kE={kernelName:ia,backendName:"cpu",kernelFunc:s9};function Im(r,e,t,n,o){let s=e.length,a=b.sizeFromShape(e),i=b.computeStrides(e),u=b.computeStrides(o),l=b.getTypedArrayFromDType(t,b.sizeFromShape(o));for(let p=0;p<a;++p){let c=b.indexToLoc(p,s,i),m=new Array(c.length);for(let d=0;d<m.length;d++)m[d]=c[n[d]];let f=b.locToIndex(m,s,u);l[f]=r[p]}return l}function lr(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;re(o,"transpose");let a=o.shape.length,i=new Array(a);for(let c=0;c<i.length;c++)i[c]=o.shape[s[c]];let u=n.data.get(o.dataId).values,l=Im(u,o.shape,o.dtype,s,i);return{dataId:n.write(l,i,o.dtype),shape:i,dtype:o.dtype}}var IE={kernelName:Vo,backendName:"cpu",kernelFunc:lr};function ww(r,e,t,n){let[o,s]=I.computeOutAndReduceShapes(r,n),a=Kt(e,"int32"),i=b.makeZerosTypedArray(b.sizeFromShape(o),a),u=b.sizeFromShape(s);for(let l=0;l<i.length;++l){let p=l*u,c=1;for(let m=0;m<u;++m)c*=t[p+m];i[l]=c}return{outVals:i,outShape:o,outDtype:a}}function a9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"prod");let i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=I.getAxesPermutation(u,i),p=u,c=o,m=[];l!=null&&(c=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),m.push(c),p=I.getInnerMostAxes(p.length,i));let f=t.data.get(c.dataId).values,{outVals:d,outShape:h,outDtype:g}=ww(c.shape,c.dtype,f,p),y=h;return a&&(y=I.expandShapeToKeepDim(h,u)),m.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(y,g,d)}var CE={kernelName:ca,backendName:"cpu",kernelFunc:a9};function xp(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return b.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),u=b.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+t;return u}var Sw=xn(r=>1/Math.sqrt(r)),i9=Ws(Lo,Sw),vE={kernelName:Lo,backendName:"cpu",kernelFunc:i9};var wE=xn(r=>1/(1+Math.exp(-r))),_w=$e(Bo,r=>1/(1+Math.exp(-r))),SE={kernelName:Bo,backendName:"cpu",kernelFunc:_w};function Tp(r,e,t,n,o){let s=It.isSliceContinous(n,e,t),a=b.sizeFromShape(t),i=b.computeStrides(n);if(s){let c=It.computeFlatOffset(e,i);return o==="string"?r.slice(c,c+a):r.subarray(c,c+a)}let u=o==="string"?I.fromUint8ToStringArray(r):r,l=Ce(n,o,u),p=Ce(t,o);for(let c=0;c<p.size;++c){let m=p.indexToLoc(c),f=m.map((d,h)=>d+e[h]);p.set(l.get(...f),...m)}return o==="string"?I.fromStringArrayToUint8(p.values):p.values}function Us(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;re(o,"slice");let[i,u]=It.parseSliceParams(o,s,a);It.assertParamsValid(o,i,u);let l=t.data.get(o.dataId).values,p=Tp(l,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,p)}var _E={kernelName:gs,backendName:"cpu",kernelFunc:Us};function Gy(r,e,t,n,o,s,a){let i=e[0],u=s[0],l=new Array(u),p=new Array(i),c=e[1];if(u===0){if(i!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${i}`);let g=b.getArrayFromDType(t,0),y=b.getArrayFromDType(o,0);return[g,[0,c],y,l,p]}let m=!0,f=0,d=new Array(u).fill(0);for(let g=0;g<i;++g){let y=r[g*c];if(y<0)throw new Error(`indices(${g}, 0) is invalid: ${y} < 0`);if(y>=u)throw new Error(`indices(${g}, 0) is invalid: ${y} >= ${u}`);++d[y],m=m&&y>=f,f=y}let h=!0;for(let g=0;g<u;++g){let y=d[g]===0;l[g]=y,h=h&&!y,d[g]=Math.max(d[g],1),g>0&&(d[g]+=d[g-1])}if(h&&m){let g=r,y=n;for(let x=0;x<i;++x)p[x]=x;return[g,[i,c],y,l,p]}else{let g=d[u-1],y=b.getArrayFromDType(t,g*c),x=b.getArrayFromDType(o,g),T=new Array(u).fill(0);for(let k=0;k<i;++k){let v=r[k*c],P=T[v],A=(v===0?0:d[v-1])+P;T[v]++;for(let F=0;F<c;++F)y[A*c+F]=r[k*c+F];x[A]=n[k],p[k]=A}for(let k=0;k<u;++k)if(T[k]===0){let P=k===0?0:d[k-1];y[P*c+0]=k;for(let A=1;A<c;++A)y[P*c+A]=0;x[P]=a}return[y,[g,c],x,l,p]}}function Wy(r,e,t,n,o){let s=b.sizeFromShape(n),a=e[0],i=o.length,u=[],l=1,p=-1;for(let g=0;g<i;++g){let y=o[g];if(y===-1){if(p!==-1)throw new Error(`only one output dimension may be -1, not both ${p} and ${g}`);p=g,u.push(1)}else{if(y<0)throw new Error(`size ${g} must be non-negative, not ${y}`);l*=y,u.push(y)}}if(p!==-1){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let g=Math.trunc(s/l);if(l*g!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}
          dense values, but the requested shape requires a multiple of ${l}. inputShape=${n} outputShape= ${u}`);u[p]=g}let c=b.sizeFromShape(u);if(c!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${c}. inputShape=${n} outputShape=${u}`);let m=n.length,f=[];if(m>0){f[m-1]=1;for(let g=m-2;g>=0;--g)f[g]=f[g+1]*n[g+1]}let d=[];if(i>0){d[i-1]=1;for(let g=i-2;g>=0;--g)d[g]=d[g+1]*u[g+1]}let h=b.getArrayFromDType(t,a*i);for(let g=0;g<a;++g){let y=0;for(let x=0;x<m;++x)y+=r[g*m+x]*f[x];for(let x=0;x<i;++x)h[g*i+x]=Math.trunc(y/d[x]),y%=d[x]}return[h,[a,i],u]}function Cm(r,e,t,n,o,s=!1,a=0){let i=n.length;if(i!==o.length)throw new Error("segmentIds and indices should have same size.");let u=[e[0],r.length/e[0]],l=u[1],c=i>0?o[i-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");let m=e.slice();m[0]=c;let f=m.reduce((T,k)=>T*k,1),d=b.getArrayFromDType(t,f);if(i===0)return c>0&&d.fill(a),[d,m];if(c<=0)throw new Error("segment ids must be >= 0");let h=0,g=1,y=0,x=o[h];for(;;){let T=0;if(g<i){if(T=o[g],x===T){++g;continue}if(x>=T)throw new Error("segment ids are not increasing")}if(x<0||x>=c)throw new Error(`Segment id ${x} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);x>y&&d.fill(a,y*l,x*l);for(let k=h;k<g;++k){let v=n[k];if(v<0||v>=u[0])throw new Error(`Bad: indices[${k}] == ${n[k]} out of range [0, ${u[0]})`);for(let P=0;P<l;P++)d[x*l+P]+=r[v*l+P]}if(s)for(let k=0;k<l;k++)d[x*l+k]/=g-h;if(h=g,++g,y=x+1,x=T,g>i)break}return y<c&&d.fill(a,y*l,c*l),[d,m]}var AE=xn(r=>Math.sqrt(r)),u9=$e(Oo,r=>Math.sqrt(r)),NE={kernelName:Oo,backendName:"cpu",kernelFunc:u9};var Aw=nt((r,e)=>{let t=r-e;return t*t}),l9=it(Wo,Aw),DE={kernelName:Wo,backendName:"cpu",kernelFunc:l9};function Uy(r,e,t,n){let o=Ce(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*t[u]+n[u];o.set(e.get(...i),...a)}return o}var PE=class{constructor(e,t,n,o,s,a){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,a){for(let i=0;i<s;++i){let u=this.getPadWidth(a),l=Math.max(0,u-i),p=Math.max(0,u-(s-(i+1))),c=a-(l+p),m=t+(l>0?0:i-u),f=0;f+=l*this.leftPad.length;for(let x=0;x<c;++x)f+=e[m+x].length;f+=p*this.rightPad.length,f+=(l+p+c-1)*this.separator.length,n[o+i]=new Uint8Array(f);let h=n[o+i],g=0,y=x=>x.forEach(T=>h[g++]=T);for(let x=0;x<l;++x)y(this.leftPad),y(this.separator);for(let x=0;x<c-1;++x)y(e[m+x]),y(this.separator);if(c>0){y(e[m+c-1]);for(let x=0;x<p;++x)y(this.separator),y(this.rightPad)}else{for(let x=0;x<p-1;++x)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let p=t[l]>=u;if(p=p&&t[l]<=n,!p)throw new Error(`Invalid split value ${t[l]}, must be in [${u}, ${n}]`);u=t[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,a=b.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)a[l]=0;return[u,a]}a[0]=0;for(let u=1;u<=s;++u){let l=t[u]-t[u-1],p=0;this.nGramWidths.forEach(c=>{p+=this.getNumNGrams(l,c)}),this.preserveShort&&l>0&&p===0&&(p=1),a[u]=a[u-1]+p}let i=new Array(a[s]);for(let u=0;u<s;++u){let l=t[u],p=a[u];if(this.nGramWidths.forEach(c=>{let m=t[u+1]-t[u],f=this.getNumNGrams(m,c);this.createNGrams(e,l,i,p,f,c),p+=f}),this.preserveShort&&p===a[u]){let c=t[u+1]-t[u];if(c===0)continue;let m=c+2*this.padWidth,f=1;this.createNGrams(e,l,i,p,f,m)}}return[i,a]}};function Ky(r,e,t,n,o,s,a,i){return new PE(t,n,o,s,a,i).compute(r,e)}function p9(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!t||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!t||a.length!==0)&&n.push(a),o=s+1}}function Vy(r,e,t){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let m=0;m<n;++m){let f=o.length;p9(r[m],e,t,o);let d=o.length-f;i[m]=d,s+=d,a=Math.max(a,d)}let u=b.getArrayFromDType("int32",s*2),l=new Array(s),p=[n,a],c=0;for(let m=0;m<n;++m)for(let f=0;f<i[m];++f)u[c*2]=m,u[c*2+1]=f,l[c]=o[c],++c;return[u,l,p]}function jy(r,e){let t=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=b.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var Nw=nt((r,e)=>r-e),c9=Tm((r,e,t,n)=>({real:r-t,imag:e-n})),Ph=it(Uo,Nw,c9),FE={kernelName:Uo,backendName:"cpu",kernelFunc:Ph};function Hy(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Ce(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let u=0;u<a.length;u++)a[u]=s[u]%r.shape[u];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var Fh=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function ME(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let i=n-t+1,u=e-t+1,l=Math.log(i),p=.5*Math.exp(2*l/3),c=.5*Math.sqrt(l*p*(i-p)/i)*Math.sign(u-i/2),m=Math.max(t,Math.floor(e-u*p/i+c)),f=Math.min(n,Math.floor(e+(i-u)*p/i+c));ME(r,e,m,f)}let o=r[e],s=t,a=n;for(b.swap(r,t,e),Fh(r[n],o)>0&&b.swap(r,t,n);s<a;){for(b.swap(r,s,a),s++,a--;Fh(r[s],o)<0;)s=s+1;for(;Fh(r[a],o)>0;)a=a-1}Fh(r[t],o)===0?b.swap(r,t,a):(a=a+1,b.swap(r,a,n)),a<=e&&(t=a+1),e<=a&&(n=a-1)}}function qy(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],u=b.getTypedArrayFromDType(t,a*n),l=b.getTypedArrayFromDType("int32",a*n);for(let c=0;c<a;c++){let m=c*i,f=r.subarray(m,m+i),d=new Array(f.length);f.forEach((x,T)=>d[T]={value:x,index:T}),n<d.length&&(ME(d,n),d=d.slice(0,n)),o&&d.sort(Fh);let h=c*n,g=u.subarray(h,h+n),y=l.subarray(h,h+n);for(let x=0;x<n;x++)g[x]=d[x].value,y[x]=d[x].index}let p=e.slice();return p[p.length-1]=n,[Ce(p,t,u),Ce(p,"int32",l)]}function Xy(r,e,t,n){let o=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let d=0;d<o;d++)s[0]*=t[d];s[1]=t[o];for(let d=o+1;d<t.length;d++)s[2]*=t[d];let a={},i=new Int32Array(t[o]),u=new xt(s,n,r),l=[],p=s[0]===1&&s[2]===1;for(let d=0;d<t[o];d++){let h;if(p)h=r[d].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let x=0;x<s[2];x++)g.push(u.get(y,d,x));h=g.join(",")}if(a[h]!==void 0)i[d]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[d]=g,l.push(d)}}let c=s.slice();c[1]=Object.keys(a).length;let m=new xt(c,n);l.forEach((d,h)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)m.set(u.get(g,d,y),g,h,y)});let f=t.slice();return f[o]=c[1],{outputValues:m.values,outputShape:f,indices:i}}var m9="0.0.0";Vu("cpu",()=>new Nh,1);var Dw=$e(ho,r=>r>=0?r:Math.exp(r)-1),EE={kernelName:ho,backendName:"cpu",kernelFunc:Dw};function Pw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;re([o],"leakyRelu");let a=b.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,u=b.getTypedArrayFromDType("float32",a);for(let l=0;l<i.length;l++)u[l]=i[l]<0?s*i[l]:i[l];return t.makeTensorInfo(o.shape,"float32",u)}var RE={kernelName:na,backendName:"cpu",kernelFunc:Pw};var f9=nt((r,e)=>r<0?e*r:r);function Fw(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;re([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,u]=f9(n.shape,o.shape,s,a,"float32");return t.makeTensorInfo(u,"float32",i)}var LE={kernelName:Fo,backendName:"cpu",kernelFunc:Fw};var Mw=$e(Mo,r=>Math.max(0,r)),$E={kernelName:Mo,backendName:"cpu",kernelFunc:Mw};var Ew=$e(Ro,r=>Math.min(Math.max(0,r),6)),BE={kernelName:Ro,backendName:"cpu",kernelFunc:Ew};function wm(r,e,t,n,o){if(t==="linear")return Xr({inputs:{x:e},backend:r});if(t==="relu")return Mw({inputs:{x:e},backend:r});if(t==="elu")return Dw({inputs:{x:e},backend:r});if(t==="relu6")return Ew({inputs:{x:e},backend:r});if(t==="prelu")return Fw({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return Pw({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return _w({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function st(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=b.sizeFromShape(o.shape),i=b.inferFromImplicitShape(s,a),u=b.sizeFromShape(i);b.assert(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let l=t.data.get(o.dataId);if(l.complexTensorInfos!=null){let p=l.complexTensorInfos.real,c=l.complexTensorInfos.imag;p.shape=i,c.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var OE={kernelName:ds,backendName:"cpu",kernelFunc:st};function Rw(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;re([o,s],"matMul");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],c=i?s.shape[l-1]:s.shape[l-2],m=a?o.shape[u-1]:o.shape[u-2],f=i?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(d),y=b.sizeFromShape(h),x=g===y||g===1||y===1;b.assert(u>=2&&l>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let k=(g>y?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);b.assert(p===c,()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let v=a?[g,p,m]:[g,m,p],P=i?[y,f,c]:[y,c,f],A=st({inputs:{x:o},backend:t,attrs:{shape:v}}),F=st({inputs:{x:s},backend:t,attrs:{shape:P}}),E=a?A.shape[1]:A.shape[2],L=a?A.shape[2]:A.shape[1],U=i?F.shape[1]:F.shape[2],K=Math.max(g,y),B=t.data.get(A.dataId).values,V=t.data.get(F.dataId).values,j=b.computeStrides(A.shape),H=b.computeStrides(F.shape),[ee,Y,ne]=a?[j[0],1,j[1]]:[j[0],j[1],1],[oe,te,le]=i?[1,H[1],H[0]]:[H[1],1,H[0]],ae=L*U,ge=Ce([K,L,U],A.dtype),he=ge.values,Te=t.blockSize;for(let Se=0;Se<K;Se++)for(let Be=0;Be<L;Be+=Te)for(let Re=0;Re<U;Re+=Te)for(let Oe=0;Oe<E;Oe+=Te){let rt=Math.min(Be+Te,L),gt=Math.min(Re+Te,U),Bt=Math.min(Oe+Te,E);for(let Ot=Be;Ot<rt;Ot++)for(let kt=Re;kt<gt;kt++){let Je=0;for(let vt=Oe;vt<Bt;vt++){let qt=Math.min(Se,g-1)*ee,On=Math.min(Se,y-1)*le,gr=B[qt+Ot*Y+vt*ne],In=V[vt*oe+kt*te+On];Je+=gr*In}he[Se*ae+(Ot*U+kt)]+=Je}}return t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(F),t.makeTensorInfo(k,ge.dtype,ge.values)}var zE={kernelName:ao,backendName:"cpu",kernelFunc:Rw};function d9(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n,m,f,d,h=[];m=Rw({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:t}),a&&(f=cu({inputs:{a:m,b:a},backend:t}),h.push(m),m=f),p&&(d=wm(t,m,p,i,c),h.push(m),m=d);for(let y of h)t.disposeIntermediateTensorInfo(y);return m}var GE={kernelName:Is,backendName:"cpu",kernelFunc:d9};var h9=$e(ki,r=>Math.acos(r)),WE={kernelName:ki,backendName:"cpu",kernelFunc:h9};var g9=$e(Ii,r=>Math.acosh(r)),UE={kernelName:Ii,backendName:"cpu",kernelFunc:g9};function b9(r){let{inputs:e,backend:t}=r,n=e;re(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=Ce(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let u=o[i];for(let l=0;l<a.length;l++)a[l]+=u[l]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var KE={kernelName:no,backendName:"cpu",kernelFunc:b9};function y9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"all");let i=b.parseAxisParam(s,o.shape),u=i,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("all",u,p.shape.length);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(c),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<d.length;++y){let x=y*f,T=h[x];for(let k=0;k<f;++k){let v=h[x+k];T=T&&v}d[y]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(c,p.dtype,d);if(a){let y=I.expandShapeToKeepDim(c,i),x=st({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x}return g}var VE={kernelName:Ci,backendName:"cpu",kernelFunc:y9};function x9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"any");let i=b.parseAxisParam(s,o.shape),u=i,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("any",u,p.shape.length);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(c),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<d.length;++y){let x=y*f,T=h[x];for(let k=0;k<f;++k){let v=h[x+k];T=T||v}d[y]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(c,p.dtype,d);if(a){let y=I.expandShapeToKeepDim(c,i),x=st({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x}return g}var jE={kernelName:vi,backendName:"cpu",kernelFunc:x9};function T9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;re(o,"argMax");let a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=lr({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],I.assertAxesAreInnerMostDims("argMax",a,u.shape.length);let[p,c]=I.computeOutAndReduceShapes(u.shape,a),m=b.sizeFromShape(p),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(c),h=t.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let y=g*d,x=h[y],T=0;for(let k=0;k<d;++k){let v=h[y+k];v>x&&(x=v,T=k)}f[g]=T}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",f)}var HE={kernelName:oo,backendName:"cpu",kernelFunc:T9};function k9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;re(o,"argMin");let a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=lr({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],I.assertAxesAreInnerMostDims("argMin",a,u.shape.length);let[p,c]=I.computeOutAndReduceShapes(u.shape,a),m=b.sizeFromShape(p),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(c),h=t.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let y=g*d,x=h[y],T=0;for(let k=0;k<d;++k){let v=h[y+k];v<x&&(x=v,T=k)}f[g]=T}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",f)}var qE={kernelName:Va,backendName:"cpu",kernelFunc:k9};var I9=$e(wi,r=>Math.asin(r)),XE={kernelName:wi,backendName:"cpu",kernelFunc:I9};var C9=$e(Si,r=>Math.asinh(r)),YE={kernelName:Si,backendName:"cpu",kernelFunc:C9};var v9=$e(_i,r=>Math.atan(r)),QE={kernelName:_i,backendName:"cpu",kernelFunc:v9};var w9=nt((r,e)=>Math.atan2(r,e)),S9=it(Ni,w9),ZE={kernelName:Ni,backendName:"cpu",kernelFunc:S9};var _9=$e(Ai,r=>Math.atanh(r)),JE={kernelName:Ai,backendName:"cpu",kernelFunc:_9};function Sm(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,p=o.effectiveFilterHeight,c=o.effectiveFilterWidth,m=o.padInfo.top,f=o.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ce(o.outShape,t),g=h.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],x=o.outShape[2]*o.outShape[3],T=o.outShape[3];for(let k=0;k<o.batchSize;++k){let v=k*y,P=k*n[0];for(let A=0;A<o.inChannels;++A)for(let F=0;F<o.outHeight;++F){let E=F*a-m,L=Math.max(0,E),U=Math.min(o.inHeight,p+E),K=v+F*x;for(let B=0;B<o.outWidth;++B){let V=B*i-f,j=Math.max(0,V),H=Math.min(o.inWidth,c+V),ee=d,Y=0,ne=0;for(let te=L;te<U;te+=u){let le=P+te*n[1];for(let ae=j;ae<H;ae+=l){let ge=le+ae*n[2],he=r[ge+A];s==="max"&&he>ee?ee=he:s==="avg"&&(Y+=he,ne++)}if(isNaN(ee))break}let oe=K+B*T+A;g[oe]=s==="avg"?Y/ne:ee}}}return h}function Yy(r,e,t,n,o=!1,s=!1){let a=Ce(n.outShape,"int32"),i=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,p=n.dilationWidth,c=n.effectiveFilterHeight,m=n.effectiveFilterWidth,f=n.padInfo.top,d=n.padInfo.left,h=Ce(e,t,r);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let x=0;x<n.outHeight;++x){let T=x*i-f,k=T;for(;k<0;)k+=l;let v=Math.min(n.inHeight,c+T);for(let P=0;P<n.outWidth;++P){let A=P*u-d,F=A;for(;F<0;)F+=p;let E=Math.min(n.inWidth,m+A),L=Number.NEGATIVE_INFINITY,U=-1;for(let K=k;K<v;K+=l){let B=K-T;for(let V=F;V<E;V+=p){let j=V-A,H=h.get(g,K,V,y);H>L&&(L=H,o?U=s?((g*n.inHeight+K)*n.inWidth+V)*n.inChannels+y:(K*n.inWidth+V)*n.inChannels+y:U=B*m+j)}}a.set(U,g,x,P,y)}}return a}function Qy(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,p=o.dilationHeight,c=o.dilationWidth,m=o.effectiveFilterDepth,f=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,x=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,T=Ce(o.outShape,t),k=T.values,v=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],P=o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[3]*o.outShape[4],F=o.outShape[4];for(let E=0;E<o.batchSize;++E){let L=E*v,U=E*n[0];for(let K=0;K<o.inChannels;++K)for(let B=0;B<o.outDepth;++B){let V=B*a-h,j=V;for(;j<0;)j+=l;let H=Math.min(o.inDepth,m+V),ee=L+B*P;for(let Y=0;Y<o.outHeight;++Y){let ne=Y*i-g,oe=ne;for(;oe<0;)oe+=p;let te=Math.min(o.inHeight,f+ne),le=ee+Y*A;for(let ae=0;ae<o.outWidth;++ae){let ge=ae*u-y,he=ge;for(;he<0;)he+=c;let Te=Math.min(o.inWidth,d+ge),Se=le+ae*F,Be=x,Re=0,Oe=0;for(let gt=j;gt<H;gt+=l){let Bt=U+gt*n[1];for(let Ot=oe;Ot<te;Ot+=p){let kt=Bt+Ot*n[2];for(let Je=he;Je<Te;Je+=c){let vt=kt+Je*n[3],qt=r[vt+K];if(s==="max"&&qt>Be?Be=qt:s==="avg"&&(Re+=qt,Oe++),isNaN(Be))break}if(isNaN(Be))break}if(isNaN(Be))break}let rt=Se+K;k[rt]=s==="avg"?Re/Oe:Be}}}}return T}function eR(r,e){let t=Ce(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,p=e.effectiveFilterHeight,c=e.effectiveFilterWidth,m=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){let x=y*n-m,T=x;for(;T<0;)T+=a;let k=Math.min(e.inDepth,l+x);for(let v=0;v<e.outHeight;++v){let P=v*o-f,A=P;for(;A<0;)A+=i;let F=Math.min(e.inHeight,p+P);for(let E=0;E<e.outWidth;++E){let L=E*s-d,U=L;for(;U<0;)U+=u;let K=Math.min(e.inWidth,c+L),B=Number.NEGATIVE_INFINITY,V=-1;for(let j=T;j<k;j+=a){let H=j-x;for(let ee=A;ee<F;ee+=i){let Y=ee-P;for(let ne=U;ne<K;ne+=u){let oe=ne-L,te=r.get(h,j,ee,ne,g);te>=B&&(B=te,V=H*p*c+Y*p+oe)}}}t.set(V,h,y,v,E,g)}}}return t}function A9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;re(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,a,l,i,u),c;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))c=Xr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=Sm(m,o.shape,o.dtype,f,p,"avg");c=t.makeTensorInfo(p.outShape,o.dtype,d.values)}return c}var tR={kernelName:so,backendName:"cpu",kernelFunc:A9};function N9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;re(o,"avgPool3d");let p=I.computePool3DInfo(o.shape,s,a,1,i,u,l),c=t.data.get(o.dataId).values,m=Qy(c,o.shape,o.dtype,b.computeStrides(o.shape),p,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}var rR={kernelName:Au,backendName:"cpu",kernelFunc:N9};function D9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;re([o,s],"avgPool3DGrad");let p=I.computePool3DInfo(s.shape,a,i,1,u,l),c=p.strideDepth,m=p.strideHeight,f=p.strideWidth,d=p.filterDepth,h=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,x=p.dilationHeight,T=p.dilationWidth,k=p.effectiveFilterDepth,v=p.effectiveFilterHeight,P=p.effectiveFilterWidth,A=k-1-p.padInfo.front,F=P-1-p.padInfo.left,E=v-1-p.padInfo.top,L=Ce(s.shape,"float32"),U=1/(d*h*g),K=t.bufferSync(o);for(let B=0;B<p.batchSize;++B)for(let V=0;V<p.inChannels;++V)for(let j=0;j<p.inDepth;++j)for(let H=0;H<p.inHeight;++H)for(let ee=0;ee<p.inWidth;++ee){let Y=j-A,ne=H-E,oe=ee-F,te=0;for(let le=0;le<k;le+=y){let ae=(Y+le)/c;if(!(ae<0||ae>=p.outDepth||Math.floor(ae)!==ae))for(let ge=0;ge<v;ge+=x){let he=(ne+ge)/m;if(!(he<0||he>=p.outHeight||Math.floor(he)!==he))for(let Te=0;Te<P;Te+=T){let Se=(oe+Te)/f;if(Se<0||Se>=p.outWidth||Math.floor(Se)!==Se)continue;te+=K.get(B,ae,he,Se,V)}}}L.set(te*U,B,j,H,ee,V)}return t.makeTensorInfo(L.shape,L.dtype,L.values)}var nR={kernelName:Yp,backendName:"cpu",kernelFunc:D9};function P9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;re([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=I.computePool2DInfo(a.shape,i,u,1,l),c=p.strideHeight,m=p.strideWidth,f=p.filterHeight,d=p.filterWidth,h=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,x=p.effectiveFilterWidth,T=x-1-p.padInfo.left,k=y-1-p.padInfo.top,v=Ce(a.shape,"float32"),P=1/(f*d),A=t.data.get(o.dataId).values,F=Ce(o.shape,"float32",A);for(let E=0;E<p.batchSize;++E)for(let L=0;L<p.inChannels;++L)for(let U=0;U<p.inHeight;++U)for(let K=0;K<p.inWidth;++K){let B=U-k,V=K-T,j=0;for(let H=0;H<y;H+=h){let ee=(B+H)/c;if(!(ee<0||ee>=p.outHeight||Math.floor(ee)!==ee))for(let Y=0;Y<x;Y+=g){let ne=(V+Y)/m;if(ne<0||ne>=p.outWidth||Math.floor(ne)!==ne)continue;j+=F.get(E,ee,ne,L)}}v.set(j*P,E,U,K,L)}return t.makeTensorInfo(v.shape,v.dtype,v.values)}var oR={kernelName:Xp,backendName:"cpu",kernelFunc:P9};function F9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:u}=e;b.assert(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),re([o,i,u,s,a],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values,m=t.data.get(u.dataId).values,f=s?t.data.get(s.dataId).values:new Float32Array([1]),d=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(p.length),g=d.length,y=f.length,x=m.length,T=c.length,k=0,v=0,P=0,A=0;for(let F=0;F<p.length;++F)h[F]=d[k++]+(p[F]-c[v++])*f[P++]/Math.sqrt(m[A++]+l),k>=g&&(k=0),v>=T&&(v=0),P>=y&&(P=0),A>=x&&(A=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var sR={kernelName:xo,backendName:"cpu",kernelFunc:F9};function M9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;re([o],"batchToSpaceND");let i=s.reduce((y,x)=>y*x),u=I.getReshaped(o.shape,s,i),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,i),c=I.getSliceBeginCoords(a,s.length),m=I.getSliceSize(p,a,s.length),f=st({inputs:{x:o},backend:t,attrs:{shape:u}}),d=lr({inputs:{x:f},backend:t,attrs:{perm:l}}),h=st({inputs:{x:d},backend:t,attrs:{shape:p}}),g=Us({inputs:{x:h},backend:t,attrs:{begin:c,size:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var aR={kernelName:is,backendName:"cpu",kernelFunc:M9};function E9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=km(i,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}var iR={kernelName:Qp,backendName:"cpu",kernelFunc:E9};function R9(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var uR={kernelName:Zp,backendName:"cpu",kernelFunc:R9};var L9=$e(Un,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),lR={kernelName:Un,backendName:"cpu",kernelFunc:L9};var $9=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,u=t.data.get(a.dataId).values;for(let l=0;l<i.length;l++){let p=i[l],c=u[l];n[l]=Math.hypot(p,c)}return t.makeOutput(n,e.shape,"float32")},pR={kernelName:Du,backendName:"cpu",kernelFunc:$9};function pi(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var cR={kernelName:Eu,backendName:"cpu",kernelFunc:pi};function sl(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=I.computeOutShape(e.map(h=>h.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>b.sizeFromShape(h.shape)>0);if(i.length===1)return Xr({inputs:{x:i[0]},backend:t});let u=i.map(h=>h.shape);if(I.assertParamsConsistent(u,s),i[0].dtype==="complex64"){let h=i.map(k=>zs({inputs:{input:k},backend:t})),g=i.map(k=>pi({inputs:{input:k},backend:t})),y=sl({inputs:h,backend:t,attrs:{axis:s}}),x=sl({inputs:g,backend:t,attrs:{axis:s}}),T=vr({inputs:{real:y,imag:x},backend:t});return h.forEach(k=>t.disposeIntermediateTensorInfo(k)),g.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),T}let l=i.map(h=>{let g=b.sizeFromShape(h.shape.slice(s));return st({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),p=l.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=I.computeOutShape(l.map(h=>h.shape),1);let c=l[0].shape[0]===1,m=bp(p,a,e[0].dtype,c),f=I.computeOutShape(i.map(h=>h.shape),s),d=t.makeTensorInfo(f,e[0].dtype,m);return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var mR={kernelName:us,backendName:"cpu",kernelFunc:sl};function Lw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n;re([o,s],"conv2d");let c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,c),f=m.filterHeight,d=m.filterWidth,h=m.dilationHeight,g=m.dilationWidth,y=m.padInfo.left,x=m.padInfo.top,T=m.dataFormat==="channelsLast",k=new xt(m.outShape,o.dtype),v=b.computeStrides(o.shape),P=b.computeStrides(s.shape),A=v[0],F=T?v[1]:v[2],E=T?v[2]:1,L=T?1:v[1],U=k.strides[0],K=T?k.strides[1]:k.strides[2],B=T?k.strides[2]:1,V=T?1:k.strides[1],j=t.data.get(o.dataId).values,H=t.data.get(s.dataId).values,ee=k.values;for(let Y=0;Y<m.batchSize;++Y){let ne=Y*A,oe=Y*U;for(let te=0;te<m.outHeight;++te){let le=oe+te*K,ae=te*m.strideHeight-x;for(let ge=0;ge<f;++ge){let he=ae+ge*h;if(he<0||he>=m.inHeight)continue;let Te=ge*P[0],Se=ne+he*F;for(let Be=0;Be<m.outWidth;++Be){let Re=le+Be*B,Oe=Be*m.strideWidth-y;for(let rt=0;rt<d;++rt){let gt=Oe+rt*g;if(gt<0||gt>=m.inWidth)continue;let Bt=Te+rt*P[1],Ot=Se+gt*E,kt=Bt;for(let Je=0;Je<m.inChannels;++Je){let vt=j[Ot+Je*L];for(let qt=0;qt<m.outChannels;++qt)ee[Re+qt*V]+=vt*H[kt+qt];kt+=m.outChannels}}}}}}return t.makeTensorInfo(k.shape,k.dtype,ee)}var fR={kernelName:uo,backendName:"cpu",kernelFunc:Lw};function B9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n;re([o,s],"conv2dBackpropFilter");let c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,p,a,1,i,l,!1,c),{strideHeight:f,strideWidth:d,filterHeight:h,filterWidth:g}=m,y=m.dataFormat==="channelsLast",x=new xt(m.filterShape,"float32"),T=m.padInfo.left,k=m.padInfo.top,v=t.data.get(o.dataId).values,P=t.data.get(s.dataId).values,A=new xt(o.shape,o.dtype,v),F=new xt(s.shape,s.dtype,P);for(let E=0;E<h;++E){let L=Math.max(0,Math.ceil((k-E)/f)),U=Math.min(m.outHeight,(m.inHeight+k-E)/f);for(let K=0;K<g;++K){let B=Math.max(0,Math.ceil((T-K)/d)),V=Math.min(m.outWidth,(m.inWidth+T-K)/d);for(let j=0;j<m.inChannels;++j)for(let H=0;H<m.outChannels;++H){let ee=0;for(let Y=0;Y<m.batchSize;++Y)for(let ne=L;ne<U;++ne){let oe=E+ne*f-k;for(let te=B;te<V;++te){let le=K+te*d-T;y?ee+=A.get(Y,oe,le,j)*F.get(Y,ne,te,H):ee+=A.get(Y,j,oe,le)*F.get(Y,H,ne,te)}}x.set(ee,E,K,j,H)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var dR={kernelName:Jp,backendName:"cpu",kernelFunc:B9};function O9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n;re([o,s],"conv2dBackpropInput");let c=b.computeStrides(s.shape),m=b.computeStrides(o.shape),f=I.convertConv2DDataFormat(l),d=I.computeConv2DInfo(a,s.shape,i,1,u,p,!1,f),h=new xt(d.inShape,"float32"),g=h.values,y=t.data.get(o.dataId).values,x=t.data.get(s.dataId).values,[T,k,v]=c,{batchSize:P,filterHeight:A,filterWidth:F,inChannels:E,inHeight:L,inWidth:U,outChannels:K,outHeight:B,outWidth:V,strideHeight:j,strideWidth:H}=d;f=d.dataFormat;let ee=A-1-d.padInfo.top,Y=F-1-d.padInfo.left,ne=f==="channelsLast",oe=h.strides[0],te=ne?h.strides[1]:h.strides[2],le=ne?h.strides[2]:1,ae=ne?1:h.strides[1],ge=m[0],he=ne?m[1]:m[2],Te=ne?m[2]:1,Se=ne?1:m[1];for(let Be=0;Be<P;++Be)for(let Re=0;Re<E;++Re)for(let Oe=0;Oe<L;++Oe){let rt=Oe-ee,gt=Math.max(0,Math.ceil(rt/j)),Bt=Math.min(B,(A+rt)/j);for(let Ot=0;Ot<U;++Ot){let kt=Ot-Y,Je=Math.max(0,Math.ceil(kt/H)),vt=Math.min(V,(F+kt)/H),qt=0;for(let gr=gt;gr<Bt;++gr){let In=gr*j-rt;for(let zr=Je;zr<vt;++zr){let Vs=zr*H-kt,rn=ge*Be+he*gr+Te*zr,Pr=T*(A-1-In)+k*(F-1-Vs)+v*Re;for(let eo=0;eo<K;++eo){let br=y[rn+Se*eo],Cn=x[Pr+eo];qt+=br*Cn}}}let On=oe*Be+te*Oe+le*Ot+ae*Re;g[On]=qt}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var hR={kernelName:lo,backendName:"cpu",kernelFunc:O9};function z9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n;re([o,s],"conv3d");let l=I.computeConv3DInfo(o.shape,s.shape,a,u,i),{filterDepth:p,filterHeight:c,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:h,padInfo:g}=l,y=g.front,x=g.left,T=g.top,k=new xt(l.outShape,o.dtype),v=t.data.get(o.dataId).values,P=t.data.get(s.dataId).values,A=k.values,F=b.computeStrides(o.shape),E=b.computeStrides(s.shape);for(let L=0;L<l.batchSize;++L){let U=L*F[0],K=L*k.strides[0];for(let B=0;B<l.outDepth;++B){let V=K+B*k.strides[1],j=B*l.strideDepth-y;for(let H=0;H<p;++H){let ee=j+H*f;if(ee<0||ee>=l.inDepth)continue;let Y=H*E[0],ne=U+ee*F[1];for(let oe=0;oe<l.outHeight;++oe){let te=V+oe*k.strides[2],le=oe*l.strideHeight-T;for(let ae=0;ae<c;++ae){let ge=le+ae*d;if(ge<0||ge>=l.inHeight)continue;let he=Y+ae*E[1],Te=ne+ge*F[2];for(let Se=0;Se<l.outWidth;++Se){let Be=te+Se*l.outChannels,Re=Se*l.strideWidth-x;for(let Oe=0;Oe<m;++Oe){let rt=Re+Oe*h;if(rt<0||rt>=l.inWidth)continue;let gt=he+Oe*E[2],Bt=Te+rt*l.inChannels,Ot=gt;for(let kt=0;kt<l.inChannels;++kt){let Je=v[Bt+kt];for(let vt=0;vt<l.outChannels;++vt)A[Be+vt]+=Je*P[Ot+vt];Ot+=l.outChannels}}}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var gR={kernelName:Pu,backendName:"cpu",kernelFunc:z9};function G9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:u}=n;re([o,s],"conv3dBackpropFilterV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),c=I.computeConv3DInfo(o.shape,u,a,1,i),m=c.strideDepth,f=c.strideHeight,d=c.strideWidth,h=c.filterDepth,g=c.filterHeight,y=c.filterWidth,x=new xt(c.filterShape,"float32"),T=x.values,[k,v,P,A]=x.strides,F=t.data.get(s.dataId).values,[E,L,U,K]=p,B=t.data.get(o.dataId).values,[V,j,H,ee]=l,Y=c.padInfo.front,ne=c.padInfo.left,oe=c.padInfo.top;for(let te=0;te<h;++te){let le=Math.max(0,Math.ceil((Y-te)/m)),ae=Math.min(c.outDepth,(c.inDepth+Y-te)/m),ge=te*k;for(let he=0;he<g;++he){let Te=Math.max(0,Math.ceil((oe-he)/f)),Se=Math.min(c.outHeight,(c.inHeight+oe-he)/f),Be=he*v+ge;for(let Re=0;Re<y;++Re){let Oe=Math.max(0,Math.ceil((ne-Re)/d)),rt=Math.min(c.outWidth,(c.inWidth+ne-Re)/d),gt=Re*P+Be;for(let Bt=0;Bt<c.inChannels;++Bt){let Ot=Bt*A+gt;for(let kt=0;kt<c.outChannels;++kt){let Je=0;for(let vt=0;vt<c.batchSize;++vt){let qt=vt*V,On=vt*E;for(let gr=le;gr<ae;++gr){let zr=(te+gr*m-Y)*j+qt,Vs=gr*L+On;for(let rn=Te;rn<Se;++rn){let eo=(he+rn*f-oe)*H+zr,br=rn*U+Vs;for(let Cn=Oe;Cn<rt;++Cn){let dl=(Re+Cn*d-ne)*ee+eo,hl=Cn*K+br;Je+=B[dl+Bt]*F[hl+kt]}}}}T[Ot+kt]=Je}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var bR={kernelName:ec,backendName:"cpu",kernelFunc:G9};function W9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:u}=n;re([o],"conv3dBackpropInputV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),c=I.computeConv3DInfo(u,s.shape,i,1,a),m=new xt(c.inShape,"float32"),f=m.values,[d,h,g,y]=m.strides,x=t.data.get(o.dataId).values,[T,k,v,P]=l,A=t.data.get(s.dataId).values,[F,E,L,U]=p,{batchSize:K,filterDepth:B,filterHeight:V,filterWidth:j,inChannels:H,inDepth:ee,inHeight:Y,inWidth:ne,outChannels:oe,outDepth:te,outHeight:le,outWidth:ae,strideDepth:ge,strideHeight:he,strideWidth:Te}=c,Se=B-1-c.padInfo.front,Be=V-1-c.padInfo.top,Re=j-1-c.padInfo.left;for(let Oe=0;Oe<K;++Oe)for(let rt=0;rt<H;++rt)for(let gt=0;gt<ee;++gt){let Bt=gt-Se,Ot=Math.max(0,Math.ceil(Bt/ge)),kt=Math.min(te,(B+Bt)/ge);for(let Je=0;Je<Y;++Je){let vt=Je-Be,qt=Math.max(0,Math.ceil(vt/he)),On=Math.min(le,(V+vt)/he);for(let gr=0;gr<ne;++gr){let In=gr-Re,zr=Math.max(0,Math.ceil(In/Te)),Vs=Math.min(ae,(j+In)/Te),rn=0;for(let Pr=Ot;Pr<kt;++Pr){let eo=Pr*ge-Bt;for(let br=qt;br<On;++br){let Cn=br*he-vt;for(let zn=zr;zn<Vs;++zn){let dl=zn*Te-In,hl=T*Oe+k*Pr+v*br+P*zn,js=F*(B-1-eo)+E*(V-1-Cn)+L*(j-1-dl)+U*rt;for(let bi=0;bi<oe;++bi){let Wm=x[hl+bi],Lp=A[js+bi];rn+=Wm*Lp}}}}f[d*Oe+h*gt+g*Je+y*gr+rt]=rn}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}var yR={kernelName:tc,backendName:"cpu",kernelFunc:W9};var U9=$e(po,r=>Math.cos(r)),xR={kernelName:po,backendName:"cpu",kernelFunc:U9};var K9=$e(co,r=>Math.cosh(r)),TR={kernelName:co,backendName:"cpu",kernelFunc:K9};function V9(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,[p,c,m,f]=o.shape,d=s.shape[0],[h,g]=i,y=Ce([d,h,g,f],"float32"),x=t.data.get(s.dataId).values,T=t.data.get(a.dataId).values,k=t.data.get(o.dataId).values,v=b.computeStrides(o.shape),P=b.computeStrides(y.shape);for(let A=0;A<d;A++){let F=A*4,E=x[F],L=x[F+1],U=x[F+2],K=x[F+3],B=T[A];if(B>=p)continue;let V=h>1?(U-E)*(c-1)/(h-1):0,j=g>1?(K-L)*(m-1)/(g-1):0;for(let H=0;H<h;H++){let ee=h>1?E*(c-1)+H*V:.5*(E+U)*(c-1);if(ee<0||ee>c-1){for(let Y=0;Y<g;Y++)for(let ne=0;ne<f;ne++){let oe=ne+Y*P[2]+H*P[1]+A*P[0];y.values[oe]=l}continue}if(u==="bilinear"){let Y=Math.floor(ee),ne=Math.ceil(ee),oe=ee-Y;for(let te=0;te<g;te++){let le=g>1?L*(m-1)+te*j:.5*(L+K)*(m-1);if(le<0||le>m-1){for(let Te=0;Te<f;Te++){let Se=Te+te*P[2]+H*P[1]+A*P[0];y.values[Se]=l}continue}let ae=Math.floor(le),ge=Math.ceil(le),he=le-ae;for(let Te=0;Te<f;Te++){let Se=Te+ae*v[2]+Y*v[1]+B*v[0],Be=k[Se];Se=Te+ge*v[2]+Y*v[1]+B*v[0];let Re=k[Se];Se=Te+ae*v[2]+ne*v[1]+B*v[0];let Oe=k[Se];Se=Te+ge*v[2]+ne*v[1]+B*v[0];let rt=k[Se],gt=Be+(Re-Be)*he,Bt=Oe+(rt-Oe)*he;Se=Te+te*P[2]+H*P[1]+A*P[0],y.values[Se]=gt+(Bt-gt)*oe}}}else for(let Y=0;Y<g;++Y){let ne=g>1?L*(m-1)+Y*j:.5*(L+K)*(m-1);if(ne<0||ne>m-1){for(let le=0;le<f;le++){let ae=le+Y*P[2]+H*P[1]+A*P[0];y.values[ae]=l}continue}let oe=Math.round(ne),te=Math.round(ee);for(let le=0;le<f;le++){let ae=le+oe*v[2]+te*v[1]+B*v[0],ge=le+Y*P[2]+H*P[1]+A*P[0];y.values[ge]=k[ae]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var kR={kernelName:Ys,backendName:"cpu",kernelFunc:V9};function j9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;re(o,"cumsum");let u=I.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=lr({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=I.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let c=Kt(l.dtype,"int32"),m=b.makeZerosTypedArray(b.sizeFromShape(l.shape),c),f=t.data.get(l.dataId).values,d=l.shape[l.shape.length-1],h=i?(y,x)=>y+d-x-1:(y,x)=>y+x;for(let y=0;y<f.length;y+=d)for(let x=0;x<d;x++){let T=h(y,x);if(x===0)m[T]=a?0:f[T];else{let k=h(y,x-1);m[T]=a?f[k]+m[k]:f[T]+m[k]}}let g=t.makeTensorInfo(l.shape,c,m);if(u!=null){let y=I.getUndoAxesPermutation(u),x=lr({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),x}return g}var IR={kernelName:Xs,backendName:"cpu",kernelFunc:j9};function H9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=km(u,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=Ly(u,l,a,i);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var CR={kernelName:rc,backendName:"cpu",kernelFunc:H9};function q9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;b.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],u=o.shape[1],l=o.shape[2],p=o.shape[3],c=u*s,m=l*s,f=p/(s*s),d=t.data.get(o.dataId).values,h=new Float32Array(i*c*m*f),g=0;for(let y=0;y<i;++y)for(let x=0;x<c;++x){let T=Math.floor(x/s),k=x%s;for(let v=0;v<m;++v){let P=Math.floor(v/s),A=v%s,F=(k*s+A)*f;for(let E=0;E<f;++E){let U=E+F+p*(P+l*(T+u*y));h[g++]=d[U]}}}return t.makeTensorInfo([i,c,m,f],o.dtype,h)}var vR={kernelName:Qs,backendName:"cpu",kernelFunc:q9};function $w(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n;re([o,s],"depthwiseConv2DNative");let p=b.computeStrides(o.shape),c=b.computeStrides(s.shape),m=u;m==null&&(m=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(a,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${m}'`);let f=I.computeConv2DInfo(o.shape,s.shape,a,m,i,l,!0),{filterHeight:d,filterWidth:h,dilationHeight:g,dilationWidth:y,padInfo:x}=f,T=x.left,k=x.top,v=f.outChannels/f.inChannels,P=new xt(f.outShape,o.dtype),A=t.data.get(o.dataId).values,F=t.data.get(s.dataId).values,E=P.values;for(let L=0;L<f.batchSize;++L){let U=L*p[0],K=L*P.strides[0];for(let B=0;B<f.outHeight;++B){let V=K+B*P.strides[1],j=B*f.strideHeight-k;for(let H=0;H<d;++H){let ee=j+H*g;if(ee<0||ee>=f.inHeight)continue;let Y=H*c[0],ne=U+ee*p[1];for(let oe=0;oe<f.outWidth;++oe){let te=V+oe*P.strides[2],le=oe*f.strideWidth-T;for(let ae=0;ae<h;++ae){let ge=le+ae*y;if(ge<0||ge>=f.inWidth)continue;let he=Y+ae*c[1],Te=ne+ge*f.inChannels,Se=te,Be=he;for(let Re=0;Re<f.inChannels;++Re){let Oe=A[Te+Re];for(let rt=0;rt<v;++rt)E[Se+rt]+=Oe*F[Be+rt];Se+=v,Be+=v}}}}}}return t.makeTensorInfo(P.shape,P.dtype,P.values)}var wR={kernelName:mo,backendName:"cpu",kernelFunc:$w};function X9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n;re([o,s],"depthwiseConv2dNativeBackpropFilter");let c=I.computeConv2DInfo(o.shape,p,a,i,u,l,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:h}=c,g=new xt(c.filterShape,"float32"),y=c.padInfo.left,x=c.padInfo.top,T=c.outChannels/c.inChannels,k=t.data.get(o.dataId).values,v=new xt(o.shape,o.dtype,k),P=t.data.get(s.dataId).values,A=new xt(s.shape,s.dtype,P);for(let F=0;F<d;++F){let E=Math.max(0,Math.ceil((x-F)/m)),L=Math.min(c.outHeight,(c.inHeight+x-F)/m);for(let U=0;U<h;++U){let K=Math.max(0,Math.ceil((y-U)/f)),B=Math.min(c.outWidth,(c.inWidth+y-U)/f);for(let V=0;V<c.outChannels;++V){let j=Math.trunc(V/T),H=V%T,ee=0;for(let Y=0;Y<c.batchSize;++Y)for(let ne=E;ne<L;++ne){let oe=F+ne*m-x;for(let te=K;te<B;++te){let le=U+te*f-y;ee+=v.get(Y,oe,le,j)*A.get(Y,ne,te,V)}}g.set(ee,F,U,j,H)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var SR={kernelName:nc,backendName:"cpu",kernelFunc:X9};function Y9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n;re([o,s],"depthwiseConv2DNativeBackpropInput");let c=b.computeStrides(o.shape),m=b.computeStrides(s.shape),f=I.computeConv2DInfo(p,s.shape,a,i,u,l,!0),d=new xt(f.inShape,"float32"),h=d.values,[g,y,x]=d.strides,T=t.data.get(o.dataId).values,[k,v,P]=c,A=t.data.get(s.dataId).values,[F,E,L]=m,{batchSize:U,filterHeight:K,filterWidth:B,inChannels:V,inHeight:j,inWidth:H,outChannels:ee,outHeight:Y,outWidth:ne,strideHeight:oe,strideWidth:te}=f,le=K-1-f.padInfo.top,ae=B-1-f.padInfo.left,ge=ee/V;for(let he=0;he<U;++he)for(let Te=0;Te<V;++Te)for(let Se=0;Se<j;++Se){let Be=Se-le,Re=Math.max(0,Math.ceil(Be/oe)),Oe=Math.min(Y,(K+Be)/oe);for(let rt=0;rt<H;++rt){let gt=rt-ae,Bt=Math.max(0,Math.ceil(gt/te)),Ot=Math.min(ne,(B+gt)/te),kt=0;for(let Je=Re;Je<Oe;++Je){let vt=Je*oe-Be;for(let qt=Bt;qt<Ot;++qt){let On=qt*te-gt,gr=k*he+v*Je+P*qt,In=F*(K-1-vt)+E*(B-1-On)+L*Te;for(let zr=0;zr<ge;++zr){let Vs=Te*ge+zr,rn=T[gr+Vs],Pr=A[In+zr];kt+=rn*Pr}}}h[g*he+y*Se+x*rt+Te]=kt}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}var _R={kernelName:oc,backendName:"cpu",kernelFunc:Y9};function Q9(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=Ce([o,o],n.dtype),i=a.values;for(let l=0;l<s.length;l++)i[l*o+l]=s[l];let u=[...n.shape,...n.shape];return t.makeTensorInfo(u,a.dtype,a.values)}var AR={kernelName:sc,backendName:"cpu",kernelFunc:Q9};var NR={kernelName:Fu,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,u=e,l=u.data.get(n.dataId).values,p=n.shape.length,c=u.data.get(o.dataId).values,m=o.shape.length,{batchSize:f,inHeight:d,inWidth:h,inChannels:g,outHeight:y,outWidth:x,padInfo:T,strideHeight:k,strideWidth:v,filterHeight:P,filterWidth:A,dilationHeight:F,dilationWidth:E,outShape:L}=I.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),U=b.sizeFromShape(L),K=L.length,B=b.getArrayFromDType(n.dtype,U);for(let j=0;j<f;++j)for(let H=0;H<y;++H){let ee=H*k-T.top;for(let Y=0;Y<x;++Y){let ne=Y*v-T.left;for(let oe=0;oe<g;++oe){let te=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<P;++ae){let ge=ee+ae*F;if(ge>=0&&ge<d)for(let he=0;he<A;++he){let Te=ne+he*E;if(Te>=0&&Te<h){let Se=b.locToIndex([j,ge,Te,oe],p,b.computeStrides(n.shape)),Be=b.locToIndex([ae,he,oe],m,b.computeStrides(o.shape)),Re=l[Se]+c[Be];Re>te&&(te=Re)}}}let le=b.locToIndex([j,H,Y,oe],K,b.computeStrides(L));B[le]=te}}}return{dataId:u.write(b.toTypedArray(B,n.dtype),L,n.dtype),shape:L,dtype:n.dtype}}};var DR={kernelName:sf,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),c=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:y,padInfo:x,strideHeight:T,strideWidth:k,filterHeight:v,filterWidth:P,dilationHeight:A,dilationWidth:F,outShape:E}=I.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);b.assert(s.rank===E.length,()=>`Error in ${sf}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let L=b.toNestedArray(E,l.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let B=0;B<m;++B)for(let V=0;V<g;++V){let j=V*T-x.top;for(let H=0;H<y;++H){let ee=H*k-x.left;for(let Y=0;Y<h;++Y){let ne=Number.MIN_SAFE_INTEGER,oe=0,te=0;for(let le=0;le<v;++le){let ae=j+le*A;if(ae>=0&&ae<f)for(let ge=0;ge<P;++ge){let he=ee+ge*F;if(he>=0&&he<d){let Te=p[B][ae][he][Y]+c[le][ge][Y];Te>ne&&(ne=Te,oe=le,te=ge)}}}U[oe][te][Y]+=L[B][V][H][Y]}}}return{dataId:l.write(b.toTypedArray(U,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var PR={kernelName:of,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),c=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:y,padInfo:x,strideHeight:T,strideWidth:k,filterHeight:v,filterWidth:P,dilationHeight:A,dilationWidth:F,outShape:E}=I.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);b.assert(s.rank===E.length,()=>`Error in ${of}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let L=b.toNestedArray(E,l.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let B=0;B<m;++B)for(let V=0;V<g;++V){let j=V*T-x.top;for(let H=0;H<y;++H){let ee=H*k-x.left;for(let Y=0;Y<h;++Y){let ne=Number.MIN_SAFE_INTEGER,oe=j<0?0:j,te=ee<0?0:ee;for(let le=0;le<v;++le){let ae=j+le*A;if(ae>=0&&ae<f)for(let ge=0;ge<P;++ge){let he=ee+ge*F;if(he>=0&&he<d){let Te=p[B][ae][he][Y]+c[le][ge][Y];Te>ne&&(ne=Te,oe=ae,te=he)}}}U[B][oe][te][Y]+=L[B][V][H][Y]}}}return{dataId:l.write(b.toTypedArray(U,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function mu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"sum");let i;o.dtype==="bool"?i=Gs({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=Xr({inputs:{x:o},backend:t});let u=i.shape.length,l=b.parseAxisParam(s,i.shape),p=I.getAxesPermutation(l,u),c=l,m=i;p!=null&&(m=lr({inputs:{x:i},backend:t,attrs:{perm:p}}),c=I.getInnerMostAxes(c.length,u)),I.assertAxesAreInnerMostDims("sum",c,m.shape.length);let[f,d]=I.computeOutAndReduceShapes(m.shape,c),h=I.upcastType(m.dtype,"int32"),g=xm(t,f,h),y=b.sizeFromShape(d),x=t.data.get(g.dataId).values,T=t.data.get(m.dataId).values;for(let k=0;k<x.length;++k){let v=k*y,P=0;for(let A=0;A<y;++A)P+=T[v+A];x[k]=P}if(a){let k=I.expandShapeToKeepDim(g.shape,l),v=g;g=st({inputs:{x:g},backend:t,attrs:{shape:k}}),t.disposeIntermediateTensorInfo(v)}return t.disposeIntermediateTensorInfo(i),p!=null&&t.disposeIntermediateTensorInfo(m),g}var FR={kernelName:zo,backendName:"cpu",kernelFunc:mu};function Z9(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(i,u),c=p.length,m=null,f=a.length,d=[];for(let h=0;h<c;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:x}=I.getEinsumPermutation(f,u[g]),T;I.isIdentityPermutation(y)?T=s[g]:(T=lr({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),d.push(T));let k=T.shape.slice();for(let v=0;v<x.length;++v)k.splice(x[v],0,1);b.arraysEqual(T.shape,k)||(T=st({inputs:{x:T},backend:t,attrs:{shape:k}}),d.push(T)),m===null?m=T:(m=yp({inputs:{a:T,b:m},backend:t}),d.push(m))}h<c-1&&(l[h]>=0&&(m=mu({inputs:{x:m},backend:t,attrs:{axis:l[h]-(a.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeIntermediateTensorInfo(h);return m}var MR={kernelName:Mu,backendName:"cpu",kernelFunc:Z9};function J9(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;re([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let u=0;u<a.length;++u){let l=a[u];l>=1?s[u]=i[u]:s[u]=i[u]*(l+1)}return t.makeTensorInfo(o.shape,"float32",s)}var ER={kernelName:ac,backendName:"cpu",kernelFunc:J9};var eee=I.ERF_P,tee=I.ERF_A1,ree=I.ERF_A2,nee=I.ERF_A3,oee=I.ERF_A4,see=I.ERF_A5,aee=$e(Di,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+eee*t);return e*(1-((((see*n+oee)*n+nee)*n+ree)*n+tee)*n*Math.exp(-t*t))}),RR={kernelName:Di,backendName:"cpu",kernelFunc:aee};function _m(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),st({inputs:{x:o},backend:t,attrs:{shape:i}})}var LR={kernelName:ls,backendName:"cpu",kernelFunc:_m};var iee=nt((r,e)=>r/e),Mh=it(fo,iee),Eh={kernelName:fo,backendName:"cpu",kernelFunc:Mh};function Zy(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[o,s],p=b.sizeFromShape(l),c=b.getTypedArrayFromDType("float32",p),m=b.getTypedArrayFromDType("float32",p);for(let g=0;g<o;g++){let y=Us({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),x=Us({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=vr({inputs:{real:y,imag:x},backend:t}),{real:k,imag:v}=uee(T,e,t),P=I.mergeRealAndImagArrays(k,v);for(let A=0;A<s;A++){let F=I.getComplexWithIndex(P,A);c[g*s+A]=F.real,m[g*s+A]=F.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(T)}let f=t.makeTensorInfo(l,"float32",c),d=t.makeTensorInfo(l,"float32",m),h=vr({inputs:{real:f,imag:d},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),h}function uee(r,e,t){let n=b.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(lee(n)){let i=Bw(s,a,n,e,t),u=[r.shape[0],r.shape[1]];if(e){let l=t.makeTensorInfo(u,"float32",i.real),p=t.makeTensorInfo(u,"float32",i.imag),c=t.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),m=Xr({inputs:{x:c},backend:t}),f=Eh.kernelFunc({inputs:{a:l,b:c},backend:t}),d=Eh.kernelFunc({inputs:{a:p,b:m},backend:t}),h=t.data.get(f.dataId).values,g=t.data.get(d.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),{real:h,imag:g}}return i}else{let i=I.mergeRealAndImagArrays(s,a),u=pee(i,n,e);return I.splitRealAndImagArrays(u)}}function lee(r){return(r&r-1)==0}function Bw(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=I.mergeRealAndImagArrays(r,e),a=t/2,i=I.complexWithEvenIndex(s),u=i.real,l=i.imag,p=[u.length],c=o.makeTensorInfo(p,"float32",u),m=o.makeTensorInfo(p,"float32",l),f=vr({inputs:{real:c,imag:m},backend:o}),d=I.complexWithOddIndex(s),h=d.real,g=d.imag,y=[h.length],x=o.makeTensorInfo(y,"float32",h),T=o.makeTensorInfo(y,"float32",g),k=vr({inputs:{real:x,imag:T},backend:o}),v=Bw(u,l,a,n,o),P=v.real,A=v.imag,F=[P.length],E=o.makeTensorInfo(F,"float32",P),L=o.makeTensorInfo(F,"float32",A),U=vr({inputs:{real:E,imag:L},backend:o}),K=Bw(h,g,a,n,o),B=K.real,V=K.imag,j=[B.length],H=o.makeTensorInfo(j,"float32",B),ee=o.makeTensorInfo(j,"float32",V),Y=vr({inputs:{real:H,imag:ee},backend:o}),ne=I.exponents(t,n),oe=[ne.real.length],te=o.makeTensorInfo(oe,"float32",ne.real),le=o.makeTensorInfo(oe,"float32",ne.imag),ae=vr({inputs:{real:te,imag:le},backend:o}),ge=yp({inputs:{a:ae,b:Y},backend:o}),he=cu({inputs:{a:U,b:ge},backend:o}),Te=Ph({inputs:{a:U,b:ge},backend:o}),Se=zs({inputs:{input:he},backend:o}),Be=zs({inputs:{input:Te},backend:o}),Re=pi({inputs:{input:he},backend:o}),Oe=pi({inputs:{input:Te},backend:o}),rt=sl({inputs:[Se,Be],backend:o,attrs:{axis:0}}),gt=sl({inputs:[Re,Oe],backend:o,attrs:{axis:0}}),Bt=o.data.get(rt.dataId).values,Ot=o.data.get(gt.dataId).values;return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(k),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(L),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(te),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(he),o.disposeIntermediateTensorInfo(Te),o.disposeIntermediateTensorInfo(Se),o.disposeIntermediateTensorInfo(Re),o.disposeIntermediateTensorInfo(Be),o.disposeIntermediateTensorInfo(Oe),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(gt),{real:Bt,imag:Ot}}function pee(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let u=I.exponent(o*i,e,t),l=I.getComplexWithIndex(r,i);s+=l.real*u.real-l.imag*u.imag,a+=l.real*u.imag+l.imag*u.real}t&&(s/=e,a/=e),I.assignToTypedArray(n,s,a,o)}return n}function cee(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=st({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),u=Zy(i,!1,t),l=st({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var $R={kernelName:ic,backendName:"cpu",kernelFunc:cee};function Rh(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||b.inferDtype(o),i=b.getArrayFromDType(a,b.sizeFromShape(n));return mee(i,o,a),e.makeTensorInfo(n,a,i)}var BR={kernelName:ja,backendName:"cpu",kernelFunc:Rh};function mee(r,e,t){r.fill(e)}var OR={kernelName:ea,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[a,i,u,l]=n.shape,p=o.data.get(n.dataId).values;for(let m=0;m<a;m++){let f=m*u*i*l;for(let d=0;d<i;d++){let h=d*(u*l);for(let g=0;g<u;g++){let y=g*l;for(let x=0;x<l;x++){let T=Math.round(u-g-1),k=f+h+y+x,v=p[k];if(T>=0&&T<u){let P=T*l,A=f+h+P+x;v=p[A]}s[k]=v}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var fee=nt((r,e)=>Math.floor(r/e)),dee=it(yo,fee,null,"int32"),zR={kernelName:yo,backendName:"cpu",kernelFunc:dee};function hee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=Lw({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m}});if(a){let g=h;h=cu({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=wm(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var GR={kernelName:Cs,backendName:"cpu",kernelFunc:hee};function gee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=$w({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m}});if(a){let g=h;h=cu({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=wm(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var WR={kernelName:vs,backendName:"cpu",kernelFunc:gee};function bee(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=b.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[u,l,p,c]=I.prepareAndValidate(n,o);if(l===0)return t.makeTensorInfo(u,n.dtype,[]);let m=t.data.get(o.dataId).values,f=t.bufferSync(n),d=$y(m,f,n.dtype,l,i,p,c,n.shape,s);return t.makeTensorInfo(u,n.dtype,d.values)}var UR={kernelName:ta,backendName:"cpu",kernelFunc:bee};function yee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;re([o,s],"gatherV2");let u=b.parseAxisParam(a,o.shape)[0],l=t.data.get(s.dataId).values,p=o.shape[u];for(let k=0;k<l.length;++k){let v=l[k];b.assert(v<=p-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${p-1}]`)}let c=i;i==null&&(c=0);let m=b.sizeFromShape(s.shape),f=I.segment_util.collectGatherOpShapeInfo(o,s,u,c),d=st({inputs:{x:o},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),h=st({inputs:{x:s},backend:t,attrs:{shape:[f.batchSize,m/f.batchSize]}}),g=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],y=t.bufferSync(h),x=t.bufferSync(d),T=By(x,y,g);return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(f.outputShape,T.dtype,T.values)}var KR={kernelName:ps,backendName:"cpu",kernelFunc:yee};function xee(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=st({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),u=Zy(i,!0,t),l=st({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var VR={kernelName:uc,backendName:"cpu",kernelFunc:xee};var Tee=$e(Pi,r=>Number.isFinite(r)?1:0,"bool"),jR={kernelName:Pi,backendName:"cpu",kernelFunc:Tee};var kee=$e(Fi,r=>Math.abs(r)===1/0?1:0,"bool"),HR={kernelName:Fi,backendName:"cpu",kernelFunc:kee};var Iee=$e(Mi,r=>Number.isNaN(r)?1:0,"bool"),qR={kernelName:Mi,backendName:"cpu",kernelFunc:Iee};function Cee(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=Oy(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var XR={kernelName:lc,backendName:"cpu",kernelFunc:Cee};var vee=$e(Ei,r=>Math.log1p(r)),YR={kernelName:Ei,backendName:"cpu",kernelFunc:vee};var wee=nt((r,e)=>r&&e),See=it(aa,wee,null,"bool"),QR={kernelName:aa,backendName:"cpu",kernelFunc:See};var _ee=$e(Ri,r=>r?0:1,"bool"),ZR={kernelName:Ri,backendName:"cpu",kernelFunc:_ee};var Aee=nt((r,e)=>r||e),Nee=it(Cl,Aee,null,"bool"),JR={kernelName:Cl,backendName:"cpu",kernelFunc:Nee};function Dee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:u}=n;re(o,"LRN");let l=o.shape[3],p=l-1,c=t.data.get(o.dataId).values,m=b.sizeFromShape(o.shape),f=new Float32Array(m);function d(h){let g=h%l,y=h-g+Math.max(0,g-s),x=h-g+Math.min(g+s,p),T=0;for(;y<=x;y++){let k=c[y];T+=k*k}return T}for(let h=0;h<m;h++){let g=d(h),y=c[h]*Math.pow(a+i*g,-u);f[h]=y}return t.makeTensorInfo(o.shape,o.dtype,f)}var eL={kernelName:Ru,backendName:"cpu",kernelFunc:Dee};function Pee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:p}=n;re(a,"LRNGrad");let c=b.sizeFromShape(a.shape),m=a.shape[3],f=t.data.get(a.dataId).values,d=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(c),y=c;for(let x=0;x<y;x++){let T=x%m,k=x-T+Math.max(0,T-i),v=x-T+Math.min(m,T+i+1),P=0;for(let A=k;A<v;A++)P+=Math.pow(d[A],2);P=l*P+u;for(let A=k;A<v;A++){let F=-2*l*p*d[A]*h[x]/P;x===A&&(F+=Math.pow(P,-p)),F*=f[x],g[A]+=F}}return t.makeTensorInfo(a.shape,o.dtype,g)}var tL={kernelName:pc,backendName:"cpu",kernelFunc:Pee};function Ow(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,u=o.shape,l=u.length,p=b.parseAxisParam(s,u),c=p,m=I.getAxesPermutation(c,l),f=i.data.get(o.dataId).values;if(m!=null){let k=new Array(l);for(let v=0;v<k.length;v++)k[v]=u[m[v]];f=Im(f,u,o.dtype,m,k),c=I.getInnerMostAxes(c.length,l),u=k}re(o,"max"),I.assertAxesAreInnerMostDims("max",c,l);let[d,h]=I.computeOutAndReduceShapes(u,c),g=b.sizeFromShape(h),y=zy(f,g,d,o.dtype),x=i.write(y,d,o.dtype),T=d;return a&&(T=I.expandShapeToKeepDim(d,p)),{dataId:x,shape:T,dtype:o.dtype}}var rL={kernelName:Io,backendName:"cpu",kernelFunc:Ow};function Fee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;re(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,a,l,i,u),c;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))c=Xr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=Sm(m,o.shape,o.dtype,f,p,"max");c=t.makeTensorInfo(p.outShape,o.dtype,d.values)}return c}var nL={kernelName:vo,backendName:"cpu",kernelFunc:Fee};function Mee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;re(o,"maxPool3d");let p=I.computePool3DInfo(o.shape,s,a,1,i,u,l),c=t.data.get(o.dataId).values,m=Qy(c,o.shape,o.dtype,b.computeStrides(o.shape),p,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}var oL={kernelName:Lu,backendName:"cpu",kernelFunc:Mee};function Eee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;re([o,s],"maxPool3DGrad");let p=I.computePool3DInfo(s.shape,a,i,1,u,l),c=t.bufferSync(s),m=eR(c,p),f=p.strideDepth,d=p.strideHeight,h=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,x=p.dilationWidth,T=p.effectiveFilterDepth,k=p.effectiveFilterHeight,v=p.effectiveFilterWidth,P=T-1-p.padInfo.front,A=v-1-p.padInfo.left,F=k-1-p.padInfo.top,E=Ce(s.shape,"float32"),L=t.bufferSync(o);for(let U=0;U<p.batchSize;++U)for(let K=0;K<p.inChannels;++K)for(let B=0;B<p.inDepth;++B)for(let V=0;V<p.inHeight;++V)for(let j=0;j<p.inWidth;++j){let H=B-P,ee=V-F,Y=j-A,ne=0;for(let oe=0;oe<T;oe+=g){let te=(H+oe)/f;if(!(te<0||te>=p.outDepth||Math.floor(te)!==te))for(let le=0;le<k;le+=y){let ae=(ee+le)/d;if(!(ae<0||ae>=p.outHeight||Math.floor(ae)!==ae))for(let ge=0;ge<v;ge+=x){let he=(Y+ge)/h;if(he<0||he>=p.outWidth||Math.floor(he)!==he)continue;let Te=T*k*v-1-m.get(U,te,ae,he,K),Se=oe*k*v+le*v+ge,Be=Te===Se?1:0;if(Be===0)continue;ne+=L.get(U,te,ae,he,K)*Be}}}E.set(ne,U,B,V,j,K)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}var sL={kernelName:mc,backendName:"cpu",kernelFunc:Eee};function Ree(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;re([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:c}=n,m=I.computePool2DInfo(i.shape,u,l,1,p,c),f=t.data.get(i.dataId).values,d=Ce(m.outShape,i.dtype,Yy(f,i.shape,i.dtype,m).values),h=m.strideHeight,g=m.strideWidth,y=m.dilationHeight,x=m.dilationWidth,T=m.effectiveFilterHeight,k=m.effectiveFilterWidth,v=k-1-m.padInfo.left,P=T-1-m.padInfo.top,A=Ce(i.shape,"float32"),F=t.data.get(o.dataId).values,E=Ce(o.shape,"float32",F);for(let L=0;L<m.batchSize;++L)for(let U=0;U<m.inChannels;++U)for(let K=0;K<m.inHeight;++K)for(let B=0;B<m.inWidth;++B){let V=K-P,j=B-v,H=0;for(let ee=0;ee<T;ee+=y){let Y=(V+ee)/h;if(!(Y<0||Y>=m.outHeight||Math.floor(Y)!==Y))for(let ne=0;ne<k;ne+=x){let oe=(j+ne)/g;if(oe<0||oe>=m.outWidth||Math.floor(oe)!==oe)continue;let te=T*k-1-d.get(L,Y,oe,U),le=ee*k+ne,ae=te===le?1:0;if(ae===0)continue;H+=E.get(L,Y,oe,U)*ae}}A.set(H,L,K,B,U)}return t.makeTensorInfo(A.shape,A.dtype,A.values)}var aL={kernelName:cc,backendName:"cpu",kernelFunc:Ree};function iL(r,e,t,n,o){let s=b.computeStrides(e),a=Sm(r,e,t,s,o,"max"),i=Yy(r,e,t,o,!0,n);return[a.values,i.values]}var uL={kernelName:fc,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,u=t;re(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,p=I.computePool2DInfo(n.shape,o,s,[1,1],a),[c,m]=iL(l,n.shape,n.dtype,i,p),f=u.write(c,p.outShape,n.dtype),d=u.write(m,p.outShape,n.dtype);return[{dataId:f,shape:p.outShape,dtype:n.dtype},{dataId:d,shape:p.outShape,dtype:"int32"}]}};function Lee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=b.parseAxisParam(s,o.shape),l=I.computeOutAndReduceShapes(o.shape,i)[1],p=b.sizeFromShape(l),c=[],m=t.makeTensorInfo([],"float32",new Float32Array([p]));c.push(m);let f=Gs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});c.push(f);let d=Mh({inputs:{a:f,b:m},backend:t});c.push(d);let h=mu({inputs:{x:d},backend:t,attrs:{axis:s,keepDims:a}});return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var lL={kernelName:wo,backendName:"cpu",kernelFunc:Lee};function $ee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"min");let i=b.parseAxisParam(s,o.shape),u=i,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",u,p.shape.length);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(c),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<d.length;++y){let x=y*f,T=h[x];for(let k=0;k<f;++k){let v=h[x+k];(Number.isNaN(v)||v<T)&&(T=v)}d[y]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(c,p.dtype,d);if(a){let y=I.expandShapeToKeepDim(c,i),x=st({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x}return g}var pL={kernelName:So,backendName:"cpu",kernelFunc:$ee};function Bee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;re(o,"mirrorPad");let i=s.map((T,k)=>T[0]+o.shape[k]+T[1]),u=s.map(T=>T[0]),l=s.map((T,k)=>T[0]+o.shape[k]),p=a==="reflect"?0:1,c=t.data.get(o.dataId).values,m=o.shape.length,f=b.computeStrides(o.shape),d=b.sizeFromShape(i),h=i.length,g=b.computeStrides(i),y=b.getTypedArrayFromDType(o.dtype,d);for(let T=0;T<d;T++){let k=b.indexToLoc(T,h,g);for(let P=0;P<h;P++)k[P]<u[P]?k[P]=u[P]*2-k[P]-p:k[P]>=l[P]&&(k[P]=(l[P]-1)*2-k[P]+p);k=k.map((P,A)=>P-u[A]);let v=b.locToIndex(k,m,f);y[T]=c[v]}return{dataId:t.write(y,i,o.dtype),shape:i,dtype:o.dtype}}var cL={kernelName:Ao,backendName:"cpu",kernelFunc:Bee};var Oee=nt((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),zee=it(Li,Oee),mL={kernelName:Li,backendName:"cpu",kernelFunc:zee};var dL=Tl(Ff());function zw(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let u=b.parseAxisParam([i],o.shape),l=Ow({inputs:{x:o},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),p=I.expandShapeToKeepDim(l.shape,u),c=st({inputs:{x:l},backend:t,attrs:{shape:p}}),m=Ph({inputs:{a:o,b:c},backend:t}),f=fw({inputs:{x:m},backend:t}),d=mu({inputs:{x:f},backend:t,attrs:{axis:u,keepDims:!1}}),h=st({inputs:{x:d},backend:t,attrs:{shape:p}}),g=Mh({inputs:{a:f,b:h},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var fL={kernelName:Go,backendName:"cpu",kernelFunc:zw};function Gee(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;re(o,"multinomial");let u=i?o:zw({inputs:{logits:o},backend:t,attrs:{dim:-1}}),l=u.shape[0],p=u.shape[1],c=t.data.get(u.dataId).values,m=[l,s],f=b.makeZerosTypedArray(b.sizeFromShape(m),"int32");for(let d=0;d<l;++d){let h=d*p,g=new Float32Array(p-1);g[0]=c[h];for(let T=1;T<g.length;++T)g[T]=g[T-1]+c[h+T];let y=dL.alea(a.toString()),x=d*s;for(let T=0;T<s;++T){let k=y();f[x+T]=g.length;for(let v=0;v<g.length;v++)if(k<g[v]){f[x+T]=v;break}}}return i||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(m,"int32",f)}var hL={kernelName:dc,backendName:"cpu",kernelFunc:Gee};var Wee=Tr.nonMaxSuppressionV3Impl;function Uee(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n;re(o,"NonMaxSuppression");let l=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:c}=Wee(l,p,a,i,u);return t.makeTensorInfo([c.length],"int32",new Int32Array(c))}var gL={kernelName:ua,backendName:"cpu",kernelFunc:Uee};var Kee=Tr.nonMaxSuppressionV4Impl;function Vee(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n;re(o,"NonMaxSuppressionPadded");let p=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=Kee(p,c,a,i,u,l);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var bL={kernelName:$i,backendName:"cpu",kernelFunc:Vee};var jee=Tr.nonMaxSuppressionV5Impl;function Hee(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n;re(o,"NonMaxSuppressionWithScore");let p=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,m=a,f=i,d=u,h=l,{selectedIndices:g,selectedScores:y}=jee(p,c,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var yL={kernelName:la,backendName:"cpu",kernelFunc:Hee};function qee(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n;re(o,"oneHot");let u=b.sizeFromShape(o.shape),l=new Float32Array(u*s);l.fill(i);let p=t.data.get(o.dataId).values;for(let c=0;c<u;++c)p[c]>=0&&p[c]<s&&(l[c*s+p[c]]=a);return t.makeTensorInfo([...o.shape,s],"int32",l)}var xL={kernelName:pa,backendName:"cpu",kernelFunc:qee};function Lh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=zs({inputs:{input:n},backend:t}),s=Lh({inputs:{x:o},backend:t}),a=pi({inputs:{input:n},backend:t}),i=Lh({inputs:{x:a},backend:t}),u=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Rh({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var TL={kernelName:Ts,backendName:"cpu",kernelFunc:Lh};function kL(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=zs({inputs:{input:n},backend:t}),s=kL({inputs:{x:o},backend:t}),a=pi({inputs:{input:n},backend:t}),i=Lh({inputs:{x:a},backend:t}),u=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Rh({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var IL={kernelName:ms,backendName:"cpu",kernelFunc:kL};function Gw(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return _m({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let c=_m({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(c),c}),l=sl({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var CL={kernelName:fs,backendName:"cpu",kernelFunc:Gw};function Xee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;re(o,"pad");let i=s.map((x,T)=>x[0]+o.shape[T]+x[1]),u=s.map(x=>x[0]),l=t.data.get(o.dataId).values,p=b.sizeFromShape(o.shape),c=o.shape.length,m=b.computeStrides(o.shape),f=b.sizeFromShape(i),d=i.length,h=b.computeStrides(i),g=b.getTypedArrayFromDType(o.dtype,f);a!==0&&g.fill(a);for(let x=0;x<p;x++){let k=b.indexToLoc(x,c,m).map((P,A)=>P+u[A]),v=b.locToIndex(k,d,h);g[v]=l[x]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var Jy={kernelName:Do,backendName:"cpu",kernelFunc:Xee};var Yee=nt((r,e)=>Math.pow(r,e)),Qee=it(Po,Yee),vL={kernelName:Po,backendName:"cpu",kernelFunc:Qee};function Zee(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=xp(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var wL={kernelName:Ha,backendName:"cpu",kernelFunc:Zee};var Jee=$e(Bi,r=>1/r),SL={kernelName:Bi,backendName:"cpu",kernelFunc:Jee};function ete(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;re(o,"resizeBilinear");let u=b.computeStrides(o.shape),[l,p]=i,[c,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(b.sizeFromShape([c,l,p,d])),y=[s&&l>1?m-1:m,s&&p>1?f-1:f],x=[s&&l>1?l-1:l,s&&p>1?p-1:p],T=0,k=y[0]/x[0],v=y[1]/x[1];for(let P=0;P<c;P++)for(let A=0;A<l;A++){let F;a?F=k*(A+.5)-.5:F=k*A;let E=Math.max(0,Math.floor(F)),L=F-E,U=Math.min(m-1,Math.ceil(F)),K=P*u[0]+E*u[1],B=P*u[0]+U*u[1];for(let V=0;V<p;V++){let j;a?j=v*(V+.5)-.5:j=v*V;let H=Math.max(0,Math.floor(j)),ee=j-H,Y=Math.min(f-1,Math.ceil(j)),ne=K+H*u[2],oe=B+H*u[2],te=K+Y*u[2],le=B+Y*u[2];for(let ae=0;ae<d;ae++){let ge=h[ne+ae],he=h[oe+ae],Te=h[te+ae],Se=h[le+ae],Be=ge+(Te-ge)*ee,Re=he+(Se-he)*ee,Oe=Be+(Re-Be)*L;g[T++]=Oe}}}return t.makeTensorInfo([c,l,p,d],"float32",g)}var _L={kernelName:Eo,backendName:"cpu",kernelFunc:ete};function tte(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;re([s,o],"resizeBilinearGrad");let i=b.computeStrides(o.shape),[u,l,p,c]=o.shape,[,m,f]=s.shape,d=new Float32Array(u*l*p*c),h=[a&&m>1?l-1:l,a&&f>1?p-1:p],g=[a&&m>1?m-1:m,a&&f>1?f-1:f],y=h[0]/g[0],x=h[1]/g[1],T=t.data.get(s.dataId).values,k=0;for(let v=0;v<u;v++){let P=v*i[0];for(let A=0;A<m;A++){let F=A*y,E=Math.floor(F),L=Math.min(Math.ceil(F),l-1),U=P+E*i[1],K=P+L*i[1],B=F-E,V=1-B;for(let j=0;j<f;j++){let H=j*x,ee=Math.floor(H),Y=Math.min(Math.ceil(H),p-1),ne=H-ee,oe=1-ne,te=U+ee*i[2],le=U+Y*i[2],ae=K+ee*i[2],ge=K+Y*i[2],he=V*oe,Te=V*ne,Se=B*oe,Be=B*ne;for(let Re=0;Re<c;Re++){let Oe=T[k++];d[te+Re]+=Oe*he,d[le+Re]+=Oe*Te,d[ae+Re]+=Oe*Se,d[ge+Re]+=Oe*Be}}}}return t.makeTensorInfo([u,p,l,c],"float32",d)}var AL={kernelName:gc,backendName:"cpu",kernelFunc:tte};function rte(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;re(o,"resizeNearestNeighbor");let u=b.computeStrides(o.shape),[l,p]=i,[c,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(c*l*p*d),y=[s&&l>1?m-1:m,s&&p>1?f-1:f],x=[s&&l>1?l-1:l,s&&p>1?p-1:p],T=y[0]/x[0],k=y[1]/x[1],v=0;for(let P=0;P<c;P++){let A=P*u[0];for(let F=0;F<l;F++){let E=a?T*(F+.5):T*F,L=Math.min(m-1,s?Math.round(E):Math.floor(E));a&&(L=Math.max(0,L));let U=A+L*u[1];for(let K=0;K<p;K++){let B=a?k*(K+.5):k*K,V=Math.min(f-1,s?Math.round(B):Math.floor(B));a&&(V=Math.max(0,V));let j=U+V*u[2];for(let H=0;H<d;H++){let ee=h[j+H];g[v++]=ee}}}}return t.makeTensorInfo([c,l,p,d],o.dtype,g)}var NL={kernelName:qa,backendName:"cpu",kernelFunc:rte};function nte(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;re([s,o],"resizeNearestNeighborGrad");let i=b.computeStrides(o.shape),u=b.computeStrides(s.shape),[l,p,c,m]=o.shape,[,f,d]=s.shape,h=new Float32Array(l*p*c*m),g=t.data.get(s.dataId).values,y=[a&&f>1?p-1:p,a&&d>1?c-1:c],x=[a&&f>1?f-1:f,a&&d>1?d-1:d],T=y[0]/x[0],k=y[1]/x[1],v=1/T,P=1/k,A=Math.ceil(v)*2+2,F=Math.ceil(P)*2+2;for(let E=0;E<l;E++){let L=E*i[0];for(let U=0;U<p;U++){let K=L+U*i[1],B=Math.floor(U*v),V=Math.floor(B-A/2);for(let j=0;j<c;j++){let H=K+j*i[2],ee=Math.floor(j*P),Y=Math.floor(ee-F/2);for(let ne=0;ne<m;ne++){let oe=0;for(let te=0;te<A;te++){let le=te+V;if(le<0||le>=f)continue;let ae=L+le*u[1],ge=le*T,he=Math.min(p-1,a?Math.round(ge):Math.floor(ge));if(U===he)for(let Te=0;Te<F;Te++){let Se=Te+Y;if(Se<0||Se>=d)continue;let Be=ae+Se*u[2],Re=Se*k,Oe=Math.min(c-1,a?Math.round(Re):Math.floor(Re));j===Oe&&(oe+=g[Be+ne])}}h[H+ne]=oe}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var DL={kernelName:hc,backendName:"cpu",kernelFunc:nte};function ote(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;re(o,"reverse");let a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return Xr({inputs:{x:o},backend:t});let u=new xt(o.shape,o.dtype),l=t.bufferSync(o);for(let p=0;p<u.size;p++){let c=u.indexToLoc(p),m=c.slice();i.forEach(f=>m[f]=o.shape[f]-1-m[f]),u.set(l.get(...m),...c)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}var PL={kernelName:ma,backendName:"cpu",kernelFunc:ote};var FL={kernelName:Ta,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[l,p,c,m]=n.shape,[f,d]=I.getImageCenter(a,p,c),h=255,g=Math.sin(o),y=Math.cos(o),x=i.data.get(n.dataId).values;for(let k=0;k<l;k++){let v=k*c*p*m;for(let P=0;P<p;P++){let A=P*(c*m);for(let F=0;F<c;F++){let E=F*m;for(let L=0;L<m;L++){let U=[l,P,F,L],K=U[2],B=U[1],V=(K-f)*y-(B-d)*g,j=(K-f)*g+(B-d)*y;V=Math.round(V+f),j=Math.round(j+d);let H=s;if(typeof s!="number"&&(L===3?H=h:H=s[L]),V>=0&&V<c&&j>=0&&j<p){let Y=j*(c*m),ne=V*m,oe=v+Y+ne+L;H=x[oe]}let ee=v+A+E+L;u[ee]=H}}}}return{dataId:i.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var ste=$e(fa,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2==0?e:e+1}),ML={kernelName:fa,backendName:"cpu",kernelFunc:ste};function ex(r,e,t,n,o,s,a,i,u,l){let p=[n/o,o],c=r.values,m=e.values;if(n===0)return Ce(t,e.dtype);let f=Ce(p,e.dtype);f.values.fill(u);for(let d=0;d<s;d++){let h=[],g=0;for(let y=0;y<a;y++){let x=c[d*a+y];h.push(x),g+=x*i[y]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let y=0;y<o;y++)l?f.values[g*o+y]+=m[d*o+y]:f.values[g*o+y]=e.rank===0?m[0]:m[d*o+y]}return f}function ate(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:c}=I.calculateShapes(s,o,a),m=!0,f=t.bufferSync(o),d=t.bufferSync(s),h=ex(f,d,a,c,l,u,i,p,0,m);return t.makeTensorInfo(a,h.dtype,h.values)}var EL={kernelName:da,backendName:"cpu",kernelFunc:ate};function ite(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;re([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Kt(o.dtype,s.dtype),c=b.makeZerosTypedArray(b.sizeFromShape(o.shape),p),m=0,f=a===0||a>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let d=0;d<i.length;d++)for(let h=0;h<f;h++)i[d]===1?c[m++]=u[d]:c[m++]=l[d];return t.makeTensorInfo(o.shape,p,c)}var RL={kernelName:hs,backendName:"cpu",kernelFunc:ite};var ute=I.SELU_SCALEALPHA,lte=I.SELU_SCALE,pte=$e(Oi,r=>r>=0?lte*r:ute*(Math.exp(r)-1)),LL={kernelName:Oi,backendName:"cpu",kernelFunc:pte};var cte=$e(zi,r=>r<0?-1:r>0?1:0),$L={kernelName:zi,backendName:"cpu",kernelFunc:cte};var mte=$e($o,r=>Math.sin(r)),BL={kernelName:$o,backendName:"cpu",kernelFunc:mte};var fte=$e(ha,r=>Math.sinh(r)),OL={kernelName:ha,backendName:"cpu",kernelFunc:fte};var dte=11920928955078125e-23,zL=Math.log(dte)+2,hte=$e(Gi,r=>{let e=r>-zL,t=r<zL,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),GL={kernelName:Gi,backendName:"cpu",kernelFunc:hte};function gte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;re([o],"spaceToBatchND");let i=b.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let P=1+s.length;P<o.shape.length;++P)u.push([0,0]);let l=Jy.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(l.shape,s,i,!1),c=I.getPermuted(p.length,s.length,!1),m=I.getReshapedPermuted(l.shape,s,i,!1),h=st({inputs:{x:l},backend:t,attrs:{shape:p}}),x=lr({inputs:{x:h},backend:t,attrs:{perm:c}}),v=st({inputs:{x},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(x),v}var WL={kernelName:bs,backendName:"cpu",kernelFunc:gte};function bte(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values[0],[c,m,f,d,h]=Gy(i,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(m,n.dtype,c),t.makeTensorInfo([m[0]],o.dtype,f),t.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var UL={kernelName:bc,backendName:"cpu",kernelFunc:bte};function yte(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.data.get(o.dataId).values),i=t.data.get(n.dataId).values,u=Array.from(t.data.get(s.dataId).values),[l,p,c]=Wy(i,n.shape,n.dtype,a,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}var KL={kernelName:yc,backendName:"cpu",kernelFunc:yte};function xte(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=Cm(a,n.shape,n.dtype,i,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var VL={kernelName:xc,backendName:"cpu",kernelFunc:xte};function Tte(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=Cm(a,n.shape,n.dtype,i,u);return t.makeTensorInfo(p,n.dtype,l)}var jL={kernelName:Tc,backendName:"cpu",kernelFunc:Tte};function kte(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:c,outputSize:m}=I.calculateShapes(s,o,i),f=!1,d=t.bufferSync(o),h=t.bufferSync(s),g=t.data.get(a.dataId).values[0],y=ex(d,h,i,m,p,l,u,c,g,f);return t.makeTensorInfo(i,y.dtype,y.values)}var HL={kernelName:Bu,backendName:"cpu",kernelFunc:kte};function Ite(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],u=I.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(c=>{let m=[...p];m[i]=c;let f=Us({inputs:{x:o},backend:t,attrs:{begin:l,size:m}});return l[i]+=c,f})}var qL={kernelName:ys,backendName:"cpu",kernelFunc:Ite};var XL={kernelName:Xa,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;re(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let u=o[i];s[i]=u*u}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var Cte=$e(ks,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),YL={kernelName:ks,backendName:"cpu",kernelFunc:Cte};function vte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n;re(o,"stridedSlice");let{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:x,end:T,strides:k}=It.sliceInfo(o.shape,s,a,i,u,l,p,c,m),v;if(h)v=st({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let P=It.computeOutShape(x,T,k),A=Us({inputs:{x:o},backend:t,attrs:{begin:x,size:P}});v=st({inputs:{x:A},backend:t,attrs:{shape:d}}),t.disposeIntermediateTensorInfo(A)}else{let P=t.bufferSync(o),A=Uy(f,P,k,x);v=t.makeTensorInfo(d,A.dtype,A.values)}return v}var QL={kernelName:ga,backendName:"cpu",kernelFunc:vte};function wte(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:c}=e,m=t.data.get(p.dataId).values,f=t.data.get(c.dataId).values,[d,h]=Ky(m,f,o,s,a,i,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(c.shape,"int32",h)]}var ZL={kernelName:Ou,backendName:"cpu",kernelFunc:wte};function Ste(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.data.get(s.dataId).values,u=t.data.get(a.dataId).values[0],[l,p,c]=Vy(i,u,o),m=p.length;return[t.makeTensorInfo([m,2],"int32",l),t.makeTensorInfo([m],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(c))]}var JL={kernelName:kc,backendName:"cpu",kernelFunc:Ste};function _te(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.data.get(s.dataId).values,i=jy(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var e$={kernelName:Ic,backendName:"cpu",kernelFunc:_te};var Ate=$e(ba,r=>Math.tan(r)),t$={kernelName:ba,backendName:"cpu",kernelFunc:Ate};var Nte=$e(Ko,r=>Math.tanh(r)),r$={kernelName:Ko,backendName:"cpu",kernelFunc:Nte};function Dte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;re(o,"tile");let a=Hy(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var n$={kernelName:An,backendName:"cpu",kernelFunc:Dte};function Pte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;re(o,"topk");let i=t.data.get(o.dataId).values,[u,l]=qy(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}var o$={kernelName:ya,backendName:"cpu",kernelFunc:Pte};function Fte(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=t,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],y=b.computeStrides(o.shape),x=y[0],T=y[1],k=y[2],v=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(g));v.fill(u);let P=n.data.get(o.dataId).values,A=n.data.get(s.dataId).values;for(let E=0;E<p;++E){let L=s.shape[0]===1?A:A.subarray(E*8,E*8+8);for(let U=0;U<d;++U)for(let K=0;K<h;++K)for(let B=0;B<f;++B){let V,j=L[6]*K+L[7]*U+1;if(j===0)continue;let H=(L[0]*K+L[1]*U+L[2])/j,ee=(L[3]*K+L[4]*U+L[5])/j,Y=a$(H,m,i),ne=a$(ee,c,i);switch(a){case"nearest":V=$te(P,c,m,x,T,k,E,ne,Y,B,u);break;case"bilinear":V=Bte(P,c,m,x,T,k,E,ne,Y,B,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let oe=E*x+U*T+K*k+B;v[oe]=V}return n.makeTensorInfo(g,o.dtype,v)}return{dataId:n.write(v,g,o.dtype),shape:o.shape,dtype:o.dtype}}var s$={kernelName:xa,backendName:"cpu",kernelFunc:Fte};function a$(r,e,t){switch(t){case"reflect":return Mte(r,e);case"wrap":return Ete(r,e);case"nearest":return Lte(r,e);case"constant":default:return Rte(r,e)}}function Mte(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return b.clamp(0,t,e-1)}function Ete(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return b.clamp(0,t,e-1)}function Rte(r,e){return r}function Lte(r,e){return b.clamp(0,r,e-1)}function $h(r,e,t,n,o,s,a,i,u,l,p){let c=a*n+i*o+u*s+l;return 0<=i&&i<e&&0<=u&&u<t?r[c]:p}function $te(r,e,t,n,o,s,a,i,u,l,p){let c=Math.round(i),m=Math.round(u);return $h(r,e,t,n,o,s,a,c,m,l,p)}function Bte(r,e,t,n,o,s,a,i,u,l,p){let c=Math.floor(i),m=Math.floor(u),f=c+1,d=m+1,h=(d-u)*$h(r,e,t,n,o,s,a,c,m,l,p)+(u-m)*$h(r,e,t,n,o,s,a,c,d,l,p),g=(d-u)*$h(r,e,t,n,o,s,a,f,m,l,p)+(u-m)*$h(r,e,t,n,o,s,a,f,d,l,p);return(f-i)*h+(i-c)*g}function Ote(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;re(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:l}=Xy(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var i$={kernelName:Cc,backendName:"cpu",kernelFunc:Ote};function zte(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],u=new Array(a-1),l=0;for(let f=0;f<a;f++)f!==s&&(u[l++]=o.shape[f]);let p=new Array(a).fill(0),c=o.shape.slice();c[s]=1;let m=new Array(i);for(let f=0;f<m.length;f++){p[s]=f;let d=Us({inputs:{x:o},backend:t,attrs:{begin:p,size:c}});m[f]=st({inputs:{x:d},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(d)}return m}var u$={kernelName:xs,backendName:"cpu",kernelFunc:zte};function Gte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;re(o,"unsortedSegmentSum");let i=o.shape.length,u=s.shape.length,l=[],p=[],c=i-u,m=s;for(let d=0;d<c;++d){let h=_m({inputs:{input:m},backend:t,attrs:{dim:d+1}});m=h,p.push(h)}for(let d=0;d<a;++d){let h=b.createScalarValue(d,"int32"),g=t.makeTensorInfo([],"int32",h),y=cw({inputs:{a:g,b:m},backend:t}),x=Gs({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),T=yp({inputs:{a:x,b:o},backend:t}),k=mu({inputs:{x:T},backend:t,attrs:{axis:0,keepDims:!1}});l.push(k),p.push(g),p.push(y),p.push(x),p.push(T),p.push(k)}let f=Gw({inputs:l,backend:t,attrs:{axis:0}});return p.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var l$={kernelName:zu,backendName:"cpu",kernelFunc:Gte};var Wte=[GE,tE,WE,UE,aE,KE,VE,jE,HE,qE,XE,YE,QE,ZE,JE,tR,rR,nR,oR,zE,sR,aR,iR,uR,sE,iE,lR,rE,pR,mR,dR,hR,fR,bR,yR,gR,xR,TR,kR,IR,CR,vR,wR,SR,_R,AR,NR,PR,DR,Eh,MR,EE,ER,uE,RR,lE,LR,pE,$R,BR,OR,cE,zR,GR,WR,UR,KR,mE,fE,nE,VR,cR,jR,HR,qR,RE,dE,hE,XR,gE,YR,QR,ZR,JR,eL,tL,bE,nL,oL,sL,aL,uL,rL,lL,pL,yE,cL,mL,hL,xE,TE,gL,bL,yL,kE,xL,IL,CL,Jy,vL,LE,CE,wL,oE,SL,$E,BE,OE,_L,AL,NL,DL,PL,FL,ML,vE,EL,RL,LL,SE,$L,BL,OL,_E,fL,GL,WL,UL,KL,VL,jL,HL,qL,NE,XL,DE,YL,QL,ZL,JL,e$,FE,FR,t$,r$,n$,o$,IE,s$,i$,u$,l$,TL];for(let r of Wte)Wi(r);var g$={};Qe(g$,{assertNotComplex:()=>Ea,bindCanvasToFramebuffer:()=>Zte,bindColorTextureToFramebuffer:()=>Gh,bindTextureToProgramUniformSampler:()=>rS,bindTextureUnit:()=>f$,bindVertexBufferToProgramAttribute:()=>tx,callAndCheck:()=>_e,canBeRepresented:()=>Kw,createFragmentShader:()=>jw,createFramebuffer:()=>Jw,createProgram:()=>Hw,createStaticIndexBuffer:()=>Yw,createStaticVertexBuffer:()=>Xw,createTexture:()=>Qw,createVertexShader:()=>Vw,getBatchDim:()=>du,getExtensionOrThrow:()=>Am,getFramebufferErrorMessage:()=>d$,getMaxTexturesInShader:()=>sS,getNumChannels:()=>Yte,getProgramUniformLocation:()=>tS,getProgramUniformLocationOrThrow:()=>eS,getRowsCols:()=>hu,getShapeAs3D:()=>Wh,getTextureShapeFromLogicalShape:()=>nS,getWebGLDisjointQueryTimerVersion:()=>aS,getWebGLErrorMessage:()=>m$,getWebGLMaxTextureSize:()=>oS,hasExtension:()=>Zn,isCapableOfRenderingToFloatTexture:()=>iS,isDownloadFloatTextureEnabled:()=>uS,isReshapeFree:()=>il,isWebGLFenceEnabled:()=>pS,isWebGLVersionEnabled:()=>ax,linkProgram:()=>qw,resetMaxTextureSize:()=>Jte,resetMaxTexturesInShader:()=>ere,unbindColorTextureFromFramebuffer:()=>rx,unbindTextureUnit:()=>Qte,validateFramebuffer:()=>Nm,validateProgram:()=>zh,validateTextureSize:()=>Zw});var kp={},Ww={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Uw(r,e){kp[r]=e}function Jo(r){if(!(r in kp)){let t=Kte(r);if(t!==null)kp[r]=t;else return console.log("Could not get context for WebGL version",r),null}let e=kp[r];return e.isContextLost()?(delete kp[r],Jo(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),kp[r])}function Ute(r){if(typeof OffscreenCanvas!="undefined"&&r===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Kte(r){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=Ute(r);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete kp[r]},!1),r===1?e.getContext("webgl",Ww)||e.getContext("experimental-webgl",Ww):e.getContext("webgl2",Ww)}var al;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(al||(al={}));var Yr;(function(o){o[o.RENDER=0]="RENDER",o[o.UPLOAD=1]="UPLOAD",o[o.PIXELS=2]="PIXELS",o[o.DOWNLOAD=3]="DOWNLOAD"})(Yr||(Yr={}));var Or;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Or||(Or={}));function Ip(r,e){return[e,r]}function p$(r,e){return r*e}function Bh(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function ci(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function c$(r,e){let[t,n]=ci(r,e);return t*n*4}function Oh(r,e){let t=r,n,o,s,a,i,u,l,p,c,m;return W().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,l=4,p=1,c=t.HALF_FLOAT,m=t.FLOAT):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,l=4,p=4,c=e!=null?e.HALF_FLOAT_OES:null,m=r.FLOAT),u=r.RGBA,{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:p,textureTypeHalfFloat:c,textureTypeFloat:m}}function _e(r,e){let t=e();return W().getBool("DEBUG")&&Vte(r),t}function Vte(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+m$(r,e))}var jte=596e-10,Hte=65504;function Kw(r){return!!(W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||jte<Math.abs(r)&&Math.abs(r)<Hte)}function m$(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Am(r,e){return fu(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Vw(r,e){let t=fu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(_e(r,()=>r.shaderSource(t,e)),_e(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function jw(r,e){let t=fu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(_e(r,()=>r.shaderSource(t,e)),_e(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw Xte(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var qte=/ERROR: [0-9]+:([0-9]+):/g;function Xte(r,e){let t=qte.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((c,m)=>b.rightPad((m+1).toString(),s)+c),i=0;for(let c=0;c<a.length;c++)i=Math.max(a[c].length,i);let u=a.slice(0,n-1),l=a.slice(n-1,n),p=a.slice(n);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function Hw(r){return fu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function qw(r,e){if(_e(r,()=>r.linkProgram(e)),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function zh(r,e){if(_e(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Xw(r,e){let t=fu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return _e(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),_e(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function Yw(r,e){let t=fu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return _e(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),_e(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function Yte(){return W().getNumber("WEBGL_VERSION")===2?1:4}function Qw(r){return fu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function Zw(r,e){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function Jw(r){return fu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function tx(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(_e(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),_e(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),_e(r,()=>r.enableVertexAttribArray(i)),!0)}function f$(r,e,t){h$(r,t),_e(r,()=>r.activeTexture(r.TEXTURE0+t)),_e(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function Qte(r,e){h$(r,e),_e(r,()=>r.activeTexture(r.TEXTURE0+e)),_e(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function eS(r,e,t){return fu(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function tS(r,e,t){return r.getUniformLocation(e,t)}function rS(r,e,t,n){_e(r,()=>f$(r,e,n)),_e(r,()=>r.uniform1i(t,n))}function Zte(r){_e(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),_e(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),_e(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function Gh(r,e,t){_e(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),_e(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function rx(r,e){_e(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),_e(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Nm(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+d$(r,e))}function d$(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function fu(r,e,t){let n=_e(r,()=>e());if(n==null)throw new Error(t);return n}function h$(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function du(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function hu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Wh(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[du(r),...hu(r)]),e}function nS(r,e=!1){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?b.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let n=b.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=du(r),s=2,a=2;return r.length&&([s,a]=hu(r)),n=o*(s/2)*(a/2),b.sizeToSquarishShape(n).map(i=>i*2)}return b.sizeToSquarishShape(n)}function nx(r){return r%2==0}function il(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||nx(t)&&nx(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&nx(r[0])&&nx(e[0])}var ox,sx;function oS(r){if(ox==null){let e=Jo(r);ox=e.getParameter(e.MAX_TEXTURE_SIZE)}return ox}function Jte(){ox=null}function ere(){sx=null}function sS(r){if(sx==null){let e=Jo(r);sx=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,sx)}function aS(r){if(r===0)return 0;let e,t=Jo(r);return Zn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Zn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Zn(r,e){return r.getExtension(e)!=null}function ax(r){try{if(Jo(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function iS(r){if(r===0)return!1;let e=Jo(r);if(r===1){if(!Zn(e,"OES_texture_float"))return!1}else if(!Zn(e,"EXT_color_buffer_float"))return!1;return lS(e)}function uS(r){if(r===0)return!1;let e=Jo(r);if(r===1){if(!Zn(e,"OES_texture_float")||!Zn(e,"WEBGL_color_buffer_float"))return!1}else{if(Zn(e,"EXT_color_buffer_float"))return lS(e);let n="EXT_color_buffer_half_float";if(Zn(e,n)){let o=e.getExtension(n);return tre(e,o)}return!1}return lS(e)}function lS(r){let e=Oh(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function tre(r,e){let t=Oh(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function pS(r){return r!==2?!1:Jo(r).fenceSync!=null}function Ea(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var ze=W();ze.registerFlag("HAS_WEBGL",()=>ze.getNumber("WEBGL_VERSION")>0);ze.registerFlag("WEBGL_VERSION",()=>ax(2)?2:ax(1)?1:0);ze.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ze.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ze.get("WEBGL_VERSION")===2);ze.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ze.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ze.registerFlag("WEBGL_PACK",()=>ze.getBool("HAS_WEBGL"));ze.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_CLIP",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_REDUCE",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_LAZILY_UNPACK",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_CONV_IM2COL",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>oS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>sS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=ze.getNumber("WEBGL_VERSION");return r===0?0:aS(r)});ze.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ze.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ki.isMobile());ze.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>iS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ze.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ze.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ze.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>uS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_FENCE_API_ENABLED",()=>pS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ze.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ze.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});ze.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ki.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});ze.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ze.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ze.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ze.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Zt(){let r,e,t,n,o,s,a,i,u,l;return W().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function Ra(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Cp(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function rre(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function b$(r,e,t="index"){let n=r.map((s,a)=>a),o=rre(n,e);return o.map((s,a)=>{let i=`int ${r[a]} = ${t} / ${o[a]}`,u=a===o.length-1?`int ${r[a+1]} = ${t} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${u};`}).join("")}function Dm(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Pm(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var ix=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:y$}=I;function x$(r,e,t){let n=[];if(r.forEach(f=>{let d=b.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${d>1?`[${d}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){let{uniformShape:h}=ux(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(f=>nre(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Zt(),u=are(i),l,p,c=lre(i);return e.isPacked?(l=ore(e.logicalShape,a,t.enableShapeUniforms),p=ure(i)):(l=sre(e.logicalShape,a,t.enableShapeUniforms),p=ire(i)),t.packedInputs&&(c+=fre),[c,u,p,o,l,s,t.userCode].join(`
`)}function Fm(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return wre(r,e);case 1:return _re(r,e);case 2:return Nre(r,e);case 3:return Pre(r,e);case 4:return Mre(r,e);case 5:return Ere(r);case 6:return Rre(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function T$(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return vre(r);case 1:return Sre(r,e);case 2:return Are(r,e);case 3:return Dre(r,e);default:return Fre(r,e)}}function nre(r,e,t=!1,n){let o="";t?o+=T$(r,n):o+=Fm(r,n);let s=r.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(t?o+=Lre(r,e):o+=$re(r,e)),o}function ore(r,e,t){switch(r.length){case 0:return k$();case 1:return dre(r,e,t);case 2:return Ire(r,e,t);case 3:return gre(r,e,t);default:return yre(r,e,t)}}function sre(r,e,t){switch(r.length){case 0:return k$();case 1:return hre(r,e,t);case 2:return Cre(r,e,t);case 3:return bre(r,e,t);case 4:return xre(r,e,t);case 5:return Tre(r,e);case 6:return kre(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function are(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function ire(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function ure(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function lre(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${pre}
    ${cre}
    ${mre}
  `}var pre=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,cre=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,mre=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,fre=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function k$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function dre(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function hre(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function gre(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function bre(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Cp(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Ra(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function yre(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",u="b, r, c";for(let l=2;l<r.length-1;l++)a*=r[r.length-l-1],i=`
      int b${l} = index / ${a};
      index -= b${l} * ${a};
    `+i,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function xre(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Cp(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Ra(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Tre(r,e){let t=Ra(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function kre(r,e){let t=Ra(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Ire(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Cre(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function vp(r){return`offset${r}`}function vre(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Zt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function wre(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=vp(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;let[i,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Sre(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Zt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function _re(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Mm(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=vp(t);return a===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Are(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],u=Zt();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Nre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=b.squeezeShape(t),u=a;if(u.length<t.length){let m=Em(r,u),f=["row","col"];return`
      ${Fm(m,e)}
      float ${o}(int row, int col) {
        return ${o}(${Rm(f,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Mm(r)}
      }
    `;let l=s[0],p=s[1],c=vp(n);return p===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${c};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${c};
    vec2 uv = uvFromFlat(${l}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function Dre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let m=t.slice(1),f=[1,2],d=Em(r,m),h=["b","row","col"];return`
        ${T$(d,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Rm(h,f)});
        }
      `}let i=Zt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let u=a[0],l=a[1],p=Math.ceil(t[2]/2),c=p*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${c}, ${p}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function Pre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:u}=b.squeezeShape(t),l=i;if(l.length<t.length){let h=Em(r,l),g=["row","col","depth"];return`
        ${Fm(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Rm(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${Mm(r)}
      }
    `;let p=r.shapeInfo.texShape,c=p[0],m=p[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${c}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(m===a&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `;let d=vp(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${a} + depth + ${d};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${d};
        vec2 uv = uvFromFlat(${c}, ${m}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Fre(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Zt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],p=u[1],c=Math.ceil(s[a-1]/2),m=c*Math.ceil(s[a-2]/2),f="int b, int row, int col",d=`b * ${m} + (row / 2) * ${c} + (col / 2)`;for(let h=2;h<a-1;h++)f=`int b${h}, `+f,m*=s[a-h-1],d=`b${h} * ${m} + `+d;return`
    vec4 ${n}(${f}) {
      int index = ${d};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${l});
      return ${o.texture2D}(${t}, uv);
    }
  `}function Mre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:u,keptDims:l}=b.squeezeShape(t);if(u.length<t.length){let x=Em(r,u),T=["row","col","depth","depth2"];return`
      ${Fm(x,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Rm(T,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${Mm(r)}
      }
    `;let p=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,m=c[0],f=c[1],d=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(f===i&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${d}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===s&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=vp(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${d}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function Ere(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:u,keptDims:l}=b.squeezeShape(e);if(u.length<e.length){let h=Em(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${Fm(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Rm(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${Mm(r)}
      }
    `;let p=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,m=c[0],f=c[1];if(f===i&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;let d=vp(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Rre(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(e);if(o.length<e.length){let g=Em(r,o),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Fm(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Rm(y,s)});
      }
    `}let a=e[5],i=e[4]*a,u=e[3]*i,l=e[2]*u,p=e[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${l}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Mm(r)}
      }
    `;let c=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===p&&c==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===a&&c==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=vp(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${l} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Mm(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Lre(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=y$(r.shapeInfo.logicalShape,e.logicalShape),u=He(a),l=a-s,p,c=["x","y","z","w","u","v"];s===0?p="":a<2&&i.length>=1?p="coords = 0;":p=i.map(x=>`coords.${c[x+l]} = 0;`).join(`
`);let m="";a<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((x,T)=>`coords.${c[T+l]}`).join(", ");let f="return outputValue;",h=b.sizeFromShape(r.shapeInfo.logicalShape)===1,y=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!y)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!y)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=s-2,T=s-1;i.indexOf(x)>-1&&i.indexOf(T)>-1?f="return vec4(outputValue.x);":i.indexOf(x)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(T)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${m});
      ${f}
    }
  `}function $re(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===u&&r.shapeInfo.flatOffset==null&&b.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let l=He(u),p=y$(r.shapeInfo.logicalShape,e.logicalShape),c=u-i,m,f=["x","y","z","w","u","v"];i===0?m="":u<2&&p.length>=1?m="coords = 0;":m=p.map(h=>`coords.${f[h+c]} = 0;`).join(`
`);let d="";return u<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((h,g)=>`coords.${f[g+c]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${m}
      return get${n}(${d});
    }
  `}function He(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ux(r,e,t){let{newShape:n,keptDims:o}=b.squeezeShape(e),s=e.length,a=r&&s===3&&e[0]===1,i=a?e.slice(1):n,u=!r&&s>1&&!b.arraysEqual(e,t)&&n.length<s||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:o}}function Em(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function Rm(r,e){return e.map(t=>r[t]).join(", ")}function I$(r,e,t,n){let o=t.map((T,k)=>{let v={logicalShape:T.shape,texShape:T.isUniform?null:T.texData.texShape,isUniform:T.isUniform,isPacked:T.isUniform?!1:T.texData.isPacked,flatOffset:null};return T.texData!=null&&T.texData.slice!=null&&T.texData.slice.flatOffset>0&&(v.flatOffset=T.texData.slice.flatOffset),{name:e.variableNames[k],shapeInfo:v}}),s=o.map(T=>T.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=x$(o,a,e),u=r.createProgram(i),l=null,p=r.getUniformLocation(u,"NAN",!1);W().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(u,"INFINITY",!1));let c=!1,m={},f={},d={};for(let T=0;T<e.variableNames.length;T++){let k=e.variableNames[T];m[k]=r.getUniformLocation(u,k,c),m[`offset${k}`]=r.getUniformLocation(u,`offset${k}`,c),e.enableShapeUniforms&&(f[`${k}Shape`]=r.getUniformLocation(u,`${k}Shape`,c),d[`${k}TexShape`]=r.getUniformLocation(u,`${k}TexShape`,c))}let h,g,y;e.enableShapeUniforms&&(h=r.getUniformLocation(u,"outShape",c),y=r.getUniformLocation(u,"outShapeStrides",c),g=r.getUniformLocation(u,"outTexShape",c));let x=[];return e.customUniforms&&e.customUniforms.forEach((T,k)=>{x[k]=r.getUniformLocation(u,T.name,c)}),{program:e,source:i,webGLProgram:u,uniformLocations:m,customUniformLocations:x,inShapeInfos:s,outShapeInfo:a,infLoc:l,nanLoc:p,inShapesLocations:f,inTexShapesLocations:d,outShapeLocation:h,outShapeStridesLocation:y,outTexShapeLocation:g}}function C$(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!b.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function v$(r,e,t,n,o){e.program.enableShapeUniforms||(C$(e.inShapeInfos,t),C$([e.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s,a[0],a[1]):r.setOutputMatrixTexture(s,a[0],a[1]),r.setProgram(e.webGLProgram),W().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((u,l)=>{let p=e.program.variableNames[l],c=e.uniformLocations[p],m=e.uniformLocations[`offset${p}`],f=e.inShapesLocations[`${p}Shape`],d=e.inTexShapesLocations[`${p}TexShape`];if(f){let{uniformShape:h}=ux(e.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(f,new Int32Array(h));break;case 2:r.gl.uniform2iv(f,new Int32Array(h));break;case 3:r.gl.uniform3iv(f,new Int32Array(h));break;case 4:r.gl.uniform4iv(f,new Int32Array(h));break;default:break}}if(d&&r.gl.uniform2i(d,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(b.sizeFromShape(u.shape)<2)r.gl.uniform1f(c,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(c,h)}return}u.texData.slice!=null&&m!=null&&r.gl.uniform1i(m,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture,c,l)}});let i=e.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let u=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break;default:break}}e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((u,l)=>{let p=e.customUniformLocations[l],c=o[l];if(u.type==="float")r.gl.uniform1fv(p,c);else if(u.type==="vec2")r.gl.uniform2fv(p,c);else if(u.type==="vec3")r.gl.uniform3fv(p,c);else if(u.type==="vec4")r.gl.uniform4fv(p,c);else if(u.type==="int")r.gl.uniform1iv(p,c);else if(u.type==="ivec2")r.gl.uniform2iv(p,c);else if(u.type==="ivec3")r.gl.uniform3iv(p,c);else if(u.type==="ivec4")r.gl.uniform4iv(p,c);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function w$(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let u=a.texData.texShape,{useSqueezeShape:l,uniformShape:p,keptDims:c}=ux(r.packedInputs,a.shape,u),m="",f="",d="";if(p.length===1&&r.packedInputs){let v=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${v[0]>1}_${v[1]>1}`}else if(p.length===2&&!r.packedInputs)f=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!r.packedInputs){let v=b.computeStrides(p);d=`${v[0]===u[1]}_${v[v.length-1]===u[1]}`}let h=a.shape.length,g=p.length===2&&b.arraysEqual(a.shape,u),y=b.sizeFromShape(a.shape)===1,x=I.getBroadcastDims(a.shape,t.shape),T=!r.packedInputs&&h===t.shape.length&&b.arraysEqual(u,t.texData.texShape),k=r.packedInputs||p.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${T}_${l?c:""}_${p.length}_${y}_${x}_${g}_${m}_${f}_${d}_${k}_${i}`}else{let u=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${u}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${W().getNumber("WEBGL_VERSION")}`,s}function tr(r){return W().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var cS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=al.DENSE;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Zt();this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Cp(["r","c","d"],e):Ra(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var mS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=al.DENSE;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Zt();this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Cp(["r","c","d"],e):Ra(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var fS=class{constructor(e){this.variableNames=["A"];this.outTexUsage=Yr.DOWNLOAD;let t=Zt();this.outputShape=e,this.userCode=`
      ${ix}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var dS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=Yr.DOWNLOAD;let t=Zt();this.outputShape=e,this.userCode=`
      ${ix}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var hS=class{constructor(e,t=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Zt();this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Pm():Dm(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var gS=class{constructor(e,t=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Zt();this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let u=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Pm():Dm(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var S$={};Qe(S$,{bindVertexProgramAttributeStreams:()=>wS,createBufferFromOutputTexture:()=>AS,createFloat16MatrixTexture:()=>kS,createFloat16PackedMatrixTexture:()=>vS,createFloat32MatrixTexture:()=>TS,createIndexBuffer:()=>xS,createPackedMatrixTexture:()=>CS,createUnsignedBytesMatrixTexture:()=>IS,createVertexBuffer:()=>yS,createVertexShader:()=>bS,downloadByteEncodedFloatMatrixFromOutputTexture:()=>DS,downloadFloat32MatrixFromBuffer:()=>NS,downloadMatrixFromPackedOutputTexture:()=>FS,downloadPackedMatrixFromBuffer:()=>PS,getInternalFormatForFloat16MatrixTexture:()=>px,getInternalFormatForFloat16PackedMatrixTexture:()=>fx,getInternalFormatForFloat32MatrixTexture:()=>lx,getInternalFormatForPackedMatrixTexture:()=>mx,getInternalFormatForUnsignedBytesMatrixTexture:()=>cx,uploadDenseMatrixToTexture:()=>SS,uploadPixelDataToTexture:()=>_S});function bS(r){let e=Zt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Vw(r,t)}function yS(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Xw(r,e)}function xS(r){let e=new Uint16Array([0,1,2,2,1,3]);return Yw(r,e)}function Uh(r,e,t,n,o,s){Zw(e,t);let a=Qw(r),i=r.TEXTURE_2D;return _e(r,()=>r.bindTexture(i,a)),_e(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),_e(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),_e(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),_e(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),_e(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)),_e(r,()=>r.bindTexture(r.TEXTURE_2D,null)),a}function lx(r){return r.internalFormatFloat}function TS(r,e,t,n){let[o,s]=Ip(e,t);return Uh(r,o,s,lx(n),n.textureFormatFloat,r.FLOAT)}function px(r){return r.internalFormatHalfFloat}function kS(r,e,t,n){let[o,s]=Ip(e,t);return Uh(r,o,s,px(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function cx(r){return r.downloadTextureFormat}function IS(r,e,t,n){let[o,s]=Ip(e,t);return Uh(r,o,s,cx(n),r.RGBA,r.UNSIGNED_BYTE)}function mx(r){return r.internalFormatPackedFloat}function CS(r,e,t,n){let[o,s]=ci(e,t);return Uh(r,o,s,mx(n),r.RGBA,r.FLOAT)}function fx(r){return r.internalFormatPackedHalfFloat}function vS(r,e,t,n){let[o,s]=ci(e,t);return Uh(r,o,s,fx(n),r.RGBA,n.textureTypeHalfFloat)}function wS(r,e,t){let n=0,o=3*4,s=3*4+2*4;return _e(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),tx(r,e,"clipSpacePos",t,3,s,n)&&tx(r,e,"uv",t,2,s,o)}function SS(r,e,t,n,o,s){_e(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,u;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,u=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,u=s.internalFormatPackedFloat),a.set(o),_e(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,t,n,0,r.RGBA,i,a)),_e(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function _S(r,e,t){_e(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?_e(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):_e(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),_e(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function AS(r,e,t,n){let o=r.createBuffer();_e(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return _e(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),_e(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),_e(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function NS(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function DS(r,e,t,n){let[o,s]=Ip(e,t),a=4,i=new Uint8Array(p$(e*t,a));return _e(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function PS(r,e,t,n,o,s,a,i){let u=r,l=new Float32Array(c$(s,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function FS(r,e,t){let n=new Float32Array(e*t*4);return _e(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var dx=class{constructor(e){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let t=W().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Uw(t,e)):this.gl=Jo(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(W().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Am(this.gl,s),Zn(this.gl,a))this.textureHalfFloatExtension=Am(this.gl,a);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Zn(this.gl,o))this.colorBufferHalfFloatExtension=Am(this.gl,o);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Zn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Zn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=yS(this.gl),this.indexBuffer=xS(this.gl),this.framebuffer=Jw(this.gl),this.textureConfig=Oh(this.gl,this.textureHalfFloatExtension)}get debug(){return W().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;_e(e,()=>e.finish()),_e(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),_e(e,()=>e.deleteFramebuffer(this.framebuffer)),_e(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),_e(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),_e(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),TS(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),kS(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),IS(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),_S(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),SS(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),vS(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),CS(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(rx(this.gl,this.framebuffer),this.outputTexture=null),_e(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>DS(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return PS(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return NS(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=AS(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(W().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>FS(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=jw(t,e);this.vertexShader==null&&(this.vertexShader=bS(t));let o=Hw(t);return _e(t,()=>t.attachShader(o,this.vertexShader)),_e(t,()=>t.attachShader(o,n)),qw(t,o),this.debug&&zh(t,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=wS(t,this.program,this.vertexBuffer)),o}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&_e(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&zh(this.gl,this.program),_e(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?eS(this.gl,e,t):tS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),_e(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),rS(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=ci(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&zh(this.gl,this.program),Nm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),_e(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),_e(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Am(this.gl,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=Bre(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Gh(this.gl,e,this.framebuffer),this.debug&&Nm(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Gh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Nm(this.gl)):rx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;Gh(o,e,this.framebuffer),this.debug&&Nm(o),this.outputTexture=e,_e(o,()=>o.viewport(0,0,t,n)),_e(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),_e(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function Bre(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:_$,bincountImpl:hx,bincountReduceImpl:A$,ceilImpl:N$,concatImpl:D$,equalImpl:P$,expImpl:F$,expm1Impl:M$,floorImpl:E$,gatherNdImpl:R$,gatherV2Impl:L$,greaterImpl:$$,greaterEqualImpl:B$,lessImpl:O$,lessEqualImpl:z$,linSpaceImpl:G$,logImpl:W$,maxImpl:U$,maximumImpl:K$,minimumImpl:V$,multiplyImpl:j$,negImpl:H$,notEqualImpl:q$,prodImpl:X$,rangeImpl:Y$,rsqrtImpl:Q$,sigmoidImpl:Z$,simpleAbsImpl:gx,sliceImpl:J$,sparseFillEmptyRowsImpl:eB,sparseReshapeImpl:tB,sparseSegmentReductionImpl:bx,sqrtImpl:rB,stridedSliceImpl:nB,stringNGramsImpl:oB,stringSplitImpl:sB,stringToHashBucketFastImpl:aB,subImpl:iB,tileImpl:uB,topKImpl:lB,transposeImpl:wp,uniqueImpl:pB}=vm;function MS(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function ar(r,e){return e===1?[r]:MS(r,e)}function cB(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var ES=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=ar("rc",t),o=He(t),s=zre(t,e,n),a=Gre(t,e[e.length-1],e[e.length-2],n),i=Wre(e,n);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${i}));
          }
        }
      `}}};function Ore(r,e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<r;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}function zre(r,e,t){if(r===1)return`rc > ${e[0]}`;let n="";for(let o=r-2;o<r;o++)n+=`${t[o]} >= ${e[o]}`,o<r-1&&(n+="||");return n}function Gre(r,e,t,n){if(r===1)return"";let o=n.slice(-2);return`
    int r = ${o[0]};
    int c = ${o[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${e};
    bool rEdge = rp1 >= ${t};
  `}function Wre(r,e){let t=r.length,n=Ore(t,e);return t===1?`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${n[0]}),
          cEdge ? 0. : getA(${n[1]}),
          rEdge ? 0. : getA(${n[2]}),
          rEdge || cEdge ? 0. : getA(${n[3]})`}var Kh=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2==1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Ure(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Pm():Dm(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Ure(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?b$(["r","c","d"],"inputShape"):Ra(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var RS=class{constructor(e){this.gpgpu=e;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(e,t,n){let o=fB(t,n),s=dB(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=mB(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let i;return o===Or.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===Or.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===Or.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===Or.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===Or.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=fB(n,o),a=dB(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=mB(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=W().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[a],p=l.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(p,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Kre(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}function mB(r,e,t,n,o){let s=Vre(e,n),a;if(o){let[u,l]=ci(r[0],r[1]);a=u*l}else{let[u,l]=Ip(r[0],r[1]);a=u*l}let i=Kre(t,s);return a*i}function Vre(r,e){switch(r){case Or.PACKED_2X2_FLOAT32:return mx(e);case Or.PACKED_2X2_FLOAT16:return fx(e);case Or.UNPACKED_FLOAT32:return lx(e);case Or.UNPACKED_FLOAT16:return px(e);case Or.PACKED_4X1_UNSIGNED_BYTE:return cx(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function jre(r){return W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?Or.PACKED_2X2_FLOAT32:Or.UNPACKED_FLOAT32:r?Or.PACKED_2X2_FLOAT16:Or.UNPACKED_FLOAT16}function fB(r,e){if(r===Yr.UPLOAD)return Or.PACKED_2X2_FLOAT32;if(r===Yr.RENDER||r==null)return jre(e);if(r===Yr.DOWNLOAD||r===Yr.PIXELS)return Or.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function dB(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var $n=class{constructor(e,t){this.variableNames=["A"];this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Dr="if (isnan(x)) return x;",hB="return x;",LS="return abs(x);";var gB="return (x >= 0.0) ? x : (exp(x) - 1.0);",bB=Dr+`
  return (x < 0.0) ? 0.0 : x;
`,yB=Dr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Vh="return x;",xB="return 1.0 / (1.0 + exp(-1.0 * x));";var TB="return x;",kB=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,IB=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CB=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vB="return 1.0 / (1.0 + exp(-1.0 * x));",La=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var $S=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=e;let t=e.length,n=ar("rc",t),o=He(t),s=cB(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var Hre=Tr.whereImpl,qre=1e-7,Xre=1e-4,yx={};function Yre(r){return r in yx||(yx[r]={}),yx[r]}var Qre=W().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Zre=600;function Jre(){return W().global.screen==null?1024:W().global.screen.height*W().global.screen.width*window.devicePixelRatio*Zre/1024/1024}var BS=class extends os{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!W().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Jo(W().getNumber("WEBGL_VERSION"));this.binaryCache=Yre(W().getNumber("WEBGL_VERSION")),this.gpgpu=new dx(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new RS(this.gpgpu),this.numMBBeforeWarning=Jre(),this.texData=new Wa(this,jo())}nextDataId(){return BS.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((W().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||W().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:Yr.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if(W().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:Yr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:u}=t;if(a!=null){let m;u?m=new La(i,Vh):m=new $n(i,Vh);let f=this.runWebGLProgram(m,[{dataId:e,shape:i,dtype:o}],o),d=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),d}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let l=this.activeTimers!=null,p;l&&(p=b.now());let c;if(o==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);c=I.mergeRealAndImagArrays(m,f)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=b.now()-p),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let d=this.pendingRead.get(e);return new Promise(h=>d.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(s!=null){let d;u?d=new La(o,Vh):d=new $n(o,Vh);let h=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(!W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&W().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,p;if(a!=="complex64"&&W().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let d=this.texData.get(p.dataId);l=this.gpgpu.createBufferFromTexture(d.texture,...Bh(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(a==="complex64"){let d=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=d[0],g=d[1];c=I.mergeRealAndImagArrays(h,g)}else if(l==null)c=this.getValuesFromTexture(e);else{let d=b.sizeFromShape(o);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,d)}if(p!=null&&this.disposeIntermediateTensorInfo(p),l!=null){let d=this.gpgpu.gl;_e(d,()=>d.deleteBuffer(l))}let m=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(d=>d(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&jo().removeDataId(e,this),this.pendingDeletes--),m}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!Kw(n))throw W().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=b.sizeFromShape(t);if(W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),d=this.gpgpu.downloadMatrixFromPackedTexture(f.texture,...Bh(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),d}let a=W().getBool("WEBGL_PACK")&&o===!0,i=a?Wh(t):t,u=a?new dS(i):new fS(i),l=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),p=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(s);i.kernelMs=b.sum(u),i.getExtraProfileInfo=()=>u.map((l,p)=>({name:a[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}async getQueryTime(e){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Qre){return W().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&b.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Hre(e.shape,t)}packedUnaryOp(e,t,n){let o=new La(e.shape,t),s=this.compileAndRun(o,[e],n);return jo().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=gx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,LS,e.dtype);let t=new $n(e.shape,LS),n=this.compileAndRun(t,[e]);return jo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:o}=this.makeTensorInfo(e,t,n);return jo().makeTensorFromDataId(o,e,t,this)}unpackTensor(e){let t=new $S(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new ES(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[du(e.shape),...hu(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[du(t),...hu(t)],a=new Kh(s,n),i=!0,u=[n],l=this.runWebGLProgram(a,[o],e.dtype,u,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:o,dtype:s}=t,a=Wh(o),i,u=Bh(a);n?i=new mS(a):i=new cS(a);let l=!0,p=[u],c=this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,p,l);return{dtype:s,shape:o,dataId:c.dataId}}runWebGLProgram(e,t,n,o,s=!1){let a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===al.DENSE){let g=Bh(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),b.sizeFromShape(a.shape)===0)return i.values=b.getTypedArrayFromDType(a.dtype,0),a;let u=[],l=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&b.sizeFromShape(g.shape)<=W().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}else if(!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!il(y.shape,g.shape)){let x=g,T=g.shape;g.shape=y.shape,g=this.packedReshape(g,T),u.push(g),y=this.texData.get(g.dataId),x.shape=T}return this.uploadToGPU(g.dataId),{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);let p={shape:a.shape,texData:i,isUniform:!1},c=w$(e,l,p),m=this.getAndSaveBinary(c,()=>I$(this.gpgpu,e,l,p)),f=this.activeTimers!=null,d;f&&(d=this.startTimer()),v$(this.gpgpu,m,l,p,o),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let h=W().get("WEBGL_FLUSH_THRESHOLD");if(h>0){let g=b.now();g-this.lastGlFlushTime>h&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!W().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&s===!1){let g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(W().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=G(()=>{if(!W().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=W().getBool("DEBUG");W().set("DEBUG",!1);let t=this.abs(ce(1e-8)).dataSync()[0];if(W().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?qre:Xre}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:u}=t;if(a!=null)return;let l=this.activeTimers!=null,p;l&&(p=b.now());let c=t.texShape;if(c==null&&(c=nS(n,u),t.texShape=c),s!=null){let m=Wh(n),f,d=c[1],h=c[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;u?([d,h]=ci(c[0],c[1]),f=new gS(m,g)):f=new hS(m,g);let y=this.makeTensorInfo([h,d],o);g?this.texData.get(y.dataId).usage=Yr.PIXELS:this.texData.get(y.dataId).usage=Yr.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),d,h,s);let x=[[h,d]],T=!0,k=this.runWebGLProgram(f,[y],o,x,T),v=this.texData.get(k.dataId);t.texture=v.texture,t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(k.dataId),t.values=null,l&&(this.uploadWaitMs+=b.now()-p)}else{let m=this.acquireTexture(c,i,o,u);t.texture=m}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=ene(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*b.bytesPerElement(t)}},jh=BS;jh.nextDataId=0;function ene(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var tne="0.0.0";function wB(){W().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ki.isBrowser()&&Vu("webgl",()=>new jh,2);var q6t={forceHalfFloat:wB};var xx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Ks=class{constructor(e,t,n){this.variableNames=["A","B"];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var ul=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var $a=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=I.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=tr(s);let a="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${He(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=ar("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function ir(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var SB={kernelName:Kn,backendName:"webgl",kernelFunc:ir};function Bn(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=ir({inputs:{x:n},backend:t}),u=ir({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:u},s}var _B={kernelName:Nu,backendName:"webgl",kernelFunc:Bn};var OS="return (a < 0.) ? b * a : a;",zS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function rne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),i=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $a(zS,o.shape,a.shape):new Ks(OS,o.shape,a.shape),u=t.runWebGLProgram(i,[o,a],"float32");return t.disposeIntermediateTensorInfo(a),u}var AB={kernelName:na,backendName:"webgl",kernelFunc:rne};var GS="return (a < 0.) ? b * a : a;",WS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function nne(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $a(WS,n.shape,o.shape):new Ks(GS,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var NB={kernelName:Fo,backendName:"webgl",kernelFunc:nne};var Tx="if (isnan(x)) return x;",DB=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,PB=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ae({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,u=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let c=i.texData.get(a.dataId),m=t(c.values,u);return i.makeTensorInfo(a.shape,u,m)}let l=W().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,p;return l?p=new La(a.shape,e):p=new $n(a.shape,r),i.runWebGLProgram(p,[a],u)}}function ft({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:u,b:l}=a,p=i;if(n&&u.dtype==="complex64"){let d=p.texData.get(u.dataId),h=p.texData.get(l.dataId),[g,y]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(T=>{let[k,v]=T,P={dataId:k.dataId,dtype:k.dtype,shape:u.shape},A={dataId:v.dataId,dtype:v.dtype,shape:l.shape},F=new Ks(r,u.shape,l.shape);return p.runWebGLProgram(F,[P,A],Kt(k.dtype,v.dtype))}),x=Bn({inputs:{real:g,imag:y},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(y),x}let c=s||Kt(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||p.shouldExecuteOnCPU([u,l]))&&o!=null){let d=p.texData.get(u.dataId).values,h=p.texData.get(l.dataId).values,g=u.dtype==="string"?I.fromUint8ToStringArray(d):d,y=u.dtype==="string"?I.fromUint8ToStringArray(h):h,[x,T]=o(u.shape,l.shape,g,y,c),k=p.makeTensorInfo(T,c),v=p.texData.get(k.dataId);return v.values=x,k}let m=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,f;return m?f=new $a(e,u.shape,l.shape,t):f=new Ks(r,u.shape,l.shape),p.runWebGLProgram(f,[u,l],c)}}function ll(r,e=!1){if(r==="linear")return e?TB:hB;if(r==="relu")return e?IB:bB;if(r==="elu")return e?kB:gB;if(r==="relu6")return e?CB:yB;if(r==="prelu")return e?WS:GS;if(r==="leakyrelu")return e?zS:OS;if(r==="sigmoid")return e?vB:xB;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Hh=class{constructor(e,t,n,o=!1,s=!1,a=!1,i=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=tr(this.outputShape.length);let p=o?e[1]:e[2],c=Math.ceil(p/2),m=o?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");let x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let T="rc.x",k="rc.x";e[0]<t[0]?T=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(k=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${T};
          int batchB = ${k};
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${y}

        setOutput(result);
      }
    `}};var US={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},kx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var FB="return a * b;";function qh(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=I.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),u=t.texData.get(o.dataId),l=new kx(US.REAL,n.shape,o.shape),p=new kx(US.IMAG,n.shape,o.shape),c=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],m=t.runWebGLProgram(l,c,"float32"),f=t.runWebGLProgram(p,c,"float32"),d=Bn({inputs:{real:m,imag:f},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),u=t.texData.get(o.dataId),[l,p]=j$(n.shape,o.shape,i.values,u.values,s),c=t.makeTensorInfo(p,s),m=t.texData.get(c.dataId);return m.values=l,c}let a;return W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new $a(FB,n.shape,o.shape):a=new Ks(FB,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var MB={kernelName:No,backendName:"webgl",kernelFunc:qh};function EB(r,e,t){let n=[du(r.shape),...hu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[du(e),...hu(e)],a=new Kh(s,n),i=!0,u=[n],l=t.runWebGLProgram(a,[o],r.dtype,u,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function ie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=b.sizeFromShape(o.shape),u=b.inferFromImplicitShape(s,i),l=b.sizeFromShape(u);b.assert(i===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let p=a.texData.get(o.dataId);return p.isPacked&&!il(o.shape,u)&&!(p.texture!==null&&il(p.shape,u))?EB(o,u,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var RB={kernelName:ds,backendName:"webgl",kernelFunc:ie};var Ix=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(t!=null){let c=1/t;l=`sumValue += dot(values * ${b.isInt(c)?c.toPrecision(2):c}, ones);`}let p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var KS=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,c=n%4,m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(i="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(i="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${p};
        if (${c===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${c===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${c===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function one(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=I.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function Jn(r,e,t,n){let o=one(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:u,outSize:l}=o[a],p,c;t==="mean"?p=a===0?new Ix({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},i):new Ix({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l}):p=new KS({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},t),c=s,s=n.runWebGLProgram(p,[s],e),c.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(c)}return s}var VS=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=He(this.rank),s=sne(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function sne(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var jS=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=He(this.rank),s=MS("rc",this.rank),a=new Array(this.rank);for(let p=0;p<t.length;p++)a[t[p]]=s[p];let i=`vec2(${a.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function pl(r,e,t){let n=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jS(r.shape,e):new VS(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function LB(r,e,t,n){let o=e,s=r.shape.length,a=b.parseAxisParam(o,r.shape),i=a,u=I.getAxesPermutation(i,s),l=u!=null,p=r;l&&(p=pl(r,u,n),i=I.getInnerMostAxes(i.length,s)),I.assertAxesAreInnerMostDims("sum",i,s);let[c,m]=I.computeOutAndReduceShapes(p.shape,i),f=c;t&&(f=I.expandShapeToKeepDim(c,a));let d=b.sizeFromShape(m),g=b.sizeFromShape(r.shape)/d,y=ie({inputs:{x:p},attrs:{shape:[g,d]},backend:n}),x=Ui(r.dtype),T=Jn(y,x,"sum",n),k=ie({inputs:{x:T},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(T),l&&n.disposeIntermediateTensorInfo(p),k}function Sp(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return LB(o,s,a,t)}var $B={kernelName:zo,backendName:"webgl",kernelFunc:Sp};function Ht(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];let l;if(a.shouldExecuteOnCPU([o])){let c=a.texData.get(o.dataId).values,m=wp(c,o.shape,o.dtype,s,u);l=a.makeTensorInfo(u,o.dtype);let f=a.texData.get(l.dataId);f.values=m}else l=pl(o,s,a);return l}var BB={kernelName:Vo,backendName:"webgl",kernelFunc:Ht};var HS=1e3;function _p({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,c=t?r.shape[l-2]:r.shape[l-1],m=n?e.shape[p-1]:e.shape[p-2],f=t?r.shape[l-1]:r.shape[l-2],d=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),x=b.sizeFromShape(g),T=y===x||y===1||x===1;b.assert(l>=2&&p>=2&&T,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${g}).`);let v=(y>x?r.shape.slice(0,-2):e.shape.slice(0,-2)).concat([f,d]);b.assert(c===m,()=>`Error in matMul: inner shapes (${c}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let P=t?[y,c,f]:[y,f,c],A=n?[x,d,m]:[x,m,d],F=ie({inputs:{x:r},backend:o,attrs:{shape:P}}),E=ie({inputs:{x:e},backend:o,attrs:{shape:A}}),L=[F,E],U=Math.max(y,x),K=t?F.shape[1]:F.shape[2],B=s!=null,V=a!=null,j=u==="leakyrelu",H=u!=null?ll(u,!0):null,ee=B||V||j||H!=null,Y;if((f===1||d===1)&&K>HS&&ee===!1){let oe=F,te=E;t&&(oe=Ht({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),L.push(oe)),n&&(te=Ht({inputs:{x:E},backend:o,attrs:{perm:[0,2,1]}}),L.push(te));let le=d!==1,ae=d===1,ge=oe;le&&(ge=ie({inputs:{x:oe},backend:o,attrs:{shape:[U,K,1]}}),L.push(ge));let he=d===1?2:1,Te=te;ae&&(Te=ie({inputs:{x:te},backend:o,attrs:{shape:[U,1,K]}}),L.push(Te));let Se=qh({inputs:{a:ge,b:Te},backend:o});Y=Sp({inputs:{x:Se},backend:o,attrs:{axis:he,keepDims:!0}}),L.push(Se)}else{let oe=Kt(r.dtype,e.dtype),te=new Hh(P,A,[U,f,d],t,n,B,H,V,j),le=[F,E];if(s!=null&&le.push(s),V&&le.push(a),j){let ae=o.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));le.push(ae),L.push(ae)}Y=o.runWebGLProgram(te,le,oe)}let ne=ie({inputs:{x:Y},backend:o,attrs:{shape:v}});L.push(Y);for(let oe of L)o.disposeIntermediateTensorInfo(oe);return ne}function ane(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n;return _p({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:c,activation:p})}var OB={kernelName:Is,backendName:"webgl",kernelFunc:ane};var zB="return abs(x);";function ine(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=gx(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new La(n.shape,zB):o=new $n(n.shape,zB),t.runWebGLProgram(o,[n],n.dtype)}var GB={kernelName:as,backendName:"webgl",kernelFunc:ine};var une=Dr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,lne=Ae({opSnippet:une}),WB={kernelName:ki,backendName:"webgl",kernelFunc:lne};var pne=Dr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,cne=Ae({opSnippet:pne}),UB={kernelName:Ii,backendName:"webgl",kernelFunc:cne};var KB="return a + b;",mne=ft({opSnippet:KB,packedOpSnippet:KB,supportsComplex:!0,cpuKernelImpl:_$}),VB={kernelName:_n,backendName:"webgl",kernelFunc:mne};var qS=class{constructor(e,t){this.outputShape=[];this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var XS=class{constructor(e,t){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function Cx(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return ir({inputs:{x:n[0]},backend:t});if(n.length>W().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=Cx({inputs:n.slice(0,u),backend:t}),p=Cx({inputs:n.slice(u),backend:t});return Cx({inputs:[l,p],backend:t})}let o=n.map(u=>u.dtype).reduce((u,l)=>Kt(u,l)),s=n.map(u=>u.shape),i=W().getBool("WEBGL_PACK")?new XS(n[0].shape,s):new qS(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var jB={kernelName:no,backendName:"webgl",kernelFunc:Cx};function fne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,i),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,i)),I.assertAxesAreInnerMostDims("all",l,i);let[m,f]=I.computeOutAndReduceShapes(c.shape,l),d=b.sizeFromShape(f),h=ie({inputs:{x:c},backend:t,attrs:{shape:[-1,d]}}),g=Jn(h,h.dtype,"all",t),y;if(a){let x=I.expandShapeToKeepDim(m,u);y=ie({inputs:{x:g},backend:t,attrs:{shape:x}})}else y=ie({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(c),y}var HB={kernelName:Ci,backendName:"webgl",kernelFunc:fne};function dne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,i),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,i)),I.assertAxesAreInnerMostDims("any",l,i);let[m,f]=I.computeOutAndReduceShapes(c.shape,l),d=b.sizeFromShape(f),h=ie({inputs:{x:c},backend:t,attrs:{shape:[-1,d]}}),g=Jn(h,h.dtype,"any",t),y;if(a){let x=I.expandShapeToKeepDim(m,u);y=ie({inputs:{x:g},backend:t,attrs:{shape:x}})}else y=ie({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(c),y}var qB={kernelName:vi,backendName:"webgl",kernelFunc:dne};var YS=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var QS=class{constructor(e,t,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;b.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,u=i.length,l=He(u),p=ar("coords",u),c,m;if(a===1){m=u+1;let F=He(m);c=`
        ${F} sourceLocR = ${F}(${p.join()}, 0);
        ++${p[u-1]};
        ${F} sourceLocG = ${F}(${p.join()}, 0);
        ++${p[u-2]};
        ${F} sourceLocA = ${F}(${p.join()}, 0);
        --${p[u-1]};
        ${F} sourceLocB = ${F}(${p.join()}, 0);
        --${p[u-2]};`}else m=u,c=`
        ${l} sourceLocR = coords;
        ++${p[u-1]};
        ${l} sourceLocG = coords;
        ++${p[u-2]};
        ${l} sourceLocA = coords;
        --${p[u-1]};
        ${l} sourceLocB = coords;
        --${p[u-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],h=f.map(F=>"int "+F),g=ar("sourceLocR",m-1).concat("inIdx.r"),y=ar("sourceLocG",m-1).concat("inIdx.g"),x=ar("sourceLocB",m-1).concat("inIdx.b"),T=ar("sourceLocA",m-1).concat("inIdx.a"),k=n==="max"?"greaterThan":"lessThan",v=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${T.join()})));`,P=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,A=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${A}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${p[u-2]} < ${i[u-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${P};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${P};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function XB(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=I.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},u=new YS(i,t,n==null),l=[e];n!=null&&l.push(n);let p=r.runWebGLProgram(u,l,"int32");if(p.shape[1]===1)return p;let c=XB(r,e,t,p);return r.disposeIntermediateTensorInfo(p),c}function YB(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=I.computeOptimalWindowSize(s),i=new QS(o,a,t,n==null),u=n==null?[e]:[e,n],l=r.runWebGLProgram(i,u,"int32");if(l.shape.length===e.shape.length){let p=YB(r,e,t,l);return r.disposeIntermediateTensorInfo(l),p}return l}function vx(r,e,t,n){let o=[t];if(I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!W().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],a=r.texData.get(e.dataId),i=a!==null&&a.isPacked,u=e;i&&(u=r.unpackTensor(e),s.push(u));let[l,p]=I.computeOutAndReduceShapes(u.shape,o),c=b.sizeFromShape(p),m=ie({inputs:{x:u},backend:r,attrs:{shape:[-1,c]}});s.push(m);let f=XB(r,m,n);s.push(f);let d=ie({inputs:{x:f},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),d}return YB(r,e,n)}function hne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Ht({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=vx(t,u,a[0],"max");return l.forEach(c=>t.disposeIntermediateTensorInfo(c)),p}var QB={kernelName:oo,backendName:"webgl",kernelFunc:hne};function gne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Ht({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=vx(t,u,a[0],"min");return l.forEach(c=>t.disposeIntermediateTensorInfo(c)),p}var ZB={kernelName:Va,backendName:"webgl",kernelFunc:gne};var bne=Dr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,yne=Ae({opSnippet:bne}),JB={kernelName:wi,backendName:"webgl",kernelFunc:yne};var xne=Dr+"return log(x + sqrt(x * x + 1.0));",Tne=Ae({opSnippet:xne}),eO={kernelName:Si,backendName:"webgl",kernelFunc:Tne};var kne=Dr+`
  return atan(x);
`,Ine=Ae({opSnippet:kne}),tO={kernelName:_i,backendName:"webgl",kernelFunc:Ine};var Cne=DB+`
  return atan(a, b);
`,vne=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+PB+`
  return result;
`,wne=ft({opSnippet:Cne,packedOpSnippet:vne}),rO={kernelName:Ni,backendName:"webgl",kernelFunc:wne};var Sne=Dr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,_ne=Ae({opSnippet:Sne}),nO={kernelName:Ai,backendName:"webgl",kernelFunc:_ne};var mi=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,p=e.dilationWidth,c=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,x="0.0";if(h||(x="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:y:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let T="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let v=Math.floor(a/4)*4,P=a%4,A=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${A}
          }

          int xC = xCCorner + ${v};
          if (${P===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${P===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${P===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${A}
          }
        }
        setOutput(${k});
      }
    `}},Ap=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,l=e.strideWidth,p=e.dilationDepth,c=e.dilationHeight,m=e.dilationWidth,f=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;let T=t==="avg",k="0.0";if(T||(k="-1.0 / 1e-20"),n){let L=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${y}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${L} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",P=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(P="avgValue / count");let A=Math.floor(a/4)*4,F=a%4,E=`
      if (${T}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${y}, ${x});
      const float initializationValue = ${k};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${k});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${A}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${A};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${P});
        }
      }
    `}};function Ane(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ea(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return ir({inputs:{x:o},backend:t});let c=new mi(p,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var oO={kernelName:so,backendName:"webgl",kernelFunc:Ane};function Nne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n,p=[1,1,1],c=I.computePool3DInfo(o.shape,s,a,p,i,u,l),m=new Ap(c,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var sO={kernelName:Au,backendName:"webgl",kernelFunc:Nne};var ZS=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,p=u-1-e.padInfo.top,c=l-1-e.padInfo.left,m=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${c});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},JS=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,c=e.effectiveFilterDepth,m=e.effectiveFilterHeight,f=e.effectiveFilterWidth,d=c-1-e.padInfo.front,h=m-1-e.padInfo.top,g=f-1-e.padInfo.left,y=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Dne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,c=[1,1,1],m=I.computePool3DInfo(a.shape,i,u,c,l,p),f=new JS(m);return t.runWebGLProgram(f,[o],a.dtype)}var aO={kernelName:Yp,backendName:"webgl",kernelFunc:Dne};function Pne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;Ea([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=I.computePool2DInfo(a.shape,i,u,1,l),c=new ZS(p);return t.runWebGLProgram(c,[o],a.dtype)}var iO={kernelName:Xp,backendName:"webgl",kernelFunc:Pne};function Fne(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return _p({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var uO={kernelName:ao,backendName:"webgl",kernelFunc:Fne};var e_=class{constructor(e,t,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var t_=class{constructor(e,t,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Mne=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);let l=[n,o,s],p=null;a!=null&&(p=a.shape,l.push(a));let c=null;i!=null&&(c=i.shape,l.push(i));let m=W().getBool("WEBGL_PACK_NORMALIZATION")?new t_(n.shape,o.shape,s.shape,p,c,u):new e_(n.shape,o.shape,s.shape,p,c,u);return e.runWebGLProgram(m,l,l[0].dtype)},lO={kernelName:xo,backendName:"webgl",kernelFunc:Mne};var r_=class{constructor(e){this.variableNames=["source"];this.outputShape=e,this.rank=e.length;let t=He(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Ene(this.rank),o,s=e.map((a,i)=>`sourceLoc.${n_[i]} = start[${i}] + coords.${n_[i]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},n_=["x","y","z","w","u","v"];function Ene(r){if(r===1)return"sourceLoc";if(r<=6)return n_.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var o_=class{constructor(e){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=He(this.rank),n=ar("coords",this.rank),o=ar("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,c)=>`start[${c}]`).join()});`:e.map((p,c)=>`${o[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}};function Rne(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=It.computeFlatOffset(e,b.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,u+1),s}function Ba(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,u]=It.parseSliceParams(o,s,a);if(It.assertParamsValid(o,i,u),b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let c=t.texData.get(o.dataId),m=J$(c.values,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,m)}let{isPacked:l}=t.texData.get(o.dataId),p=It.isSliceContinous(o.shape,i,u);if(l||!p){let c=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new o_(u):new r_(u),m=[i];return t.runWebGLProgram(c,[o],o.dtype,m)}return t.uploadToGPU(o.dataId),Rne(o,i,u,t)}var pO={kernelName:gs,backendName:"webgl",kernelFunc:Ba};var Lne=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((x,T)=>x*T),u=I.getReshaped(o.shape,s,i),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,i),c=I.getSliceBeginCoords(a,s.length),m=I.getSliceSize(p,a,s.length),f=[],d=ie({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Ht({inputs:{x:d},backend:t,attrs:{perm:l}}),g=ie({inputs:{x:h},backend:t,attrs:{shape:p}}),y=Ba({inputs:{x:g},backend:t,attrs:{begin:c,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(x=>t.disposeIntermediateTensorInfo(x)),y},cO={kernelName:is,backendName:"webgl",kernelFunc:Lne};function $ne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),u=t.readSync(s.dataId),l=hx(i,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}var mO={kernelName:Qp,backendName:"webgl",kernelFunc:$ne};function Bne(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),a=t.readSync(o.dataId),i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var fO={kernelName:Zp,backendName:"webgl",kernelFunc:Bne};var One="return float(a != b);",s_=ft({opSnippet:One,cpuKernelImpl:q$,dtype:"bool"}),dO={kernelName:ia,backendName:"webgl",kernelFunc:s_};function gu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return ir({inputs:{x:o.complexTensorInfos.real},backend:t})}var hO={kernelName:$u,backendName:"webgl",kernelFunc:gu};var zne="return float(int(x));";function gO(r,e){let t=new $n(r.shape,zne),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function a_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return ir({inputs:{x:o},backend:t});let a=Tt(o.shape),i=a_({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Bn({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=gu({inputs:{input:o},backend:t}),i=a_({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=ir({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return gO(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=s_({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var bO={kernelName:Wn,backendName:"webgl",kernelFunc:a_};var yO="return ceil(x);",Gne=Ae({opSnippet:yO,packedOpSnippet:yO,cpuKernelImpl:N$}),xO={kernelName:io,backendName:"webgl",kernelFunc:Gne};var i_=class{constructor(e){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var u_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Wne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;W().getBool("WEBGL_PACK_CLIP")?i=new u_(o.shape):i=new i_(o.shape);let u=[[s],[a]];return t.runWebGLProgram(i,[o],o.dtype,u)}var TO={kernelName:Un,backendName:"webgl",kernelFunc:Wne};var l_=class{constructor(e){this.variableNames=["real","imag"];this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function kO(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function Une(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new l_(n.shape),a=[kO(n,o.complexTensorInfos.real),kO(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var IO={kernelName:Du,backendName:"webgl",kernelFunc:Une};var p_=class{constructor(e){this.outputShape=[];this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var c_=class{constructor(e,t){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=I.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=He(o),a=ar("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let u=new Array(e.length-1);u[0]=e[0][t];for(let h=1;h<u.length;h++)u[h]=u[h-1]+e[h][t];let l=i[t],p=i.slice(-2),c=i.join(),m=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${c}), vec2(${p.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];m+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${wx(i,l,g)}),
            vec2(${wx(p,l,g)}));
        }`}let f=u.length,d=u[u.length-1];m+=`
        return getChannel(
          getT${f}(${wx(i,l,d)}),
          vec2(${wx(p,l,d)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function wx(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function Np(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return ir({inputs:{x:o.complexTensorInfos.imag},backend:t})}var CO={kernelName:Eu,backendName:"webgl",kernelFunc:Np};function Dp(r,e,t){let n=r[0].dtype;if(n==="complex64"){let p=r.map(h=>gu({inputs:{input:h},backend:t})),c=r.map(h=>Np({inputs:{input:h},backend:t})),m=Dp(p,e,t),f=Dp(c,e,t),d=Bn({inputs:{real:m,imag:f},backend:t});return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),c.forEach(h=>t.disposeIntermediateTensorInfo(h)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let p=r.map(y=>{let x=b.sizeFromShape(y.shape.slice(e));return ie({inputs:{x:y},backend:t,attrs:{shape:[-1,x]}})}),c=p.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),m=I.computeOutShape(p.map(y=>y.shape),1),f=p[0].shape[0]===1,d=D$(c,m,n,f),h=I.computeOutShape(r.map(y=>y.shape),e),g=t.makeTensorInfo(h,n,d);return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}if(r.length>W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let p=Math.floor(r.length/2),c=Dp(r.slice(0,p),e,t),m=Dp(r.slice(p),e,t),f=Dp([c,m],e,t);return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),f}if(W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let p=new c_(r.map(c=>c.shape),e);return t.runWebGLProgram(p,r,n)}let{tensors2D:s,outShape:a}=Kne(r,e,t),i=new p_(s.map(p=>p.shape)),u=t.runWebGLProgram(i,s,n);s.forEach(p=>t.disposeIntermediateTensorInfo(p));let l=ie({inputs:{x:u},attrs:{shape:a},backend:t});return t.disposeIntermediateTensorInfo(u),l}function Kne(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>ie({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function m_(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=I.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(l=>b.sizeFromShape(l.shape)>0);if(i.length===1)return ir({inputs:{x:i[0]},backend:t});let u=i.map(l=>l.shape);return I.assertParamsConsistent(u,s),Dp(i,s,t)}var vO={kernelName:us,backendName:"webgl",kernelFunc:m_};var Xh=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,p=e.dilationHeight,c=e.dilationWidth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,x=g?2:3,T=g?3:1,k="",v="";n&&(o?k=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?k=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:k=`
          float activation(float x) {
            ${n}
          }
        `,v="result = activation(result);");let P=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${k}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${T}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${P}
        ${v}
        setOutput(result);
      }
    `}},f_=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,c=e.filterDepth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var d_=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length);let{dataFormat:n}=t,o=Zt(),s=n==="channelsLast",a=s?0:1,i=s?1:2,u=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let p=0;p<=1;p++)for(let c=0;c<=1;c++)l+=`
          blockIndex = rc.y + ${c};
          pos = rc.x + ${p};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+c}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+c}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function Sx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=r.shape,l=n.texData.get(r.dataId),p=t.inChannels,c=u[0]*u[1]*u[2],m=t.outChannels,f=t.dataFormat==="channelsLast",d=!1,h=!1,g,y=[];if(!((c===1||m===1)&&p>HS)&&l.isPacked&&f&&l.texture!=null&&u[2]%2!=0&&b.arraysEqual(l.shape.slice(-3),u.slice(-3))){let k=u[0]*u[1]*(u[2]+1),v={dataId:r.dataId,shape:[1,k,t.inChannels],dtype:r.dtype},P=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,b.assert(il(l.shape,v.shape),()=>`packed reshape ${l.shape} to ${v.shape} isn't free`);let A=ie({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(A);let F=_p({a:v,b:A,backend:n,transposeA:d,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),E=n.texData.get(F.dataId);b.assert(E.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=P,E.shape=t.outShape,g=ir({inputs:{x:F},backend:n}),g.shape=t.outShape,y.push(F)}else{let k=f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],v=ie({inputs:{x:r},backend:n,attrs:{shape:[1,k,t.inChannels]}}),P=ie({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),A=_p({a:v,b:P,transposeA:d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ie({inputs:{x:A},backend:n,attrs:{shape:t.outShape}}),y.push(v),y.push(P),y.push(A)}for(let k of y)n.disposeIntermediateTensorInfo(k);return g}function _x({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:u,filterHeight:l,inChannels:p,outWidth:c,outHeight:m,dataFormat:f}=t,d=f==="channelsLast",h=u*l*p,g=m*c,y=[h,g],x=!0,T=!1,k=[],v=ie({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),P=ie({inputs:{x:e},backend:n,attrs:{shape:[1,h,b.sizeFromShape(e.shape)/h]}});k.push(v),k.push(P);let A=new d_(y,t),F=[v.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],E=n.runWebGLProgram(A,[v],"float32",F),L=ie({inputs:{x:E},backend:n,attrs:{shape:[1,y[0],y[1]]}});k.push(E),k.push(L);let U=o!=null,K=s!=null,B=i==="leakyrelu",V=i?ll(i,!0):null,j=new Hh(L.shape,P.shape,[1,g,t.outChannels],x,T,U,V,K,B),H=[L,P];if(o&&H.push(o),K&&H.push(s),B){let oe=n.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));H.push(oe),k.push(oe)}let ee=n.runWebGLProgram(j,H,"float32"),Y=d?[1,m,c,t.outChannels]:[1,t.outChannels,m,c],ne=ie({inputs:{x:ee},backend:n,attrs:{shape:Y}});k.push(ee);for(let oe of k)n.disposeIntermediateTensorInfo(oe);return ne}function Vne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,c),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=Sx({x:o,filter:s,convInfo:m,backend:t});else if(W().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)f=_x({x:o,filter:s,convInfo:m,backend:t});else{let h=new Xh(m);f=t.runWebGLProgram(h,[o,s],"float32")}let d=ie({inputs:{x:f},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(f),d}var wO={kernelName:uo,backendName:"webgl",kernelFunc:Vne};var h_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},g_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=n-1-e.padInfo.left,l=a?1:2,p=a?2:3,c=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},b_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},y_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,l=n-1-e.padInfo.top,p=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function jne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n,c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,p,a,1,i,l,!1,c),f=new h_(m);return t.runWebGLProgram(f,[o,s],"float32")}var SO={kernelName:Jp,backendName:"webgl",kernelFunc:jne};function Hne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,c=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(a,s.shape,i,1,u,p,!1,c),f=new g_(m);return t.runWebGLProgram(f,[o,s],"float32")}var _O={kernelName:lo,backendName:"webgl",kernelFunc:Hne};function qne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n,l=I.computeConv3DInfo(o.shape,s.shape,a,u,i),p=new f_(l);return t.runWebGLProgram(p,[o,s],"float32")}var AO={kernelName:Pu,backendName:"webgl",kernelFunc:qne};function Xne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:u}=n,l=I.computeConv3DInfo(o.shape,u,a,1,i),p=new b_(l);return t.runWebGLProgram(p,[o,s],"float32")}var NO={kernelName:ec,backendName:"webgl",kernelFunc:Xne};function Yne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:u}=n,l=I.computeConv3DInfo(u,s.shape,i,1,a),p=new y_(l);return t.runWebGLProgram(p,[o,s],"float32")}var DO={kernelName:tc,backendName:"webgl",kernelFunc:Yne};var Qne=Tx+`
  return cos(x);
`,Zne=Ae({opSnippet:Qne}),PO={kernelName:po,backendName:"webgl",kernelFunc:Zne};var Jne=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,eoe=Ae({opSnippet:Jne}),FO={kernelName:co,backendName:"webgl",kernelFunc:eoe};var x_=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,u,l]=e,[p]=t,[c,m]=n;this.outputShape=[p,c,m,l];let f=o==="bilinear"?1:0,[d,h]=[`${i-1}.0`,`${u-1}.0`],[g,y,x]=c>1?[`${(i-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[T,k,v]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${T});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${k};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var toe=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,p=new x_(o.shape,s.shape,i,u,l);return t.runWebGLProgram(p,[o,s,a],"float32")},MO={kernelName:Ys,backendName:"webgl",kernelFunc:toe};var Ax=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];this.outputShape=e;let o=e.length,s=t?"0.0":`getX(${EO(o,"coords")})`,a=e[e.length-1],i="",u="";t?(i=n?`end != ${a-1}`:"end != 0",u=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${He(o)} coords = getOutputCoords();
        int end = ${RO(o,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${u};
          ${RO(o,"coords")} = idx;
          val += getX(${EO(o,"coords")});
        }
        setOutput(val);
      }
    `}};function EO(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function RO(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function roe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length,l=I.getAxesPermutation([s],u),p=o;l!=null&&(p=Ht({inputs:{x:o},backend:t,attrs:{perm:l}}));let c=I.getInnerMostAxes(1,u)[0];if(c!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${s}`);let m=p.shape[c],f=ir({inputs:{x:p},backend:t});for(let d=0;d<=Math.ceil(Math.log2(m))-1;d++){let h=new Ax(p.shape,!1,i),g=[[d]],y=f;f=t.runWebGLProgram(h,[f],f.dtype,g),t.disposeIntermediateTensorInfo(y)}if(a){let d=new Ax(p.shape,a,i),h=f;f=t.runWebGLProgram(d,[f],f.dtype),t.disposeIntermediateTensorInfo(h)}if(l!=null){let d=I.getUndoAxesPermutation(l),h=Ht({inputs:{x:f},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),h}return f}var LO={kernelName:Xs,backendName:"webgl",kernelFunc:roe};function noe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=hx(u,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=A$(u,l,a,i);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var $O={kernelName:rc,backendName:"webgl",kernelFunc:noe};var T_=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function ooe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],c=u*s,m=l*s,f=p/(s*s),d=a==="NHWC"?[i,c,m,f]:[i,f,c,m],h=new T_(d,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var BO={kernelName:Qs,backendName:"webgl",kernelFunc:ooe};var Yh=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=tr(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels,l="",p="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${p}
        setOutput(result);
      }
    `}};var Qh=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=tr(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,p=e.filterHeight,c=e.filterWidth,m=c,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<c;y++)f+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;f+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let y=0;y<c;y++)f+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(m+1)/2;y++){let x=y*2;if(f+=`
          xC = xCCorner + ${x*l};
          `,u===1){if(x<c&&(i%2==1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,l===1&&x>0?f+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<c)){let T=i%2==0?b.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${T};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,l>1&&(f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                      xTexelC${x} = getX(batch, xR, xCOffset, d1);
                      xTexelC${x}Ready = 1;
                    }
                    `),f+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                  `):T===1?f+=`
                    xC${x+1} = xTexelC${x};
                    `:f+=`
                    xCOffset = xC + ${T};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<c&&(i%2==1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<c&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<c&&(f+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<c&&(f+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<c&&(f+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let d="",h="";n&&(o?d=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?d=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:d=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function soe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let c=I.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!0),m;W().getBool("WEBGL_PACK_DEPTHWISECONV")&&c.strideWidth<=2&&c.outChannels/c.inChannels==1?m=new Qh(c):m=new Yh(c);let f=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];return t.runWebGLProgram(m,[o,s],"float32",f)}var OO={kernelName:mo,backendName:"webgl",kernelFunc:soe};var k_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},I_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function aoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n,c=I.computeConv2DInfo(o.shape,p,a,i,u,l,!0),m=new k_(c);return t.runWebGLProgram(m,[o,s],"float32")}var zO={kernelName:nc,backendName:"webgl",kernelFunc:aoe};function ioe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n,c=I.computeConv2DInfo(p,s.shape,a,i,u,l,!0),m=new I_(c);return t.runWebGLProgram(m,[o,s],"float32")}var GO={kernelName:oc,backendName:"webgl",kernelFunc:ioe};var C_=class{constructor(e){this.variableNames=["X"];this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function uoe(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),a=ie({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new C_(s),u=t.runWebGLProgram(i,[a],a.dtype),l=ie({inputs:{x:u},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var WO={kernelName:sc,backendName:"webgl",kernelFunc:uoe};var v_=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:l,dilationWidth:p}=e,{top:c,left:m}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${c}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function loe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n,l=I.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",u),p,c=new v_(l);p=t.runWebGLProgram(c,[o,s],"float32");let m=ie({inputs:{x:p},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(p),m}var UO={kernelName:Fu,backendName:"webgl",kernelFunc:loe};function poe(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(i,u),c=p.length,m=null,f=a.length,d=[];for(let h=0;h<c;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:x}=I.getEinsumPermutation(f,u[g]),T;I.isIdentityPermutation(y)?T=s[g]:(T=Ht({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),d.push(T));let k=T.shape.slice();for(let v=0;v<x.length;++v)k.splice(x[v],0,1);b.arraysEqual(T.shape,k)||(T=ie({inputs:{x:T},backend:t,attrs:{shape:k}}),d.push(T)),m===null?m=T:(m=qh({inputs:{a:T,b:m},backend:t}),d.push(m))}h<c-1&&(l[h]>=0&&(m=Sp({inputs:{x:m},backend:t,attrs:{axis:l[h]-(a.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeIntermediateTensorInfo(h);return m}var KO={kernelName:Mu,backendName:"webgl",kernelFunc:poe};var coe="return (x >= 0.0) ? x : (exp(x) - 1.0);",moe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,foe=Ae({opSnippet:coe,packedOpSnippet:moe}),VO={kernelName:ho,backendName:"webgl",kernelFunc:foe};var doe="return (b >= 1.0) ? a : a * (b + 1.0);",hoe=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,goe=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $a(hoe,n.shape,o.shape):new Ks(doe,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},jO={kernelName:ac,backendName:"webgl",kernelFunc:goe};var boe=`
  return vec4(equal(a, b));
`,yoe="return float(a == b);",xoe=ft({opSnippet:yoe,packedOpSnippet:boe,dtype:"bool",cpuKernelImpl:P$}),HO={kernelName:Zs,backendName:"webgl",kernelFunc:xoe};var Toe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,koe=Ae({opSnippet:Toe}),qO={kernelName:Di,backendName:"webgl",kernelFunc:koe};var XO="return exp(x);",w_=Ae({opSnippet:XO,packedOpSnippet:XO,cpuKernelImpl:F$,dtype:"float32"}),YO={kernelName:go,backendName:"webgl",kernelFunc:w_};function Nx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),ie({inputs:{x:s},backend:n,attrs:{shape:i}})}var QO={kernelName:ls,backendName:"webgl",kernelFunc:Nx};var ZO="return exp(x) - 1.0;",Ioe=Ae({opSnippet:ZO,packedOpSnippet:ZO,cpuKernelImpl:M$}),JO={kernelName:Js,backendName:"webgl",kernelFunc:Ioe};var Dx=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function Px(r,e,t){let n=t.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ie({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),u=i.shape,l=new Dx("real",u,e),p=new Dx("imag",u,e),c=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],m=t.runWebGLProgram(l,c,"float32"),f=t.runWebGLProgram(p,c,"float32"),d=Bn({inputs:{real:m,imag:f},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f);let h=ie({inputs:{x:d},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(d),h}function Coe(r){let{inputs:e,backend:t}=r,{input:n}=e;return Px(n,!1,t)}var ez={kernelName:ic,backendName:"webgl",kernelFunc:Coe};var S_=class{constructor(e,t){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function bu(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new S_(n,o),i=[[o]];return e.runWebGLProgram(a,[],s,i)}}var tz={kernelName:ja,backendName:"webgl",kernelFunc:bu};var __=class{constructor(e){this.variableNames=["Image"];this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var rz={kernelName:ea,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new __(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var nz="return floor(x);",voe=Ae({opSnippet:nz,packedOpSnippet:nz,cpuKernelImpl:E$}),oz={kernelName:bo,backendName:"webgl",kernelFunc:voe};var woe=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Soe=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,_oe=ft({opSnippet:woe,packedOpSnippet:Soe,dtype:"int32"}),sz={kernelName:yo,backendName:"webgl",kernelFunc:_oe};var A_=class{constructor(e){this.variableNames=["A"];let t=Zt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var N_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let t=Zt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var az={kernelName:vl,backendName:"webgl",kernelFunc:Aoe},Lm;function Aoe(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,[u,l]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[l,u],c=[l,u,s];(i||a)&&(Lm==null&&(Lm=document.createElement("canvas").getContext("2d")),Lm.canvas.width=u,Lm.canvas.height=l,Lm.drawImage(o,0,0,u,l),o=Lm.canvas);let m=t.makeTensorInfo(p,"int32");t.texData.get(m.dataId).usage=Yr.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(m.dataId),o);let f=W().getBool("WEBGL_PACK")?new N_(c):new A_(c),d=t.runWebGLProgram(f,[m],"int32");return t.disposeData(m.dataId),d}function Noe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=I.convertConv2DDataFormat(p),g=I.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!1,h),y,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=Sx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else if(W().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)y=_x({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else{let k=a!=null,v=i!=null,P=f==="leakyrelu",A=f?ll(f,!1):null,F=new Xh(g,k,A,v,P),E=[o,s];if(a&&E.push(a),i&&E.push(i),P){let L=t.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));E.push(L),x.push(L)}y=t.runWebGLProgram(F,E,"float32")}let T=ie({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return x.push(y),x.forEach(k=>t.disposeIntermediateTensorInfo(k)),T}var iz={kernelName:Cs,backendName:"webgl",kernelFunc:Noe};function Doe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:c,activation:m,leakyreluAlpha:f}=n,d=[],h=p;h==null&&(h=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=I.computeConv2DInfo(o.shape,s.shape,u,h,l,c,!0),y=W().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=m?ll(m,y):null,T=[o,s],k=a!=null,v=i!=null,P=m==="leakyrelu";if(k&&T.push(a),v&&T.push(i),P){let L=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));T.push(L),d.push(L)}let A;y?A=new Qh(g,k,x,v,P):A=new Yh(g,k,x,v,P);let F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=t.runWebGLProgram(A,T,"float32",F);return d.forEach(L=>t.disposeIntermediateTensorInfo(L)),E}var uz={kernelName:vs,backendName:"webgl",kernelFunc:Doe};var D_=class{constructor(e,t,n){this.sliceDim=e;this.strides=t;this.variableNames=["x","indices"];this.outputShape=n;let o=He(t.length),s=He(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Poe(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[u,l,p,c]=I.prepareAndValidate(n,o),m=ie({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),f=ie({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let y=t.readSync(o.dataId),x=t.bufferSync(n),T=R$(y,x,n.dtype,l,a,p,c,n.shape,i);return t.makeTensorInfo(u,n.dtype,T.values)}let d=new D_(a,c,[l,p]),h=t.runWebGLProgram(d,[f,m],f.dtype),g=ie({inputs:{x:h},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var lz={kernelName:ta,backendName:"webgl",kernelFunc:Poe};var P_=class{constructor(e,t){this.variableNames=["A","indices"];this.outputShape=t,this.rank=t.length;let n=He(this.rank),o=Foe(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}};function Foe(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("int(getIndices(resRC.x, resRC.z))"):n.push(`${t[o]}`);return n.join()}function F_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=b.parseAxisParam(a,o.shape)[0],l=t.readSync(s.dataId),p=o.shape[u];for(let k=0;k<l.length;++k){let v=l[k];b.assert(v<=p-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${p-1}]`)}let c=I.segment_util.collectGatherOpShapeInfo(o,s,u,i),m=b.sizeFromShape(s.shape),f=[],d=ie({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=ie({inputs:{x:s},backend:t,attrs:{shape:[c.batchSize,m/c.batchSize]}});f.push(d),f.push(h);let g=[c.batchSize,c.outerSize,m/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let k=t.bufferSync(h),v=t.bufferSync(d),P=L$(v,k,g);return f.forEach(A=>t.disposeIntermediateTensorInfo(A)),t.makeTensorInfo(c.outputShape,P.dtype,P.values)}let y=new P_(d.shape,g),x=t.runWebGLProgram(y,[d,h],d.dtype);f.push(x);let T=ie({inputs:{x},backend:t,attrs:{shape:c.outputShape}});return f.forEach(k=>t.disposeIntermediateTensorInfo(k)),T}var pz={kernelName:ps,backendName:"webgl",kernelFunc:F_};var Moe="return float(a > b);",Eoe=`
  return vec4(greaterThan(a, b));
`,Roe=ft({opSnippet:Moe,packedOpSnippet:Eoe,cpuKernelImpl:$$,dtype:"bool"}),cz={kernelName:ra,backendName:"webgl",kernelFunc:Roe};var Loe="return float(a >= b);",$oe=`
  return vec4(greaterThanEqual(a, b));
`,Boe=ft({opSnippet:Loe,packedOpSnippet:$oe,dtype:"bool",cpuKernelImpl:B$}),mz={kernelName:To,backendName:"webgl",kernelFunc:Boe};function Ooe(r){let{inputs:e,backend:t}=r,{input:n}=e;return Px(n,!0,t)}var fz={kernelName:uc,backendName:"webgl",kernelFunc:Ooe};var zoe="return float(!isnan(x) && !isinf(x));",Goe=Ae({opSnippet:zoe,dtype:"bool"}),dz={kernelName:Pi,backendName:"webgl",kernelFunc:Goe};var Woe="return float(isinf(x));",Uoe=Ae({opSnippet:Woe,dtype:"bool"}),hz={kernelName:Fi,backendName:"webgl",kernelFunc:Uoe};var Koe="return float(isnan(x));",Voe=Ae({opSnippet:Koe,dtype:"bool"}),gz={kernelName:Mi,backendName:"webgl",kernelFunc:Voe};var joe="return float(a < b);",Hoe=`
  return vec4(lessThan(a, b));
`,qoe=ft({opSnippet:joe,packedOpSnippet:Hoe,cpuKernelImpl:O$,dtype:"bool"}),bz={kernelName:oa,backendName:"webgl",kernelFunc:qoe};var Xoe="return float(a <= b);",Yoe=`
  return vec4(lessThanEqual(a, b));
`,Qoe=ft({opSnippet:Xoe,packedOpSnippet:Yoe,cpuKernelImpl:z$,dtype:"bool"}),yz={kernelName:sa,backendName:"webgl",kernelFunc:Qoe};function Zoe(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=G$(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var xz={kernelName:lc,backendName:"webgl",kernelFunc:Zoe};var Joe=`if (x < 0.0) return NAN;
  return log(x);`,ese=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,tse=Ae({opSnippet:Joe,packedOpSnippet:ese,cpuKernelImpl:W$}),Tz={kernelName:ko,backendName:"webgl",kernelFunc:tse};var rse="return log(1.0 + x);",nse=Ae({opSnippet:rse}),kz={kernelName:Ei,backendName:"webgl",kernelFunc:nse};var ose="return float(a >= 1.0 && b >= 1.0);",sse=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,ase=ft({opSnippet:ose,packedOpSnippet:sse,dtype:"bool"}),Iz={kernelName:aa,backendName:"webgl",kernelFunc:ase};var ise="return float(!(x >= 1.0));",use=Ae({opSnippet:ise}),Cz={kernelName:Ri,backendName:"webgl",kernelFunc:use};var lse="return float(a >= 1.0 || b >= 1.0);",pse=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,cse=ft({opSnippet:lse,packedOpSnippet:pse,dtype:"bool"}),vz={kernelName:Cl,backendName:"webgl",kernelFunc:cse};var M_=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var E_=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var mse=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:u}=n,l=W().getBool("WEBGL_PACK_NORMALIZATION")?new E_(o.shape,s,a,i,u):new M_(o.shape,s,a,i,u);return t.runWebGLProgram(l,[o],o.dtype)},wz={kernelName:Ru,backendName:"webgl",kernelFunc:mse};var R_=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var fse=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:p}=n,c=new R_(o.shape,i,u,l,p);return t.runWebGLProgram(c,[o,s,a],o.dtype)},Sz={kernelName:pc,backendName:"webgl",kernelFunc:fse};function _z(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Jn(i,r.dtype,"max",n),l=ie({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}function L_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,i),c=p!=null,m=t.shouldExecuteOnCPU([o]),f=o;if(c){if(m){let T=t.texData.get(f.dataId).values,k=new Array(i);for(let A=0;A<k.length;A++)k[A]=o.shape[p[A]];let v=wp(T,o.shape,o.dtype,p,k);f=t.makeTensorInfo(k,o.dtype);let P=t.texData.get(f.dataId);P.values=v}else f=pl(o,p,t);l=I.getInnerMostAxes(l.length,i)}I.assertAxesAreInnerMostDims("max",l,i);let[d,h]=I.computeOutAndReduceShapes(f.shape,l),g=d;a&&(g=I.expandShapeToKeepDim(d,u));let y;if(m){let T=t.texData.get(f.dataId).values,k=U$(T,b.sizeFromShape(h),g,o.dtype);y=t.makeTensorInfo(g,o.dtype);let v=t.texData.get(y.dataId);v.values=k}else y=_z(f,h,g,t);return c&&t.disposeIntermediateTensorInfo(f),y}var Az={kernelName:Io,backendName:"webgl",kernelFunc:L_};var dse=xx+`
  return max(a, b);
`,hse=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+ul+`
  return result;
`,gse=ft({opSnippet:dse,packedOpSnippet:hse,cpuKernelImpl:K$}),Nz={kernelName:Co,backendName:"webgl",kernelFunc:gse};function bse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ea(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return ir({inputs:{x:o},backend:t});let c=new mi(p,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var Dz={kernelName:vo,backendName:"webgl",kernelFunc:bse};function yse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=n,p=[1,1,1],c=I.computePool3DInfo(o.shape,s,a,p,i,l,u),m=new Ap(c,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var Pz={kernelName:Lu,backendName:"webgl",kernelFunc:yse};var $_=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,u=a-1-e.padInfo.left,l=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},B_=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=u-1-e.padInfo.front,m=l-1-e.padInfo.top,f=p-1-e.padInfo.left,d=u*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function xse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,c=[1,1,1],m=I.computePool3DInfo(a.shape,i,u,c,l,p),f=new Ap(m,"max",!0),d=t.runWebGLProgram(f,[a],a.dtype),h=new B_(m),g=t.runWebGLProgram(h,[o,d],a.dtype);return t.disposeIntermediateTensorInfo(d),g}var Fz={kernelName:mc,backendName:"webgl",kernelFunc:xse};function Tse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;Ea([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:c}=n,m=I.computePool2DInfo(i.shape,u,l,1,p,c),f=!0,d=new mi(m,"max",f),h=t.runWebGLProgram(d,[i],i.dtype),g=new $_(m),y=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),y}var Mz={kernelName:cc,backendName:"webgl",kernelFunc:Tse};function Ez(r,e,t,n){let o=new mi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new mi(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var Rz={kernelName:fc,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,u=t;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];b.assert(I.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let p=I.computePool2DInfo(n.shape,o,s,l,a),[c,m]=Ez(n,i,p,u);return[c,m]}};function Lz(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Jn(i,"float32","mean",n),l=ie({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}var $z={kernelName:wo,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,u=b.parseAxisParam(s,n.shape),l=u,p=I.getAxesPermutation(l,i),c=p!=null,m=a.shouldExecuteOnCPU([n]),f=[],d=n;if(c){if(m){let k=a.texData.get(d.dataId).values,v=new Array(i);for(let F=0;F<v.length;F++)v[F]=n.shape[p[F]];let P=wp(k,n.shape,n.dtype,p,v);d=a.makeTensorInfo(v,n.dtype);let A=a.texData.get(d.dataId);A.values=P}else d=pl(n,p,a);f.push(d),l=I.getInnerMostAxes(l.length,i)}I.assertAxesAreInnerMostDims("sum",l,i);let[h,g]=I.computeOutAndReduceShapes(d.shape,l),y=h;o&&(y=I.expandShapeToKeepDim(h,u));let x=Lz(d,g,y,a);for(let T of f)a.disposeIntermediateTensorInfo(T);return x}};function kse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,i),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",l,i);let[m,f]=I.computeOutAndReduceShapes(c.shape,l),d=b.sizeFromShape(f),h=ie({inputs:{x:c},backend:t,attrs:{shape:[-1,d]}}),g=Jn(h,h.dtype,"min",t),y;if(a){let x=I.expandShapeToKeepDim(m,u);y=ie({inputs:{x:g},backend:t,attrs:{shape:x}})}else y=ie({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(c),y}var Bz={kernelName:So,backendName:"webgl",kernelFunc:kse};var Ise=xx+`
  return min(a, b);
`,Cse=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+ul+`
  return result;
`,vse=ft({opSnippet:Ise,packedOpSnippet:Cse,cpuKernelImpl:V$}),Oz={kernelName:_o,backendName:"webgl",kernelFunc:vse};var O_=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=t.map((p,c)=>p[0]+e[c]+p[1]);let o=e.length,s=He(o),a=t.map(p=>p[0]).join(","),i=t.map((p,c)=>p[0]+e[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var z_=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);let o=e.length,s=He(o),a=t.map(d=>d[0]).join(","),i=t.map((d,h)=>d[0]+e[h]).join(","),u=ar("rc",o),l=ar("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,c=o===1?"source":`vec2(${l.slice(-2).join()})`,m=n==="reflect"?0:1,f="";if(o===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${u[o-1]} += 1;
        if(${p}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${u[o-1]} += 1;
        if(${p}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${d}
          result[2] = getChannel(getX(${l.join()}), ${c});
          ${u[o-1]} += 1;
          if(${p}) {
            ${d}
            result[3] = getChannel(getX(${l.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var wse=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new z_(n.shape,o,s):new O_(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},zz={kernelName:Ao,backendName:"webgl",kernelFunc:wse};var Sse=`if (b == 0.0) return NAN;
  return mod(a, b);`,_se=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+ul+`
  return result;
`,Ase=ft({opSnippet:Sse,packedOpSnippet:_se}),Gz={kernelName:Li,backendName:"webgl",kernelFunc:Ase};var G_=class{constructor(e,t,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var Nse=`
if (a == b) {
  return 1.0;
};
return a / b;`,Dse=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,W_=ft({opSnippet:Nse,packedOpSnippet:Dse,checkOutOfBounds:!0}),Wz={kernelName:fo,backendName:"webgl",kernelFunc:W_};var Uz="return a - b;",U_=ft({opSnippet:Uz,packedOpSnippet:Uz,supportsComplex:!0,cpuKernelImpl:iB}),Kz={kernelName:Uo,backendName:"webgl",kernelFunc:U_};function K_(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=L_({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=I.expandShapeToKeepDim(i.shape,a),l=ie({inputs:{x:i},backend:t,attrs:{shape:u}}),p=U_({inputs:{a:o,b:l},backend:t}),c=w_({inputs:{x:p},backend:t}),m=Sp({inputs:{x:c},backend:t,attrs:{axis:a,keepDims:!1}}),f=ie({inputs:{x:m},backend:t,attrs:{shape:u}}),d=W_({inputs:{a:c,b:f},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}var Vz={kernelName:Go,backendName:"webgl",kernelFunc:K_};function Pse(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,u=i?o:K_({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),l=u.shape[0],p=u.shape[1],c=new G_(l,p,s),m=[[a]],f=t.runWebGLProgram(c,[u],"int32",m);return i||t.disposeIntermediateTensorInfo(u),f}var jz={kernelName:dc,backendName:"webgl",kernelFunc:Pse};var Hz="return -x;";function Fse(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=H$(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new La(n.shape,Hz):o=new $n(n.shape,Hz),t.runWebGLProgram(o,[n],n.dtype)}var qz={kernelName:cs,backendName:"webgl",kernelFunc:Fse};var Mse=Tr.nonMaxSuppressionV3Impl;function Ese(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:c}=Mse(l,p,a,i,u);return t.makeTensorInfo([c.length],"int32",new Int32Array(c))}var Xz={kernelName:ua,backendName:"webgl",kernelFunc:Ese};var Rse=Tr.nonMaxSuppressionV4Impl;function Lse(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n,p=t.readSync(o.dataId),c=t.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=Rse(p,c,a,i,u,l);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var Yz={kernelName:$i,backendName:"webgl",kernelFunc:Lse};var $se=Tr.nonMaxSuppressionV5Impl;function Bse(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),c=t.readSync(s.dataId),m=a,f=i,d=u,h=l,{selectedIndices:g,selectedScores:y}=$se(p,c,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Qz={kernelName:la,backendName:"webgl",kernelFunc:Bse};var V_=class{constructor(e,t,n,o){this.variableNames=["indices"];this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var Ose=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,u=b.sizeFromShape(o.shape),l=new V_(u,s,a,i),p=ie({inputs:{x:o},backend:t,attrs:{shape:[u]}}),c=t.runWebGLProgram(l,[p],o.dtype);t.disposeIntermediateTensorInfo(p);let m=[...o.shape,s],f=ie({inputs:{x:c},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(c),f},Zz={kernelName:pa,backendName:"webgl",kernelFunc:Ose};function Zh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=gu({inputs:{input:n},backend:t}),s=Zh({inputs:{x:o},backend:t}),a=Np({inputs:{input:n},backend:t}),i=Zh({inputs:{x:a},backend:t}),u=Bn({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return bu({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var Jz={kernelName:Ts,backendName:"webgl",kernelFunc:Zh};function e3(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=gu({inputs:{input:n},backend:t}),s=e3({inputs:{x:o},backend:t}),a=Np({inputs:{input:n},backend:t}),i=Zh({inputs:{x:a},backend:t}),u=Bn({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return bu({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var t3={kernelName:ms,backendName:"webgl",kernelFunc:e3};function zse(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Nx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let c=Nx({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(c),c}),l=m_({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var r3={kernelName:fs,backendName:"webgl",kernelFunc:zse};var j_=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((l,p)=>l[0]+e[p]+l[1]);let o=e.length,s=He(o),a=t.map(l=>l[0]).join(","),i=t.map((l,p)=>l[0]+e[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var H_=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=He(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),u=ar("rc",o),l=ar("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,c=o===1?"source":`vec2(${l.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${p}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${p}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let h=0,g=o===1?2:4;h<g;h++)d+=`
        ${m[h]}
        if (${f}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${c});
        }
      `;d+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var q_=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(b.sizeFromShape(o.shape)===0){let l=s.map((p,c)=>p[0]+o.shape[c]+p[1]);return bu({backend:t,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new H_(o.shape,s,a):new j_(o.shape,s,a),u=[[a]];return t.runWebGLProgram(i,[o],o.dtype,u)},n3={kernelName:Do,backendName:"webgl",kernelFunc:q_};var Gse=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Wse=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+ul+`
  return result;
`,Use=ft({opSnippet:Gse,packedOpSnippet:Wse}),o3={kernelName:Po,backendName:"webgl",kernelFunc:Use};function Kse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=[],l=b.parseAxisParam(s,o.shape),p=l,c=I.getAxesPermutation(p,i),m=o;c!=null&&(m=Ht({inputs:{x:o},backend:t,attrs:{perm:c}}),p=I.getInnerMostAxes(p.length,i),u.push(m)),I.assertAxesAreInnerMostDims("prod",p,i);let f;if(t.shouldExecuteOnCPU([m])){let d=t.texData.get(m.dataId).values,{outVals:h,outShape:g,outDtype:y}=X$(m.shape,m.dtype,d,p);f=t.makeTensorInfo(g,y,h)}else{let[d,h]=I.computeOutAndReduceShapes(m.shape,p),g=b.sizeFromShape(h),y=ie({inputs:{x:m},backend:t,attrs:{shape:[-1,g]}}),x=Ui(o.dtype),T=Jn(y,x,"prod",t);f=ie({inputs:{x:T},backend:t,attrs:{shape:d}}),u.push(y),u.push(T)}if(a){u.push(f);let d=I.expandShapeToKeepDim(f.shape,l);f=ie({inputs:{x:f},backend:t,attrs:{shape:d}})}return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var s3={kernelName:ca,backendName:"webgl",kernelFunc:Kse};var X_=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=Y$(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},a3={kernelName:Ha,backendName:"webgl",kernelFunc:X_};var Vse="return 1.0 / x;",jse=Ae({opSnippet:Vse}),i3={kernelName:Bi,backendName:"webgl",kernelFunc:jse};var Hse=Dr+`
  return (x < 0.0) ? 0.0 : x;
`,qse=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Xse=Ae({opSnippet:Hse,packedOpSnippet:qse}),u3={kernelName:Mo,backendName:"webgl",kernelFunc:Xse};var Yse=Dr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Qse=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Zse=Ae({opSnippet:Yse,packedOpSnippet:Qse}),l3={kernelName:Ro,backendName:"webgl",kernelFunc:Zse};var Y_=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/c[0]},
          ${p[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var Q_=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/c[0]},
          ${p[1]/c[1]},
          ${p[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Jse(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Q_(o.shape,u,l,s,a):new Y_(o.shape,u,l,s,a);return t.runWebGLProgram(p,[o],"float32")}var p3={kernelName:Eo,backendName:"webgl",kernelFunc:Jse};var Z_=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],c=u[1]/l[1],m=1/p,f=1/c,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${c});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function eae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new Z_(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var c3={kernelName:gc,backendName:"webgl",kernelFunc:eae};var J_=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/c[0]},
          ${p[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var eA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/c[0]},
          ${p[1]/c[1]},
          ${p[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function tae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new eA(o.shape,u,l,s,a):new J_(o.shape,u,l,s,a);return t.runWebGLProgram(p,[o],o.dtype)}var m3={kernelName:qa,backendName:"webgl",kernelFunc:tae};var tA=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],c=u[1]/l[1],m=1/p,f=1/c,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${c});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function rae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new tA(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var f3={kernelName:hc,backendName:"webgl",kernelFunc:rae};var rA=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,u)=>o(u)).join(","),a=He(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var nA=class{constructor(e,t){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=ar("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=He(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${a}) {
            result.b = ${p(o.slice())};
            if(${s}) {
              result.a = ${c(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(d){return m(d)}function l(d){return d[n-1]="("+d[n-1]+" + 1)",m(d)}function p(d){return d[n-2]="("+d[n-2]+" + 1)",m(d)}function c(d){return d[n-1]="("+d[n-1]+" + 1)",d[n-2]="("+d[n-2]+" + 1)",m(d)}function m(d){let h=e.map((x,T)=>f(T,d)),g=h.join(","),y=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function f(d,h){return t.indexOf(d)!==-1&&e[d]!==1?`${e[d]} - ${h[d]} - 1`:`${h[d]}`}}};function nae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return ir({inputs:{x:o},backend:t});let u=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nA(o.shape,i):new rA(o.shape,i);return t.runWebGLProgram(u,[o],o.dtype)}var d3={kernelName:ma,backendName:"webgl",kernelFunc:nae};var oA=class{constructor(e,t){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var h3={kernelName:Ta,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=new oA(n.shape,s),[l,p]=I.getImageCenter(a,n.shape[1],n.shape[2]),c=[[l,p,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(u,[n],n.dtype,c)}};var oae=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,sae=Ae({opSnippet:oae}),g3={kernelName:fa,backendName:"webgl",kernelFunc:sae};var aae="return inversesqrt(x);",iae=Ae({opSnippet:aae,cpuKernelImpl:Q$}),b3={kernelName:Lo,backendName:"webgl",kernelFunc:iae};var Jh=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let u=He(s.length),l=He(a.length),p="";n===1?p="i":n===2&&(p="i, j");let c=`getIndices(${p})`,m="";o===1?m="i":o===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,d=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${d};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function uae(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:c}=I.calculateShapes(s,o,a),m=[c/l,l];if(c===0)return t.makeTensorInfo(a,o.dtype);let f=ie({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),d=ie({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new Jh(u,i,f.shape.length,d.shape.length,p,m),y=t.runWebGLProgram(g,[d,f,h],d.dtype),x=ie({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),x}var y3={kernelName:da,backendName:"webgl",kernelFunc:uae};var sA=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let p=0;p<t.length;p++)l.push(`${i[p]}`),p<e&&u.push(`${i[p]}`);o=u.join(),s=l.join()}let a=He(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function lae(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new sA(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],Kt(o.dtype,s.dtype))}var x3={kernelName:hs,backendName:"webgl",kernelFunc:lae};var pae=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,cae=Ae({opSnippet:pae}),T3={kernelName:Oi,backendName:"webgl",kernelFunc:cae};var k3="return 1.0 / (1.0 + exp(-1.0 * x));",mae=Ae({opSnippet:k3,packedOpSnippet:k3,cpuKernelImpl:Z$}),I3={kernelName:Bo,backendName:"webgl",kernelFunc:mae};var fae=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,dae=Ae({opSnippet:fae}),C3={kernelName:zi,backendName:"webgl",kernelFunc:dae};var hae=Tx+`
  return sin(x);
`,gae=Ae({opSnippet:hae}),v3={kernelName:$o,backendName:"webgl",kernelFunc:gae};var bae=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,yae=Ae({opSnippet:bae}),w3={kernelName:ha,backendName:"webgl",kernelFunc:yae};var xae=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Tae=Ae({opSnippet:xae}),S3={kernelName:Gi,backendName:"webgl",kernelFunc:Tae};var kae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((y,x)=>y*x),u=[[0,0]];u.push(...a);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let l=[],p=q_({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(p.shape,s,i,!1),m=I.getPermuted(c.length,s.length,!1),f=I.getReshapedPermuted(p.shape,s,i,!1),d=ie({inputs:{x:p},backend:t,attrs:{shape:c}}),h=Ht({inputs:{x:d},backend:t,attrs:{perm:m}}),g=ie({inputs:{x:h},backend:t,attrs:{shape:f}});return l.push(p),l.push(d),l.push(h),l.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},_3={kernelName:bs,backendName:"webgl",kernelFunc:kae};function Iae(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.readSync(n.dataId),u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=t.readSync(a.dataId)[0],[c,m,f,d,h]=eB(i,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(m,n.dtype,c),t.makeTensorInfo([m[0]],o.dtype,f),t.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var A3={kernelName:bc,backendName:"webgl",kernelFunc:Iae};function Cae(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.readSync(o.dataId)),i=t.readSync(n.dataId),u=Array.from(t.readSync(s.dataId)),[l,p,c]=tB(i,n.shape,n.dtype,a,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}var N3={kernelName:yc,backendName:"webgl",kernelFunc:Cae};function vae(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=bx(a,n.shape,n.dtype,i,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var D3={kernelName:xc,backendName:"webgl",kernelFunc:vae};function wae(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=bx(a,n.shape,n.dtype,i,u);return t.makeTensorInfo(p,n.dtype,l)}var P3={kernelName:Tc,backendName:"webgl",kernelFunc:wae};function Sae(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,strides:p,outputSize:c}=I.calculateShapes(s,o,i),m=!1,f=new Jh(l,u,o.shape.length,s.shape.length,p,[c,1],m),d=t.runWebGLProgram(f,[s,o,a],s.dtype),h=ie({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),h}var F3={kernelName:Bu,backendName:"webgl",kernelFunc:Sae};function _ae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],u=I.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),c=o.shape.slice();return u.map(m=>{let f=[...c];f[i]=m;let d=Ba({inputs:{x:o},backend:t,attrs:{begin:p,size:f}});return p[i]+=m,d})}var M3={kernelName:ys,backendName:"webgl",kernelFunc:_ae};var E3="return sqrt(x);",Aae=Ae({opSnippet:E3,packedOpSnippet:E3,cpuKernelImpl:rB}),R3={kernelName:Oo,backendName:"webgl",kernelFunc:Aae};var Nae="return x * x;",Dae=Ae({opSnippet:Nae}),L3={kernelName:Xa,backendName:"webgl",kernelFunc:Dae};var $3="return (a - b) * (a - b);",Pae=ft({opSnippet:$3,packedOpSnippet:$3}),B3={kernelName:Wo,backendName:"webgl",kernelFunc:Pae};function Fae({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=Dr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new $n(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var O3={kernelName:ks,backendName:"webgl",kernelFunc:Fae};var aA=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=He(n.length),a=He(n.length),i="";if(o===1)i="coords * strides + begin";else{let u=0;i=n.map((l,p)=>(u++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${u-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Mae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:x,end:T,strides:k}=It.sliceInfo(o.shape,s,a,i,u,l,p,c,m),v;if(h)v=ie({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=It.computeOutShape(x,T,k),F=Ba({inputs:{x:o},backend:t,attrs:{begin:x,size:A}});v=ie({inputs:{x:F},backend:t,attrs:{shape:d}}),t.disposeIntermediateTensorInfo(F)}else if(t.shouldExecuteOnCPU([o])){let F=t.readSync(o.dataId),E=Ce(o.shape,o.dtype,F),L=nB(f,E,k,x);v=t.makeTensorInfo(d,o.dtype,L.values)}else{let F=new aA(x,k,f);v=t.runWebGLProgram(F,[o],o.dtype)}let P=ie({inputs:{x:v},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(v),P}var z3={kernelName:ga,backendName:"webgl",kernelFunc:Mae};function Eae(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:c}=e,m=t.readSync(p.dataId),f=t.readSync(c.dataId),[d,h]=oB(m,f,o,s,a,i,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(c.shape,"int32",h)]}var G3={kernelName:Ou,backendName:"webgl",kernelFunc:Eae};function Rae(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.readSync(s.dataId),u=t.readSync(a.dataId)[0],[l,p,c]=sB(i,u,o),m=p.length;return[t.makeTensorInfo([m,2],"int32",l),t.makeTensorInfo([m],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(c))]}var W3={kernelName:kc,backendName:"webgl",kernelFunc:Rae};function Lae(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.readSync(s.dataId),i=aB(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var U3={kernelName:Ic,backendName:"webgl",kernelFunc:Lae};var $ae="return tan(x);",Bae=Ae({opSnippet:$ae}),K3={kernelName:ba,backendName:"webgl",kernelFunc:Bae};var Oae=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,zae=Ae({opSnippet:Oae}),V3={kernelName:Ko,backendName:"webgl",kernelFunc:zae};var iA=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=He(this.rank),s=Gae(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Gae(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function uA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(m=>b.decodeString(m)):u,p=Ce(o.shape,o.dtype,l),c=uB(p,s);return t.makeTensorInfo(c.shape,c.dtype,c.values)}let a=new iA(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var j3={kernelName:An,backendName:"webgl",kernelFunc:uA};var lA=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},pA=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Pp(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function H3(r){let e=1;for(;e<r;)e*=2;return e}function Wae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=W().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=W().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,p=l[l.length-1];if(t.shouldExecuteOnCPU([o])||p<i||s>u){let L=t.readSync(o.dataId),[U,K]=lB(L,l,o.dtype,s,a);return[t.makeTensorInfo(U.shape,U.dtype,U.values),t.makeTensorInfo(K.shape,K.dtype,K.values)]}if(s===0)return l[l.length-1]=0,[t.makeTensorInfo(l,o.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(p===1)return[o,bu({attrs:{shape:l,dtype:"int32",value:0},backend:t})];let c=t.texData.get(o.dataId),m=c!==null&&c.isPacked,f=m?t.unpackTensor(o):o,h=b.sizeFromShape(l)/p,g=ie({inputs:{x:f},attrs:{shape:[h,p]},backend:t});m&&Pp(t,f);let y=H3(s),x=H3(p),T=null,k=()=>T===null?[g,g]:[g,T],v=(L,U,K)=>{let B=k(),V=new lA(K),H=[[p],[T===null?1:0],[Number.NEGATIVE_INFINITY],[L],[U]],ee=T;T=t.runWebGLProgram(V,B,"int32",H),Pp(t,ee)};for(let L=1;L<y;L*=2){let U=L*2;for(let K=L;K>=1;K/=2)v(U,K,[h,x])}for(let L=x;L>y;L/=2){let U=k(),K=new pA([h,L/2]),V=[[p],[T===null?1:0],[y]],j=T;T=t.runWebGLProgram(K,U,"int32",V),Pp(t,j);let H=y/2,ee=H*2;for(let Y=H;Y>=1;Y/=2)v(ee,Y,T.shape)}let P=T;T=Ba({inputs:{x:T},backend:t,attrs:{begin:0,size:[h,s]}}),Pp(t,P);let A=F_({inputs:{x:g,indices:T},backend:t,attrs:{axis:1,batchDims:1}});Pp(t,g);let F=l.slice(0,-1);F.push(s),P=T,T=ie({inputs:{x:T},attrs:{shape:F},backend:t}),Pp(t,P);let E=A;return A=ie({inputs:{x:A},attrs:{shape:F},backend:t}),Pp(t,E),[A,T]}var q3={kernelName:ya,backendName:"webgl",kernelFunc:Wae};var cA=class{constructor(e,t,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Uae(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],y=new cA(c,m,a,i,u,g);return t.runWebGLProgram(y,[o,s],"float32")}var X3={kernelName:xa,backendName:"webgl",kernelFunc:Uae};function Kae(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Ea(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=pB(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var Y3={kernelName:Cc,backendName:"webgl",kernelFunc:Kae};function Vae(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let c=[],m=new Array(i).fill(0),f=a.shape.slice();f[s]=1;let d=new Array(u);for(let h=0;h<d.length;h++){m[s]=h;let g=Ba({inputs:{x:a},backend:t,attrs:{begin:m,size:f}}),y=ie({inputs:{x:g},backend:t,attrs:{shape:l}});d[h]=y,c.push(g)}return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var Q3={kernelName:xs,backendName:"webgl",kernelFunc:Vae};var mA=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let u="0.0",l="sumValue",p=Math.floor(n/4)*4,c=n%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${p};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function jae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,u=[],l=0,p=I.getAxesPermutation([l],i),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),u.push(c),l=I.getInnerMostAxes(1,i)[0]);let m=I.segment_util.computeOutShape(c.shape,l,a),f=b.sizeFromShape([c.shape[l]]),d=ie({inputs:{x:c},backend:t,attrs:{shape:[-1,f]}});u.push(d);let h=Ui(o.dtype),g=(k,v,P,A,F)=>{let E=k.shape[0],L=k.shape[1],U=I.segment_util.segOpComputeOptimalWindowSize(L,F),K={windowSize:U,inSize:L,batchSize:E,numSegments:F},B=new mA(K,v),V=t.compileAndRun(B,[k,P],A);if(u.push(V),V.shape[1]===F)return V;let j=X_({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),H=uA({inputs:{x:j},backend:t,attrs:{reps:[L/U]}});return u.push(j),u.push(H),g(V,v,H,A,F)},y=g(d,"unsortedSegmentSum",s,h,a),x=ie({inputs:{x:y},backend:t,attrs:{shape:m}}),T=x;if(p!=null){u.push(x);let k=I.getUndoAxesPermutation(p);T=Ht({inputs:{x:T},backend:t,attrs:{perm:k}})}return u.forEach(k=>t.disposeIntermediateTensorInfo(k)),T}var Z3={kernelName:zu,backendName:"webgl",kernelFunc:jae};var Hae=[wz,Sz,OB,GB,WB,UB,VB,jB,HB,qB,QB,ZB,JB,eO,rO,tO,nO,sO,oO,aO,iO,uO,lO,cO,mO,fO,bO,xO,TO,IO,_B,vO,SO,_O,wO,NO,DO,AO,PO,FO,MO,LO,$O,BO,zO,GO,OO,WO,UO,KO,VO,jO,HO,qO,YO,QO,JO,ez,tz,rz,oz,sz,az,iz,uz,lz,pz,cz,mz,SB,fz,CO,dz,hz,gz,AB,bz,yz,xz,kz,Tz,Iz,Cz,vz,Az,Pz,Dz,Fz,Mz,Rz,Nz,$z,Bz,Oz,zz,Gz,jz,MB,qz,Xz,Yz,Qz,dO,Zz,t3,r3,n3,o3,NB,s3,a3,hO,Wz,i3,l3,u3,RB,p3,c3,m3,f3,d3,h3,g3,b3,y3,x3,T3,I3,C3,v3,w3,pO,Vz,S3,_3,A3,N3,D3,P3,F3,M3,R3,L3,B3,O3,z3,G3,W3,U3,Kz,$B,K3,V3,j3,q3,X3,BB,Y3,Q3,Z3,Jz];for(let r of Hae)Wi(r);var fi=W();fi.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);fi.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);fi.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);fi.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);fi.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);fi.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);fi.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);fi.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);fi.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);fi.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function J3(r,e){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function Et(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";throw Error(`GPU for rank ${r} is not yet supported`)}function Fx(r,e){return r==="float32"?e?"vec4<f32>":"f32":r==="int32"||r==="bool"?e?"vec4<i32>":"i32":r}function ye(){return`
  let index = getGlobalIndex(globalId, localId);
`}function de(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
  fn main([[builtin(local_invocation_id)]] localId : vec3<u32>, [[builtin(global_invocation_id)]] globalId : vec3<u32>)
`}function eG(r,e,t,n=!1){let o=`
    let workGroupSizeX = ${t.workGroupSize[0]}u;
    let workGroupSizeY = ${t.workGroupSize[1]}u;
    let workGroupSizeZ = ${t.workGroupSize[2]}u;`;if(n===!0){let f=nG(e.shape),d=`
      [[block]] struct Matrix0 {
        numbers: array<${Fx(e.dtype,t.isVec4)}>;
      };
      [[block]] struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `;return[tG,d,o,rG,f,t.getUserCode()].join(`
`)}let s=[],a="[[block]] struct Uniforms { NAN : f32; ";t.variableNames.forEach((f,d)=>{a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${Et(r[d].shape.length)}; `}),a+=`outShape : ${Et(e.shape.length)} ; `;let i=e.shape.length-1;a+=`
       outShapeStrides: ${Et(i)}; `,t.size!=null&&(a+="size : i32; "),a+="dispatchSize : vec3<u32>; ",t.uniforms&&(a+=t.uniforms),a+="};",s.push(a),t.atomic?s.push(`
    [[block]] struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):s.push(`
    [[block]] struct Matrix0 {
        numbers: array<${Fx(e.dtype,t.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),t.variableNames.forEach((f,d)=>{s.push(`
    [[block]] struct Matrix${1+d} {
      numbers: array<${Fx(r[d].dtype,t.isVec4)}>;
    };
    [[group(0), binding(${1+d})]] var<storage, read> ${f} : Matrix${1+d};
    `)}),a!==""&&s.push(`
    [[group(0), binding(${1+t.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `),s.push(o);let[u,l]=Jae(e.shape,t.dispatchLayout),p=nG(e.shape),c=[tG,s.join(`
`),rG,p,u,qae(e.shape.length)];if(t.atomic||c.push(Xae(e.shape,e.dtype,t.isVec4)),l===e.shape.length){let f=r.map(d=>Yae(d,e.shape,t.isVec4,t.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(f)}return c.push(t.getUserCode()),c.join(`
`)}var tG=`
  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }

  fn isNanCustomVec4F32(val : vec4<f32>) -> vec4<f32> {
    var res = vec4<f32> (0.0);
    for (var i = 0u; i < 4u; i = i + 1u) {
      if (isNanCustom(val[i])) {
        res[i] = 1.0;
      } else {
        res[i] = 0.0;
      }
    }
    return res;
  }

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) &&
        all(coord < shape);
  }
  `,rG=`
  fn getFlatIndex1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }

  fn getFlatIndex2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return i32(dot(vec2<f32>(coords), vec2<f32>(f32(shape.y), 1.0)));
  }

  fn getFlatIndex3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return i32(dot(vec3<f32>(coords), vec3<f32>(f32(shape.y) * f32(shape.z), f32(shape.z), 1.0)));
  }

  fn getFlatIndex4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return i32(dot(vec4<f32>(coords), vec4<f32>(
        f32(shape.y) * f32(shape.z) * f32(shape.w), f32(shape.z) * f32(shape.w), f32(shape.w), 1.0)));
  }

  // Only used when the y/z dimension of workgroup size is 1.
  fn getGlobalIndex(globalId : vec3<u32>, localId : vec3<u32>) -> i32 {
    if (uniforms.dispatchSize.y == 1u && uniforms.dispatchSize.z == 1u) {
      return i32(globalId.x);
    }
    let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
      localId.y * workGroupSizeX + localId.x;
    let workGroupID = (globalId - localId)/vec3<u32>(
      workGroupSizeX, workGroupSizeY, workGroupSizeZ);
    return i32((workGroupID.z * uniforms.dispatchSize.x * uniforms.dispatchSize.y +
      workGroupID.y * uniforms.dispatchSize.x + workGroupID.x) *
      (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
      localInvocationIndex);
  }
`;function qae(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputFlatIndex(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputFlatIndex(coords : vec2<i32>) -> i32 {
          return i32(dot(vec2<f32>(coords), vec2<f32>(f32(uniforms.outShapeStrides), 1.0)));
        }
        `;break;case 3:e+=`
        fn getOutputFlatIndex(coords : vec3<i32>) -> i32 {
          return i32(dot(vec3<f32>(coords), vec3<f32>(f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), 1.0)));
        }
        `;break;case 4:e+=`
        fn getOutputFlatIndex(coords : vec4<i32>) -> i32 {
          return i32(dot(vec4<f32>(coords), vec4<f32>(
            f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), f32(uniforms.outShapeStrides.z), 1.0)));
        }
        `;break;default:b.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function Xae(r,e,t){let n=r.length,o=Fx(e,t),s;if(t?s=`fn setOutputFlat(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${o}(value);
    }`:s=`fn setOutputFlat(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${o}(value);
    }`,n>=2){let a=["d0","d1","d2","d3"].slice(0,n),i=Et(n);t?s+=`
      fn setOutput(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputFlatIndex(${i}(${a.join(", ")}));
        setOutputFlat(flatIndex / 4, value);
      }
      fn setOutputI32(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputFlatIndex(${i}(${a.join(", ")}));
        setOutputFlatI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutput(${a.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputFlatIndex(${i}(${a.join(", ")}));
        setOutputFlat(flatIndex, value);
      }
      fn setOutputI32(${a.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputFlatIndex(${i}(${a.join(", ")}));
        setOutputFlatI32(flatIndex, value);
      }
    `}return s}function Yae(r,e,t,n){let o=Qae(r,t);return r.shape.length<=e.length&&(o+=Zae(r,e,t,n)),o}function Qae(r,e){let t=r.name,n=r.shape.length,o=Et(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=["d0","d1","d2","d3"].slice(0,n),i=a.map(p=>`${p} : i32`).join(", ");if(n<1)return e?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${t}.numbers[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${t}.numbers[0]);
      }
    `;let u=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,l=`${n}D`;return n===0&&(l="1D"),e?`
      fn ${s}(${i}) -> vec4<f32> {
        return vec4<f32>(${t}.numbers[getFlatIndex${l}(${o}(${a.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${i}) -> f32 {
      return f32(${t}.numbers[getFlatIndex${l}(${o}(${a.join(",")}),
        ${u})]);
    }
   `}function Zae(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"AtOutCoords",i=r.shape.length,u=e.length,l=Et(u);if(b.arraysEqual(r.shape,e)&&n)return t?`
        fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[globalIndex]);
        }

        fn ${a}ByCoords(coords : ${l}) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[${u>1?"getOutputFlatIndex(coords)":"coords"} / 4]);
        }
        `:`
      fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
        return f32(${o}.numbers[globalIndex]);
      }

      fn ${a}ByCoords(coords : ${l}) -> f32 {
        return f32(${o}.numbers[${u>1?"getOutputFlatIndex(coords)":"coords"}]);
      }
      `;let p=I.getBroadcastDims(r.shape,e),c=u-i,m="";if(i===0)return t?`
      fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${a}ByCoords(coords : ${l}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${a}ByCoords(coords : ${l}) -> f32{
        return get${s}();
      }
    `;u<2&&p.length>=1?m="coords = 0;":m=p.map(g=>`coords[${g+c}] = 0;`).join(`
`);let f="";if(u<2&&i>0)f="coords";else if(u>1){let g=Et(i),y=r.shape.map((x,T)=>`coords[${T+c}]`).join(", ");f=`${g}(${y})`}else f="coords";let d=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return t?`
      fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        var coords = getOutputCoords(globalId, globalIndex);
        ${m}
        return ${o}.numbers[getFlatIndex${h}(${f}, ${d}) / 4];
      }

      fn ${a}ByCoords(coordsIn : ${l}) -> vec4<f32> {
        var coords = coordsIn;
        ${m}
        return ${o}.numbers[getFlatIndex${h}(${f}, ${d}) / 4];
      }
    `:`
    fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
      var coords = getOutputCoords(globalId, globalIndex);
      ${m}
      return f32(${o}.numbers[getFlatIndex${h}(${f}, ${d})]);
    }

    fn ${a}ByCoords(coordsIn : ${l}) -> f32 {
      var coords = coordsIn;
      ${m}
      return f32(${o}.numbers[getFlatIndex${h}(${f}, ${d})]);
    }
  `}function Jae(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length;if(t.length===s)return[`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${Et(s)}{
      return getCoordsFromFlatIndex(i32(globalIndex));
    }
    `,s];let a="",i=[t,n,o],u=0;for(let m=0;m<i.length;m++){let f=i[m];if(f.length!==0)if(u+=f.length,f.length===1)a+=`let d${f[0]} = i32(globalId[${m}]);`;else{let d=J3(f,"uniforms.outShape");a+=`var index${m} = i32(globalId[${m}]);`;for(let h=0;h<d.length;h++)a+=`let d${f[h]} = index${m} / ${d[h]};`,h===d.length-1?a+=`let d${f[h+1]} = index${m} - d${f[h]} * ${d[h]};`:a+=`index${m} = index${m} - d${f[h]} * ${d[h]};`}}let l=[];for(let m=0;m<u;m++)l.push(`d${m}`);let p=Et(u),c=`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${p} {
    ${a}
  `;return l.length===0?c+=`return ${p}(0); }`:c+=`return ${p}(${l.join(",")}); }`,[c,u]}function nG(r){let e=r.length;if(e<=1)return"fn getCoordsFromFlatIndex(index : i32) -> i32 { return index; }";let t=b.computeStrides(r),n=Et(e),o=[];for(let a=0;a<e;a++)o.push(`d${a}`);if(t.length===1)return`    fn getCoordsFromFlatIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s="var index2 = index;"+t.map((a,i)=>{let u=`let ${o[i]} = index2 / uniforms.outShapeStrides[${i}]`,l=i===t.length-1?`let ${o[i+1]} = index2 - ${o[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${o[i]} * uniforms.outShapeStrides[${i}]`;return`${u}; ${l};`}).join("");return`
    fn getCoordsFromFlatIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}var dA={};Qe(dA,{ArrayBufferToTypedArray:()=>fA,GPUBytesPerElement:()=>Mx,computeDispatch:()=>fe,computeWorkGroupSizeForConv2d:()=>eg,computeWorkGroupSizeForMatMul:()=>tg,computeWorkPerThreadForConv2d:()=>rg,flatDispatchLayout:()=>ve,isWebGPUSupported:()=>ng,tilesFitEvenlyIntoShape:()=>es});var Fp=65535;var Mp=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function es(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]==0)}function fe(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(Mp(r.x.map(u=>e[u]))/(t[0]*n[0])),r.y?Math.ceil(Mp(r.y.map(u=>e[u]))/(t[1]*n[1])):1,r.z?Math.ceil(Mp(r.z.map(u=>e[u]))/(t[2]*n[2])):1];if(o<=Fp&&s<=Fp&&a<=Fp)return[o,s,a];b.assert(o>Fp&&r.y===void 0&&r.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(o));return i>Fp?(i=Math.ceil(Math.cbrt(o)),b.assert(i<=Fp,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function eg(r,e){let t=Mp(r.x.map(o=>e[o])),n=Mp(r.y.map(o=>e[o]));return t<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function tg(r,e,t){return r===1?[32,1,1]:t===1?[1,32,1]:[8,8,1]}function rg(r,e){let t=Mp(r.x.map(o=>e[o])),n=Mp(r.y.map(o=>e[o]));return t<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function ve(r){return{x:r.map((e,t)=>t)}}function Mx(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function fA(r,e){if(e==="float32")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"||e==="string"){let t=new Int32Array(r),n=new ArrayBuffer(t.length),o=new Uint8Array(n);for(let s=0;s<t.length;s++)o[s]=t[s];return o}else throw new Error(`Unknown dtype ${e}`)}function ng(){return!!navigator.gpu}var Le;(function(T){T[T.MUL=0]="MUL",T[T.ADD=1]="ADD",T[T.SUB=2]="SUB",T[T.DIV=3]="DIV",T[T.EQUAL=4]="EQUAL",T[T.GREATER=5]="GREATER",T[T.GREATER_EQUAL=6]="GREATER_EQUAL",T[T.LESS=7]="LESS",T[T.LESS_EQUAL=8]="LESS_EQUAL",T[T.LOGICAL_AND=9]="LOGICAL_AND",T[T.NOT_EQUAL=10]="NOT_EQUAL",T[T.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",T[T.INT_DIV=12]="INT_DIV",T[T.POW=13]="POW",T[T.PRELU=14]="PRELU",T[T.MAX=15]="MAX",T[T.MIN=16]="MIN",T[T.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",T[T.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"})(Le||(Le={}));var eie="return a + b;",tie="return areal * breal - aimag * bimag;",rie="return areal * bimag + aimag * breal;",nie="return a / b;",oie="return a * b;",sie="return (a - b) * (a - b);",aie="return a - b;",iie="return f32(a == b);",uie="return vec4<f32>(a == b);",lie="return f32(a > b);",pie="return vec4<f32>(a > b);",cie="return f32(a >= b);",mie="return vec4<f32>(a >= b);",fie="return f32(a < b);",die="return vec4<f32>(a < b);",hie="return f32(a <= b);",gie="return vec4<f32>(a <= b);",bie="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",yie=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,xie=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,oG=`
  if (isNaN.r > 0.) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g > 0.) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b > 0.) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a > 0.) {
    resultTemp.a = uniforms.NAN;
  }
  `,Tie=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,kie=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Iie="return f32(a != b);",Cie="return vec4<f32>(a != b);",vie=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,wie=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = vec4<f32>(a < vec4<f32>(0.0)) * vec4<f32>(floor(b) < b);
  ${oG}
  return resultTemp;
  `,Sie="if (a < 0.0) { return b * a; }  return a;",_ie=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function sG(r,e){let t=e?oG:xie;return e?`
    var resultTemp = vec4<f32>(${r}(a, b));
    let isNaN = min(vec4<f32>(isNanCustomVec4F32(a)) + vec4<f32>(isNanCustomVec4F32(b)), vec4<f32>(1.0));
    `+t+`
    return resultTemp;
  `:t+`
    return ${r}(a, b);
  `}function di(r,e){switch(r){case 0:return oie;case 1:return eie;case 2:return aie;case 3:return nie;case 4:return e?uie:iie;case 5:return e?pie:lie;case 6:return e?mie:cie;case 7:return e?die:fie;case 8:return e?gie:hie;case 9:return e?yie:bie;case 10:return e?Cie:Iie;case 11:return sie;case 12:return e?kie:Tie;case 14:return e?_ie:Sie;case 15:return sG("max",e);case 16:return sG("min",e);case 13:return e?wie:vie;case 17:return tie;case 18:return rie;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var we;(function(A){A[A.ABS=0]="ABS",A[A.CEIL=1]="CEIL",A[A.COS=2]="COS",A[A.COSH=3]="COSH",A[A.ELU=4]="ELU",A[A.EXP=5]="EXP",A[A.EXPM1=6]="EXPM1",A[A.FLOOR=7]="FLOOR",A[A.LINEAR=8]="LINEAR",A[A.LOG=9]="LOG",A[A.LOGICAL_NOT=10]="LOGICAL_NOT",A[A.NEG=11]="NEG",A[A.PRELU=12]="PRELU",A[A.RELU=13]="RELU",A[A.RELU6=14]="RELU6",A[A.RSQRT=15]="RSQRT",A[A.SIN=16]="SIN",A[A.SINH=17]="SINH",A[A.SIGMOID=18]="SIGMOID",A[A.SQRT=19]="SQRT",A[A.SQUARE=20]="SQUARE",A[A.TANH=21]="TANH",A[A.TO_INT=22]="TO_INT"})(we||(we={}));var Aie="return abs(a);",Nie="return ceil(a);",Die="return cos(a);",Pie=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Fie="return exp(a) - 1.0;",Mie="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Eie=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Rie="return exp(a);",Lie="return floor(a);",$ie="return a;",Bie=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Oie="return f32(!(a >= 1.0));",zie="return -a;",Gie="return (a < 0.0) ? b * a : a;",Wie="return max(a, 0.0);",Uie="return clamp(a, 0.0, 6.0);",Kie="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Vie=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNan(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,jie="return 1.0/sqrt(a);",Hie="return 1.0 / (1.0 + exp(-1.0 * a));",qie="return sin(a);",Xie=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Yie="return sqrt(a);",Qie="return a * a;",Zie=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Jie="return f32(i32((a)));";function cl(r,e){switch(r){case 0:return Aie;case 2:return Die;case 3:return Pie;case 1:return Nie;case 4:return e?Eie:Mie;case 5:return Rie;case 6:return Fie;case 7:return Lie;case 8:return $ie;case 9:return Bie;case 10:return Oie;case 11:return zie;case 12:return Gie;case 13:return e?Vie:Wie;case 14:return e?Kie:Uie;case 15:return jie;case 18:return Hie;case 16:return qie;case 17:return Xie;case 19:return Yie;case 20:return Qie;case 21:return Zie;case 22:return Jie;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function Tn(r,e=!1){if(r===null)return null;if(r==="linear")return cl(we.LINEAR);if(r==="relu")return cl(we.RELU,e);if(r==="elu")return cl(we.ELU,e);if(r==="relu6")return cl(we.RELU6,e);if(r==="prelu")return di(Le.PRELU,e);if(r==="sigmoid")return cl(we.SIGMOID);throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`)}function hA(r,e){let t={RowPerThread:r[1],ColPerThread:r[0],TileAOuter:e[1]*r[1],TileBOuter:e[0]*r[0],TileInner:e[0]*r[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${t.TileInner/t.ColPerThread}>, ${t.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${t.TileBOuter/t.ColPerThread}>, ${t.TileInner}>;

  let RowPerThread = ${t.RowPerThread};
  let ColPerThread = ${t.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${t.TileAOuter};
  let TileBOuter = ${t.TileBOuter};
  let TileInner = ${t.TileInner};

  ${de()} {

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${t.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${e[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
}`}function eue(r){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;
  let tileSize = ${r[0]*4};
  ${de()} {
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var gA=class{constructor(e,t,n,o=null,s=null,a=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[16,16,1];this.isVec4=!0;this.vecSize=4;this.outputShape=t,this.workGroupSize=tg(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let i=o!=null,u=a!=null;i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=i,this.activation=s,this.hasPreluActivationWeights=u,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],o=this.workGroupSize[1]*this.workPerThread,s=this.workGroupSize[0]*this.vecSize,a=s,i=[o,a],u=[a,s];return[es(i,this.aShape.slice(1)),es(u,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",o="";if(this.activation){let i=Tn(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${i}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${i}
            }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${s}
          ${o}
          setOutput(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?hA([this.vecSize,this.workPerThread,1],this.workGroupSize):eue(this.workGroupSize)}

    `}};function og(r,e){let t=e[1]*r[1],n=e[0]*r[0],o=t>n?t:n;return`
    var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
    var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${o}>;
    ${de()} {
      let tileRow = i32(localId.y) * ${r[1]};
      let tileCol = i32(localId.x) * ${r[0]};

      let globalRow = i32(globalId.y) * ${r[1]};
      let globalCol = i32(globalId.x) * ${r[0]};

      let numTiles = (uniforms.dimInner - 1) / ${o} + 1;

      var acc : array<array<f32, ${r[0]}>, ${r[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${r[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${o} / ${e[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${o} / ${e[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${o} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${o} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${o}; k = k + 1) {
          for (var inner = 0; inner < ${r[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function tue(r){return`
    let TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${de()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var sg=class{constructor(e,t,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=o?e[1]:e[2];this.workGroupSize=tg(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),b.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let p=a!=null,c=u!=null;p&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=o,this.transposeB=s,this.addBias=p,this.activation=i,this.hasPreluActivationWeights=c;let m=this.outputShape[2],f=this.transposeB?[this.outputShape[0],m,l]:[this.outputShape[0],l,m];[this.fitA,this.fitB]=this.getShapeFit(f),this.shaderKey=`matMulPacked_${this.workPerThread}_${o}_${s}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,o=t>n?t:n;this.outputShape[1]===1&&(o*=4),b.assert(o%this.workGroupSize[0]==0&&o%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[t,o],a=[o,n];return[es(s,this.aShape.slice(1)),es(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",o="";if(this.activation){let i=Tn(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutput(batch, row, col, value);
      }
      ${this.outputShape[1]>1?og([this.workPerThread,this.workPerThread,1],this.workGroupSize):tue(this.workGroupSize)}
    `}};function rue(r){let e=r[1]/2,t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${t}>, ${n}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${de()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        }
      } else {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${e};
    if (tileRow >= ${e} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var bA=class{constructor(e,t,n,o=null,s=null,a=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[8,16,1];b.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let i=o!=null;i&&this.variableNames.push("bias");let u=a!=null;u&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",o="";if(this.activation){let i=Tn(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
            ${i}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${i}
        }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${s}
          ${o}
          setOutput(batch, row, col, value);
        }
      }
      ${rue(this.workGroupSize)}
    `}};function Ge(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s),i=b.sizeFromShape(a);return b.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var aG={kernelName:ds,backendName:"webgpu",kernelFunc:Ge};function $m({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,c=t?r.shape[l-2]:r.shape[l-1],m=n?e.shape[p-1]:e.shape[p-2],f=t?r.shape[l-1]:r.shape[l-2],d=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),x=b.sizeFromShape(g),T=y===x||y===1||x===1;b.assert(l>=2&&p>=2&&T,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${g}).`);let v=(y>x?r.shape.slice(0,-2):e.shape.slice(0,-2)).concat([f,d]);b.assert(c===m,()=>`Error in matMul: inner shapes (${c}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let P=t?[y,c,f]:[y,f,c],A=n?[x,d,m]:[x,m,d],F=Ge({inputs:{x:r},backend:o,attrs:{shape:P}}),E=Ge({inputs:{x:e},backend:o,attrs:{shape:A}}),L=[F,E],U=Math.max(y,x),K=c%4==0&&d%4==0&&!t&&!n&&d>=32,B;!t&&!n&&(f<=16&&(d<=512||m>=2*d)||d<=16&&(f<=512||c>=2*f))?B=new bA(P,A,[U,f,d],s,u,a):K?B=new gA(P,[U,f,d],W().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,u,a):B=new sg(P,[U,f,d],W().get("WEBGPU_MATMUL_WORK_PER_THREAD"),t,n,s,u,a);let V=[F,E];s&&V.push(s),a&&V.push(a);let j=[{type:"int32",data:[f]},{type:"int32",data:[d]},{type:"int32",data:[c]}],H=o.runWebGPUProgram(B,V,r.dtype,j),ee=Ge({inputs:{x:H},backend:o,attrs:{shape:v}});L.push(H);for(let Y of L)o.disposeData(Y.dataId);return ee}function nue(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n;return $m({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:c,activation:p})}var iG={kernelName:Is,backendName:"webgpu",kernelFunc:nue};var Ex=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${di(this.op,!1)}
      }

      ${de()} {
        ${ye()}
        if(index < uniforms.size) {
          let areal = getARealAtOutCoordsByGlobalId(globalId, index);
          let aimag = getAImagAtOutCoordsByGlobalId(globalId, index);
          let breal = getBRealAtOutCoordsByGlobalId(globalId, index);
          let bimag = getBImagAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var yA=class{constructor(e,t,n,o){this.variableNames=["A","B"];let s=256;this.workGroupSize=[s,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ve(this.outputShape),this.lastDimensionSize=o?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=o,this.op=e,this.size=b.sizeFromShape(this.outputShape),this.sizeFit=this.size%(this.workGroupSize[0]*this.workPerThread)==0,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}_${this.sizeFit}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAAtOutCoordsByCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBAtOutCoordsByCoords(coords);`,n=this.sizeFit?`let coords = getCoordsFromFlatIndex(flatIndex);

         ${t}
         setOutputFlat(flatIndex, binaryOperation(a, b));`:`if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            ${t}
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${di(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${de()} {
          ${ye()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;

            ${n}
          }
        }
        `}};var xA=class{constructor(e,t,n){this.variableNames=["A","B"];this.workPerThread=4;this.isVec4=!0;let o=128;this.workGroupSize=[o,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.fitShape=this.size%this.workGroupSize[0]==0,this.shaderKey=`binaryVec4_${e}_${this.fitShape}`,this.size=b.sizeFromShape(this.outputShape)/this.workPerThread}getUserCode(){let e,n=`fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
          ${di(this.op,this.isVec4)}
        }`;return this.fitShape?e=`
      ${n}
      ${de()} {
        ${ye()}
        let a = vec4<f32>(A.numbers[index]);
        let b = vec4<f32>(B.numbers[index]);
        setOutputFlat(index, binaryOperation(a, b));
      }
    `:e=`
      ${n}
      ${de()} {
        ${ye()}
        if (index < uniforms.size) {
          let a = vec4<f32>(A.numbers[index]);
          let b = vec4<f32>(B.numbers[index]);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
    `,e}};var ag=class{constructor(e,t,n){this.variableNames=["A","B"];let o=128;this.workGroupSize=[o,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ve(this.outputShape),this.size=b.sizeFromShape(this.outputShape),this.sizeFit=this.size%o==0,this.shapesFit=b.arraysEqual(t,n)&&this.sizeFit,this.workPerThread=this.sizeFit||this.shapesFit?1:2,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey=`binary_${e}_${this.sizeFit}_${this.shapesFit}`,this.op=e}getUserCode(){let e,n=`          fn binaryOperation(a : f32, b : f32) -> f32 {
      ${di(this.op,!1)}
    }`;return this.shapesFit?e=`
          ${n}
          ${de()} {
            ${ye()}

            let a = f32(A[index]);
            let b = f32(B[index]);
            setOutputFlat(index, binaryOperation(a, b));
          }
        `:this.sizeFit?e=`
      ${n}
      ${de()} {
        ${ye()}

        let coords = getCoordsFromFlatIndex(index);

        let a = getAAtOutCoordsByCoords(coords);
        let b = getBAtOutCoordsByCoords(coords);
        setOutputFlat(index, binaryOperation(a, b));
      }
      `:e=`
      ${n}
      ${de()} {
        ${ye()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1 ) {
          let flatIndex = index * ${this.workPerThread} + i;

          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            let a = getAAtOutCoordsByCoords(coords);
            let b = getBAtOutCoordsByCoords(coords);
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }
        }
      }
      `,e}};function TA(r,e,t){if(b.arraysEqual(e,t)&&b.sizeFromShape(e)%4==0)return new xA(r,e,t);let o=e.length===1&&t.length>1&&e[0]<1024,s=t.length===1&&e.length>1&&t[0]<1024;return o||s?new yA(r,e,t,s):new ag(r,e,t)}function wr(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var uG={kernelName:Kn,backendName:"webgpu",kernelFunc:wr};function Oa(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.tensorMap.get(s.dataId),i=wr({inputs:{x:n},backend:t}),u=wr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:u},s}var lG={kernelName:Nu,backendName:"webgpu",kernelFunc:Oa};var yu=class{constructor(e,t){this.variableNames=["A"];let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.size=b.sizeFromShape(this.outputShape),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${cl(this.op,!1)}
      }
      ${de()} {
        ${ye()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, unaryOperation(a));
        }
      }
      `}};function dt({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=t||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let l=a.tensorMap.get(s.dataId),p=e(l.values,i);return a.makeTensorInfo(s.shape,i,p)}let u=new yu(s.shape,r);return a.runWebGPUProgram(u,[s],i)}}function At({opSnippet:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(t&&a.dtype==="complex64"){let c=u.tensorMap.get(a.dataId),m=u.tensorMap.get(i.dataId),f,d;if(r!==Le.MUL)[f,d]=[[c.complexTensorInfos.real,m.complexTensorInfos.real],[c.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(g=>{let[y,x]=g,T={dataId:y.dataId,dtype:y.dtype,shape:a.shape},k={dataId:x.dataId,dtype:x.dtype,shape:i.shape},v=TA(r,a.shape,i.shape);return u.runWebGPUProgram(v,[T,k],Kt(y.dtype,x.dtype))});else{let g=new Ex(Le.COMPLEX_MULTIPLY_REAL,a.shape,i.shape),y=new Ex(Le.COMPLEX_MULTIPLY_IMAG,a.shape,i.shape),x=[{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:a.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:i.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:i.shape}];f=u.runWebGPUProgram(g,x,"float32"),d=u.runWebGPUProgram(y,x,"float32")}let h=Oa({inputs:{real:f,imag:d},backend:u});return u.disposeData(f.dataId),u.disposeData(d.dataId),h}let l=n||Kt(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||u.shouldExecuteOnCPU([a,i]))&&e!=null){let c=u.tensorMap.get(a.dataId).values,m=u.tensorMap.get(i.dataId).values,f=a.dtype==="string"?I.fromUint8ToStringArray(c):c,d=a.dtype==="string"?I.fromUint8ToStringArray(m):m,[h,g]=e(a.shape,i.shape,f,d,l);return u.makeTensorInfo(g,l,h)}let p=TA(r,a.shape,i.shape);return u.runWebGPUProgram(p,[a,i],l)}}var{addImpl:pG,ceilImpl:cG,concatImpl:mG,equalImpl:fG,expImpl:dG,expm1Impl:hG,floorImpl:gG,gatherNdImpl:bG,gatherV2Impl:yG,greaterEqualImpl:xG,greaterImpl:TG,lessEqualImpl:kG,lessImpl:IG,logImpl:CG,maxImpl:vG,maximumImpl:wG,minimumImpl:SG,multiplyImpl:_G,negImpl:AG,notEqualImpl:NG,prodImpl:DG,rangeImpl:PG,rsqrtImpl:FG,simpleAbsImpl:MG,sliceImpl:EG,stridedSliceImpl:RG,stringNGramsImpl:LG,subImpl:$G,tileImpl:BG,topKImpl:OG,transposeImpl:zG,uniqueImpl:rCr}=vm;var oue=dt({opType:we.ABS,cpuKernelImpl:MG}),GG={kernelName:as,backendName:"webgpu",kernelFunc:oue};var sue=At({opSnippet:Le.ADD,cpuKernelImpl:pG,supportsComplex:!0}),WG={kernelName:_n,backendName:"webgpu",kernelFunc:sue};var kA=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}AtOutCoordsByCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${de()} {
        ${ye()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputFlat(flatIndex, ${t});
          }
        }
      }
    `}};function aue(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return wr({inputs:{x:n[0]},backend:t});let o=n.map(i=>i.dtype).reduce((i,u)=>Kt(i,u)),s=n.map(i=>i.shape),a=new kA(s);return t.runWebGPUProgram(a,n,o)}var UG={kernelName:no,backendName:"webgpu",kernelFunc:aue};var ig=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="axis : i32;";let o=[t];I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.length),this.op=n==="min"?"<":">";let[s,a]=I.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s;let i=b.sizeFromShape(a);this.reductionFactor=2;let u=256,l=Math.min(Math.ceil(i/this.reductionFactor),u);this.workGroupSize=[l,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((p,c)=>c)},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=this.workGroupSize[0]>1,t=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,n=`
      xBestIndices[localId.x] = bestIndex;
      xBestValues[localId.x] = bestValue;

      for(var currentSize = WorkGroupSize; currentSize > 1; currentSize = DIV_CEIL(currentSize, ${this.reductionFactor})) {
        workgroupBarrier();

        for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
          let i = i32(localId.x) * ${this.reductionFactor} + w;
          if (i < currentSize) {
            let candidateIndex = xBestIndices[i];
            let candidate = xBestValues[i];
            if(candidate ${this.op} bestValue && !isNanCustom(candidate)) {
              bestValue = candidate;
              bestIndex = candidateIndex;
            }
          }
        }

        xBestIndices[localId.x] = bestIndex;
        xBestValues[localId.x] = bestValue;
      }

      if (localId.x == 0u) {
        setOutputFlatI32(flatOutputIndex, i32(bestIndex));
      }
    `,o=Et(this.outputShape.length),s=(u,l)=>this.outputShape.length===1?u:`${u}[${l}]`,a=u=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${u}]`;return`
      fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
      }

      let WorkGroupSize = ${this.workGroupSize[0]};

      ${e?t:""}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(globalId : vec3<u32>, globalIndex : i32) -> vec2<i32>{
        let outputCoords : ${o} = getOutputCoords(globalId, globalIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${a(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${s("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${de()} {
        ${ye()}
        let coordInfo = getInputCoordInfo(globalId, index);

        var bestIndex = 0;
        var bestValue = x.numbers[getInputIndex(coordInfo, bestIndex)];

        let Length = ${a("uniforms.axis")};
        let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);

        for (var w = 0; w < WorkPerThread; w = w + 1) {
          let i = i32(globalId.x) * WorkPerThread + w;
          if (i < Length) {
            let candidate = x.numbers[getInputIndex(coordInfo, i)];
            if (candidate ${this.op} bestValue && !isNanCustom(f32(candidate))) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
        }

        let flatOutputIndex = i32(globalId.y);
        ${e?n:"setOutputFlatI32(flatOutputIndex, bestIndex);"}
      }
    `}};var IA=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${de()} {
        ${ye()}
        let workGroupID = (globalId - localId)/vec3<u32>(${this.workGroupSize[0]}u, ${this.workGroupSize[1]}u, ${this.workGroupSize[2]}u);
        var x = i32(workGroupID.x) * TILE_DIM + i32(localId.x);
        var y = i32(workGroupID.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workGroupID.y) * TILE_DIM + i32(localId.x);
        y = i32(workGroupID.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputFlat((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var CA=class{constructor(e,t){this.variableNames=["A"];this.workPerThread=4;this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=Et(this.outputShape.length),t=iue(this.newDim);return`
      ${de()} {
        ${ye()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromFlatIndex(flatIndex);
            setOutputFlat(flatIndex, A.numbers[getFlatIndex${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function iue(r){let e=r.length;if(e>4)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC[${n}]`;return t.join()}function ts(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];if(t.shouldExecuteOnCPU([o])){let c=a.tensorMap.get(o.dataId).values,m=zG(c,o.shape,o.dtype,s,u);return t.makeTensorInfo(u,o.dtype,m)}if(o.shape.length===2&&b.arraysEqual(s,[1,0])){let p=new IA(o.shape,s);return a.runWebGPUProgram(p,[o],o.dtype)}let l=new CA(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}var KG={kernelName:Vo,backendName:"webgpu",kernelFunc:ts};function uue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=ts({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=new ig(u.shape,a[0],"max"),c=[{type:"int32",data:[a[0]]}],m=t.runWebGPUProgram(p,[u],"int32",c);return l.forEach(f=>t.disposeData(f.dataId)),m}var VG={kernelName:oo,backendName:"webgpu",kernelFunc:uue};function lue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=ts({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=new ig(u.shape,a[0],"min"),c=[{type:"int32",data:[a[0]]}],m=t.runWebGPUProgram(p,[u],"int32",c);return l.forEach(f=>t.disposeData(f.dataId)),m}var jG={kernelName:Va,backendName:"webgpu",kernelFunc:lue};var ug=class{constructor(e,t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;";this.workGroupSize=[128,1,1];this.outputShape=e.outShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${de()} {
        ${ye()}
        let coords = getOutputCoords(globalId, index);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutput(batch, coords[1], coords[2], coords[3], ${t});
        }
      }
    `}};var lg=class{constructor(e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>;";this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${de()} {
        ${ye()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let d = coords[3];

        if (all(coords < uniforms.outShape)) {
          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutput(batch, coords[1], coords[2], d, value);
        }
      }
    `}};function pue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=I.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return wr({inputs:{x:o},backend:t});let c,m=[{type:"int32",data:[p.strideHeight,p.strideWidth]}];return p.filterHeight===1&&p.filterWidth===1?c=new lg(p):(c=new ug(p,"avg"),m.push({type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]})),t.runWebGPUProgram(c,[o],o.dtype,m)}var HG={kernelName:so,backendName:"webgpu",kernelFunc:pue};function cue(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return $m({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var qG={kernelName:ao,backendName:"webgpu",kernelFunc:cue};var vA=class{constructor(e,t){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.outputShape=t,this.rank=t.length,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Et(e.length)}; `,this.shaderKey="slice",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=Et(this.rank),t=mue(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${wA[a]} = uniforms.start[${a}] + coords.${wA[a]};`),`
      ${de()} {
        ${ye()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getOutputCoords(globalId, index);
          ${n.join(`
`)}
          setOutputFlat(index, getSource(${t}));
        }
      }
    `}},wA=["x","y","z","w","u","v"];function mue(r){if(r===1)return"sourceLoc";if(r<=6)return wA.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function za(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,u]=It.parseSliceParams(o,s,a);if(It.assertParamsValid(o,i,u),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let c=t.tensorMap.get(o.dataId),m=EG(c.values,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,m)}if(b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);let l=new vA(i,u),p=[{type:"int32",data:i}];return t.runWebGPUProgram(l,[o],o.dtype,p)}var XG={kernelName:gs,backendName:"webgpu",kernelFunc:za};var fue=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((x,T)=>x*T),u=I.getReshaped(o.shape,s,i),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,i),c=I.getSliceBeginCoords(a,s.length),m=I.getSliceSize(p,a,s.length),f=[],d=Ge({inputs:{x:o},backend:t,attrs:{shape:u}}),h=ts({inputs:{x:d},backend:t,attrs:{perm:l}}),g=Ge({inputs:{x:h},backend:t,attrs:{shape:p}}),y=za({inputs:{x:g},backend:t,attrs:{begin:c,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(x=>t.disposeData(x.dataId)),y},YG={kernelName:is,backendName:"webgpu",kernelFunc:fue};var SA=At({opSnippet:Le.NOT_EQUAL,dtype:"bool",cpuKernelImpl:NG}),QG={kernelName:ia,backendName:"webgpu",kernelFunc:SA};function xu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return wr({inputs:{x:o.complexTensorInfos.real},backend:t})}var ZG={kernelName:$u,backendName:"webgpu",kernelFunc:xu};function JG(r,e){let t=new yu(r.shape,we.TO_INT),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function _A(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return wr({inputs:{x:o},backend:t});let a=Tt(o.shape),i=_A({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Oa({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeData(i.dataId),u}if(o.dtype==="complex64"){let a=xu({inputs:{input:o},backend:t}),i=_A({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeData(a.dataId),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=wr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return JG(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=SA({inputs:{a:o,b:a},backend:t});return t.disposeData(a.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var eW={kernelName:Wn,backendName:"webgpu",kernelFunc:_A};var due=dt({opType:we.CEIL,cpuKernelImpl:cG}),tW={kernelName:io,backendName:"webgpu",kernelFunc:due};var AA=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4",this.size=b.sizeFromShape(this.outputShape)/4}getUserCode(){return`
      ${de()} {
        ${ye()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputFlat(index, clampedValue);
        }
      }
    `}};var NA=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${de()} {
        ${ye()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          if (isNanCustom(value)) {
            setOutputFlat(index, value);
            return;
          }
          setOutputFlat(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function hue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i,u=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return b.sizeFromShape(o.shape)%4==0?i=new AA(o.shape):i=new NA(o.shape),t.runWebGPUProgram(i,[o],o.dtype,u)}var rW={kernelName:Un,backendName:"webgpu",kernelFunc:hue};var DA=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shapes=e,this.shaderKey=`concat${e}`,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=new Array(this.shapes.length-1),t=[];if(e.length>0){e[0]=this.shapes[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+this.shapes[a][1];t.push(`if (yC < ${e[0]}){ setOutput(coords.x, coords.y, getT0(yR, yC)); }`);for(let a=1;a<e.length;a++){let i=e[a-1];t.push(`elseif (yC < ${e[a]}){ setOutput(coords.x, coords.y, getT${a}(yR, yC - ${i})); }`)}let o=e.length,s=e[e.length-1];t.push(`else { setOutput(coords.x, coords.y, getT${o}(yR, yC - ${s})); }`)}else t.push("setOutput(coords.x, coords.y, getT0(yR, yC));");return`
      ${de()} {
        ${ye()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function Ep(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return wr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var nW={kernelName:Eu,backendName:"webgpu",kernelFunc:Ep};function Rx(r,e,t){let n=r[0].dtype;if(n==="complex64"){let p=r.map(h=>xu({inputs:{input:h},backend:t})),c=r.map(h=>Ep({inputs:{input:h},backend:t})),m=Rx(p,e,t),f=Rx(c,e,t),d=Oa({inputs:{real:m,imag:f},backend:t});return p.forEach(h=>t.disposeData(h.dataId)),c.forEach(h=>t.disposeData(h.dataId)),t.disposeData(m.dataId),t.disposeData(f.dataId),d}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let p=r.map(y=>{let x=b.sizeFromShape(y.shape.slice(e));return Ge({inputs:{x:y},backend:t,attrs:{shape:[-1,x]}})}),c=p.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),m=I.computeOutShape(p.map(y=>y.shape),1),f=p[0].shape[0]===1,d=mG(c,m,n,f),h=I.computeOutShape(r.map(y=>y.shape),e),g=t.makeTensorInfo(h,n,d);return p.forEach(y=>t.disposeData(y.dataId)),g}let{tensors2D:s,outShape:a}=gue(r,e,t),i=new DA(s.map(p=>p.shape)),u=t.runWebGPUProgram(i,s,s[0].dtype);s.forEach(p=>t.disposeData(p.dataId));let l=Ge({inputs:{x:u},backend:t,attrs:{shape:a}});return t.disposeData(u.dataId),l}function gue(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>Ge({inputs:{x:s},backend:t,attrs:{shape:[b.sizeFromShape(s.shape.slice(0,e)),b.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function PA(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=I.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(l=>b.sizeFromShape(l.shape)>0);if(i.length===1)return wr({inputs:{x:i[0]},backend:t});let u=i.map(l=>l.shape);return I.assertParamsConsistent(u,s),Rx(i,s,t)}var oW={kernelName:us,backendName:"webgpu",kernelFunc:PA};var FA=class{constructor(e,t){this.variableNames=["A"];this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`;this.workPerThread=4;this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${de()} {
      ${ye()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromFlatIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputFlat(flatIndex, value);
        }
      }
    }
  `}};function Lx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=r.shape,l=t.dataFormat==="channelsLast",p=!1,c=!1,m=l?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],f=Ge({inputs:{x:r},backend:n,attrs:{shape:[1,m,t.inChannels]}}),d=Ge({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),h=$m({a:f,b:d,transposeA:p,transposeB:c,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=Ge({inputs:{x:h},backend:n,attrs:{shape:t.outShape}});return n.disposeData(f.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),g}function sW({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:u,filterHeight:l,inChannels:p,strideWidth:c,strideHeight:m,padInfo:f,outWidth:d,outHeight:h,dilationWidth:g,dilationHeight:y,dataFormat:x}=t,T=x==="channelsLast",k=u*l*p,v=h*d,P=[v,k],A=!1,F=!1,E=[],L=Ge({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),U=Ge({inputs:{x:e},backend:n,attrs:{shape:[1,k,-1]}});E.push(L),E.push(U);let K=new FA(P,T),B=[{type:"int32",data:[f.left,f.top]},{type:"int32",data:[c,m]},{type:"int32",data:[g,y]},{type:"int32",data:[d]},{type:"int32",data:[p*u]},{type:"int32",data:[p]}],V=n.runWebGPUProgram(K,[L],L.dtype,B),j=Ge({inputs:{x:V},backend:n,attrs:{shape:[1,P[0],P[1]]}});E.push(V),E.push(j);let H=[1,P[0],P[1]],ee=new sg(H,[1,v,t.outChannels],W().get("WEBGPU_MATMUL_WORK_PER_THREAD"),A,F),Y=H[1],ne=H[2],oe=t.outChannels,te=[{type:"int32",data:[Y]},{type:"int32",data:[oe]},{type:"int32",data:[ne]}],le=n.runWebGPUProgram(ee,[j,U],j.dtype,te),ae=T?[1,h,d,t.outChannels]:[1,t.outChannels,h,d],ge=Ge({inputs:{x:le},backend:n,attrs:{shape:ae}});E.push(le);for(let he of E)n.disposeData(he.dataId);return ge}var pg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`;this.isVec4=!0;this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let a=[4,4,1];this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,a),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.hasLeakyreluAlpha=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(a),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],o=n,s=[t,o],a=[o,n],i=this.outputShape[1]*this.outputShape[2],u=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[es(s,[i,l]),es(a,[l,u])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getFlatIndex4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } elseif (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } elseif (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=hA([4,4,1],this.workGroupSize),s=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getFlatIndex4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } elseif (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${s}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${s}
         }
         return vec4<f32>(0.0);
        `,i=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,u="",l="";if(this.activation){let m=Tn(this.activation,this.isVec4);if(this.hasPreluActivationWeights)u=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${m}
        }`;else{if(this.hasLeakyreluAlpha)throw u=`fn activation(a: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaAtOutCoords();
          ${m}
        }`,new Error("Leakyrelu is not supported.");u=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${m}
        }`}l="value = activation(value, outCoord);"}let p=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
        ${u}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${i}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${p}
            ${l}
            setOutput(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}};var cg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=eg(this.dispatchLayout,this.outputShape),this.elementsPerThread=rg(this.dispatchLayout,this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;b.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let o=[e,n],s=[n,t],a=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],u=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[es(o,[a,u]),es(s,[u,i])]}getUserCode(){let e=og(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,s="",a="";if(this.activation){let l=Tn(this.activation,!1);this.hasPreluActivationWeights?s=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${l}
                }`:s=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,a="value = activation(value, outCoord);"}let i=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
    ${s}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${o}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${i}
      ${a}
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}};var mg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;";this.workGroupSize=[128,1,1];this.outputShape=e.outShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=Tn(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${s}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${s}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutput(batch, row, col, chan, value);
        }
      }

      ${de()} {
        ${ye()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function bue(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=t,c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,c);if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))return Lx({x:o,filter:s,convInfo:m,backend:n});if(W().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&o.shape[0]===1)return sW({x:o,filter:s,convInfo:m,backend:n});let f,d=[m.padInfo.top,m.padInfo.left],h=[{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]}],g=W().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?f=new mg(m):(m.inChannels%4==0||m.inChannels===3&&m.padInfo.type==="VALID")&&m.outChannels%4==0&&m.outChannels>=64?f=new pg(m):f=new cg(m),!g){let y=m.outShape[1]*m.outShape[2],x=m.outShape[3],T=m.filterHeight*m.filterWidth*m.inShape[3];h.push({type:"int32",data:[y]},{type:"int32",data:[x]},{type:"int32",data:[T]})}return n.runWebGPUProgram(f,[o,s],o.dtype,h)}var aW={kernelName:uo,backendName:"webgpu",kernelFunc:bue};var MA=class{constructor(e){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.inShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=eg(this.dispatchLayout,this.outputShape),this.elementsPerThread=rg(this.dispatchLayout,this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getFlatIndex4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }

    ${og(this.elementsPerThread,this.workGroupSize)}
  `}};var EA=class{constructor(e){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;";this.workGroupSize=[64,1,1];this.outputShape=e.inShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${de()} {
      ${ye()}
      let coords = getOutputCoords(globalId, index);
      if (coordsInBounds4D(coords, uniforms.outShape)) {
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutput(coords[0], coords[1], coords[2], coords[3], dotProd);
      }
    }
  `}};function yue(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,c=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(a,s.shape,i,1,u,p,!1,c),f=[{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[m.filterHeight-1-m.padInfo.top,m.filterWidth-1-m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.batchSize,m.outHeight,m.outWidth,m.outChannels]}],d;if(W().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))d=new EA(m);else{d=new MA(m);let h=m.inShape[1]*m.inShape[2],g=m.inShape[3],y=m.filterHeight*m.filterWidth*m.outChannels;f.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(d,[o,s],"float32",f)}var iW={kernelName:lo,backendName:"webgpu",kernelFunc:yue};var xue=dt({opType:we.COS}),uW={kernelName:po,backendName:"webgpu",kernelFunc:xue};var Tue=dt({opType:we.COSH}),lW={kernelName:co,backendName:"webgpu",kernelFunc:Tue};var RA=class{constructor(e,t,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32;";this.workGroupSize=[64,1,1];let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,u]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      fn writeResult(coords : vec4<i32>, value : f32) {
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutput(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
      ${de()} {
        ${ye()}
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let coords = getOutputCoords(globalId, index);
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${t} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          writeResult(coords, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          writeResult(coords,newValue);
        }
      }
    `}};var kue=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,p=new RA(o.shape[3],s.shape,i,u),c=[{type:"float32",data:[l]}];return t.runWebGPUProgram(p,[o,s,a],"float32",c)},pW={kernelName:Ys,backendName:"webgpu",kernelFunc:kue};var LA=class{constructor(e,t){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.uniforms="blockSize : i32;";this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.size=b.sizeFromShape(this.outputShape),this.dataFormat=t}getUserCode(){return`
      ${de()} {
        ${ye()}
        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputFlat(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Iue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],c=u*s,m=l*s,f=p/(s*s),d=a==="NHWC"?[i,c,m,f]:[i,f,c,m],h=[{type:"int32",data:[s]}],g=new LA(d,a);return t.runWebGPUProgram(g,[o],o.dtype,h)}var cW={kernelName:Qs,backendName:"webgpu",kernelFunc:Iue};var fg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;";this.workGroupSize=[4,4,4];this.isVec4=!0;this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let s=Tn(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, globalIndex);
          ${s}
        }`:e=`
        fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
            ${s}
          }
        `,t="dotProd[i] = activation(dotProd[i], globalId, index);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${e}

      ${de()} {
        ${ye()}
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutput(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}};var dg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;";this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.activation}_${this.convInfo.outChannels/this.convInfo.inChannels}`}getUserCode(){let e=this.convInfo.outChannels/this.convInfo.inChannels,t="",n="";if(this.activation){let a=Tn(this.activation,!1);this.hasPreluActivation?t=`fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, index);
          ${a}
        }`:t=`
          fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
            ${a}
          }
        `,n="dotProd = activation(dotProd, globalId, index);"}let o=this.addBias?"dotProd = dotProd + getBiasAtOutCoordsByGlobalId(globalId, index);":"";return`
      ${t}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutput(batch, row, col, chan, value);
        }
      }

      ${de()} {
        ${ye()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / ${e};
        let q = d2 - d1 * ${e};

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + ${this.convInfo.filterHeight} * uniforms.dilation[0];
        let inputColEnd = inputColStart + ${this.convInfo.filterWidth} * uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] && inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${o}
        ${n}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Cue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]);let c=I.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!0),m;c.batchSize===1&&c.inHeight===c.outHeight&&c.inWidth===c.outWidth&&c.strideHeight===1&&c.strideWidth===1&&c.filterHeight===c.filterWidth&&c.inChannels===c.outChannels&&c.filterHeight===3&&c.inChannels%4==0?m=new fg(c):m=new dg(c);let f=[{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]}];return t.runWebGPUProgram(m,[o,s],o.dtype,f)}var mW={kernelName:mo,backendName:"webgpu",kernelFunc:Cue};var $A=At({opSnippet:Le.MUL,cpuKernelImpl:_G,supportsComplex:!0}),fW={kernelName:No,backendName:"webgpu",kernelFunc:$A};var BA=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="reduceSize : i32;";this.inputShape=[e.batchSize,e.inSize];let[o]=I.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=o.length===0?[1]:o,this.reductionFactor=2;let s=256,a=Math.min(Math.ceil(e.inSize/this.reductionFactor),s);this.workGroupSize=[a,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((i,u)=>u)},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.reduceType=t,this.shaderKey=`reduce_${t}_${n}`}getUserCode(){let e=this.workGroupSize[0]>1,t="",n="0.0";this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } elseif (candidate ${this.reduceType==="min"?"<":">"}
           bestValue)
           {  bestValue = candidate; }`,n="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(t=" bestValue = bestValue * candidate; ",n="1.0");let o=this.reduceType==="mean"?"setOutputFlat(flatOutputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputFlat(flatOutputIndex, bestValue);",s=`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `,a=`
       xBestValues[localId.x] = bestValue;
       ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`bestValue = ${n};`:" "}
       var currentSize = WorkGroupSize;
       for(; currentSize > 1;) {
         workgroupBarrier();
         for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
           let i = i32(localId.x) * ${this.reductionFactor} + w;
           if (i < currentSize) {
             let candidate = xBestValues[i];
             ${t}
           }
         }
         workgroupBarrier();
         xBestValues[localId.x] = bestValue;
         currentSize = DIV_CEIL(currentSize, ${this.reductionFactor});
         ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`if(currentSize > 1) { bestValue = ${n}; }`:""}
       }
       if (localId.x == 0u) {
         ${o}
       }
     `;return`
       fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
       }
       let WorkGroupSize = ${this.workGroupSize[0]};
       ${e?s:""}
       fn getOffset(globalId : vec3<u32>, index : i32) -> i32 {
         let outputCoords = getOutputCoords(globalId, index);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
         return offset;
       }
       ${de()} {
         ${ye()}
         let offset= getOffset(globalId, index);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);
         for (var w = 0; w < WorkPerThread; w = w + 1) {
           let i = i32(globalId.x) * WorkPerThread + w;
           if (i < Length) {
             let candidate = f32(x.numbers[offset + i]);
             ${t}
           }
         }
         let flatOutputIndex = i32(globalId.y);
         ${e?a:o}
       }
     `}};function hi(r,e,t,n,o){let s=r.shape.length,a=[],i=b.parseAxisParam(e,r.shape),u=i,l=I.getAxesPermutation(u,s),p=r;l!=null&&(p=ts({inputs:{x:r},attrs:{perm:l},backend:o}),u=I.getInnerMostAxes(u.length,s),a.push(p)),I.assertAxesAreInnerMostDims(n,u,s);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=c;t&&(f=I.expandShapeToKeepDim(c,i));let d;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([p])){let h=o.tensorMap.get(p.dataId).values;switch(n){case"max":let g=vG(h,b.sizeFromShape(m),f,r.dtype);d=o.makeTensorInfo(f,r.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:T}=DG(p.shape,p.dtype,h,u);d=o.makeTensorInfo(x,T,y);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=b.sizeFromShape(m),y=b.sizeFromShape(p.shape)/h,x={windowSize:h,inSize:h,batchSize:y,outSize:1},T=n==="mean"?"float32":Ui(r.dtype),k=[{type:"int32",data:[h]}],v=new BA(x,n,T),P=o.runWebGPUProgram(v,[p],T,k);a.push(P),d=Ge({inputs:{x:P},attrs:{shape:f},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),d}function hg(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return hi(o,s,a,"sum",t)}var dW={kernelName:zo,backendName:"webgpu",kernelFunc:hg};function vue(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(i,u),c=p.length,m=null,f=a.length,d=[];for(let h=0;h<c;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:x}=I.getEinsumPermutation(f,u[g]),T;I.isIdentityPermutation(y)?T=s[g]:(T=ts({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),d.push(T));let k=T.shape.slice();for(let v=0;v<x.length;++v)k.splice(x[v],0,1);b.arraysEqual(T.shape,k)||(T=Ge({inputs:{x:T},backend:t,attrs:{shape:k}}),d.push(T)),m===null?m=T:(m=$A({inputs:{a:T,b:m},backend:t}),d.push(m))}h<c-1&&(l[h]>=0&&(m=hg({inputs:{x:m},backend:t,attrs:{axis:l[h]-(a.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeData(h.dataId);return m}var hW={kernelName:Mu,backendName:"webgpu",kernelFunc:vue};var wue=dt({opType:we.ELU}),gW={kernelName:ho,backendName:"webgpu",kernelFunc:wue};var Sue=At({opSnippet:Le.EQUAL,dtype:"bool",cpuKernelImpl:fG}),bW={kernelName:Zs,backendName:"webgpu",kernelFunc:Sue};var OA=dt({opType:we.EXP,cpuKernelImpl:dG,dtype:"float32"}),yW={kernelName:go,backendName:"webgpu",kernelFunc:OA};function $x(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),Ge({inputs:{x:s},backend:n,attrs:{shape:i}})}var xW={kernelName:ls,backendName:"webgpu",kernelFunc:$x};var _ue=dt({opType:we.EXPM1,cpuKernelImpl:hG}),TW={kernelName:Js,backendName:"webgpu",kernelFunc:_ue};var zA=class{constructor(e){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32;";this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
    ${de()} {
      ${ye()}
      if (index < uniforms.size) {
        setOutputFlat(index, uniforms.value);
      }
    }
  `}};function Ga(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new zA(n),i=[{type:"float32",data:[o]}];return e.runWebGPUProgram(a,[],s,i)}}var kW={kernelName:ja,backendName:"webgpu",kernelFunc:Ga};var GA=class{constructor(e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${de()} {
        ${ye()}

        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputFlat(index, outputValue);
        }
      }
    `}};var IW={kernelName:ea,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new GA(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var Aue=dt({opType:we.FLOOR,cpuKernelImpl:gG}),CW={kernelName:bo,backendName:"webgpu",kernelFunc:Aue};var Nue=At({opSnippet:Le.INT_DIV,dtype:"int32"}),vW={kernelName:yo,backendName:"webgpu",kernelFunc:Nue};var wW=(r,e,t,n,o)=>{let s=[n,...t];return o&&s.push(o),r.createBindGroup({layout:e,entries:s.map((a,i)=>({binding:i,resource:a}))})},Bx=(r,e,t,n,o,s=!1)=>{let a={dtype:o.dtype,shape:o.shape},i=eG(n,a,e,s),u=r.createShaderModule({code:i});return r.createComputePipeline({layout:t,compute:{module:u,entryPoint:"main"}})};function Ox(r,e,t,n="",o=""){return(r.workGroupSize?r.workGroupSize.join(","):"")+e.map(a=>a.length).join(",")+t.join(",")+r.variableNames.join(",")+n+o+r.shaderKey}function WA(r){let{externalImage:e,backend:t,attrs:n,outShape:o,useImport:s}=r,{numChannels:a}=n,i=b.sizeFromShape(o),u=b.computeStrides(o),l=t.makeTensorInfo(o,"int32"),p=t.getFromPixelsProgram(s?"import":"copyExternal");p.updateOutputShape(o);let c=[l.shape],m=[l.dtype,s?"import":"copyExternal"],f=Ox(p,c,m),d=p.getLayout(t.device),h=t.getAndSavePipeline(f,()=>Bx(t.device,p,d.pipelineLayout,[],l,!0));p.setPipeline(h),s||t.queue.copyExternalImageToTexture({source:e,origin:{x:0,y:0}},{texture:p.makeInputTexture(t.device,o[1],o[0])},[o[1],o[0]]);let g=t.tensorMap.get(l.dataId);g.bufferInfo.buffer=t.acquireBuffer(g.bufferInfo.byteSize);let y=[i,a,...u,...p.dispatch];p.setUniform(t.device,y);let x;if(s){let T={source:e};x=t.device.importExternalTexture(T)}else x=p.inputTexture.createView();return t.runFromPixelsProgram(p,g.bufferInfo.buffer,d,x,l.dataId),l}var SW={kernelName:vl,backendName:"webgpu",kernelFunc:Due},Bm;function Due(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&o instanceof OffscreenCanvas,l=typeof ImageBitmap!="undefined"&&o instanceof ImageBitmap,[p,c]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],m=[c,p,s];if(W().getBool("WEBGPU_USE_IMPORT")&&a)return WA({externalImage:o,backend:t,attrs:n,outShape:m,useImport:!0});if((a||i)&&(Bm==null&&(Bm=document.createElement("canvas").getContext("2d")),Bm.canvas.width=p,Bm.canvas.height=c,Bm.drawImage(o,0,0,p,c),o=Bm.canvas),l||u||a||i)return WA({externalImage:o,backend:t,attrs:n,outShape:m,useImport:!1});let f=o.data,d=f;if(s!=null&&s!==4){d=new Uint8Array(o.width*o.height*s);let y=f.length,x=0;for(let T=0;T<y;T++)T%4<s&&(d[x++]=f[T])}let h=t.makeTensorInfo(m,"int32"),g=t.tensorMap.get(h.dataId);return g.values=new Int32Array(d),t.maybeReleaseBuffer(h.dataId),t.uploadToGPU(h.dataId),h}var UA=class{constructor(e,t,n,o,s){this.uniforms="varianceEpsilon : f32;";this.workGroupSize=[128,1,1];this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetAtOutCoordsByGlobalId(globalId, index)");let t="1.0";this.scaleShape!=null&&(t="getScaleAtOutCoordsByGlobalId(globalId, index)");let n=this.outputShape.length,o=Et(n),s="setOutput(coords[0], coords[1], coords[2], coords[3], value);";return n===2&&(s="setOutput(coords[0], coords[1], value);"),n===3&&(s="setOutput(coords[0], coords[1], coords[2], value);"),`
      fn writeResult(coords : ${o}, value : f32) {
        if (coordsInBounds${n}D(coords, uniforms.outShape)) {
          ${s}
        }
      }
      ${de()} {
        ${ye()}
        let coords = getOutputCoords(globalId, index);
        let xValue = getXAtOutCoordsByGlobalId(globalId, index);
        let meanValue = getMeanAtOutCoordsByGlobalId(globalId, index);
        let varianValue = getVarianceAtOutCoordsByGlobalId(globalId, index);
        let offsetValue = ${e};
        let scaleValue = ${t};
        let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
        writeResult(coords,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
      }
  `}};var _W={kernelName:xo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:u}=e,l=t,p=[n,a,i],c=null;s!=null&&(c=s.shape,p.push(s));let m=null;o!=null&&(m=o.shape,p.push(o));let f=new UA(n.shape,a.shape,i.shape,c,m),d=[{type:"float32",data:[u]}];return l.runWebGPUProgram(f,p,n.dtype,d)}};function Pue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=I.convertConv2DDataFormat(p),g=I.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!1,h),y=a!=null,x=i!=null,T;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return Lx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});let k=W().getBool("WEBGPU_USE_NAIVE_CONV2D"),v=g.inChannels%4==0&&g.outChannels%4==0,P=[g.padInfo.top,g.padInfo.left],A=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...P]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(k)T=new mg(g,y,f,x);else{v?T=new pg(g,y,f,x):T=new cg(g,y,f,x);let E=g.outShape[1]*g.outShape[2],L=g.outShape[3],U=g.filterHeight*g.filterWidth*g.inShape[3];A.push({type:"int32",data:[E]},{type:"int32",data:[L]},{type:"int32",data:[U]})}let F=[o,s];return y&&F.push(a),x&&F.push(i),t.runWebGPUProgram(T,F,o.dtype,A)}var AW={kernelName:Cs,backendName:"webgpu",kernelFunc:Pue};function Fue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:c,activation:m}=n,f=p;f==null&&(f=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let d=I.computeConv2DInfo(o.shape,s.shape,u,f,l,c,!0),h=[o,s],g=a!=null,y=i!=null;g&&h.push(a),y&&h.push(i);let x;d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4==0?x=new fg(d,g,m,y):x=new dg(d,g,m,y);let T=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}];return t.runWebGPUProgram(x,h,"float32",T)}var NW={kernelName:vs,backendName:"webgpu",kernelFunc:Fue};var KA=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.outputShape=t,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.size=b.sizeFromShape(this.outputShape),this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${Et(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${de()} {
          ${ye()}
          let coords = getOutputCoords(globalId, index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }
          if (index < uniforms.size) {
            setOutputFlat(index, getA(flattenIndex, coords[1]));
          }
        }
      `}};function Mue(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[u,l,p,c]=I.prepareAndValidate(n,o),m=Ge({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),f=Ge({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let x=t.readSync(o.dataId),T=t.bufferSync(n),k=bG(x,T,n.dtype,l,a,p,c,n.shape,i);return t.makeTensorInfo(u,n.dtype,k.values)}let d=new KA(a,[l,p]),h=[{type:"int32",data:[a]},{type:"int32",data:c}],g=t.runWebGPUProgram(d,[f,m],f.dtype,h),y=Ge({inputs:{x:g},backend:t,attrs:{shape:u}});return t.disposeData(m.dataId),t.disposeData(f.dataId),t.disposeData(g.dataId),y}var DW={kernelName:ta,backendName:"webgpu",kernelFunc:Mue};var VA=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=Eue(this.aShape,"i32");return`
      ${de()} {
        ${ye()}
        let resRC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Eue(r,e="int"){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push(`${e}(getIndices(resRC.x, resRC.z))`):n.push(`${t[o]}`);return n.join()}function jA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=b.parseAxisParam(a,o.shape)[0],l=I.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=b.sizeFromShape(s.shape),c=[],m=Ge({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Ge({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,p/l.batchSize]}});c.push(m),c.push(f);let d=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let T=t.tensorMap.get(f.dataId).values,k=Ce(f.shape,f.dtype,T),P=t.tensorMap.get(m.dataId).values,A=Ce(m.shape,m.dtype,P),F=yG(A,k,d);return c.forEach(E=>t.disposeData(E.dataId)),t.makeTensorInfo(l.outputShape,F.dtype,F.values)}let h=new VA(m.shape,d),g=t.runWebGPUProgram(h,[m,f],m.dtype);c.push(g);let y=Ge({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return c.forEach(x=>t.disposeData(x.dataId)),y}var PW={kernelName:ps,backendName:"webgpu",kernelFunc:jA};var Rue=At({opSnippet:Le.GREATER,cpuKernelImpl:TG,dtype:"bool"}),FW={kernelName:ra,backendName:"webgpu",kernelFunc:Rue};var Lue=At({opSnippet:Le.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:xG}),MW={kernelName:To,backendName:"webgpu",kernelFunc:Lue};var $ue=At({opSnippet:Le.LESS,dtype:"bool",cpuKernelImpl:IG}),EW={kernelName:oa,backendName:"webgpu",kernelFunc:$ue};var Bue=At({opSnippet:Le.LESS_EQUAL,dtype:"bool",cpuKernelImpl:kG}),RW={kernelName:sa,backendName:"webgpu",kernelFunc:Bue};var Oue=dt({opType:we.LOG,cpuKernelImpl:CG}),LW={kernelName:ko,backendName:"webgpu",kernelFunc:Oue};var zue=At({opSnippet:Le.LOGICAL_AND,dtype:"bool"}),$W={kernelName:aa,backendName:"webgpu",kernelFunc:zue};var Gue=dt({opType:we.LOGICAL_NOT}),BW={kernelName:Ri,backendName:"webgpu",kernelFunc:Gue};function HA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n;return hi(o,s,a,"max",t)}var OW={kernelName:Io,backendName:"webgpu",kernelFunc:HA};var Wue=At({opSnippet:Le.MAX,cpuKernelImpl:wG}),zW={kernelName:Co,backendName:"webgpu",kernelFunc:Wue};function Uue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=I.computePool2DInfo(o.shape,s,a,l,i,u),c,m=[];if(p.filterHeight===1&&p.filterWidth===1){if(b.arraysEqual(p.inShape,p.outShape))return wr({inputs:{x:o},backend:t});c=new lg(p),m.push({type:"int32",data:[p.strideHeight,p.strideWidth]})}else c=new ug(p,"max"),m.push({type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]});return t.runWebGPUProgram(c,[o],o.dtype,m)}var GW={kernelName:vo,backendName:"webgpu",kernelFunc:Uue};function Kue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:a}=n;return hi(o,a,s,"mean",t)}var WW={kernelName:wo,backendName:"webgpu",kernelFunc:Kue};function Vue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return hi(o,s,a,"min",t)}var UW={kernelName:So,backendName:"webgpu",kernelFunc:Vue};var jue=At({opSnippet:Le.MIN,cpuKernelImpl:SG}),KW={kernelName:_o,backendName:"webgpu",kernelFunc:jue};var qA=class{constructor(e,t,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,p)=>`uniforms.pad${p}[0]`).join(","),n=this.xShape.map((l,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=Et(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${de()} {
        ${ye()}
        let start = ${i}(${t});
        let end = ${i}(${n});
        var outC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } elseif(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputFlat(index, getX(${u}));
        }
      }
    `}};var VW={kernelName:Ao,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=t,i=o.map(p=>({type:"int32",data:[p[0],p[1]]})),u=new qA(n.shape,o,s);return a.runWebGPUProgram(u,[n],n.dtype,i)}};function Hue(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[a,i]=AG(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o=new yu(n.shape,we.NEG);return t.runWebGPUProgram(o,[n],n.dtype)}var jW={kernelName:cs,backendName:"webgpu",kernelFunc:Hue};function que(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:c}=Tr.nonMaxSuppressionV3Impl(l,p,a,i,u);return t.makeTensorInfo([c.length],"int32",new Int32Array(c))}var HW={kernelName:ua,backendName:"webgpu",kernelFunc:que};function Xue(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),c=t.readSync(s.dataId),m=a,f=i,d=u,h=l,{selectedIndices:g,selectedScores:y}=Tr.nonMaxSuppressionV5Impl(p,c,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var qW={kernelName:la,backendName:"webgpu",kernelFunc:Xue};function gg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=xu({inputs:{input:n},backend:t}),s=gg({inputs:{x:o},backend:t}),a=Ep({inputs:{input:n},backend:t}),i=gg({inputs:{x:a},backend:t}),u=Oa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),u}else return Ga({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var XW={kernelName:Ts,backendName:"webgpu",kernelFunc:gg};function YW(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=xu({inputs:{input:n},backend:t}),s=YW({inputs:{x:o},backend:t}),a=Ep({inputs:{input:n},backend:t}),i=gg({inputs:{x:a},backend:t}),u=Oa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),u}else return Ga({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var QW={kernelName:ms,backendName:"webgpu",kernelFunc:YW};function Yue(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return $x({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let c=$x({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(c),c}),l=PA({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeData(p.dataId)),l}var ZW={kernelName:fs,backendName:"webgpu",kernelFunc:Yue};var XA=class{constructor(e,t){this.variableNames=["x"];this.uniforms="constantValue : f32;";this.workGroupSize=[64,1,1];this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=Et(e),n=this.xShape.map((c,m)=>`uniforms.pad${m}[0]`).join(","),o=this.xShape.map((c,m)=>`uniforms.pad${m}[0] + uniforms.xShape${e>1?`[${m}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${o})`:`${o}`,i=e>1?"any(outC < start)":"outC < start",u=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${de()} {
        ${ye()}
        let start = ${s};
        let end = ${a};
        if (index < uniforms.size) {
          let outC = getOutputCoords(globalId, index);

          if (${i} || ${u}) {
            setOutputFlat(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputFlat(index, getX(${l}));
          }
        }
      }
    `}};var YA=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(s.every(l=>b.arraysEqual(l,[0,0])))return wr({inputs:{x:o},backend:t});if(b.sizeFromShape(o.shape)===0){let l=s.map((p,c)=>p[0]+o.shape[c]+p[1]);return Ga({backend:t,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(l=>i.push({type:"int32",data:[l[0],l[1]]}));let u=new XA(o.shape,s);return t.runWebGPUProgram(u,[o],o.dtype,i)},JW={kernelName:Do,backendName:"webgpu",kernelFunc:YA};var Que=At({opSnippet:Le.POW}),eU={kernelName:Po,backendName:"webgpu",kernelFunc:Que};function Zue(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new ag(Le.PRELU,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var tU={kernelName:Fo,backendName:"webgpu",kernelFunc:Zue};function Jue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return hi(o,s,a,"prod",t)}var rU={kernelName:ca,backendName:"webgpu",kernelFunc:Jue};var ele=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=PG(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},nU={kernelName:Ha,backendName:"webgpu",kernelFunc:ele};var QA=At({opSnippet:Le.DIV}),oU={kernelName:fo,backendName:"webgpu",kernelFunc:QA};var tle=dt({opType:we.RELU}),sU={kernelName:Mo,backendName:"webgpu",kernelFunc:tle};var rle=dt({opType:we.RELU6}),aU={kernelName:Ro,backendName:"webgpu",kernelFunc:rle};var ZA=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=o,this.halfPixelCenters=s,this.shaderKey=`resizeBilinear_${o}_${s}_${this.outputShape[1]>1}_${this.outputShape[2]>1}`}getUserCode(){let e=this.alignCorners&&this.outputShape[1]>1,t=this.alignCorners&&this.outputShape[2]>1;return`
      ${de()} {
        ${ye()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${e?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${t?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${e?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${t?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${this.halfPixelCenters?"(vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC - vec2<f32>(0.5)":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC"};

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function nle(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:a,halfPixelCenters:i}=n,[u,l]=a,p=new ZA(o.shape,u,l,s,i);return t.runWebGPUProgram(p,[o],"float32")}var iU={kernelName:Eo,backendName:"webgpu",kernelFunc:nle};var JA=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=o,this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${o}_${this.outputShape[1]>1}_${this.outputShape[2]>1}_${s}`}getUserCode(){let e=this.alignCorners?"0.5":"0.0",t;this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC";let n=this.alignCorners&&this.outputShape[1]>1,o=this.alignCorners&&this.outputShape[2]>1;return`
      ${de()} {
        ${ye()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${n?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${o?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${n?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${o?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${e})));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function ole(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=new JA(o.shape,u,l,s,a);return t.runWebGPUProgram(p,[o],o.dtype)}var uU={kernelName:qa,backendName:"webgpu",kernelFunc:ole};var eN=class{constructor(e,t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.size=b.sizeFromShape(this.outputShape),this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${de()} {
          ${ye()}

          if (index < uniforms.size) {
            let coords = getOutputCoords(globalId, index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputFlat(index, outputValue);
          }
        }
      `}};var lU={kernelName:Ta,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=new eN(n.shape,s),[l,p]=I.getImageCenter(a,n.shape[1],n.shape[2]),c=[{type:"float32",data:[l]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?c.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):c.push({type:"float32",data:s}),i.runWebGPUProgram(u,[n],n.dtype,c)}};var sle=dt({opType:we.RSQRT,cpuKernelImpl:FG}),pU={kernelName:Lo,backendName:"webgpu",kernelFunc:sle};var tN=class{constructor(e,t,n,o,s,a,i){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.dispatchLayout=ve(e),this.dispatch=fe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}`,this.size=b.sizeFromShape(e);let u=Et(s.length);this.uniforms=`sliceDim : i32; strides: ${u};`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="",a="";this.updatesRank===1?(o="coords[0]",s="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(o="coords[0], coords[1]",s="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${o})`,u=this.type==="int32"?"ignore(atomicAdd(&(result.numbers[flatIndex]), i32(updateValue)));":`
     var oldI32 = atomicLoad(&(result.numbers[flatIndex]));
     var assumed = oldI32 - 1;
     for (; assumed != oldI32;) {
       assumed = oldI32;
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       oldI32 = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32)[0];
     }
     `;return`
    ${a}

      ${de()} {
        ${ye()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${i};
          let flatIndex = getOutputFlatIndex(${s});

         ${u}
        }
      }`}};function ale(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:c}=I.calculateShapes(s,o,a),m=[c/l,l];if(c===0)return t.makeTensorInfo(a,o.dtype);let f=Ge({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),d=Ge({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=d.dtype,g=Ga({backend:t,attrs:{shape:m,value:0,dtype:h}}),y=[{type:"int32",data:[i]},{type:"int32",data:p}],x=new tN(d.shape,i,f.shape.length,d.shape.length,p,m,h),T=t.runWebGPUProgram(x,[d,f],h,y,g),k=Ge({inputs:{x:T},backend:t,attrs:{shape:a}});return t.disposeData(f.dataId),t.disposeData(d.dataId),t.disposeData(T.dataId),k}var cU={kernelName:da,backendName:"webgpu",kernelFunc:ale};var rN=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.outputShape=t,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);e=s.join(),t=a.join()}return`
      ${de()} {
        ${ye()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputFlat(index, getA(${t}));
          } else {
            setOutputFlat(index, getB(${t}));
          }
        }
      }
    `}};function ile(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new rN(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(a,[n,o,s],Kt(o.dtype,s.dtype))}var mU={kernelName:hs,backendName:"webgpu",kernelFunc:ile};var ule=dt({opType:we.SIGMOID}),fU={kernelName:Bo,backendName:"webgpu",kernelFunc:ule};var lle=dt({opType:we.SIN}),dU={kernelName:$o,backendName:"webgpu",kernelFunc:lle};var ple=dt({opType:we.SINH}),hU={kernelName:ha,backendName:"webgpu",kernelFunc:ple};var nN=At({opSnippet:Le.SUB,cpuKernelImpl:$G,supportsComplex:!0}),gU={kernelName:Uo,backendName:"webgpu",kernelFunc:nN};function cle(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=HA({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=I.expandShapeToKeepDim(i.shape,a),l=Ge({inputs:{x:i},backend:t,attrs:{shape:u}}),p=nN({inputs:{a:o,b:l},backend:t}),c=OA({inputs:{x:p},backend:t}),m=hg({inputs:{x:c},backend:t,attrs:{axis:a,keepDims:!1}}),f=Ge({inputs:{x:m},backend:t,attrs:{shape:u}}),d=QA({inputs:{a:c,b:f},backend:t});return t.disposeData(i.dataId),t.disposeData(l.dataId),t.disposeData(p.dataId),t.disposeData(c.dataId),t.disposeData(m.dataId),t.disposeData(f.dataId),d}var bU={kernelName:Go,backendName:"webgpu",kernelFunc:cle};var mle=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((y,x)=>y*x),u=[[0,0]];u.push(...a);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let l=[],p=YA({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(p.shape,s,i,!1),m=I.getPermuted(c.length,s.length,!1),f=I.getReshapedPermuted(p.shape,s,i,!1),d=Ge({inputs:{x:p},backend:t,attrs:{shape:c}}),h=ts({inputs:{x:d},backend:t,attrs:{perm:m}}),g=Ge({inputs:{x:h},backend:t,attrs:{shape:f}});return l.push(p),l.push(d),l.push(h),l.forEach(y=>t.disposeData(y.dataId)),g},yU={kernelName:bs,backendName:"webgpu",kernelFunc:mle};var oN=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.workGroupSize=[64,1,1];this.workPerThread=4;this.outputShape=a,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let u=t>1;this.shaderKey=`scatter_${n}_${o}_${u}`,this.size=b.sizeFromShape(this.outputShape);let l=Et(s.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let p="";n===1?p="i":n===2&&(p="i, j"),this.indicesSnippet=`getIndices(${p})`;let c="";o===1?c="i":o===2&&(c="i, coords[1]"),this.updatesSnippet=`getUpdates(${c})`,this.strideString=u?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${de()} {
        ${ye()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromFlatIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputFlat(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function fle(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,strides:p,outputSize:c}=I.calculateShapes(s,o,i),m=!1,f=[{type:"int32",data:[l]},{type:"int32",data:[u]},{type:"int32",data:p}],d=new oN(l,u,o.shape.length,s.shape.length,p,[c,1],m),h=t.runWebGPUProgram(d,[s,o,a],s.dtype,f),g=Ge({inputs:{x:h},backend:t,attrs:{shape:i}});return t.disposeData(h.dataId),g}var xU={kernelName:Bu,backendName:"webgpu",kernelFunc:fle};function dle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],u=I.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),c=o.shape.slice();return u.map(m=>{let f=[...c];f[i]=m;let d=za({inputs:{x:o},backend:t,attrs:{begin:p,size:f}});return p[i]+=m,d})}var TU={kernelName:ys,backendName:"webgpu",kernelFunc:dle};var hle=dt({opType:we.SQRT}),kU={kernelName:Oo,backendName:"webgpu",kernelFunc:hle};var IU={kernelName:Xa,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new yu(t.shape,we.SQUARE);return n.runWebGPUProgram(o,[t],t.dtype)}};var gle=At({opSnippet:Le.SQUARED_DIFFERENCE}),CU={kernelName:Wo,backendName:"webgpu",kernelFunc:gle};var sN=class{constructor(e){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Et(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${de()} {
         ${ye()}
         if (index < uniforms.size) {
           let coords = getOutputCoords(globalId, index);
           setOutputFlat(index, getX(${t}));
         }
       }
     `}};function ble(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:x,end:T,strides:k}=It.sliceInfo(o.shape,s,a,i,u,l,p,c,m),v;if(h)v=Ge({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let P=It.computeOutShape(x,T,k),A=za({inputs:{x:o},backend:t,attrs:{begin:x,size:P}});v=Ge({inputs:{x:A},backend:t,attrs:{shape:d}}),t.disposeData(A)}else if(t.shouldExecuteOnCPU([o])){let A=t.readSync(o.dataId),F=Ce(o.shape,o.dtype,A),E=RG(f,F,k,x);v=t.makeTensorInfo(d,o.dtype,E.values)}else{let A=new sN(f),F=[{type:"int32",data:x},{type:"int32",data:k}];v=t.runWebGPUProgram(A,[o],o.dtype,F)}return v}var vU={kernelName:ga,backendName:"webgpu",kernelFunc:ble};function yle(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:c}=e,m=t.readSync(p.dataId),f=t.readSync(c.dataId),[d,h]=LG(m,f,o,s,a,i,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(c.shape,"int32",h)]}var wU={kernelName:Ou,backendName:"webgpu",kernelFunc:yle};var xle=dt({opType:we.TANH}),SU={kernelName:Ko,backendName:"webgpu",kernelFunc:xle};var aN=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.size=b.sizeFromShape(this.outputShape),this.shaderKey="tile"}getUserCode(){let e=Tle(this.rank,"uniforms.");return`
      ${de()} {
        ${ye()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Tle(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function kle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(m=>b.decodeString(m)):u,p=Ce(o.shape,o.dtype,l),c=BG(p,s);return t.makeTensorInfo(c.shape,c.dtype,c.values)}let a=new aN(o.shape,s);return t.runWebGPUProgram(a,[o],o.dtype)}var _U={kernelName:An,backendName:"webgpu",kernelFunc:kle};var iN=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
        ${de()} {
          ${ye()}
          if (index < uniforms.size) {
            let outC = getOutputCoords(globalId, index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}},uN=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
        ${de()} {
          ${ye()}
          if (index < uniforms.size) {
            let outC = getOutputCoords(globalId, index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}};function Om(r,e){e!==null&&r.disposeData(e.dataId)}function AU(r){let e=1;for(;e<r;)e*=2;return e}function Ile(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=o.shape,u=i[i.length-1];if(t.shouldExecuteOnCPU([o])){let v=t.readSync(o.dataId),[P,A]=OG(v,i,o.dtype,s,a);return[t.makeTensorInfo(P.shape,P.dtype,P.values),t.makeTensorInfo(A.shape,A.dtype,A.values)]}if(s===0)return i[i.length-1]=0,[t.makeTensorInfo(i,o.dtype,[]),t.makeTensorInfo(i,"int32",[])];if(u===1)return[o,Ga({attrs:{shape:i,dtype:"int32",value:0},backend:t})];let p=b.sizeFromShape(i)/u,c=Ge({inputs:{x:o},attrs:{shape:[p,u]},backend:t}),m=AU(s),f=AU(u),d=null,h=()=>d===null?[c,c]:[c,d],g=(v,P,A)=>{let F=h(),E=new iN(A),U=[{type:"int32",data:[u]},{type:"int32",data:[d===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[v]},{type:"int32",data:[P]}],K=d;d=t.runWebGPUProgram(E,F,"int32",U),Om(t,K)};for(let v=1;v<m;v*=2){let P=v*2;for(let A=v;A>=1;A/=2)g(P,A,[p,f])}for(let v=f;v>m;v/=2){let P=h(),A=new uN([p,v/2]),E=[{type:"int32",data:[u]},{type:"int32",data:[d===null?1:0]},{type:"int32",data:[m]}],L=d;d=t.runWebGPUProgram(A,P,"int32",E),Om(t,L);let U=m/2,K=U*2;for(let B=U;B>=1;B/=2)g(K,B,d.shape)}let y=d;d=za({inputs:{x:d},backend:t,attrs:{begin:0,size:[p,s]}}),Om(t,y);let x=jA({inputs:{x:c,indices:d},backend:t,attrs:{axis:1,batchDims:1}});Om(t,c);let T=i.slice(0,-1);T.push(s),y=d,d=Ge({inputs:{x:d},attrs:{shape:T},backend:t}),Om(t,y);let k=x;return x=Ge({inputs:{x},attrs:{shape:T},backend:t}),Om(t,k),[x,d]}var NU={kernelName:ya,backendName:"webgpu",kernelFunc:Ile};var lN=class{constructor(e){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;";this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${de()} {
            ${ye()}
            let coords = getOutputCoords(globalId, index);
            if (coordsInBounds4D(coords, uniforms.outShape)) {
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(coords[0], coords[1], coords[2], coords[3], outputValue);
            }
          }
        `}};function Cle(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],y=new lN(g),x=a==="nearest"?1:2,T;switch(i){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}let k=[{type:"int32",data:[x]},{type:"int32",data:[T]},{type:"float32",data:[u]}];return t.runWebGPUProgram(y,[o,s],"float32",k)}var DU={kernelName:xa,backendName:"webgpu",kernelFunc:Cle};function vle(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let c=[],m=new Array(i).fill(0),f=a.shape.slice();f[s]=1;let d=new Array(u);for(let h=0;h<d.length;h++){m[s]=h;let g=za({inputs:{x:a},backend:t,attrs:{begin:m,size:f}}),y=Ge({inputs:{x:g},backend:t,attrs:{shape:l}});d[h]=y,c.push(g)}return c.forEach(h=>t.disposeData(h.dataId)),d}var PU={kernelName:xs,backendName:"webgpu",kernelFunc:vle};var wle=[iG,GG,WG,UG,VG,jG,HG,qG,YG,eW,tW,rW,lG,oW,aW,iW,uW,lW,pW,cW,mW,hW,gW,bW,xW,yW,TW,kW,IW,SW,CW,vW,_W,AW,NW,DW,PW,FW,MW,uG,nW,EW,RW,LW,$W,BW,OW,zW,GW,WW,UW,KW,VW,fW,jW,HW,qW,QG,QW,ZW,JW,tU,rU,eU,nU,ZG,oU,sU,aU,aG,iU,uU,lU,pU,cU,mU,fU,dU,hU,XG,vU,wU,bU,yU,TU,xU,kU,IU,CU,gU,dW,SU,_U,NU,DU,KG,PU,XW];for(let r of wle)Wi(r);var pN=class{constructor(e){this.device=e;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireBuffer(e,t){let n=FU(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let s=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(s),s}this.numBytesAllocated+=e;let o=this.device.createBuffer({size:e,usage:t});return this.usedBuffers.get(n).push(o),o}releaseBuffer(e,t,n){if(this.freeBuffers==null)return;let o=FU(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=t}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}reset(){this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}dispose(){this.freeBuffers==null&&this.usedBuffers==null||(this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=null,this.usedBuffers=null,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0)}};function FU(r,e){return`${r}_${e}`}var bg=class{constructor(){this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.lastUniformData=[];this.inputTexture=null;this.layout=null;this.lastPixelSize={width:0,height:0};this.disposed=!1;this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){b.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${de()} {
        ${ye()}
        let flatIndexBase = index * uniforms.numChannels;
        let coords = getCoordsFromFlatIndex(flatIndexBase);
        let values = ${e};
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,o)=>n===this.lastUniformData[o])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var cN=class extends bg{constructor(){super(...arguments);this.layout=null;this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var Sle=W().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),mN=class extends os{constructor(e,t=!1){super();this.commandQueueOwnedIds=new WeakSet;this.tensorDisposalQueue=[];this.uniformDisposalQueue=[];this.disposed=!1;this.uploadWaitMs=0;this.downloadWaitMs=0;this.dispatchNumberInEncoder=0;if(!ng())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new pN(this.device),this.tensorMap=new Wa(this,jo()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),W().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return mN.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:o}=this.tensorMap.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()},s=b.sizeFromShape(t)*Mx(n);return n==="bool"&&e instanceof Uint8Array&&(e=Int32Array.from(e)),this.tensorMap.set(o,{dtype:n,values:e,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=b.sizeFromShape(n)*Mx(o);this.tensorMap.set(e,{dtype:o,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new bg),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new cN),this.fromPixelImportProgram;default:b.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),W().getBool("WEBGPU_USE_PROFILE_TOOL")&&(b.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=s[0],i=s[1];o=I.mergeRealAndImagArrays(a,i)}else{let s=await this.getBufferData(t);o=fA(s,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=b.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(s);return i.kernelMs=b.sum(u),i.getExtraProfileInfo=()=>u.map((l,p)=>({name:a[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values&&this.queue.writeBuffer(t.bufferInfo.buffer,0,t.values))}makeUniformsDataView(e){let t=this.acquireBuffer(e.byteLength,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(t,0,e),{offset:0,size:e.byteLength,buffer:t}}arrayToDataView(e,t){let n=4,o=new DataView(new ArrayBuffer(t*n)),s=0;return e.forEach(a=>{let i=a.data;if(a.type!=="int32"&&a.type!=="float32"&&a.type!=="uint32")throw new Error(`${a.type} not supported!`);a.type==="int32"?i.forEach(u=>{o.setInt32(s*n,u,!0),s++}):a.type==="uint32"?i.forEach(u=>{o.setUint32(s*n,u,!0),s++}):i.forEach(u=>{o.setFloat32(s*n,u,!0),s++})}),o}computePadding(e){let t=0,n=0,o=0,s=[];return e.forEach((a,i)=>{a.data.length===0&&(a.data=[1]);let u;switch(a.data.length){case 0:u=1;break;case 1:u=1;break;case 2:u=2;break;case 3:u=4;break;case 4:u=4;break;default:b.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}n=Math.ceil(t/u)*u-t;for(let l=0;l<n;++l)s.push({type:a.type,data:[0]}),o++;s.push({type:a.type,data:a.data}),o=o+a.data.length,t+=a.data.length+n}),this.arrayToDataView(s,o)}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let s=0;s<e;s++)t.push({binding:s+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),o=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,o,s){if(!s){if(s=this.makeTensorInfo(e.outputShape,n),b.sizeFromShape(s.shape)===0){let E=this.tensorMap.get(s.dataId);return E.values=b.getTypedArrayFromDType(s.dtype,0),s}this.uploadToGPU(s.dataId)}let a=[{type:"float32",data:[NaN]}],i=t.concat(s).map(E=>E.shape),u="int32";i.map(E=>{a.push({type:u,data:E})});let l=b.computeStrides(s.shape);a.push({type:u,data:l}),e.size!=null&&a.push({type:u,data:[e.size]}),a.push({type:"uint32",data:e.dispatch}),o&&(a=[...a,...o]);let p=null,c=this.computePadding(a),m=c.byteLength;p=this.makeUniformsDataView(c);let f=t.map((E,L)=>{if(E.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(E.dataId),{dtype:this.tensorMap.get(E.dataId).dtype,shape:E.shape,name:e.variableNames[L]}}),d=f.map(E=>E.dtype).concat(s.dtype),h=f.map(E=>I.getBroadcastDims(E.shape,s.shape)),g=f.map(E=>b.arraysEqual(E.shape,s.shape)).join("_"),y=h.map(E=>E.join("_")).join(";"),x=Ox(e,i,d,y,g),{bindGroupLayout:T,pipelineLayout:k}=this.getCachedOrCreateLayout(e.variableNames.length),v=this.getAndSavePipeline(x,()=>Bx(this.device,e,k,f,s)),P=this.activeTimers!=null,A=wW(this.device,T,t.map(E=>this.tensorToBinding(E)),this.tensorToBinding(s),p);this.ensureCommandEncoderReady();let F=this.getComputePass();if(P&&this.supportTimeQuery&&F.writeTimestamp(this.querySet,0),F.setPipeline(v),F.setBindGroup(0,A),F.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),P&&this.supportTimeQuery&&F.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(E=>{this.commandQueueOwnedIds.add(E.dataId)}),this.commandQueueOwnedIds.add(s.dataId),p){let E={byteSize:m,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:p.buffer};this.uniformDisposalQueue.push(E)}return W().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),P&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}runFromPixelsProgram(e,t,n,o,s){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:o},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let i=this.getComputePass(),u=this.activeTimers!=null;u&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,0),i.setPipeline(e.pipeline),i.setBindGroup(0,a),i.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),u&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(s),this.submitQueue(),u&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=Sle){return W().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&b.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},zm=mN;zm.nextDataId=0;var MU={};Qe(MU,{WebGPUBackend:()=>zm,webgpu_util:()=>dA});Ki.isBrowser()&&ng()&&Vu("webgpu",async()=>{W().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:W().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t={},n=e.features.has("timestamp-query");n?t={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let o=await e.requestDevice(t);return new zm(o,n)},3);var at;(function(s){s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64"})(at||(at={}));var ml;(function(i){i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu"})(ml||(ml={}));var EU;function _le(r){EU=r.wasm.cwrap(Is,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Ale(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n,m=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(s.dataId).id,d=0;if(a!=null){let F=t.dataIdMap.get(a.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);d=F.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=ml[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=u?o.shape[2]:o.shape[1],x=l?s.shape[1]:s.shape[2],T=o.shape[0],k=t.makeOutput([T,y,x],o.dtype),v=t.dataIdMap.get(k.dataId).id,P=new Uint8Array(new Int32Array(o.shape).buffer),A=new Uint8Array(new Int32Array(s.shape).buffer);return EU(m,P,o.shape.length,f,A,s.shape.length,u,l,g,d,h,c||0,v),k}var RU={kernelName:Is,backendName:"wasm",setupFunc:_le,kernelFunc:Ale};function ht(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,u=a.dataIdMap.get(i.dataId).id,l=a.makeOutput(i.shape,e||i.dtype),p=a.dataIdMap.get(l.dataId).id;return b.sizeFromShape(l.shape)===0||t(u,at[i.dtype],p),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var LU=ht(as);function Nt(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:u}=a,{a:l,b:p}=u,c=i.dataIdMap.get(l.dataId).id,m=i.dataIdMap.get(p.dataId).id,f=t??l.dtype,d=I.assertAndGetBroadcastShape(l.shape,p.shape),h=i.makeOutput(d,f);if(b.sizeFromShape(d)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),y=new Uint8Array(new Int32Array(p.shape).buffer),x=i.dataIdMap.get(h.dataId).id,T=()=>n(c,g,l.shape.length,m,y,p.shape.length,at[l.dtype],x);if(e&&l.dtype==="float32")return T(),h;let k=I.getBroadcastDims(l.shape,d),v=I.getBroadcastDims(p.shape,d),P=k.every((F,E)=>F===E),A=v.every((F,E)=>F===E);if(P&&A)return T(),h;throw new Error(`Broadcasting along outer dims is not yet supported for ${l.dtype} ${r}.`)}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var Nle=!0,$U=Nt(_n,Nle);var BU;function Dle(r){BU=r.wasm.cwrap(no,null,["array","number","number","number"])}function Ple(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(b.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return BU(s,o.length,at[n.dtype],a),n}var OU={kernelName:no,backendName:"wasm",setupFunc:Dle,kernelFunc:Ple};function Rp(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var zU={kernelName:Kn,backendName:"wasm",kernelFunc:Rp};var GU;function Fle(r){GU=r.wasm.cwrap(Vo,null,["number","array","number","number","number","array","number"])}function gi(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=Ele(e.x.shape,n.perm),a=!0;for(let d=0;d<s.length;d++)s[d]!==d&&(a=!1);let i=Mle(e.x.shape,n.perm),u={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let d=Rp({inputs:e,backend:t});return d.shape=i,d}let l=t.makeOutput(i,u.dtype),p=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(l.dataId).id,m=new Uint8Array(new Int32Array(s).buffer),f=new Uint8Array(new Int32Array(u.shape).buffer);return GU(p,f,u.shape.length,at[u.dtype],c,m,s.length),l}function Mle(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function Ele(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var WU={kernelName:Vo,backendName:"wasm",kernelFunc:gi,setupFunc:Fle};function kn(r,e,t){let n=r.shape,o=r.shape.length,s=b.parseAxisParam(e,n),a=s,i=I.getAxesPermutation(a,o),u=null,l=!1;if(i!=null){let p=new Array(o);for(let f=0;f<p.length;f++)p[f]=n[i[f]];a=I.getInnerMostAxes(a.length,o),u=gi({inputs:{x:r},attrs:{perm:i},backend:t});let c=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(u.dataId).id!==c&&(l=!0)}return{transposed:u,originalAxes:s,axes:a,inputWasTransposed:l}}var UU;function Rle(r){UU=r.wasm.cwrap(Ci,null,["number, number, number"])}function Lle(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=kn(a,o,e);if(f){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let d=l.shape.length;I.assertAxesAreInnerMostDims("all",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),y=b.sizeFromShape(g),x=e.makeOutput(h,a.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;UU(u,y,T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,m);x.shape=T}return x}var KU={kernelName:Ci,backendName:"wasm",setupFunc:Rle,kernelFunc:Lle};var VU;function $le(r){VU=r.wasm.cwrap(vi,null,["number, number, number"])}function Ble(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=kn(a,o,e);if(f){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let d=l.shape.length;I.assertAxesAreInnerMostDims("any",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),y=b.sizeFromShape(g),x=e.makeOutput(h,a.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;VU(u,y,T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,m);x.shape=T}return x}var jU={kernelName:vi,backendName:"wasm",setupFunc:$le,kernelFunc:Ble};var HU;function Ole(r){HU=r.wasm.cwrap(oo,null,["number","number","number","number","number"])}function zle(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,u=s,{transposed:l,axes:p,inputWasTransposed:c}=kn(s,o,e);if(c){let y=e.dataIdMap.get(l.dataId).id;y!==a&&(u=l,i=y)}let m=u.shape.slice(0,-1),f=e.makeOutput(m,"int32"),d=e.dataIdMap.get(f.dataId).id,h=b.sizeFromShape(f.shape),g=u.shape[p[0]];return HU(i,at[u.dtype],h,g,d),c&&e.disposeData(l.dataId),f}var qU={kernelName:oo,backendName:"wasm",kernelFunc:zle,setupFunc:Ole};var XU;function Gle(r){XU=r.wasm.cwrap(so,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wle(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=t,p=I.computePool2DInfo(o.shape,a,i,1,u,l),c=p.filterHeight,m=p.filterWidth,f=p.padInfo.top,d=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,x=p.strideWidth,T=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let k=n.makeOutput(p.outShape,"float32"),v=n.dataIdMap.get(k.dataId).id;return XU(s,o.shape[0],o.shape[1],o.shape[2],c,m,f,d,h,g,y,x,T,v),k}var YU={kernelName:so,backendName:"wasm",setupFunc:Gle,kernelFunc:Wle};function hr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s);return b.assert(s===b.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var QU={kernelName:ds,backendName:"wasm",kernelFunc:hr};var ZU;function Ule(r){ZU=r.wasm.cwrap(ao,null,["number","array","number","number","array","number","number","number","number"])}function Kle(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],c=i?s.shape[l-1]:s.shape[l-2],m=a?o.shape[u-1]:o.shape[u-2],f=i?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(d),y=b.sizeFromShape(h),x=g===y||g===1||y===1;b.assert(u>=2&&l>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let k=(g>y?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);b.assert(p===c,()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let v=a?[g,p,m]:[g,m,p],P=i?[y,f,c]:[y,c,f],A=hr({inputs:{x:o},backend:t,attrs:{shape:v}}),F=hr({inputs:{x:s},backend:t,attrs:{shape:P}}),E=t.dataIdMap.get(A.dataId).id,L=t.dataIdMap.get(F.dataId).id,U=a?A.shape[2]:A.shape[1],K=i?F.shape[1]:F.shape[2],B=Math.max(g,y),V=t.makeOutput([B,U,K],A.dtype),j=t.dataIdMap.get(V.dataId).id,H=new Uint8Array(new Int32Array(A.shape).buffer),ee=new Uint8Array(new Int32Array(F.shape).buffer);return ZU(E,H,A.shape.length,L,ee,F.shape.length,a,i,j),t.disposeData(A.dataId),t.disposeData(F.dataId),V.shape=k,V}var JU={kernelName:ao,backendName:"wasm",setupFunc:Ule,kernelFunc:Kle};function Tu(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=It.parseSliceParams(e,t,n),i=It.isSliceContinous(e.shape,s,a),u=o.readSync(e.dataId),l=o.makeOutput(a,e.dtype),p=b.computeStrides(e.shape),c=o.dataIdMap.get(l.dataId);if(i){let d=It.computeFlatOffset(s,p);return e.dtype==="string"?c.stringBytes=u.slice(d,d+b.sizeFromShape(a)):o.typedArrayFromHeap(l).set(u.subarray(d,d+b.sizeFromShape(a))),l}if(e.dtype==="string"){let d=Tp(u,s,a,e.shape,e.dtype);return c.stringBytes=d,l}let m=o.typedArrayFromHeap(l),f=e.shape.length;if(f===2)Vle(u,p[0],m,s,a);else if(f===3)jle(u,p[0],p[1],m,s,a);else if(f===4)Hle(u,p[0],p[1],p[2],m,s,a);else{let d=Tp(u,s,a,e.shape,e.dtype);m.set(d)}return l}function Vle(r,e,t,n,o){let s=0,a=n[0],i=n[1],u=a+o[0];for(let l=a;l<u;l++){let p=l*e+i;t.set(r.subarray(p,p+o[1]),s),s+=o[1]}}function jle(r,e,t,n,o,s){let a=0,i=o[0],u=o[1],l=o[2],p=i+s[0],c=u+s[1];for(let m=i;m<p;m++)for(let f=u;f<c;f++){let d=m*e+f*t+l;n.set(r.subarray(d,d+s[2]),a),a+=s[2]}}function Hle(r,e,t,n,o,s,a){let i=0,u=s[0],l=s[1],p=s[2],c=u+a[0],m=l+a[1],f=p+a[2],d=s[3];for(let h=u;h<c;h++)for(let g=l;g<m;g++)for(let y=p;y<f;y++){let x=h*e+g*t+y*n+d;o.set(r.subarray(x,x+a[3]),i),i+=a[3]}}var eK={kernelName:gs,backendName:"wasm",kernelFunc:Tu};function qle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n,i=s.reduce((y,x)=>y*x),u=I.getReshaped(o.shape,s,i),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,i),c=I.getSliceBeginCoords(a,s.length),m=I.getSliceSize(p,a,s.length),f=hr({inputs:{x:o},backend:t,attrs:{shape:u}}),d=gi({inputs:{x:f},backend:t,attrs:{perm:l}}),h=hr({inputs:{x:d},backend:t,attrs:{shape:p}}),g=Tu({inputs:{x:h},backend:t,attrs:{begin:c,size:m}});return t.disposeData(f.dataId),t.disposeData(d.dataId),t.disposeData(f.dataId),g}var tK={kernelName:is,backendName:"wasm",kernelFunc:qle};function ku(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var rK={kernelName:Wn,backendName:"wasm",kernelFunc:ku};var nK=ht(io);var oK;function Xle(r){oK=r.wasm.cwrap(Un,null,["number","number","number","number"])}function Yle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id;return oK(i,s,a,l),u}var sK={kernelName:Un,backendName:"wasm",setupFunc:Xle,kernelFunc:Yle};function fN(r){let{inputs:e,backend:t}=r,n=b.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=I.computeOutShape(e.map(f=>f.shape),n),s=e.filter(f=>b.sizeFromShape(f.shape)>0);if(s.length===1)return Rp({inputs:{x:s[0]},backend:t});let a=t.makeOutput(o,e[0].dtype);if(b.sizeFromShape(o)===0)return a;let i=s.map(f=>f.shape);if(I.assertParamsConsistent(i,n),s[0].dtype==="string"){let f=s.map(T=>{let k=b.sizeFromShape(T.shape.slice(n));return hr({inputs:{x:T},backend:t,attrs:{shape:[-1,k]}})}),d=f.map(T=>({vals:t.readSync(T.dataId),shape:T.shape}));o=I.computeOutShape(f.map(T=>T.shape),1);let h=f[0].shape[0]===1,g=bp(d,o,e[0].dtype,h),y=I.computeOutShape(s.map(T=>T.shape),n);a.shape=y;let x=t.dataIdMap.get(a.dataId);return x.stringBytes=I.fromStringArrayToUint8(g),f.forEach(T=>t.disposeData(T.dataId)),a}let u=b.sizeFromShape(s[0].shape.slice(0,n)),l=0,p=s.map(f=>{let d=b.sizeFromShape(f.shape.slice(n));return l+=d,d}),c=s.map(f=>t.typedArrayFromHeap(f)),m=t.typedArrayFromHeap(a);for(let f=0;f<u;f++){let d=f*l;for(let h=0;h<c.length;h++){let g=p[h],y=f*g,x=c[h].subarray(y,y+g);m.set(x,d),d+=g}}return a}var aK={kernelName:us,backendName:"wasm",kernelFunc:fN};var iK;function Qle(r){iK=r.wasm.cwrap(uo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Zle(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:c,dataFormat:m}=t,f=I.convertConv2DDataFormat(m),d=I.computeConv2DInfo(o.shape,s.shape,u,l,p,c,!1,f),h=d.filterHeight,g=d.filterWidth,y=d.padInfo.top,x=d.padInfo.right,T=d.padInfo.bottom,k=d.padInfo.left,v=d.dilationHeight,P=d.dilationWidth,A=d.strideHeight,F=d.strideWidth,E=d.inChannels,L=d.outChannels,U=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let K=n.makeOutput(d.outShape,"float32"),B=n.dataIdMap.get(K.dataId).id;return iK(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,y,x,T,k,U,v,P,A,F,E,L,B),K}var uK={kernelName:uo,backendName:"wasm",setupFunc:Qle,kernelFunc:Zle};var lK;function Jle(r){lK=r.wasm.cwrap(lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function epe(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,inputShape:p}=n,c=1,m=I.convertConv2DDataFormat(u),f=I.computeConv2DInfo(p,s.shape,a,c,i,l,!1,m),{batchSize:d,filterHeight:h,filterWidth:g,inChannels:y,inHeight:x,inWidth:T,outChannels:k,outHeight:v,outWidth:P,strideHeight:A,strideWidth:F}=f,E=h-1-f.padInfo.top,L=g-1-f.padInfo.left,U=f.dataFormat==="channelsLast",K=b.computeStrides(f.inShape),B=b.computeStrides(o.shape),[V,j,H]=b.computeStrides(s.shape),ee=K[0],Y=U?K[1]:K[2],ne=U?K[2]:1,oe=U?1:K[1],te=B[0],le=U?B[1]:B[2],ae=U?B[2]:1,ge=U?1:B[1],he=e.makeOutput(f.inShape,"float32"),Te=e.dataIdMap.get(he.dataId).id,Se=e.dataIdMap.get(o.dataId).id,Be=e.dataIdMap.get(s.dataId).id;return lK(Se,Be,d,h,g,x,T,y,v,P,k,A,F,E,L,V,j,H,ee,Y,ne,oe,te,le,ae,ge,Te),he}var pK={kernelName:lo,backendName:"wasm",setupFunc:Jle,kernelFunc:epe};var cK=ht(po);var mK=ht(co);var dN;(function(t){t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest"})(dN||(dN={}));var fK;function tpe(r){fK=r.wasm.cwrap(Ys,null,["number","number","number","number","array","number","number","number","number","number"])}function rpe(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:u,boxInd:l}=t,p=u.shape[0],[c,m]=a,f=[p,c,m,i.shape[3]],d=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=ku({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),d=e.dataIdMap.get(h.dataId));let g=d.id,y=e.dataIdMap.get(u.dataId).id,x=e.dataIdMap.get(l.dataId).id,T=e.makeOutput(f,"float32"),k=e.dataIdMap.get(T.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return fK(g,y,x,p,v,c,m,dN[o],s,k),h!=null&&e.disposeData(h.dataId),T}var dK={kernelName:Ys,backendName:"wasm",setupFunc:tpe,kernelFunc:rpe};var hK;function npe(r){hK=r.wasm.cwrap(Xs,null,["number","number","number","number","number","number"])}function ope(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([s],u),p=o;l!==null&&(p=gi({inputs:{x:o},attrs:{perm:l},backend:t}));let c=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumsum",[c],u);let m=t.makeOutput(p.shape,p.dtype),f=p.shape[c],d=t.dataIdMap.get(p.dataId).id,h=t.dataIdMap.get(m.dataId).id;hK(d,a?1:0,i?1:0,f,h,at[o.dtype]);let g=m;if(l!==null){let y=I.getUndoAxesPermutation(l);g=gi({inputs:{x:m},attrs:{perm:y},backend:t}),t.disposeData(p.dataId),t.disposeData(m.dataId)}return g}var gK={kernelName:Xs,backendName:"wasm",setupFunc:npe,kernelFunc:ope};var bK;function spe(r){bK=r.wasm.cwrap(Qs,null,["number","number","number","array","number","array","array","number","number"])}function ape(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],c=u*s,m=l*s,f=p/(s*s),d=a==="NHWC"?[i,c,m,f]:[i,f,c,m],h=e.makeOutput(d,"float32"),y=e.dataIdMap.get(o.dataId).id,x=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),T=new Uint8Array(new Int32Array(d).buffer),k=new Uint8Array(new Int32Array(b.computeStrides(d)).buffer),v=e.dataIdMap.get(h.dataId).id;return bK(y,s,a==="NHWC"?1:0,x,o.shape.length-1,T,k,d.length,v),h}var yK={kernelName:Qs,backendName:"wasm",setupFunc:spe,kernelFunc:ape};var xK;function ipe(r){xK=r.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function upe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:c}=t,m=l??[1,1],f=I.computeConv2DInfo(o.shape,s.shape,u,m,p,c,!0),d=f.filterHeight,h=f.filterWidth,g=f.padInfo.top,y=f.padInfo.right,x=f.padInfo.bottom,T=f.padInfo.left,k=f.dilationHeight,v=f.dilationWidth,P=f.strideHeight,A=f.strideWidth,F=f.inChannels,E=f.outChannels,L=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let U=n.makeOutput(f.outShape,"float32"),K=n.dataIdMap.get(U.dataId).id;return xK(a,o.shape[0],o.shape[1],o.shape[2],i,d,h,g,y,x,T,L,k,v,P,A,F,E,K),U}var TK={kernelName:mo,backendName:"wasm",setupFunc:ipe,kernelFunc:upe};var kK=ht(ho);var lpe=!1,IK=Nt(Zs,lpe,"bool");var CK=ht(go,"float32");function zx(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),hr({inputs:{x:o},backend:n,attrs:{shape:i}})}var vK={kernelName:ls,backendName:"wasm",kernelFunc:zx};function hN(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var wK={kernelName:ja,backendName:"wasm",kernelFunc:hN};var SK;function ppe(r){SK=r.wasm.cwrap(ea,null,["number","number","number","number","number","number"])}function cpe(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,u,l,p]=n.shape;return SK(s,i,u,l,p,a),o}var _K={kernelName:ea,backendName:"wasm",kernelFunc:cpe,setupFunc:ppe};var AK=ht(bo);var mpe=!1,NK=Nt(yo,mpe);var DK;function fpe(r){DK=r.wasm.cwrap(xo,null,["number","number","number","number","number","number","number"])}function dpe(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:u,scale:l}=t,p=e.dataIdMap.get(s.dataId).id,c=e.dataIdMap.get(a.dataId).id,m=e.dataIdMap.get(i.dataId).id,f=u!=null?e.dataIdMap.get(u.dataId).id:0,d=l!=null?e.dataIdMap.get(l.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(b.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return DK(p,c,m,f,d,o,g),h}var PK={kernelName:xo,backendName:"wasm",setupFunc:fpe,kernelFunc:dpe};var FK;function hpe(r){FK=r.wasm.cwrap(Cs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gpe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dataFormat:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,p,l,m),g=ml[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,k=0;if(a!=null){let ae=n.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==T)throw new Error(`FusedConv2D bias shape (${ae.shape}) does not match the number of output channels (${T})`);k=ae.id}let v=h.filterHeight,P=h.filterWidth,A=h.padInfo.top,F=h.padInfo.right,E=h.padInfo.bottom,L=h.padInfo.left,U=h.dilationHeight,K=h.dilationWidth,B=h.strideHeight,V=h.strideWidth,j=h.inChannels,H=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,Y=h.inHeight,ne=h.inWidth;if(c!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),te=n.dataIdMap.get(oe.dataId).id,le=i==null?0:n.dataIdMap.get(i.dataId).id;return FK(y,ee,Y,ne,x,v,P,k,A,F,E,L,H,U,K,B,V,j,T,g,le,d||0,te),oe}var MK={kernelName:Cs,backendName:"wasm",setupFunc:hpe,kernelFunc:gpe};var EK;function bpe(r){EK=r.wasm.cwrap(vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ype(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dataFormat:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,p,l,m,!0),g=ml[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,k=0;if(a!=null){let ae=n.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==T)throw new Error(`FusedDepthwiseConv2D bias shape (${ae.shape}) does not match the number of output channels (${T})`);k=ae.id}let v=h.filterHeight,P=h.filterWidth,A=h.padInfo.top,F=h.padInfo.right,E=h.padInfo.bottom,L=h.padInfo.left,U=h.dilationHeight,K=h.dilationWidth,B=h.strideHeight,V=h.strideWidth,j=h.inChannels,H=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,Y=h.inHeight,ne=h.inWidth;if(c!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),te=n.dataIdMap.get(oe.dataId).id,le=i==null?0:n.dataIdMap.get(i.dataId).id;return EK(y,ee,Y,ne,x,v,P,k,A,F,E,L,H,U,K,B,V,j,T,g,le,d||0,te),oe}var RK={kernelName:vs,backendName:"wasm",setupFunc:bpe,kernelFunc:ype};var LK;function xpe(r){LK=r.wasm.cwrap(ta,null,["number","number","number","number","number","number","array","number"])}function Tpe(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,u]=pb.prepareAndValidate(n,o),l=e.makeOutput(s,n.dtype);if(a===0)return l;let p=o.shape,c=p[p.length-1],f=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),y=e.dataIdMap.get(l.dataId).id;return LK(f,at[n.dtype],h,a,c,i,g,y),l}var $K={kernelName:ta,backendName:"wasm",setupFunc:xpe,kernelFunc:Tpe};var BK;function kpe(r){BK=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Ipe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=b.parseAxisParam(a,o.shape)[0],l=e.readSync(s.dataId),p=o.shape[u];for(let E=0;E<l.length;++E){let L=l[E];b.assert(L<=p-1&&L>=0,()=>`GatherV2: the index value ${L} is not in [0, ${p-1}]`)}let c=I.segment_util.collectGatherOpShapeInfo(o,s,u,i),m=hr({inputs:{x:o},attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]},backend:e}),f=b.sizeFromShape(s.shape),d=hr({inputs:{x:s},attrs:{shape:[c.batchSize,f/c.batchSize]},backend:e}),h=[c.batchSize,c.outerSize,f/c.batchSize,c.sliceSize],g=e.makeOutput(h,o.dtype);if(b.sizeFromShape(o.shape)===0)return g;let y=m.shape.length-1,T=e.dataIdMap.get(m.dataId).id,v=e.dataIdMap.get(d.dataId).id,P=e.dataIdMap.get(g.dataId).id,A=new Uint8Array(new Int32Array(b.computeStrides(m.shape)).buffer),F=new Uint8Array(new Int32Array(b.computeStrides(h)).buffer);return BK(T,at[o.dtype],A,y,v,c.batchSize,F,P),e.disposeData(m.dataId),e.disposeData(d.dataId),g.shape=c.outputShape,g}var OK={kernelName:ps,backendName:"wasm",setupFunc:kpe,kernelFunc:Ipe};var Cpe=!1,zK=Nt(ra,Cpe,"bool");var vpe=!1,GK=Nt(To,vpe,"bool");var WK;function wpe(r){WK=r.wasm.cwrap(na,null,["number","number","number","number"])}function Spe(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(b.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;WK(o,at[e.dtype],t,a)}return s}var UK={kernelName:na,backendName:"wasm",setupFunc:wpe,kernelFunc:Spe};var _pe=!1,KK=Nt(oa,_pe,"bool");var Ape=!1,VK=Nt(sa,Ape,"bool");var jK=ht(ko);var Npe=!1,HK=Nt(aa,Npe,"bool");var qK;function Dpe(r){qK=r.wasm.cwrap(Io,null,["number","number","number","number"])}function Ppe(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=kn(a,o,e);if(f){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let d=l.shape.length;I.assertAxesAreInnerMostDims("max",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),y=b.sizeFromShape(g),x=e.makeOutput(h,a.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;qK(u,at[a.dtype],y,T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,m);x.shape=T}return x}var XK={kernelName:Io,backendName:"wasm",setupFunc:Dpe,kernelFunc:Ppe};var Fpe=!1,YK=Nt(Co,Fpe);var QK;function Mpe(r){QK=r.wasm.cwrap(vo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Epe(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;b.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=t,p=I.computePool2DInfo(o.shape,a,i,1,u,l),c=p.filterHeight,m=p.filterWidth,f=p.padInfo.top,d=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,x=p.dilationWidth,T=p.strideHeight,k=p.strideWidth,v=p.inChannels,P=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let A=n.makeOutput(p.outShape,"float32"),F=n.dataIdMap.get(A.dataId).id;return QK(s,o.shape[0],o.shape[1],o.shape[2],c,m,f,d,h,g,y,x,T,k,v,P,F),A}var ZK={kernelName:vo,backendName:"wasm",setupFunc:Mpe,kernelFunc:Epe};var JK;function Rpe(r){JK=r.wasm.cwrap(wo,null,["number, number, number"])}function Lpe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=kn(a,o,e),d=c;if(f){let k=e.dataIdMap.get(p.dataId).id;k!==i&&(l=p,u=k,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("mean",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),y=b.sizeFromShape(g),x=l;l.dtype!=="float32"&&(x=ku({backend:e,inputs:{x:l},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(x.dataId).id);let T=e.makeOutput(h,"float32");if(b.sizeFromShape(l.shape)!==0){let k=e.dataIdMap.get(T.dataId).id;JK(u,y,k)}if(f&&e.disposeData(p.dataId),s){let k=I.expandShapeToKeepDim(T.shape,m);T.shape=k}return l.dtype!=="float32"&&e.disposeData(x.dataId),T}var eV={kernelName:wo,backendName:"wasm",setupFunc:Rpe,kernelFunc:Lpe};var tV;function $pe(r){tV=r.wasm.cwrap(So,null,["number","number","number","number"])}function Bpe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=kn(a,o,e);if(f){let T=e.dataIdMap.get(p.dataId).id;T!==i&&(l=p,u=T)}let d=l.shape.length;I.assertAxesAreInnerMostDims("min",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),y=b.sizeFromShape(g),x=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;tV(u,at[a.dtype],y,T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,m);x.shape=T}return x}var rV={kernelName:So,backendName:"wasm",setupFunc:$pe,kernelFunc:Bpe};var Ope=!1,nV=Nt(_o,Ope);var gN;(function(t){t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric"})(gN||(gN={}));var oV;function zpe(r){oV=r.wasm.cwrap(Ao,null,["number","array","number","number","array","array","number","number"])}function Gpe(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((d,h)=>d[0]+e.shape[h]+d[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),p=n.map(d=>d[0]),c=n.map(d=>d[1]),m=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(c).buffer);return oV(a,l,e.shape.length,at[e.dtype],m,f,gN[o],u),i}var sV={kernelName:Ao,backendName:"wasm",kernelFunc:Gpe,setupFunc:zpe};var Wpe=!0,aV=Nt(No,Wpe);var iV=ht(cs);function Gm(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var uV;function Upe(r){uV=r.wasm.cwrap(ua,"number",["number","number","number","number","number"])}function Kpe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:u}=t,l=e.dataIdMap.get(i.dataId).id,p=e.dataIdMap.get(u.dataId).id,c=uV(l,p,s,o,a),{pSelectedIndices:m,selectedSize:f,pSelectedScores:d,pValidOutputs:h}=Gm(e,c);return e.wasm._free(d),e.wasm._free(h),e.makeOutput([f],"int32",m)}var lV={kernelName:ua,backendName:"wasm",setupFunc:Upe,kernelFunc:Kpe};var pV;function Vpe(r){pV=r.wasm.cwrap($i,"number",["number","number","number","number","number","bool"])}function jpe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,c=e.dataIdMap.get(l.dataId).id,m=pV(p,c,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Gm(e,m);e.wasm._free(h);let y=e.makeOutput([d],"int32",f),x=e.makeOutput([],"int32",g);return[y,x]}var cV={kernelName:$i,backendName:"wasm",setupFunc:Vpe,kernelFunc:jpe};var mV;function Hpe(r){mV=r.wasm.cwrap(la,"number",["number","number","number","number","number","number"])}function qpe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,c=e.dataIdMap.get(l.dataId).id,m=mV(p,c,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Gm(e,m);e.wasm._free(g);let y=e.makeOutput([d],"int32",f),x=e.makeOutput([d],"float32",h);return[y,x]}var fV={kernelName:la,backendName:"wasm",setupFunc:Hpe,kernelFunc:qpe};var Xpe=!1,dV=Nt(ia,Xpe,"bool");var hV;function Ype(r){hV=r.wasm.cwrap(pa,null,["number","number","number","number","number"])}function Qpe(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,u=t.makeOutput([...o.shape,s],"int32"),l=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(o.dataId).id;return hV(c,s,a,i,l),u}var gV={kernelName:pa,backendName:"wasm",setupFunc:Ype,kernelFunc:Qpe};function Zpe(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var bV={kernelName:ms,backendName:"wasm",kernelFunc:Zpe};function Jpe(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return zx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let c=zx({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(c),c}),l=fN({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeData(p.dataId)),l}var yV={kernelName:fs,backendName:"wasm",kernelFunc:Jpe};var xV;function ece(r){xV=r.wasm.cwrap(Do,null,["number","array","number","number","array","array","number","number"])}function tce(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(b.sizeFromShape(e.shape)===0)return hN({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(e.shape).buffer),c=n.map(h=>h[0]),m=n.map(h=>h[1]),f=new Uint8Array(new Int32Array(c).buffer),d=new Uint8Array(new Int32Array(m).buffer);return xV(a,p,e.shape.length,at[e.dtype],f,d,o,l),i}var Gx={kernelName:Do,backendName:"wasm",kernelFunc:tce,setupFunc:ece};var rce=!1,TV=Nt(Po,rce);var kV;function nce(r){kV=r.wasm.cwrap(Fo,null,["number","number","number"])}function oce(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=s,u=n,l=u;u.dtype!=="float32"&&(l=ku({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(l.dataId).id);let p=t.makeOutput(n.shape,"float32"),c=t.dataIdMap.get(p.dataId).id;return kV(i,a,c),u.dtype!=="float32"&&t.disposeData(l.dataId),p}var IV={kernelName:Fo,backendName:"wasm",setupFunc:nce,kernelFunc:oce};var CV;function sce(r){CV=r.wasm.cwrap(ca,null,["number","number","number","number"])}function ace(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=kn(a,o,e),d=c;if(f){let T=e.dataIdMap.get(p.dataId).id;T!==i&&(l=p,u=T,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("prod",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),y=b.sizeFromShape(g),x=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;CV(u,y,at[x.dtype],T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,m);x.shape=T}return x}var vV={kernelName:ca,backendName:"wasm",setupFunc:sce,kernelFunc:ace};var ice=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=xp(n,o,s,a),u=e.makeOutput([i.length],a);return e.typedArrayFromHeap(u).set(i),u},wV={kernelName:Ha,backendName:"wasm",kernelFunc:ice};var uce=!0,SV=Nt(fo,uce);var _V=ht(Mo);var AV=ht(Ro);var NV;function lce(r){NV=r.wasm.cwrap(Eo,null,["number","number","number","number","number","number","number","number","number","number"])}function pce(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,c,m,f]=o.shape,d=[p,u,l,f],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=ku({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let y=h.id,x=e.makeOutput(d,"float32");if(b.sizeFromShape(o.shape)===0)return x;let T=e.dataIdMap.get(x.dataId).id;return NV(y,p,c,m,f,u,l,s?1:0,a?1:0,T),g!=null&&e.disposeData(g.dataId),x}var DV={kernelName:Eo,backendName:"wasm",setupFunc:lce,kernelFunc:pce};var PV;function cce(r){PV=r.wasm.cwrap(ma,null,["number","array","number","array","number","number"])}function mce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=b.parseAxisParam(s,o.shape);if(o.shape.length===0)return Rp({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),c=new Uint8Array(new Int32Array(o.shape).buffer);PV(u,p,a.length,c,o.shape.length,l);let m=hr({inputs:{x:i},attrs:{shape:o.shape},backend:t});return t.disposeData(i.dataId),m}var FV={kernelName:ma,backendName:"wasm",kernelFunc:mce,setupFunc:cce};var MV;function fce(r){MV=r.wasm.cwrap(Ta,null,["number","number","number","number","number","number","number","number","array","number","number"])}function dce(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(u.dataId).id,[c,m,f,d]=o.shape,[h,g]=I.getImageCenter(i,m,f),y=a===0,x=255,T=typeof a=="number"?[a,a,a,y?0:x]:[...a,x],k=new Uint8Array(new Int32Array(T).buffer);return MV(l,c,m,f,d,s,h,g,k,T.length,p),u}var EV={kernelName:Ta,backendName:"wasm",kernelFunc:dce,setupFunc:fce};var RV=ht(fa);var LV=ht(Lo);var $V;function hce(r){$V=r.wasm.cwrap(da,null,["number","number","number","number","number","number","array","number","number"])}function gce(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(b.sizeFromShape(a)===0)return i;let{sliceRank:u,numUpdates:l,sliceSize:p,strides:c,outputSize:m}=mb.calculateShapes(s,o,a),d=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(c).buffer),x=e.dataIdMap.get(i.dataId).id;return $V(d,g,at[s.dtype],u,l,p,y,m,x),i}var BV={kernelName:da,backendName:"wasm",setupFunc:hce,kernelFunc:gce};var OV;function bce(r){OV=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function yce(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(l.dataId).id,c=n.shape.length,m=o.shape.length,f=c===0||c>1||m===1?1:b.sizeFromShape(o.shape.slice(1));return OV(a,i,u,f,p),l}var zV={kernelName:hs,backendName:"wasm",kernelFunc:yce,setupFunc:bce};var GV;function xce(r){GV=r.wasm.cwrap(Bo,null,["number","number"])}function Tce(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return b.sizeFromShape(o.shape)===0||GV(n,s),o}var WV={kernelName:"Sigmoid",backendName:"wasm",setupFunc:xce,kernelFunc:Tce};var UV=ht($o);var KV;function kce(r){KV=r.wasm.cwrap(Go,null,["number","number","number","number"])}function Ice(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],u=b.sizeFromShape(t.shape)/i;return b.sizeFromShape(s.shape)===0||KV(o,a,i,u),s}var VV={kernelName:Go,backendName:"wasm",setupFunc:kce,kernelFunc:Ice};function Cce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n,i=b.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let P=1+s.length;P<o.shape.length;++P)u.push([0,0]);let l=Gx.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(l.shape,s,i,!1),c=I.getPermuted(p.length,s.length,!1),m=I.getReshapedPermuted(l.shape,s,i,!1),h=hr({inputs:{x:l},backend:t,attrs:{shape:p}}),x=gi({inputs:{x:h},backend:t,attrs:{perm:c}}),v=hr({inputs:{x},backend:t,attrs:{shape:m}});return t.disposeData(l.dataId),t.disposeData(h.dataId),t.disposeData(x.dataId),v}var jV={kernelName:bs,backendName:"wasm",kernelFunc:Cce};function vce(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=b.parseAxisParam(a,o.shape)[0],u=I.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(c=>{let m=[...p];m[i]=c;let f=Tu({inputs:{x:o},attrs:{begin:l,size:m},backend:n});return l[i]+=c,f})}var HV={kernelName:ys,backendName:"wasm",kernelFunc:vce};var qV=ht(Oo);var XV=ht(Xa);var wce=!0,YV=Nt(Wo,wce);var QV;function Sce(r){QV=r.wasm.cwrap(ks,null,["number","number","number","number"])}function _ce(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),u=e.dataIdMap.get(i.dataId).id;return QV(a,o,at[s.dtype],u),i}var ZV={kernelName:ks,backendName:"wasm",setupFunc:Sce,kernelFunc:_ce};var JV;function Ace(r){JV=r.wasm.cwrap(ga,null,["number","array","number","array","array","array","array","array","number","number"])}function Nce(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:x,end:T,strides:k}=It.sliceInfo(o.shape,s,a,i,u,l,p,c,m),v;if(h)v=hr({inputs:{x:o},backend:e,attrs:{shape:d}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let P=It.computeOutShape(x,T,k),A=Tu({inputs:{x:o},backend:e,attrs:{begin:x,size:P}});v=hr({inputs:{x:A},backend:e,attrs:{shape:d}}),e.disposeData(A.dataId)}else{let P=e.makeOutput(f,"float32"),A=e.dataIdMap.get(o.dataId).id,F=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),E=new Uint8Array(new Int32Array(x).buffer),L=new Uint8Array(new Int32Array(T).buffer),U=new Uint8Array(new Int32Array(k).buffer),K=new Uint8Array(new Int32Array(f).buffer),B=new Uint8Array(new Int32Array(b.computeStrides(f)).buffer),V=e.dataIdMap.get(P.dataId).id;JV(A,F,o.shape.length,E,L,U,K,B,f.length,V),v=hr({inputs:{x:P},backend:e,attrs:{shape:d}}),e.disposeData(P.dataId)}return v}var e4={kernelName:ga,backendName:"wasm",setupFunc:Ace,kernelFunc:Nce};var Dce=!0,t4=Nt(Uo,Dce);var r4;function Pce(r){r4=r.wasm.cwrap(zo,null,["number","number","number","number"])}function Fce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=kn(a,o,e),d=c;if(f){let T=e.dataIdMap.get(p.dataId).id;T!==i&&(l=p,u=T,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("sum",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),y=b.sizeFromShape(g),x=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;r4(u,y,at[x.dtype],T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,m);x.shape=T}return x}var n4={kernelName:zo,backendName:"wasm",setupFunc:Pce,kernelFunc:Fce};var o4=ht(ba);var s4=ht(Ko);var a4;function Mce(r){a4=r.wasm.cwrap(An,null,["number","array","number","array","number","number"])}function Ece(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let m=0;m<i.length;m++)i[m]=o.shape[m]*a[m];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(i).buffer),p=t.makeOutput(i,o.dtype),c=t.dataIdMap.get(p.dataId).id;return a4(s,u,o.shape.length,l,i.length,at[p.dtype],c),p}var i4={kernelName:An,backendName:"wasm",setupFunc:Mce,kernelFunc:Ece};var u4;function Rce(r){u4=r.wasm.cwrap(ya,null,["number","array","number","number","number","bool","number","number"])}var Lce=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=e.makeOutput(u,n.dtype),p=e.dataIdMap.get(l.dataId).id,c=e.makeOutput(u,"int32"),m=e.dataIdMap.get(c.dataId).id;return u4(a,i,n.shape.length,at[n.dtype],o,s,p,m),[l,c]},l4={kernelName:ya,backendName:"wasm",setupFunc:Rce,kernelFunc:Lce};var p4;function $ce(r){p4=r.wasm.cwrap(xa,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Bce(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],y=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),x=e.makeOutput(g,o.dtype),T=e.dataIdMap.get(x.dataId).id,v=e.dataIdMap.get(o.dataId).id,A=e.dataIdMap.get(s.dataId).id,F=a==="nearest"?1:2,E;switch(i){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return p4(v,A,s.shape[0]>1,p,d,h,f,m,c,y,o.shape.length-1,F,E,u,T),x}var c4={kernelName:xa,backendName:"wasm",setupFunc:$ce,kernelFunc:Bce};function Oce(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,u=new Array(i-1),l=0;for(let f=0;f<i;f++)f!==s&&(u[l++]=o.shape[f]);let p=new Array(a),c=new Array(i).fill(0),m=o.shape.slice();m[s]=1;for(let f=0;f<p.length;f++)c[s]=f,p[f]=Tu({inputs:{x:o},attrs:{begin:c,size:m},backend:t});return p.map(({dataId:f,dtype:d})=>({dataId:f,dtype:d,shape:u}))}var m4={kernelName:xs,backendName:"wasm",kernelFunc:Oce};function zce(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var f4={kernelName:Ts,backendName:"wasm",kernelFunc:zce};var Gce=[LU,$U,OU,KU,jU,qU,YU,JU,tK,rK,nK,sK,aK,uK,pK,cK,mK,dK,gK,yK,TK,kK,IK,CK,vK,wK,_K,AK,NK,RU,PK,MK,RK,$K,OK,zK,GK,zU,UK,KK,VK,jK,HK,XK,YK,ZK,eV,rV,nV,sV,aV,iV,lV,cV,fV,dV,gV,bV,yV,Gx,TV,IV,vV,wV,SV,_V,AV,QU,DV,FV,EV,LV,RV,BV,zV,WV,UV,eK,VV,jV,HV,qV,XV,YV,ZV,e4,t4,n4,o4,s4,i4,l4,c4,WU,m4,f4];for(let r of Gce)Wi(r);var bN=W();bN.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));bN.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(bN.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var IN=Tl(d4());var h4='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}';var b4=Tl(g4());var Kx=class extends os{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(T4),vN=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Wa(this,jo())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}move(e,t,n,o,s){let a=this.dataIdNextNumber++;if(o==="string"){let p=t;this.dataIdMap.set(e,{id:a,stringBytes:p,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let i=b.sizeFromShape(n),u=i*b.bytesPerElement(o),l=this.wasm._malloc(u);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(a,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:o,stringBytes:s}=this.dataIdMap.get(e);if(n==="string")return s;let a=this.wasm.HEAPU8.slice(t,t+b.sizeFromShape(o)*b.bytesPerElement(n));return Uce(a.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=b.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=b.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,a);case"int32":return new Int32Array(o,s,a);case"bool":return new Uint8Array(o,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Wce(r){return(e,t)=>(b.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function y4(r,e,t){if(Vx!=null)return Vx;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),xg!=null&&xg[n]!=null?xg[n]:t+n}async function x4(){let[r,e]=await Promise.all([W().getAsync("WASM_HAS_SIMD_SUPPORT"),W().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){let l=h4,p=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(p)}return i.endsWith(".wasm")?y4(r,e,yg??u):u+i},CN&&(o.instantiateWasm=Wce(y4(r,e,yg??"")));let s=!1;o.onAbort=()=>{if(s||Tg)return;Tg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&r&&Vx==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+IN.default.toString()],{type:"text/javascript"}),a=(0,IN.default)(o)):a=(0,b4.default)(o),a.then(i=>{s=!0,Tg=!1;let u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},t({wasm:i})})})}function Uce(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var Kce=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Vx=null,yg=null,xg={},Tg=!1,CN=!1;function Vce(r,e=!1){if(oI("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Tg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Vx=r,CN=e}function jce(r,e=!1){if(Tg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")yg=r;else{xg=r;let t=Kce.filter(n=>xg[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}CN=e}var T4=-1,vN=-1;function Hce(r){T4=r}function qce(){if(vN===-1)throw new Error("WASM backend not initialized.");return vN}var Xce="0.0.0";var Yce=2;Vu("wasm",async()=>{let{wasm:r}=await x4();return new Kx(r)},Yce);var fl="3.10.0-20211026",C8r={tfjs:fl,"tfjs-core":fl,"tfjs-data":fl,"tfjs-layers":fl,"tfjs-converter":fl,"tfjs-backend-cpu":fl,"tfjs-backend-webgl":fl,"tfjs-backend-wasm":fl};export{as as Abs,ki as Acos,Ii as Acosh,ep as AdadeltaOptimizer,tp as AdagradOptimizer,rp as AdamOptimizer,np as AdamaxOptimizer,_n as Add,no as AddN,Ci as All,vi as Any,oo as ArgMax,Va as ArgMin,wi as Asin,Si as Asinh,_i as Atan,Ni as Atan2,Ai as Atanh,so as AvgPool,Au as AvgPool3D,Yp as AvgPool3DGrad,Xp as AvgPoolGrad,Kx as BackendWasm,ao as BatchMatMul,is as BatchToSpaceND,Qp as Bincount,Zp as BroadcastArgs,VN as BroadcastTo,xv as Callback,_C as CallbackList,Wn as Cast,io as Ceil,Un as ClipByValue,Nu as Complex,Du as ComplexAbs,us as Concat,uo as Conv2D,Jp as Conv2DBackpropFilter,lo as Conv2DBackpropInput,Pu as Conv3D,ec as Conv3DBackpropFilterV2,tc as Conv3DBackpropInputV2,po as Cos,co as Cosh,Ys as CropAndResize,Xs as Cumsum,NC as CustomCallback,Wa as DataStorage,rc as DenseBincount,Qs as DepthToSpace,mo as DepthwiseConv2dNative,nc as DepthwiseConv2dNativeBackpropFilter,oc as DepthwiseConv2dNativeBackpropInput,sc as Diag,Fu as Dilation2D,sf as Dilation2DBackpropFilter,of as Dilation2DBackpropInput,xk as ENV,Tv as EarlyStopping,Mu as Einsum,ho as Elu,ac as EluGrad,Hg as Environment,Zs as Equal,Di as Erf,go as Exp,ls as ExpandDims,Js as Expm1,ic as FFT,ja as Fill,ea as FlipLeftRight,bo as Floor,yo as FloorDiv,vl as FromPixels,xo as FusedBatchNorm,Cs as FusedConv2D,vs as FusedDepthwiseConv2D,dx as GPGPUContext,ta as GatherNd,ps as GatherV2,Yv as GraphModel,ra as Greater,To as GreaterEqual,AC as History,uc as IFFT,Kn as Identity,Eu as Imag,Mt as InputSpec,Pi as IsFinite,Fi as IsInf,Mi as IsNan,os as KernelBackend,Ru as LRN,pc as LRNGrad,Xb as LayerVariable,Zo as LayersModel,na as LeakyRelu,oa as Less,sa as LessEqual,lc as LinSpace,ko as Log,Ei as Log1p,jN as LogSoftmax,aa as LogicalAnd,Ri as LogicalNot,Cl as LogicalOr,Nh as MathBackendCPU,jh as MathBackendWebGL,Io as Max,vo as MaxPool,Lu as MaxPool3D,mc as MaxPool3DGrad,cc as MaxPoolGrad,fc as MaxPoolWithArgmax,Co as Maximum,wo as Mean,So as Min,_o as Minimum,Ao as MirrorPad,Li as Mod,op as MomentumOptimizer,dc as Multinomial,No as Multiply,cs as Neg,ua as NonMaxSuppressionV3,$i as NonMaxSuppressionV4,la as NonMaxSuppressionV5,ia as NotEqual,kD as OP_SCOPE_SUFFIX,pa as OneHot,ms as OnesLike,Zr as Optimizer,ni as OptimizerConstructors,fs as Pack,Do as PadV2,ame as Pool,Po as Pow,Fo as Prelu,ca as Prod,sp as RMSPropOptimizer,Bs as RNN,Ha as Range,Nk as Rank,$u as Real,fo as RealDiv,Bi as Reciprocal,or as Reduction,Mo as Relu,Ro as Relu6,ds as Reshape,Eo as ResizeBilinear,gc as ResizeBilinearGrad,qa as ResizeNearestNeighbor,hc as ResizeNearestNeighborGrad,ma as Reverse,Ta as RotateWithOffset,fa as Round,Lo as Rsqrt,su as SGDOptimizer,da as ScatterNd,hs as Select,Oi as Selu,im as Sequential,Bo as Sigmoid,zi as Sign,$o as Sin,ha as Sinh,gs as Slice,Go as Softmax,Gi as Softplus,bs as SpaceToBatchND,bc as SparseFillEmptyRows,yc as SparseReshape,xc as SparseSegmentMean,Tc as SparseSegmentSum,Bu as SparseToDense,ys as SplitV,Oo as Sqrt,Xa as Square,Wo as SquaredDifference,ks as Step,ga as StridedSlice,Ou as StringNGrams,kc as StringSplit,Ic as StringToHashBucketFast,Uo as Sub,zo as Sum,hn as SymbolicTensor,ba as Tan,Ko as Tanh,Ye as Tensor,xt as TensorBuffer,An as Tile,ya as TopK,xa as Transform,Vo as Transpose,Cc as Unique,xs as Unpack,zu as UnsortedSegmentSum,Uu as Variable,Ts as ZerosLike,Is as _FusedMatMul,zt as abs,sI as acos,aI as acosh,X as add,iI as addN,yf as all,Ec as any,Qi as argMax,uI as argMin,lI as asin,pI as asinh,cI as atan,mI as atan2,fI as atanh,El as avgPool,xf as avgPool3d,y0 as backend,I as backend_util,Vq as basicLSTMCell,Za as batchNorm,bI as batchNorm2d,yI as batchNorm3d,xI as batchNorm4d,Rl as batchToSpaceND,Tf as bincount,pLe as booleanMaskAsync,TI as broadcastArgs,Ll as broadcastTo,lb as browser,Ce as buffer,iJ as callbacks,Q as cast,kI as ceil,Lr as clipByValue,Nn as clone,Hn as complex,lt as concat,II as concat1d,CI as concat2d,vI as concat3d,wI as concat4d,RP as constraints,kf as conv1d,qn as conv2d,If as conv2dTranspose,Cf as conv3d,SI as conv3dTranspose,fme as copyRegisteredKernels,$l as cos,vf as cosh,_b as cosineWindow,wf as cumsum,pn as customGrad,eE as data,_I as denseBincount,oI as deprecationWarn,AI as depthToSpace,Ji as depthwiseConv2d,lJ as deregisterOp,Ki as device_util,T6 as diag,NI as dilation2d,abe as disableDeprecationWarnings,Ee as dispose,ibe as disposeVariables,pe as div,DI as divNoNan,A6 as dot,K0 as dropout,PI as einsum,eu as elu,sbe as enableDebugMode,obe as enableProdMode,V0 as enclosingPowerOfTwo,jo as engine,W as env,Kr as equal,FI as erf,cr as exp,_r as expandDims,MI as expm1,$c as eye,Hl as fft,Ca as fill,fbe as findBackend,dbe as findBackendFactory,tu as floor,bf as floorDiv,wB as forceHalfFloat,Ds as fused,Ja as gather,W0 as gatherND,pb as gather_util,cbe as getBackend,Ik as getGradient,uf as getKernel,qg as getKernelsForBackend,qce as getThreadsCount,S$ as gpgpu_util,J6 as grad,e5 as grads,nr as greater,qo as greaterEqual,Hu as ifft,Bl as imag,Mn as image,w$e as inTopKAsync,tF as initializers,BC as input,Ur as io,Gf as irfft,U6 as isFinite,V6 as isInf,EI as isNaN,Vt as keep,Tr as kernel_impls,LF as layers,Ol as leakyRelu,Sf as less,Xo as lessEqual,F2 as linalg,RI as linspace,$J as loadGraphModel,TQ as loadLayersModel,LI as localResponseNormalization,$r as log,zl as log1p,a5 as logSigmoid,_f as logSoftmax,zI as logSumExp,jr as logicalAnd,Gl as logicalNot,Nf as logicalOr,y5 as logicalXor,iVe as losses,Ve as matMul,t0 as math,Qr as max,Wl as maxPool,Df as maxPool3d,GI as maxPoolWithArgmax,Xn as maximum,Lt as mean,gf as memory,v5 as meshgrid,$F as metrics,Bc as min,ru as minimum,WI as mirrorPad,UI as mod,yQ as model,BF as models,Oc as moments,LLe as movingAverage,R as mul,F5 as multiRNNCell,KI as multinomial,et as neg,lC as nextFrame,wb as norm,ti as notEqual,Xi as oneHot,mr as ones,Ar as onesLike,_ as op,$5 as outerProduct,Pn as pad,z5 as pad1d,W5 as pad2d,K5 as pad3d,j5 as pad4d,Q5 as pool,Fn as pow,Kl as prelu,qk as print,Pf as prod,ube as profile,r8 as rand,p8 as randomGamma,kb as randomNormal,va as randomUniform,nu as range,pbe as ready,ju as real,JI as reciprocal,Vu as registerBackend,kQ as registerCallbackConstructor,HN as registerGradient,Wi as registerKernel,uJ as registerOp,OF as regularizers,Hr as relu,Mf as relu6,mbe as removeBackend,$ as reshape,xr as reverse,x8 as reverse1d,k8 as reverse2d,C8 as reverse3d,w8 as reverse4d,ql as rfft,Ef as round,Rf as rsqrt,ce as scalar,z0 as scatterND,mb as scatter_util,Lf as selu,eC as separableConv2d,xQ as sequential,J as serialization,fq as setBackend,hbe as setPlatform,Hce as setThreadsCount,Vce as setWasmPath,jce as setWasmPaths,Uw as setWebGLContext,tC as setdiff1dAsync,vm as shared,ln as sigmoid,rC as sign,EKe as signal,$f as sin,Bf as sinh,Ue as slice,Of as slice1d,Ib as slice2d,zf as slice3d,Gc as slice4d,It as slice_util,jl as softmax,ei as softplus,Ul as spaceToBatchND,Kf as sparse,Sb as sparseToDense,NKe as spectral,Ir as split,$t as sqrt,Xe as square,Wf as squaredDifference,cn as squeeze,fr as stack,ou as step,nC as stridedSlice,Rb as string,ue as sub,me as sum,Ui as sumOutType,oC as tan,Zi as tanh,Er as tensor,Wt as tensor1d,ri as tensor2d,Zk as tensor3d,Q8 as tensor4d,Z8 as tensor5d,J8 as tensor6d,As as tensor_util,b0 as test_util,G as tidy,Vr as tile,lbe as time,sC as topk,ap as train,qe as transpose,Xl as truncatedNormal,Cb as unique,mme as unregisterGradient,cme as unregisterKernel,aC as unsortedSegmentSum,Br as unstack,Kt as upcastType,b as util,t5 as valueAndGrad,r5 as valueAndGrads,iC as variable,bb as variableGrads,C8r as version,BJ as version_converter,mq as version_core,m9 as version_cpu,hd as version_layers,Xce as version_wasm,tne as version_webgl,q6t as webgl,g$ as webgl_util,MU as webgpu,Gt as where,Uf as whereAsync,Tt as zeros,De as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
