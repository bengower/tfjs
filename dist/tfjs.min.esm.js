var Qq=Object.create;var db=Object.defineProperty;var Zq=Object.getOwnPropertyDescriptor;var Jq=Object.getOwnPropertyNames;var ej=Object.getPrototypeOf,tj=Object.prototype.hasOwnProperty;var rj=r=>db(r,"__esModule",{value:!0});var Ar=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Xe=(r,e)=>{for(var t in e)db(r,t,{get:e[t],enumerable:!0})},nj=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Jq(e))!tj.call(r,o)&&(t||o!=="default")&&db(r,o,{get:()=>e[o],enumerable:!(n=Zq(e,o))||n.enumerable});return r},Np=(r,e)=>nj(rj(db(r!=null?Qq(ej(r)):{},"default",!e&&r&&r.__esModule?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var u2=Ar((ghe,i2)=>{i2.exports=Jt;var vs=null;try{vs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Jt(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Jt.prototype.__isLong__;Object.defineProperty(Jt.prototype,"__isLong__",{value:!0});function qn(r){return(r&&r.__isLong__)===!0}Jt.isLong=qn;var Z0={},J0={};function Rp(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=J0[r],n)?n:(t=er(r,(r|0)<0?-1:0,!0),o&&(J0[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=Z0[r],n)?n:(t=er(r,r<0?-1:0,!1),o&&(Z0[r]=t),t))}Jt.fromInt=Rp;function As(r,e){if(isNaN(r))return e?Ep:ws;if(e){if(r<0)return Ep;if(r>=n2)return a2}else{if(r<=-t2)return Hn;if(r+1>=t2)return s2}return r<0?As(-r,e).neg():er(r%Bm|0,r/Bm|0,e)}Jt.fromNumber=As;function er(r,e,t){return new Jt(r,e,t)}Jt.fromBits=er;var yb=Math.pow;function dC(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return ws;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return dC(r.substring(1),e,t).neg();for(var o=As(yb(t,8)),s=ws,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),p=parseInt(r.substring(a,a+i),t);if(i<8){var u=As(yb(t,i));s=s.mul(u).add(As(p))}else s=s.mul(o),s=s.add(As(p))}return s.unsigned=e,s}Jt.fromString=dC;function Pa(r,e){return typeof r=="number"?As(r,e):typeof r=="string"?dC(r,e):er(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Jt.fromValue=Pa;var e2=1<<16,wj=1<<24,Bm=e2*e2,n2=Bm*Bm,t2=n2/2,r2=Rp(wj),ws=Rp(0);Jt.ZERO=ws;var Ep=Rp(0,!0);Jt.UZERO=Ep;var $m=Rp(1);Jt.ONE=$m;var o2=Rp(1,!0);Jt.UONE=o2;var cC=Rp(-1);Jt.NEG_ONE=cC;var s2=er(-1,2147483647,!1);Jt.MAX_VALUE=s2;var a2=er(-1,-1,!0);Jt.MAX_UNSIGNED_VALUE=a2;var Hn=er(0,-2147483648,!1);Jt.MIN_VALUE=Hn;var Te=Jt.prototype;Te.toInt=function(){return this.unsigned?this.low>>>0:this.low};Te.toNumber=function(){return this.unsigned?(this.high>>>0)*Bm+(this.low>>>0):this.high*Bm+(this.low>>>0)};Te.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Hn)){var t=As(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=As(yb(e,6),this.unsigned),a=this,i="";;){var p=a.div(s),u=a.sub(p.mul(s)).toInt()>>>0,l=u.toString(e);if(a=p,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};Te.getHighBits=function(){return this.high};Te.getHighBitsUnsigned=function(){return this.high>>>0};Te.getLowBits=function(){return this.low};Te.getLowBitsUnsigned=function(){return this.low>>>0};Te.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Hn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};Te.isZero=function(){return this.high===0&&this.low===0};Te.eqz=Te.isZero;Te.isNegative=function(){return!this.unsigned&&this.high<0};Te.isPositive=function(){return this.unsigned||this.high>=0};Te.isOdd=function(){return(this.low&1)===1};Te.isEven=function(){return(this.low&1)===0};Te.equals=function(e){return qn(e)||(e=Pa(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Te.eq=Te.equals;Te.notEquals=function(e){return!this.eq(e)};Te.neq=Te.notEquals;Te.ne=Te.notEquals;Te.lessThan=function(e){return this.comp(e)<0};Te.lt=Te.lessThan;Te.lessThanOrEqual=function(e){return this.comp(e)<=0};Te.lte=Te.lessThanOrEqual;Te.le=Te.lessThanOrEqual;Te.greaterThan=function(e){return this.comp(e)>0};Te.gt=Te.greaterThan;Te.greaterThanOrEqual=function(e){return this.comp(e)>=0};Te.gte=Te.greaterThanOrEqual;Te.ge=Te.greaterThanOrEqual;Te.compare=function(e){if(qn(e)||(e=Pa(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Te.comp=Te.compare;Te.negate=function(){return!this.unsigned&&this.eq(Hn)?Hn:this.not().add($m)};Te.neg=Te.negate;Te.add=function(e){qn(e)||(e=Pa(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=e.high>>>16,i=e.high&65535,p=e.low>>>16,u=e.low&65535,l=0,m=0,c=0,d=0;return d+=s+u,c+=d>>>16,d&=65535,c+=o+p,m+=c>>>16,c&=65535,m+=n+i,l+=m>>>16,m&=65535,l+=t+a,l&=65535,er(c<<16|d,l<<16|m,this.unsigned)};Te.subtract=function(e){return qn(e)||(e=Pa(e)),this.add(e.neg())};Te.sub=Te.subtract;Te.multiply=function(e){if(this.isZero())return ws;if(qn(e)||(e=Pa(e)),vs){var t=vs.mul(this.low,this.high,e.low,e.high);return er(t,vs.get_high(),this.unsigned)}if(e.isZero())return ws;if(this.eq(Hn))return e.isOdd()?Hn:ws;if(e.eq(Hn))return this.isOdd()?Hn:ws;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(r2)&&e.lt(r2))return As(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=e.high>>>16,p=e.high&65535,u=e.low>>>16,l=e.low&65535,m=0,c=0,d=0,f=0;return f+=a*l,d+=f>>>16,f&=65535,d+=s*l,c+=d>>>16,d&=65535,d+=a*u,c+=d>>>16,d&=65535,c+=o*l,m+=c>>>16,c&=65535,c+=s*u,m+=c>>>16,c&=65535,c+=a*p,m+=c>>>16,c&=65535,m+=n*l+o*u+s*p+a*i,m&=65535,er(d<<16|f,m<<16|c,this.unsigned)};Te.mul=Te.multiply;Te.divide=function(e){if(qn(e)||(e=Pa(e)),e.isZero())throw Error("division by zero");if(vs){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?vs.div_u:vs.div_s)(this.low,this.high,e.low,e.high);return er(t,vs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ep:ws;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Ep;if(e.gt(this.shru(1)))return o2;s=Ep}else{if(this.eq(Hn)){if(e.eq($m)||e.eq(cC))return Hn;if(e.eq(Hn))return $m;var a=this.shr(1);return n=a.div(e).shl(1),n.eq(ws)?e.isNegative()?$m:cC:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(Hn))return this.unsigned?Ep:ws;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=ws}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),p=i<=48?1:yb(2,i-48),u=As(n),l=u.mul(e);l.isNegative()||l.gt(o);)n-=p,u=As(n,this.unsigned),l=u.mul(e);u.isZero()&&(u=$m),s=s.add(u),o=o.sub(l)}return s};Te.div=Te.divide;Te.modulo=function(e){if(qn(e)||(e=Pa(e)),vs){var t=(this.unsigned?vs.rem_u:vs.rem_s)(this.low,this.high,e.low,e.high);return er(t,vs.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Te.mod=Te.modulo;Te.rem=Te.modulo;Te.not=function(){return er(~this.low,~this.high,this.unsigned)};Te.and=function(e){return qn(e)||(e=Pa(e)),er(this.low&e.low,this.high&e.high,this.unsigned)};Te.or=function(e){return qn(e)||(e=Pa(e)),er(this.low|e.low,this.high|e.high,this.unsigned)};Te.xor=function(e){return qn(e)||(e=Pa(e)),er(this.low^e.low,this.high^e.high,this.unsigned)};Te.shiftLeft=function(e){return qn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?er(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):er(0,this.low<<e-32,this.unsigned)};Te.shl=Te.shiftLeft;Te.shiftRight=function(e){return qn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?er(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):er(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Te.shr=Te.shiftRight;Te.shiftRightUnsigned=function(e){if(qn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return er(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?er(t,0,this.unsigned):er(t>>>e-32,0,this.unsigned)};Te.shru=Te.shiftRightUnsigned;Te.shr_u=Te.shiftRightUnsigned;Te.toSigned=function(){return this.unsigned?er(this.low,this.high,!1):this};Te.toUnsigned=function(){return this.unsigned?this:er(this.low,this.high,!0)};Te.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Te.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Te.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Jt.fromBytes=function(e,t,n){return n?Jt.fromBytesLE(e,t):Jt.fromBytesBE(e,t)};Jt.fromBytesLE=function(e,t){return new Jt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Jt.fromBytesBE=function(e,t){return new Jt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var Y2=Ar(()=>{});var Q2=Ar(()=>{});var L1=Ar((R1,Rk)=>{(function(r,e,t){function n(i){var p=this,u=a();p.next=function(){var l=2091639*p.s0+p.c*23283064365386963e-26;return p.s0=p.s1,p.s1=p.s2,p.s2=l-(p.c=l|0)},p.c=1,p.s0=u(" "),p.s1=u(" "),p.s2=u(" "),p.s0-=u(i),p.s0<0&&(p.s0+=1),p.s1-=u(i),p.s1<0&&(p.s1+=1),p.s2-=u(i),p.s2<0&&(p.s2+=1),u=null}function o(i,p){return p.c=i.c,p.s0=i.s0,p.s1=i.s1,p.s2=i.s2,p}function s(i,p){var u=new n(i),l=p&&p.state,m=u.next;return m.int32=function(){return u.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,l&&(typeof l=="object"&&o(l,u),m.state=function(){return o(u,{})}),m}function a(){var i=4022871197,p=function(u){u=String(u);for(var l=0;l<u.length;l++){i+=u.charCodeAt(l);var m=.02519603282416938*i;i=m>>>0,m-=i,m*=i,i=m>>>0,m-=i,i+=m*4294967296}return(i>>>0)*23283064365386963e-26};return p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(R1,typeof Rk=="object"&&Rk,typeof define=="function"&&define)});var $1=Ar((_1,Lk)=>{(function(r,e,t){function n(a){var i=this,p="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var l=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^l^l>>>8},a===(a|0)?i.x=a:p+=a;for(var u=0;u<p.length+64;u++)i.x^=p.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(_1,typeof Lk=="object"&&Lk,typeof define=="function"&&define)});var O1=Ar((B1,_k)=>{(function(r,e,t){function n(a){var i=this,p="";i.next=function(){var l=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(l^l<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:p+=a;for(var u=0;u<p.length+64;u++)i.x^=p.charCodeAt(u)|0,u==p.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(B1,typeof _k=="object"&&_k,typeof define=="function"&&define)});var G1=Ar((z1,$k)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,l=i.i,m,c,d;return m=u[l],m^=m>>>7,c=m^m<<24,m=u[l+1&7],c^=m^m>>>10,m=u[l+3&7],c^=m^m>>>3,m=u[l+4&7],c^=m^m<<7,m=u[l+7&7],m=m^m<<13,c^=m^m<<9,u[l]=c,i.i=l+1&7,c};function p(u,l){var m,c,d=[];if(l===(l|0))c=d[0]=l;else for(l=""+l,m=0;m<l.length;++m)d[m&7]=d[m&7]<<15^l.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],u.x=d,u.i=0,m=256;m>0;--m)u.next()}p(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(u.x&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(z1,typeof $k=="object"&&$k,typeof define=="function"&&define)});var W1=Ar((U1,Bk)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,l=i.X,m=i.i,c,d;return i.w=u=u+1640531527|0,d=l[m+34&127],c=l[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=l[m]=d^c,i.i=m,d+(u^u>>>16)|0};function p(u,l){var m,c,d,f,h,g=[],y=128;for(l===(l|0)?(c=l,l=null):(l=l+"\0",c=0,y=Math.max(y,l.length)),d=0,f=-32;f<y;++f)l&&(c^=l.charCodeAt((f+32)%l.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(l&&l.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;u.w=h,u.X=g,u.i=d}p(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(u.X&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(U1,typeof Bk=="object"&&Bk,typeof define=="function"&&define)});var V1=Ar((K1,Ok)=>{(function(r,e,t){function n(a){var i=this,p="";i.next=function(){var l=i.b,m=i.c,c=i.d,d=i.a;return l=l<<25^l>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-l|0,i.b=l=l<<20^l>>>12^m,i.c=m=m-c|0,i.d=c<<16^m>>>16^d,i.a=d-l|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):p+=a;for(var u=0;u<p.length+20;u++)i.b^=p.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(K1,typeof Ok=="object"&&Ok,typeof define=="function"&&define)});var H1=Ar(()=>{});var j1=Ar((q1,Wb)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),p=t.pow(2,s),u=p*2,l=n-1,m;function c(x,I,k){var w=[];I=I==!0?{entropy:!0}:I||{};var M=g(h(I.entropy?[x,T(e)]:x??y(),3),w),F=new d(w),E=function(){for(var $=F.g(o),G=i,W=0;$<p;)$=($+W)*n,G*=n,W=F.g(1);for(;$>=u;)$/=2,G/=2,W>>>=1;return($+W)/G};return E.int32=function(){return F.g(4)|0},E.quick=function(){return F.g(4)/4294967296},E.double=E,g(T(F.S),e),(I.pass||k||function($,G,W,V){return V&&(V.S&&f(V,F),$.state=function(){return f(F,{})}),W?(t[a]=$,G):$})(E,M,"global"in I?I.global:this==t,I.state)}function d(x){var I,k=x.length,w=this,M=0,F=w.i=w.j=0,E=w.S=[];for(k||(x=[k++]);M<n;)E[M]=M++;for(M=0;M<n;M++)E[M]=E[F=l&F+x[M%k]+(I=E[M])],E[F]=I;(w.g=function($){for(var G,W=0,V=w.i,q=w.j,j=w.S;$--;)G=j[V=l&V+1],W=W*n+j[l&(j[V]=j[q=l&q+G])+(j[q]=G)];return w.i=V,w.j=q,W})(n)}function f(x,I){return I.i=x.i,I.j=x.j,I.S=x.S.slice(),I}function h(x,I){var k=[],w=typeof x,M;if(I&&w=="object")for(M in x)try{k.push(h(x[M],I-1))}catch{}return k.length?k:w=="string"?x:x+"\0"}function g(x,I){for(var k=x+"",w,M=0;M<k.length;)I[l&M]=l&(w^=I[l&M]*19)+k.charCodeAt(M++);return T(I)}function y(){try{var x;return m&&(x=m.randomBytes)?x=x(n):(x=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(x)),T(x)}catch{var I=r.navigator,k=I&&I.plugins;return[+new Date,r,k,r.screen,T(e)]}}function T(x){return String.fromCharCode.apply(0,x)}if(g(t.random(),e),typeof Wb=="object"&&Wb.exports){Wb.exports=c;try{m=H1()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):t["seed"+a]=c})(typeof self<"u"?self:q1,[],Math)});var qd=Ar((PEe,X1)=>{var WX=L1(),KX=$1(),VX=O1(),HX=G1(),qX=W1(),jX=V1(),Zp=j1();Zp.alea=WX;Zp.xor128=KX;Zp.xorwow=VX;Zp.xorshift7=HX;Zp.xor4096=qX;Zp.tychei=jX;X1.exports=Zp});var Ov=Ar(()=>{});var lT=Ar(()=>{});var Pg=Ar(()=>{});var jH=Ar(()=>{});var XH=Ar(()=>{});var YH=Ar(()=>{});var QH=Ar((xx,h0)=>{var f0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};function t(){return Be.buffer!=xr&&Zs(Be.buffer),Hl}function n(){return Be.buffer!=xr&&Zs(Be.buffer),ql}function o(){return Be.buffer!=xr&&Zs(Be.buffer),od}function s(){return Be.buffer!=xr&&Zs(Be.buffer),Rg}function a(){return Be.buffer!=xr&&Zs(Be.buffer),Lg}function i(){return Be.buffer!=xr&&Zs(Be.buffer),_g}function p(){return Be.buffer!=xr&&Zs(Be.buffer),$g}var u=typeof e<"u"?e:{},l,m;u.ready=new Promise(function(N,R){l=N,m=R});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d=Object.assign({},u),f=[],h="./this.program",g=(N,R)=>{throw R},y=typeof window=="object",T=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",I=u.ENVIRONMENT_IS_PTHREAD||!1,k="";function w(N){return u.locateFile?u.locateFile(N,k):k+N}var M,F,E,$;function G(N){if(N instanceof dd)return;H("exiting due to exception: "+N)}var W,V,q;if(x){T?k=Pg().dirname(k)+"/":k=__dirname+"/",q=()=>{V||(W=lT(),V=Pg())},M=function(U,X){return q(),U=V.normalize(U),W.readFileSync(U,X?void 0:"utf8")},E=R=>{var U=M(R,!0);return U.buffer||(U=new Uint8Array(U)),U},F=(R,U,X)=>{q(),R=V.normalize(R),W.readFile(R,function(ge,ke){ge?X(ge):U(ke.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(R){if(!(R instanceof dd))throw R}),process.on("unhandledRejection",function(R){throw R}),g=(R,U)=>{if(kp())throw process.exitCode=R,U;G(U),process.exit(R)},u.inspect=function(){return"[Emscripten Module object]"};let N;try{N=jH()}catch(R){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),R}global.Worker=N.Worker}else(y||T)&&(T?k=self.location.href:typeof document<"u"&&document.currentScript&&(k=document.currentScript.src),typeof r<"u"&&r&&(k=r),k.indexOf("blob:")!==0?k=k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):k="",x||(M=N=>{var R=new XMLHttpRequest;return R.open("GET",N,!1),R.send(null),R.responseText},T&&(E=N=>{var R=new XMLHttpRequest;return R.open("GET",N,!1),R.responseType="arraybuffer",R.send(null),new Uint8Array(R.response)}),F=(N,R,U)=>{var X=new XMLHttpRequest;X.open("GET",N,!0),X.responseType="arraybuffer",X.onload=()=>{if(X.status==200||X.status==0&&X.response){R(X.response);return}U()},X.onerror=U,X.send(null)}),$=N=>document.title=N);x&&typeof performance>"u"&&(global.performance=XH().performance);var j=console.log.bind(console),Y=console.warn.bind(console);x&&(q(),j=N=>W.writeSync(1,N+`
`),Y=N=>W.writeSync(2,N+`
`));var te=u.print||j,H=u.printErr||Y;Object.assign(u,d),d=null,u.arguments&&(f=u.arguments),u.thisProgram&&(h=u.thisProgram),u.quit&&(g=u.quit);var oe=4;function se(N){se.shown||(se.shown={}),se.shown[N]||(se.shown[N]=1,H(N))}function ae(N,R){if(typeof WebAssembly.Function=="function"){for(var U={i:"i32",j:"i64",f:"f32",d:"f64"},X={parameters:[],results:R[0]=="v"?[]:[U[R[0]]]},ge=1;ge<R.length;++ge)X.parameters.push(U[R[ge]]);return new WebAssembly.Function(X,N)}var ke=[1,0,1,96],De=R.slice(0,1),We=R.slice(1),ir={i:127,j:126,f:125,d:124};ke.push(We.length);for(var ge=0;ge<We.length;++ge)ke.push(ir[We[ge]]);De=="v"?ke.push(0):ke=ke.concat([1,ir[De]]),ke[1]=ke.length-2;var ra=new Uint8Array([0,97,115,109,1,0,0,0].concat(ke,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),na=new WebAssembly.Module(ra),cb=new WebAssembly.Instance(na,{e:{f:N}}),fd=cb.exports.f;return fd}var ce=[],ue;function ye(){if(ce.length)return ce.pop();try{to.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return to.length-1}function he(N,R){for(var U=N;U<N+R;U++){var X=Zl(U);X&&ue.set(X,U)}}var Ce=0,we=N=>{Ce=N},Ee=Atomics.load,_e=Atomics.store,Qe=Atomics.compareExchange,J;u.wasmBinary&&(J=u.wasmBinary);var ft=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Xl("no native wasm support detected");var Be,Mt,wt=!1,lt;function Zt(N,R){N||Xl(R)}function zt(N){var R=u["_"+N];return R}function en(N,R,U,X,ge){var ke={string:function(Gn){var sm=0;if(Gn!=null&&Gn!==0){var G0=(Gn.length<<2)+1;sm=om(G0),zn(Gn,sm,G0)}return sm},array:function(Gn){var sm=om(Gn.length);return Pu(Gn,sm),sm}};function De(Gn){return R==="string"?jr(Gn):R==="boolean"?Boolean(Gn):Gn}var We=zt(N),ir=[],ra=0;if(X)for(var na=0;na<X.length;na++){var cb=ke[U[na]];cb?(ra===0&&(ra=JI()),ir[na]=cb(X[na])):ir[na]=X[na]}var fd=We.apply(null,ir);function Yq(Gn){return ra!==0&&ub(ra),De(Gn)}return fd=Yq(fd),fd}function Vt(N,R,U,X){U=U||[];var ge=U.every(function(De){return De==="number"}),ke=R!=="string";return ke&&ge&&!X?zt(N):function(){return en(N,R,U,arguments,X)}}var Ys=1;function $r(N){var R=new TextDecoder(N);this.decode=U=>(U.buffer instanceof SharedArrayBuffer&&(U=new Uint8Array(U)),R.decode.call(R,U))}var tn=typeof TextDecoder<"u"?new $r("utf8"):void 0;function rn(N,R,U){for(var X=R+U,ge=R;N[ge]&&!(ge>=X);)++ge;if(ge-R>16&&N.subarray&&tn)return tn.decode(N.subarray(R,ge));for(var ke="";R<ge;){var De=N[R++];if(!(De&128)){ke+=String.fromCharCode(De);continue}var We=N[R++]&63;if((De&224)==192){ke+=String.fromCharCode((De&31)<<6|We);continue}var ir=N[R++]&63;if((De&240)==224?De=(De&15)<<12|We<<6|ir:De=(De&7)<<18|We<<12|ir<<6|N[R++]&63,De<65536)ke+=String.fromCharCode(De);else{var ra=De-65536;ke+=String.fromCharCode(55296|ra>>10,56320|ra&1023)}}return ke}function jr(N,R){return N?rn(n(),N,R):""}function ns(N,R,U,X){if(!(X>0))return 0;for(var ge=U,ke=U+X-1,De=0;De<N.length;++De){var We=N.charCodeAt(De);if(We>=55296&&We<=57343){var ir=N.charCodeAt(++De);We=65536+((We&1023)<<10)|ir&1023}if(We<=127){if(U>=ke)break;R[U++]=We}else if(We<=2047){if(U+1>=ke)break;R[U++]=192|We>>6,R[U++]=128|We&63}else if(We<=65535){if(U+2>=ke)break;R[U++]=224|We>>12,R[U++]=128|We>>6&63,R[U++]=128|We&63}else{if(U+3>=ke)break;R[U++]=240|We>>18,R[U++]=128|We>>12&63,R[U++]=128|We>>6&63,R[U++]=128|We&63}}return R[U]=0,U-ge}function zn(N,R,U){return ns(N,n(),R,U)}function Qs(N){for(var R=0,U=0;U<N.length;++U){var X=N.charCodeAt(U);X>=55296&&X<=57343&&(X=65536+((X&1023)<<10)|N.charCodeAt(++U)&1023),X<=127?++R:X<=2047?R+=2:X<=65535?R+=3:R+=4}return R}var os=typeof TextDecoder<"u"?new $r("utf-16le"):void 0;function Pu(N,R){t().set(N,R)}function Ip(N,R,U){for(var X=0;X<N.length;++X)t()[R++>>0]=N.charCodeAt(X);U||(t()[R>>0]=0)}function Vl(N,R){return N%R>0&&(N+=R-N%R),N}var xr,Hl,ql,od,Rg,Lg,I0,_g,$g;I&&(xr=u.buffer);function Zs(N){xr=N,u.HEAP8=Hl=new Int8Array(N),u.HEAP16=od=new Int16Array(N),u.HEAP32=Lg=new Int32Array(N),u.HEAPU8=ql=new Uint8Array(N),u.HEAPU16=Rg=new Uint16Array(N),u.HEAPU32=I0=new Uint32Array(N),u.HEAPF32=_g=new Float32Array(N),u.HEAPF64=$g=new Float64Array(N)}var Bg=u.INITIAL_MEMORY||16777216;if(I)Be=u.wasmMemory,xr=u.buffer;else if(u.wasmMemory)Be=u.wasmMemory;else if(Be=new WebAssembly.Memory({initial:Bg/65536,maximum:32768,shared:!0}),!(Be.buffer instanceof SharedArrayBuffer))throw H("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Be&&(xr=Be.buffer),Bg=xr.byteLength,Zs(xr);var to,jl=[],Mu=[],Sx=[],Og=[],Cp=!1,vx=!1,zg=0;function kp(){return ft||zg>0}function nn(){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)C0(u.preRun.shift());Vg(jl)}function sd(){Cp=!0,!I&&Vg(Mu)}function Ax(){I||(Ve.terminateAllThreads(),vx=!0)}function wx(){if(!I){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)ad(u.postRun.shift());Vg(Og)}}function C0(N){jl.unshift(N)}function k0(N){Mu.unshift(N)}function ad(N){Og.unshift(N)}var Fu=0,Gg=null,Js=null;function id(N){Fu++,u.monitorRunDependencies&&u.monitorRunDependencies(Fu)}function S0(N){if(Fu--,u.monitorRunDependencies&&u.monitorRunDependencies(Fu),Fu==0&&(Gg!==null&&(clearInterval(Gg),Gg=null),Js)){var R=Js;Js=null,R()}}u.preloadedImages={},u.preloadedAudios={};function Xl(N){I?postMessage({cmd:"onAbort",arg:N}):u.onAbort&&u.onAbort(N),N="Aborted("+N+")",H(N),wt=!0,lt=1,N+=". Build with -s ASSERTIONS=1 for more info.";var R=new WebAssembly.RuntimeError(N);throw m(R),R}var Nx="data:application/octet-stream;base64,";function Ug(N){return N.startsWith(Nx)}function Wg(N){return N.startsWith("file://")}var on;on="tfjs-backend-wasm-threaded-simd.wasm",Ug(on)||(on=w(on));function Kg(N){try{if(N==on&&J)return new Uint8Array(J);if(E)return E(N);throw"both async and sync fetching of the wasm failed"}catch(R){Xl(R)}}function Yl(){if(!J&&(y||T)){if(typeof fetch=="function"&&!Wg(on))return fetch(on,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+on+"'";return N.arrayBuffer()}).catch(function(){return Kg(on)});if(F)return new Promise(function(N,R){F(on,function(U){N(new Uint8Array(U))},R)})}return Promise.resolve().then(function(){return Kg(on)})}function Dx(){var N={env:nb,wasi_snapshot_preview1:nb};function R(De,We){var ir=De.exports;if(u.asm=ir,_x(u.asm.emscripten_tls_init),to=u.asm.__indirect_function_table,k0(u.asm.__wasm_call_ctors),Mt=We,!I){var ra=Ve.unusedWorkers.length;Ve.unusedWorkers.forEach(function(na){Ve.loadWasmModuleToWorker(na,function(){--ra||S0("wasm-instantiate")})})}}I||id("wasm-instantiate");function U(De){R(De.instance,De.module)}function X(De){return Yl().then(function(We){return WebAssembly.instantiate(We,N)}).then(function(We){return We}).then(De,function(We){H("failed to asynchronously prepare wasm: "+We),Xl(We)})}function ge(){return!J&&typeof WebAssembly.instantiateStreaming=="function"&&!Ug(on)&&!Wg(on)&&typeof fetch=="function"?fetch(on,{credentials:"same-origin"}).then(function(De){var We=WebAssembly.instantiateStreaming(De,N);return We.then(U,function(ir){return H("wasm streaming compile failed: "+ir),H("falling back to ArrayBuffer instantiation"),X(U)})}):X(U)}if(u.instantiateWasm)try{var ke=u.instantiateWasm(N,R);return ke}catch(De){return H("Module.instantiateWasm callback failed with error: "+De),!1}return ge().catch(m),{}}var v0,A0,Px={};function Vg(N){for(;N.length>0;){var R=N.shift();if(typeof R=="function"){R(u);continue}var U=R.func;typeof U=="number"?R.arg===void 0?Zl(U)():Zl(U)(R.arg):U(R.arg===void 0?null:R.arg)}}function Ql(N){var R=JI(),U=N();return ub(R),U}function oq(N){return N}function w0(N){var R=/\b_Z[\w\d_]+/g;return N.replace(R,function(U){var X=U;return U===X?U:X+" ["+U+"]"})}function Mx(N){a()[N>>2]=0;var R=Ve.pthreads[N];delete Ve.pthreads[N],R.worker.terminate(),ZI(N),Ve.runningWorkers.splice(Ve.runningWorkers.indexOf(R.worker),1),R.worker.pthread=void 0}function Fx(N){var R=Ve.pthreads[N];R.worker.postMessage({cmd:"cancel"})}function Hg(N){var R=Ve.pthreads[N];if(R){a()[N>>2]=0;var U=R.worker;Ve.returnWorkerToPool(U)}}function qg(N){qq(N)}function Ex(N){if(N instanceof dd||N=="unwind")return lt;g(1,N)}var Ve={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){I?Ve.initWorker():Ve.initMainThread()},initMainThread:function(){for(var N=8,R=0;R<N;++R)Ve.allocateUnusedWorker()},initWorker:function(){ft=!1},pthreads:{},setExitStatus:function(N){lt=N},terminateAllThreads:function(){for(var N in Ve.pthreads){var R=Ve.pthreads[N];R&&R.worker&&Ve.returnWorkerToPool(R.worker)}for(var U=0;U<Ve.unusedWorkers.length;++U){var X=Ve.unusedWorkers[U];X.terminate()}Ve.unusedWorkers=[]},returnWorkerToPool:function(N){Ve.runWithoutMainThreadQueuedCalls(function(){delete Ve.pthreads[N.pthread.threadInfoStruct],Ve.unusedWorkers.push(N),Ve.runningWorkers.splice(Ve.runningWorkers.indexOf(N),1),ZI(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){a()[z0>>2]=0;try{N()}finally{a()[z0>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in Ve.tlsInitFunctions)Ve.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,R){N.onmessage=U=>{var X=U.data,ge=X.cmd;if(N.pthread&&(Ve.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),X.targetThread&&X.targetThread!=ib()){var ke=Ve.pthreads[X.targetThread];ke?ke.worker.postMessage(X,X.transferList):H('Internal error! Worker sent a message "'+ge+'" to target pthread '+X.targetThread+", but that thread no longer exists!"),Ve.currentProxiedOperationCallerThread=void 0;return}ge==="processQueuedMainThreadWork"?L0():ge==="spawnThread"?Xg(X):ge==="cleanupThread"?Hg(X.thread):ge==="killThread"?Mx(X.thread):ge==="cancelThread"?Fx(X.thread):ge==="loaded"?(N.loaded=!0,R&&R(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):ge==="print"?te("Thread "+X.threadId+": "+X.text):ge==="printErr"?H("Thread "+X.threadId+": "+X.text):ge==="alert"?alert("Thread "+X.threadId+": "+X.text):X.target==="setimmediate"?N.postMessage(X):ge==="onAbort"?u.onAbort&&u.onAbort(X.arg):H("worker sent an unknown command "+ge),Ve.currentProxiedOperationCallerThread=void 0},N.onerror=U=>{var X="worker sent an error!";throw H(X+" "+U.filename+":"+U.lineno+": "+U.message),U},x&&(N.on("message",function(U){N.onmessage({data:U})}),N.on("error",function(U){N.onerror(U)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:Be,wasmModule:Mt})},allocateUnusedWorker:function(){var N=w("tfjs-backend-wasm-threaded-simd.worker.js");Ve.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return Ve.unusedWorkers.length==0&&(Ve.allocateUnusedWorker(),Ve.loadWasmModuleToWorker(Ve.unusedWorkers[0])),Ve.unusedWorkers.pop()}};function Rx(){var N=ib(),R=a()[N+44>>2],U=a()[N+48>>2],X=R-U;O0(R,X),ub(R)}u.establishStackSpace=Rx;function jg(N){if(I)return Ap(1,0,N);try{qg(N)}catch(R){Ex(R)}}var Sp=[];function Zl(N){var R=Sp[N];return R||(N>=Sp.length&&(Sp.length=N+1),Sp[N]=R=to.get(N)),R}function Lx(N,R){return Zl(N)(R)}u.invokeEntryPoint=Lx;function N0(){var N=new Error;if(!N.stack){try{throw new Error}catch(R){N=R}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function _x(N,R,U){Ve.tlsInitFunctions.push(N)}function D0(N,R){to.set(N,R),Sp[N]=R}var vp;x?vp=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:I?vp=()=>performance.now()-u.__performance_now_clock_drift:vp=()=>performance.now();var $x=!0;function Bx(N){return a()[R0()>>2]=N,N}function Ox(N,R){var U;if(N===0)U=Date.now();else if((N===1||N===4)&&$x)U=vp();else return Bx(28),-1;return a()[R>>2]=U/1e3|0,a()[R+4>>2]=U%1e3*1e3*1e3|0,0}function zx(N,R){return Ox(N,R)}function Gx(N){_0(N,!T,1,!y),Ve.threadInit()}function Ux(N){I?postMessage({cmd:"cleanupThread",thread:N}):Hg(N)}function Xg(N){var R=Ve.getNewWorker();if(!R)return 6;Ve.runningWorkers.push(R);var U=Ve.pthreads[N.pthread_ptr]={worker:R,threadInfoStruct:N.pthread_ptr};R.pthread=U;var X={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return R.runPthread=()=>{X.time=performance.now(),R.postMessage(X,N.transferList)},R.loaded&&(R.runPthread(),delete R.runPthread),0}function Wx(N,R,U,X){if(typeof SharedArrayBuffer>"u")return H("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ge=[],ke=0;if(I&&(ge.length===0||ke))return $0(687865856,N,R,U,X);if(ke)return ke;var De={startRoutine:U,pthread_ptr:N,arg:X,transferList:ge};return I?(De.cmd="spawnThread",postMessage(De,ge),0):Xg(De)}function Kx(){return 2097152}function Vx(N,R){if(N==R)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var U=Ve.pthreads[N],X=U&&U.worker;if(!X)return;X.postMessage({cmd:"processThreadQueue"})}return 1}function Hx(){Xl("")}function qx(){x||T||se("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Yg(){return 2147483648}function jx(N,R,U){n().copyWithin(N,R,R+U)}function Xx(){return x?YH().cpus().length:navigator.hardwareConcurrency}function Ap(N,R){var U=arguments.length-2,X=arguments;return Ql(function(){for(var ge=U,ke=om(ge*8),De=ke>>3,We=0;We<U;We++){var ir=X[2+We];p()[De+We]=ir}return B0(N,ge,ke,R)})}var ud=[];function Yx(N,R,U){ud.length=R;for(var X=U>>3,ge=0;ge<R;ge++)ud[ge]=p()[X+ge];var ke=N<0,De=ke?Px[-N-1]:hI[N];return De.apply(null,ud)}function Qx(N){try{return Be.grow(N-xr.byteLength+65535>>>16),Zs(Be.buffer),1}catch{}}function Zx(N){var R=n().length;if(N=N>>>0,N<=R)return!1;var U=Yg();if(N>U)return!1;for(var X=1;X<=4;X*=2){var ge=R*(1+.2/X);ge=Math.min(ge,N+100663296);var ke=Math.min(U,Vl(Math.max(N,ge),65536)),De=Qx(ke);if(De)return!0}return!1}var at={inEventHandler:0,removeAllEventListeners:function(){for(var N=at.eventHandlers.length-1;N>=0;--N)at._removeHandler(N);at.eventHandlers=[],at.deferredCalls=[]},registerRemoveEventListeners:function(){at.removeEventListenersRegistered||(Sx.push(at.removeAllEventListeners),at.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,R,U){function X(De,We){if(De.length!=We.length)return!1;for(var ir in De)if(De[ir]!=We[ir])return!1;return!0}for(var ge in at.deferredCalls){var ke=at.deferredCalls[ge];if(ke.targetFunction==N&&X(ke.argsList,U))return}at.deferredCalls.push({targetFunction:N,precedence:R,argsList:U}),at.deferredCalls.sort(function(De,We){return De.precedence<We.precedence})},removeDeferredCalls:function(N){for(var R=0;R<at.deferredCalls.length;++R)at.deferredCalls[R].targetFunction==N&&(at.deferredCalls.splice(R,1),--R)},canPerformEventHandlerRequests:function(){return at.inEventHandler&&at.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!at.canPerformEventHandlerRequests())for(var N=0;N<at.deferredCalls.length;++N){var R=at.deferredCalls[N];at.deferredCalls.splice(N,1),--N,R.targetFunction.apply(null,R.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,R){for(var U=0;U<at.eventHandlers.length;++U)at.eventHandlers[U].target==N&&(!R||R==at.eventHandlers[U].eventTypeString)&&at._removeHandler(U--)},_removeHandler:function(N){var R=at.eventHandlers[N];R.target.removeEventListener(R.eventTypeString,R.eventListenerFunc,R.useCapture),at.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var R=function(ge){++at.inEventHandler,at.currentEventHandler=N,at.runDeferredCalls(),N.handlerFunc(ge),at.runDeferredCalls(),--at.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=R,N.target.addEventListener(N.eventTypeString,R,N.useCapture),at.eventHandlers.push(N),at.registerRemoveEventListeners();else for(var U=0;U<at.eventHandlers.length;++U)at.eventHandlers[U].target==N.target&&at.eventHandlers[U].eventTypeString==N.eventTypeString&&at._removeHandler(U--)},queueEventHandlerOnThread_iiii:function(N,R,U,X,ge){Ql(function(){var ke=om(12);a()[ke>>2]=U,a()[ke+4>>2]=X,a()[ke+8>>2]=ge,QI(N,637534208,R,X,ke)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return Ve.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Jx(N){var R=Qs(N)+1,U=YI(R);return zn(N,U,R),U}function eI(N,R,U,X){Ql(function(){var ge=om(12),ke=0;R&&(ke=Jx(R)),a()[ge>>2]=ke,a()[ge+4>>2]=U,a()[ge+8>>2]=X,QI(N,657457152,0,ke,ge)})}function tI(N,R,U,X){R=R?jr(R):"",eI(N,R,U,X)}function rI(N){return N>2?jr(N):N}var nI=[0,typeof document<"u"?document:0,typeof window<"u"?window:0];function oI(N){N=rI(N);var R=nI[N]||(typeof document<"u"?document.querySelector(N):void 0);return R}function pd(N){return oI(N)}function Qg(N,R,U){var X=pd(N);if(!X)return-4;if(X.canvasSharedPtr&&(a()[X.canvasSharedPtr>>2]=R,a()[X.canvasSharedPtr+4>>2]=U),X.offscreenCanvas||!X.controlTransferredOffscreen){X.offscreenCanvas&&(X=X.offscreenCanvas);var ge=!1;if(X.GLctxObject&&X.GLctxObject.GLctx){var ke=X.GLctxObject.GLctx.getParameter(2978);ge=ke[0]===0&&ke[1]===0&&ke[2]===X.width&&ke[3]===X.height}X.width=R,X.height=U,ge&&X.GLctxObject.GLctx.viewport(0,0,R,U)}else if(X.canvasSharedPtr){var De=a()[X.canvasSharedPtr+8>>2];return tI(De,N,R,U),1}else return-4;return 0}function Zg(N,R,U){return I?Ap(2,1,N,R,U):Qg(N,R,U)}function sI(N,R,U){var X=pd(N);return X?Qg(N,R,U):Zg(N,R,U)}function aI(){throw"unwind"}function iI(N){var R=N.getExtension("ANGLE_instanced_arrays");if(R)return N.vertexAttribDivisor=function(U,X){R.vertexAttribDivisorANGLE(U,X)},N.drawArraysInstanced=function(U,X,ge,ke){R.drawArraysInstancedANGLE(U,X,ge,ke)},N.drawElementsInstanced=function(U,X,ge,ke,De){R.drawElementsInstancedANGLE(U,X,ge,ke,De)},1}function uI(N){var R=N.getExtension("OES_vertex_array_object");if(R)return N.createVertexArray=function(){return R.createVertexArrayOES()},N.deleteVertexArray=function(U){R.deleteVertexArrayOES(U)},N.bindVertexArray=function(U){R.bindVertexArrayOES(U)},N.isVertexArray=function(U){return R.isVertexArrayOES(U)},1}function pI(N){var R=N.getExtension("WEBGL_draw_buffers");if(R)return N.drawBuffers=function(U,X){R.drawBuffersWEBGL(U,X)},1}function lI(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var ar={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(R){ar.lastError||(ar.lastError=R)},getNewId:function(N){for(var R=ar.counter++,U=N.length;U<R;U++)N[U]=null;return R},getSource:function(N,R,U,X){for(var ge="",ke=0;ke<R;++ke){var De=X?a()[X+ke*4>>2]:-1;ge+=jr(a()[U+ke*4>>2],De<0?void 0:De)}return ge},createContext:function(N,R){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(ge,ke){var De=N.getContextSafariWebGL2Fixed(ge,ke);return ge=="webgl"==De instanceof WebGLRenderingContext?De:null});var U=N.getContext("webgl",R);if(!U)return 0;var X=ar.registerContext(U,R);return X},registerContext:function(N,R){var U=YI(8);a()[U+4>>2]=ib();var X={handle:U,attributes:R,version:R.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=X),ar.contexts[U]=X,(typeof R.enableExtensionsByDefault>"u"||R.enableExtensionsByDefault)&&ar.initExtensions(X),U},makeContextCurrent:function(N){return ar.currentContext=ar.contexts[N],u.ctx=rb=ar.currentContext&&ar.currentContext.GLctx,!(N&&!rb)},getContext:function(N){return ar.contexts[N]},deleteContext:function(N){ar.currentContext===ar.contexts[N]&&(ar.currentContext=null),typeof at=="object"&&at.removeAllHandlersOnTarget(ar.contexts[N].GLctx.canvas),ar.contexts[N]&&ar.contexts[N].GLctx.canvas&&(ar.contexts[N].GLctx.canvas.GLctxObject=void 0),E0(ar.contexts[N].handle),ar.contexts[N]=null},initExtensions:function(N){if(N||(N=ar.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var R=N.GLctx;iI(R),uI(R),pI(R),R.disjointTimerQueryExt=R.getExtension("EXT_disjoint_timer_query"),lI(R);var U=R.getSupportedExtensions()||[];U.forEach(function(X){!X.includes("lose_context")&&!X.includes("debug")&&R.getExtension(X)})}}},mI=["default","low-power","high-performance"];function cI(N,R){var U=R>>2,X=a()[U+6],ge={alpha:!!a()[U+0],depth:!!a()[U+1],stencil:!!a()[U+2],antialias:!!a()[U+3],premultipliedAlpha:!!a()[U+4],preserveDrawingBuffer:!!a()[U+5],powerPreference:mI[X],failIfMajorPerformanceCaveat:!!a()[U+7],majorVersion:a()[U+8],minorVersion:a()[U+9],enableExtensionsByDefault:a()[U+10],explicitSwapControl:a()[U+11],proxyContextToMainThread:a()[U+12],renderViaOffscreenBackBuffer:a()[U+13]},ke=pd(N);if(!ke||ge.explicitSwapControl)return 0;var De=ar.createContext(ke,ge);return De}function dI(N,R){return cI(N,R)}var Jl={mappings:{},buffers:[null,[],[]],printChar:function(N,R){var U=Jl.buffers[N];R===0||R===10?((N===1?te:H)(rn(U,0)),U.length=0):U.push(R)},varargs:void 0,get:function(){Jl.varargs+=4;var N=a()[Jl.varargs-4>>2];return N},getStr:function(N){var R=jr(N);return R},get64:function(N,R){return N}};function Jg(N){return I?Ap(3,1,N):0}function eb(N,R,U,X,ge){if(I)return Ap(4,1,N,R,U,X,ge)}function tb(N,R,U,X){if(I)return Ap(5,1,N,R,U,X);for(var ge=0,ke=0;ke<U;ke++){var De=a()[R>>2],We=a()[R+4>>2];R+=8;for(var ir=0;ir<We;ir++)Jl.printChar(N,n()[De+ir]);ge+=We}return a()[X>>2]=ge,0}function fI(N){we(N)}Ve.init();var rb,hI=[null,jg,Zg,Jg,eb,tb],P0=!1,nb={__clock_gettime:zx,__emscripten_init_main_thread_js:Gx,__emscripten_thread_cleanup:Ux,__pthread_create_js:Wx,_emscripten_default_pthread_stack_size:Kx,_emscripten_notify_thread_queue:Vx,abort:Hx,emscripten_check_blocking_allowed:qx,emscripten_get_heap_max:Yg,emscripten_get_now:vp,emscripten_memcpy_big:jx,emscripten_num_logical_cores:Xx,emscripten_receive_on_main_thread_js:Yx,emscripten_resize_heap:Zx,emscripten_set_canvas_element_size:sI,emscripten_unwind_to_js_event_loop:aI,emscripten_webgl_create_context:dI,exit:qg,fd_close:Jg,fd_seek:eb,fd_write:tb,memory:Be||u.wasmMemory,setTempRet0:fI},M0=Dx(),gI=u.___wasm_call_ctors=function(){return(gI=u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},bI=u._init=function(){return(bI=u._init=u.asm.init).apply(null,arguments)},yI=u._init_with_threads_count=function(){return(yI=u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},TI=u._get_threads_count=function(){return(TI=u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},xI=u._register_tensor=function(){return(xI=u._register_tensor=u.asm.register_tensor).apply(null,arguments)},II=u._dispose_data=function(){return(II=u._dispose_data=u.asm.dispose_data).apply(null,arguments)},CI=u._dispose=function(){return(CI=u._dispose=u.asm.dispose).apply(null,arguments)},kI=u._Abs=function(){return(kI=u._Abs=u.asm.Abs).apply(null,arguments)},SI=u._Add=function(){return(SI=u._Add=u.asm.Add).apply(null,arguments)},vI=u._AddN=function(){return(vI=u._AddN=u.asm.AddN).apply(null,arguments)},AI=u._All=function(){return(AI=u._All=u.asm.All).apply(null,arguments)},wI=u._Any=function(){return(wI=u._Any=u.asm.Any).apply(null,arguments)},NI=u._ArgMax=function(){return(NI=u._ArgMax=u.asm.ArgMax).apply(null,arguments)},DI=u._AvgPool=function(){return(DI=u._AvgPool=u.asm.AvgPool).apply(null,arguments)},PI=u._BatchMatMul=function(){return(PI=u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},MI=u._Ceil=function(){return(MI=u._Ceil=u.asm.Ceil).apply(null,arguments)},FI=u._ClipByValue=function(){return(FI=u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},EI=u._Conv2D=function(){return(EI=u._Conv2D=u.asm.Conv2D).apply(null,arguments)},RI=u._Conv2DBackpropInput=function(){return(RI=u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},LI=u._Cos=function(){return(LI=u._Cos=u.asm.Cos).apply(null,arguments)},_I=u._Cosh=function(){return(_I=u._Cosh=u.asm.Cosh).apply(null,arguments)},$I=u._CropAndResize=function(){return($I=u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},BI=u._Cumprod=function(){return(BI=u._Cumprod=u.asm.Cumprod).apply(null,arguments)},OI=u._Cumsum=function(){return(OI=u._Cumsum=u.asm.Cumsum).apply(null,arguments)},zI=u._DepthToSpace=function(){return(zI=u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},GI=u._DepthwiseConv2dNative=function(){return(GI=u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},UI=u._Elu=function(){return(UI=u._Elu=u.asm.Elu).apply(null,arguments)},WI=u._Equal=function(){return(WI=u._Equal=u.asm.Equal).apply(null,arguments)},KI=u._Exp=function(){return(KI=u._Exp=u.asm.Exp).apply(null,arguments)},VI=u._FlipLeftRight=function(){return(VI=u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},ob=u._Floor=function(){return(ob=u._Floor=u.asm.Floor).apply(null,arguments)},sb=u._FloorDiv=function(){return(sb=u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},ld=u._FusedBatchNorm=function(){return(ld=u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},HI=u._FusedConv2D=function(){return(HI=u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},qI=u._FusedDepthwiseConv2D=function(){return(qI=u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},em=u._Gather=function(){return(em=u._Gather=u.asm.Gather).apply(null,arguments)},md=u._GatherNd=function(){return(md=u._GatherNd=u.asm.GatherNd).apply(null,arguments)},cd=u._Greater=function(){return(cd=u._Greater=u.asm.Greater).apply(null,arguments)},F0=u._GreaterEqual=function(){return(F0=u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},tm=u._LeakyRelu=function(){return(tm=u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},rm=u._Less=function(){return(rm=u._Less=u.asm.Less).apply(null,arguments)},jI=u._LessEqual=function(){return(jI=u._LessEqual=u.asm.LessEqual).apply(null,arguments)},K=u._Log=function(){return(K=u._Log=u.asm.Log).apply(null,arguments)},Z=u._LogicalAnd=function(){return(Z=u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},be=u._Max=function(){return(be=u._Max=u.asm.Max).apply(null,arguments)},Re=u._MaxPool=function(){return(Re=u._MaxPool=u.asm.MaxPool).apply(null,arguments)},yt=u._Maximum=function(){return(yt=u._Maximum=u.asm.Maximum).apply(null,arguments)},It=u._Mean=function(){return(It=u._Mean=u.asm.Mean).apply(null,arguments)},it=u._Min=function(){return(it=u._Min=u.asm.Min).apply(null,arguments)},ot=u._Minimum=function(){return(ot=u._Minimum=u.asm.Minimum).apply(null,arguments)},Ir=u._MirrorPad=function(){return(Ir=u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},ea=u._Multiply=function(){return(ea=u._Multiply=u.asm.Multiply).apply(null,arguments)},ta=u._Neg=function(){return(ta=u._Neg=u.asm.Neg).apply(null,arguments)},nm=u._NonMaxSuppressionV3=function(){return(nm=u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},wp=u._NonMaxSuppressionV4=function(){return(wp=u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},XI=u._NonMaxSuppressionV5=function(){return(XI=u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},sn=u._NotEqual=function(){return(sn=u._NotEqual=u.asm.NotEqual).apply(null,arguments)},Eu=u._OneHot=function(){return(Eu=u._OneHot=u.asm.OneHot).apply(null,arguments)},ab=u._PadV2=function(){return(ab=u._PadV2=u.asm.PadV2).apply(null,arguments)},sq=u._Pow=function(){return(sq=u._Pow=u.asm.Pow).apply(null,arguments)},aq=u._Prelu=function(){return(aq=u._Prelu=u.asm.Prelu).apply(null,arguments)},iq=u._Prod=function(){return(iq=u._Prod=u.asm.Prod).apply(null,arguments)},uq=u._RealDiv=function(){return(uq=u._RealDiv=u.asm.RealDiv).apply(null,arguments)},pq=u._Relu=function(){return(pq=u._Relu=u.asm.Relu).apply(null,arguments)},lq=u._Relu6=function(){return(lq=u._Relu6=u.asm.Relu6).apply(null,arguments)},mq=u._ResizeBilinear=function(){return(mq=u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},cq=u._Reverse=function(){return(cq=u._Reverse=u.asm.Reverse).apply(null,arguments)},dq=u._RotateWithOffset=function(){return(dq=u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},fq=u._Round=function(){return(fq=u._Round=u.asm.Round).apply(null,arguments)},hq=u._Rsqrt=function(){return(hq=u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},gq=u._ScatterNd=function(){return(gq=u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},bq=u._SelectV2=function(){return(bq=u._SelectV2=u.asm.SelectV2).apply(null,arguments)},yq=u._Sigmoid=function(){return(yq=u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},Tq=u._Sin=function(){return(Tq=u._Sin=u.asm.Sin).apply(null,arguments)},xq=u._Softmax=function(){return(xq=u._Softmax=u.asm.Softmax).apply(null,arguments)},Iq=u._SparseFillEmptyRows=function(){return(Iq=u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},Cq=u._SparseReshape=function(){return(Cq=u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},kq=u._SparseSegmentReduction=function(){return(kq=u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},Sq=u._Sqrt=function(){return(Sq=u._Sqrt=u.asm.Sqrt).apply(null,arguments)},vq=u._Square=function(){return(vq=u._Square=u.asm.Square).apply(null,arguments)},Aq=u._SquaredDifference=function(){return(Aq=u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},wq=u._Step=function(){return(wq=u._Step=u.asm.Step).apply(null,arguments)},Nq=u._StridedSlice=function(){return(Nq=u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},Dq=u._Sub=function(){return(Dq=u._Sub=u.asm.Sub).apply(null,arguments)},Pq=u._Sum=function(){return(Pq=u._Sum=u.asm.Sum).apply(null,arguments)},Mq=u._Tan=function(){return(Mq=u._Tan=u.asm.Tan).apply(null,arguments)},Fq=u._Tanh=function(){return(Fq=u._Tanh=u.asm.Tanh).apply(null,arguments)},Eq=u._Tile=function(){return(Eq=u._Tile=u.asm.Tile).apply(null,arguments)},Rq=u._TopK=function(){return(Rq=u._TopK=u.asm.TopK).apply(null,arguments)},Lq=u._Transform=function(){return(Lq=u._Transform=u.asm.Transform).apply(null,arguments)},_q=u._Transpose=function(){return(_q=u._Transpose=u.asm.Transpose).apply(null,arguments)},$q=u.__FusedMatMul=function(){return($q=u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},YI=u._malloc=function(){return(YI=u._malloc=u.asm.malloc).apply(null,arguments)},E0=u._free=function(){return(E0=u._free=u.asm.free).apply(null,arguments)},Bq=u._emscripten_tls_init=function(){return(Bq=u._emscripten_tls_init=u.asm.emscripten_tls_init).apply(null,arguments)},R0=u.___errno_location=function(){return(R0=u.___errno_location=u.asm.__errno_location).apply(null,arguments)},ib=u._pthread_self=function(){return(ib=u._pthread_self=u.asm.pthread_self).apply(null,arguments)},L0=u._emscripten_main_thread_process_queued_calls=function(){return(L0=u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Oq=u.__emscripten_thread_crashed=function(){return(Oq=u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},_0=u.__emscripten_thread_init=function(){return(_0=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)},zq=u._emscripten_current_thread_process_queued_calls=function(){return(zq=u._emscripten_current_thread_process_queued_calls=u.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},Gq=u._emscripten_main_browser_thread_id=function(){return(Gq=u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},Uq=u._emscripten_sync_run_in_main_thread_2=function(){return(Uq=u._emscripten_sync_run_in_main_thread_2=u.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},$0=u._emscripten_sync_run_in_main_thread_4=function(){return($0=u._emscripten_sync_run_in_main_thread_4=u.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},B0=u._emscripten_run_in_main_runtime_thread_js=function(){return(B0=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},QI=u._emscripten_dispatch_to_thread_=function(){return(QI=u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},ZI=u.__emscripten_thread_free_data=function(){return(ZI=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},Wq=u.__emscripten_thread_exit=function(){return(Wq=u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},Kq=u._memalign=function(){return(Kq=u._memalign=u.asm.memalign).apply(null,arguments)},O0=u._emscripten_stack_set_limits=function(){return(O0=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)},JI=u.stackSave=function(){return(JI=u.stackSave=u.asm.stackSave).apply(null,arguments)},ub=u.stackRestore=function(){return(ub=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},om=u.stackAlloc=function(){return(om=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)},Vq=u.dynCall_iijjiiii=function(){return(Vq=u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},Hq=u.dynCall_jiji=function(){return(Hq=u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},z0=u.__emscripten_allow_main_runtime_queued_calls=21456;u.cwrap=Vt,u.keepRuntimeAlive=kp,u.PThread=Ve,u.PThread=Ve,u.wasmMemory=Be,u.ExitStatus=dd;var pb;function dd(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}Js=function N(){pb||eC(),pb||(Js=N)};function eC(N){if(N=N||f,Fu>0)return;if(I){l(u),sd(),postMessage({cmd:"loaded"});return}if(nn(),Fu>0)return;function R(){pb||(pb=!0,u.calledRun=!0,!wt&&(sd(),l(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),wx()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),R()},1)):R()}u.run=eC;function qq(N,R){if(lt=N,!R&&I)throw jg(N),"unwind";kp()||Ax(),jq(N)}function jq(N){lt=N,kp()||(Ve.terminateAllThreads(),u.onExit&&u.onExit(N),wt=!0),g(N,new dd(N))}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();eC();var lb;c&&(lb={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!c.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!c.unhandledRejection.indexOf(N)>-1})});var mb;if(typeof WasmBackendModule<"u")mb=WasmBackendModule;else if(typeof e<"u")mb=e;else throw new Error("Could not find wasm module in post.js");if(lb){var Xq=mb._dispose;mb._dispose=function(){Xq(),lb.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),lb.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return e.ready}})();typeof xx=="object"&&typeof h0=="object"?h0.exports=f0:typeof define=="function"&&define.amd?define([],function(){return f0}):typeof xx=="object"&&(xx.WasmBackendModuleThreadedSimd=f0)});var JH=Ar((Ix,b0)=>{var g0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};var t=typeof e<"u"?e:{},n,o;t.ready=new Promise(function(K,Z){n=K,o=Z});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var a=Object.assign({},t),i=[],p="./this.program",u=(K,Z)=>{throw Z},l=typeof window=="object",m=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d="";function f(K){return t.locateFile?t.locateFile(K,d):d+K}var h,g,y,T;function x(K){if(K instanceof md)return;F("exiting due to exception: "+K)}var I,k,w;c?(m?d=Pg().dirname(d)+"/":d=__dirname+"/",w=()=>{k||(I=lT(),k=Pg())},h=function(Z,be){return w(),Z=k.normalize(Z),I.readFileSync(Z,be?void 0:"utf8")},y=K=>{var Z=h(K,!0);return Z.buffer||(Z=new Uint8Array(Z)),Z},g=(K,Z,be)=>{w(),K=k.normalize(K),I.readFile(K,function(Re,yt){Re?be(Re):Z(yt.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof md))throw K}),process.on("unhandledRejection",function(K){throw K}),u=(K,Z)=>{if(od())throw process.exitCode=K,Z;x(Z),process.exit(K)},t.inspect=function(){return"[Emscripten Module object]"}):(l||m)&&(m?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):d="",h=K=>{var Z=new XMLHttpRequest;return Z.open("GET",K,!1),Z.send(null),Z.responseText},m&&(y=K=>{var Z=new XMLHttpRequest;return Z.open("GET",K,!1),Z.responseType="arraybuffer",Z.send(null),new Uint8Array(Z.response)}),g=(K,Z,be)=>{var Re=new XMLHttpRequest;Re.open("GET",K,!0),Re.responseType="arraybuffer",Re.onload=()=>{if(Re.status==200||Re.status==0&&Re.response){Z(Re.response);return}be()},Re.onerror=be,Re.send(null)},T=K=>document.title=K);var M=t.print||console.log.bind(console),F=t.printErr||console.warn.bind(console);Object.assign(t,a),a=null,t.arguments&&(i=t.arguments),t.thisProgram&&(p=t.thisProgram),t.quit&&(u=t.quit);var E=4;function $(K){$.shown||($.shown={}),$.shown[K]||($.shown[K]=1,F(K))}function G(K,Z){if(typeof WebAssembly.Function=="function"){for(var be={i:"i32",j:"i64",f:"f32",d:"f64"},Re={parameters:[],results:Z[0]=="v"?[]:[be[Z[0]]]},yt=1;yt<Z.length;++yt)Re.parameters.push(be[Z[yt]]);return new WebAssembly.Function(Re,K)}var It=[1,0,1,96],it=Z.slice(0,1),ot=Z.slice(1),Ir={i:127,j:126,f:125,d:124};It.push(ot.length);for(var yt=0;yt<ot.length;++yt)It.push(Ir[ot[yt]]);it=="v"?It.push(0):It=It.concat([1,Ir[it]]),It[1]=It.length-2;var ea=new Uint8Array([0,97,115,109,1,0,0,0].concat(It,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),ta=new WebAssembly.Module(ea),nm=new WebAssembly.Instance(ta,{e:{f:K}}),wp=nm.exports.f;return wp}var W=[],V;function q(){if(W.length)return W.pop();try{os.grow(1)}catch(K){throw K instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":K}return os.length-1}function j(K,Z){for(var be=K;be<K+Z;be++){var Re=id(be);Re&&V.set(Re,be)}}var Y=0,te=K=>{Y=K},H;t.wasmBinary&&(H=t.wasmBinary);var oe=t.noExitRuntime||!0;typeof WebAssembly!="object"&&Cp("no native wasm support detected");var se,ae=!1,ce;function ue(K,Z){K||Cp(Z)}function ye(K){var Z=t["_"+K];return Z}function he(K,Z,be,Re,yt){var It={string:function(sn){var Eu=0;if(sn!=null&&sn!==0){var ab=(sn.length<<2)+1;Eu=ld(ab),ft(sn,Eu,ab)}return Eu},array:function(sn){var Eu=ld(sn.length);return wt(sn,Eu),Eu}};function it(sn){return Z==="string"?Qe(sn):Z==="boolean"?Boolean(sn):sn}var ot=ye(K),Ir=[],ea=0;if(Re)for(var ta=0;ta<Re.length;ta++){var nm=It[be[ta]];nm?(ea===0&&(ea=ob()),Ir[ta]=nm(Re[ta])):Ir[ta]=Re[ta]}var wp=ot.apply(null,Ir);function XI(sn){return ea!==0&&sb(ea),it(sn)}return wp=XI(wp),wp}function Ce(K,Z,be,Re){be=be||[];var yt=be.every(function(it){return it==="number"}),It=Z!=="string";return It&&yt&&!Re?ye(K):function(){return he(K,Z,be,arguments,Re)}}var we=1,Ee=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function _e(K,Z,be){for(var Re=Z+be,yt=Z;K[yt]&&!(yt>=Re);)++yt;if(yt-Z>16&&K.subarray&&Ee)return Ee.decode(K.subarray(Z,yt));for(var It="";Z<yt;){var it=K[Z++];if(!(it&128)){It+=String.fromCharCode(it);continue}var ot=K[Z++]&63;if((it&224)==192){It+=String.fromCharCode((it&31)<<6|ot);continue}var Ir=K[Z++]&63;if((it&240)==224?it=(it&15)<<12|ot<<6|Ir:it=(it&7)<<18|ot<<12|Ir<<6|K[Z++]&63,it<65536)It+=String.fromCharCode(it);else{var ea=it-65536;It+=String.fromCharCode(55296|ea>>10,56320|ea&1023)}}return It}function Qe(K,Z){return K?_e(Vt,K,Z):""}function J(K,Z,be,Re){if(!(Re>0))return 0;for(var yt=be,It=be+Re-1,it=0;it<K.length;++it){var ot=K.charCodeAt(it);if(ot>=55296&&ot<=57343){var Ir=K.charCodeAt(++it);ot=65536+((ot&1023)<<10)|Ir&1023}if(ot<=127){if(be>=It)break;Z[be++]=ot}else if(ot<=2047){if(be+1>=It)break;Z[be++]=192|ot>>6,Z[be++]=128|ot&63}else if(ot<=65535){if(be+2>=It)break;Z[be++]=224|ot>>12,Z[be++]=128|ot>>6&63,Z[be++]=128|ot&63}else{if(be+3>=It)break;Z[be++]=240|ot>>18,Z[be++]=128|ot>>12&63,Z[be++]=128|ot>>6&63,Z[be++]=128|ot&63}}return Z[be]=0,be-yt}function ft(K,Z,be){return J(K,Vt,Z,be)}function Be(K){for(var Z=0,be=0;be<K.length;++be){var Re=K.charCodeAt(be);Re>=55296&&Re<=57343&&(Re=65536+((Re&1023)<<10)|K.charCodeAt(++be)&1023),Re<=127?++Z:Re<=2047?Z+=2:Re<=65535?Z+=3:Z+=4}return Z}var Mt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function wt(K,Z){en.set(K,Z)}function lt(K,Z,be){for(var Re=0;Re<K.length;++Re)en[Z++>>0]=K.charCodeAt(Re);be||(en[Z>>0]=0)}function Zt(K,Z){return K%Z>0&&(K+=Z-K%Z),K}var zt,en,Vt,Ys,$r,tn,rn,jr,ns;function zn(K){zt=K,t.HEAP8=en=new Int8Array(K),t.HEAP16=Ys=new Int16Array(K),t.HEAP32=tn=new Int32Array(K),t.HEAPU8=Vt=new Uint8Array(K),t.HEAPU16=$r=new Uint16Array(K),t.HEAPU32=rn=new Uint32Array(K),t.HEAPF32=jr=new Float32Array(K),t.HEAPF64=ns=new Float64Array(K)}var Qs=t.INITIAL_MEMORY||16777216,os,Pu=[],Ip=[],Vl=[],xr=!1,Hl=!1,ql=0;function od(){return oe||ql>0}function Rg(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)$g(t.preRun.shift());ad(Pu)}function Lg(){xr=!0,ad(Ip)}function I0(){Hl=!0}function _g(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)Bg(t.postRun.shift());ad(Vl)}function $g(K){Pu.unshift(K)}function Zs(K){Ip.unshift(K)}function Bg(K){Vl.unshift(K)}var to=0,jl=null,Mu=null;function Sx(K){to++,t.monitorRunDependencies&&t.monitorRunDependencies(to)}function Og(K){if(to--,t.monitorRunDependencies&&t.monitorRunDependencies(to),to==0&&(jl!==null&&(clearInterval(jl),jl=null),Mu)){var Z=Mu;Mu=null,Z()}}t.preloadedImages={},t.preloadedAudios={};function Cp(K){t.onAbort&&t.onAbort(K),K="Aborted("+K+")",F(K),ae=!0,ce=1,K+=". Build with -s ASSERTIONS=1 for more info.";var Z=new WebAssembly.RuntimeError(K);throw o(Z),Z}var vx="data:application/octet-stream;base64,";function zg(K){return K.startsWith(vx)}function kp(K){return K.startsWith("file://")}var nn;nn="tfjs-backend-wasm.wasm",zg(nn)||(nn=f(nn));function sd(K){try{if(K==nn&&H)return new Uint8Array(H);if(y)return y(K);throw"both async and sync fetching of the wasm failed"}catch(Z){Cp(Z)}}function Ax(){if(!H&&(l||m)){if(typeof fetch=="function"&&!kp(nn))return fetch(nn,{credentials:"same-origin"}).then(function(K){if(!K.ok)throw"failed to load wasm binary file at '"+nn+"'";return K.arrayBuffer()}).catch(function(){return sd(nn)});if(g)return new Promise(function(K,Z){g(nn,function(be){K(new Uint8Array(be))},Z)})}return Promise.resolve().then(function(){return sd(nn)})}function wx(){var K={env:Ql,wasi_snapshot_preview1:Ql};function Z(it,ot){var Ir=it.exports;t.asm=Ir,se=t.asm.memory,zn(se.buffer),os=t.asm.__indirect_function_table,Zs(t.asm.__wasm_call_ctors),Og("wasm-instantiate")}Sx("wasm-instantiate");function be(it){Z(it.instance)}function Re(it){return Ax().then(function(ot){return WebAssembly.instantiate(ot,K)}).then(function(ot){return ot}).then(it,function(ot){F("failed to asynchronously prepare wasm: "+ot),Cp(ot)})}function yt(){return!H&&typeof WebAssembly.instantiateStreaming=="function"&&!zg(nn)&&!kp(nn)&&typeof fetch=="function"?fetch(nn,{credentials:"same-origin"}).then(function(it){var ot=WebAssembly.instantiateStreaming(it,K);return ot.then(be,function(Ir){return F("wasm streaming compile failed: "+Ir),F("falling back to ArrayBuffer instantiation"),Re(be)})}):Re(be)}if(t.instantiateWasm)try{var It=t.instantiateWasm(K,Z);return It}catch(it){return F("Module.instantiateWasm callback failed with error: "+it),!1}return yt().catch(o),{}}var C0,k0;function ad(K){for(;K.length>0;){var Z=K.shift();if(typeof Z=="function"){Z(t);continue}var be=Z.func;typeof be=="number"?Z.arg===void 0?id(be)():id(be)(Z.arg):be(Z.arg===void 0?null:Z.arg)}}function Fu(K){return K}function Gg(K){var Z=/\b_Z[\w\d_]+/g;return K.replace(Z,function(be){var Re=be;return be===Re?be:Re+" ["+be+"]"})}var Js=[];function id(K){var Z=Js[K];return Z||(K>=Js.length&&(Js.length=K+1),Js[K]=Z=os.get(K)),Z}function S0(){var K=new Error;if(!K.stack){try{throw new Error}catch(Z){K=Z}if(!K.stack)return"(no stack trace available)"}return K.stack.toString()}function Xl(K,Z){os.set(K,Z),Js[K]=Z}function Nx(){Cp("")}function Ug(K,Z,be){Vt.copyWithin(K,Z,Z+be)}function Wg(){return 2147483648}function on(K){try{return se.grow(K-zt.byteLength+65535>>>16),zn(se.buffer),1}catch{}}function Kg(K){var Z=Vt.length;K=K>>>0;var be=Wg();if(K>be)return!1;for(var Re=1;Re<=4;Re*=2){var yt=Z*(1+.2/Re);yt=Math.min(yt,K+100663296);var It=Math.min(be,Zt(Math.max(K,yt),65536)),it=on(It);if(it)return!0}return!1}var Yl={mappings:{},buffers:[null,[],[]],printChar:function(K,Z){var be=Yl.buffers[K];Z===0||Z===10?((K===1?M:F)(_e(be,0)),be.length=0):be.push(Z)},varargs:void 0,get:function(){Yl.varargs+=4;var K=tn[Yl.varargs-4>>2];return K},getStr:function(K){var Z=Qe(K);return Z},get64:function(K,Z){return K}};function Dx(K){return 0}function v0(K,Z,be,Re,yt){}function A0(K,Z,be,Re){for(var yt=0,It=0;It<be;It++){var it=tn[Z>>2],ot=tn[Z+4>>2];Z+=8;for(var Ir=0;Ir<ot;Ir++)Yl.printChar(K,Vt[it+Ir]);yt+=ot}return tn[Re>>2]=yt,0}function Px(K){te(K)}var Vg=!1,Ql={abort:Nx,emscripten_memcpy_big:Ug,emscripten_resize_heap:Kg,fd_close:Dx,fd_seek:v0,fd_write:A0,setTempRet0:Px},oq=wx(),w0=t.___wasm_call_ctors=function(){return(w0=t.___wasm_call_ctors=t.asm.__wasm_call_ctors).apply(null,arguments)},Mx=t._init=function(){return(Mx=t._init=t.asm.init).apply(null,arguments)},Fx=t._init_with_threads_count=function(){return(Fx=t._init_with_threads_count=t.asm.init_with_threads_count).apply(null,arguments)},Hg=t._get_threads_count=function(){return(Hg=t._get_threads_count=t.asm.get_threads_count).apply(null,arguments)},qg=t._register_tensor=function(){return(qg=t._register_tensor=t.asm.register_tensor).apply(null,arguments)},Ex=t._dispose_data=function(){return(Ex=t._dispose_data=t.asm.dispose_data).apply(null,arguments)},Ve=t._dispose=function(){return(Ve=t._dispose=t.asm.dispose).apply(null,arguments)},Rx=t._Abs=function(){return(Rx=t._Abs=t.asm.Abs).apply(null,arguments)},jg=t._Add=function(){return(jg=t._Add=t.asm.Add).apply(null,arguments)},Sp=t._AddN=function(){return(Sp=t._AddN=t.asm.AddN).apply(null,arguments)},Zl=t._All=function(){return(Zl=t._All=t.asm.All).apply(null,arguments)},Lx=t._Any=function(){return(Lx=t._Any=t.asm.Any).apply(null,arguments)},N0=t._ArgMax=function(){return(N0=t._ArgMax=t.asm.ArgMax).apply(null,arguments)},_x=t._AvgPool=function(){return(_x=t._AvgPool=t.asm.AvgPool).apply(null,arguments)},D0=t._BatchMatMul=function(){return(D0=t._BatchMatMul=t.asm.BatchMatMul).apply(null,arguments)},vp=t._Ceil=function(){return(vp=t._Ceil=t.asm.Ceil).apply(null,arguments)},$x=t._ClipByValue=function(){return($x=t._ClipByValue=t.asm.ClipByValue).apply(null,arguments)},Bx=t._Conv2D=function(){return(Bx=t._Conv2D=t.asm.Conv2D).apply(null,arguments)},Ox=t._Conv2DBackpropInput=function(){return(Ox=t._Conv2DBackpropInput=t.asm.Conv2DBackpropInput).apply(null,arguments)},zx=t._Cos=function(){return(zx=t._Cos=t.asm.Cos).apply(null,arguments)},Gx=t._Cosh=function(){return(Gx=t._Cosh=t.asm.Cosh).apply(null,arguments)},Ux=t._CropAndResize=function(){return(Ux=t._CropAndResize=t.asm.CropAndResize).apply(null,arguments)},Xg=t._Cumprod=function(){return(Xg=t._Cumprod=t.asm.Cumprod).apply(null,arguments)},Wx=t._Cumsum=function(){return(Wx=t._Cumsum=t.asm.Cumsum).apply(null,arguments)},Kx=t._DepthToSpace=function(){return(Kx=t._DepthToSpace=t.asm.DepthToSpace).apply(null,arguments)},Vx=t._DepthwiseConv2dNative=function(){return(Vx=t._DepthwiseConv2dNative=t.asm.DepthwiseConv2dNative).apply(null,arguments)},Hx=t._Elu=function(){return(Hx=t._Elu=t.asm.Elu).apply(null,arguments)},qx=t._Equal=function(){return(qx=t._Equal=t.asm.Equal).apply(null,arguments)},Yg=t._Exp=function(){return(Yg=t._Exp=t.asm.Exp).apply(null,arguments)},jx=t._FlipLeftRight=function(){return(jx=t._FlipLeftRight=t.asm.FlipLeftRight).apply(null,arguments)},Xx=t._Floor=function(){return(Xx=t._Floor=t.asm.Floor).apply(null,arguments)},Ap=t._FloorDiv=function(){return(Ap=t._FloorDiv=t.asm.FloorDiv).apply(null,arguments)},ud=t._FusedBatchNorm=function(){return(ud=t._FusedBatchNorm=t.asm.FusedBatchNorm).apply(null,arguments)},Yx=t._FusedConv2D=function(){return(Yx=t._FusedConv2D=t.asm.FusedConv2D).apply(null,arguments)},Qx=t._FusedDepthwiseConv2D=function(){return(Qx=t._FusedDepthwiseConv2D=t.asm.FusedDepthwiseConv2D).apply(null,arguments)},Zx=t._Gather=function(){return(Zx=t._Gather=t.asm.Gather).apply(null,arguments)},at=t._GatherNd=function(){return(at=t._GatherNd=t.asm.GatherNd).apply(null,arguments)},Jx=t._Greater=function(){return(Jx=t._Greater=t.asm.Greater).apply(null,arguments)},eI=t._GreaterEqual=function(){return(eI=t._GreaterEqual=t.asm.GreaterEqual).apply(null,arguments)},tI=t._LeakyRelu=function(){return(tI=t._LeakyRelu=t.asm.LeakyRelu).apply(null,arguments)},rI=t._Less=function(){return(rI=t._Less=t.asm.Less).apply(null,arguments)},nI=t._LessEqual=function(){return(nI=t._LessEqual=t.asm.LessEqual).apply(null,arguments)},oI=t._Log=function(){return(oI=t._Log=t.asm.Log).apply(null,arguments)},pd=t._LogicalAnd=function(){return(pd=t._LogicalAnd=t.asm.LogicalAnd).apply(null,arguments)},Qg=t._Max=function(){return(Qg=t._Max=t.asm.Max).apply(null,arguments)},Zg=t._MaxPool=function(){return(Zg=t._MaxPool=t.asm.MaxPool).apply(null,arguments)},sI=t._Maximum=function(){return(sI=t._Maximum=t.asm.Maximum).apply(null,arguments)},aI=t._Mean=function(){return(aI=t._Mean=t.asm.Mean).apply(null,arguments)},iI=t._Min=function(){return(iI=t._Min=t.asm.Min).apply(null,arguments)},uI=t._Minimum=function(){return(uI=t._Minimum=t.asm.Minimum).apply(null,arguments)},pI=t._MirrorPad=function(){return(pI=t._MirrorPad=t.asm.MirrorPad).apply(null,arguments)},lI=t._Multiply=function(){return(lI=t._Multiply=t.asm.Multiply).apply(null,arguments)},ar=t._Neg=function(){return(ar=t._Neg=t.asm.Neg).apply(null,arguments)},mI=t._NonMaxSuppressionV3=function(){return(mI=t._NonMaxSuppressionV3=t.asm.NonMaxSuppressionV3).apply(null,arguments)},cI=t._NonMaxSuppressionV4=function(){return(cI=t._NonMaxSuppressionV4=t.asm.NonMaxSuppressionV4).apply(null,arguments)},dI=t._NonMaxSuppressionV5=function(){return(dI=t._NonMaxSuppressionV5=t.asm.NonMaxSuppressionV5).apply(null,arguments)},Jl=t._NotEqual=function(){return(Jl=t._NotEqual=t.asm.NotEqual).apply(null,arguments)},Jg=t._OneHot=function(){return(Jg=t._OneHot=t.asm.OneHot).apply(null,arguments)},eb=t._PadV2=function(){return(eb=t._PadV2=t.asm.PadV2).apply(null,arguments)},tb=t._Pow=function(){return(tb=t._Pow=t.asm.Pow).apply(null,arguments)},fI=t._Prelu=function(){return(fI=t._Prelu=t.asm.Prelu).apply(null,arguments)},rb=t._Prod=function(){return(rb=t._Prod=t.asm.Prod).apply(null,arguments)},hI=t._RealDiv=function(){return(hI=t._RealDiv=t.asm.RealDiv).apply(null,arguments)},P0=t._Relu=function(){return(P0=t._Relu=t.asm.Relu).apply(null,arguments)},nb=t._Relu6=function(){return(nb=t._Relu6=t.asm.Relu6).apply(null,arguments)},M0=t._ResizeBilinear=function(){return(M0=t._ResizeBilinear=t.asm.ResizeBilinear).apply(null,arguments)},gI=t._Reverse=function(){return(gI=t._Reverse=t.asm.Reverse).apply(null,arguments)},bI=t._RotateWithOffset=function(){return(bI=t._RotateWithOffset=t.asm.RotateWithOffset).apply(null,arguments)},yI=t._Round=function(){return(yI=t._Round=t.asm.Round).apply(null,arguments)},TI=t._Rsqrt=function(){return(TI=t._Rsqrt=t.asm.Rsqrt).apply(null,arguments)},xI=t._ScatterNd=function(){return(xI=t._ScatterNd=t.asm.ScatterNd).apply(null,arguments)},II=t._SelectV2=function(){return(II=t._SelectV2=t.asm.SelectV2).apply(null,arguments)},CI=t._Sigmoid=function(){return(CI=t._Sigmoid=t.asm.Sigmoid).apply(null,arguments)},kI=t._Sin=function(){return(kI=t._Sin=t.asm.Sin).apply(null,arguments)},SI=t._Softmax=function(){return(SI=t._Softmax=t.asm.Softmax).apply(null,arguments)},vI=t._SparseFillEmptyRows=function(){return(vI=t._SparseFillEmptyRows=t.asm.SparseFillEmptyRows).apply(null,arguments)},AI=t._SparseReshape=function(){return(AI=t._SparseReshape=t.asm.SparseReshape).apply(null,arguments)},wI=t._SparseSegmentReduction=function(){return(wI=t._SparseSegmentReduction=t.asm.SparseSegmentReduction).apply(null,arguments)},NI=t._Sqrt=function(){return(NI=t._Sqrt=t.asm.Sqrt).apply(null,arguments)},DI=t._Square=function(){return(DI=t._Square=t.asm.Square).apply(null,arguments)},PI=t._SquaredDifference=function(){return(PI=t._SquaredDifference=t.asm.SquaredDifference).apply(null,arguments)},MI=t._Step=function(){return(MI=t._Step=t.asm.Step).apply(null,arguments)},FI=t._StridedSlice=function(){return(FI=t._StridedSlice=t.asm.StridedSlice).apply(null,arguments)},EI=t._Sub=function(){return(EI=t._Sub=t.asm.Sub).apply(null,arguments)},RI=t._Sum=function(){return(RI=t._Sum=t.asm.Sum).apply(null,arguments)},LI=t._Tan=function(){return(LI=t._Tan=t.asm.Tan).apply(null,arguments)},_I=t._Tanh=function(){return(_I=t._Tanh=t.asm.Tanh).apply(null,arguments)},$I=t._Tile=function(){return($I=t._Tile=t.asm.Tile).apply(null,arguments)},BI=t._TopK=function(){return(BI=t._TopK=t.asm.TopK).apply(null,arguments)},OI=t._Transform=function(){return(OI=t._Transform=t.asm.Transform).apply(null,arguments)},zI=t._Transpose=function(){return(zI=t._Transpose=t.asm.Transpose).apply(null,arguments)},GI=t.__FusedMatMul=function(){return(GI=t.__FusedMatMul=t.asm._FusedMatMul).apply(null,arguments)},UI=t._malloc=function(){return(UI=t._malloc=t.asm.malloc).apply(null,arguments)},WI=t._free=function(){return(WI=t._free=t.asm.free).apply(null,arguments)},KI=t.___errno_location=function(){return(KI=t.___errno_location=t.asm.__errno_location).apply(null,arguments)},VI=t._emscripten_main_thread_process_queued_calls=function(){return(VI=t._emscripten_main_thread_process_queued_calls=t.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},ob=t.stackSave=function(){return(ob=t.stackSave=t.asm.stackSave).apply(null,arguments)},sb=t.stackRestore=function(){return(sb=t.stackRestore=t.asm.stackRestore).apply(null,arguments)},ld=t.stackAlloc=function(){return(ld=t.stackAlloc=t.asm.stackAlloc).apply(null,arguments)},HI=t.dynCall_iijjiiii=function(){return(HI=t.dynCall_iijjiiii=t.asm.dynCall_iijjiiii).apply(null,arguments)},qI=t.dynCall_jiji=function(){return(qI=t.dynCall_jiji=t.asm.dynCall_jiji).apply(null,arguments)};t.cwrap=Ce;var em;function md(K){this.name="ExitStatus",this.message="Program terminated with exit("+K+")",this.status=K}Mu=function K(){em||cd(),em||(Mu=K)};function cd(K){if(K=K||i,to>0||(Rg(),to>0))return;function Z(){em||(em=!0,t.calledRun=!0,!ae&&(Lg(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),_g()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),Z()},1)):Z()}t.run=cd;function F0(K){ce=K,od()||(t.onExit&&t.onExit(K),ae=!0),u(K,new md(K))}if(t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();cd();var tm;s&&(tm={uncaughtException:process.listeners("uncaughtException").filter(function(K){return!s.uncaughtException.indexOf(K)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(K){return!s.unhandledRejection.indexOf(K)>-1})});var rm;if(typeof e<"u")rm=e;else if(typeof WasmBackendModuleThreadedSimd<"u")rm=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(tm){var jI=rm._dispose;rm._dispose=function(){jI(),tm.uncaughtException.forEach(function(K){process.removeListener("uncaughtException",K)}),tm.unhandledRejection.forEach(function(K){process.removeListener("unhandledRejection",K)})}}return e.ready}})();typeof Ix=="object"&&typeof b0=="object"?b0.exports=g0:typeof define=="function"&&define.amd?define([],function(){return g0}):typeof Ix=="object"&&(Ix.WasmBackendModule=g0)});var oj=1e-7,sj=1e-4,Ja=class{constructor(e,t){this.backend=e;this.dataMover=t;this.data=new WeakMap;this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},ss=class{refCount(e){return ro("refCount")}incRef(e){return ro("incRef")}timerAvailable(){return!0}time(e){return ro("time")}read(e){return ro("read")}readSync(e){return ro("readSync")}readToGPU(e,t){return ro("readToGPU")}numDataIds(){return ro("numDataIds")}disposeData(e,t){return ro("disposeData")}write(e,t,n){return ro("write")}move(e,t,n,o,s){return ro("move")}memory(){return ro("memory")}floatPrecision(){return ro("floatPrecision")}epsilon(){return this.floatPrecision()===32?oj:sj}dispose(){return ro("dispose")}};function ro(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function U0(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,fb(r,e,t)}function aj(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,fb(r,t,n),fb(e,t,n)}function am(r,e,t){return Math.max(r,Math.min(e,t))}function ij(r){return r%2===0?r:r+1}function fb(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function uj(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function pj(r,e){let t=Math.random();return e*t+(1-t)*r}function lj(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function P(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Gt(r,e,t=""){P(Un(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function no(r){P(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function oa(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||Cr(r)&&!t)for(let n=0;n<r.length;++n)oa(r[n],e,t);else e.push(r);return e}function rt(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function mj(r){return r.length===0}function Un(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Di(r){return r%1===0}function cj(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function dj(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function fj(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return U0(e),e}function Pp(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function hj(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=e(s);if(t!=null&&s>=t){o();return}setTimeout(a,i)};a()})}function gj(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function hr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),P(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),P(r.every(n=>Di(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function tC(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:hr(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function rC(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function nC(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function oC(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function sC(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function bj(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function Cr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function hb(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function aC(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function sa(r){return typeof r=="string"||r instanceof String}function W0(r){return typeof r=="boolean"}function K0(r){return typeof r=="number"}function im(r){return Array.isArray(r)?im(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":K0(r)?"float32":sa(r)?"string":W0(r)?"bool":"float32"}function ei(r){return!!(r&&r.constructor&&r.call&&r.apply)}function um(r,e){for(let t=e;t<r;++t)if(r%t===0)return t;return r}function ti(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function V0(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=t[r+a]}else{let s=e[0],a=e.slice(1),i=a.reduce((p,u)=>p*u)*(n?2:1);for(let p=0;p<s;p++)o[p]=V0(r+p*i,a,t,n)}return o}function Dp(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return V0(0,r,e,t)}function hd(r,e){let t=pm(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function pm(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function yj(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return Dp(r,new Float32Array(t));if(e==="int32")return Dp(r,new Int32Array(t));if(e==="bool")return Dp(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function gd(r){r.forEach(e=>{P(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function Tj(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function xj(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function bd(r){return r&&r.then&&typeof r.then=="function"}var H0="tfjsflags",gb=class{constructor(e){this.global=e;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=Cj;this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(bd(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);H0 in e&&e[H0].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=Sj(o,s)})}};function Cj(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(kj(e,n[0],n[1]),n.join("="))),e}function kj(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function Sj(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function B(){return iC}var iC=null;function q0(r){iC=r}var uC;function pC(){if(uC==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");uC=r}return uC}function vj(){let r=pC();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function yd(r,e){let t=vj();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var as="Abs",Pi="Acos",Mi="Acosh",Nn="Add",oo="AddN",Fi="All",Ei="Any",so="ArgMax",ri="ArgMin",Ri="Asin",Li="Asinh",_i="Atan",$i="Atanh",Bi="Atan2",ao="AvgPool",lm="AvgPoolGrad",Ru="AvgPool3D",mm="AvgPool3DGrad",io="BatchMatMul",is="BatchToSpaceND",cm="Bincount",j0="BroadcastTo",dm="BroadcastArgs",Wn="Cast",uo="Ceil",Kn="ClipByValue",Lu="Complex",_u="ComplexAbs",us="Concat",po="Conv2D",fm="Conv2DBackpropFilter",lo="Conv2DBackpropInput",$u="Conv3D",hm="Conv3DBackpropFilterV2",gm="Conv3DBackpropInputV2",mo="Cos",co="Cosh",aa="Cumprod",fo="Cumsum",ia="CropAndResize",bm="DenseBincount",ua="DepthToSpace",ho="DepthwiseConv2dNative",ym="DepthwiseConv2dNativeBackpropFilter",Tm="DepthwiseConv2dNativeBackpropInput",xm="Diag",Bu="Dilation2D",Td="Dilation2DBackpropInput",xd="Dilation2DBackpropFilter",go="RealDiv",Ou="Einsum",bo="Elu",Im="EluGrad",Oi="Erf",pa="Equal",yo="Exp",ps="ExpandDims",la="Expm1",Cm="FFT",ni="Fill",ma="FlipLeftRight",To="Floor",xo="FloorDiv",Io="FusedBatchNorm",ls="GatherV2",ca="GatherNd",da="Greater",Co="GreaterEqual",Vn="Identity",km="IFFT",zu="Imag",zi="IsFinite",Gi="IsInf",Ui="IsNan",ko="LeakyRelu",fa="Less",ha="LessEqual",Sm="LinSpace",So="Log",Wi="Log1p",ga="LogicalAnd",Ki="LogicalNot",Mp="LogicalOr",X0="LogSoftmax",she="LowerBound",Gu="LRN",vm="LRNGrad",vo="Max",Ao="Maximum",wo="MaxPool",Am="MaxPoolGrad",Uu="MaxPool3D",wm="MaxPool3DGrad",Nm="MaxPoolWithArgmax",No="Mean",Do="Min",Po="Minimum",Mo="MirrorPad",Vi="Mod",Dm="Multinomial",Fo="Multiply",ms="Neg",ba="NotEqual",ya="NonMaxSuppressionV3",Hi="NonMaxSuppressionV4",Ta="NonMaxSuppressionV5",cs="OnesLike",xa="OneHot",ds="Pack",Eo="PadV2",ahe="Pool",Ro="Pow",Lo="Prelu",_o="Prod",oi="Range",Wu="Real",qi="Reciprocal",$o="Relu",fs="Reshape",si="ResizeNearestNeighbor",Pm="ResizeNearestNeighborGrad",Bo="ResizeBilinear",Mm="ResizeBilinearGrad",Oo="Relu6",Ia="Reverse",Ca="Round",zo="Rsqrt",ka="ScatterNd",Fm="SearchSorted",hs="Select",ji="Selu",gs="Slice",Go="Sin",Sa="Sinh",Xi="Sign",Uo="Sigmoid",Yi="Softplus",Wo="Sqrt",Ko="Sum",bs="SpaceToBatchND",ys="SplitV",Vo="Softmax",Ku="SparseFillEmptyRows",Qi="SparseReshape",Vu="SparseSegmentMean",Hu="SparseSegmentSum",qu="SparseToDense",Ho="SquaredDifference",ai="Square",va="StridedSlice",ju="StringNGrams",Em="StringSplit",Rm="StringToHashBucketFast",qo="Sub",Aa="Tan",jo="Tanh",Dn="Tile",wa="TopK",Na="Transform",Pn="Transpose",Lm="Unique",Ts="Unpack",Xu="UnsortedSegmentSum",ihe="UpperBound",xs="ZerosLike",Is="Step",Fp="FromPixels",Da="RotateWithOffset",Cs="_FusedMatMul",ks="FusedConv2D",Ss="FusedDepthwiseConv2D";function ii(...r){B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(...r)}function Aj(...r){B().getBool("IS_TEST")||B().getBool("PROD")||console.log(...r)}var _m=yd("kernelRegistry",()=>new Map),Id=yd("gradRegistry",()=>new Map);function Cd(r,e){let t=mC(r,e);return _m.get(t)}function lC(r){return Id.get(r)}function bb(r){let e=_m.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function Zi(r){let{kernelName:e,backendName:t}=r,n=mC(e,t);_m.has(n)&&ii(`The kernel '${e}' for backend '${t}' is already registered`),_m.set(n,r)}function Q0(r){let{kernelName:e}=r;Id.has(e)&&B().getBool("DEBUG")&&ii(`Overriding the gradient for '${e}'`),Id.set(e,r)}function che(r,e){let t=mC(r,e);if(!_m.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);_m.delete(t)}function dhe(r){if(!Id.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);Id.delete(r)}function fhe(r,e){bb(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});Zi(o)})}function mC(r,e){return`${e}_${r}`}var b={};Xe(b,{arraysEqual:()=>Un,assert:()=>P,assertNonNegativeIntegerDimensions:()=>gd,assertNonNull:()=>no,assertShapesMatch:()=>Gt,bytesFromStringArray:()=>aC,bytesPerElement:()=>hb,checkConversionForErrors:()=>oC,clamp:()=>am,computeStrides:()=>ti,createScalarValue:()=>Ej,createShuffledIndices:()=>fj,decodeString:()=>zm,distSquared:()=>lj,encodeString:()=>Qu,fetch:()=>Lj,fingerPrint64:()=>Fj,flatten:()=>oa,getArrayFromDType:()=>nC,getTypedArrayFromDType:()=>rC,hasEncodingLoss:()=>bj,hexToLong:()=>kd,indexToLoc:()=>xj,inferDtype:()=>im,inferFromImplicitShape:()=>gj,isBoolean:()=>W0,isFunction:()=>ei,isInt:()=>Di,isNumber:()=>K0,isPromise:()=>bd,isScalarShape:()=>mj,isString:()=>sa,isTypedArray:()=>Cr,isValidDtype:()=>sC,locToIndex:()=>Tj,makeOnesTypedArray:()=>hd,makeZerosNestedTypedArray:()=>yj,makeZerosTypedArray:()=>pm,nearestDivisor:()=>um,nearestLargerEven:()=>ij,now:()=>$p,parseAxisParam:()=>hr,randUniform:()=>pj,repeatedTry:()=>hj,rightPad:()=>Pp,shuffle:()=>U0,shuffleCombo:()=>aj,sizeFromShape:()=>rt,sizeToSquarishShape:()=>dj,squeezeShape:()=>tC,sum:()=>uj,swap:()=>fb,tanh:()=>cj,toNestedArray:()=>Dp,toTypedArray:()=>Om});var hC=Np(u2());var _p=hC.default||hC;function kd(r){return _p.fromString(r,!0,16)}var l2=kd("c3a5c85c97cb3127"),Lp=kd("b492b66fbe98f273"),an=kd("9ae16a3b2f90404f");function fC(r){return r.xor(r.shru(47))}function m2(r,e,t){let n=r.slice(e,e+t);return _p.fromBytes(Array.from(n),!0,!0)}function Ht(r,e){return m2(r,e,8)}function p2(r,e){return m2(r,e,4)}function Mr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Yu(r,e,t=kd("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function Nj(r,e,t,n,o,s){o=o.add(r),s=Mr(s.add(o).add(n),21);let a=o;return o=o.add(e),o=o.add(t),s=s.add(Mr(o,44)),[o.add(n),s.add(a)]}function Tb(r,e,t,n){return Nj(Ht(r,e),Ht(r,e+8),Ht(r,e+16),Ht(r,e+24),t,n)}function Dj(r,e=r.length){if(e>=8){let t=an.add(e*2),n=Ht(r,0).add(an),o=Ht(r,e-8),s=Mr(o,37).mul(t).add(n),a=Mr(n,25).add(o).mul(t);return Yu(s,a,t)}if(e>=4){let t=an.add(e*2),n=p2(r,0);return Yu(n.shl(3).add(e),p2(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),a=e+(o<<2);return fC(an.mul(s).xor(l2.mul(a))).mul(an)}return an}function Pj(r,e=r.length){let t=an.add(e*2),n=Ht(r,0).mul(Lp),o=Ht(r,8),s=Ht(r,e-8).mul(t),a=Ht(r,e-16).mul(an);return Yu(Mr(n.add(o),43).add(Mr(s,30)).add(a),n.add(Mr(o.add(an),18)).add(s),t)}function Mj(r,e=r.length){let t=an.add(e*2),n=Ht(r,0).mul(an),o=Ht(r,8),s=Ht(r,e-8).mul(t),a=Ht(r,e-16).mul(an),i=Mr(n.add(o),43).add(Mr(s,30)).add(a),p=Yu(i,n.add(Mr(o.add(an),18)).add(s),t),u=Ht(r,16).mul(t),l=Ht(r,24),m=i.add(Ht(r,e-32)).mul(t),c=p.add(Ht(r,e-24)).mul(t);return Yu(Mr(u.add(l),43).add(Mr(m,30)).add(c),u.add(Mr(l.add(n),18)).add(m),t)}function Fj(r,e=r.length){let t=_p.fromNumber(81,!0);if(e<=32)return e<=16?Dj(r,e):Pj(r,e);if(e<=64)return Mj(r,e);let n=t,o=t.mul(Lp).add(113),s=fC(o.mul(an).add(113)).mul(an),a=[_p.UZERO,_p.UZERO],i=[_p.UZERO,_p.UZERO];n=n.mul(an).add(Ht(r,0));let p=0,u=(e-1>>6)*64,l=u+(e-1&63)-63;do n=Mr(n.add(o).add(a[0]).add(Ht(r,p+8)),37).mul(Lp),o=Mr(o.add(a[1]).add(Ht(r,p+48)),42).mul(Lp),n=n.xor(i[1]),o=o.add(a[0]).add(Ht(r,p+40)),s=Mr(s.add(i[0]),33).mul(Lp),a=Tb(r,p,a[1].mul(Lp),n.add(i[0])),i=Tb(r,p+32,s.add(i[1]),o.add(Ht(r,p+16))),[s,n]=[n,s],p+=64;while(p!==u);let m=Lp.add(s.and(255).shl(1));return p=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Mr(n.add(o).add(a[0]).add(Ht(r,p+8)),37).mul(m),o=Mr(o.add(a[1]).add(Ht(r,p+48)),42).mul(m),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(Ht(r,p+40))),s=Mr(s.add(i[0]),33).mul(m),a=Tb(r,p,a[1].mul(m),n.add(i[0])),i=Tb(r,p+32,s.add(i[1]),o.add(Ht(r,p+16))),[s,n]=[n,s],Yu(Yu(a[0],i[0],m).add(fC(o).mul(l2)).add(s),Yu(a[1],i[1],m).add(n),m)}function Ej(r,e){return e==="string"?Qu(r):Om([r],e)}function Rj(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Om(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=oa(r)),B().getBool("DEBUG")&&oC(r,e),Rj(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function $p(){return B().platform.now()}function Lj(r,e){return B().platform.fetch(r,e)}function Qu(r,e="utf-8"){return e=e||"utf-8",B().platform.encode(r,e)}function zm(r,e="utf-8"){return e=e||"utf-8",B().platform.decode(r,e)}var gC=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new c2)}profileKernel(e,t,n){let o,s=()=>{o=n()},a,i=$p();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let u of o)u.dataSync();a=Promise.resolve({kernelMs:$p()-i})}if(B().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){let l=o[u];l.data().then(m=>{_j(m,l.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(p=>{this.logger.logKernelProfile(t,i,p[0],p[1],s,p[2])})})}};function _j(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var c2=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?Pp(`${o}ms`,9):o.error,p=Pp(e,25),u=t.rank,l=t.size,m=Pp(t.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||t.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${p}	%c${i}	%c${u}D ${m}	%c${l}	%c${c}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function d2(r,e,t){let n={},o={};for(let p=0;p<e.length;p++)n[e[p].id]=!0;for(let p=0;p<r.length;p++){let u=r[p],l=u.inputs;for(let m in l){let c=l[m],d=!1;for(let f=0;f<e.length;f++)if(n[c.id]){u.outputs.forEach(h=>n[h.id]=!0),d=!0,o[u.id]=!0;break}if(d)break}}let s={};s[t.id]=!0;let a={};for(let p=r.length-1;p>=0;p--){let u=r[p],l=u.inputs;for(let m=0;m<u.outputs.length;m++)if(s[u.outputs[m].id]){for(let c in l)s[l[c].id]=!0,a[u.id]=!0;break}}let i=[];for(let p=0;p<r.length;p++){let u=r[p];if(o[u.id]&&a[u.id]){let l={};for(let c in u.inputs){let d=u.inputs[c];n[d.id]&&(l[c]=d)}let m=Object.assign({},u);m.inputs=l,m.outputs=u.outputs,i.push(m)}}return i}function f2(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(p=>{let u=r[p.id];u!=null?a.push(u):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let p in s.inputs){if(!(p in i))throw new Error(`Cannot backprop through input ${p}. Available gradients found: ${Object.keys(i)}.`);let u=t(()=>i[p]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${p} must have 'float32' dtype, but has '${u.dtype}'`);let l=s.inputs[p];if(!Un(u.shape,l.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${p}' has shape '${u.shape}', which does not match the shape of the input '${l.shape}'`);if(r[l.id]==null)r[l.id]=u;else{let m=r[l.id];r[l.id]=n(m,u),m.dispose()}}}}var h2=20,Sd=3,bC=7;function g2(r,e,t,n){let o=ti(e),s=$j(r,e,t,o),a=e.length,i=xb(r,e,t,o,s),p=["Tensor"];return n&&(p.push(`  dtype: ${t}`),p.push(`  rank: ${a}`),p.push(`  shape: [${e}]`),p.push("  values:")),p.push(i.map(u=>"    "+u).join(`
`)),p.join(`
`)}function $j(r,e,t,n){let o=rt(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,p=t==="complex64"?Ad(r):r;if(i>1)for(let u=0;u<o/s;u++){let l=u*s;for(let m=0;m<s;m++)a[m]=Math.max(a[m],vd(p[l+m],0,t).length)}return a}function vd(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(bC))} + ${parseFloat(r[1].toFixed(bC))}j`:sa(r)?n=`'${r}'`:t==="bool"?n=b2(r):n=parseFloat(r.toFixed(bC)).toString(),Pp(n,e)}function b2(r){return r===0?"false":"true"}function xb(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],p=e.length;if(p===0){if(t==="complex64"){let h=Ad(r);return[vd(h[0],0,t)]}return t==="bool"?[b2(r[0])]:[r[0].toString()]}if(p===1){if(i>h2){let g=Sd*a,y=Array.from(r.slice(0,g)),T=Array.from(r.slice((i-Sd)*a,i*a));return t==="complex64"&&(y=Ad(y),T=Ad(T)),["["+y.map((x,I)=>vd(x,o[I],t)).join(", ")+", ..., "+T.map((x,I)=>vd(x,o[i-Sd+I],t)).join(", ")+"]"]}let h=t==="complex64"?Ad(r):Array.from(r);return["["+h.map((g,y)=>vd(g,o[y],t)).join(", ")+"]"]}let u=e.slice(1),l=n.slice(1),m=n[0]*a,c=[];if(i>h2){for(let h=0;h<Sd;h++){let g=h*m,y=g+m;c.push(...xb(r.slice(g,y),u,t,l,o,!1))}c.push("...");for(let h=i-Sd;h<i;h++){let g=h*m,y=g+m;c.push(...xb(r.slice(g,y),u,t,l,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*m,y=g+m;c.push(...xb(r.slice(g,y),u,t,l,o,h===i-1))}let d=p===2?",":"";c[0]="["+c[0]+d;for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<p;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function Ad(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var gt=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=rt(e),n!=null){let o=n.length;P(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||nC(t,this.size),this.strides=ti(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ma().makeTensor(this.values,this.shape,this.dtype)}},Ma=null,Gm=null,Bj=null;function y2(r){Ma=r}function T2(r){Gm=r}function x2(r){Bj=r}var Ye=class{constructor(e,t,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=e.slice(),this.dtype=t||"float32",this.size=rt(e),this.strides=ti(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Gm.buffer(this.shape,this.dtype,e)}bufferSync(){return Gm.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Dp(this.shape,e,this.dtype==="complex64")}arraySync(){return Dp(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Ma().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>zm(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ma().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Ma().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>zm(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ma().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ma().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Gm.print(this,e)}clone(){return this.throwIfDisposed(),Gm.clone(this)}toString(e=!1){let t=this.dataSync();return g2(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Gm.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ma().makeVariable(this,e,t,n)}};Object.defineProperty(Ye,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function Oj(){return yd("Tensor",()=>Ye)}Oj();var Zu=class extends Ye{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t;this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Un(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ma().disposeTensor(this),this.dataId=e.dataId,Ma().incRef(this,null)}dispose(){Ma().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Zu,Symbol.hasInstance,{value:r=>r instanceof Ye&&r.assign!=null&&r.assign instanceof Function});var Ns={};Xe(Ns,{assertTypesMatch:()=>yC,getTensorsInContainer:()=>wd,isTensorInList:()=>Gj,makeTypesMatch:()=>Ze});var I2=(i=>(i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6",i))(I2||{}),C2=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(C2||{}),k2=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(k2||{}),S2=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(S2||{}),v2=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(v2||{}),zj={float32:S2,int32:C2,bool:k2,complex64:v2};function Ft(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return zj[r][e]}function Ji(r){return Ft(r,"int32")}function Ze(r,e){if(r.dtype===e.dtype)return[r,e];let t=Ft(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function yC(r,e){P(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function Gj(r,e){return e.some(t=>t.id===r.id)}function wd(r){let e=[];return A2(r,e,new Set),e}function A2(r,e,t){if(r==null)return;if(r instanceof Ye){e.push(r);return}if(!Uj(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),A2(s,e,t))}}function Uj(r){return Array.isArray(r)||typeof r=="object"}function TC(r){return r.kernelName!=null}var xC=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Cb=class{constructor(e){this.ENV=e;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new xC}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ii(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new gC(this.backendInstance),!0}setupRegisteredKernels(){bb(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){bb(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof ss)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,ii(`Initialization of backend ${e} failed`),ii(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return ii(`Initialization of backend ${e} failed`),ii(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return Cb.nextTensorId++}nextVariableId(){return Cb.nextVariableId++}clone(e){let t=D.runKernel(Vn,{x:e}),n={x:e},o=a=>({x:()=>{let i="float32",p={x:a},u={dtype:i};return D.runKernel(Wn,p,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Cd(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(p=>{s+=p.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let p,u=TC(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(TC(e)){let{kernelName:f,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let y=Cd(f,this.backendName);P(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{let T=this.backend.numDataIds();p=y.kernelFunc({inputs:h,attrs:g,backend:this.backend});let x=Array.isArray(p)?p:[p];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,T,x);let I=x.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(o){let k=this.getTensorsForGradient(f,h,I);n=this.saveTensorsForBackwardMode(k)}return I}}else{let{forwardFunc:f}=e,h=g=>{!o||(n=g.map(y=>this.keep(this.clone(y))))};i=()=>{let g=this.backend.numDataIds();p=this.tidy(()=>f(this.backend,h));let y=Array.isArray(p)?p:[p];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}let{inputs:l,attrs:m}=e,c=TC(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),o&&this.addTapeNode(u,l,t,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(p)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=lC(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=s.map(u=>t[u]);let p=n.filter((u,l)=>a[l]);return i.concat(p)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&sa(e[0])&&(s=e.map(p=>Qu(p)));let a=o.write(s,t,n),i=new Ye(t,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let p=this.state.tensorInfo.get(a),u=aC(s);this.state.numBytes+=u-p.bytes,p.bytes=u}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(s,o)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:o,dtype:s}=e,a=new Ye(o,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new Zu(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*hb(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Zu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*hb(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},p=lC(e);p!=null&&(o=p.gradFunc),o!=null&&(i.gradient=u=>(u=u.map((l,m)=>{if(l==null){let c=n[m],d=pm(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return l}),o(u.length>1?u:u[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=wd(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(s instanceof Ye,()=>"The result y returned by f() must be a tensor.");let a=d2(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??Wj(s.shape),f2(i,a,u=>this.tidy(u),Kj);let p=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let l of u.saved)l.dispose()}),this.state.activeTape=null),{value:s,grads:p}})}customGrad(e){return P(ei(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(i=>i instanceof Ye),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((i,p)=>{o[p]=i});let s=(i,p)=>(n=e(...t,p),P(n.value instanceof Ye,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(ei(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,p)=>{let u=n.gradFunc(i,p),l=Array.isArray(u)?u:[u];P(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(l.every(c=>c instanceof Ye),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return l.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=$p(),n=await this.backend.time(e);return n.wallMs=$p()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new xC;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Ib=Cb;Ib.nextTensorId=0,Ib.nextVariableId=0;function Wj(r){let e=hd(rt(r),"float32");return D.makeTensor(e,r,"float32")}function IC(){let r=pC();if(r._tfengine==null){let e=new gb(r);r._tfengine=new Ib(e)}return q0(r._tfengine.ENV),y2(()=>r._tfengine),r._tfengine}var D=IC();function Kj(r,e){let t={a:r,b:e};return D.runKernel(Nn,t)}var Ju={};Xe(Ju,{isBrowser:()=>kC,isMobile:()=>qj,mockIsMobile:()=>Hj});function Vj(){return typeof navigator<"u"&&navigator!=null}var CC;function Hj(r){CC=r}function qj(r){if(CC!==void 0)return CC;if(r||Vj()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function kC(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Ds=B();Ds.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ds.registerFlag("IS_BROWSER",()=>kC());Ds.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Ds.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ds.registerFlag("PROD",()=>!1);Ds.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ds.getBool("DEBUG"));Ds.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ds.registerFlag("IS_TEST",()=>!1);Ds.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ds.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Ds.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Br(r,e){let t=r;if(Cr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||Cr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&B().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&N2(r,n,[]),n}function N2(r,e,t){if(t=t||[],!Array.isArray(r)&&!Cr(r)){P(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}P(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),P(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)N2(r[o],n,t.concat(o))}function w2(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function S(r,e,t,n="numeric"){if(r instanceof Ye)return w2(n,r.dtype,e,t),r;let o=im(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),w2(n,o,e,t),r==null||!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let p=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${p}'`)}let s=Br(r,o);!Cr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?Om(r,o):oa(r,[],!0);return D.makeTensor(i,s,o)}function eu(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>S(s,`${e}[${a}]`,t,n))}var D2="__op";function A(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+D2;let o=(...s)=>{D.startScope(t);try{let a=n(...s);return bd(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function jj(r,e){let t=S(r,"real","complex"),n=S(e,"imag","complex");Gt(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(Lu,o)}var un=A({complex_:jj});function pn(r,e,t,n){if(n==null&&(n=im(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){gd(e);let o=rt(e),s=rt(t);P(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],p=a===t.length-1?i!==rt(e.slice(a)):!0;P(t[a]===e[a]||!p,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Cr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?Om(r,n):oa(r,[],!0),D.makeTensor(r,e,n)}function Fr(r,e,t){let n=Br(r,t);return pn(r,e,n,t)}var Nd={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var kb=4;async function M2(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],p=Array.isArray(r)?r[a].tensor:r[i];if(p.dtype!=="float32"&&p.dtype!=="int32"&&p.dtype!=="bool"&&p.dtype!=="string"&&p.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${p.dtype}`);let u={name:i,shape:p.shape,dtype:p.dtype};if(p.dtype==="string"){let l=new Promise(async m=>{let c=await p.bytes(),d=c.reduce((g,y)=>g+y.length,0)+kb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let y=c[g],T=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(T,h),h+=kb,f.set(y,h),h+=y.length}m(f)});n.push(l)}else n.push(p.data());e!=null&&(u.group=e),t.push(u)}let s=await Promise.all(n);return{data:Xj(s),specs:t}}function Sb(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,p=s.shape,u=rt(p),l;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=Nd[m.dtype],d=r.slice(o,o+u*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(i==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){l=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=Jj()),l=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(i==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*c}else if(i==="string"){let m=rt(s.shape);l=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+kb))[0];o+=kb;let f=new Uint8Array(r.slice(o,o+d));l.push(f),o+=d}}else{let m=Nd[i],c=r.slice(o,o+u*m);if(i==="float32")l=new Float32Array(c);else if(i==="int32")l=new Int32Array(c);else if(i==="bool")l=new Uint8Array(c);else if(i==="complex64"){l=new Float32Array(c);let d=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let y=0;y<d.length;y++)d[y]=l[y*2],f[y]=l[y*2+1];let h=Fr(d,p,"float32"),g=Fr(f,p,"float32");t[a]=un(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*m}i!=="complex64"&&(t[a]=Fr(l,p,i))}return t}function Xj(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var SC=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function P2(r){return SC?Buffer.byteLength(r):new Blob([r]).size}function F2(r){if(SC)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function E2(r){if(SC){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function Um(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function vC(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function vb(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}async function Wm(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await e(r.weightsManifest);t.weightSpecs=n,t.weightData=o}return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),t}function ui(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:P2(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:P2(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function Yj(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function Qj(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function Zj(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function Jj(){let r=Yj(),e=Qj(),t=Zj();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],p=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=p}return new Float32Array(o)}}var Et=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Et.instance==null&&(Et.instance=new Et),Et.instance}static registerSaveRouter(e){Et.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Et.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Et.getHandlers(e,"save")}static getLoadHandlers(e,t){return Et.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Et.getInstance().loadRouters:Et.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},R2=r=>Et.registerSaveRouter(r),L2=r=>Et.registerLoadRouter(r),_2=r=>Et.getSaveHandlers(r),$2=(r,e)=>Et.getLoadHandlers(r,e);var AC="tensorflowjs",wC=1,Bp="models_store",ep="model_info_store";function B2(){if(!B().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function NC(r){let e=r.result;e.createObjectStore(Bp,{keyPath:"modelPath"}),e.createObjectStore(ep,{keyPath:"modelPath"})}var tu=class{constructor(e){if(this.indexedDB=B2(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(AC,wC);s.onupgradeneeded=()=>NC(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(Bp,"readonly"),u=i.objectStore(Bp).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=l=>(a.close(),o(u.error)),i.oncomplete=()=>a.close()}else{let i=ui(t),p=a.transaction(ep,"readwrite"),u=p.objectStore(ep),l=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),m;l.onsuccess=()=>{m=a.transaction(Bp,"readwrite");let d=m.objectStore(Bp).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=f=>{u=p.objectStore(ep);let h=u.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(d.error)),h.onerror=g=>(a.close(),o(d.error))}},l.onerror=c=>(a.close(),o(l.error)),p.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};tu.URL_SCHEME="indexeddb://";var O2=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(tu.URL_SCHEME)?e6(r.slice(tu.URL_SCHEME.length)):null;Et.registerSaveRouter(O2);Et.registerLoadRouter(O2);function e6(r){return new tu(r)}function t6(r){return r.startsWith(tu.URL_SCHEME)?r.slice(tu.URL_SCHEME.length):r}var DC=class{constructor(){this.indexedDB=B2()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(AC,wC);n.onupgradeneeded=()=>NC(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(ep,"readonly"),i=s.objectStore(ep).getAll();i.onsuccess=()=>{let p={};for(let u of i.result)p[u.modelPath]=u.modelArtifactsInfo;e(p)},i.onerror=p=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=t6(e),new Promise((t,n)=>{let o=this.indexedDB.open(AC,wC);o.onupgradeneeded=()=>NC(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(ep,"readwrite"),i=a.objectStore(ep),p=i.get(e),u;p.onsuccess=()=>{if(p.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let l=i.delete(e),m=()=>{u=s.transaction(Bp,"readwrite");let d=u.objectStore(Bp).delete(e);d.onsuccess=()=>t(p.result.modelArtifactsInfo),d.onerror=f=>n(p.error)};l.onsuccess=m,l.onerror=c=>(m(),s.close(),n(p.error))}},p.onerror=l=>(s.close(),n(p.error)),a.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var ru="/",Km="tensorflowjs_models",z2="info",r6="model_topology",n6="weight_specs",o6="weight_data",s6="model_metadata";function G2(r){return{info:[Km,r,z2].join(ru),topology:[Km,r,r6].join(ru),weightSpecs:[Km,r,n6].join(ru),weightData:[Km,r,o6].join(ru),modelMetadata:[Km,r,s6].join(ru)}}function U2(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function a6(r){let e=r.split(ru);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(ru)}function i6(r){return r.startsWith(nu.URL_SCHEME)?r.slice(nu.URL_SCHEME.length):r}var nu=class{constructor(e){if(!B().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=G2(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=ui(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,F2(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw U2(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=E2(a),t}};nu.URL_SCHEME="localstorage://";var W2=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(nu.URL_SCHEME)?u6(r.slice(nu.URL_SCHEME.length)):null;Et.registerSaveRouter(W2);Et.registerLoadRouter(W2);function u6(r){return new nu(r)}var PC=class{constructor(){P(B().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Km+ru,n=ru+z2;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=a6(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=i6(e);let t=G2(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return U2(t),n}};var Vm="://",ln=class{constructor(){this.managers={}}static getInstance(){return ln.instance==null&&(ln.instance=new ln),ln.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Vm)&&(e=e.slice(0,e.indexOf(Vm))),P(e.length>0,()=>"scheme must not be an empty string.");let n=ln.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Ab(r){if(r.indexOf(Vm)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ln.getSchemes().join(",")}`);return{scheme:r.split(Vm)[0],path:r.split(Vm)[1]}}async function K2(r,e,t=!1){P(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Et.getLoadHandlers(r);P(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),P(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Et.getSaveHandlers(e);P(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=Ab(r).scheme,p=Ab(r).path,u=i===Ab(r).scheme,l=await o.load();t&&u&&await ln.getManager(i).removeModel(p);let m=await a.save(l);return t&&!u&&await ln.getManager(i).removeModel(p),m.modelArtifactsInfo}async function V2(){let r=ln.getSchemes(),e={};for(let t of r){let n=await ln.getManager(t).listModels();for(let o in n){let s=t+Vm+o;e[s]=n[o]}}return e}async function H2(r){let e=Ab(r);return ln.getManager(e.scheme).removeModel(e.path)}async function q2(r,e){return K2(r,e,!1)}async function j2(r,e){return K2(r,e,!0)}var X2=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(B().get("IS_BROWSER")){B().setPlatform("browser",new X2);try{ln.registerManager(nu.URL_SCHEME,new PC)}catch{}try{ln.registerManager(tu.URL_SCHEME,new DC)}catch{}}var p6={importFetch:()=>Y2()},MC;var Z2=class{constructor(){this.util=Q2(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return B().global.fetch!=null?B().global.fetch(e,t):(MC==null&&(MC=p6.importFetch()),MC(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};B().get("IS_NODE")&&!B().get("IS_BROWSER")&&B().setPlatform("node",new Z2);function xe(r,e="float32",t){return e=e||"float32",gd(r),new gt(r,e,t)}function l6(r,e){let t=S(r,"x","cast");if(!sC(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(Wn,n,o)}var ee=A({cast_:l6});function m6(r){let t={x:S(r,"x","clone","string_or_numeric")};return D.runKernel(Vn,t)}var Mn=A({clone_:m6});function FC(r,e=!1){console.log(r.toString(e))}IC();var c6={buffer:xe,cast:ee,clone:Mn,print:FC};T2(c6);var Or={};Xe(Or,{browserFiles:()=>t1,browserHTTPRequest:()=>o1,concatenateArrayBuffers:()=>Um,copyModel:()=>q2,decodeWeights:()=>Sb,encodeWeights:()=>M2,fromMemory:()=>a1,fromMemorySync:()=>$C,getLoadHandlers:()=>$2,getModelArtifactsForJSON:()=>Wm,getModelArtifactsInfoForJSON:()=>ui,getSaveHandlers:()=>_2,http:()=>Pb,isHTTPScheme:()=>Db,listModels:()=>V2,loadWeights:()=>r1,moveModel:()=>j2,registerLoadRouter:()=>L2,registerSaveRouter:()=>R2,removeModel:()=>H2,weightsLoaderFactory:()=>LC,withSaveHandler:()=>i1,withSaveHandlerSync:()=>u1});var d6="model",f6=".json",h6=".weights.bin";function J2(r){return new Promise(e=>setTimeout(e)).then(r)}var wb=class{constructor(e){if(!B().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(wb.URL_SCHEME)&&(e=e.slice(wb.URL_SCHEME.length)),(e==null||e.length===0)&&(e=d6),this.modelJsonFileName=e+f6,this.weightDataFileName=e+h6}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=vb(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await J2(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await J2(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ui(e)}}}},Dd=wb;Dd.URL_SCHEME="downloads://";var e1=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let p=Wm(s,u=>this.loadWeights(u));e(p)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[t,Um(a)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>vC(s.name)),o={};for(let s of e)s.paths.forEach(a=>{let i=vC(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},g6=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Dd.URL_SCHEME)?b6(r.slice(Dd.URL_SCHEME.length)):null;Et.registerSaveRouter(g6);function b6(r="model"){return new Dd(r)}function t1(r){return new e1(r)}function EC(r,e,t,n){a(r),t=t??0,n=n??1,i(t,n);let o=0,s=p=>(p.then(u=>{let l=t+ ++o/r.length*(n-t);return e(l),u}),p);function a(p){P(p!=null&&Array.isArray(p)&&p.length>0,()=>"promises must be a none empty array")}function i(p,u){P(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${p}`),P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),P(u>=p,()=>`startFraction must be no more than endFraction, but got startFraction ${p} and endFraction ${u}`)}return Promise.all(r.map(s))}async function RC(r,e){e==null&&(e={});let t=e.fetchFunc==null?B().platform.fetch:e.fetchFunc,n=r.map(m=>t(m,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await EC(n,e.onProgress,o,s)).map(m=>m.arrayBuffer()),p=.5,u=1;return e.onProgress==null?await Promise.all(i):await EC(i,e.onProgress,p,u)}async function r1(r,e="",t,n){return LC(a=>RC(a,{requestInit:n}))(r,e,t)}function LC(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,T=Nd[y]*rt(g.shape),x=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:T})};n!=null?n.forEach((I,k)=>{I===g.name&&(x(),a[k]=!0)}):x(),i.push(g.name),h+=T})}),!a.every(d=>d)){let d=n.filter((f,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let p=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),u=[];p.forEach(d=>{e[d].paths.forEach(f=>{let h=t+(t.endsWith("/")?"":"/")+f;u.push(h)})});let l=await r(u),m={},c=0;return p.forEach(d=>{let f=e[d].paths.length,h=0;for(let I=0;I<f;I++)h+=l[c+I].byteLength;let g=new ArrayBuffer(h),y=new Uint8Array(g),T=0;for(let I=0;I<f;I++){let k=new Uint8Array(l[c+I]);y.set(k,T),T+=k.byteLength}s[d].forEach(I=>{let k=g.slice(I.groupOffset,I.groupOffset+I.sizeBytes),w=Sb(k,[I.manifestEntry]);for(let M in w)m[M]=w[M]}),c+=f}),m}}var y6="application/octet-stream",T6="application/json",Nb=class{constructor(e,t){this.DEFAULT_METHOD="POST";if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=B().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=vb(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:T6}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:y6}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:ui(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Wm(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=x6(t),s=this.weightPathPrefix||n,a=[];for(let l of e)a.push(...l.weights);let i=[],p=[];for(let l of e)for(let m of l.paths)this.weightUrlConverter!=null?p.push(this.weightUrlConverter(m)):i.push(s+m+o);this.weightUrlConverter&&i.push(...await Promise.all(p));let u=await RC(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Um(u)]}};Nb.URL_SCHEME_REGEX=/^https?:\/\//;function x6(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function Db(r){return r.match(Nb.URL_SCHEME_REGEX)!=null}var n1=(r,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>Db(n)):t=Db(r),t)return Pb(r,e)}return null};Et.registerSaveRouter(n1);Et.registerLoadRouter(n1);function Pb(r,e){return new Nb(r,e)}function o1(r,e){return Pb(r,e)}var Mb=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},_C=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},s1=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function a1(r,e,t,n){let o=arguments;return new s1($C(...o))}function $C(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Mb(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Mb({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Mb({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function i1(r){return new _C(r)}function u1(r){return new _C(r)}var m1={};Xe(m1,{confusionMatrix:()=>l1});function I6(r,e,t=!1,n=!1){let o=S(r,"a","matMul"),s=S(e,"b","matMul");[o,s]=Ze(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return D.runKernel(io,a,i)}var He=A({matMul_:I6});function C6(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:S(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:n};return D.runKernel(xa,s,a)}var ou=A({oneHot_:C6});function sTe(){B().set("PROD",!0)}function aTe(){B().set("DEBUG",!0)}function iTe(){B().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function BC(r){B().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}x2(BC);function uTe(){D.disposeVariables()}function Fn(){return D}function Pd(){return D.memory()}function pTe(r){return D.profile(r)}function z(r,e){return D.tidy(r,e)}function Me(r){wd(r).forEach(t=>t.dispose())}function Ut(r){return D.keep(r)}function lTe(r){return D.time(r)}function k6(r){return D.setBackend(r)}function mTe(){return D.ready()}function cTe(){return D.backendName}function dTe(r){D.removeBackend(r)}function fTe(r){return D.findBackend(r)}function hTe(r){return D.findBackendFactory(r)}function tp(r,e,t=1){return D.registerBackend(r,e,t)}function p1(){return D.backend}function gTe(r,e){B().setPlatform(r,e)}function S6(r){let t={input:S(r,"input","imag")};return D.runKernel(zu,t)}var su=A({imag_:S6});function v6(r){let t={x:S(r,"x","neg")};return D.runKernel(ms,t)}var Je=A({neg_:v6});function A6(r){let t={input:S(r,"input","real")};return D.runKernel(Wu,t)}var pi=A({real_:A6});function w6(r,e,t){let n=S(r,"x","transpose");if(e==null&&(e=n.shape.map((a,i)=>i).reverse()),P(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(a=>{P(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${e}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:e};return n.dtype==="complex64"?z(()=>{let a=pi(n),i=su(n);return a=D.runKernel(Pn,{x:a},s),i=D.runKernel(Pn,{x:i},s),t&&(i=Je(i)),un(a,i)}):D.runKernel(Pn,o,s)}var Ue=A({transpose_:w6});function N6(r,e,t){let n=S(r,"labels","confusionMatrix"),o=S(e,"predictions","confusionMatrix");P(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),P(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),P(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),P(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),P(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=ou(ee(n,"int32"),t),a=ou(ee(o,"int32"),t),i=Ue(s),p=He(i,a);return ee(p,"int32")}var l1=A({confusionMatrix_:N6});var wr={};Xe(wr,{assertAndGetBroadcastShape:()=>ze,getBroadcastDims:()=>c1,getReductionAxes:()=>Ct});function c1(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function Ct(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function ze(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}var Fb={};Xe(Fb,{fromPixels:()=>L6,fromPixelsAsync:()=>E6,toPixels:()=>R6});function OC(r,e,t){if(no(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Br(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return pn(r,e,n,t)}var Op;function d1(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o&&o&&r.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(Cd(Fp,D.backendName)!=null){let f={pixels:r},h={numChannels:e};return D.runKernel(Fp,f,h)}let[u,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(a)m=r.getContext("2d").getImageData(0,0,u,l).data;else if(n||t)m=r.data;else if(s||o||i){if(Op==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Op=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Op=document.createElement("canvas").getContext("2d");Op.canvas.width=u,Op.canvas.height=l,Op.drawImage(r,0,0,u,l),m=Op.getImageData(0,0,u,l).data}let c;if(e===4)c=new Int32Array(m);else{let f=u*l;c=new Int32Array(f*e);for(let h=0;h<f;h++)for(let g=0;g<e;++g)c[h*e+g]=m[h*4+g]}return OC(c,[l,u,e],"int32")}function D6(r){return r!=null&&r.data instanceof Uint8Array}function P6(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function M6(r){return r!=null&&r.width!==0&&r.height!==0}function F6(r){return P6()&&!(r instanceof ImageBitmap)&&M6(r)&&!D6(r)}async function E6(r,e=3){let t=null;if(B().getBool("WRAP_TO_IMAGEBITMAP")&&F6(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return d1(t,e)}async function R6(r,e){let t=S(r,"img","toPixels");if(!(r instanceof Ye)){let u=t;t=ee(u,"int32"),u.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,p=new Uint8ClampedArray(o*n*4);for(let u=0;u<n*o;++u){let l=[0,0,0,255];for(let c=0;c<s;c++){let d=a[u*s+c];if(t.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(t.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(l[0]=d*i,l[1]=d*i,l[2]=d*i):l[c]=d*i}let m=u*4;p[m+0]=Math.round(l[0]),p[m+1]=Math.round(l[1]),p[m+2]=Math.round(l[2]),p[m+3]=Math.round(l[3])}if(e!=null){e.width=o,e.height=n;let u=e.getContext("2d"),l=new ImageData(p,o,n);u.putImageData(l,0,0)}return t!==r&&t.dispose(),p}var L6=A({fromPixels_:d1});var Eb={};Xe(Eb,{prepareAndValidate:()=>f1});function f1(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(rt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let m=0;m<o.length-1;++m)a*=o[m];let i=r.shape,p=o.slice();p.pop();let u=1;for(let m=s;m<t;++m)u*=i[m],p.push(i[m]);let l=[...ti(r.shape).map(m=>m/u),1].slice(0,s);return[p,a,u,l]}var Md={};Xe(Md,{calculateShapes:()=>h1,validateInput:()=>Rb,validateUpdateShape:()=>zC});function zC(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function Rb(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}zC(t,e,r)}function h1(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let m=o;m<s;++m)a*=t[m];let i=o<1?1:o,p=rt(e.shape)/i,u=[...ti(t.slice(0,o)),1],l=rt(t);return{sliceRank:o,numUpdates:p,sliceSize:a,strides:u,outputSize:l}}var Tt={};Xe(Tt,{assertParamsValid:()=>$6,computeFlatOffset:()=>U6,computeOutShape:()=>O6,getNormalizedAxes:()=>z6,isSliceContinous:()=>G6,maskToAxes:()=>B6,parseSliceParams:()=>UC,sliceInfo:()=>W6,startForAxis:()=>k1,startIndicesWithElidedDims:()=>x1,stopForAxis:()=>S1,stopIndicesWithElidedDims:()=>I1,stridesForAxis:()=>C1,stridesWithElidedDims:()=>b1});var GC=-2,_6=-1;function $6(r,e,t){let n=r.shape.length;P(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),P(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)P(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function B6(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function O6(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function b1(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function y1(r,e,t){return t<=r?t:t-(e-1)}function T1(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function z6(r,e,t,n,o,s,a,i,p){let u=r.length,l=new Array(u),m=new Array(u),c=new Array(u);if(e.length&&t>0){let d=e[0],f=t+1;l=x1(a,d,f,n,r),m=I1(i,d,f,o,r),c=b1(s,d,f,r)}else for(let d=0;d<u;d++)l[d]=k1(a,n,s,r,d,p),m[d]=S1(i,o,s,r,d,p),c[d]=C1(s,d,p);return{begin:l,end:m,strides:c}}function x1(r,e,t,n,o){let s=[...o],a=T1(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let p=y1(e,t,i),u=n[p];r&1<<p&&(u=0),s[i]=u}return s}function I1(r,e,t,n,o){let s=[...o],a=T1(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let p=y1(e,t,i),u=n[p];r&1<<p&&(u=Number.MAX_SAFE_INTEGER),s[i]=u}for(let i=0;i<s.length;i++){let p=o[i];s[i]<0&&(s[i]+=p),s[i]=am(0,s[i],o[i])}return s}function C1(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function k1(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let p=n[o];return a<0&&(a+=p),a=am(0,a,p-1),a}function S1(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let p=n[o];return a<0&&(a+=p),i>0?a=am(0,a,p):a=am(-1,a,p-1),a}function G6(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function U6(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function UC(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{P(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(P(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function W6(r,e,t,n,o,s,a,i,p){let u;if(n==null?(u=new Array(e.length),u.fill(1)):u=n,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,m={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:p};for(let x=0;x<m.dims;x++)l&&(1<<x&i)!==0&&m.numAddAxisAfterEllipsis++,1<<x&a&&(l=!0);l||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};K6(m,c);let d=!0,f=!0,h=!0,g=[],y=[];for(let x=0;x<r.length;++x){if(c.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);let I=!!(c.shrinkAxisMask&1<<x),k=r[x];if(k===-1){g.push(I?1:-1);continue}let w=[c.beginMask&1<<x,c.endMask&1<<x],M=[c.strides[x]>0?0:-1,c.strides[x]>0?k:k-1];if(I&&c.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[x]===1;let F=!!(c.beginMask&1<<x&&c.endMask&1<<x);if(c.beginValid&&c.endValid){if(I){let W=c.begin[x]<0?k+c.begin[x]:c.begin[x];if(c.begin[x]=W,c.end[x]=c.begin[x]+1,W<0||W>=k)throw Error(`slice index ${c.begin[x]} of dimension ${x} out of bounds.`)}else c.begin[x]=g1(c.begin[x],0,c.strides[x],k,w,M),c.end[x]=g1(c.end[x],1,c.strides[x],k,w,M);let G=c.strides[x]===1&&c.begin[x]===0&&c.end[x]===k;d=d&&G,f=f&&(x===0&&c.strides[x]===1||G)}else d=d&&c.strides[x]===1&&F,f=f&&(x===0&&c.strides[x]===1||F);let E,$=!1;if(c.beginValid&&c.endValid?(E=c.end[x]-c.begin[x],$=!0):I?(E=1,$=!0):F&&k>=0&&(c.strides[x]<0?E=-k:E=k,$=!0),$){let G;E===0||E<0!=c.strides[x]<0?G=0:G=Math.trunc(E/c.strides[x])+(E%c.strides[x]!==0?1:0),g.push(G)}else g.push(-1)}for(let x=0;x<c.finalShapeGatherIndices.length;++x){let I=c.finalShapeGatherIndices[x];I>=0?y.push(g[I]):I===GC&&y.push(1)}return{finalShapeSparse:y.filter((x,I)=>c.finalShapeGatherIndices[I]!==GC),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function K6(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(GC),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(_6),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function g1(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var re={};Xe(re,{Serializable:()=>Lb,SerializationMap:()=>au,registerClass:()=>En});var Lb=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},au=class{constructor(){this.classNameMap={}}static getMap(){return au.instance==null&&(au.instance=new au),au.instance}static register(e){au.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function En(r){P(r.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),P(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),au.register(r)}var N1={};Xe(N1,{TEST_EPSILON_FLOAT16:()=>v1,encodeStrings:()=>w1,expectArrayBuffersEqual:()=>Y6,expectArraysClose:()=>H6,expectArraysEqual:()=>j6,expectNumbersClose:()=>A1,expectPromiseToFail:()=>q6,expectValuesInRange:()=>X6,testEpsilon:()=>_b});var V6=.001,v1=.1;function H6(r,e,t){return t==null&&(t=_b()),WC(r,e,(n,o)=>KC(n,o,t))}function _b(){return D.backend.floatPrecision()===32?V6:v1}function WC(r,e,t){let n=!0;if((Cr(r)||Cr(e))&&(n=!1),Cr(r)&&Cr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=Br(r),i=Br(e);if(!Un(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=Cr(r)?r:oa(r),s=Cr(e)?e:oa(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],p=s[a];if(!t(i,p))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${p}.
Actual:   ${o}.
Expected: ${s}.`)}}function q6(r,e){r().then(()=>e.fail(),()=>e())}function j6(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return sa(r)||sa(r[0])||sa(e)||sa(e[0])?WC(r,t,(n,o)=>n==o):WC(r,e,(n,o)=>KC(n,o,0))}function A1(r,e,t){if(t==null&&(t=_b()),!KC(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function KC(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function X6(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function Y6(r,e){let t=new Float32Array(r),n=new Float32Array(e);if(t.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${t.length}`);for(let o=0;o<n.length;o++)if(t[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${t[o]} instead`)}function w1(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?w1(t):r[e]=Qu(t)}return r}var Q6="0.0.0";function Z6(r,e){let t=S(r,"a","add"),n=S(e,"b","add");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Nn,o)}var Q=A({add_:Z6});function J6(r,e){let t=S(r,"a","floorDiv"),n=S(e,"b","floorDiv");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(xo,o)}var Fd=A({floorDiv_:J6});function e5(r,e){let t=S(r,"a","div"),n=S(e,"b","div");if([t,n]=Ze(t,n),t.dtype==="int32"&&n.dtype==="int32")return Fd(t,n);let o={a:t,b:n},s={};return D.runKernel(go,o,s)}var le=A({div_:e5});function t5(r,e){let t=S(r,"a","mul"),n=S(e,"b","mul");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Fo,o)}var L=A({mul_:t5});function r5(r){let e=S(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(_u,t)}else{let t={x:e};return D.runKernel(as,t)}}var $t=A({abs_:r5});function n5(r){let t={x:S(r,"x","acos")};return D.runKernel(Pi,t)}var VC=A({acos_:n5});function o5(r){let t={x:S(r,"x","acosh")};return D.runKernel(Mi,t)}var HC=A({acosh_:o5});function s5(r){P(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),P(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>S(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!Un(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(oo,n)}var qC=A({addN_:s5});function a5(r,e=null,t=!1){let o={x:S(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(Fi,o,s)}var Ed=A({all_:a5});function i5(r,e=null,t=!1){let o={x:S(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(Ei,o,s)}var Hm=A({any_:i5});function u5(r,e=0){let n={x:S(r,"x","argMax")},o={axis:e};return D.runKernel(so,n,o)}var iu=A({argMax_:u5});function p5(r,e=0){let n={x:S(r,"x","argMin")},o={axis:e};return D.runKernel(ri,n,o)}var jC=A({argMin_:p5});function l5(r){let t={x:S(r,"x","asin")};return D.runKernel(Ri,t)}var XC=A({asin_:l5});function m5(r){let t={x:S(r,"x","asinh")};return D.runKernel(Li,t)}var YC=A({asinh_:m5});function c5(r){let t={x:S(r,"x","atan")};return D.runKernel(_i,t)}var QC=A({atan_:c5});function d5(r,e){let t=S(r,"a","atan2"),n=S(e,"b","atan2");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Bi,o)}var ZC=A({atan2_:d5});function f5(r){let t={x:S(r,"x","atanh")};return D.runKernel($i,t)}var JC=A({atanh_:f5});function h5(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],p=P1(o);return Gp(r,i,t,s,n,null,null,p)}function tk(r,e,t,n,o,s,a="channelsLast"){let[i,p]=$b(e),u;if(a==="channelsLast")u=[i,p,r[3],r[3]];else if(a==="channelsFirst")u=[i,p,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Gp(r,u,t,n,o,s,!1,a)}function g5(r,e,t,n,o,s,a="NDHWC"){let[i,p,u]=ek(e),l,m;if(a==="NDHWC")m="channelsLast",l=[i,p,u,r[4],r[4]];else if(a==="NCDHW")m="channelsFirst",l=[i,p,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return D1(r,l,t,n,o,!1,m,s)}function Gp(r,e,t,n,o,s,a=!1,i="channelsLast"){let[p,u,l,m]=[-1,-1,-1,-1];if(i==="channelsLast")[p,u,l,m]=r;else if(i==="channelsFirst")[p,m,u,l]=r;else throw new Error(`Unknown dataFormat ${i}`);let[c,d,,f]=e,[h,g]=$b(t),[y,T]=$b(n),x=qm(c,y),I=qm(d,T),{padInfo:k,outHeight:w,outWidth:M}=T5(o,u,l,h,g,x,I,s,i),F=a?f*m:f,E;return i==="channelsFirst"?E=[p,F,w,M]:i==="channelsLast"&&(E=[p,w,M,F]),{batchSize:p,dataFormat:i,inHeight:u,inWidth:l,inChannels:m,outHeight:w,outWidth:M,outChannels:F,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:I,dilationHeight:y,dilationWidth:T,inShape:r,outShape:E,filterShape:e}}function D1(r,e,t,n,o,s=!1,a="channelsLast",i){let[p,u,l,m,c]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[p,u,l,m,c]=r;else if(a==="channelsFirst")[p,c,u,l,m]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,f,h,,g]=e,[y,T,x]=ek(t),[I,k,w]=ek(n),M=qm(d,I),F=qm(f,k),E=qm(h,w),{padInfo:$,outDepth:G,outHeight:W,outWidth:V}=x5(o,u,l,m,y,T,x,M,F,E,i),q=s?g*c:g,j;return a==="channelsFirst"?j=[p,q,G,W,V]:a==="channelsLast"&&(j=[p,G,W,V,q]),{batchSize:p,dataFormat:a,inDepth:u,inHeight:l,inWidth:m,inChannels:c,outDepth:G,outHeight:W,outWidth:V,outChannels:q,padInfo:$,strideDepth:y,strideHeight:T,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:M,effectiveFilterHeight:F,effectiveFilterWidth:E,dilationDepth:I,dilationHeight:k,dilationWidth:w,inShape:r,outShape:j,filterShape:e}}function b5(r,e,t,n,o){n==null&&(n=rk(r,e,t));let s=r[0],a=r[1],i=zp((s-e+2*n)/t+1,o),p=zp((a-e+2*n)/t+1,o);return[i,p]}function y5(r,e,t,n,o,s){o==null&&(o=rk(r,e,n));let a=r[0],i=r[1],p=r[2],u=zp((a-e+2*o)/n+1,s),l=zp((i-e+2*o)/n+1,s),m=zp((p-e+2*o)/n+1,s);return[u,l,m,t]}function rk(r,e,t,n=1){let o=qm(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function $b(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function ek(r){return typeof r=="number"?[r,r,r]:r}function qm(r,e){return e<=1?r:r+(r-1)*(e-1)}function T5(r,e,t,n,o,s,a,i,p){let u,l,m;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=b5([e,t],s,n,r,i);l=d[0],m=d[1]}else if(r==="same"){l=Math.ceil(e/n),m=Math.ceil(t/o);let c=Math.max(0,(l-1)*n+s-e),d=Math.max(0,(m-1)*o+a-t),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),y=d-g;u={top:f,bottom:h,left:g,right:y,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-s+1)/n),m=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let c=p==="channelsLast"?r[1][0]:r[2][0],d=p==="channelsLast"?r[1][1]:r[2][1],f=p==="channelsLast"?r[2][0]:r[3][0],h=p==="channelsLast"?r[2][1]:r[3][1];u={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},l=zp((e-s+c+d)/n+1,i),m=zp((t-a+f+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:l,outWidth:m}}function x5(r,e,t,n,o,s,a,i,p,u,l){let m,c,d,f;if(typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=y5([e,t,n,1],i,1,o,r,l);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(e/o),d=Math.ceil(t/s),f=Math.ceil(n/a);let h=(c-1)*o+i-e,g=(d-1)*s+p-t,y=(f-1)*a+u-n,T=Math.floor(h/2),x=h-T,I=Math.floor(g/2),k=g-I,w=Math.floor(y/2),M=y-w;m={top:I,bottom:k,left:w,right:M,front:T,back:x,type:"SAME"}}else if(r==="valid")m={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},c=Math.ceil((e-i+1)/o),d=Math.ceil((t-p+1)/s),f=Math.ceil((n-u+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function zp(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Xo(r){let[e,t,n]=$b(r);return e===1&&t===1&&n===1}function Er(r,e){return Xo(r)||Xo(e)}function P1(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Nt(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")P(Di(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(o=>{P(Di(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function I5(r,e){let n={x:S(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(fs,n,o)}var _=A({reshape_:I5});function C5(r,e,t,n,o){let s=S(r,"x","avgPool","float32"),a=1;P(Er(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,p=!1;s.rank===3&&(p=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Nt("avgPool",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(ao,u,l);return m=ee(m,s.dtype),p?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Up=A({avgPool_:C5});function k5(r,e,t,n,o,s="NDHWC"){let a=S(r,"x","avgPool3d","float32"),i=a,p=!1;a.rank===4&&(p=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),P(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Nt("avgPool3d",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(Ru,u,l);return m=ee(m,i.dtype),p?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Rd=A({avgPool3d_:k5});function S5(r,e=0){P(r.length>=1,()=>"Pass at least one tensor to concat");let t=eu(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Mn(t[0]);let n=t,o={axis:e};return D.runKernel(us,n,o)}var pt=A({concat_:S5});function v5(r){let t={x:S(r,"x","sigmoid","float32")};return D.runKernel(Uo,t)}var mn=A({sigmoid_:v5});function A5(r,e,t){let n=S(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(gs,o,s)}var Ge=A({slice_:A5});function w5(r){let t={x:S(r,"x","tanh","float32")};return D.runKernel(jo,t)}var uu=A({tanh_:w5});function N5(r,e,t,n,o,s){let a=S(r,"forgetBias","basicLSTMCell"),i=S(e,"lstmKernel","basicLSTMCell"),p=S(t,"lstmBias","basicLSTMCell"),u=S(n,"data","basicLSTMCell"),l=S(o,"c","basicLSTMCell"),m=S(s,"h","basicLSTMCell"),c=pt([u,m],1),d=He(c,i),f=Q(d,p),h=f.shape[0],g=f.shape[1]/4,y=[h,g],T=Ge(f,[0,0],y),x=Ge(f,[0,g],y),I=Ge(f,[0,g*2],y),k=Ge(f,[0,g*3],y),w=Q(L(mn(T),uu(x)),L(l,mn(Q(a,I)))),M=L(uu(w),mn(k));return[w,M]}var D5=A({basicLSTMCell_:N5});function P5(r,e,t){let n=S(r,"x","batchToSpaceND"),o=e.reduce((i,p)=>i*p);P(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),P(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),P(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return D.runKernel(is,s,a)}var Wp=A({batchToSpaceND_:P5});function M1(r){let e;return r.rank===0||r.rank===1?e=_(r,[1,1,1,r.size]):r.rank===2?e=_(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function M5(r,e,t,n,o,s){s==null&&(s=.001);let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;n!=null&&(l=S(n,"offset","batchNorm")),P(i.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:M1(a),scale:u,offset:l,mean:i,variance:p},d={varianceEpsilon:s},f=D.runKernel(Io,c,d);return _(f,a.shape)}var li=A({batchNorm_:M5});function F5(r,e,t,n,o,s){let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),P(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),P(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),P(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`),u!=null&&P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),li(a,i,p,l,u,s)}var nk=A({batchNorm2d_:F5});function E5(r,e,t,n,o,s){let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),P(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),P(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),P(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`),u!=null&&P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),li(a,i,p,l,u,s)}var ok=A({batchNorm3d_:E5});function R5(r,e,t,n,o,s){let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),P(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),P(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),P(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`),u!=null&&P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),li(a,i,p,l,u,s)}var sk=A({batchNorm4d_:R5});function L5(r,e,t){let n=S(r,"x","bincount"),o=S(e,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return D.runKernel(cm,s,a)}var Ld=A({bincount_:L5});function _5(r,e){let t=S(r,"s0","broadcastArgs","int32"),n=S(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return D.runKernel(dm,o)}var ak=A({broadcastArgs_:_5});function $5(r,e){let t=S(r,"broadcastTo","x"),n=t.shape;if(e.some(u=>!(u>0)||u%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=_(t,u)}let o=t.shape,s=Array.from(e);for(let u=e.length-1;u>=0;u--)if(o[u]===e[u])s[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((u,l)=>u>1?l:-1).filter(u=>u>=0).length===0)return Mn(t);let i={x:t},p={reps:s};return D.runKernel(Dn,i,p)}var Kp=A({broadcastTo_:$5});function B5(r){let t={x:S(r,"x","ceil","float32")};return D.runKernel(uo,t)}var ik=A({ceil_:B5});function O5(r,e,t){let n=S(r,"x","clipByValue");P(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Kn,o,s)}var Rr=A({clipByValue_:O5});function z5(r){return pt(r,0)}var uk=A({concat1d_:z5});function G5(r,e){return pt(r,e)}var pk=A({concat2d_:G5});function U5(r,e){return pt(r,e)}var lk=A({concat3d_:U5});function W5(r,e){return pt(r,e)}var mk=A({concat4d_:W5});function K5(r,e,t,n,o="NHWC",s=[1,1],a){let i=S(r,"x","conv2d","float32"),p=S(e,"filter","conv2d","float32"),u=i,l=!1;i.rank===3&&(l=!0,u=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),P(p.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${p.rank}.`),Nt("conv2d",n,a);let m=o==="NHWC"?u.shape[3]:u.shape[1];P(m===p.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`),P(Er(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let c={x:u,filter:p},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(po,c,d);return l?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var jn=A({conv2d_:K5});function V5(r,e,t,n,o="NWC",s=1,a){let i=S(r,"x","conv1d"),p=S(e,"filter","conv1d"),u=i,l=!1;i.rank===2&&(l=!0,u=_(i,[1,i.shape[0],i.shape[1]])),P(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),P(p.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`),Nt("conv1d",n,a),P(u.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${p.shape[1]}.`),P(Er(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),P(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=_(p,[1,p.shape[0],p.shape[1],p.shape[2]]),c=_(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=jn(c,m,[1,t],n,"NHWC",[1,s],a);return l?_(g,[g.shape[2],g.shape[3]]):_(g,[g.shape[0],g.shape[2],g.shape[3]])}var _d=A({conv1d_:V5});function H5(r,e,t,n,o,s="NHWC",a){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,p=e,u=!1;e.rank===3&&(u=!0,p=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),P(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),P(p.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`),P(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let l=s==="NHWC"?i[3]:i[1],m=s==="NHWC"?p.shape[3]:p.shape[1];P(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),P(m===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${t.shape[3]}.`),Nt("conv2dDerInput",o,a);let c={dy:p,filter:t},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=D.runKernel(lo,c,d);return u?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var jm=A({conv2DBackpropInput_:H5});function q5(r,e,t,n,o,s){let a=S(r,"x","conv2dTranspose"),i=S(e,"filter","conv2dTranspose");return jm(t,a,i,n,o,"NHWC",s)}var $d=A({conv2dTranspose_:q5});function j5(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=S(r,"x","conv3d"),i=S(e,"filter","conv3d"),p=a,u=!1;a.rank===4&&(u=!0,p=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(p.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`),P(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),P(p.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${i.shape[3]}.`),P(Er(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let l={x:p,filter:i},m={strides:t,pad:n,dataFormat:o,dilations:s},c=D.runKernel($u,l,m);return u?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Bd=A({conv3d_:j5});function X5(r,e,t,n,o){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=_(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let p=s[4],u=a.shape[4];P(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),P(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),P(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),P(p===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[3]}.`),P(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);let l={dy:a,filter:t},m={pad:o,strides:n,inputShape:s},c=D.runKernel(gm,l,m);return i?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Bb=A({conv3DBackpropInput_:X5});function Y5(r,e,t,n,o){let s=S(r,"x","conv3dTranspose"),a=S(e,"filter","conv3dTranspose");return Bb(t,s,a,n,o)}var ck=A({conv3dTranspose_:Y5});function Q5(r){let t={x:S(r,"x","cos","float32")};return D.runKernel(mo,t)}var Vp=A({cos_:Q5});function Z5(r){let t={x:S(r,"x","cosh","float32")};return D.runKernel(co,t)}var Od=A({cosh_:Z5});function J5(r,e=0,t=!1,n=!1){let s={x:S(r,"x","cumprod")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(aa,s,a)}var Xm=A({cumprod_:J5});function e8(r,e=0,t=!1,n=!1){let s={x:S(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(fo,s,a)}var zd=A({cumsum_:e8});function t8(r,e,t,n=!1){let o=S(r,"x","denseBincount"),s=S(e,"weights","denseBincount");P(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),P(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return D.runKernel(bm,a,i)}var dk=A({denseBincount_:t8});function r8(r,e,t="NHWC"){let n=S(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];P(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),P(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),P(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),P(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},p={blockSize:e,dataFormat:t};return D.runKernel(ua,i,p)}var fk=A({depthToSpace_:r8});function n8(r,e,t,n,o="NHWC",s=[1,1],a){let i=S(r,"x","depthwiseConv2d","float32"),p=S(e,"filter","depthwiseConv2d","float32"),u=i,l=!1;i.rank===3&&(l=!0,u=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),P(p.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),P(u.shape[3]===p.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),Nt("depthwiseConv2d",n,a);let m={x:u,filter:p},c={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},d=D.runKernel(ho,m,c);return l?_(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var pu=A({depthwiseConv2d_:n8});function o8(r){let t={x:S(r,"x","diag")};return D.runKernel(xm,t)}var s8=A({diag_:o8});function a8(r,e,t,n,o=[1,1],s="NHWC"){let a=S(r,"x","dilation2d"),i=S(e,"filter","dilation2d");P(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),P(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),P(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let p=a,u=!1;a.rank===3&&(p=_(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);let l={x:p,filter:i},m={strides:t,pad:n,dilations:o},c=D.runKernel(Bu,l,m);return u?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var hk=A({dilation2d_:a8});function i8(r,e){let t=S(r,"a","equal","string_or_numeric"),n=S(e,"b","equal","string_or_numeric");[t,n]=Ze(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(pa,o)}var zr=A({equal_:i8});function u8(r,e,t){let n=S(e,"a","where"),o=S(t,"b","where"),s=S(r,"condition","where","bool"),a=ze(ze(s.shape,n.shape),o.shape),i=Kp(s,a),p=Kp(n,a),u=Kp(o,a),l={condition:i,t:p,e:u};return D.runKernel(hs,l)}var Bt=A({where_:u8});function p8(r){let t={x:S(r,"x","zerosLike")};return D.runKernel(xs,t)}var Ne=A({zerosLike_:p8});function l8(r,e){let t=S(r,"a","div"),n=S(e,"b","div");[t,n]=Ze(t,n);let o=le(t,n),s=Ne(o),a=zr(n,s);return Bt(a,s,o)}var gk=A({divNoNan_:l8});function m8(r,e){let t=S(r,"t1","dot"),n=S(e,"t2","dot");P((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(P(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=_(t,[1,-1]),i=_(n,[-1,1]),p=He(a,i);return _(p,[])}else if(t.rank===1&&n.rank===2){let a=_(t,[1,-1]),i=_(n,[n.shape[0],n.shape[1]]),p=He(a,i);return _(p,[p.size])}else if(t.rank===2&&n.rank===1){let a=_(n,[-1,1]),i=He(t,a);return _(i,[i.size])}else{let a=_(n,[n.shape[0],n.shape[1]]);return He(t,a)}}var c8=A({dot_:m8});function d8(r,...e){let t=e.map((o,s)=>S(o,`tensors${s}`,"einsum")),n={equation:r};return D.runKernel(Ou,t,n)}var bk=A({einsum_:d8});function f8(r){let t={x:S(r,"x","elu","float32")};return D.runKernel(bo,t)}var lu=A({elu_:f8});function h8(r){let e=S(r,"x","erf");P(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ee(e,"float32"));let t={x:e};return D.runKernel(Oi,t)}var yk=A({erf_:h8});function Tk(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function F1(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function xk(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Ps(r,e){let t=e.map(n=>1);return F1(r,t,e)}function g8(r,e,t){P(Tk(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Ik(r,e){if(Tk(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Gd(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function b8(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function y8(r,e=null,t=!1){let o={x:S(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(vo,o,s)}var Xr=A({max_:y8});function T8(r,e=null,t=!1){let o={x:S(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(Do,o,s)}var Ym=A({min_:T8});function x8(r,e){let t=S(r,"base","pow"),n=S(e,"exp","pow");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Ro,o)}var Rn=A({pow_:x8});function me(r,e){if((Cr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Cr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return pn(r,[],[],e)}function I8(r){let t={x:S(r,"x","sqrt","float32")};return D.runKernel(Wo,t)}var Rt=A({sqrt_:I8});function C8(r){let e=S(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var je=A({square_:C8});function k8(r,e=null,t=!1){let n=S(r,"x","sum");n.dtype==="bool"&&(n=ee(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Ko,o,s)}var de=A({sum_:k8});function S8(r,e="euclidean",t=null,n=!1){r=S(r,"x","norm");let o=E1(r,e,t),s=o.shape;if(n){let a=hr(t,r.shape);s=Ps(o.shape,a)}return _(o,s)}function E1(r,e,t=null){if(r.rank===0)return $t(r);if(r.rank!==1&&t===null)return E1(_(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return de($t(r),t);if(e===1/0)return Xr($t(r),t);if(e===-1/0)return Ym($t(r),t);if(e==="euclidean"||e===2)return Rt(de(Rn($t(r),me(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Xr(de($t(r),t[0]),t[1]-1);if(e===1/0)return Xr(de($t(r),t[1]),t[0]);if(e===-1/0)return Ym(de($t(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Rt(de(je(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Qm=A({norm_:S8});function v8(r,e=null,t=!1){return Qm(r,"euclidean",e,t)}var kk=A({euclideanNorm_:v8});function A8(r){let t={x:S(r,"x","exp")};return D.runKernel(yo,t)}var pr=A({exp_:A8});function w8(r,e=0){let t=S(r,"x","expandDims","string_or_numeric");P(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(ps,n,o)}var Nr=A({expandDims_:w8});function N8(r){let t={x:S(r,"x","expm1")};return D.runKernel(la,t)}var Sk=A({expm1_:N8});function D8(r,e){let t=S(r,"x","tile","string_or_numeric");P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(Dn,n,o)}var Gr=A({tile_:D8});function P8(r,e,t,n="float32"){e==null&&(e=r);let o=xe([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=_(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return Gr(Nr(a,0),[t[0],1,1]);if(t.length===2)return Gr(Nr(Nr(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Gr(Nr(Nr(Nr(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Zm=A({eye_:P8});function Fa(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(ni,{},n)}function M8(r){let t={x:S(r,"x","floor","float32")};return D.runKernel(To,t)}var mu=A({floor_:M8});function F8(r,e,t=0,n=0){let o=S(r,"x","gather"),s=S(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return D.runKernel(ls,a,i)}var mi=A({gather_:F8});function E8(r,e){let t=S(r,"a","greater","string_or_numeric"),n=S(e,"b","greater","string_or_numeric");[t,n]=Ze(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(da,o)}var rr=A({greater_:E8});function R8(r,e){let t=S(r,"a","greaterEqual","string_or_numeric"),n=S(e,"b","greaterEqual","string_or_numeric");[t,n]=Ze(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Co,o)}var Qo=A({greaterEqual_:R8});function L8(r){let t={x:S(r,"x","isFinite")};return D.runKernel(zi,t)}var _8=A({isFinite_:L8});function $8(r){let t={x:S(r,"x","isInf")};return D.runKernel(Gi,t)}var B8=A({isInf_:$8});function O8(r){let t={x:S(r,"x","isNaN")};return D.runKernel(Ui,t)}var vk=A({isNaN_:O8});function z8(r,e=.2){let n={x:S(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(ko,n,o)}var Hp=A({leakyRelu_:z8});function G8(r,e){let t=S(r,"a","less","string_or_numeric"),n=S(e,"b","less","string_or_numeric");[t,n]=Ze(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(fa,o)}var Ud=A({less_:G8});function U8(r,e){let t=S(r,"a","lessEqual","string_or_numeric"),n=S(e,"b","lessEqual","string_or_numeric");[t,n]=Ze(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ha,o)}var Zo=A({lessEqual_:U8});function Ak(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(Sm,{},n)}function W8(r,e=5,t=1,n=1,o=.5){let s=S(r,"x","localResponseNormalization");P(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),P(Di(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=_(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let p={x:a},u={depthRadius:e,bias:t,alpha:n,beta:o},l=D.runKernel(Gu,p,u);return i?_(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var wk=A({localResponseNormalization_:W8});function K8(r){let t={x:S(r,"x","log","float32")};return D.runKernel(So,t)}var Lr=A({log_:K8});function V8(r){let t={x:S(r,"x","log1p")};return D.runKernel(Wi,t)}var qp=A({log1p_:V8});function H8(r){return P(ei(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=S(e,"x","tf.grad","string_or_numeric"),o=t!=null?S(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(n),[n],o);return o!=null&&Gt(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),zb(a),a[0]})}}function q8(r){return P(ei(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{P(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=eu(e,"args","tf.grads","string_or_numeric"),o=t!=null?S(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(...n),n,o);return o!=null&&Gt(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),zb(a),a})}}function j8(r){return P(ei(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{P(e instanceof Ye,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return zb(n),{grad:n[0],value:o}}}function X8(r){return P(ei(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{P(Array.isArray(e)&&e.every(o=>o instanceof Ye),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&Gt(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),zb(n.grads),n}}function Ob(r,e){P(ei(r),()=>"The f passed in variableGrads(f) must be a function"),P(e==null||Array.isArray(e)&&e.every(u=>u instanceof Zu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let u in D.registeredVariables)e.push(D.registeredVariables[u])}let n=t?e.filter(u=>!u.trainable):null,o=e.length;e=e.filter(u=>u.trainable),P(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=D.gradients(r,e,null,s);P(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let p={};return e.forEach((u,l)=>{i[l]!=null&&(p[u.name]=i[l])}),n?.forEach(u=>p[u.name]=null),{value:a,grads:p}}function cn(r){return D.customGrad(r)}function zb(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function Y8(r){let t={x:S(r,"x","softplus")};return D.runKernel(Yi,t)}var ci=A({softplus_:Y8});function Q8(r){let e=S(r,"x","logSigmoid");return cn(n=>({value:Je(ci(Je(n))),gradFunc:a=>L(a,mn(Je(n)))}))(e)}var Z8=A({logSigmoid_:Q8});function J8(r,e){let t=S(r,"a","sub"),n=S(e,"b","sub");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(qo,o)}var pe=A({sub_:J8});function eX(r,e=-1){let t=S(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return cn((o,s)=>{let i=Xr(o,e,!0),p=pe(o,i),u=pe(ee(p,"float32"),Lr(de(pr(p),e,!0)));return s([u]),{value:u,gradFunc:(m,c)=>{let[d]=c,f=!0,h=pr(d);return pe(m,L(de(m,e,f),h))}}})(t)}var Wd=A({logSoftmax_:eX});function tX(r,e=null,t=!1){let n=S(r,"x","logSumExp"),o=hr(e,n.shape),s=Xr(n,o,!0),a=pe(n,s),i=pr(a),p=de(i,o),u=Lr(p),l=Q(_(s,u.shape),u);if(t){let m=Ps(l.shape,o);return _(l,m)}return l}var Nk=A({logSumExp_:tX});function rX(r,e){let t=S(r,"a","logicalAnd","bool"),n=S(e,"b","logicalAnd","bool");ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ga,o)}var Ur=A({logicalAnd_:rX});function nX(r){let t={x:S(r,"x","logicalNot","bool")};return D.runKernel(Ki,t)}var jp=A({logicalNot_:nX});function oX(r,e){let t=S(r,"a","logicalOr","bool"),n=S(e,"b","logicalOr","bool");ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Mp,o)}var Kd=A({logicalOr_:oX});function sX(r,e){let t=S(r,"a","logicalXor","bool"),n=S(e,"b","logicalXor","bool");return ze(t.shape,n.shape),Ur(Kd(r,e),jp(Ur(r,e)))}var aX=A({logicalXor_:sX});var Gb=2147483648;function iX(r,e,t="left"){let n=S(r,"sortedSequence","searchSorted"),o=S(e,"values","searchSorted"),s=n.shape[n.shape.length-1],a=o.shape[o.shape.length-1],i=_(n,[-1,s]),p=_(o,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==p.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(rt(p.shape)>=Gb)throw new Error(`values tensor size must less than ${Gb}`);if(i.shape[1]>=Gb)throw new Error(`trailing dim_size must less than ${Gb} for int32 output type, was ${i.shape[1]}`);let u={sortedSequence:i,values:p},l={side:t};return D.runKernel(Fm,u,l)}var Ub=A({searchSorted_:iX});function Dk(r,e){return Ub(r,e,"left")}function uX(r,e,t,n,o){let s=S(r,"x","maxPool"),a=1,i=s,p=!1;s.rank===3&&(p=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),P(Er(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Nt("maxPool",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(wo,u,l);return p?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Xp=A({maxPool_:uX});function pX(r,e=[1,1,1],t,n,o,s="NDHWC"){let a=S(r,"x","maxPool3d"),i=a,p=!1;a.rank===4&&(p=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),P(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Nt("maxPool3d",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(Uu,u,l);return p?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Vd=A({maxPool3d_:pX});function lX(r,e,t,n,o=!1){let a={x:S(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},p=D.runKernel(Nm,a,i);return{result:p[0],indexes:p[1]}}var Pk=A({maxPoolWithArgmax_:lX});function mX(r,e){let t=S(r,"a","maximum"),n=S(e,"b","maximum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=ee(t,"int32"),n=ee(n,"int32")),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Ao,o)}var Xn=A({maximum_:mX});function cX(r,e=null,t=!1){let o={x:S(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(No,o,s)}var Lt=A({mean_:cX});function bt(r,e="float32"){if(e==="complex64"){let n=bt(r,"float32"),o=bt(r,"float32");return un(n,o)}let t=pm(rt(r),e);return D.makeTensor(t,r,e)}function lr(r,e="float32"){if(e==="complex64"){let n=lr(r,"float32"),o=bt(r,"float32");return un(n,o)}let t=hd(rt(r),e);return D.makeTensor(t,r,e)}function dX(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=S(r,"x","meshgrid",r instanceof Ye?r.dtype:"float32");if(e===void 0)return[n];let o=S(e,"y","meshgrid",e instanceof Ye?e.dtype:"float32"),s=rt(n.shape),a=rt(o.shape);return t==="xy"?(n=_(n,[1,-1]),o=_(o,[-1,1]),[He(lr([a,1],n.dtype),n),He(o,lr([1,s],o.dtype))]):(n=_(n,[-1,1]),o=_(o,[1,-1]),[He(n,lr([1,a],n.dtype)),He(lr([s,1],o.dtype),o)])}function fX(r,e){let t=S(r,"a","minimum"),n=S(e,"b","minimum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=ee(t,"int32"),n=ee(n,"int32")),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Po,o)}var cu=A({minimum_:fX});function hX(r,e,t){P(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=S(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)P(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return D.runKernel(Mo,a,s)}var Mk=A({mirrorPad_:hX});function gX(r,e){let t=S(r,"a","mod"),n=S(e,"b","mod");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Vi,o)}var Fk=A({mod_:gX});function bX(r,e=null,t=!1){r=S(r,"x","moments");let n=hr(e,r.shape),o=Lt(r,n,t),s=o.shape;t||(s=Ps(o.shape,n));let a=je(pe(ee(r,"float32"),_(o,s))),i=Lt(a,n,t);return{mean:o,variance:i}}var Jm=A({moments_:bX});function yX(r,e,t,n){let o=S(e,"data","multiRNNCell"),s=eu(t,"c","multiRNNCell"),a=eu(n,"h","multiRNNCell"),i=o,p=[];for(let m=0;m<r.length;m++){let c=r[m](i,s[m],a[m]);p.push(c[0]),p.push(c[1]),i=c[1]}let u=[],l=[];for(let m=0;m<p.length;m+=2)u.push(p[m]),l.push(p[m+1]);return[u,l]}var TX=A({multiRNNCell_:yX});function xX(r,e,t,n=!1){let o=S(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let p={logits:a===1?_(o,[1,-1]):o},u={numSamples:e,seed:t,normalized:n},l=D.runKernel(Dm,p,u);return a===1?_(l,[l.size]):l}var Ek=A({multinomial_:xX});function IX(r,e){let t=S(r,"a","notEqual","string_or_numeric"),n=S(e,"b","notEqual","string_or_numeric");[t,n]=Ze(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ba,o)}var di=A({notEqual_:IX});function CX(r){let t={x:S(r,"x","onesLike")};return D.runKernel(cs,t)}var Dr=A({onesLike_:CX});function kX(r,e){let t=S(r,"v1","outerProduct"),n=S(e,"v2","outerProduct");P(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=_(t,[-1,1]),s=_(n,[1,-1]);return He(o,s)}var SX=A({outerProduct_:kX});function vX(r,e,t=0){let n=S(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(Eo,s,o)}var Ln=A({pad_:vX});function AX(r,e,t=0){return P(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ln(r,[e],t)}var wX=A({pad1d_:AX});function NX(r,e,t=0){return P(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ln(r,e,t)}var DX=A({pad2d_:NX});function PX(r,e,t=0){return P(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ln(r,e,t)}var MX=A({pad3d_:PX});function FX(r,e,t=0){return P(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ln(r,e,t)}var EX=A({pad4d_:FX});function RX(r,e,t){let n=S(r,"x","spaceToBatchND");P(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),P(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),P(n.shape.reduce((a,i,p)=>p>0&&p<=e.length?a&&(i+t[p-1][0]+t[p-1][1])%e[p-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(bs,o,s)}var Yp=A({spaceToBatchND_:RX});function LX(r,e,t,n,o,s,a){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=S(r,"x","maxPool"),p=i,u=!1;i.rank===3&&(u=!0,p=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(Er(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let l=tk(p.shape,e,s,o,n),m=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=$X([l.filterHeight,l.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=_X([l.inHeight,l.inWidth],m,c),g=d?n:"valid",y=d?p:Yp(p,m,f),x=(t==="avg"?()=>Up(y,e,s,g,a):()=>Xp(y,e,s,g,a))(),I=d?x:Wp(x,m,h);return u?_(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function _X(r,e,t){let n=t.map(l=>l[0]),o=t.map(l=>l[1]),s=r.concat(n,o),a=e.map((l,m)=>(l-s[m]%l)%l),i=o.map((l,m)=>l+a[m]),p=e.map((l,m)=>[n[m],i[m]]),u=e.map((l,m)=>[0,a[m]]);return[p,u]}function $X(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var BX=A({pool_:LX});function OX(r,e){let t=S(r,"x","prelu"),n=S(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(Lo,o)}var Qp=A({prelu_:OX});function zX(r,e=null,t=!1){let n=S(r,"x","prod");n.dtype==="bool"&&(n=ee(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(_o,o,s)}var Hd=A({prod_:zX});function GX(r,e,t){let n=rt(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var UX=A({rand_:GX});var Kb=Np(qd());var ec=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=Kb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},zk=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=Kb.alea(s.toString()),this.randn=new ec(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Gk=class{constructor(e=0,t=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Kb.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function XX(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new zk(e,t,n,o),a=xe(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var YX=A({randomGamma_:XX});function QX(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new ec(e,t,n,!1,o),a=xe(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Vb=A({randomNormal_:QX});function ZX(r,e=0,t=1,n="float32",o){let s=xe(r,n),a=new Gk(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var Ea=A({randomUniform_:ZX});function du(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(oi,{},o)}function JX(r){let t={x:S(r,"x","reciprocal")};return D.runKernel(qi,t)}var Uk=A({reciprocal_:JX});function eY(r){let t={x:S(r,"x","relu")};return D.runKernel($o,t)}var Wr=A({relu_:eY});function tY(r){let t={x:S(r,"x","relu6")};return D.runKernel(Oo,t)}var jd=A({relu6_:tY});function rY(r,e){let n={x:S(r,"x","reverse")},o={dims:e};return D.runKernel(Ia,n,o)}var gr=A({reverse_:rY});function nY(r){let e=S(r,"x","reverse");return P(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),gr(e,0)}var oY=A({reverse1d_:nY});function sY(r,e){let t=S(r,"x","reverse");return P(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),gr(t,e)}var aY=A({reverse2d_:sY});function iY(r,e){let t=S(r,"x","reverse");return P(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),gr(t,e)}var uY=A({reverse3d_:iY});function pY(r,e){let t=S(r,"x","reverse");return P(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),gr(t,e)}var lY=A({reverse4d_:pY});function mY(r){let t={x:S(r,"x","round")};return D.runKernel(Ca,t)}var Xd=A({round_:mY});function cY(r){let t={x:S(r,"x","rsqrt","float32")};return D.runKernel(zo,t)}var Yd=A({rsqrt_:cY});function dY(r){let t={x:S(r,"x","selu")};return D.runKernel(ji,t)}var Qd=A({selu_:dY});function fY(r,e,t,n,o,s=[1,1],a="NHWC"){let i=S(r,"x","separableConv2d"),p=S(e,"depthwiseFilter","separableConv2d"),u=S(t,"pointwiseFilter","separableConv2d"),l=i,m=!1;if(i.rank===3&&(m=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),P(p.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),P(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),P(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let c=p.shape[2],d=p.shape[3];P(u.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${u.shape[2]}.`);let f=pu(l,p,n,o,a,s),g=jn(f,u,1,"valid",a);return m?_(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Wk=A({separableConv2d_:fY});async function hY(r,e){let t=S(r,"x","setdiff1d"),n=S(e,"y","setdiff1d");P(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),P(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),P(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let l=0;l<o.length;l++)a.has(o[l])||i++;let p=new gt([i],t.dtype),u=new gt([i],"int32");for(let l=0,m=0;l<o.length;l++)a.has(o[l])||(p.values[m]=o[l],u.values[m]=l,m++);return[p.toTensor(),u.toTensor()]}var Kk=hY;function gY(r){let t={x:S(r,"x","sign")};return D.runKernel(Xi,t)}var Vk=A({sign_:gY});function bY(r){let t={x:S(r,"x","sin","float32")};return D.runKernel(Go,t)}var Zd=A({sin_:bY});function yY(r){let t={x:S(r,"x","sinh")};return D.runKernel(Sa,t)}var Jd=A({sinh_:yY});function TY(r,e,t){let n=S(r,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Ge(n,[e],[t])}var ef=A({slice1d_:TY});function xY(r,e,t){let n=S(r,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Ge(n,e,t)}var Hb=A({slice2d_:xY});function IY(r,e,t){let n=S(r,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Ge(n,e,t)}var tf=A({slice3d_:IY});function CY(r,e,t){let n=S(r,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Ge(n,e,t)}var tc=A({slice4d_:CY});function kY(r,e=-1){let t=S(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel(Vo,n,o)}var Jp=A({softmax_:kY});function SY(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(Cm,e)}var el=A({fft_:SY});function vY(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(km,e)}var rp=A({ifft_:vY});function AY(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=_(r,[t,e]);n=rp(o)}else{let o=[t,2*(e-1)],s=_(pi(r),[t,e]),a=_(su(r),[t,e]),i=gr(Ge(s,[0,1],[t,e-2]),1),p=L(gr(Ge(a,[0,1],[t,e-2]),1),me(-1)),u=pt([s,i],1),l=pt([a,p],1),m=_(un(u,l),[o[0],o[1]]);n=rp(m)}if(n=pi(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=_(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var rf=A({irfft_:AY});function wY(r,e,t=0){let o={x:S(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(ys,o,s)}var kr=A({split_:wY});function NY(r,e){P(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=Ge(r,f,h),t=e}else if(e!=null&&e>t){let f=r.shape.map(h=>h);f[r.shape.length-1]=e-t,o=pt([r,bt(f)],r.shape.length-1),t=e}else o=r;let s=Ne(o),a=_(un(o,s),[n,t]),i=el(a),p=Math.floor(t/2)+1,u=pi(i),l=su(i),m=kr(u,[p,t-p],u.shape.length-1),c=kr(l,[p,t-p],l.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=p,_(un(m[0],c[0]),d)}var tl=A({rfft_:NY});function DY(r,e){let t=S(r,"a","squaredDifference"),n=S(e,"b","squaredDifference");[t,n]=Ze(t,n),ze(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Ho,o,s)}var nf=A({squaredDifference_:DY});function PY(r,e){let t=S(r,"x","squeeze");return _(t,tC(t.shape,e).newShape)}var dn=A({squeeze_:PY});function MY(r,e=0){let t=eu(r,"tensors","stack","string_or_numeric");P(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&P(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(ds,n,o)}var mr=A({stack_:MY});function FY(r,e=0){let n={x:S(r,"x","step")},o={alpha:e};return D.runKernel(Is,n,o)}var fu=A({step_:FY});function EY(r,e,t,n,o=0,s=0,a=0,i=0,p=0){let l={x:S(r,"x","stridedSlice","string_or_numeric")},m={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:p};return D.runKernel(va,l,m)}var Hk=A({stridedSlice_:EY});function RY(r){let t={x:S(r,"x","tan","float32")};return D.runKernel(Aa,t)}var qk=A({tan_:RY});function Ot(r,e){no(r);let t=Br(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return pn(r,null,t,e)}function fi(r,e,t){if(no(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Br(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return pn(r,e,n,t)}function LY(r,e,t){if(no(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Br(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return pn(r,e,n,t)}function _Y(r,e,t){if(no(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Br(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return pn(r,e,n,t)}function $Y(r,e,t){if(no(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Br(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,pn(r,e,n,t)}function BY(r,e=1,t=!0){let n=S(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,p]=D.runKernel(wa,s,a);return{values:i,indices:p}}var jk=A({topk_:BY});function OY(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new ec(e,t,n,!0,o),a=xe(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var rl=A({truncatedNormal_:OY});function zY(r,e=0){let t=S(r,"x","unique","string_or_numeric");P(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=D.runKernel(Lm,n,o);return{values:s,indices:a}}var qb=A({unique_:zY});function GY(r,e,t){let n=S(r,"x","unsortedSegmentSum"),o=S(e,"segmentIds","unsortedSegmentSum","int32");P(Di(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return D.runKernel(Xu,s,a)}var Xk=A({unsortedSegmentSum_:GY});function UY(r,e=0){let t=S(r,"x","unstack","string_or_numeric");P(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(Ts,n,o)}var _r=A({unstack_:UY});function Yk(r,e){return Ub(r,e,"right")}function Qk(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function jb(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=xe(r,"int32"),o=xe([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function WY(r){let e=S(r,"condition","whereAsync","bool"),t=await e.data(),n=jb(e.shape,t);return r!==e&&e.dispose(),n}var of=WY;async function KY(r,e,t){let n=S(r,"tensor","boolMask"),o=S(e,"mask","boolMask","bool"),s=t??0,a=o.rank,i=n.shape;P(a>0,()=>"mask cannot be scalar"),Gt(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let p=1;for(let h=s;h<s+a;h++)p*=i[h];let u=i.slice(0,s).concat([p],i.slice(s+a)),l=_(n,u),m=_(o,[-1]),c=await of(m),d=dn(c,[1]),f=mi(l,d,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),d.dispose(),l.dispose(),m.dispose(),c.dispose(),f}var GBe=KY;function VY(r,e,t,n,o=!0){let s=S(r,"v","movingAverage"),a=S(e,"x","movingAverage"),i=S(t,"decay","movingAverage");yC(s,a),P(Un(s.shape,a.shape),()=>"Shape mismatch in v and x");let p=me(1),u=pe(p,i),l=L(pe(a,s),u);if(o){P(n!=null,()=>"When using zeroDebias: true, step is required.");let m=S(n,"step","movingAverage");l=le(l,pe(p,Rn(i,m)))}return Q(s,l)}var ZBe=A({movingAverage_:VY});function HY(r,e,t){let n=S(r,"indices","scatterND","int32"),o=S(e,"updates","scatterND");Rb(o,n,t);let s={indices:n,updates:o},a={shape:t};return D.runKernel(ka,s,a)}var Y1=A({scatterND_:HY});function Q1(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function jY(r,e,t,n=0){let o=S(r,"sparseIndices","sparseToDense","int32"),s=S(e,"sparseValues","sparseToDense","string_or_numeric"),a=S(n,"defaultValue","sparseToDense",s.dtype);Q1(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},p={outputShape:t};return D.runKernel(qu,i,p)}var Xb=A({sparseToDense_:jY});function XY(r,e){let t=S(e,"indices","gatherND","int32"),o={params:S(r,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(ca,o)}var Z1=A({gatherND_:XY});function J1(r,e){if(e==null)return r.shape.slice();if(Un(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function YY(r,e,t,n){let o=S(r,"x","dropout");if(P(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),P(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Ye?o.clone():o;let s=J1(o,t),a=1-e,i=le(mu(Q(Ea(s,0,1,"float32",n),a)),a);return L(o,i)}var eP=A({dropout_:YY});function tP(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Yb(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return Ot(o,"float32")}async function QY(r,e,t=1){let n=S(r,"predictions","inTopK"),o=S(e,"targets","inTopK");P(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),P(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Gt(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];P(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[p,u]=[a.length/s,s],l=rC("bool",p);for(let m=0;m<p;m++){let c=m*u,d=a.subarray(c,c+u),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),l[m]=0;for(let h=0;h<t;h++)if(f[h].index===i[m]){l[m]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Fr(l,o.shape,"bool")}var _Oe=QY;var Ms={};Xe(Ms,{conv2d:()=>rP,depthwiseConv2d:()=>nP,matMul:()=>oP});function ZY(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=e;p.rank===3&&(p=_(e,[1,e.shape[0],e.shape[1],e.shape[2]])),P(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),P(p.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`),P(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let u=s==="NHWC"?i.shape[3]:i.shape[1],l=s==="NHWC"?p.shape[3]:p.shape[1];P(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),P(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),Nt("conv2dDerFilter",o,a);let m={x:i,dy:p},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return D.runKernel(fm,m,c)}var rc=A({conv2DBackpropFilter_:ZY});function nl(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return L(r,fu(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function ol(r,e){let t=e,n=Ct(r.shape,e.shape);return n.length>0&&(t=de(t,n)),_(t,r.shape)}function sl(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Wr(r);if(e==="elu")return lu(r);if(e==="relu6")return jd(r);if(e==="prelu")return Qp(r,t);if(e==="leakyrelu")return Hp(r,n);if(e==="sigmoid")return mn(r);throw new Error(`Unknown fused activation ${e}.`)}var al=(r,e)=>!(r>0)||e==="linear";function JY({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:p="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(p=p||"linear",al(D.state.gradientDepth,p)===!1){P(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let w=jn(r,e,t,n,o,s,a);return i!=null&&(w=Q(w,i)),sl(w,p,u,l)}let m=S(r,"x","conv2d","float32"),c=S(e,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Nt("fused conv2d",n,a);let h=o==="NHWC"?d.shape[3]:d.shape[1];P(c.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),P(Er(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let g=Gp(d.shape,c.shape,t,s,n,a),y;i!=null&&(y=S(i,"bias","fused conv2d"),[y]=Ze(y,m),o==="NHWC"?ze(g.outShape,y.shape):(P(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),P(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let T;if(u!=null){let w=u.shape;if(P(w.length<=1||w.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${w.length}.`),w.length===1)P(w[0]===1||w[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the number of output channels (${g.outChannels}).`);else if(w.length===3)try{ze(w,g.outShape)}catch{let F=`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(F)}T=S(u,"prelu weights","fused conv2d")}let x=(w,M)=>{P(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[F,E,$,G]=M,W=nl(w,$,p);P(Xo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let V=jm(E.shape,W,F,t,n),q=rc(E,W,F.shape,t,n),j=[V,q];if(G!=null){let Y=ol(G,W);j.push(Y)}return j},I={x:d,filter:c,bias:y,preluActivationWeights:T},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:p,leakyreluAlpha:l};return i==null?cn((M,F,E)=>{let $=D.runKernel(ks,I,k);return E([F,M,$]),f&&($=_($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:x}})(d,c):cn((M,F,E,$)=>{let G=D.runKernel(ks,I,k);return $([F,M,G,E]),f&&(G=_(G,[G.shape[1],G.shape[2],G.shape[3]])),{value:G,gradFunc:x}})(d,c,y)}var rP=A({fusedConv2d_:JY});function eQ(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=e;p.rank===3&&(p=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={x:i,dy:p},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return D.runKernel(ym,u,l)}var Qb=A({depthwiseConv2dNativeBackpropFilter_:eQ});function tQ(r,e,t,n,o,s=[1,1],a){let i=e,p=!1;e.rank===3&&(p=!0,i=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={dy:i,filter:t},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},m=D.runKernel(Tm,u,l);return p?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Zb=A({depthwiseConv2dNativeBackpropInput_:tQ});function rQ({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:p="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(al(D.state.gradientDepth,p)===!1){let k=pu(r,e,t,n,o,s,a);return i!=null&&(k=Q(k,i)),sl(k,p,u,l)}let m=S(r,"x","depthwiseConv2d","float32"),c=S(e,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),P(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),P(Er(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),Nt("fused depthwiseConv2d",n,a);let h=Gp(d.shape,c.shape,t,s,n,a,!0),g;i!=null&&(g=S(i,"bias","fused conv2d"),[g]=Ze(g,m),ze(h.outShape,g.shape));let y;u!=null&&(y=S(u,"prelu weights","fused depthwiseConv2d"));let T=(k,w)=>{P(Xo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[M,F,E,$]=w,G=nl(k,E,p),W=Zb(F.shape,G,M,t,n,s,a),V=Qb(F,G,M.shape,t,n,s,a);if($!=null){let q=ol(g,G);return[W,V,q]}return[W,V]},x={x:d,filter:c,bias:g,preluActivationWeights:y},I={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:p,leakyreluAlpha:l};return i==null?cn((w,M,F)=>{let E=D.runKernel(Ss,x,I);return F([M,w,E]),f&&(E=_(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:T}})(d,c):cn((w,M,F,E)=>{let $=D.runKernel(Ss,x,I);return E([M,w,$,F]),f&&($=_($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:T}})(d,c,g)}var nP=A({fusedDepthwiseConv2d_:rQ});function nQ({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(al(D.state.gradientDepth,s)===!1){let G=He(r,e,t,n);return o!=null&&(G=Q(G,o)),sl(G,s,a,i)}let p=S(r,"a","fused matMul"),u=S(e,"b","fused matMul");[p,u]=Ze(p,u);let l=t?p.shape[p.rank-2]:p.shape[p.rank-1],m=n?u.shape[u.rank-1]:u.shape[u.rank-2],c=t?p.shape[p.rank-1]:p.shape[p.rank-2],d=n?u.shape[u.rank-2]:u.shape[u.rank-1],f=p.shape.slice(0,-2),h=u.shape.slice(0,-2),g=rt(f),y=rt(h);P(l===m,()=>`Error in fused matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${p.shape} and ${u.shape} and transposeA=${t} and transposeB=${n} must match.`);let x=ze(p.shape.slice(0,-2),u.shape.slice(0,-2)).concat([c,d]),I=t?_(p,[g,l,c]):_(p,[g,c,l]),k=n?_(u,[y,d,m]):_(u,[y,m,d]),w;o!=null&&(w=S(o,"bias","fused matMul"),[w]=Ze(w,p),ze(x,w.shape));let M;a!=null&&(M=S(a,"prelu weights","fused matMul"));let F=(G,W)=>{let[V,q,j,Y]=W,te=nl(_(G,j.shape),j,s),H,oe;if(!t&&!n?(H=He(te,q,!1,!0),oe=He(V,te,!0,!1)):!t&&n?(H=He(te,q,!1,!1),oe=He(te,V,!0,!1)):t&&!n?(H=He(q,te,!1,!0),oe=He(V,te,!1,!1)):(H=He(q,te,!0,!0),oe=He(te,V,!0,!0)),o!=null){let se=ol(Y,te);return[H,oe,se]}else return[H,oe]},E={a:I,b:k,bias:w,preluActivationWeights:M},$={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?cn((W,V,q)=>{let j=D.runKernel(Cs,E,$);return q([W,V,j]),{value:_(j,x),gradFunc:F}})(I,k):cn((W,V,q,j)=>{let Y=D.runKernel(Cs,E,$);return j([W,V,Y,q]),{value:_(Y,x),gradFunc:F}})(I,k,w)}var oP=A({fusedMatMul_:nQ});function oQ(r){return Yb(r,.54,.46)}var sP=A({hammingWindow_:oQ});function sQ(r){return Yb(r,.5,.5)}var Jb=A({hannWindow_:sQ});function aQ(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Ge(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,p=pt([Ge(r,s,e-i),Fa([i],o)]);a.push(p),s+=t}return a.length===0?fi([],[0,e]):_(pt(a),[a.length,e])}var ey=A({frame_:aQ});function iQ(r,e,t,n,o=Jb){n==null&&(n=tP(e));let s=ey(r,e,t),a=L(s,o(e));return tl(a,n)}var aP=A({stft_:iQ});function uQ(r,e,t,n,o="bilinear",s=0){let a=S(r,"image","cropAndResize"),i=S(e,"boxes","cropAndResize","float32"),p=S(t,"boxInd","cropAndResize","int32"),u=i.shape[0];P(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),P(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),P(p.rank===1&&p.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let l={image:a,boxes:i,boxInd:p},m={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(ia,l,m)}var iP=A({cropAndResize_:uQ});function pQ(r){let e=S(r,"image","flipLeftRight","float32");P(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(ma,t,{})}var uP=A({flipLeftRight_:pQ});function lQ(r){let e=S(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];P(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Gr(e,o)}var pP=A({grayscaleToRGB_:lQ});function mQ(r,e,t=0,n=.5){let o=S(r,"image","rotateWithOffset","float32");P(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return D.runKernel(Da,s,a)}var lP=A({rotateWithOffset_:mQ});function Fs(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),P(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),P(e.rank===1,()=>"scores must be a 1D tensor"),P(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),P(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function cQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppression","float32"),a=S(e,"scores","nonMaxSuppression","float32"),i=Fs(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(ya,{boxes:s,scores:a},p)}var mP=A({nonMaxSuppression_:cQ});function cP(r,e,t){let n=dQ(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function dQ(r,e,t){return hQ(r,e,t||fQ)}function fQ(r,e){return r>e?1:r<e?-1:0}function hQ(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function ty(r,e,t,n,o){return Zk(r,e,t,n,o,0)}function ry(r,e,t,n,o,s){return Zk(r,e,t,n,o,0,!1,s,!0)}function ny(r,e,t,n,o,s){return Zk(r,e,t,n,o,s,!0)}function Zk(r,e,t,n,o,s,a=!1,i=!1,p=!1){let u=[];for(let g=0;g<e.length;g++)e[g]>o&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(dP);let l=s>0?-.5/s:0,m=[],c=[];for(;m.length<t&&u.length>0;){let g=u.pop(),{score:y,boxIndex:T,suppressBeginIndex:x}=g;if(y<o)break;let I=!1;for(let k=m.length-1;k>=x;--k){let w=gQ(r,T,m[k]);if(w>=n){I=!0;break}if(g.score=g.score*bQ(n,l,w),g.score<=o)break}g.suppressBeginIndex=m.length,I||(g.score===y?(m.push(T),c.push(g.score)):g.score>o&&cP(u,g,dP))}let d=m.length,f=t-d;i&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return a&&(h.selectedScores=c),p&&(h.validOutputs=d),h}function gQ(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),p=Math.max(n[1],n[3]),u=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(i-s)*(p-a),f=(m-u)*(c-l);if(d<=0||f<=0)return 0;let h=Math.max(s,u),g=Math.max(a,l),y=Math.min(i,m),T=Math.min(p,c),x=Math.max(y-h,0)*Math.max(T-g,0);return x/(d+f-x)}function bQ(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function dP(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function yQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),i=Fs(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let p=await Promise.all([s.data(),a.data()]),u=p[0],l=p[1],{selectedIndices:m}=ty(u,l,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),Ot(m,"int32")}var fP=yQ;function TQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),p=Fs(a,i,t,n,o,s);t=p.maxOutputSize,n=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let u={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=D.runKernel(Ta,u,l);return{selectedIndices:m[0],selectedScores:m[1]}}var hP=A({nonMaxSuppressionWithScore_:TQ});async function xQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),p=Fs(a,i,t,n,o,s);t=p.maxOutputSize,n=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let u=await Promise.all([a.data(),i.data()]),l=u[0],m=u[1],{selectedIndices:c,selectedScores:d}=ny(l,m,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ot(c,"int32"),selectedScores:Ot(d)}}var gP=xQ;function IQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),p=Fs(a,i,t,n,o,null),u=p.maxOutputSize,l=p.iouThreshold,m=p.scoreThreshold,c={boxes:a,scores:i},d={maxOutputSize:u,iouThreshold:l,scoreThreshold:m,padToMaxOutputSize:s},f=D.runKernel(Hi,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var bP=A({nonMaxSuppressionPadded_:IQ});async function CQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),p=Fs(a,i,t,n,o,null),u=p.maxOutputSize,l=p.iouThreshold,m=p.scoreThreshold,[c,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:h}=ry(c,d,u,l,m,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ot(f,"int32"),validOutputs:me(h,"int32")}}var yP=CQ;function kQ(r,e,t=!1,n=!1){let o=S(r,"images","resizeBilinear");P(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),P(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},p={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(Bo,i,p);return a?_(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var TP=A({resizeBilinear_:kQ});function SQ(r,e,t=!1,n=!1){let o=S(r,"images","resizeNearestNeighbor");P(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),P(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},p={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(si,i,p);return a?_(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var xP=A({resizeNearestNeighbor_:SQ});function vQ(r,e="binary",t=!1,n=.5){let o=S(r,"image","threshold"),s=.2989,a=.587,i=.114,p=o.shape[0]*o.shape[1],u=L(Ot([n]),255),l,m,c,d;if(P(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),P(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),P(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),P(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[l,m,c]=kr(o,[1,1,1],-1);let g=L(l,s),y=L(m,a),T=L(c,i);d=Q(Q(g,y),T)}else d=r;if(e==="otsu"){let g=Ld(ee(Xd(d),"int32"),Fr([]),256);u=AQ(g,p)}let f=t?Zo(d,u):rr(d,u);return ee(L(f,255),"int32")}function AQ(r,e){let t=Ot([-1]),n=Ot([0]),o=Ot([0]),s,a,i,p,u,l;for(let m=0;m<r.size-1;m++){s=Ge(r,0,m+1),a=Ge(r,m+1),u=le(de(s),e),l=le(de(a),e);let c=de(L(s,du(0,s.size)));i=le(c,de(s));let d=Fa(a.shape,s.size),f=Q(du(0,a.size),d),h=L(a,f);p=le(de(h),de(a));let g=pe(i,p),y=pe(i,p),T=L(u,l);o=L(L(T,g),y);let x=rr(o,n);n=Bt(x,o,n),t=Bt(x,Ot([m]),t)}return t}var IP=A({threshold_:vQ});function wQ(r,e,t="nearest",n="constant",o=0,s){let a=S(r,"image","transform","float32"),i=S(e,"transforms","transform","float32");P(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),P(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let p={image:a,transforms:i},u={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return D.runKernel(Na,p,u)}var CP=A({transform_:wQ});function NQ(r,e,t){P(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),P(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=S(r,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=_(du(0,s,1,"int32"),[-1,1]),p=du(0,a,1,"int32"),u=pe(i,p),l=Ur(Zo(u,me(+e,"int32")),Qo(u,me(-t,"int32"))),m=bt([s,a],n.dtype);return _(mr(_r(_(n,[-1,s,a])).map(c=>Bt(l,c,m))),o)}var kP=A({bandPart_:NQ});function DQ(r){let e;if(Array.isArray(r)){e=!1,P(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)P(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=kr(r,r.shape[0],0).map(o=>dn(o,[0]));P(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=L(de(L(t[a],s)),t[a]);s=pe(s,i)}return le(s,Qm(s,"euclidean"))}));return e?mr(t,0):t}var SP=A({gramSchmidt_:DQ});function PQ(r,e=!1){if(P(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return vP(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((p,u)=>p*u),n=_r(_(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(p=>{let[u,l]=vP(p,e);o.push(u),s.push(l)});let a=_(mr(o,0),r.shape),i=_(mr(s,0),r.shape);return[a,i]}}function vP(r,e=!1){return D.tidy(()=>{P(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=Zm(t),s=Mn(r),a=fi([[1]],[1,1]),i=Mn(a),p=t>=n?n:t;for(let u=0;u<p;++u){let l=s,m=i,c=o;[i,s,o]=D.tidy(()=>{let d=Ge(s,[u,u],[t-u,1]),f=Qm(d),h=Ge(s,[u,u],[1,1]),g=Bt(rr(h,0),fi([[-1]]),fi([[1]])),y=pe(h,L(g,f)),T=le(d,y);T.shape[0]===1?i=Mn(a):i=pt([a,Ge(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);let x=Je(le(He(g,y),f)),I=Ge(s,[u,0],[t-u,n]),k=L(x,i),w=Ue(i);if(u===0)s=pe(I,He(k,He(w,I)));else{let E=pe(I,He(k,He(w,I)));s=pt([Ge(s,[0,0],[u,n]),E],0)}let M=Ue(k),F=Ge(o,[0,u],[t,o.shape[1]-u]);if(u===0)o=pe(F,He(He(F,i),M));else{let E=pe(F,He(He(F,i),M));o=pt([Ge(o,[0,0],[t,u]),E],1)}return[i,s,o]}),Me([l,m,c])}return!e&&t>n&&(o=Ge(o,[0,0],[t,n]),s=Ge(s,[0,0],[n,n])),[o,s]})}var AP=A({qr_:PQ});var Ra=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))(Ra||{});function MQ(r,e,t=3){let n=S(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=S(e,"weights","computeWeightedLoss"));let s=o==null?n:L(n,o);if(t===0)return s;if(t===2)return de(s);if(t===1){if(o==null)return Lt(s);{let a=n.size/o.size,i=le(de(s),de(o));return a>1?le(i,me(a)):i}}if(t===3){if(o==null)return le(de(s),me(n.size));{let a=L(o,lr(n.shape)),i=ee(de(di(a,me(0))),"float32");return le(de(s),i)}}throw Error(`Unknown reduction: ${t}`)}var Kr=A({computeWeightedLoss_:MQ});function FQ(r,e,t,n=3){let o=S(r,"labels","absoluteDifference"),s=S(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=S(t,"weights","absoluteDifference")),Gt(o.shape,s.shape,"Error in absoluteDifference: ");let i=$t(pe(o,s));return Kr(i,a,n)}var wP=A({absoluteDifference_:FQ});function EQ(r,e,t,n,o=3){let s=S(r,"labels","cosineDistance"),a=S(e,"predictions","cosineDistance"),i=null;n!=null&&(i=S(n,"weights","cosineDistance")),Gt(s.shape,a.shape,"Error in cosineDistance: ");let p=me(1),u=pe(p,de(L(s,a),t,!0));return Kr(u,i,o)}var NP=A({cosineDistance_:EQ});function RQ(r,e,t,n=3){let o=S(r,"labels","hingeLoss"),s=S(e,"predictions","hingeLoss"),a=null;t!=null&&(a=S(t,"weights","hingeLoss")),Gt(o.shape,s.shape,"Error in hingeLoss: ");let i=me(1);o=pe(L(me(2),o),i);let p=Wr(pe(i,L(o,s)));return Kr(p,a,n)}var DP=A({hingeLoss_:RQ});function LQ(r,e,t,n=1,o=3){let s=S(r,"labels","huberLoss"),a=S(e,"predictions","huberLoss"),i=null;t!=null&&(i=S(t,"weights","huberLoss")),Gt(s.shape,a.shape,"Error in huberLoss: ");let p=me(n),u=$t(pe(a,s)),l=cu(u,p),m=pe(u,l),c=Q(L(me(.5),je(l)),L(p,m));return Kr(c,i,o)}var PP=A({huberLoss_:LQ});function _Q(r,e,t,n=1e-7,o=3){let s=S(r,"labels","logLoss"),a=S(e,"predictions","logLoss"),i=null;t!=null&&(i=S(t,"weights","logLoss")),Gt(s.shape,a.shape,"Error in logLoss: ");let p=me(1),u=me(n),l=Je(L(s,Lr(Q(a,u)))),m=L(pe(p,s),Lr(Q(pe(p,a),u))),c=pe(l,m);return Kr(c,i,o)}var MP=A({logLoss_:_Q});function $Q(r,e,t,n=3){let o=S(r,"labels","meanSquaredError"),s=S(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=S(t,"weights","meanSquaredError")),Gt(o.shape,s.shape,"Error in meanSquaredError: ");let i=nf(o,s);return Kr(i,a,n)}var FP=A({meanSquaredError_:$Q});function BQ(r,e){let t=S(r,"labels","sigmoidCrossEntropyWithLogits"),n=S(e,"logits","sigmoidCrossEntropyWithLogits");Gt(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Wr(n),s=L(n,t),a=qp(pr(Je($t(n))));return Q(pe(o,s),a)}function OQ(r,e,t,n=0,o=3){let s=S(r,"multiClassLabels","sigmoidCrossEntropy"),a=S(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=S(t,"weights","sigmoidCrossEntropy")),Gt(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=me(n),l=me(1),m=me(.5);s=Q(L(s,pe(l,u)),L(m,u))}let p=BQ(s,a);return Kr(p,i,o)}var EP=A({sigmoidCrossEntropy_:OQ});function zQ(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return cn((o,s,a)=>{let p=Nk(s,[t],!0),u=pe(ee(s,"float32"),p);a([o,u]);let l=Je(L(u,o));return{value:de(l,[t]),gradFunc:(d,f)=>{let[h,g]=f,y=Ps(d.shape,[t]);return[L(_(d,y),pe(ee(h,"float32"),pr(g))),L(_(d,y),pe(pr(g),ee(h,"float32")))]}}})(r,e)}function GQ(r,e,t,n=0,o=3){let s=S(r,"onehotLabels","softmaxCrossEntropy"),a=S(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=S(t,"weights","softmaxCrossEntropy")),Gt(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let u=me(n),l=me(1),m=me(s.shape[1]);s=Q(L(s,pe(l,u)),le(u,m))}let p=zQ(s,a);return Kr(p,i,o)}var RP=A({softmaxCrossEntropy_:GQ});function UQ(r,e,t,n){let o=S(r,"indices","sparseFillEmptyRows","int32"),s=S(e,"values","sparseFillEmptyRows"),a=S(t,"denseShape","sparseFillEmptyRows","int32"),i=S(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let p={indices:o,values:s,denseShape:a,defaultValue:i},u=D.runKernel(Ku,p);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var LP=A({sparseFillEmptyRows_:UQ});function WQ(r,e,t){let n=S(r,"inputIndices","sparseReshape","int32"),o=S(e,"inputShape","sparseReshape","int32"),s=S(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=D.runKernel(Qi,a);return{outputIndices:i[0],outputShape:i[1]}}var _P=A({sparseReshape_:WQ});function KQ(r,e,t){let n=S(r,"data","sparseSegmentMean"),o=S(e,"indices","sparseSegmentMean","int32"),s=S(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel(Vu,a)}var $P=A({sparseSegmentMean_:KQ});function VQ(r,e,t){let n=S(r,"data","sparseSegmentSum"),o=S(e,"indices","sparseSegmentSum","int32"),s=S(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel(Hu,a)}var BP=A({sparseSegmentSum_:VQ});function HQ(r,e,t,n,o,s,a,i){let p=S(r,"data","stringNGrams","string");if(p.dtype!=="string")throw new Error("Data must be of datatype string");if(p.shape.length!==1)throw new Error(`Data must be a vector, saw: ${p.shape}`);let u=S(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},m={data:p,dataSplits:u},c=D.runKernel(ju,m,l);return{nGrams:c[0],nGramsSplits:c[1]}}var OP=A({stringNGrams_:HQ});function qQ(r,e,t=!0){let n=S(r,"input","stringSplit","string"),o=S(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},a={input:n,delimiter:o},i=D.runKernel(Em,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var zP=A({stringSplit_:qQ});function jQ(r,e){let t=S(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return D.runKernel(Rm,o,n)}var GP=A({stringToHashBucketFast_:jQ});var x4e={fft:el,ifft:rp,rfft:tl,irfft:rf},v4e={hammingWindow:sP,hannWindow:Jb,frame:ey,stft:aP},fn={flipLeftRight:uP,grayscaleToRGB:pP,resizeNearestNeighbor:xP,resizeBilinear:TP,rotateWithOffset:lP,cropAndResize:iP,nonMaxSuppression:mP,nonMaxSuppressionAsync:fP,nonMaxSuppressionWithScore:hP,nonMaxSuppressionWithScoreAsync:gP,nonMaxSuppressionPadded:bP,nonMaxSuppressionPaddedAsync:yP,threshold:IP,transform:CP},UP={bandPart:kP,gramSchmidt:SP,qr:AP},Z4e={absoluteDifference:wP,computeWeightedLoss:Kr,cosineDistance:NP,hingeLoss:DP,huberLoss:PP,logLoss:MP,meanSquaredError:FP,sigmoidCrossEntropy:EP,softmaxCrossEntropy:RP},sf={sparseFillEmptyRows:LP,sparseReshape:_P,sparseSegmentMean:$P,sparseSegmentSum:BP},oy={stringNGrams:OP,stringSplit:zP,stringToHashBucketFast:GP};var Yr=class extends Lb{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return Me(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Ob(e,t)}dispose(){this.iterations_!=null&&Me(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:me(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Yr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var il=class extends Yr{constructor(e,t,n=null){super();this.learningRate=e;this.rho=t;this.epsilon=n;this.accumulatedGrads=[];this.accumulatedUpdates=[];n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:z(()=>Ne(s).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:z(()=>Ne(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let p=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;z(()=>{let l=Q(L(p,this.rho),L(je(i),1-this.rho)),m=L(le(Rt(Q(u,this.epsilon)),Rt(Q(p,this.epsilon))),i),c=Q(L(u,this.rho),L(je(m),1-this.rho));p.assign(l),u.assign(c);let d=Q(L(m,-this.learningRate),s);s.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Me(this.accumulatedGrads.map(e=>e.variable)),Me(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};il.className="Adadelta";En(il);var ul=class extends Yr{constructor(e,t=.1){super();this.learningRate=e;this.initialAccumulatorValue=t;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:z(()=>Fa(s.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[o].variable;z(()=>{let p=Q(i,je(a));i.assign(p);let u=Q(L(le(a,Rt(Q(p,D.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Me(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};ul.className="Adagrad";En(ul);var pl=class extends Yr{constructor(e,t,n,o=null){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];z(()=>{this.accBeta1=me(t).variable(),this.accBeta2=me(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);z(()=>{let n=pe(1,this.accBeta1),o=pe(1,this.accBeta2);t.forEach((s,a)=>{let i=D.registeredVariables[s],p=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:z(()=>Ne(i).variable(p))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:z(()=>Ne(i).variable(p))});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,m=this.accumulatedSecondMoment[a].variable,c=Q(L(l,this.beta1),L(u,1-this.beta1)),d=Q(L(m,this.beta2),L(je(u),1-this.beta2)),f=le(c,n),h=le(d,o);l.assign(c),m.assign(d);let g=Q(L(le(f,Q(Rt(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Me(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Me(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),z(()=>{this.accBeta1.assign(Rn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Rn(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};pl.className="Adam";En(pl);var ll=class extends Yr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.decay=s;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];z(()=>{this.iteration=me(0).variable(),this.accBeta1=me(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);z(()=>{let n=pe(1,this.accBeta1),o=le(-this.learningRate,Q(L(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=D.registeredVariables[s],p=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Ne(i).variable(p)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:Ne(i).variable(p)});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,m=this.accumulatedWeightedInfNorm[a].variable,c=Q(L(l,this.beta1),L(u,1-this.beta1)),d=L(m,this.beta2),f=$t(u),h=Xn(d,f);l.assign(c),m.assign(h);let g=Q(L(le(o,n),le(c,Q(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(Q(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Me(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Me(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};ll.className="Adamax";En(ll);var hu=class extends Yr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let a=D.registeredVariables[n];z(()=>{let i=Q(L(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Ut(me(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};hu.className="SGD";En(hu);var ml=class extends hu{constructor(e,t,n=!1){super(e);this.learningRate=e;this.momentum=t;this.useNesterov=n;this.accumulations=[];this.m=me(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${n}/momentum`,variable:z(()=>Ne(s).variable(!1))});let a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&z(()=>{let p,u=Q(L(this.m,a),i);this.useNesterov?p=Q(L(this.c,Q(i,L(u,this.m))),s):p=Q(L(this.c,u),s),a.assign(u),s.assign(p)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Me(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ml.className="Momentum";En(ml);var cl=class extends Yr{constructor(e,t=.9,n=0,o=null,s=!1){super();this.learningRate=e;this.decay=t;this.momentum=n;this.epsilon=o;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:z(()=>Ne(s).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:z(()=>Ne(s).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:z(()=>Ne(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let p=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;z(()=>{let l=Q(L(p,this.decay),L(je(i),1-this.decay));if(this.centered){let m=this.accumulatedMeanGrads[o].variable,c=Q(L(m,this.decay),L(i,1-this.decay)),d=le(L(i,this.learningRate),Rt(pe(l,Q(je(c),this.epsilon)))),f=Q(L(u,this.momentum),d);p.assign(l),m.assign(c),u.assign(f);let h=pe(s,f);s.assign(h)}else{let m=Q(L(p,this.decay),L(je(i),1-this.decay)),c=Q(L(u,this.momentum),le(L(i,this.learningRate),Rt(Q(m,this.epsilon))));p.assign(m),u.assign(c);let d=pe(s,c);s.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Me(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Me(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Me(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};cl.className="RMSProp";En(cl);var hi=class{static sgd(e){return new hu(e)}static momentum(e,t,n=!1){return new ml(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new cl(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new pl(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new il(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new ll(e,t,n,o,s)}static adagrad(e,t=.1){return new ul(e,t)}};var dl={sgd:hi.sgd,momentum:hi.momentum,adadelta:hi.adadelta,adagrad:hi.adagrad,rmsprop:hi.rmsprop,adamax:hi.adamax,adam:hi.adam};var XQ=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function af(){return new Promise(r=>XQ(()=>r()))}var C={};Xe(C,{ERF_A1:()=>aZ,ERF_A2:()=>iZ,ERF_A3:()=>uZ,ERF_A4:()=>pZ,ERF_A5:()=>lZ,ERF_P:()=>sZ,PARALLELIZE_THRESHOLD:()=>sy,SELU_SCALE:()=>eS,SELU_SCALEALPHA:()=>Jk,applyActivation:()=>sl,assertAndGetBroadcastShape:()=>ze,assertAxesAreInnerMostDims:()=>g8,assertParamsConsistent:()=>YQ,assignToTypedArray:()=>gZ,axesAreInnerMostDims:()=>Tk,calculateShapes:()=>h1,checkEinsumDimSizes:()=>CZ,checkPadOnDimRoundingMode:()=>Nt,combineLocations:()=>F1,complexWithEvenIndex:()=>dZ,complexWithOddIndex:()=>fZ,computeConv2DInfo:()=>Gp,computeConv3DInfo:()=>D1,computeDefaultPad:()=>rk,computeDilation2DInfo:()=>h5,computeOptimalWindowSize:()=>ZQ,computeOutAndReduceShapes:()=>xk,computeOutShape:()=>QQ,computePool2DInfo:()=>tk,computePool3DInfo:()=>g5,convertConv2DDataFormat:()=>P1,decodeEinsumEquation:()=>xZ,eitherStridesOrDilationsAreOne:()=>Er,expandShapeToKeepDim:()=>Ps,exponent:()=>yZ,exponents:()=>bZ,fromStringArrayToUint8:()=>WZ,fromUint8ToStringArray:()=>UZ,getAxesPermutation:()=>Ik,getBroadcastDims:()=>c1,getComplexWithIndex:()=>hZ,getEinsumComputePath:()=>kZ,getEinsumPermutation:()=>IZ,getFusedBiasGradient:()=>ol,getFusedDyActivation:()=>nl,getImageCenter:()=>JQ,getInnerMostAxes:()=>b8,getPermuted:()=>tZ,getReductionAxes:()=>Ct,getReshaped:()=>eZ,getReshapedPermuted:()=>rZ,getSliceBeginCoords:()=>nZ,getSliceSize:()=>oZ,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>wZ,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>NZ,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>DZ,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>FZ,getSparseReshapeInputOutputMismatchErrorMessage:()=>RZ,getSparseReshapeInputOutputMultipleErrorMessage:()=>EZ,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>PZ,getSparseReshapeNegativeOutputDimErrorMessage:()=>MZ,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>BZ,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>LZ,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>_Z,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>$Z,getUndoAxesPermutation:()=>Gd,isIdentityPermutation:()=>SZ,log:()=>Aj,mergeRealAndImagArrays:()=>mZ,prepareAndValidate:()=>f1,prepareSplitSize:()=>AZ,segment_util:()=>rS,shouldFuse:()=>al,slice_util:()=>Tt,splitRealAndImagArrays:()=>cZ,tupleValuesAreOne:()=>Xo,upcastType:()=>Ft,validateInput:()=>Rb,validateUpdateShape:()=>zC,warn:()=>ii});function YQ(r,e){let t=r[0].length;r.forEach((o,s)=>{P(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),P(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)P(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function QQ(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var sy=30;function ZQ(r){return r<=sy?r:um(r,Math.floor(Math.sqrt(r)))}function JQ(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function eZ(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function tZ(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2===1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function rZ(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function nZ(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function oZ(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var Jk=1.7580993408473768,eS=1.0507009873554805;var sZ=.3275911,aZ=.254829592,iZ=-.284496736,uZ=1.421413741,pZ=-1.453152027,lZ=1.061405429;function mZ(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function cZ(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function dZ(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function fZ(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function hZ(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function gZ(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function bZ(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function yZ(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var tS="->",TZ=/->/g,WP=",",KP="...";function xZ(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(TZ,"").length)/tS.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${tS}").`);let[n,o]=r.split(tS);P(n.indexOf(KP)===-1,()=>`The ellipsis notation ("${KP}") is not supported yet.`);let s=n.split(WP),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let c=0;c<n.length;++c){let d=n[c];i.indexOf(d)===-1&&d!==WP&&i.push(d)}let p=new Array(s.length);for(let c=0;c<a;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);p[c]=[];for(let d=0;d<s[c].length;++d)p[c].push(i.indexOf(s[c][d]))}let u=i.length,l=o.length,m=[];for(let c=l;c<u;++c)m.push(c);return{allDims:i,summedDims:m,idDims:p}}function IZ(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function CZ(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let a=0;a<e[o].length;++a)n[e[o][a]]===void 0?n[e[o][a]]=s[a]:P(n[e[o][a]]===s[a],()=>`Expected dimension ${n[e[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function kZ(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<t.length;++a){let i=t[a],p=vZ(e,i);for(let u of p)s.indexOf(u)===-1&&(n[a].push(u),s.push(u))}return{path:t,steps:n}}function SZ(r){return r.every((e,t)=>e===t)}function vZ(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function AZ(r,e,t=0){let n=[];if(typeof e=="number")P(r.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);P(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,p)=>p>0?i+p:i);e[s]=r.shape[t]-a}P(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}function wZ(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function NZ(r,e){return`indices(${r}, 0) is invalid: ${e} < 0`}function DZ(r,e,t){return`indices(${r}, 0) is invalid: ${e} >= ${t}`}function PZ(r,e){return`only one output dimension may be -1, not both ${r} and ${e}`}function MZ(r,e){return`size ${r} must be non-negative, not ${e}`}function FZ(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function EZ(r,e){let t=rt(r),n=rt(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${e}`}function RZ(r,e){let t=rt(r),n=rt(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${e}`}function LZ(){return"segment ids must be >= 0"}function _Z(){return"segment ids are not increasing"}function $Z(r,e){return`Segment id ${r} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function BZ(r,e,t){return`Bad: indices[${r}] == ${e} out of range [0, ${t})`}var rS={};Xe(rS,{collectGatherOpShapeInfo:()=>GZ,computeOutShape:()=>zZ,segOpComputeOptimalWindowSize:()=>OZ});function OZ(r,e){let t=!1,n;for(r<=sy?(n=r,t=!0):n=um(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=um(r,n+1);return n}function zZ(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function GZ(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let m=0;m<n;++m)if(r.shape[m]!==e.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${e.shape[m]}.`);let a=r.shape[t],i=[],p=1,u=1,l=1;for(let m=0;m<n;++m)i.push(r.shape[m]),p*=r.shape[m];for(let m=n;m<t;m++)i.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<o;m++)i.push(e.shape[m]);for(let m=t+1;m<s;m++)i.push(r.shape[m]),l*=r.shape[m];return{batchSize:p,sliceSize:l,outerSize:u,dimSize:a,outputShape:i}}function UZ(r){try{return r.map(e=>zm(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function WZ(r){return r.map(e=>Qu(e))}var br={};Xe(br,{nonMaxSuppressionV3Impl:()=>ty,nonMaxSuppressionV4Impl:()=>ry,nonMaxSuppressionV5Impl:()=>ny,whereImpl:()=>jb});var Yn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Yn.prototype)}},Qr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Qr.prototype)}},O=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,O.prototype)}},Pe=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Pe.prototype)}},uf=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,uf.prototype)}};var ay=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Rs(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Jo(r,e){if(!r)throw new uf(e)}function oS(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Pr(r){return r.length===1?r[0]:r}function kt(r){return Array.isArray(r)?r:[r]}function Ls(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function gu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Es={};function nc(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function nS(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>nS(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:nS(n))}}}function gi(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in Es)a=Es[s];else if(a=e[s],a==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,p;if(a in t?[i,p]=t[a]:a in Es?[i,p]=Es.className:a in e&&([i,p]=e[a]),i==null)throw new O(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(p!=null){let u={};for(let d of Object.keys(Es))u[d]=Es[d];for(let d of Object.keys(t))u[d]=t[d];let l=s.config;l.customObjects=u;let m={...Es};for(let d of Object.keys(t))Es[d]=t[d];nS(s.config);let c=p(i,s.config,t,o);return Es={...m},c}else{let u={...Es};for(let m of Object.keys(t))Es[m]=t[m];let l=new i(s.config);return Es={...u},l}}}function KZ(r,e){return r<e?-1:r>e?1:0}function pf(r,e){return-1*KZ(r,e)}function _s(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function VP(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function bi(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new O(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function iy(r,e,t=0,n=1/0){return Jo(t>=0),Jo(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function nr(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>nr(t,`element ${n+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${HP(r)}.`)}function HP(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>HP(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function qP(r,e,t){let n=t!=null?t():b.now(),o;return(...a)=>{let i=t!=null?t():b.now();return i-n<e||(n=i,o=r(...a)),o}}function uy(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var VZ=0;function ly(){return VZ++}var py={};function np(r=""){return r in py||(py[r]=0),py[r]+=1,r+py[r].toString()}var jP=["channelsFirst","channelsLast"],XP=["nearest","bilinear"],YP=["valid","same","causal"],QP=["max","avg"],ZP=["sum","mul","concat","ave"];var oc=new Map;function Wt(r){bi(jP,"DataFormat",r)}function eM(r){bi(XP,"InterpolationFormat",r)}function hn(r){bi(YP,"PaddingMode",r)}function sS(r){bi(QP,"PoolMode",r)}var lf=[],JP="/";function _a(r,e){lf.push(r);try{let t=e();return lf.pop(),t}catch(t){throw lf.pop(),t}}function HZ(){return lf.length===0?"":lf.join(JP)+JP}function my(r){if(!tM(r))throw new Error("Not a valid tensor name: '"+r+"'");return HZ()+r}function cy(r){if(!tM(r))throw new Error("Not a valid tensor name: '"+r+"'");oc.has(r)||oc.set(r,0);let e=oc.get(r);if(oc.set(r,oc.get(r)+1),e>0){let t=`${r}_${e}`;return oc.set(t,1),t}else return r}var qZ=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tM(r){return!!r.match(qZ)}function rM(r){return r===parseInt(r.toString(),10)}function $s(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function fl(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function $a(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function Zr(r,e){if(e<r)throw new O(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}var aS;function cr(){return aS==null&&(aS=p1().epsilon()),aS}function gn(){return"channelsLast"}function hl(r,e){return ee(r,e)}function yu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),_(r,t)}function nM(r,e){return z(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=yu(r,1);return fy(t,[1,e,1])})}function oM(r){let e=[$s(r.shape)];return _(r,e)}function sM(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],$s(r.shape,1)];return _(r,e)}function bu(r,e,t){return z(()=>{switch(r.rank){case 1:return ef(r,e,t);case 2:return Hb(r,[e,0],[t,r.shape[1]]);case 3:return tf(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return tc(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Ge(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Ge(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function iS(r,e,t){return z(()=>{switch(r.rank){case 1:return ef(r,e,t);case 2:return Hb(r,[0,e],[r.shape[0],t]);case 3:return tf(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return tc(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function mf(r,e,t,n){return z(()=>{switch(r.rank){case 1:return ef(r,e,t);case 2:switch(n){case 1:return bu(r,e,t);case 2:return iS(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return bu(r,e,t);case 2:return tf(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return iS(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return bu(r,e,t);case 2:return tc(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return tc(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return iS(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function sc(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),pt(r,e)}function pS(r,e){switch(r.rank){case 1:return uk([r,e]);case 2:return pk([r,e],0);case 3:return lk([r,e],0);case 4:return mk([r,e],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function fy(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new O(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Gr(r,e)}function ac(r,e=0,t=1,n,o){return Vb(r,e,t,n,o)}function Bs(r,e,t,n){if(r.rank<2||e.rank<2)throw new Pe(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Pe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2)return Ms.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:n?uS(r.rank,n,gn()):null,activation:t});{let o=r.shape.slice(),s=o.pop();r=_(r,[-1,s]);let a=e.shape.slice(),i=a.pop(),p=a.pop(),u=[...a,i],l=Array.from({length:e.rank},(f,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=_(Ue(e,l),[p,-1]);let m=[...o,...u],c=!1,d=!1;return _(Ms.matMul({a:r,b:e,transposeA:c,transposeB:d,bias:n?uS(r.rank,n,gn()):null,activation:t}),m)}}function hy(r,e,t){return z(()=>(Array.isArray(e)?e=Ot(e,"int32"):e=ee(e,"int32"),mi(r,e,t)))}function gl(r){return L(r,r)}function uS(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new O(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?_(e,[1,n[0],1,1,1]):_(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?_(e,[1,1,1,1,n[0]]):_(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?_(e,[1,n[0],1,1]):_(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?_(e,[1,1,1,n[0]]):_(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?_(e,[1,n[0],1]):_(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?_(e,[1,1,n[0]]):_(e,[1].concat(n))}else if(r<3)return e;throw new O(`Unsupported input rank by biasAdd: ${e.rank}`)}function bn(r,e,t){return z(()=>(t==null&&(t=gn()),Wt(t),Q(r,uS(r.rank,e,t))))}function aM(r,e=1){if(e!==1)throw new Pe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return lu(r)}function iM(r){return z(()=>le(r,Q($t(r),1)))}function gy(r,e,t,n){return z(()=>eP(r,e,t,n))}function uM(r){return z(()=>{let e=Q(.5,L(.2,r));return Rr(e,0,1)})}function op(r,e,t=!1){return t?r():e()}var pM=["fanIn","fanOut","fanAvg"],lM=["normal","uniform","truncatedNormal"];function jZ(r){bi(pM,"FanMode",r)}function XZ(r){bi(lM,"Distribution",r)}var _n=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},cf=class extends _n{apply(e,t){return bt(e,t)}};cf.className="Zeros";re.registerClass(cf);var bl=class extends _n{apply(e,t){return lr(e,t)}};bl.className="Ones";re.registerClass(bl);var df=class extends _n{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return z(()=>L(me(this.value),lr(e,t)))}getConfig(){return{value:this.value}}};df.className="Constant";re.registerClass(df);var ff=class extends _n{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ea(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};ff.className="RandomUniform";re.registerClass(ff);var hf=class extends _n{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`randomNormal does not support dType ${t}.`);return ac(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};hf.className="RandomNormal";re.registerClass(hf);var gf=class extends _n{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`truncatedNormal does not support dType ${t}.`);return rl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};gf.className="TruncatedNormal";re.registerClass(gf);var bf=class extends _n{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return z(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,Zm(e[0]))})}getConfig(){return{gain:this.gain}}};bf.className="Identity";re.registerClass(bf);function YZ(r,e="channelsLast"){let t,n;if(Wt(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=$s(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=$s(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=$s(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var Jr=class extends _n{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,jZ(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,XZ(this.distribution),this.seed=e.seed}apply(e,t){let n=YZ(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`${this.getClassName()} does not support dType ${t}.`);return rl(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return Ea(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Jr.className="VarianceScaling";re.registerClass(Jr);var ic=class extends Jr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Jr.className}};ic.className="GlorotUniform";re.registerClass(ic);var uc=class extends Jr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Jr.className}};uc.className="GlorotNormal";re.registerClass(uc);var pc=class extends Jr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Jr.className}};pc.className="HeNormal";re.registerClass(pc);var lc=class extends Jr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Jr.className}};lc.className="HeUniform";re.registerClass(lc);var mc=class extends Jr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Jr.className}};mc.className="LeCunNormal";re.registerClass(mc);var cc=class extends Jr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Jr.className}};cc.className="LeCunNormal";re.registerClass(cc);var yf=class extends _n{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Pe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return z(()=>{if(e.length<2)throw new Pe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=ac(n,0,1,"float32"),s=UP.gramSchmidt(o);return e[0]>e[1]&&(s=Ue(s)),L(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};yf.className="Orthogonal";re.registerClass(yf);var mM={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function cM(r,e={}){return gi(r,re.SerializationMap.getMap().classNameMap,e,"initializer")}function Dt(r){return nc(r)}function xt(r){if(typeof r=="string"){let e=r in mM?mM[r]:r;if(e==="GlorotNormal")return new uc;if(e==="GlorotUniform")return new ic;if(e==="HeNormal")return new pc;if(e==="HeUniform")return new lc;if(e==="LeCunNormal")return new mc;if(e==="LeCunUniform")return new cc;{let t={};return t.className=e,t.config={},cM(t)}}else return r instanceof _n?r:cM(r)}function by(r){return Array.isArray(r)&&Array.isArray(r[0])}function dc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Oe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function nt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function fc(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var fM="Variable",yy=class{constructor(e,t="float32",n=fM,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=ly(),n=n??fM,this.originalName=my(n),this.name=cy(this.originalName),this.trainable_=o,this.constraint=s,this.val=Qk(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),ZZ(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function ZZ(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function Tf(r){return r.map(e=>e.read())}function hc(r){r.forEach(e=>{e[0].write(e[1])})}var Pt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Tn=class{constructor(e,t,n,o,s,a,i){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=ly(),a!=null&&(this.originalName=my(a),this.name=cy(this.originalName)),this.rank=t.length}},JZ=0,sp=class{constructor(e,t){this.callArgs=t;this.id=JZ++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},e7=0,Ke=class extends re.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=e7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Ls(n)+"_"+np(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Qr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Pr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Pr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Yn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Yn(`Layer ${this.name} is not connected, no input to return.`);return Pr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Yn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Yn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Pr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=kt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=kt(this.inputSpec);if(e.length!==t.length)throw new O(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let p in s.axes){let u=Number(p),l=s.axes[p],m=u>=0?i[u]:i[i.length+u];if(l!=null&&[l,null].indexOf(m)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${l} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let p=s.shape[i],u=o.shape[i];if(p!=null&&u!=null&&p!==u)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=kt(e),o=!0;for(let a of n)if(!(a instanceof Tn)){o=!1;break}let s=!0;for(let a of n)if(a instanceof Tn){s=!1;break}if(o===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return _a(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of kt(e))a.push(i.shape);this.build(Pr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=kt(a),p=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),p.push(u);if(a=Pr(p),this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=t7(e),i=this.computeOutputShape(a),p,u=r7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?p=i.map((l,m)=>new Tn(u,l,this,kt(e),t,this.name,m)):p=new Tn(u,i,this,kt(e),t,this.name),this.addInboundNode(e,p,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return p}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Yn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Yn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Qr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return fc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Tf(e?this.trainableWeights:this.weights)}setWeights(e){z(()=>{let t=this.weights;if(t.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=Tf(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],p=e[s];if(!b.arraysEqual(a.shape,p.shape))throw new O(`Layer weight shape ${a.shape} not compatible with provided weight shape ${p.shape}`);n.push([i,p])}hc(n)})}addWeight(e,t,n,o,s,a,i,p){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=p!=null?p():xt("zeros"));let u=o.apply(t,n),l=new yy(u,n,e,a,i);return u.dispose(),s!=null&&this.addLoss(()=>s.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=kt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let p=kt(e);t=kt(t),n=kt(n),o=kt(o),s=dc(s),a=dc(a);let u=[],l=[],m=[];for(let c of p)u.push(c.sourceLayer),l.push(c.nodeIndex),m.push(c.tensorIndex);new sp({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:m,inputTensors:p,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let c=0;c<t.length;c++)t[c].sourceLayer=this,t[c].nodeIndex=this.inboundNodes.length-1,t[c].tensorIndex=c}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function t7(r){r=kt(r);let e=[];for(let t of r)e.push(t.shape);return Pr(e)}function r7(r){return"float32"}function lS(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],p=n.nodeIndices[s],u=lS(a,i,p);for(let l of u)o.indexOf(l)===-1&&o.push(l)}return o}}}var yi=class extends Ke{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:np("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new Tn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new sp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};yi.className="InputLayer";re.registerClass(yi);function Ty(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new yi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function n7(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return ee(e,r.dtype)}catch{throw new O(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Ba=class{constructor(e){this.id2Value={};this.id2Mask={};this.name2Id={};if(e instanceof Ba)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=n7(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new O(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Tn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Tn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Me(this.id2Mask)}},xy=new ay,Iy=new ay;function gM(r){xy?.setMaxEntries(r),Iy?.setMaxEntries(r)}function yl(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(f=>f.name),p=[],u=e.names();for(let f of i)u.indexOf(f)!==-1?p.push(e.getValue(f)):p.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let l=i.join(",")+"|"+e.names().sort().join(","),m=xy.get(l),c;if(m==null){let f=o7(a,e);m=f.sorted,c=f.recipientCounts,xy.put(l,m),Iy.put(l,c)}c={},o||Object.assign(c,Iy.get(l));let d=new Ba(e);for(let f=0;f<m.length;++f){if(n!=null){let E=Pd().numTensors;E>n.maxNumTensors&&(n.maxNumTensors=E),E<n.minNumTensors&&(n.minNumTensors=E)}let h=m[f],g=h.sourceLayer;if(g instanceof yi)continue;let y=[],T=[],x=[],I=!1;for(let E of h.inputs){let $=d.getValue(E),G=d.getMask(E);y.push($),T.push(G),G!=null&&(I=!0),o||(c[E.name]--,c[E.name]===0&&!e.hasKey(E)&&i.indexOf(E.name)===-1&&!$.isDisposed&&E.sourceLayer.stateful!==!0&&x.push($))}I&&(t=t||{},t.mask=T[0]);let k=kt(g.apply(y,t)),w=null;g.supportsMasking&&(w=g.computeMask(y,T));let M=a7(h),F=Array.isArray(M)?M:[M];for(let E=0;E<F.length;++E){d.hasKey(F[E])||d.add(F[E],k[E],Array.isArray(w)?w[0]:w);let $=i.indexOf(F[E].name);$!==-1&&(p[$]=k[E])}o||Me(x)}return d.disposeMasks(),s?p:p[0]}function o7(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=hM(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=hM(s,e);for(let p of a)o.has(p.name)||(t.push(p),o.add(p.name));for(let p in i)n[p]==null&&(n[p]=new Set),i[p].forEach(u=>n[p].add(u))}}return{sorted:t,recipientCounts:s7(n)}}function s7(r){let e={};for(let t in r)e[t]=r[t].size;return e}function hM(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let p=a[a.length-1]===s.length-1;if(i.inputs.length===0||p)s.pop(),n.push(i),t.add(i.name),p&&a.pop();else{a.push(s.length-1);for(let u of i.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(i.name),!t.has(u.name)&&s.push(u)}}return{sorted:n,recipientMap:o}}function a7(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var i7=B();i7.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,gM);var Cy={kernelName:as,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,fu(ee(t,"float32"),-1))}}};var bM={kernelName:Pi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=je(ee(t,"float32")),o=Rt(pe(me(1),n));return Je(le(r,o))}}}};var yM={kernelName:Mi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Rt(pe(je(ee(t,"float32")),1));return le(r,n)}}}};var TM={kernelName:Nn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=r,p=Ct(t.shape,o);return p.length>0&&(i=de(i,p)),_(i,t.shape)},b:()=>{let i=r,p=Ct(n.shape,o);return p.length>0&&(i=de(i,p)),_(i,n.shape)}}}};var xM={kernelName:oo,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var IM={kernelName:so,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ne(t)}}};var CM={kernelName:ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ne(t)}}};var kM={kernelName:Ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>le(r,Rt(pe(me(1),je(ee(t,"float32")))))}}};var SM={kernelName:Li,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Rt(Q(me(1),je(ee(t,"float32"))));return le(r,n)}}}};var vM={kernelName:Bi,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=Q(je(t),je(n)),p=L(r,le(n,i)),u=Ct(t.shape,o);return u.length>0&&(p=de(p,u)),_(p,t.shape)},b:()=>{let i=Q(je(t),je(n)),p=Je(L(r,le(t,i))),u=Ct(n.shape,o);return u.length>0&&(p=de(p,u)),_(p,n.shape)}}}};var AM={kernelName:_i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>le(r,Q(je(ee(t,"float32")),1))}}};var wM={kernelName:$i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>le(r,pe(me(1),je(ee(t,"float32"))))}}};function u7(r,e,t,n,o,s){let a=S(r,"dy","avgPool3dGrad"),i=S(e,"input","avgPool3dGrad"),p=a,u=i,l=!1;i.rank===4&&(l=!0,p=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(p.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),P(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Nt("avgPool3dGrad",o,s);let m={dy:p,input:u},c={filterSize:t,strides:n,pad:o,dimRoundingMode:s},d=D.runKernel(mm,m,c);return l?_(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var NM=A({avgPool3dGrad_:u7});var DM={kernelName:Ru,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=t;return{x:()=>NM(r,n,o,s,a,i)}}};function p7(r,e,t,n,o){let s=S(r,"dy","avgPoolGrad"),a=S(e,"input","avgPoolGrad");P(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,p=s,u=!1;a.rank===3&&(u=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2]]),p=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(p.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${p.rank}.`),P(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let l={dy:p,input:i},m={filterSize:t,strides:n,pad:o},c=D.runKernel(lm,l,m);return u?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var PM=A({avgPoolGrad_:p7});var MM={kernelName:ao,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>PM(r,n,o,s,a)}}};var FM={kernelName:io,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>He(r,o,!1,!0),b:()=>He(n,r,!0,!1)}:!s&&a?{a:()=>He(r,o,!1,!1),b:()=>He(r,n,!0,!1)}:s&&!a?{a:()=>He(o,r,!1,!0),b:()=>He(n,r,!1,!1)}:{a:()=>He(o,r,!0,!0),b:()=>He(r,n,!0,!0)}}};var EM={kernelName:is,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Yp(r,n,o)}}};var RM={kernelName:j0,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let p=o.length-1;p>=0;p--)if(o[p]===s[p])a[p]=1;else if(o[p]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let p=0;p<a.length;p++)a[p]>1&&i.push(p);return{x:()=>de(r,i,!0)}}};var LM={kernelName:Wn,gradFunc:r=>({x:()=>r.clone()})};var _M={kernelName:uo,gradFunc:r=>({x:()=>Ne(r)})};var $M={kernelName:Kn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Bt(Ur(Qo(n,o),Zo(n,s)),r,Ne(r))}}};var BM={kernelName:_u,inputsToSave:["x"],gradFunc:Cy.gradFunc};var OM={kernelName:us,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(p=>p.shape),{axis:o}=t,s=hr(o,e[0].shape)[0],a=n.map(p=>p[s]);return kr(r,a,s).map(p=>()=>p)}};var zM={kernelName:po,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:p}=t;return P(Xo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>jm(n.shape,r,o,a,i,p),filter:()=>rc(n,r,o.shape,a,i,p)}}};var GM={kernelName:lo,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:p}=t;return{dy:()=>jn(r,o,s,a,i,1,p),filter:()=>rc(r,n,o.shape,s,a,i,p)}}};function l7(r,e,t,n,o){let s=r;r.rank===4&&(s=_(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=_(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),P(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),P(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),P(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),P(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),P(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},p={strides:n,pad:o,filterShape:t};return D.runKernel(hm,i,p)}var UM=A({conv3DBackpropFilter_:l7});var WM={kernelName:$u,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;P(Xo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>Bb(a.shape,r,i,o,s),filter:()=>UM(a,r,i.shape,o,s)}}};var KM={kernelName:mo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Je(Zd(ee(t,"float32"))),r)}}};var VM={kernelName:co,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Jd(ee(t,"float32")),r)}}};var HM={kernelName:fo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=Ik([o],n.rank),p=zd(r,o,s,!a);return i!=null&&(p=Ue(p,i)),p}}}};var qM={kernelName:ho,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n??[1,1];P(Xo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[p,u]=e;return P(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${p.rank}.`),P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),P(p.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),P(Er(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Nt("depthwiseConv2d",s,a),{x:()=>Zb(p.shape,r,u,o,s,i,a),filter:()=>Qb(p,r,u.shape,o,s,i,a)}}};var jM={kernelName:Bu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>D.runKernel(Td,s,t),filter:()=>D.runKernel(xd,a,t)}}};var XM={kernelName:bo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(Im,n)}}};var YM={kernelName:Oi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=L(pr(Je(je(t))),2/Math.sqrt(Math.PI));return{x:()=>L(r,n)}}};var QM={kernelName:yo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,t)}}};var ZM={kernelName:ps,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>_(r,t.shape)}}};var JM={kernelName:la,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,pr(t))}}};var eF={kernelName:To,gradFunc:r=>({x:()=>Ne(r)})};var tF={kernelName:xo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=le(r,ee(n,"float32")),p=Ct(t.shape,o);return p.length>0?_(de(i,p),t.shape):i},b:()=>{let i=L(r,ee(t,"float32")),p=Ct(n.shape,o);p.length>0&&(i=_(de(i,p),n.shape));let u=je(n);return Je(le(i,ee(u,"float32")))}}}};var rF={kernelName:Io,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,p=i??me(1),u=Ct(s.shape,o.shape),l=[];if(s.rank===1){for(let I=0;I<o.shape.length-1;++I)l.push(o.shape[I]);l.push(1)}let m=pe(o,s),c=L(r,p),d=Yd(Q(a,me(n))),f=L(L(L(d,d),d),me(-.5));return{x:()=>s.rank===1?_(L(L(r,Gr(_(d,[1,1,1,s.shape[0]]),l)),p),o.shape):_(L(L(r,d),p),o.shape),mean:()=>{let I=L(L(d,me(-1)),c);return s.rank===1&&(I=de(I,u)),_(I,s.shape)},variance:()=>{let I=L(L(f,m),c);return s.rank===1&&(I=de(I,u)),_(I,s.shape)},scale:()=>{let I=L(m,d),k=L(r,I);return s.rank===1&&(k=de(k,u)),_(k,s.shape)},offset:()=>{let I=r;return s.rank===1&&(I=de(I,u)),_(I,s.shape)}}}};var sF={kernelName:ls,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=hr(s,n.shape)[0];return{x:()=>{let p=n.shape,u=o.size,l=p.slice(0,a),m=l.length,c=p.slice(s,p.length).slice(1),d=c.length,f=nF(0,m),h=nF(m+1,m+1+d),g=oF([l,[u],c]),y=_(r,g),T=_(o,[u]),x=oF([[m],f,h]),I=Ue(y,x),k=Xk(I,T,n.shape[a]),w=Gd(x);return k=Ue(k,w),k},indices:()=>o}}};function nF(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function oF(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var aF={kernelName:Co,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>Ne(t),b:()=>Ne(n)}}};var iF={kernelName:Vn,gradFunc:r=>({x:()=>ee(r,"float32")})};var uF={kernelName:zi,gradFunc:r=>({x:()=>Ne(r)})};var pF={kernelName:Gi,gradFunc:r=>({x:()=>Ne(r)})};var lF={kernelName:Ui,gradFunc:r=>({x:()=>Ne(r)})};var mF={kernelName:ko,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=rr(n,0);return{x:()=>Bt(s,r,L(r,o))}}};var cF={kernelName:Wi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>le(r,Q(t,1))}}};var dF={kernelName:So,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>le(r,ee(t,"float32"))}}};var fF={kernelName:X0,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let a=pr(n);return pe(r,L(de(r,o,!0),a))}}}};function m7(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},p={depthRadius:n,bias:o,alpha:s,beta:a};return D.runKernel(vm,i,p)}var hF=A({localResponseNormalizationBackprop_:m7});var gF={kernelName:Gu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:p}=t;return{x:()=>hF(n,o,r,s,a,i,p)}}};function ky(r,e,t,n){return e.rank<t.rank&&(e=_(e,Ps(e.shape,n))),r.rank<t.rank&&(r=_(r,Ps(r.shape,n))),{x:()=>L(r,ee(zr(t,e),r.dtype))}}var mS={kernelName:vo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=hr(o,s.shape),p=ky(r,a,s,i);return{x:()=>p.x()}}};var bF={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>L(r,ee(Qo(t,n),"float32")),b:()=>L(r,ee(Ud(t,n),"float32"))}}};function c7(r,e,t,n,o,s,a){let i=S(r,"dy","maxPool3dGrad"),p=S(e,"input","maxPool3dGrad"),u=S(t,"output","maxPool3dGrad"),l=i,m=p,c=u,d=!1;p.rank===4&&(d=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=_(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]]),c=_(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),P(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),P(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),P(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Nt("maxPool3dGrad",s,a);let f={dy:l,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=D.runKernel(wm,f,h);return d?_(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var yF=A({maxPool3dGrad_:c7});var TF={kernelName:Uu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=t;return{x:()=>yF(r,n,o,s,a,i,p)}}};function d7(r,e,t,n,o,s,a){let i=S(r,"dy","maxPoolGrad"),p=S(e,"input","maxPoolGrad"),u=S(t,"output","maxPoolGrad");P(p.rank===i.rank,()=>`Rank of input (${p.rank}) does not match rank of dy (${i.rank})`),P(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),P(p.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${p.rank}.`),Nt("maxPoolGrad",s,a);let l={dy:i,input:p,output:u},m={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return D.runKernel(Am,l,m)}var xF=A({maxPoolGrad_:d7});var IF={kernelName:wo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>xF(r,n,o,s,a,i)}}};var CF={kernelName:No,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=hr(o,n.shape),i=xk(n.shape,s)[1],p=rt(i);return{x:()=>{let l=n.shape.slice();s.forEach(d=>{l[d]=1});let m=_(r,l);return le(L(m,lr(n.shape,"float32")),p)}}}};var kF={kernelName:Do,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=hr(o,s.shape),p=ky(r,a,s,i);return{x:()=>p.x()}}};var SF={kernelName:Po,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>L(r,ee(Zo(t,n),"float32")),b:()=>L(r,ee(rr(t,n),"float32"))}}};var vF={kernelName:Mo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ge(r,s,n.shape)}}};var AF={kernelName:Vi,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=Ct(t.shape,o);return i.length>0?_(de(r,i),t.shape):r},b:()=>{let i=L(r,Je(mu(le(t,n)))),p=Ct(n.shape,o);return p.length>0?_(de(i,p),n.shape):i}}}};var wF={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=L(r,ee(n,"float32")),p=Ct(t.shape,o);return p.length>0?_(de(i,p),t.shape):i},b:()=>{let i=L(r,ee(t,"float32")),p=Ct(n.shape,o);return p.length>0?_(de(i,p),n.shape):i}}}};var NF={kernelName:ms,gradFunc:r=>({x:()=>Je(r)})};var DF={kernelName:xa,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>bt(t.shape,"float32")}}};var PF={kernelName:cs,gradFunc:r=>({x:()=>Ne(r)})};var MF={kernelName:ds,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return _r(r,n).map(s=>()=>s)}};var cS={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ge(r,s,n.shape)}}};var FF={kernelName:Ro,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=ze(s.shape,a.shape);return{a:()=>{let l=ee(a,"float32"),m=L(r,L(l,Rn(s,pe(l,me(1))))),c=Ct(s.shape,i);return c.length>0&&(m=de(m,c)),_(m,s.shape)},b:()=>{let l=rr(s,0),m=Bt(l,Lr(s),Ne(s)),c=L(r,L(o,m)),d=Ct(a.shape,i);return d.length>0&&(c=de(c,d)),_(c,a.shape)}}}};var EF={kernelName:Lo,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=rr(t,0);return{x:()=>Bt(o,r,L(r,n)),alpha:()=>{let s=Bt(o,Ne(r),L(r,t)),a=Ct(n.shape,r.shape);return a.length>0&&(s=de(s,a)),_(s,n.shape)}}}};function f7(r,e,t){let n=r.shape.slice();n[t]=1;let o=_(e,n),s=Xm(r,t,!0,!1),a=Xm(r,t,!0,!0),i=L(s,a);return L(o,i)}function h7(r,e,t){let n=r.shape.length,o=n-t.length,s=C.getAxesPermutation(t,n),a=r;s!=null&&(a=Ue(r,s));let i=a.shape.slice(),u=i.splice(n-t.length,t.length).reduce((c,d)=>c*d,1);i.push(u);let l=a.reshape(i),m=f7(l,e,o);if(m=m.reshape(a.shape),s!=null){let c=C.getUndoAxesPermutation(s);m=Ue(m,c)}return m}var RF={kernelName:_o,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=[];return o==null?s=n.shape.map((a,i)=>i):typeof o=="number"?s=[o]:s=o,{x:()=>h7(n,r,s)}}};var LF={kernelName:go,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=le(r,ee(n,"float32")),p=Ct(t.shape,o);return p.length>0?_(de(i,p),t.shape):i},b:()=>{let i=L(r,ee(t,"float32")),p=Ct(n.shape,o);p.length>0&&(i=_(de(i,p),n.shape));let u=je(n);return Je(le(i,ee(u,"float32")))}}}};var _F={kernelName:qi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>le(r,Je(je(t)))}}};var $F={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=L(Zo(t,6),fu(t));return{x:()=>L(r,ee(n,"float32"))}}};var BF={kernelName:$o,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,ee(fu(t),"float32"))}}};var OF={kernelName:fs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,t.shape)}}};var zF={kernelName:Bo,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(Mm,o,t)}}};var GF={kernelName:si,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(Pm,o,t)}}};var UF={kernelName:Ia,gradFunc:(r,e,t)=>{let{dims:n}=t,o=hr(n,r.shape);return{x:()=>gr(r,o)}}};var WF={kernelName:Ca,gradFunc:r=>({x:()=>Ne(r)})};var KF={kernelName:zo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Je(le(r,L(Rn(t,1.5),2)))}}};var VF={kernelName:hs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>ee(Ne(t),"float32"),t:()=>L(r,ee(t,r.dtype)),e:()=>L(r,ee(jp(t),r.dtype))}}};var HF={kernelName:ji,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=rr(t,me(0)),o=me(Jk),s=me(eS),a=L(r,s),i=L(L(r,o),pr(ee(t,"float32")));return Bt(n,a,i)}}}};var qF={kernelName:Uo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,L(t,pe(me(1),t)))}}};var jF={kernelName:Xi,gradFunc:r=>({x:()=>Ne(r)})};var XF={kernelName:Go,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Vp(ee(t,"float32")),r)}}};var YF={kernelName:Sa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Od(ee(t,"float32")),r)}}};var QF={kernelName:gs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,p]=UC(n,o,s),u=[];for(let l=0;l<r.rank;l++)u.push([i[l],a[l]-i[l]-p[l]]);return{x:()=>Ln(r,u)}}};var ZF={kernelName:Vo,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=L(r,n);return{logits:()=>pe(a,L(de(a,[o],s),n))}}};var JF={kernelName:Yi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,mn(t))}}};var dS={kernelName:bs,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Wp(r,n,o)}}};var fS={kernelName:ys,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>pt(r,n)}}};var eE={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>le(r,L(Rt(ee(t,"float32")),2))}}};var tE={kernelName:ai,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,L(ee(t,"float32"),2))}}};var rE={kernelName:Ho,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=me(2);return{a:()=>L(r,L(o,pe(t,n))),b:()=>L(r,L(o,pe(n,t)))}}};var nE={kernelName:Is,gradFunc:r=>({x:()=>Ne(r)})};var oE={kernelName:qo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=r,p=Ct(t.shape,o);return p.length>0&&(i=de(i,p)),_(i,t.shape)},b:()=>{let i=r,p=Ct(n.shape,o);return p.length>0&&(i=de(i,p)),_(Je(i),n.shape)}}}};var sE={kernelName:Ko,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;hr(s,n.shape).forEach(u=>{o[u]=1});let i=_(r,o),p=L(i,lr(n.shape,"float32"));return{x:()=>p}}};var aE={kernelName:Aa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>le(r,je(Vp(t)))}}};var iE={kernelName:jo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(pe(me(1),je(t)),r)}}};var uE={kernelName:Dn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=Ne(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Q(a,Ge(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)a=Q(a,Ge(r,[i*n.shape[0],p*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)for(let u=0;u<o[2];++u)a=Q(a,Ge(r,[i*n.shape[0],p*n.shape[1],u*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)for(let u=0;u<o[2];++u)for(let l=0;l<o[3];++l)a=Q(a,Ge(r,[i*n.shape[0],p*n.shape[1],u*n.shape[2],l*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var pE={kernelName:Pn,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Gd(o);return{x:()=>Ue(r,s)}}};var lE={kernelName:Ts,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>mr(r,o)}}};var mE={kernelName:Xu,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>g7(r,t)}}};function g7(r,e){let t=Xn(e,Ne(e)),n=mi(r,t),o=Qo(e,me(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=Nr(o,i+1);o=Ur(o,lr(n.shape,"bool"));let a=Ne(n);return Bt(o,n,a)}var cE={kernelName:xs,gradFunc:r=>({x:()=>Ne(r)})};var b7=[Cy,bM,yM,TM,xM,IM,CM,kM,SM,vM,AM,wM,DM,MM,FM,EM,RM,LM,_M,$M,BM,OM,GM,zM,WM,KM,VM,HM,qM,jM,LF,XM,YM,QM,ZM,JM,tF,eF,rF,sF,aF,iF,uF,pF,lF,mF,cF,dF,fF,gF,mS,mS,bF,TF,IF,CF,kF,SF,vF,AF,wF,NF,DF,PF,MF,cS,cS,FF,EF,RF,_F,$F,BF,OF,zF,GF,UF,WF,KF,VF,HF,qF,jF,XF,YF,QF,ZF,JF,dS,dS,fS,fS,eE,rE,tE,nE,oE,sE,aE,iE,uE,pE,lE,mE,cE];for(let r of b7)Q0(r);var hE={};Xe(hE,{maxNorm:()=>y7,minMaxNorm:()=>I7,nonNeg:()=>x7,unitNorm:()=>T7});function hS(r,e){return z(()=>Rt(de(L(r,r),e,!0)))}var gc=class extends re.Serializable{getConfig(){return{}}},xf=class extends gc{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let t=hS(e,this.axis),n=Rr(t,0,this.maxValue);return L(e,le(n,Q(cr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};xf.className="MaxNorm";re.registerClass(xf);var If=class extends gc{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>le(e,Q(cr(),hS(e,this.axis))))}getConfig(){return{axis:this.axis}}};If.className="UnitNorm";re.registerClass(If);var Cf=class extends gc{apply(e){return Wr(e)}};Cf.className="NonNeg";re.registerClass(Cf);var kf=class extends gc{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let t=hS(e,this.axis),n=Q(L(this.rate,Rr(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,le(n,Q(cr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};kf.className="MinMaxNorm";re.registerClass(kf);var dE={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function qt(r){return nc(r)}function fE(r,e={}){return gi(r,re.SerializationMap.getMap().classNameMap,e,"constraint")}function jt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in dE?dE[r]:r,config:{}};return fE(t)}else return r instanceof gc?r:fE(r)}function y7(r){return new xf(r)}function T7(r){return new If(r)}function x7(){return new Cf}function I7(r){return new kf(r)}var gE={};Xe(gE,{constant:()=>S7,glorotNormal:()=>M7,glorotUniform:()=>P7,heNormal:()=>F7,heUniform:()=>E7,identity:()=>N7,leCunNormal:()=>R7,leCunUniform:()=>L7,ones:()=>k7,orthogonal:()=>_7,randomNormal:()=>A7,randomUniform:()=>v7,truncatedNormal:()=>w7,varianceScaling:()=>D7,zeros:()=>C7});function C7(){return new cf}function k7(){return new bl}function S7(r){return new df(r)}function v7(r){return new ff(r)}function A7(r){return new hf(r)}function w7(r){return new gf(r)}function N7(r){return new bf(r)}function D7(r){return new Jr(r)}function P7(r){return new ic(r)}function M7(r){return new uc(r)}function F7(r){return new pc(r)}function E7(r){return new lc(r)}function R7(r){return new mc(r)}function L7(r){return new cc(r)}function _7(r){return new yf(r)}var jE={};Xe(jE,{Layer:()=>Ke,RNN:()=>zs,RNNCell:()=>lp,activation:()=>YJ,add:()=>s9,alphaDropout:()=>U9,average:()=>a9,averagePooling1d:()=>ov,averagePooling2d:()=>sv,averagePooling3d:()=>av,avgPool1d:()=>h9,avgPool2d:()=>b9,avgPool3d:()=>T9,avgPooling1d:()=>g9,avgPooling2d:()=>y9,avgPooling3d:()=>x9,batchNormalization:()=>c9,bidirectional:()=>R9,concatenate:()=>i9,conv1d:()=>GJ,conv2d:()=>UJ,conv2dTranspose:()=>WJ,conv3d:()=>KJ,conv3dTranspose:()=>VJ,convLstm2d:()=>P9,convLstm2dCell:()=>M9,cropping2D:()=>qJ,dense:()=>QJ,depthwiseConv2d:()=>XJ,dot:()=>m9,dropout:()=>ZJ,elu:()=>LJ,embedding:()=>o9,flatten:()=>e9,gaussianDropout:()=>G9,gaussianNoise:()=>z9,globalAveragePooling1d:()=>I9,globalAveragePooling2d:()=>C9,globalMaxPool1d:()=>_9,globalMaxPool2d:()=>$9,globalMaxPooling1d:()=>KE,globalMaxPooling2d:()=>VE,gru:()=>S9,gruCell:()=>v9,input:()=>AS,inputLayer:()=>RJ,layerNormalization:()=>d9,leakyReLU:()=>$J,lstm:()=>A9,lstmCell:()=>w9,masking:()=>W9,maxPool1d:()=>B9,maxPool2d:()=>O9,maxPooling1d:()=>HE,maxPooling2d:()=>qE,maxPooling3d:()=>k9,maximum:()=>u9,minimum:()=>p9,multiply:()=>l9,permute:()=>n9,prelu:()=>BJ,reLU:()=>_J,repeatVector:()=>t9,reshape:()=>r9,rnn:()=>F9,separableConv2d:()=>HJ,simpleRNN:()=>N9,simpleRNNCell:()=>D9,softmax:()=>OJ,spatialDropout1d:()=>JJ,stackedRNNCells:()=>E9,thresholdedReLU:()=>zJ,timeDistributed:()=>L9,upSampling2d:()=>jJ,zeroPadding2d:()=>f9});async function Ti(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Me(n)}}function Sy(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var $7=125,ap=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},gS=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},bE=class extends ap{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=z(()=>Q(this.totals[o],L(s,n)));this.totals[o]=i,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:z(()=>{let o=L(le(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Ut(t[n])}))}},bS=class extends ap{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let p=a[i];e.push(p.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},yS=class extends ap{constructor(e,t){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||af,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=$7),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=qP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await Ti(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ti(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ti(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ti(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ti(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ti(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ti(e),await this.trainEnd(e))}};function vy(r,e){return r==null&&(r={}),r instanceof ap?[r]:Array.isArray(r)&&r[0]instanceof ap?r:kt(r).map(n=>new yS(n,e))}var Oa=class{constructor(){}static registerCallbackConstructor(e,t){b.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Oa.checkForDuplicate(t),Oa.constructors[e]==null&&(Oa.constructors[e]=[]),Oa.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Oa.constructors)Oa.constructors[+t].forEach(o=>{if(o===e)throw new O("Duplicate callback constructor.")})}static clear(){Oa.constructors={}}static createCallbacks(e){let t=[];for(let n in Oa.constructors){let o=+n;e>=o&&t.push(...Oa.constructors[o])}return t.map(n=>new n)}},Sf=Oa;Sf.constructors={};function Ay(r,e,t,n,o,s,a,i,p){let u=new bS,l=[new bE,...Sf.createCallbacks(e)];r!=null&&l.push(...r),l.push(u);let m=new gS(l);return m.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:p}),{callbackList:m,history:u}}function xn(r,e={},t=!1){return gi(r,re.SerializationMap.getMap().classNameMap,e,"layer",t)}function vf(r,e){return z(()=>{r.dtype!=="float32"&&(r=ee(r,"float32"));let t=de(gl(r),e,!0),n=Fa(t.shape,cr()),o=Rt(Xn(t,n));return le(r,o)})}function xi(r,e){return z(()=>Lt(gl(pe(e,r)),-1))}function bc(r,e){return z(()=>Lt($t(pe(e,r)),-1))}function ip(r,e){return z(()=>{let t=pe(r,e),n=Rr($t(r),cr(),Number.MAX_VALUE),o=$t(le(t,n));return L(100,Lt(o,-1))})}function B7(r,e){return z(()=>{let t=Rr(e,cr(),Number.MAX_VALUE),n=Lr(Q(1,t)),o=Rr(r,cr(),Number.MAX_VALUE),s=Lr(Q(1,o));return Lt(gl(pe(n,s)),-1)})}function O7(r,e){return z(()=>{let t=Xn(0,pe(1,L(r,e)));return Lt(gl(t),-1)})}function z7(r,e){return z(()=>{let t=Xn(0,pe(1,L(r,e)));return Lt(t,-1)})}function G7(r,e){return z(()=>{let t=de(L(r,e),-1),n=Xr(L(pe(1,r),e),-1);return Xn(0,Q(1,pe(n,t)))})}function U7(r,e){return z(()=>{let t=Math.log(2),n=pe(e,r),o=pe(Q(n,ci(L(-2,n))),t);return Lt(o,-1)})}function Tl(r,e,t=!1){return z(()=>{if(t)e=Jp(e);else{let n=de(e,e.shape.length-1,!0);e=le(e,n)}return e=Rr(e,cr(),1-cr()),Je(de(L(ee(r,"float32"),Lr(e)),e.shape.length-1))})}function yc(r,e,t=!1){return z(()=>{let n=ee(mu(oM(r)),"int32");e=Rr(e,cr(),1-cr());let o=e.shape,s=_(ou(n,o[o.length-1]),o);return Tl(s,e,t)})}function W7(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return z(()=>{let t=Wr(e),n=Je($t(e));return Q(pe(t,L(e,r)),qp(pr(n)))})}function Tc(r,e){return z(()=>{let t;return t=Rr(e,cr(),1-cr()),t=Lr(le(t,pe(1,t))),Lt(W7(r,t),-1)})}function K7(r,e){return z(()=>{let t=Rr(r,cr(),1),n=Rr(e,cr(),1);return de(L(r,Lr(le(t,n))),-1)})}function V7(r,e){return z(()=>{let t=Lr(Q(cr(),e));return Lt(pe(e,L(r,t)),-1)})}function wf(r,e){return z(()=>{let t=vf(r,-1),n=vf(e,-1),o=L(t,n);return Je(de(o,-1))})}var Af={meanSquaredError:xi,meanAbsoluteError:bc,meanAbsolutePercentageError:ip,meanSquaredLogarithmicError:B7,squaredHinge:O7,hinge:z7,categoricalHinge:G7,logcosh:U7,categoricalCrossentropy:Tl,sparseCategoricalCrossentropy:yc,binaryCrossentropy:Tc,kullbackLeiblerDivergence:K7,poisson:V7,cosineProximity:wf};function wy(r){if(typeof r=="string"){if(r in Af)return Af[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(e)}else return r}function Nf(r,e){return z(()=>{let t=L(.5,Dr(e)),n=hl(rr(e,t),r.dtype);return Lt(zr(r,n),-1)})}function Df(r,e){return z(()=>hl(zr(iu(r,-1),iu(e,-1)),"float32"))}function TE(r,e){return z(()=>ee(de(Ur(zr(r,1),zr(e,1))),"float32"))}function H7(r,e){return z(()=>ee(de(Ur(zr(r,1),zr(e,0))),"float32"))}function q7(r,e){return z(()=>ee(de(Ur(zr(r,0),zr(e,1))),"float32"))}function TS(r,e){return z(()=>{let t=TE(r,e),n=q7(r,e),o=Q(t,n);return ee(Bt(rr(o,0),le(t,o),0),"float32")})}function xE(r,e){return z(()=>{let t=TE(r,e),n=H7(r,e),o=Q(t,n);return ee(Bt(rr(o,0),le(t,o),0),"float32")})}function Dy(r,e){return Tc(r,e)}function Py(r,e){return r.rank===e.rank&&(r=dn(r,[r.rank-1])),e=iu(e,-1),e.dtype!==r.dtype&&(e=ee(e,r.dtype)),ee(zr(r,e),"float32")}var j7=xi,X7=xi,Y7=bc,Q7=bc,Z7=ip,J7=ip,Pf=Tl,eJ=wf,xS=yc,Ny={binaryAccuracy:Nf,categoricalAccuracy:Df,precision:TS,categoricalCrossentropy:Pf,sparseCategoricalCrossentropy:xS,mse:j7,MSE:X7,mae:Y7,MAE:Q7,mape:Z7,MAPE:J7,cosine:eJ};function IE(r){if(typeof r=="string"&&r in Ny)return Ny[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function Mf(r){if(Jo(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(Af))if(Af[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(Ny))if(Ny[t]===r){e=t;break}return e!==void 0?e:r.name}}function kE(r){let e={Adagrad:()=>dl.adagrad(.01),Adadelta:()=>dl.adadelta(1,.95,cr()),Adam:()=>dl.adam(.001,.9,.999,cr()),Adamax:()=>dl.adamax(.002,.9,.999,cr(),0),RMSProp:()=>dl.rmsprop(.001,.9,0,cr()),SGD:()=>dl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new O(`Unknown Optimizer ${r}`)}function CS(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!IS(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function IS(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!IS(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!IS(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function SE(r,e,t,n=console.log){let o=nJ(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(l=>Math.floor(e*l)));let a;if(!o){s.push("Receives inputs"),a=[];for(let l in r.nodesByDepth)a.push(...r.nodesByDepth[l])}n("_".repeat(e)),My(s,t,n),n("=".repeat(e));let i=r.layers;for(let l=0;l<i.length;++l)o?oJ(i[l],t,n):sJ(i[l],t,a,n),n((l===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let p=rJ(r),u=fc(r.nonTrainableWeights);n(`Total params: ${p+u}`),n(`Trainable params: ${p}`),n(`Non-trainable params: ${u}`),n("_".repeat(e))}function rJ(r){let e;return r.collectedTrainableWeights!=null?e=fc(r.collectedTrainableWeights):e=fc(r.trainableWeights),e}function nJ(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function My(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function oJ(r,e,t){let n,o;try{o=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,a=r.getClassName(),i=[`${s} (${a})`,o,n,r.countParams().toString()];My(i,e,t)}function sJ(r,e,t,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let a=[];for(let m of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];a.push(`${d}[${f}][${h}]`)}let i=r.name,p=r.getClassName(),u=a.length===0?"":a[0],l=[`${i} (${p})`,s,o,r.countParams().toString(),u];My(l,e,n);for(let m=1;m<a.length;++m)My(["","","","",a[m]],e,n)}function vE(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function xl(r,e){if(r===null)return null;if(typeof r=="string")return gu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];vE(e,o,s)?t.push(s):t.push(xl(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=gu(n);t[s]=xl(o,s)}}return t}}function Fy(r,e){if(r==null)return null;if(typeof r=="string")return Ls(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];vE(e,o,s)?t.push(s):t.push(Fy(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=Ls(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=Fy(o,n)}return t}}var Ff="0.0.0";var es=class extends Ke{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let T=this.getClassName().toLowerCase();this.name=np(T)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],_s(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(T=>T.name)}`);_s(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(T=>T.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let T of this.outputs){let x=T.sourceLayer,I=T.nodeIndex,k=T.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(I),this.outputLayersTensorIndices.push(k)}for(let T of this.inputs){let x=T.sourceLayer,I=T.nodeIndex,k=T.tensorIndex;Jo(I===0,"input layer has >1 nodes"),Jo(k===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(I),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let T=0;T<this.inputLayers.length;T++){let x=this.inputLayers[T];if(!(x instanceof yi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${T} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map(T=>T.shape),this.internalOutputShapes=this.outputs.map(T=>T.shape);let t={},n={},o={},s={},a={},i=[],p=(T,x,I,k,w,M)=>{(k==null||w==null||M==null)&&(k=T.sourceLayer,w=T.nodeIndex,M=T.tensorIndex);let F=k.inboundNodes[w];if(I.indexOf(F)!==-1)throw new Qr(`The tensor ${T.name} at layer "${k.name}" is part of a cycle.`);if(x.indexOf(F)!==-1)return;this.containerNodes.add(es.nodeKey(k,w)),k.id in a||(a[k.id]=Object.keys(a).length),I.indexOf(F)===-1&&I.push(F);let E=F.inboundLayers.length;for(let $=0;$<E;$++){let G=F.inputTensors[$],W=F.inboundLayers[$],V=F.nodeIndices[$],q=F.tensorIndices[$];p(G,x,I,W,V,q)}for(x.push(F);I.indexOf(F)>=0;)I.splice(I.indexOf(F),1);i.push(F)},u=[],l=[];for(let T of this.outputs)p(T,u,l);let m=i.slice().reverse();for(let T of m){n[T.id]=T,T.id in t||(t[T.id]=0);let x=t[T.id],I=o[T.outboundLayer.id]==null?0:o[T.outboundLayer.id];x=Math.max(x,I),o[T.outboundLayer.id]=x,s[T.outboundLayer.id]=T.outboundLayer,t[T.id]=x;for(let k=0;k<T.inboundLayers.length;k++){let w=T.inboundLayers[k],M=T.nodeIndices[k],F=w.inboundNodes[M],E=t[F.id]==null?0:t[F.id];t[F.id]=Math.max(x+1,E),n[F.id]=F}}let c={};for(let T in t){let x=t[T];x in c||(c[x]=[]),c[x].push(n[T])}let d={};for(let T in o){let x=o[T];x in d||(d[x]=[]),d[x].push(s[T])}let f=Object.keys(d).map(T=>parseInt(T,10)).sort(pf);this.layers=[];for(let T of f){let x=d[T];x.sort((I,k)=>{let w=a[I.id],M=a[k.id];return w<M?-1:w>M?1:0});for(let I of x)I instanceof es&&this.internalContainerRefs.push(I),this.layers.push(I)}this.layersByDepth=d,f=Object.keys(c).map(T=>parseInt(T,10)).sort(pf);let h=this.inputs.slice(),g=[];for(let T of f)for(let x of c[T]){let I=x.outboundLayer;if(I!=null){for(let k of x.inputTensors)if(h.indexOf(k)===-1)throw new Qr(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${I.name}". The following previous layers were accessed without issue: ${g}`);for(let k of x.outputTensors)h.push(k);g.push(I.name)}}this.nodesByDepth=c;let y=this.layers.map(T=>T.name);for(let T of y){let x=y.filter(I=>I===T).length;if(x!==1)throw new Qr(`The name "${T}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new sp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(T=>null),outputMasks:this.outputs.map(T=>null),inputShapes:this.inputs.map(T=>T.shape),outputShapes:this.outputs.map(T=>T.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new O(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let p=a.split("/");i=p.slice(0,-2).concat([p[p.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new O(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new O(`${a.length} of ${o} weights are not set: ${a}`)}hc(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Ff}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Fy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return z(()=>{e=kt(e);let n=new Ba;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return yl(this.outputs,n,t)})}computeMask(e,t){return z(()=>{e=kt(e);let n;return t==null?n=Rs(null,e.length):n=kt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=dc(e);if(t.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let p=this.inputLayers[i],u=t[i],l=p.name+"_0_0";n[l]=u}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(pf);if(o.length>1)for(let i of o){let p=this.nodesByDepth[i];for(let u of p){let l=u.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(l.id)!==-1)continue;let m=[];for(let h=0;h<u.inboundLayers.length;h++){let g=u.inboundLayers[h],y=u.nodeIndices[h],T=u.tensorIndices[h],x=`${g.name}_${y}_${T}`,I=n[x];m.push(I)}let c=l.computeOutputShape(Pr(m)),d=dc(c),f=l.inboundNodes.indexOf(u);for(let h=0;h<d.length;h++){let g=`${l.name}_${f}_${h}`;n[g]=d[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let p=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],m=`${p.name}_${u}_${l}`;a.push(m)}for(let i=0;i<a.length;i++){let p=a[i];Jo(p in n),s.push(n[p])}return Pr(s)}runInternalGraph(e,t){t==null&&(t=Rs(null,e.length));let n={};for(let p=0;p<this.inputs.length;++p){let u=this.inputs[p],l=e[p],m=t[p];n[u.id]=[l,m]}let o=Object.keys(this.nodesByDepth).map(p=>parseInt(p,10)).sort(pf);for(let p of o){let u=this.nodesByDepth[p];for(let l of u){let m=l.outboundLayer,c=l.inputTensors,d=l.outputTensors,f=new Array;for(let h of c)h.id in n&&f.push(n[h.id]);if(f.length===c.length){let h={},g,y,T,x;if(l.callArgs!=null&&(h=l.callArgs),f.length===1){let[I,k]=f[0];h.mask==null&&(h.mask=k),T=kt(m.call(I,h)),x=kt(m.computeMask(I,k)),g=[I],y=[k]}else g=f.map(I=>I[0]),y=f.map(I=>I[1]),h.mask==null&&(h.mask=y),T=kt(m.call(g,h)),x=kt(m.computeMask(g,y));if(m.activityRegularizer)throw new Pe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let I=0;I<d.length;++I){let k=d[I],w=T[I],M=x[I];n[k.id]=[w,M]}}}}let s=[],a=[],i=[];for(let p of this.outputs){Jo(p.id in n,`Could not compute output ${p.name} : ${p.id}`);let[u,l]=n[p.id];i.push(u.shape),s.push(u),a.push(l)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof es?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=es.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new O("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new O(`No such layer: ${e}`)}calculateLosses(){return z(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=es.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),p=a.getConfig(),u=[];for(let m=0;m<a.inboundNodes.length;m++){let c=a.inboundNodes[m],d=es.nodeKey(a,m),f={};if(this.containerNodes.has(d)){if(c.callArgs)try{JSON.stringify(c.callArgs),f=c.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${c.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(c.inboundLayers.length>0){let h=[];for(let g=0;g<c.inboundLayers.length;g++){let y=c.inboundLayers[g],T=c.nodeIndices[g],x=c.tensorIndices[g],I=es.nodeKey(y,T),k=t[I];k==null&&(k=0),h.push([y.name,k,x,f])}u.push(h)}}}let l={};l.name=a.name,l.className=i,l.config=p,l.inboundNodes=u,n.push(l)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],p=this.inputLayersNodeIndices[a],u=es.nodeKey(i,p);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let m=this.inputLayersTensorIndices[a];o.push([i.name,l,m])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],p=this.outputLayersNodeIndices[a],u=es.nodeKey(i,p);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let m=this.outputLayersTensorIndices[a];s.push([i.name,l,m])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function p(g,y){let T=[],x;for(let I of y){let k=I[0],w=I[1],M=I[2];if(x=I[3]==null?{}:I[3],!(k in s)){i(g,y);return}let F=s[k];if(F.inboundNodes.length<=w){i(g,y);return}let E=F.inboundNodes[w];T.push(E.outputTensors[M])}T.length>0&&g.apply(Pr(T),x)}function u(g){let y=g.name,T=xn(g,t.customObjects!=null?t.customObjects:{});T.setFastWeightInitDuringBuild(o),s[y]=T,g.inboundNodes.forEach(I=>{if(!(I instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${I}`);i(T,I)})}let l=t.name,m=t.layers;for(let g of m)u(g);for(;!VP(a);)for(let g of m){let y=s[g.name];if(y.name in a){let T=a[y.name];delete a[y.name];for(let x of T)p(y,x)}}let c=[],d=[],f=t.inputLayers;for(let g of f){let y=g[0],T=g[1],x=g[2];Jo(y in s);let k=s[y].inboundNodes[T].outputTensors;c.push(k[x])}let h=t.outputLayers;for(let g of h){let y=g[0],T=g[1],x=g[2];Jo(y in s);let k=s[y].inboundNodes[T].outputTensors;d.push(k[x])}return new e({inputs:c,outputs:d,name:l})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function aJ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Ey(r,e){return aJ(r,e,"classWeight")}async function Ry(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=z(()=>{if(r.shape.length===1)return Mn(r);if(r.shape.length===2){if(r.shape[1]>1)return iu(r,1);if(r.shape[1]===1)return _(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Me(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Ot(a,"float32")}else return null}function AE(r,e){return L(r,e)}var iJ=32;function DE(r,e){let t,n,o=e;t=o.xs,n=o.ys,b.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=wE("input",r.inputNames,t),a=wE("output",r.outputNames,n),i=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let p=0;p<s.length;p++)b.assert(s[p].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[p]} has ${s[p].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let p=0;p<a.length;p++)b.assert(a[p].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[p]} has ${a[p].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function wE(r,e,t){if(t instanceof Ye)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function uJ(r){if(r.length===3)throw new Pe("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function PE(r,e,t){let n=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(NE(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=uJ(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),p=r.getDedupedMetricsNames(),u;o?u=p.slice().concat(p.map(g=>"val_"+g)):u=p.slice();let l=vy(t.callbacks,t.yieldEvery),m=t.verbose==null?1:t.verbose,{callbackList:c,history:d}=Ay(l,m,t.epochs,null,null,pJ(e,t),null,o,u);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;f<t.epochs;){let g={};await c.onEpochBegin(f);let y=0,T=0;for(n||(h=await e.iterator());!n||y<t.batchesPerEpoch;){let x=await h.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:I,ys:k}=DE(r,x.value),w={};w.batch=T,w.size=I[0].shape[0],await c.onBatchBegin(T,w);let M=[];if(t.classWeight!=null){let $=Ey(t.classWeight,r.outputNames);for(let G=0;G<$.length;++G)M.push(await Ry(k[G],null,$[G]))}let F=I.concat(k).concat(M),E=i(F);Me(F);for(let $=0;$<p.length;++$){let G=p[$],W=E[$];w[G]=W,Ut(W)}await c.onBatchEnd(T,w),Sy(w),T++,y++}if(n?y>=t.batchesPerEpoch:x.done){if(o){let I;NE(t.validationData)?I=kt(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):I=kt(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?iJ:t.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=I[k]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function pJ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function NE(r){return typeof r.iterator=="function"}function lJ(r){return typeof r.next=="function"}async function ME(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Pe("Verbose mode is not implemented yet.");b.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=lJ(e)?e:await e.iterator(),i=0,p=0;for(;!n||p<t.batches;){let u=await a.next();if(s=z(()=>{if(u.value){let{xs:l,ys:m}=DE(r,u.value),c=l.concat(m),d=z(()=>o(c));if(Me(c),p===0)for(let h=0;h<d.length;++h)s.push(me(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],y=s[h];s[h]=z(()=>Q(s[h],L(f,g))),p>0&&Me(y)}Me(d),i+=f,++p}return s}),u.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let l=s[u];s[u]=le(s[u],i),Me(l)}return Pr(s)}function Ly(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function xc(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>bu(n,e,t-e)):bu(r,e,t-e)}function _y(r,e){return z(()=>r==null?null:Array.isArray(r)?r.map(t=>_y(t,e)):hy(r,e.dtype==="int32"?e:ee(e,"int32")))}function $y(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function mJ(r,e,t,n,o,s,a,i,p,u,l,m,c,d,f){o==null&&(o=32),s==null&&(s=1),l==null&&(l=!0),c==null&&(c=0);let h=!1;if(p!=null&&u!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,d,"steps_per_epoch"),y;g!=null&&(y=Zr(0,g)),a==null&&(a=1);let{callbackList:T,history:x}=Ay(i,a,s,c,g,d,o,h,m);T.setModel(r),r.history=x,await T.onTrainBegin(),r.stopTraining_=!1;for(let I=c;I<s;++I){await T.onEpochBegin(I);let k={};if(d!=null)throw new Pe("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Pe("batch shuffling is not implemneted yet");l&&b.shuffle(y);let w=Ot(y),M=$y(g,o);for(let F=0;F<M.length;++F){let E={};if(await T.onBatchBegin(F,E),z(()=>{let $=M[F][0],G=M[F][1],W=bu(w,$,G-$);E.batch=F,E.size=G-$;let V=_y(t,W),q=e(V);for(let j=0;j<n.length;++j){let Y=n[j],te=q[j];E[Y]=te,Ut(te)}if(F===M.length-1&&h){let j=r.testLoop(p,u,o);for(let Y=0;Y<n.length;++Y){let te=n[Y],H=j[Y];Ut(H),k["val_"+te]=H}}}),await T.onBatchEnd(F,E),Sy(E),r.stopTraining_)break}w.dispose()}if(await T.onEpochEnd(I,k),r.stopTraining_)break}return await T.onTrainEnd(),await r.history.syncData(),r.history}async function FE(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,p,u,l,m,c;try{let d=n.batchSize==null?32:n.batchSize;Ly(d);let f=!1,h=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,y;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)p=n.validationData[0],u=n.validationData[1];else throw n.validationData.length===3?new Pe("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let E=!0,$=await r.standardizeUserData(p,u,null,null,E,d);l=$[0],m=$[1],y=l.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let E=Math.floor(o[0].shape[0]*(1-n.validationSplit)),$=o[0].shape[0];l=xc(o,E,$),a=o,o=xc(o,0,E),m=xc(s,E,$),i=s,s=xc(s,0,E),y=l.concat(m)}else n.validationSteps!=null&&(g=!0);let T=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),I=r.getDedupedMetricsNames(),k,w;g?(r.makeTestFunction(),k=r.testFunction,w=I.slice().concat(I.map(E=>"val_"+E))):(k=null,y=[],w=I.slice());let M=vy(n.callbacks,n.yieldEvery);return await mJ(r,x,T,I,d,n.epochs,n.verbose,M,k,y,n.shuffle,w,n.initialEpoch,null,null)}finally{r.isTraining=!1,Os(o,e),Os(s,t),Os(a,e),Os(i,t),Os(l,p),Os(m,u),c!=null&&Me(c)}}function kS(r){let e=[];r instanceof Ye&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(yu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Os(r,e){if(r==null)return;let t=[];if(e instanceof Ye)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Ye)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function cJ(r){return r instanceof Ye}function SS(r){return Array.isArray(r)}function EE(r){return!cJ(r)&&!SS(r)}function RE(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(SS(r)&&r.length>0)a=!0;else if(EE(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(EE(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new O(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(SS(r)){if(r=r,r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new O(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=kS(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let p=0;p<t[a].length;++p){if(p===0&&!n)continue;let u=i.shape[p],l=t[a][p];if(l!=null&&l>=0&&u!==l)throw new O(`${o} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function dJ(r,e,t){let n=_s(r.map(s=>s.shape[0]));n.sort();let o=_s(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function fJ(r,e,t){let n=[xi,Tc,Tl];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===Tl&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let p=s.shape.slice(1),u=i.slice(1);for(let l=0;l<p.length;++l){let m=p[l],c=u[l];if(c!=null&&m!==c)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function LE(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new O(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let p=0;p<t[a].length;++p){if(p===0&&!n)continue;let u=i.shape[p],l=t[a][p];if(l!=null&&l!==u)throw new O(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function hJ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var gJ="layers-model",ts=class extends es{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");SE(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=kE(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Yr))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new O(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(wy(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>wy(i))}else{let a=wy(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],p=this.outputNames[a];this.feedOutputNames.push(p),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],_a("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=hJ(e.metrics,this.outputNames),s=(a,i,p)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([p,a])};_a("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(u=>{let l="",m,c,d;for(let f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Tc?["accuracy","acc"].indexOf(f)!==-1?c=Nf:["crossentropy","ce"].indexOf(f)!==-1&&(c=Dy):this.lossFunctions[a]===yc?["accuracy","acc"].indexOf(f)!==-1?c=Py:["crossentropy","ce"].indexOf(f)!==-1&&(c=xS):["accuracy","acc"].indexOf(f)!==-1?c=Df:["crossentropy","ce"].indexOf(f)!==-1&&(c=Pf);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),d=c,m=l+y}else d=IE(f),m=l+Mf(f);let h;_a(m,()=>{h=d}),s(a,m,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;Ly(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let p=this.testFunction,u=this.testLoop(p,i,o,n.verbose,n.steps);return Pr(u)}finally{Os(a[0],e),Os(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),ME(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new O(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new Ba;if(e instanceof Ye&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let p=0;p<this.inputs.length;++p)a.add(this.inputs[p],e[p])}else for(let p of this.inputs){let u=e[p.name];if(u==null)throw new O(`No value is provided for the model's input ${p.name}`);a.add(p,u)}let i=yl(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Rs(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let p=a.indexOf(e[i]);if(p!==-1&&(t[i]=s[p],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return z(()=>{let o=this.checkNumSamples(e);if(n)throw new Pe("Verbose predictLoop() is not implemented yet.");let s=$y(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)z(()=>{let u=s[i][0],l=s[i][1],m=xc(e,u,l),c=[];if(Array.isArray(m))for(let f=0;f<m.length;++f)c.push({key:this.inputs[f],value:m[f]});else c.push({key:this.inputs[0],value:m});let d=new Ba(c);return yl(this.outputs,d)}).forEach((u,l)=>a[l].push(u));return Pr(a.map(i=>pt(i,0)))})}predict(e,t={}){let n=kS(e);LE(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return Ly(o),this.predictLoop(n,o)}finally{Os(n,e)}}predictOnBatch(e){LE(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new Qr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===yc?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=RE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=RE(t,this.feedOutputNames,s,!1,"target"),dJ(e,t,null),fJ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,p]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){let l=Ey(o,this.outputNames);u=[];for(let m=0;m<l.length;++m)u.push(await Ry(p[m],null,l[m]))}return[i,p,u]}testLoop(e,t,n,o=0,s){return z(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Pe("Verbose mode is not implemented yet.");if(s!=null)throw new Pe("steps mode in testLoop() is not implemented yet");{let p=$y(a,n),u=Ot(Zr(0,a));for(let l=0;l<p.length;++l){let m=p[l][0],c=p[l][1],d=bu(u,m,c-m),f=_y(t,d),h=e(f);if(l===0)for(let g=0;g<h.length;++g)i.push(me(0));for(let g=0;g<h.length;++g){let y=h[g];i[g]=Q(i[g],L(c-m,y))}}for(let l=0;l<i.length;++l)i[l]=le(i[l],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;oS(e,o)>1&&(s+=`_${oS(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let m=[];for(let h=0;h<this.inputs.length;++h)m.push({key:this.inputs[h],value:n[h]});let c=new Ba(m),d=yl(this.outputs,c,{training:!0}),f;for(let h=0;h<this.lossFunctions.length;++h){let y=this.lossFunctions[h](o[h],d[h]);s[h]!=null&&(y=AE(y,s[h]));let T=Lt(y);t.push(T),h===0?f=y:f=Q(f,y)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let y=this.metricsTensors[h][0],T=this.metricsTensors[h][1];g=Lt(y(o[T],d[T]))}Ut(g),a.push(g)}return f=Lt(f),this.calculateLosses().forEach(h=>{f=Q(f,h)}),f},p=this.collectedTrainableWeights.map(m=>m.read()),u=!0;return[this.optimizer_.minimize(i,u,p)].concat(a)}}makeTestFunction(){this.testFunction=e=>z(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:o[u]});let i=new Ba(a),p=yl(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let l=this.lossFunctions[u],m=Lt(l(s[u],p[u]));u===0?n=m:n=Q(n,m),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let l=this.metricsTensors[u][0],m=this.metricsTensors[u][1],c=Lt(l(s[m],p[m]));t.push(c)}return t})}async fit(e,t,n={}){return FE(this,e,t,n)}async fitDataset(e,t){return PE(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),p=[];for(let u of i){let l=await u.data();p.push(l[0])}return Me(i),Os(n[0],e),Os(n[1],t),Pr(p)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Pd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Pd().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Ls(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Ls(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=Ls(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ls(Mf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ls(Mf(e)));{let e={};for(let t in this.metrics)e[t]=Ls(Mf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=xl(e.optimizer_config),n=xn(t),o;if(typeof e.loss=="string")o=gu(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>gu(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=gu(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>gu(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=gu(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=Or.getSaveHandlers(e);if(u.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new O(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Or.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:gJ,generatedBy:`TensorFlow.js tfjs-layers v${Ff}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:l,specs:m}=await Or.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...m),n.data=Or.concatenateArrayBuffers([n.data,l])}return this.userDefinedMetadata!=null&&(CS(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){CS(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ts.className="Model";re.registerClass(ts);var vS=class extends ts{};vS.className="Functional";re.registerClass(vS);async function _E(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=xl(t),o=xn(n,e);if(r.weightsManifest!=null){let s=await Or.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Me(s)}return o}async function $E(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Or.getLoadHandlers(r,e);if(t.length===0)t.push(Or.browserHTTPRequest(r,e));else if(t.length>1)throw new O(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return bJ(r,void 0,e)}async function bJ(r,e,t){if(t==null&&(t={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=xn(xl(o),e,a),p=n.trainingConfig;if(p!=null&&i.loadTrainingConfig(p),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:l}=yJ(n.weightData,n.weightSpecs);i.loadWeights(u,s),i.optimizer!=null&&l.length>0&&await i.optimizer.setWeights(l),Me(u),Me(l.map(m=>m.tensor))}return i}function yJ(r,e){let t=Or.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var By=class extends ts{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:np("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof By||e instanceof ts,n;if(t){if(n=e,n.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=Ty({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=lS(this.outputs[0])}this.inboundNodes=[],new sp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Rs(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(nt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ts({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=t}else b.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof By))throw new Pe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let p of s){let l=xn(p,void 0,o);o&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},Ic=By;Ic.className="Sequential";re.registerClass(Ic);function TJ(r){return new ts(r)}function xJ(r){return new Ic(r)}function IJ(r,e){return e==null&&(e={}),$E(r,e)}function AS(r){return Ty(r)}function CJ(r,e){Sf.registerCallbackConstructor(r,e)}var In=class extends re.Serializable{getConfig(){return{}}},NS=class extends In{apply(e,t=1){return aM(e,t)}};NS.className="elu";re.registerClass(NS);var DS=class extends In{apply(e){return Qd(e)}};DS.className="selu";re.registerClass(DS);var PS=class extends In{apply(e){return Wr(e)}};PS.className="relu";re.registerClass(PS);var MS=class extends In{apply(e){return z(()=>cu(6,Wr(e)))}};MS.className="relu6";re.registerClass(MS);var FS=class extends In{apply(e){return e}};FS.className="linear";re.registerClass(FS);var ES=class extends In{apply(e){return mn(e)}};ES.className="sigmoid";re.registerClass(ES);var RS=class extends In{apply(e){return uM(e)}};RS.className="hardSigmoid";re.registerClass(RS);var LS=class extends In{apply(e){return ci(e)}};LS.className="softplus";re.registerClass(LS);var _S=class extends In{apply(e){return iM(e)}};_S.className="softsign";re.registerClass(_S);var $S=class extends In{apply(e){return uu(e)}};$S.className="tanh";re.registerClass($S);var Ef=class extends In{apply(e,t=-1){return Jp(e,t)}};Ef.className="softmax";re.registerClass(Ef);var BS=class extends In{apply(e,t=-1){return Wd(e,t)}};BS.className="logSoftmax";re.registerClass(BS);var OS=class extends In{apply(e,t=1){return z(()=>L(mn(L(e,t)),e))}};OS.className="swish";re.registerClass(OS);var zS=class extends In{apply(e){return z(()=>L(e,uu(ci(e))))}};zS.className="mish";re.registerClass(zS);function za(r){return r.getClassName()}function wS(r,e={}){return gi(r,re.SerializationMap.getMap().classNameMap,e,"activation")}function Ga(r){if(r==null){let e={};return e.className="linear",e.config={},wS(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},wS(e)}else return r instanceof In?r:wS(r)}function GS(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var US=class extends re.Serializable{},Il=class extends US{constructor(e){super();GS(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return z(()=>{let t=bt([1]);return this.hasL1&&(t=Q(t,de(L(this.l1,$t(e))))),this.hasL2&&(t=Q(t,de(L(this.l2,gl(e))))),_(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Il.className="L1L2";re.registerClass(Il);function zE(r){return GS(r),new Il({l1:r!=null?r.l1:null,l2:0})}function GE(r){return GS(r),new Il({l2:r!=null?r.l2:null,l1:0})}var BE={l1l2:"L1L2"};function ht(r){return nc(r)}function OE(r,e={}){return gi(r,re.SerializationMap.getMap().classNameMap,e,"regularizer")}function St(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in BE?BE[r]:r,config:{}};return OE(t)}else return r instanceof US?r:OE(r)}var Rf=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=Wr(e);return this.maxValue!=null&&(n=Rr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Rf.className="ReLU";re.registerClass(Rf);var Lf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return Hp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Lf.className="LeakyReLU";re.registerClass(Lf);var _f=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=xt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=St(e.alphaRegularizer),this.alphaConstraint=jt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=nt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Pt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),Qp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Dt(this.alphaInitializer),alphaRegularizer:ht(this.alphaRegularizer),alphaConstraint:qt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};_f.className="PReLU";re.registerClass(_f);var $f=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Pe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return lu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};$f.className="ELU";re.registerClass($f);var Bf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return L(n,ee(rr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Bf.className="ThresholdedReLU";re.registerClass(Bf);var Of=class extends Ke{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new Ef().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Of.className="Softmax";re.registerClass(Of);function up(r,e,t){if(typeof r=="number")return Rs(r,e);if(r.length!==e)throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!rM(o))throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function $n(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Ua(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+$a([t-e,0]);else if(n==="same")r=r*e;else throw new O(`Unsupport padding mode: ${n}.`);return r}function Hf(r,e){return z(()=>(Wt(e),e==="channelsFirst"?Ue(r,[0,2,3,1]):r))}function KS(r,e){return z(()=>(Wt(e),e==="channelsFirst"?Ue(r,[0,2,3,4,1]):r))}function SJ(r,e,t,n=1,o="valid",s,a=1){return z(()=>{if(s==null&&(s=gn()),Wt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=Ue(r,[0,2,1])),o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=_d(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=bn(i,t)),i})}function UE(r,e,t,n=[1,1],o="valid",s,a,i=null){return z(()=>{if(s==null&&(s=gn()),Wt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let p=Hf(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return p=Ms.conv2d({x:p,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(p=Ue(p,[0,3,1,2])),p})}function vJ(r,e,t,n=[1,1,1],o="valid",s,a){return z(()=>{if(s==null&&(s=gn()),Wt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=KS(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Bd(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=bn(i,t)),s==="channelsFirst"&&(i=Ue(i,[0,4,1,2,3])),i})}var Sc=class extends Ke{constructor(e,t){super(t);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(Sc.verifyArgs(t),this.rank=e,nr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Pe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=up(t.kernelSize,e,"kernelSize"),this.strides=up(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,hn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Wt(this.dataFormat),this.activation=Ga(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=xt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jt(t.biasConstraint),this.biasRegularizer=St(t.biasRegularizer),this.activityRegularizer=St(t.activityRegularizer),this.dilationRate=up(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Jo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!iy(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:za(this.activation),useBias:this.useBias,biasInitializer:Dt(this.biasInitializer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),biasConstraint:qt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Cl=class extends Sc{constructor(e,t){super(e,t);this.kernel=null;Cl.verifyArgs(t),this.filters=t.filters,nr(this.filters,"filters"),this.kernelInitializer=xt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jt(t.kernelConstraint),this.kernelRegularizer=St(t.kernelRegularizer)}build(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return z(()=>{e=Oe(e);let n,o=this.bias==null?null:this.bias.read(),s=uy(this.activation.getClassName());if(s!=null&&this.rank===2)n=UE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=SJ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=UE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=vJ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Pe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=nt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=$n(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Dt(this.kernelInitializer),kernelRegularizer:ht(this.kernelRegularizer),kernelConstraint:qt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},VS=class extends Cl{constructor(e){super(2,e);VS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!iy(e.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},Cc=VS;Cc.className="Conv2D";re.registerClass(Cc);var HS=class extends Cl{constructor(e){super(3,e);HS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},kc=HS;kc.className="Conv3D";re.registerClass(kc);var zf=class extends Cc{constructor(e){super(e);if(this.inputSpec=[new Pt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return z(()=>{let n=Oe(e);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let p=o[a],u=o[i],l=this.kernelSize[0],m=this.kernelSize[1],c=this.strides[0],d=this.strides[1],f=Ua(p,c,l,this.padding),h=Ua(u,d,m,this.padding),g=[s,f,h,this.filters];this.dataFormat!=="channelsLast"&&(n=Ue(n,[0,2,3,1]));let y=$d(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Ue(y,[0,3,1,2])),this.bias!=null&&(y=bn(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],p=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[o]=Ua(t[o],p,a,this.padding),t[s]=Ua(t[s],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};zf.className="Conv2DTranspose";re.registerClass(zf);var Gf=class extends kc{constructor(e){super(e);if(this.inputSpec=[new Pt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return z(()=>{let n=Oe(e);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i,p;this.dataFormat==="channelsFirst"?(p=2,a=3,i=4):(p=1,a=2,i=3);let u=o[p],l=o[a],m=o[i],c=this.kernelSize[0],d=this.kernelSize[1],f=this.kernelSize[2],h=this.strides[0],g=this.strides[1],y=this.strides[2],T=Ua(u,h,c,this.padding),x=Ua(l,g,d,this.padding),I=Ua(m,y,f,this.padding),k=[s,T,x,I,this.filters];this.dataFormat!=="channelsLast"&&(n=Ue(n,[0,2,3,4,1]));let w=ck(n,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=Ue(w,[0,4,1,2,3])),this.bias!==null&&(w=bn(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,o,s,a;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,a=4):(n=4,o=1,s=2,a=3);let i=this.kernelSize[0],p=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],m=this.strides[1],c=this.strides[2];return t[n]=this.filters,t[o]=Ua(t[o],l,i,this.padding),t[s]=Ua(t[s],m,p,this.padding),t[a]=Ua(t[a],c,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Gf.className="Conv3DTranspose";re.registerClass(Gf);var WS=class extends Cl{constructor(e,t){super(e,t);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(t.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=xt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=St(t.depthwiseRegularizer),this.depthwiseConstraint=jt(t.depthwiseConstraint),this.pointwiseInitializer=xt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=St(t.pointwiseRegularizer),this.pointwiseConstraint=jt(t.pointwiseConstraint)}build(e){if(e=nt(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Pt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return z(()=>{e=Oe(e);let n;if(this.rank===1)throw new Pe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ue(e,[0,2,3,1])),n=Wk(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=bn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ue(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Dt(this.depthwiseInitializer),e.pointwiseInitializer=Dt(this.pointwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.pointwiseRegularizer=ht(this.pointwiseRegularizer),e.depthwiseConstraint=qt(this.depthwiseConstraint),e.pointwiseConstraint=qt(this.pointwiseConstraint),e}};WS.className="SeparableConv";var Uf=class extends WS{constructor(e){super(2,e)}};Uf.className="SeparableConv2D";re.registerClass(Uf);var qS=class extends Cl{constructor(e){super(1,e);qS.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!iy(e.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Wf=qS;Wf.className="Conv1D";re.registerClass(Wf);var Kf=class extends Ke{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return z(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=mf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return mf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=mf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return mf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Kf.className="Cropping2D";re.registerClass(Kf);var Vf=class extends Ke{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,eM(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return z(()=>{let n=Oe(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=Ue(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?fn.resizeNearestNeighbor(n,[s,a]):fn.resizeBilinear(n,[s,a]);return Ue(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?fn.resizeNearestNeighbor(n,[s,a]):fn.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};Vf.className="UpSampling2D";re.registerClass(Vf);function AJ(r,e,t=[1,1],n="valid",o,s){return z(()=>{o==null&&(o=gn()),Wt(o);let a=Hf(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=pu(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=Ue(a,[0,3,1,2])),a})}var qf=class extends Sc{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=xt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jt(e.depthwiseConstraint),this.depthwiseRegularizer=St(e.depthwiseRegularizer)}build(e){if(e=nt(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return z(()=>{e=Oe(e);let n=AJ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=bn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=$n(t,this.kernelSize[0],this.padding,this.strides[0]),a=$n(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Dt(this.depthwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.depthwiseConstraint=qt(this.depthwiseRegularizer),e}};qf.className="DepthwiseConv2D";re.registerClass(qf);function jS(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function XS(r,e,t,n=!1,o,s,a=!1,i=!1){return z(()=>{let p=e.shape.length;if(p<3)throw new O(`Input should be at least 3D, but is ${p}D.`);let u=[1,0].concat(Zr(2,p));if(e=Ue(e,u),s!=null)throw new Pe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=ee(ee(o,"bool"),"float32"),o.rank===p-1&&(o=Nr(o,-1)),o=Ue(o,u)),n&&(e=gr(e,0),o!=null&&(o=gr(o,0)));let l=[],m,c=t,d=e.shape[0],f=_r(e),h;o!=null&&(h=_r(o));for(let y=0;y<d;++y){let T=f[y],x=z(()=>r(T,c));if(o==null)m=x[0],c=x[1];else{let I=z(()=>{let k=h[y],w=pe(Dr(k),k),M=Q(L(x[0],k),L(c[0],w)),F=c.map((E,$)=>Q(L(x[1][$],k),L(E,w)));return{output:M,newStates:F}});m=I.output,c=I.newStates}i&&l.push(m)}let g;return i&&(g=mr(l,1)),[m,g,c]})}var YS=class extends Ke{constructor(e){super(e);let t;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new wc({cells:e.cell}):t=e.cell,t.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Pt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Zr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){by(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return z(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Pe("Constants support is not implemented in RNN yet.");by(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Pt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Pt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){z(()=>{if(!this.stateful)throw new Yn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>bt([n,o])):this.states_=[bt([n,this.cell.stateSize])];else if(e==null)Me(this.states_),this.keptStates!=null&&(Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>bt([n,o])):this.states_[0]=bt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Me(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!b.arraysEqual(s.shape,i))throw new O(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Ut(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=jS(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new Pt({shape:u.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof Tn){let u=[e].concat(a),l=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=l;let c=super.apply(u,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return z(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Oe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new O(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},u=XS((f,h)=>{let g=this.cell.call([f].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=u[0],m=u[1],c=u[2];this.stateful&&this.resetStates(c,o);let d=this.returnSequences?m:l;return this.returnState?[d].concat(c):d})}getInitialState(e){return z(()=>{let t=bt(e.shape);return t=de(t,[1,2]),t=yu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?fy(t,[1,n]):t):this.cell.stateSize>1?[fy(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===YS.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=xn(o,n);return new e(Object.assign(t,{cell:s}))}},zs=YS;zs.className="RNN";re.registerClass(zs);var lp=class extends Ke{},vc=class extends lp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=Ga(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=St(e.kernelRegularizer),this.recurrentRegularizer=St(e.recurrentRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=fl([1,$a([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=fl([1,$a([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return z(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tu({ones:()=>Dr(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tu({ones:()=>Dr(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=Bs(L(e,a),this.kernel.read()):s=Bs(e,this.kernel.read()),this.bias!=null&&(s=bn(s,this.bias.read())),i!=null&&(n=L(n,i));let p=Q(s,Bs(n,this.recurrentKernel.read()));return this.activation!=null&&(p=this.activation.apply(p)),[p,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:za(this.activation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};vc.className="SimpleRNNCell";re.registerClass(vc);var jf=class extends zs{constructor(e){e.cell=new vc(e);super(e)}call(e,t){return z(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};jf.className="SimpleRNN";re.registerClass(jf);var Ac=class extends lp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,nr(this.units,"units"),this.activation=Ga(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ga(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=St(e.kernelRegularizer),this.recurrentRegularizer=St(e.recurrentRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=fl([1,$a([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=fl([1,$a([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return z(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tu({ones:()=>Dr(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tu({ones:()=>Dr(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,p,u;0<this.dropout&&this.dropout<1&&(e=L(e,s[0]));let l=Bs(e,this.kernel.read());this.useBias&&(l=bn(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,a[0]));let m=this.recurrentKernel.read(),[c,d]=kr(m,[2*this.units,this.units],m.rank-1),f=Bs(o,c),[h,g,y]=kr(l,3,l.rank-1),[T,x]=kr(f,2,f.rank-1);i=this.recurrentActivation.apply(Q(h,T)),p=this.recurrentActivation.apply(Q(g,x));let I=Bs(L(p,o),d);u=this.activation.apply(Q(y,I));let k=Q(L(i,o),L(Q(1,Je(i)),u));return[k,k]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:za(this.activation),recurrentActivation:za(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Ac.className="GRUCell";re.registerClass(Ac);var Xf=class extends zs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ac(e);super(e)}call(e,t){return z(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Xf.className="GRU";re.registerClass(Xf);var pp=class extends lp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=Ga(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ga(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=St(e.kernelRegularizer),this.recurrentRegularizer=St(e.recurrentRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=fl([1,$a([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=fl([1,$a([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var o;e=nt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;n=new(o=class extends _n{apply(p,u){let l=s.apply([a]),m=new bl().apply([a]),c=s.apply([a*2]);return pS(pS(l,m),c)}},o.className="CustomInit",o)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return z(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tu({ones:()=>Dr(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tu({ones:()=>Dr(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,p,u,l,m;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let c=Bs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,i[0])),c=Q(c,Bs(o,this.recurrentKernel.read())),this.useBias&&(c=bn(c,this.bias.read()));let[d,f,h,g]=kr(c,4,c.rank-1);p=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(f),l=Q(L(u,s),L(p,this.activation.apply(h))),m=this.recurrentActivation.apply(g);let y=L(m,this.activation.apply(l));return[y,y,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:za(this.activation),recurrentActivation:za(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};pp.className="LSTMCell";re.registerClass(pp);var Yf=class extends zs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new pp(e);super(e)}call(e,t){return z(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Yf.className="LSTM";re.registerClass(Yf);var wc=class extends lp{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return z(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let p=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=p.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){by(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{_a(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(xn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Tf(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}hc(t)}};wc.className="StackedRNNCells";re.registerClass(wc);function Tu(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(e(),t):gy(e(),t),i=()=>op(a,e,n);return!o||o<=1?Ut(i().clone()):Array(o).fill(void 0).map(i).map(u=>Ut(u.clone()))}var QS=class extends zs{constructor(e){if(e.unroll)throw new Pe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pe("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Pt({ndim:5})]}call(e,t){return z(()=>{if(this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new O("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return z(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=bt(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){z(()=>{if(!this.stateful)throw new Yn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(s)):this.states_=[bt(s)];else if(e==null)Me(this.states_),this.keptStates!=null&&(Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(s)):this.states_[0]=bt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Me(this.states_);for(let i=0;i<this.states_.length;++i){let p=e[i],u=s;if(!b.arraysEqual(p.shape,u))throw new O(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${p.shape}`);this.states_[i]=p}}this.states_=this.states_.map(i=>Ut(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,p=t==="channelsFirst",u=e[p?3:2],l=e[p?4:3],m=$n(u,o[0],s,a[0],i[0]),c=$n(l,o[1],s,a[1],i[1]);return[...e.slice(0,2),...p?[n,m,c]:[m,c,n]]}};QS.className="ConvRNN2D";var Nc=class extends pp{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super({...e,units:t});this.filters=t,nr(this.filters,"filters"),this.kernelSize=up(n,2,"kernelSize"),this.kernelSize.forEach(p=>nr(p,"kernelSize")),this.strides=up(o||1,2,"strides"),this.strides.forEach(p=>nr(p,"strides")),this.padding=s||"valid",hn(this.padding),this.dataFormat=a||"channelsLast",Wt(this.dataFormat),this.dilationRate=up(i||1,2,"dilationRate"),this.dilationRate.forEach(p=>nr(p,"dilationRate"))}build(e){var i;e=nt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let p;if(this.unitForgetBias){let u=this.biasInitializer,l=this.filters;p=new(i=class extends _n{apply(c,d){let f=u.apply([l]),h=lr([l]),g=u.apply([l*2]);return sc([f,h,g])}},i.className="CustomInit",i)}else p=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,p,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return z(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tu({ones:()=>Dr(o),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let p=this.dropoutMask,u=(se,ae,ce)=>!ae||!ae[ce]?se:L(ae[ce],se),l=u(o,p,0),m=u(o,p,1),c=u(o,p,2),d=u(o,p,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tu({ones:()=>Dr(s),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let f=this.recurrentDropoutMask,h=u(s,f,0),g=u(s,f,1),y=u(s,f,2),T=u(s,f,3),x=3,[I,k,w,M]=kr(this.kernel.read(),i,x),[F,E,$,G]=this.useBias?kr(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,I,F,this.padding),m=this.inputConv(m,k,E,this.padding),c=this.inputConv(c,w,$,this.padding),d=this.inputConv(d,M,G,this.padding);let[W,V,q,j]=kr(this.recurrentKernel.read(),i,x);h=this.recurrentConv(h,W),g=this.recurrentConv(g,V),y=this.recurrentConv(y,q),T=this.recurrentConv(T,j);let Y=this.recurrentActivation.apply(Q(l,h)),te=this.recurrentActivation.apply(Q(m,g)),H=Q(L(te,a),L(Y,this.activation.apply(Q(c,y)))),oe=L(this.recurrentActivation.apply(Q(d,T)),this.activation.apply(H));return[oe,oe,H]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=jn(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?bn(s,n,this.dataFormat):s}recurrentConv(e,t){return jn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Nc.className="ConvLSTM2DCell";re.registerClass(Nc);var Qf=class extends QS{constructor(e){let t=new Nc(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Qf.className="ConvLSTM2D";re.registerClass(Qf);var Dc=class extends Ke{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return op(()=>gy(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Dc.className="Dropout";re.registerClass(Dc);var Zf=class extends Dc{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Zf.className="SpatialDropout1D";re.registerClass(Zf);var Jf=class extends Ke{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,nr(this.units,"units"),this.activation=Ga(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jt(e.kernelConstraint),this.biasConstraint=jt(e.biasConstraint),this.kernelRegularizer=St(e.kernelRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.activityRegularizer=St(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=nt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=nt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=uy(this.activation.getClassName()),s;return o!=null?s=Bs(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=Bs(n,this.kernel.read()),this.bias!=null&&(s=bn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:za(this.activation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),biasConstraint:qt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Jf.className="Dense";re.registerClass(Jf);var eh=class extends Ke{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=nt(e);for(let t of e.slice(1))if(t==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],$s(e,1)]}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=Ue(n,o)}return sM(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};eh.className="Flatten";re.registerClass(eh);var th=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.activation=Ga(e.activation)}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:za(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};th.className="Activation";re.registerClass(th);var rh=class extends Ke{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return z(()=>(e=Oe(e),nM(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};rh.className="RepeatVector";re.registerClass(rh);var nh=class extends Ke{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let p=0;p<o.length;++p){let u=o[p];if(this.isUnknown(u))if(a===null)a=p;else throw new O("Can only specifiy one unknown dimension.");else s*=u}let i=$s(e);if(a!==null){if(s===0||i%s!==0)throw new O(n);o[a]=i/s}else if(i!==s)throw new O(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return _(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};nh.className="Reshape";re.registerClass(nh);var oh=class extends Ke{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Zr(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Pt({ndim:this.dims.length+1})]}computeOutputShape(e){e=nt(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return Ue(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};oh.className="Permute";re.registerClass(oh);var sh=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),o=-1;return Hm(di(n,this.maskValue),o)}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=-1,s=!0,a=Hm(di(n,this.maskValue),o,s);return L(n,ee(a,n.dtype))})}};sh.className="Masking";re.registerClass(sh);var ah=class extends Ke{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(kt(e.inputLength))}this.inputDim=e.inputDim,nr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,nr(this.outputDim,"outputDim"),this.embeddingsInitializer=xt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=St(e.embeddingsRegularizer),this.activityRegularizer=St(e.activityRegularizer),this.embeddingsConstraint=jt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return z(()=>this.maskZero?(e=Oe(e),di(e,Ne(e))):null)}computeOutputShape(e){if(e=nt(e),this.inputLength==null)return[...e,this.outputDim];let t=kt(this.inputLength);if(t.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);n.dtype!=="int32"&&(n=hl(n,"int32"));let o=hy(this.embeddings.read(),_(n,[n.size]));return _(o,nt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Dt(this.embeddingsInitializer),embeddingsRegularizer:ht(this.embeddingsRegularizer),activityRegularizer:ht(this.activityRegularizer),embeddingsConstraint:qt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};ah.className="Embedding";re.registerClass(ah);var mp=class extends Ke{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Pe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[nt(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=_s(t),t.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&_s(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return z(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=$a(o);for(let a of e){let i=a.rank;for(let p=0;p<s-i;++p)a=yu(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let p of e){let u=p.rank;if(u==null){let l=p.shape,m=l[0],c=l.slice(1).concat([m]),d=_(p,[m].concat($s(l.slice(1))));d=Ue(d,[1,0]),d=_(d,c),n.push(d),s=!0}else if(u>1){let l=Zr(1,u).concat([0]);n.push(Ue(p,l)),s=!0}else n.push(p)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let p=a.shape,u=p.length,l=p[u-1],m=[l].concat(p.slice(0,p.length-1));a=_(Ue(_(a,[-1,l]),[1,0]),m)}else if(i>1){let p=[i-1].concat(Zr(0,i-1));a=Ue(a,p)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=_s(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return z(()=>{if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(t.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:Nr(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=Ur(n,t[o]);return n})}},uh=class extends mp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Q(t,e[n]);return t})}};uh.className="Add";re.registerClass(uh);var ph=class extends mp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};ph.className="Multiply";re.registerClass(ph);var lh=class extends mp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Q(t,e[n]);return L(1/e.length,t)})}};lh.className="Average";re.registerClass(lh);var mh=class extends mp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Xn(t,e[n]);return t})}};mh.className="Maximum";re.registerClass(mh);var ch=class extends mp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=cu(t,e[n]);return t})}};ch.className="Minimum";re.registerClass(ch);var dh=class extends mp{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(b.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return z(()=>sc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new O(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return z(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(ee(Dr(e[a]),"bool")):t[a].rank<e[a].rank?o.push(Nr(t[a],-1)):o.push(t[a]);let s=pt(o,this.axis);return Ed(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};dh.className="Concatenate";re.registerClass(dh);function ih(r,e){for(;r<0;)r+=e;return r}function wJ(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Pe("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Pe("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return z(()=>{let a;if(n>o){a=n-o;let p=[];for(let u=0;u<a;++u)p.push(1);e=_(e,e.shape.concat(p))}else if(o>n){a=o-n;let p=[];for(let u=0;u<a;++u)p.push(1);r=_(r,r.shape.concat(p))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=de(L(r,e),s[0]):i=de(L(Ue(r,[1,0]),e),s[1]);else{let p=s[0]!==r.shape.length-1,u=s[1]===e.shape.length-1;i=He(r,e,p,u)}if(a>0){let p;n>o?p=n+o-3:p=n-1;let u=[];for(let l=p;l<p+a;++l)u.push(l);i=dn(i,u)}return i.shape.length===1&&(i=Nr(i,1)),i})}var fh=class extends mp{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new O(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>ih(s,e[a].shape.length)):o=[ih(this.axes,t.shape.length),ih(this.axes,n.shape.length)],this.normalize&&(t=vf(t,o[0]),n=vf(n,o[1])),wJ(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[ih(this.axes,e.length),ih(this.axes,t.length)],n}computeOutputShape(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};fh.className="Dot";re.registerClass(fh);var hh=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);return op(()=>Q(ac(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};hh.className="GaussianNoise";re.registerClass(hh);var gh=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?op(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return L(n,ac(n.shape,1,s))},()=>n,t.training||!1):n})}};gh.className="GaussianDropout";re.registerClass(gh);var bh=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return z(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return op(()=>{let s=Oe(e),a=1.6732632423543772,i=1.0507009873554805,p=-a*i,u=Qo(Ea(n),this.rate);u=hl(u,"float32");let l=((1-this.rate)*(1+this.rate*p**2))**-.5,m=-l*p*this.rate,c=Q(L(s,u),L(Q(u,-1),p));return Q(L(c,l),m)},()=>Oe(e),t.training||!1)}return e})}};bh.className="AlphaDropout";re.registerClass(bh);function yh(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=nk(r,e,t,n,o,s);else if(r.rank===3)a=ok(r,e,t,n,o,s);else if(r.rank===4)a=sk(r,e,t,n,o,s);else throw new Pe(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function NJ(r,e,t,n,o=.001){return z(()=>{let s=Jm(r,n),a=s.mean,i=s.variance;return[yh(r,a,i,t,e,o),a,i]})}function DJ(r,e,t,n,o=.001){return z(()=>{let s=Jm(r,n),a=s.mean,i=s.variance,p=[];for(let f of Zr(0,r.rank))n.indexOf(f)!==-1?p.push(1):p.push(r.shape[f]);let u=_(a,p),l=_(i,p),m=e==null?null:_(e,p),c=t==null?null:_(t,p);return[yh(r,u,l,c,m,o),a,i]})}function PJ(r,e,t,n,o=.001){return b.arraysEqual(n.slice().sort(),Zr(0,r.rank-1))?NJ(r,e,t,n,o):DJ(r,e,t,n,o)}var Th=class extends Ke{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.movingMeanInitializer=xt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=xt(e.movingVarianceInitializer||"ones"),this.betaConstraint=jt(e.betaConstraint),this.gammaConstraint=jt(e.gammaConstraint),this.betaRegularizer=St(e.betaRegularizer),this.gammaRegularizer=St(e.gammaRegularizer)}build(e){e=nt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new O(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Pt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return z(()=>{let n=t.training==null?!1:t.training,o=Oe(e),s=o.shape,a=s.length,i=Zr(0,a),p=this.axis>=0?this.axis:this.axis+a;i.splice(p,1);let u=Rs(1,a);u[p]=s[p];let l=i.slice();l.sort();let m=!b.arraysEqual(l,Zr(0,a).slice(0,a-1)),c=()=>{if(m){let T=_(this.movingMean.read(),u),x=_(this.movingVariance.read(),u),I=this.center?_(this.beta.read(),u):null,k=this.scale?_(this.gamma.read(),u):null;return yh(o,T,x,I,k,this.epsilon)}else return yh(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return c();let[d,f,h]=PJ(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(T,x,I)=>{z(()=>{let k=1-I,w=T.read(),M=L(pe(w,x),k);T.write(pe(w,M))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,h,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dt(this.betaInitializer),gammaInitializer:Dt(this.gammaInitializer),movingMeanInitializer:Dt(this.movingMeanInitializer),movingVarianceInitializer:Dt(this.movingVarianceInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer),betaConstraint:qt(this.betaConstraint),gammaConstraint:qt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Th.className="BatchNormalization";re.registerClass(Th);var xh=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.betaRegularizer=St(e.betaRegularizer),this.gammaRegularizer=St(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=nt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==_s(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),o=n.shape,s=o.length;return z(()=>{let{mean:i,variance:p}=Jm(n,this.axis,!0),u=Rs(1,s);for(let h of this.axis)u[h]=o[h];let l=h=>h!=null&&h.shape.length!==s?_(h,u):h,m=this.scale?l(this.gamma.read()):null,c=this.center?l(this.beta.read()):null,d=[],f=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(d.push(o[h]),f.push(1)):(d.push(1),f.push(o[h]));return i=Gr(i,d),p=Gr(p,d),m!=null&&(m=Gr(m,f)),c!=null&&(c=Gr(c,f)),yh(n,i,p,c,m,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dt(this.betaInitializer),gammaInitializer:Dt(this.gammaInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};xh.className="LayerNormalization";re.registerClass(xh);function MJ(r,e,t){return z(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=gn()),t!=="channelsLast"&&t!=="channelsFirst")throw new O(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],Ln(r,n)})}var Ih=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?gn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=nt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return z(()=>MJ(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Ih.className="ZeroPadding2D";re.registerClass(Ih);function Oy(r,e,t,n,o,s){return z(()=>{Wt(o),sS(s),hn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=gn()),s==null&&(s="max"),r=Hf(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Xp(r,e,t,i):a=Up(r,e,t,i),o==="channelsFirst"&&(a=Ue(a,[0,3,1,2])),a})}function WE(r,e,t,n,o,s){return z(()=>{Wt(o),sS(s),hn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=gn()),s==null&&(s="max"),r=KS(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Vd(r,e,t,i):a=Rd(r,e,t,i),o==="channelsFirst"&&(a=Ue(a,[0,4,1,2,3])),a})}var ZS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(nr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,hn(this.padding),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){e=nt(e);let t=$n(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return z(()=>{this.invokeCallHook(e,t),e=yu(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return dn(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Ch=class extends ZS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),Oy(e,t,n,o,s,"max")}};Ch.className="MaxPooling1D";re.registerClass(Ch);var kh=class extends ZS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),Oy(e,t,n,o,s,"avg")}};kh.className="AveragePooling1D";re.registerClass(kh);var JS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),hn(this.padding),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=$n(t,this.poolSize[0],this.padding,this.strides[0]),n=$n(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Sh=class extends JS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),Oy(e,t,n,o,s,"max")}};Sh.className="MaxPooling2D";re.registerClass(Sh);var vh=class extends JS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),Oy(e,t,n,o,s,"avg")}};vh.className="AveragePooling2D";re.registerClass(vh);var ev=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),hn(this.padding),this.inputSpec=[new Pt({ndim:5})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=$n(t,this.poolSize[0],this.padding,this.strides[0]),n=$n(n,this.poolSize[1],this.padding,this.strides[1]),o=$n(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ah=class extends ev{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),WE(e,t,n,o,s,"max")}};Ah.className="MaxPooling3D";re.registerClass(Ah);var wh=class extends ev{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),WE(e,t,n,o,s,"avg")}};wh.className="AveragePooling3D";re.registerClass(wh);var tv=class extends Ke{constructor(e){super(e);this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pe}},Nh=class extends tv{constructor(e){super(e||{})}call(e,t){return z(()=>{let n=Oe(e);return Lt(n,1)})}};Nh.className="GlobalAveragePooling1D";re.registerClass(Nh);var Dh=class extends tv{constructor(e){super(e||{})}call(e,t){return z(()=>{let n=Oe(e);return Xr(n,1)})}};Dh.className="GlobalMaxPooling1D";re.registerClass(Dh);var rv=class extends Ke{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ph=class extends rv{call(e,t){return z(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Lt(n,[1,2]):Lt(n,[2,3])})}};Ph.className="GlobalAveragePooling2D";re.registerClass(Ph);var Mh=class extends rv{call(e,t){return z(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Xr(n,[1,2]):Xr(n,[2,3])})}};Mh.className="GlobalMaxPooling2D";re.registerClass(Mh);var nv=class extends Ke{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=xn(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},Fh=class extends nv{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=nt(e),e.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=nt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return z(()=>(e=Oe(e),XS((a,i)=>[Oe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Fh.className="TimeDistributed";re.registerClass(Fh);function FJ(r){bi(ZP,"BidirectionalMergeMode",r)}var EJ="concat",Eh=class extends nv{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=xn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?EJ:e.mergeMode,FJ(this.mergeMode),e.weights)throw new Pe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Pr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=jS(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let l=n.map(m=>new Pt({shape:m.shape}));this.forwardLayer.stateSpec=l.slice(0,u/2),this.backwardLayer.stateSpec=l.slice(u/2),i.push(...l)}if(o!=null)throw new Pe("Support for constants in Bidirectional layers is not implemented yet.");let p=a[0]instanceof Tn;for(let u of a)if(u instanceof Tn!==p)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(p){let u=[e].concat(a),l=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=l;let c=super.apply(u,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return z(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let p=n.slice(0,n.length/2),u=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:p})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=gr(s,1));let i;return this.mergeMode==="concat"?i=sc([o,s]):this.mergeMode==="sum"?i=Q(o,s):this.mergeMode==="ave"?i=L(.5,Q(o,s)):this.mergeMode==="mul"?i=L(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){_a(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),_a(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=xn(t.layer);if(delete t.layer,t.numConstants!=null)throw new Pe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};Eh.className="Bidirectional";re.registerClass(Eh);function RJ(r){return new yi(r)}function LJ(r){return new $f(r)}function _J(r){return new Rf(r)}function $J(r){return new Lf(r)}function BJ(r){return new _f(r)}function OJ(r){return new Of(r)}function zJ(r){return new Bf(r)}function GJ(r){return new Wf(r)}function UJ(r){return new Cc(r)}function WJ(r){return new zf(r)}function KJ(r){return new kc(r)}function VJ(r){return new Gf(r)}function HJ(r){return new Uf(r)}function qJ(r){return new Kf(r)}function jJ(r){return new Vf(r)}function XJ(r){return new qf(r)}function YJ(r){return new th(r)}function QJ(r){return new Jf(r)}function ZJ(r){return new Dc(r)}function JJ(r){return new Zf(r)}function e9(r){return new eh(r)}function t9(r){return new rh(r)}function r9(r){return new nh(r)}function n9(r){return new oh(r)}function o9(r){return new ah(r)}function s9(r){return new uh(r)}function a9(r){return new lh(r)}function i9(r){return new dh(r)}function u9(r){return new mh(r)}function p9(r){return new ch(r)}function l9(r){return new ph(r)}function m9(r){return new fh(r)}function c9(r){return new Th(r)}function d9(r){return new xh(r)}function f9(r){return new Ih(r)}function ov(r){return new kh(r)}function h9(r){return ov(r)}function g9(r){return ov(r)}function sv(r){return new vh(r)}function b9(r){return sv(r)}function y9(r){return sv(r)}function av(r){return new wh(r)}function T9(r){return av(r)}function x9(r){return av(r)}function I9(r){return new Nh(r)}function C9(r){return new Ph(r)}function KE(r){return new Dh(r)}function VE(r){return new Mh(r)}function HE(r){return new Ch(r)}function qE(r){return new Sh(r)}function k9(r){return new Ah(r)}function S9(r){return new Xf(r)}function v9(r){return new Ac(r)}function A9(r){return new Yf(r)}function w9(r){return new pp(r)}function N9(r){return new jf(r)}function D9(r){return new vc(r)}function P9(r){return new Qf(r)}function M9(r){return new Nc(r)}function F9(r){return new zs(r)}function E9(r){return new wc(r)}function R9(r){return new Eh(r)}function L9(r){return new Fh(r)}var _9=KE,$9=VE,B9=HE,O9=qE;function z9(r){return new hh(r)}function G9(r){return new gh(r)}function U9(r){return new bh(r)}function W9(r){return new sh(r)}var XE={};Xe(XE,{MAPE:()=>eee,MSE:()=>nee,binaryAccuracy:()=>K9,binaryCrossentropy:()=>V9,categoricalAccuracy:()=>q9,categoricalCrossentropy:()=>j9,cosineProximity:()=>Q9,mape:()=>tee,meanAbsoluteError:()=>Z9,meanAbsolutePercentageError:()=>J9,meanSquaredError:()=>ree,mse:()=>oee,precision:()=>X9,recall:()=>Y9,sparseCategoricalAccuracy:()=>H9});function K9(r,e){return Nf(r,e)}function V9(r,e){return Dy(r,e)}function H9(r,e){return Py(r,e)}function q9(r,e){return Df(r,e)}function j9(r,e){return Pf(r,e)}function X9(r,e){return TS(r,e)}function Y9(r,e){return xE(r,e)}function Q9(r,e){return wf(r,e)}function Z9(r,e){return bc(r,e)}function J9(r,e){return ip(r,e)}function eee(r,e){return ip(r,e)}function tee(r,e){return ip(r,e)}function ree(r,e){return xi(r,e)}function nee(r,e){return xi(r,e)}function oee(r,e){return xi(r,e)}var YE={};Xe(YE,{modelFromJSON:()=>_E});var QE={};Xe(QE,{l1:()=>aee,l1l2:()=>see,l2:()=>iee});function see(r){return new Il(r)}function aee(r){return zE(r)}function iee(r){return GE(r)}var iv=class extends ap{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof ts))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function zy(r,e){return r<e}function ZE(r,e){return r>e}var uv=class extends iv{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Pe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=zy:this.mode==="max"?this.monitorFunc=ZE:this.monitor.indexOf("acc")!==-1?this.monitorFunc=ZE:this.monitorFunc=zy,this.monitorFunc===zy&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===zy?1/0:-1/0}async onEpochEnd(e,t){await Ti(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function uee(r){return new uv(r)}var pee={earlyStopping:uee};var lee=B();lee.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var pv=(J=>(J[J.DT_INVALID=0]="DT_INVALID",J[J.DT_FLOAT=1]="DT_FLOAT",J[J.DT_DOUBLE=2]="DT_DOUBLE",J[J.DT_INT32=3]="DT_INT32",J[J.DT_UINT8=4]="DT_UINT8",J[J.DT_INT16=5]="DT_INT16",J[J.DT_INT8=6]="DT_INT8",J[J.DT_STRING=7]="DT_STRING",J[J.DT_COMPLEX64=8]="DT_COMPLEX64",J[J.DT_INT64=9]="DT_INT64",J[J.DT_BOOL=10]="DT_BOOL",J[J.DT_QINT8=11]="DT_QINT8",J[J.DT_QUINT8=12]="DT_QUINT8",J[J.DT_QINT32=13]="DT_QINT32",J[J.DT_BFLOAT16=14]="DT_BFLOAT16",J[J.DT_QINT16=15]="DT_QINT16",J[J.DT_QUINT16=16]="DT_QUINT16",J[J.DT_UINT16=17]="DT_UINT16",J[J.DT_COMPLEX128=18]="DT_COMPLEX128",J[J.DT_HALF=19]="DT_HALF",J[J.DT_RESOURCE=20]="DT_RESOURCE",J[J.DT_VARIANT=21]="DT_VARIANT",J[J.DT_UINT32=22]="DT_UINT32",J[J.DT_UINT64=23]="DT_UINT64",J[J.DT_FLOAT_REF=101]="DT_FLOAT_REF",J[J.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",J[J.DT_INT32_REF=103]="DT_INT32_REF",J[J.DT_UINT8_REF=104]="DT_UINT8_REF",J[J.DT_INT16_REF=105]="DT_INT16_REF",J[J.DT_INT8_REF=106]="DT_INT8_REF",J[J.DT_STRING_REF=107]="DT_STRING_REF",J[J.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",J[J.DT_INT64_REF=109]="DT_INT64_REF",J[J.DT_BOOL_REF=110]="DT_BOOL_REF",J[J.DT_QINT8_REF=111]="DT_QINT8_REF",J[J.DT_QUINT8_REF=112]="DT_QUINT8_REF",J[J.DT_QINT32_REF=113]="DT_QINT32_REF",J[J.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",J[J.DT_QINT16_REF=115]="DT_QINT16_REF",J[J.DT_QUINT16_REF=116]="DT_QUINT16_REF",J[J.DT_UINT16_REF=117]="DT_UINT16_REF",J[J.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",J[J.DT_HALF_REF=119]="DT_HALF_REF",J[J.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",J[J.DT_VARIANT_REF=121]="DT_VARIANT_REF",J[J.DT_UINT32_REF=122]="DT_UINT32_REF",J[J.DT_UINT64_REF=123]="DT_UINT64_REF",J))(pv||{}),mee;(e=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=e.CheckpointFormatVersion||={})})(mee||={});var lv={};function dee(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};lv[r]=t}function Gy(r){return lv[r]}function fee(r){delete lv[r]}function v(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,p=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return Sr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(i,p).map(c=>Sr(c,t,n,o));let u=Sr(e.inputNames.slice(i)[0],t,n,o),l=u.dataSync();return s.type==="number"?l[0]:b.toNestedArray(u.shape,l)}let a=e.attrParams[r];return a&&a.value}function Sr(r,e,t,n){let[o,s]=Cn(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[Uy(o,i)]);return a!==void 0?e[Uy(o,a)][s]:void 0}function JE(r,e,t){return e[Uy(r,t.currentContextId)]}function Gs(r,e){let[t,n,o]=Cn(r);return[Uy(t,e&&e.currentContextId),n,o]}function Uy(r,e){return e?`${r}-${e}`:r}function Cn(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],n=e.length===3?e[1]:void 0,o=Number(e[e.length-1]);return[t,o,n]}function Rh(r,e,t){let n=v("pad",r,e,t);if(n==="explicit"){n=v("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Wa(r){return r.kept?r:Mn(r)}var mv={};Xe(mv,{json:()=>hee});var hee=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var cv={};Xe(cv,{json:()=>gee});var gee=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var dv={};Xe(dv,{json:()=>bee});var bee=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var fv={};Xe(fv,{json:()=>yee});var yee=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var hv={};Xe(hv,{json:()=>Tee});var Tee=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var gv={};Xe(gv,{json:()=>xee});var xee=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var bv={};Xe(bv,{json:()=>Iee});var Iee=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var yv={};Xe(yv,{json:()=>Cee});var Cee=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var Tv={};Xe(Tv,{json:()=>kee});var kee=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var xv={};Xe(xv,{json:()=>See});var See=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var Iv={};Xe(Iv,{json:()=>vee});var vee=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Cv={};Xe(Cv,{json:()=>Aee});var Aee=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var kv={};Xe(kv,{json:()=>wee});var wee=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var Sv={};Xe(Sv,{json:()=>Nee});var Nee=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var vv={};Xe(vv,{json:()=>Dee});var Dee=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var Av={};Xe(Av,{json:()=>Pee});var Pee=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var wv={};Xe(wv,{json:()=>Mee});var Mee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var Nv={};Xe(Nv,{json:()=>Fee});var Fee=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var Dv={};Xe(Dv,{json:()=>Eee});var Eee=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Jy=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[mv,cv,dv,fv,hv,gv,bv,yv,Tv,xv,Iv,Cv,kv,Sv,vv,Av,wv,Nv,Dv],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),p=[],u=[],l={},m={};t!=null&&(l=this.mapSignatureEntries(t.inputs),m=this.mapSignatureEntries(t.outputs));let c=Object.keys(i);c.forEach(h=>{let g=i[h];g.inputNames.forEach((y,T)=>{let[x,,I]=Gs(y),k=i[x];if(k.outputs!=null){let w=k.outputs.indexOf(I);if(w!==-1){let M=`${x}:${w}`;g.inputNames[T]=M}}g.inputs.push(k),k.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=i[h];g.children.length===0&&u.push(g)}):Object.keys(m).forEach(h=>{let[g]=Gs(h),y=i[g];y!=null&&(y.signatureKey=m[h],u.push(y))}),Object.keys(l).length>0?Object.keys(l).forEach(h=>{let[g]=Gs(h),y=i[g];y&&(y.signatureKey=l[h],p.push(y))}):p=o;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:i,inputs:p,outputs:u,weights:s,placeholders:o,signature:t,functions:d};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=Gy(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=Wy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Wy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=Yy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Yy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=Vy(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=Vy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=Xy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Xy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=Ky(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Ky(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=Zy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Zy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=jy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=jy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=Qy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Qy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=Hy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Hy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=qy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=qy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=eR(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=eR(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let a=[],i=[];e.signature.inputArg.forEach(m=>{let[c]=Gs(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Pv(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,a.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=Gs(d),y=s[h];if(y.outputs!=null){let T=y.outputs.indexOf(g);if(T!==-1){let x=`${h}:${T}`;c.inputNames[f]=x}}c.inputs.push(y),y.children.push(c)})});let u=e.ret;e.signature.outputArg.forEach(m=>{let[c,d]=Gs(u[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,i.push(f))});let l=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function Ree(r){let e=B().global;if(typeof e.atob<"u")return e.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function tR(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):Ree(r);return e?t:t.toLowerCase()}function Wy(r,e,t,n=!1){let o=r[e];return o!=null?tR(o.s,n):t}function Ky(r,e,t){let n=r[e];return n?n.b:t}function Vy(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function Pv(r){switch(typeof r=="string"&&(r=pv[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function eR(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function Hy(r,e,t){let n=r[e];return n&&n.type?Pv(n.type):t}function qy(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>Pv(o)):t}function rR(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function jy(r,e,t){let n=r[e];return n&&n.shape?rR(n.shape):t}function Xy(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function Yy(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>tR(s,n)):t}function Qy(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>rR(o)):t}function Zy(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var Mv=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=[];this.attrs={};this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return Sr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Sr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Vy(this.node.rawAttrs,e,t);if(n.s!=null)return Wy(this.node.rawAttrs,e,t);if(n.b!=null)return Ky(this.node.rawAttrs,e,t);if(n.shape!=null)return jy(this.node.rawAttrs,e,t);if(n.type!=null)return Hy(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Xy(this.node.rawAttrs,e,t);if(n.list.s!=null)return Yy(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Qy(this.node.rawAttrs,e,t);if(n.list.b!=null)return Zy(this.node.rawAttrs,e,t);if(n.list.type!=null)return qy(this.node.rawAttrs,e,t)}return t}};var nR=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[Q(v("a",r,e,t),v("b",r,e,t))];case"AddN":return[qC(v("tensors",r,e,t))];case"FloorMod":case"Mod":return[Fk(v("a",r,e,t),v("b",r,e,t))];case"Mul":return[L(v("a",r,e,t),v("b",r,e,t))];case"RealDiv":case"Div":return[le(v("a",r,e,t),v("b",r,e,t))];case"DivNoNan":return[gk(v("a",r,e,t),v("b",r,e,t))];case"FloorDiv":return[Fd(v("a",r,e,t),v("b",r,e,t))];case"Sub":return[pe(v("a",r,e,t),v("b",r,e,t))];case"Minimum":return[cu(v("a",r,e,t),v("b",r,e,t))];case"Maximum":return[Xn(v("a",r,e,t),v("b",r,e,t))];case"Pow":return[Rn(v("a",r,e,t),v("b",r,e,t))];case"SquaredDifference":return[nf(v("a",r,e,t),v("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var oR=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[$t(v("x",r,e,t))];case"Acos":return[VC(v("x",r,e,t))];case"Acosh":return[HC(v("x",r,e,t))];case"Asin":return[XC(v("x",r,e,t))];case"Asinh":return[YC(v("x",r,e,t))];case"Atan":return[QC(v("x",r,e,t))];case"Atan2":return[ZC(v("x",r,e,t),v("y",r,e,t))];case"Atanh":return[JC(v("x",r,e,t))];case"Ceil":return[ik(v("x",r,e,t))];case"Complex":return[un(v("real",r,e,t),v("imag",r,e,t))];case"Cos":return[Vp(v("x",r,e,t))];case"Cosh":return[Od(v("x",r,e,t))];case"Elu":return[lu(v("x",r,e,t))];case"Erf":return[yk(v("x",r,e,t))];case"Exp":return[pr(v("x",r,e,t))];case"Expm1":return[Sk(v("x",r,e,t))];case"Floor":return[mu(v("x",r,e,t))];case"Log":return[Lr(v("x",r,e,t))];case"Log1p":return[qp(v("x",r,e,t))];case"Imag":return[su(v("x",r,e,t))];case"Neg":return[Je(v("x",r,e,t))];case"Reciprocal":return[Uk(v("x",r,e,t))];case"Real":return[pi(v("x",r,e,t))];case"Relu":return[Wr(v("x",r,e,t))];case"Round":return[Xd(v("x",r,e,t))];case"Selu":return[Qd(v("x",r,e,t))];case"Sigmoid":return[mn(v("x",r,e,t))];case"Sin":return[Zd(v("x",r,e,t))];case"Sign":return[Vk(v("x",r,e,t))];case"Sinh":return[Jd(v("x",r,e,t))];case"Softplus":return[ci(v("x",r,e,t))];case"Sqrt":return[Rt(v("x",r,e,t))];case"Square":return[je(v("x",r,e,t))];case"Tanh":return[uu(v("x",r,e,t))];case"Tan":return[qk(v("x",r,e,t))];case"ClipByValue":return[Rr(v("x",r,e,t),v("clipValueMin",r,e,t),v("clipValueMax",r,e,t))];case"Relu6":return[jd(v("x",r,e,t))];case"Rsqrt":return[Yd(Sr(r.inputNames[0],e,t))];case"Prod":return[Hd(v("x",r,e,t),v("axes",r,e,t))];case"LeakyRelu":return[Hp(v("x",r,e,t),v("alpha",r,e,t))];case"Prelu":return[Qp(v("x",r,e,t),v("alpha",r,e,t))];case"IsNan":return[vk(Sr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Qn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){b.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];b.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function sR(r){return!(typeof r=="number"||r.some(e=>e<0))}function Pc(r,e,t){let n=eT(r,t),o=!sR(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=eT(s.shape,n)}),!sR(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function eT(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var Fv=class{constructor(e,t,n,o,s,a,i){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=me(0),Ut(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Qn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Ut(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Fr([],[0].concat(this.elementShape));let n=this.readMany(e);return Qn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),mr(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Fr([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Qn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),pt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,_r(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(p=>(n+=p,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];z(()=>{t=_(t,[1,n,s]);for(let p=0;p<e.length;++p){let u=p===0?0:o[p-1],l=[0,u,0],m=[1,e[p],s];a[p]=_(Ge(t,l,m),this.elementShape)}return a});let i=[];for(let p=0;p<e.length;p++)i[p]=p;this.writeMany(i,a)}};var cp=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Qn(t,s.shape,"TensorList shape mismatch: "),Ut(s)}),this.idTensor=me(0),this.maxNumElements=o,Ut(this.idTensor)}get id(){return this.idTensor.id}copy(){return new cp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Qn(e,this.elementShape,"TensorList shape mismatch: ");let o=Pc(this.elementShape,this.tensors,e);return z(()=>{let s=this.tensors.map(a=>_(a,o));return mr(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Pc(this.elementShape,this.tensors,e),o=this.tensors.pop();return Qn(o.shape,e,"TensorList shape mismatch: "),_(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Qn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ut(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new cp([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Qn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=Pc(this.elementShape,this.tensors,t);return _(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Qn(this.elementShape,t.shape,"TensorList shape mismatch: "),Ut(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Qn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=Pc(this.elementShape,this.tensors,n);return e.length===0?Fr([],[0].concat(o)):z(()=>{let s=e.map(a=>_(this.tensors[a],o));return mr(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Qn(this.elementShape,t,"TensorList shape mismatch: ");let n=Pc(this.elementShape,this.tensors,t);return this.size()===0?Fr([],[0].concat(n)):z(()=>{let o=this.tensors.map(s=>_(s,n));return pt(o,0)})}};function aR(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Qn(o,e,"TensorList shape mismatch: ");let s=_r(r);return new cp(s,e,n)}function iR(r,e,t){return new cp([],r,e,t)}function uR(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new cp([],t,r.dtype,n),a=_r(r,0);return e.forEach((i,p)=>{s.setItem(i,a[p])}),s}function pR(r,e,t){let n=0,o=e.map(l=>(n+=l,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=eT(s,t),i=n===0?0:r.size/n,p=z(()=>{let l=[];r=_(r,[1,n,i]);for(let m=0;m<e.length;++m){let c=m===0?0:o[m-1],d=[0,c,0],f=[1,e[m],i];l[m]=_(Ge(r,d,f),a)}return r.dispose(),l}),u=new cp([],t,r.dtype,e.length);for(let l=0;l<p.length;l++)u.setItem(l,p[l]);return u}var lR=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=v("thenBranch",r,e,t),o=v("elseBranch",r,e,t),s=v("cond",r,e,t),a=v("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=v("body",r,e,t),o=v("cond",r,e,t),s=v("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(l=>l.id),p=await a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let u=s;for(;p[0];){let l=u;u=await t.functionMap[n].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);let m=u.map(d=>d.id);l.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await t.functionMap[o].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);p=await c[0].data(),c.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return u}case"LoopCond":{let n=v("pred",r,e,t);return[Wa(n)]}case"Switch":{let n=v("pred",r,e,t),o=v("data",r,e,t);return o.kept||(o=Wa(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>Sr(o,e,t)!==void 0);if(n){let o=Sr(n,e,t);return[Wa(o)]}return}case"Enter":{let n=v("frameName",r,e,t),o=v("tensor",r,e,t);return t.enterFrame(n),[Wa(o)]}case"Exit":{let n=v("tensor",r,e,t);return t.exitFrame(),[Wa(n)]}case"NextIteration":{let n=v("tensor",r,e,t);return t.nextIteration(),[Wa(n)]}case"TensorArrayV3":{let n=v("size",r,e,t),o=v("dtype",r,e,t),s=v("elementShape",r,e,t),a=v("dynamicSize",r,e,t),i=v("clearAfterRead",r,e,t),p=v("identicalElementShapes",r,e,t),u=v("name",r,e,t),l=new Fv(u,o,n,s,p,a,i);return t.addTensorArray(l),[l.idTensor,me(1)]}case"TensorArrayWriteV3":{let n=v("tensorArrayId",r,e,t),o=v("index",r,e,t),s=v("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=v("tensorArrayId",r,e,t),o=v("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=v("tensorArrayId",r,e,t),o=v("indices",r,e,t),s=v("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=v("tensorArrayId",r,e,t),o=v("indices",r,e,t),s=v("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=v("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=v("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=v("tensorArrayId",r,e,t),o=v("tensor",r,e,t),s=v("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=v("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[me(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=v("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=v("tensorListId",r,e,t),o=v("index",r,e,t),s=v("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=v("tensorListId",r,e,t),o=v("index",r,e,t),s=v("elementShape",r,e,t),a=v("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=v("indices",r,e,t),o=v("tensor",r,e,t),s=v("elementShape",r,e,t),a=v("numElements",r,e,t),i=uR(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=v("elementShape",r,e,t),o=v("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=v(s,r,e,t),i=iR(n,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{let n=v("tensorListId",r,e,t),o=v("indices",r,e,t),s=v("elementShape",r,e,t),a=v("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=v("tensorListId",r,e,t),o=v("elementShape",r,e,t),s=v("elementDType",r,e,t),a=v("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=v("tensor",r,e,t),o=v("elementShape",r,e,t),s=v("elementDType",r,e,t),a=aR(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=v("tensorListId",r,e,t),o=t.getTensorList(n.id),s=v("dtype",r,e,t),a=v("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=v("tensorListId",r,e,t),o=v("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=v("tensorListId",r,e,t),o=v("elementShape",r,e,t),s=v("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=v("tensor",r,e,t),o=v("elementShape",r,e,t),s=v("lengths",r,e,t),a=pR(n,s,o);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{let n=v("tensorListId",r,e,t),o=t.getTensorList(n.id);return[me(o.size(),"int32")]}case"TensorListResize":{let n=v("tensorListId",r,e,t),o=v("size",r,e,t),a=t.getTensorList(n.id).resize(o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function mR(r,e,t){let[n,o]=v("fusedOps",r,e,t),s=n==="biasadd",a=!s,i=o==="prelu",p=n==="fusedbatchnorm",u=v("numArgs",r,e,t);if(s){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=v("strides",r,e,t),m=Rh(r,e,t),c=v("dataFormat",r,e,t).toUpperCase(),d=v("dilations",r,e,t),[f,h]=v("args",r,e,t);a&&(h=f,f=void 0);let g=v("leakyreluAlpha",r,e,t);return{stride:l,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var cR=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=v("stride",r,e,t),o=v("pad",r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),a=v("dilation",r,e,t);return[_d(v("x",r,e,t),v("filter",r,e,t),n,o,s,a)]}case"Conv2D":{let n=v("strides",r,e,t),o=Rh(r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),a=v("dilations",r,e,t);return[jn(v("x",r,e,t),v("filter",r,e,t),[n[1],n[2]],o,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:p,activationFunc:u,leakyreluAlpha:l}=mR(r,e,t);return[Ms.conv2d({x:v("x",r,e,t),filter:v("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:p,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:p,activationFunc:u,leakyreluAlpha:l}=mR(r,e,t);return[Ms.depthwiseConv2d({x:v("x",r,e,t),filter:v("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:p,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=v("outputShape",r,e,t),o=v("strides",r,e,t),s=Rh(r,e,t);return[$d(v("x",r,e,t),v("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=v("strides",r,e,t),o=Rh(r,e,t),s=v("dilations",r,e,t),a=v("dataFormat",r,e,t).toUpperCase();return[pu(v("input",r,e,t),v("filter",r,e,t),[n[1],n[2]],o,a,[s[1],s[2]])]}case"Conv3D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),a=v("dilations",r,e,t);return[Bd(v("x",r,e,t),v("filter",r,e,t),[n[1],n[2],n[3]],o,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Up(v("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Xp(v("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t),a=v("includeBatchInIndex",r,e,t),{result:i,indexes:p}=Pk(v("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,a);return[i,p]}case"AvgPool3D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Rd(v("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Vd(v("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("dilations",r,e,t),a=n[1],i=n[2],p=s[1],u=s[2];return[hk(v("x",r,e,t),v("filter",r,e,t),[a,i],o,[p,u],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dR=(r,e,t)=>{switch(r.op){case"Fill":{let n=v("shape",r,e,t),o=v("dtype",r,e,t),s=v("value",r,e,t);return[Fa(n,s,o)]}case"LinSpace":{let n=v("start",r,e,t),o=v("stop",r,e,t),s=v("num",r,e,t);return[Ak(n,o,s)]}case"Multinomial":{let n=v("logits",r,e,t),o=v("numSamples",r,e,t),s=v("seed",r,e,t);return[Ek(n,o,s)]}case"OneHot":{let n=v("indices",r,e,t),o=v("depth",r,e,t),s=v("onValue",r,e,t),a=v("offValue",r,e,t);return[ou(n,o,s,a)]}case"Ones":return[lr(v("shape",r,e,t),v("dtype",r,e,t))];case"OnesLike":return[Dr(v("x",r,e,t))];case"RandomUniform":return[Ea(v("shape",r,e,t),v("minval",r,e,t),v("maxval",r,e,t),v("dtype",r,e,t))];case"Range":{let n=v("start",r,e,t),o=v("stop",r,e,t),s=v("step",r,e,t);return[du(n,o,s,v("dtype",r,e,t))]}case"TruncatedNormal":{let n=v("shape",r,e,t),o=v("mean",r,e,t),s=v("stdDev",r,e,t),a=v("seed",r,e,t);return[rl(n,o,s,v("dtype",r,e,t),a)]}case"Zeros":return[bt(v("shape",r,e,t),v("dtype",r,e,t))];case"ZerosLike":return[Ne(v("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Ev(r,e,t){let n=v("boxes",r,e,t),o=v("scores",r,e,t),s=v("maxOutputSize",r,e,t),a=v("iouThreshold",r,e,t),i=v("scoreThreshold",r,e,t),p=v("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:p}}var fR=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:p}=Ev(r,e,t),u=await fn.nonMaxSuppressionWithScoreAsync(n,o,s,a,i,p);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=Ev(r,e,t),p=v("padToMaxOutputSize",r,e,t),u=await fn.nonMaxSuppressionPaddedAsync(n,o,s,a,i,p);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=Ev(r,e,t);return[await fn.nonMaxSuppressionAsync(n,o,s,a,i)]}case"Where":{let n=ee(v("condition",r,e,t),"bool"),o=[await of(n)];return n.dispose(),o}case"ListDiff":return Kk(v("x",r,e,t),v("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hR=(r,e,t)=>{switch(r.op){case"LowerBound":{let n=v("sortedSequence",r,e,t),o=v("values",r,e,t);return[Dk(n,o)]}case"TopKV2":{let n=v("x",r,e,t),o=v("k",r,e,t),s=v("sorted",r,e,t),a=jk(n,o,s);return[a.values,a.indices]}case"UpperBound":{let n=v("sortedSequence",r,e,t),o=v("values",r,e,t);return[Yk(n,o)]}case"Unique":{let n=v("x",r,e,t),o=qb(n);return[o.values,o.indices]}case"UniqueV2":{let n=v("x",r,e,t),o=v("axis",r,e,t),s=qb(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gR=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=v("default",r,e,t);return[Sr(r.name,e,t)||n];case"Placeholder":return[Sr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=v("x",r,e,t);return[Wa(u)]}case"IdentityN":return v("x",r,e,t).map(u=>Wa(u));case"Snapshot":let o=v("x",r,e,t);return[Wa(o)];case"Shape":return[Ot(v("x",r,e,t).shape,"int32")];case"ShapeN":return v("x",r,e,t).map(u=>Ot(u.shape));case"Size":return[me(v("x",r,e,t).size,"int32")];case"Rank":return[me(v("x",r,e,t).rank,"int32")];case"NoOp":return[me(1)];case"Print":let s=v("x",r,e,t),a=v("data",r,e,t),i=v("message",r,e,t),p=v("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let u=0;u<a.length;u++)console.log(Array.prototype.slice.call(a[u].dataSync()).slice(0,p));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Rv=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=me(0),this.tensorMap=new Map,Ut(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return me(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),z(()=>{let o=_r(t),s=n.length,a=o.length;b.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let p=n[i],u=o[i];Ut(u),this.tensorMap.set(p,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return z(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return mr(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var bR=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=v("keyDType",r,e,t),s=v("valueDType",r,e,t),a=new Rv(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=v("tableHandle",r,e,t,n),s=v("keys",r,e,t),a=v("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=v("tableHandle",r,e,t,n),s=v("keys",r,e,t),a=v("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=v("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var yR=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=v("images",r,e,t),o=v("size",r,e,t),s=v("alignCorners",r,e,t),a=v("halfPixelCenters",r,e,t);return[fn.resizeBilinear(n,[o[0],o[1]],s,a)]}case"ResizeNearestNeighbor":{let n=v("images",r,e,t),o=v("size",r,e,t),s=v("alignCorners",r,e,t),a=v("halfPixelCenters",r,e,t);return[fn.resizeNearestNeighbor(n,[o[0],o[1]],s,a)]}case"CropAndResize":{let n=v("image",r,e,t),o=v("boxes",r,e,t),s=v("boxInd",r,e,t),a=v("cropSize",r,e,t),i=v("method",r,e,t),p=v("extrapolationValue",r,e,t);return[fn.cropAndResize(n,o,s,a,i,p)]}case"ImageProjectiveTransformV3":{let n=v("images",r,e,t),o=v("transforms",r,e,t),s=v("outputShape",r,e,t),a=v("fillValue",r,e,t),i=v("interpolation",r,e,t),p=v("fillMode",r,e,t);return[fn.transform(n,o,i.toLowerCase(),p.toLowerCase(),a,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var TR=(r,e,t)=>{switch(r.op){case"Equal":return[zr(v("a",r,e,t),v("b",r,e,t))];case"NotEqual":return[di(v("a",r,e,t),v("b",r,e,t))];case"Greater":return[rr(v("a",r,e,t),v("b",r,e,t))];case"GreaterEqual":return[Qo(v("a",r,e,t),v("b",r,e,t))];case"Less":return[Ud(v("a",r,e,t),v("b",r,e,t))];case"LessEqual":return[Zo(v("a",r,e,t),v("b",r,e,t))];case"LogicalAnd":return[Ur(v("a",r,e,t),v("b",r,e,t))];case"LogicalNot":return[jp(v("a",r,e,t))];case"LogicalOr":return[Kd(v("a",r,e,t),v("b",r,e,t))];case"Select":case"SelectV2":return[Bt(v("condition",r,e,t),v("a",r,e,t),v("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xR=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[He(v("a",r,e,t),v("b",r,e,t),v("transposeA",r,e,t),v("transposeB",r,e,t))];case"Einsum":return[bk(v("equation",r,e,t),...v("tensors",r,e,t))];case"Transpose":return[Ue(v("x",r,e,t),v("perm",r,e,t))];case"_FusedMatMul":let[n,o]=v("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=v("numArgs",r,e,t),p=v("leakyreluAlpha",r,e,t);if(s){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,l]=v("args",r,e,t);return[Ms.matMul({a:v("a",r,e,t),b:v("b",r,e,t),transposeA:v("transposeA",r,e,t),transposeB:v("transposeB",r,e,t),bias:u,activation:o,preluActivationWeights:l,leakyreluAlpha:p})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var IR=(r,e,t)=>{switch(r.op){case"EuclideanNorm":return[kk(v("x",r,e,t),v("axis",r,e,t),v("keepDims",r,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[li(v("x",r,e,t),v("mean",r,e,t),v("variance",r,e,t),v("offset",r,e,t),v("scale",r,e,t),v("epsilon",r,e,t))];case"FusedBatchNormV3":return[li(v("x",r,e,t),v("mean",r,e,t),v("variance",r,e,t),v("offset",r,e,t),v("scale",r,e,t),v("epsilon",r,e,t))];case"LRN":return[wk(v("x",r,e,t),v("radius",r,e,t),v("bias",r,e,t),v("alpha",r,e,t),v("beta",r,e,t))];case"Softmax":return[Jp(v("x",r,e,t))];case"LogSoftmax":return[Wd(v("x",r,e,t))];case"SparseToDense":return[Xb(v("sparseIndices",r,e,t),v("outputShape",r,e,t),v("sparseValues",r,e,t),v("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var CR=(r,e,t)=>{switch(r.op){case"Max":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Xr(v("x",r,e,t),a,i)]}case"Mean":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Lt(v("x",r,e,t),a,i)]}case"Min":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Ym(v("x",r,e,t),a,i)]}case"Sum":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[de(v("x",r,e,t),a,i)]}case"All":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Ed(v("x",r,e,t),a,i)]}case"Any":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Hm(v("x",r,e,t),a,i)]}case"ArgMax":{let a=v("axis",r,e,t);return[iu(v("x",r,e,t),a)]}case"ArgMin":{let a=v("axis",r,e,t);return[jC(v("x",r,e,t),a)]}case"Prod":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Hd(v("x",r,e,t),a,i)]}case"Cumprod":{let a=v("axis",r,e,t),i=v("exclusive",r,e,t),p=v("reverse",r,e,t);return[Xm(v("x",r,e,t),a,i,p)]}case"Cumsum":{let a=v("axis",r,e,t),i=v("exclusive",r,e,t),p=v("reverse",r,e,t);return[zd(v("x",r,e,t),a,i,p)]}case"Bincount":let n=v("x",r,e,t),o=v("weights",r,e,t),s=v("size",r,e,t);return[Ld(n,o,s)];case"DenseBincount":{let a=v("x",r,e,t),i=v("weights",r,e,t),p=v("size",r,e,t),u=v("binaryOutput",r,e,t);return[dk(a,i,p,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var kR=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=v("n",r,e,t),o=v("axis",r,e,t),s=v("tensors",r,e,t);return s=s.slice(0,n),[pt(s,o)]}case"Gather":{let n=v("x",r,e,t),o=v("indices",r,e,t);return[mi(n,ee(o,"int32"),0)]}case"GatherV2":{let n=v("axis",r,e,t),o=v("batchDims",r,e,t),s=v("x",r,e,t),a=v("indices",r,e,t);return[mi(s,ee(a,"int32"),n,o)]}case"Reverse":{let n=v("dims",r,e,t),o=[];for(let a=0;a<n.length;a++)n[a]&&o.push(a);let s=v("x",r,e,t);return[gr(s,o)]}case"ReverseV2":{let n=v("axis",r,e,t),o=v("x",r,e,t);return[gr(o,n)]}case"Slice":{let n=v("begin",r,e,t),o=v("size",r,e,t);return[Ge(v("x",r,e,t),n,o)]}case"StridedSlice":{let n=v("begin",r,e,t),o=v("end",r,e,t),s=v("strides",r,e,t),a=v("beginMask",r,e,t),i=v("endMask",r,e,t),p=v("ellipsisMask",r,e,t),u=v("newAxisMask",r,e,t),l=v("shrinkAxisMask",r,e,t),m=v("x",r,e,t);return[Hk(m,n,o,s,a,i,p,u,l)]}case"Pack":return z(()=>{let n=v("axis",r,e,t),o=v("tensors",r,e,t),s=o[0].shape,a=dn(o[0]).shape,i=o.map(p=>{let u=b.arraysEqual(p.shape,s);if(!u&&!b.arraysEqual(dn(p).shape,a))throw new Error("the input tensors shape does not match");return u?p:_(p,s)});return[mr(i,n)]});case"Unpack":{let n=v("axis",r,e,t),o=v("tensor",r,e,t);return _r(o,n)}case"Tile":{let n=v("reps",r,e,t);return[Gr(v("x",r,e,t),n)]}case"Split":case"SplitV":{let n=v("axis",r,e,t),o=v("numOrSizeSplits",r,e,t),s=v("x",r,e,t);return kr(s,o,n)}case"ScatterNd":{let n=v("indices",r,e,t),o=v("values",r,e,t),s=v("shape",r,e,t);return[Y1(n,o,s)]}case"GatherNd":{let n=v("x",r,e,t),o=v("indices",r,e,t);return[Z1(n,o)]}case"SparseToDense":{let n=v("sparseIndices",r,e,t),o=v("outputShape",r,e,t),s=v("sparseValues",r,e,t),a=v("defaultValue",r,e,t);return[Xb(n,s,o,s.dtype===a.dtype?a:ee(a,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var SR=(r,e,t)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:o,emptyRowIndicator:s,reverseIndexMap:a}=sf.sparseFillEmptyRows(v("indices",r,e,t),v("values",r,e,t),v("denseShape",r,e,t),v("defaultValue",r,e,t));return[n,o,s,a]}case"SparseReshape":{let{outputIndices:n,outputShape:o}=sf.sparseReshape(v("inputIndices",r,e,t),v("inputShape",r,e,t),v("newShape",r,e,t));return[n,o]}case"SparseSegmentMean":return[sf.sparseSegmentMean(v("data",r,e,t),v("indices",r,e,t),v("segmentIds",r,e,t))];case"SparseSegmentSum":return[sf.sparseSegmentSum(v("data",r,e,t),v("indices",r,e,t),v("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var vR=(r,e,t)=>{switch(r.op){case"FFT":return[el(v("x",r,e,t))];case"IFFT":return[rp(v("x",r,e,t))];case"RFFT":return[tl(v("x",r,e,t))];case"IRFFT":return[rf(v("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var AR=(r,e,t)=>{switch(r.op){case"StringNGrams":{let{nGrams:n,nGramsSplits:o}=oy.stringNGrams(v("data",r,e,t),v("dataSplits",r,e,t),v("separator",r,e,t),v("nGramWidths",r,e,t),v("leftPad",r,e,t),v("rightPad",r,e,t),v("padWidth",r,e,t),v("preserveShortSequences",r,e,t));return[n,o]}case"StringSplit":{let{indices:n,values:o,shape:s}=oy.stringSplit(v("input",r,e,t),v("delimiter",r,e,t),v("skipEmpty",r,e,t));return[n,o,s]}case"StringToHashBucketFast":return[oy.stringToHashBucketFast(v("input",r,e,t),v("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var wR=(r,e,t)=>{switch(r.op){case"Cast":return[ee(v("x",r,e,t),v("dtype",r,e,t))];case"ExpandDims":{let n=v("axis",r,e,t);return[Nr(v("x",r,e,t),n)]}case"Squeeze":{let n=v("axis",r,e,t);return[dn(v("x",r,e,t),n)]}case"Reshape":return[_(v("x",r,e,t),v("shape",r,e,t))];case"MirrorPad":return[Mk(v("x",r,e,t),v("padding",r,e,t),v("mode",r,e,t))];case"PadV2":case"Pad":return[Ln(v("x",r,e,t),v("padding",r,e,t),v("constantValue",r,e,t))];case"SpaceToBatchND":{let n=v("blockShape",r,e,t),o=v("paddings",r,e,t);return[Yp(v("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=v("blockShape",r,e,t),o=v("crops",r,e,t);return[Wp(v("x",r,e,t),n,o)]}case"DepthToSpace":{let n=v("blockSize",r,e,t),o=v("dataFormat",r,e,t).toUpperCase();return[fk(v("x",r,e,t),n,o)]}case"BroadcastTo":return[Kp(v("x",r,e,t),v("shape",r,e,t))];case"BroadcastArgs":return[ak(v("s0",r,e,t),v("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Lv(r,e,t,n){let o=((s,a,i)=>{switch(s.category){case"arithmetic":return z(()=>nR(s,a,i));case"basic_math":return z(()=>oR(s,a,i));case"control":return lR(s,a,i);case"convolution":return z(()=>cR(s,a,i));case"creation":return z(()=>dR(s,a,i));case"dynamic":return fR(s,a,i);case"evaluation":return z(()=>hR(s,a,i));case"image":return z(()=>yR(s,a,i));case"graph":return z(()=>gR(s,a,i));case"logical":return z(()=>TR(s,a,i));case"matrices":return z(()=>xR(s,a,i));case"normalization":return z(()=>IR(s,a,i));case"reduction":return z(()=>CR(s,a,i));case"slice_join":return z(()=>kR(s,a,i));case"sparse":return z(()=>SR(s,a,i));case"spectral":return z(()=>vR(s,a,i));case"string":return z(()=>AR(s,a,i));case"transformation":return z(()=>wR(s,a,i));case"hash_table":return bR(s,a,i,n);case"custom":let p=Gy(s.op);if(p&&p.customExecutor)return p.customExecutor(new Mv(s,a,i));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return b.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var tT=class{constructor(e={},t={},n={},o={}){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function _v(r,e,t,n){let o=new Set,s=[],a=null,i=null,p=new Set,u=Object.keys(r).map(c=>Cn(c)[0]),l=[];n!=null&&(l=n.map(c=>Cn(c.name)[0]));let m=[...e];for(;m.length>0;){let c=m.pop();if(($v(c)||nte(c)||ote(c))&&a==null&&(a=c,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),t[c.name]==null&&u.indexOf(c.name)===-1&&l.indexOf(c.name)===-1){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{p.has(d.name)||(p.add(d.name),m.push(d))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function NR(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],a=Object.keys(o).map(l=>Cn(l)[0]).map(l=>r.nodes[l]),i=r.initNodes;a.forEach(l=>{n.has(l.name)&&s.push(l)}),r.weights.forEach(l=>{n.has(l.name)&&s.push(l)}),i?.forEach(l=>{n.has(l.name)&&s.push(l)});let p=new Set,u=[];for(;s.length>0;){let l=s.pop();p.add(l.name),e[l.name]||u.push(l),l.children.forEach(m=>{!p.has(m.name)&&n.has(m.name)&&m.inputs.every(c=>p.has(c.name))&&s.push(m)})}return u}var ete=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],tte=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],rte=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function $v(r){return ete.indexOf(r.op)>=0}function nte(r){return tte.indexOf(r.op)>=0}function ote(r){return rte.indexOf(r.op)>=0}var Mc=class{constructor(e,t){this.graph=e;this.parent=t;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Mc(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=_v(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=t.map(u=>u.name),p=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${p}]. Missing the following inputs: [${o}]`)}return NR(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(m=>this.graph.nodes[Cn(m)[0]]),s=t.map(m=>Cn(m)[0]),a=s.map(m=>this.graph.nodes[m]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),p=this.compiledMap.get(i);p==null&&(p=this.compile(e,a),this.compiledMap.set(i,p));let u={},l={};return z(()=>{let m=new tT(this.weightMap,u,l,this.functionExecutorMap),c={...this.weightMap};Object.keys(e).forEach(h=>{let[g,y]=Cn(h),T=[];T[y]=e[h],c[g]=T});let d=this.getFrozenTensorIds(c),f={};for(let h=0;h<p.length;h++){let g=p[h];if(!c[g.name]){let y=Lv(g,c,m,this._resourceManager);if(b.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);c[g.name]=y,this.checkTensorForDisposal(g.name,g,c,m,d,s,f)}}return this.parent==null&&m.dispose(d),t.map(h=>Sr(h,c,m))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(p=>{p!=null&&(i[p.id]=(i[p.id]||0)+t.children.length)}),t.inputs.forEach(p=>{if(p.category!=="control"){let u=JE(p.name,n,o);u?.forEach(l=>{if(l&&!l.kept&&!s.has(l.id)){let m=i[l.id];if(m===1){if(!this.keepTensorForDebug)l.dispose();else{let[c,d]=Gs(t.name,o);this.intermediateTensors[c]?this.intermediateTensors[c][d]=l:(this.intermediateTensors[c]=[],this.intermediateTensors[c][d]=l)}delete i[l.id]}else m!=null&&i[l.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=B().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();let a=new tT(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let i=t.map(l=>Sr(l,this.tensorsMap,a)),p=i.map(l=>l.id),u=Object.keys(e).map(l=>e[l].id);return this.keepIds=new Set([...p,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(x=>this.graph.nodes[Cn(x)[0]]),i=n.map(x=>Cn(x)[0]),p=i.map(x=>this.graph.nodes[x]);p.length===0&&(p=this._outputs);let{usedNodes:u,missingInputs:l,dynamicNode:m,syncInputs:c}=_v(e,p,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),f={...this.weightMap};Object.keys(e).forEach(x=>{let[I,k]=Cn(x),w=[];w[k]=e[x],f[I]=w});let h={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){let x=this.processStack(a,d,t,f,y,g,i,h,u);await Promise.all(x)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=p.filter(x=>!$v(x)&&!Sr(x.name,f,t)).map(x=>x.name);if(T.length>0){let x="";throw m!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${x}`)}return f}processStack(e,t,n,o,s,a,i,p,u){let l=[];for(;t.length>0;){let m=t.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&v("isConstant",m.node,o,n)&&([c]=Gs(m.node.name,n)),o[m.node.name]==null){let d=Lv(m.node,o,n,this._resourceManager);c||([c]=Gs(m.node.name,n));let f=n.currentContext;b.isPromise(d)?l.push(d.then(h=>(o[c]=h,n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,a,i,p),this.processChildNodes(m.node,t,n,o,s,u),h))):(o[c]=d,this.checkTensorForDisposal(c,m.node,o,n,a,i,p),this.processChildNodes(m.node,t,n,o,s,u))}else this.processChildNodes(m.node,t,n,o,s,u)}return l}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[p]=Gs(i.name,n);s[p]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!Sr(u,o,n))&&(s[p]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!Sr(u,o,n))&&(s[p]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=Cn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((p,u)=>a[u]===-1||a[u]===p);b.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=Cn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Cn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var Bv=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var ste="?tfjs-format=file",ate="model.json",rT=class{constructor(e,t={}){this.modelUrl=e;this.loadOptions=t;this.version="n/a";t==null&&(this.loadOptions={}),this.resourceManager=new Bv}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Or.browserHTTPRequest(e,this.loadOptions);else{let t=Or.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Or.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return b.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Or.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Mc(Jy.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=Jy.Instance.transformGraph(e.modelInitializer);this.initializer=new Mc(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Or.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ye)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function ite(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof r=="string"&&(r=pte(r));let t=new rT(r,e);return await t.load(),t}function ute(r){if(r==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!r.load)throw new Error(`modelUrl IO Handler ${r} has no load function`);let e=new rT(r);return e.load(),e}function pte(r){return r.endsWith("/")||(r=r+"/"),`${r}${ate}${ste}`}var lte="0.0.0";var mL={};Xe(mL,{CSVDataset:()=>Oh,Dataset:()=>Ii,FileDataSource:()=>Kh,TextLineDataset:()=>$h,URLDataSource:()=>Vh,array:()=>YR,csv:()=>sL,func:()=>aL,generator:()=>iL,microphone:()=>pL,version_data:()=>lL,webcam:()=>uL,zip:()=>QR});var XR=Np(qd());var RR=Np(qd());function DR(r,e){return nT(r,e)}function nT(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(dp(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],p=nT(i,e,t,n);s[a]=p}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function PR(r,e=zv){return MR(r,e)}function MR(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(dp(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(u=>u[a]),p=MR(i,e,t);s[a]=p}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function zv(r){return r===null?null:dp(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function oT(r,e){let t=new Map;nT(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(b.isPromise(s)){let a=await s;t.set(o,a)}}return nT(r,e,t)}function dp(r){let e=!1;if(B().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=Ov();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Ye)&&!(r instanceof Promise)&&!e)}function FR(r){return r==null||mte(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Ye||b.isTypedArray(r)}function mte(r){return r===null||typeof r!="object"&&typeof r!="function"}function ER(r){return DR(r,cte)}function cte(r){return r instanceof Ye?{value:r.clone(),recurse:!1}:dp(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Lh=class{constructor(e){this.capacity=e;this.begin=0;this.end=0;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var Gv=class extends Lh{constructor(){super(Gv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},sT=Gv;sT.INITIAL_CAPACITY=32;function Wv(r){return new $R(r)}function _h(r){return new BR(r)}function LR(r,e){return new Kv(r,e)}function _R(r,e=Vv.FAIL){return new qR(r,e)}var ur=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new VR(this,e)}filter(e){return new WR(this,e)}map(e){return new KR(this,e)}mapAsync(e){return new Uv(this,e)}serialMapAsync(e){return new Uv(this,e).serial()}flatmap(e){return new HR(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new UR(this,e,t)}columnMajorBatch(e,t=!0,n=zv){return this.rowMajorBatch(e,t).map(s=>PR(s,n))}concatenate(e,t){return new Kv(Wv([this,e]),t)}take(e){return e<0||e==null?this:new GR(this,e)}skip(e){return e<0||e==null?this:new zR(this,e)}prefetch(e){return new Hv(this,e)}shuffle(e,t){return new jR(this,e,t)}serial(){return new OR(this)}},$R=class extends ur{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:ER(e),done:!1}}},BR=class extends ur{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},OR=class extends ur{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},zR=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Me(e.value)}return this.upstream.next()}},GR=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},UR=class extends ur{constructor(e,t,n=!0){super();this.upstream=e;this.batchSize=t;this.enableSmallLastBatch=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},WR=class extends ur{constructor(e,t){super();this.upstream=e;this.predicate=t;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Me(e.value)}}},KR=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ns.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ns.getTensorsInContainer(n);for(let s of t)Ns.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},VR=class extends ur{constructor(e,t){super();this.upstream=e;this.handler=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Uv=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ns.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Ns.getTensorsInContainer(n);for(let s of t)Ns.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},Fc=class extends ur{constructor(){super();this.outputQueue=new sT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},HR=class extends Fc{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ns.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ns.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Ns.isTensorInList(s,o)||s.dispose();return!0}},Kv=class extends ur{constructor(e,t){super();this.baseErrorHandler=t;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Vv=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))(Vv||{}),qR=class extends ur{constructor(e,t=0){super();this.iterators=e;this.mismatchMode=t;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(a){return a instanceof ur?{value:a.next().then(p=>(t++,p.done&&n++,p.value)),recurse:!1}:{value:null,recurse:!0}}let s=await oT(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},Hv=class extends ur{constructor(e,t){super();this.upstream=e;this.bufferSize=t;this.buffer=new Lh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},jR=class extends Hv{constructor(e,t,n){super(e,t);this.upstream=e;this.windowSize=t;this.upstreamExhausted=!1;this.random=RR.alea(n||b.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var Ii=class{constructor(){this.size=null}batch(e,t=!0){let n=this;b.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),Bn(async()=>(await n.iterator()).columnMajorBatch(e,t,dte),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Bn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Bn(async()=>(await t.iterator()).filter(o=>z(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Bn(async()=>(await t.iterator()).map(n=>z(()=>e(n))),this.size)}mapAsync(e){let t=this;return Bn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Bn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Bn(async()=>{let o=_h(async()=>({value:await t.iterator(),done:!1}));return LR(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Bn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=XR.alea(t||b.now().toString());return Bn(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Bn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ii.MAX_BUFFER_SIZE=1e4;function Bn(r,e=null){return new class extends Ii{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function YR(r){return Bn(async()=>Wv(r),r.length)}function QR(r){if(!dp(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return Bn(async()=>{let t=await oT(r,n=>{if(n instanceof Ii)return{value:n.iterator(),recurse:!1};if(dp(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return _R(t,1)},e)}function dte(r){if(r===null)return null;let e=r[0];return FR(e)?{value:fte(r),recurse:!1}:{value:null,recurse:!0}}function fte(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Ye?mr(r):Fr(r)}var $h=class extends Ii{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var aT='"',Bh=Symbol("out"),ZR=Symbol("field"),iT=Symbol("quote"),qv=Symbol("quoteafterquote"),JR=Symbol("quoteinquote"),Oh=class extends Ii{constructor(e,t){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new $h(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(b.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&b.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(b.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let p=t[s],u=null;if(p==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let l=Number(p);if(isNaN(l))i&&i.dtype==="bool"?u=this.getBoolean(p):u=p;else if(!i||!i.dtype)u=l;else switch(i.dtype){case"float32":u=l;break;case"int32":u=Math.floor(l);break;case"bool":u=this.getBoolean(p);break;default:u=l}}i&&i.isLabel?o[a]=u:n[a]=u}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,a=Bh;for(let i=0;i<s;i++)switch(a){case Bh:switch(e.charAt(i)){case aT:o=i+1,a=iT;break;case this.delimiter:if(o=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Bh;break;default:a=ZR,o=i;break}break;case ZR:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i)),a=Bh,o=i+1;break;default:}break;case iT:switch(e.charAt(i)){case aT:a=qv;break;default:}break;case qv:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i-1)),a=Bh,o=i+1;break;case aT:a=iT;break;default:a=JR;break}break;case JR:switch(e.charAt(i)){case aT:a=iT;break;default:}break;default:}if(a===qv?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var zh=class extends ur{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!B().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new zh(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(b.sizeFromShape(t));return n.set(e,n.length-e.length),Fr(n,t)}};var Gh=class extends ur{constructor(e,t){super();this.webcamVideoElement=e;this.webcamConfig=t;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ot([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-o)/2,i=s+n,p=o+a;this.cropBox=fi([a,s,p,i],[1,4])}else this.cropBox=fi([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!B().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Gh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&b.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Fb.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return z(()=>{let t=Nr(ee(e,"float32"),0),n;n=fn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return _(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Uh=class{};var uT=class extends ur{split(e){return new eL(this,e)}},eL=class extends uT{constructor(e,t){super();this.upstream=e;this.impl=new tL(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},tL=class extends Fc{constructor(e,t){super();this.upstream=e;this.separator=t;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var jv=class extends ur{decodeUTF8(){return new rL(this)}},rL=class extends uT{constructor(e){super();this.upstream=e;this.impl=new nL(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},nL=class extends Fc{constructor(e){super();this.upstream=e;if(B().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Ov();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return B().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var Wh=class extends jv{constructor(e,t={}){super();this.file=e;this.options=t;b.assert(e instanceof Uint8Array||(B().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=i=>{let p=s.result;if(p instanceof ArrayBuffer&&(p=new Uint8Array(p)),!(p instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(p)},s.onabort=i=>n(new Error("Aborted")),s.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,o);s.readAsArrayBuffer(a)}this.offset=o}),done:!1}}};async function oL(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=hte(r));let s=await(t||b.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new Wh(a,e)}else throw new Error(s.statusText)}var hte=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function pT(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var Kh=class extends Uh{constructor(e,t={}){super();this.input=e;this.options=t}async iterator(){if(pT(this.input)&&B().get("IS_NODE")){let e=lT();this.input=e.readFileSync(this.input.slice(7))}return new Wh(this.input,this.options)}};var Vh=class extends Uh{constructor(e,t={}){super();this.url=e;this.fileOptions=t}async iterator(){return pT(this.url)?new Kh(this.url,this.fileOptions).iterator():oL(this.url,this.fileOptions)}};function sL(r,e={}){return new Oh(new Vh(r),e)}function aL(r){let e=_h(r);return Bn(async()=>e)}function iL(r){return Bn(async()=>{let e=await r();return _h(()=>e.next())})}async function uL(r,e){return Gh.create(r,e)}async function pL(r){return zh.create(r)}var lL="0.0.0";function ne(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var gte=br.whereImpl,Xv=class extends ss{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new Ja(this,Fn())}nextDataId(){return Xv.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,B().get("IS_NODE")&&C.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return C.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>b.decodeString(o));return xe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,t)}makeOutput(e,t,n){return Fn().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ne([e],"where");let t=this.readSync(e.dataId);return gte(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Hh=Xv;Hh.nextDataId=0;var Bc={};Xe(Bc,{addImpl:()=>Qv,bincountImpl:()=>Lc,bincountReduceImpl:()=>mT,ceilImpl:()=>Zv,concatImpl:()=>kl,equalImpl:()=>Jv,expImpl:()=>tA,expm1Impl:()=>nA,floorImpl:()=>oA,gatherNdImpl:()=>cT,gatherV2Impl:()=>dT,greaterEqualImpl:()=>aA,greaterImpl:()=>sA,lessEqualImpl:()=>uA,lessImpl:()=>iA,linSpaceImpl:()=>fT,logImpl:()=>pA,maxImpl:()=>hT,maximumImpl:()=>lA,minimumImpl:()=>mA,multiplyImpl:()=>qh,negImpl:()=>cA,notEqualImpl:()=>dA,prodImpl:()=>fA,rangeImpl:()=>vl,rsqrtImpl:()=>hA,scatterImpl:()=>xu,sigmoidImpl:()=>_L,simpleAbsImpl:()=>Yv,sliceImpl:()=>Al,sparseFillEmptyRowsImpl:()=>gT,sparseReshapeImpl:()=>bT,sparseSegmentReductionImpl:()=>$c,sqrtImpl:()=>OL,squaredDifferenceImpl:()=>bA,stridedSliceImpl:()=>yT,stringNGramsImpl:()=>TT,stringSplitImpl:()=>xT,stringToHashBucketFastImpl:()=>IT,subImpl:()=>yA,tileImpl:()=>CT,topKImpl:()=>kT,transposeImpl:()=>_c,uniqueImpl:()=>ST});function Yv(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var bte=r=>{let{x:e}=r.inputs,t=r.backend;ne(e,"abs");let n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=Yv(o),t.makeOutput(n,e.shape,e.dtype)},cL={kernelName:as,backendName:"cpu",kernelFunc:bte};function st(r){return(e,t,n,o,s)=>{let a=C.assertAndGetBroadcastShape(e,t),i=a.length,p=b.computeStrides(a),u=b.sizeFromShape(a),l=b.getTypedArrayFromDType(s,u),m=e.length,c=t.length,d=b.computeStrides(e),f=b.computeStrides(t),h=C.getBroadcastDims(e,a),g=C.getBroadcastDims(t,a);if(h.length+g.length===0)for(let y=0;y<l.length;++y)l[y]=r(n[y%n.length],o[y%o.length]);else for(let y=0;y<l.length;++y){let T=b.indexToLoc(y,i,p),x=T.slice(-m);h.forEach(M=>x[M]=0);let I=b.locToIndex(x,m,d),k=T.slice(-c);g.forEach(M=>k[M]=0);let w=b.locToIndex(k,c,f);l[y]=r(n[I],o[w])}return[l,a]}}function vr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),p=t.data.get(i.dataId);return p.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var dL={kernelName:Lu,backendName:"cpu",kernelFunc:vr};function Ec(r,e,t="float32"){if(t==="complex64"){let o=Ec(r,e,"float32"),s=Ec(r,e,"float32");return vr({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Hr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var fL={kernelName:Vn,backendName:"cpu",kernelFunc:Hr};function Us(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var hL={kernelName:Wu,backendName:"cpu",kernelFunc:Us};function Ws(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Hr({inputs:{x:o},backend:t});let a=Ec(t,o.shape,o.dtype),i=Ws({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),p=vr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}if(o.dtype==="complex64"){let a=Us({inputs:{input:o},backend:t}),i=Ws({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=Hr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(o.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(o.shape,"int32",i)}if(s==="bool"){let a=t.data.get(o.dataId).values,i=b.toTypedArray([0],o.dtype),[p,u]=st((l,m)=>l!==m?1:0)(o.shape,[],a,i,"bool");return t.makeTensorInfo(u,"bool",p)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var gL={kernelName:Wn,backendName:"cpu",kernelFunc:Ws};function ut(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;ne([a,i],r);let u=p.data.get(a.dataId).values,l=p.data.get(i.dataId).values,m=a.dtype==="string"?C.fromUint8ToStringArray(u):u,c=a.dtype==="string"?C.fromUint8ToStringArray(l):l,d=n||a.dtype,[f,h]=e(a.shape,i.shape,m,c,d);return p.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let u=Ws({inputs:{x:a},backend:p,attrs:{dtype:"complex64"}}),l=p.data.get(u.dataId),m=l.complexTensorInfos.real,c=l.complexTensorInfos.imag,d=p.data.get(m.dataId).values,f=p.data.get(c.dataId).values,h=Ws({inputs:{x:i},backend:p,attrs:{dtype:"complex64"}}),g=p.data.get(h.dataId),y=g.complexTensorInfos.real,T=g.complexTensorInfos.imag,x=p.data.get(y.dataId).values,I=p.data.get(T.dataId).values,[k,w,M]=t(a.shape,i.shape,d,f,x,I),F=p.makeTensorInfo(M,"float32",k),E=p.makeTensorInfo(M,"float32",w),$=vr({inputs:{real:F,imag:E},backend:p});return p.disposeIntermediateTensorInfo(u),p.disposeIntermediateTensorInfo(h),p.disposeIntermediateTensorInfo(F),p.disposeIntermediateTensorInfo(E),$}else{let u=p.data.get(a.dataId).values,l=p.data.get(i.dataId).values,m=n||a.dtype,[c,d]=e(a.shape,i.shape,u,l,m);return p.makeTensorInfo(d,m,c)}}}function Rc(r){return(e,t,n,o,s,a)=>{let i=C.assertAndGetBroadcastShape(e,t),p=b.sizeFromShape(i),u=i.length,l=b.computeStrides(i),m=b.getTypedArrayFromDType("float32",p),c=b.getTypedArrayFromDType("float32",p),d=C.getBroadcastDims(e,i),f=C.getBroadcastDims(t,i),h=C.mergeRealAndImagArrays(n,o),g=C.mergeRealAndImagArrays(s,a),y=e.length,T=b.computeStrides(e),x=t.length,I=b.computeStrides(t);if(d.length+f.length===0)for(let k=0;k<m.length;k++){let w=k%h.length,M=k%g.length,F=r(h[w*2],h[w*2+1],g[M*2],g[M*2+1]);m[k]=F.real,c[k]=F.imag}else for(let k=0;k<m.length;k++){let w=b.indexToLoc(k,u,l),M=w.slice(-y);d.forEach(W=>M[W]=0);let F=b.locToIndex(M,y,T),E=w.slice(-x);f.forEach(W=>E[W]=0);let $=b.locToIndex(E,x,I),G=r(h[F*2],h[F*2+1],g[$*2],g[$*2+1]);m[k]=G.real,c[k]=G.imag}return[m,c,i]}}var Qv=st((r,e)=>r+e),yte=Rc((r,e,t,n)=>({real:r+t,imag:e+n})),Ci=ut(Nn,Qv,yte),bL={kernelName:Nn,backendName:"cpu",kernelFunc:Ci};function Lc(r,e,t,n,o){let s=b.sizeFromShape(n),a=b.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let p=r[i];if(p<0)throw new Error("Input x must be non-negative!");p>=o||(s>0?a[p]+=e[i]:a[p]+=1)}return a}function mT(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=xe([o,t],e.dtype);for(let i=0;i<o;i++)for(let p=0;p<s;p++){let u=r.get(i,p);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(n?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,p),i,u):a.set(a.get(i,u)+1,i,u))}return a}function kn(r){return(e,t,n)=>{let o=b.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Fe(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(ne(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,p=i.data.get(a.dataId).values,u=b.sizeFromShape(a.shape),l=t||a.dtype,m=b.getArrayFromDType(l,u);for(let c=0;c<u;++c)m[c]=e(p[c],o);return i.makeTensorInfo(a.shape,l,m)}}function Ks(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(ne(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,p=i.data.get(a.dataId).values,u=t||a.dtype,l=e(p,u,o);return i.makeTensorInfo(a.shape,u,l)}}var Zv=kn(r=>Math.ceil(r)),Tte=Ks(uo,Zv),yL={kernelName:uo,backendName:"cpu",kernelFunc:Tte};function kl(r,e,t,n){let o=b.getArrayFromDType(t,b.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=b.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?C.fromUint8ToStringArray(a.vals):a.vals,p=0;for(let u=0;u<a.shape[0];++u){let l=u*e[1]+s;for(let m=0;m<a.shape[1];++m)o[l+m]=i[p++]}s+=a.shape[1]})}return o}var Jv=st((r,e)=>r===e?1:0),eA=ut(pa,Jv,null,"bool"),TL={kernelName:pa,backendName:"cpu",kernelFunc:eA};var tA=kn(r=>Math.exp(r)),rA=Ks(yo,tA,"float32"),xL={kernelName:yo,backendName:"cpu",kernelFunc:rA};var nA=kn(r=>Math.expm1(r)),xte=Ks(la,nA),IL={kernelName:la,backendName:"cpu",kernelFunc:xte};var oA=kn(r=>Math.floor(r)),Ite=Ks(To,oA),CL={kernelName:To,backendName:"cpu",kernelFunc:Ite};function cT(r,e,t,n,o,s,a,i,p){let u=xe([n,s],t);for(let l=0;l<n;l++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[l*o+d];c+=f*a[d],m.push(f)}if(c<0||c>=p/s)throw new Error(`Invalid indices: ${m} does not index into ${i}`);for(let d=0;d<s;d++)u.values[l*s+d]=e.get(...e.indexToLoc(c*s+d))}return u}function dT(r,e,t){let n=xe(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],p=a[2],u=e.locToIndex([i,p]);a[2]=e.values[u];let l=r.locToIndex(a);0<=l&&l<r.values.length&&(n.values[o]=r.values[l])}return n}var sA=st((r,e)=>r>e?1:0),Cte=ut(da,sA,null,"bool"),kL={kernelName:da,backendName:"cpu",kernelFunc:Cte};var aA=st((r,e)=>r>=e?1:0),kte=ut(Co,aA,null,"bool"),SL={kernelName:Co,backendName:"cpu",kernelFunc:kte};var iA=st((r,e)=>r<e?1:0),Ste=ut(fa,iA,null,"bool"),vL={kernelName:fa,backendName:"cpu",kernelFunc:Ste};var uA=st((r,e)=>r<=e?1:0),vte=ut(ha,uA,null,"bool"),AL={kernelName:ha,backendName:"cpu",kernelFunc:vte};function fT(r,e,t){let n=(e-r)/(t-1),o=b.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var pA=kn(r=>Math.log(r)),Ate=Ks(So,pA),wL={kernelName:So,backendName:"cpu",kernelFunc:Ate};function hT(r,e,t,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let p=0;p<e;++p){let u=r[a+p];(Number.isNaN(u)||u>i)&&(i=u)}o[s]=i}return o}var lA=st((r,e)=>Math.max(r,e)),wte=ut(Ao,lA),NL={kernelName:Ao,backendName:"cpu",kernelFunc:wte};var mA=st((r,e)=>Math.min(r,e)),Nte=ut(Po,mA),DL={kernelName:Po,backendName:"cpu",kernelFunc:Nte};var qh=st((r,e)=>r*e),Dte=Rc((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),Sl=ut(Fo,qh,Dte),PL={kernelName:Fo,backendName:"cpu",kernelFunc:Sl};function cA(r,e,t){let n=b.createScalarValue(-1,t);return qh([],e,n,r,t)}function Pte(r){let{inputs:e,backend:t}=r,{x:n}=e;ne(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=cA(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var ML={kernelName:ms,backendName:"cpu",kernelFunc:Pte};var dA=st((r,e)=>r!==e?1:0),Mte=ut(ba,dA,null,"bool"),FL={kernelName:ba,backendName:"cpu",kernelFunc:Mte};function _c(r,e,t,n,o){let s=e.length,a=b.sizeFromShape(e),i=b.computeStrides(e),p=b.computeStrides(o),u=b.getTypedArrayFromDType(t,b.sizeFromShape(o));for(let l=0;l<a;++l){let m=b.indexToLoc(l,s,i),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=b.locToIndex(c,s,p);u[d]=r[l]}return u}function Xt(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;ne(o,"transpose");let a=o.shape.length,i=new Array(a);for(let m=0;m<i.length;m++)i[m]=o.shape[s[m]];let p=n.data.get(o.dataId).values,u=_c(p,o.shape,o.dtype,s,i);return{dataId:n.write(u,i,o.dtype),shape:i,dtype:o.dtype}}var EL={kernelName:Pn,backendName:"cpu",kernelFunc:Xt};function fA(r,e,t,n){let[o,s]=C.computeOutAndReduceShapes(r,n),a=Ft(e,"int32"),i=b.makeZerosTypedArray(b.sizeFromShape(o),a),p=b.sizeFromShape(s);for(let u=0;u<i.length;++u){let l=u*p,m=1;for(let c=0;c<p;++c)m*=t[l+c];i[u]=m}return{outVals:i,outShape:o,outDtype:a}}function Fte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"prod");let i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=C.getAxesPermutation(p,i),l=p,m=o,c=[];u!=null&&(m=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),c.push(m),l=C.getInnerMostAxes(l.length,i));let d=t.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=fA(m.shape,m.dtype,d,l),y=h;return a&&(y=C.expandShapeToKeepDim(h,p)),c.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.makeTensorInfo(y,g,f)}var RL={kernelName:_o,backendName:"cpu",kernelFunc:Fte};function vl(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return b.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),p=b.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),p[0]=r;for(let u=1;u<p.length;u++)p[u]=p[u-1]+t;return p}var hA=kn(r=>1/Math.sqrt(r)),Ete=Ks(zo,hA),LL={kernelName:zo,backendName:"cpu",kernelFunc:Ete};function xu(r,e,t,n,o,s,a,i,p,u){let l=[n/o,o],m=r.values,c=e.values;if(n===0)return xe(t,e.dtype);let d=xe(l,e.dtype);typeof p=="string"||typeof p=="number"?d.values.fill(p):typeof p=="boolean"&&d.values.fill(+p);for(let f=0;f<s;f++){let h=[],g=0;for(let y=0;y<a;y++){let T=m[f*a+y];h.push(T),g+=T*i[y]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let y=0;y<o;y++)u?d.values[g*o+y]+=c[f*o+y]:d.values[g*o+y]=e.rank===0?c[0]:c[f*o+y]}return d}var _L=kn(r=>1/(1+Math.exp(-r))),gA=Fe(Uo,r=>1/(1+Math.exp(-r))),$L={kernelName:Uo,backendName:"cpu",kernelFunc:gA};function Al(r,e,t,n,o){let s=Tt.isSliceContinous(n,e,t),a=b.sizeFromShape(t),i=b.computeStrides(n);if(s){let m=Tt.computeFlatOffset(e,i);return o==="string"?r.slice(m,m+a):r.subarray(m,m+a)}let p=o==="string"?C.fromUint8ToStringArray(r):r,u=xe(n,o,p),l=xe(t,o);for(let m=0;m<l.size;++m){let c=l.indexToLoc(m),d=c.map((f,h)=>f+e[h]);l.set(u.get(...d),...c)}return o==="string"?C.fromStringArrayToUint8(l.values):l.values}function Vs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;ne(o,"slice");let[i,p]=Tt.parseSliceParams(o,s,a);Tt.assertParamsValid(o,i,p);let u=t.data.get(o.dataId).values,l=Al(u,i,p,o.shape,o.dtype);return t.makeTensorInfo(p,o.dtype,l)}var BL={kernelName:gs,backendName:"cpu",kernelFunc:Vs};function gT(r,e,t,n,o,s,a){let i=e[0],p=s[0],u=new Array(p),l=new Array(i),m=e[1];if(p===0){if(i!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=b.getArrayFromDType(t,0),y=b.getArrayFromDType(o,0);return[g,[0,m],y,u,l]}let c=!0,d=0,f=new Array(p).fill(0);for(let g=0;g<i;++g){let y=r[g*m];if(y<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=p)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,p));++f[y],c=c&&y>=d,d=y}let h=!0;for(let g=0;g<p;++g){let y=f[g]===0;u[g]=y,h=h&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,y=n;for(let T=0;T<i;++T)l[T]=T;return[g,[i,m],y,u,l]}else{let g=f[p-1],y=b.getArrayFromDType(t,g*m),T=b.getArrayFromDType(o,g),x=new Array(p).fill(0);for(let I=0;I<i;++I){let k=r[I*m],w=x[k],M=(k===0?0:f[k-1])+w;x[k]++;for(let F=0;F<m;++F)y[M*m+F]=r[I*m+F];T[M]=n[I],l[I]=M}for(let I=0;I<p;++I)if(x[I]===0){let w=I===0?0:f[I-1];y[w*m+0]=I;for(let M=1;M<m;++M)y[w*m+M]=0;T[w]=a}return[y,[g,m],T,u,l]}}function bT(r,e,t,n,o){let s=b.sizeFromShape(n),a=e[0],i=o.length,p=[],u=1,l=-1;for(let g=0;g<i;++g){let y=o[g];if(y===-1){if(l!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,g));l=g,p.push(1)}else{if(y<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(g,y));u*=y,p.push(y)}}if(l!==-1){if(u<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/u);if(u*g!==s)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(n,p));p[l]=g}if(b.sizeFromShape(p)!==s)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(n,p));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*p[g+1]}let h=b.getArrayFromDType(t,a*i);for(let g=0;g<a;++g){let y=0;for(let T=0;T<c;++T)y+=r[g*c+T]*d[T];for(let T=0;T<i;++T)h[g*i+T]=Math.trunc(y/f[T]),y%=f[T]}return[h,[a,i],p]}function $c(r,e,t,n,o,s=!1,a=0){let i=n.length,p=[e[0],r.length/e[0]],u=p[1],m=i>0?o[i-1]+1:0;if(m<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=e.slice();c[0]=m;let d=c.reduce((x,I)=>x*I,1),f=b.getArrayFromDType(t,d);if(i===0)return m>0&&f.fill(a),[f,c];if(m<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,y=0,T=o[h];for(;;){let x=0;if(g<i){if(x=o[g],T===x){++g;continue}if(T>=x)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(T<0||T>=m)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T,m));T>y&&f.fill(a,y*u,T*u);for(let I=h;I<g;++I){let k=n[I];if(k<0||k>=p[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(I,n[I],p[0]));for(let w=0;w<u;w++)f[T*u+w]+=r[k*u+w]}if(s)for(let I=0;I<u;I++)f[T*u+I]/=g-h;if(h=g,++g,y=T+1,T=x,g>i)break}return y<m&&f.fill(a,y*u,m*u),[f,c]}var OL=kn(r=>Math.sqrt(r)),Rte=Fe(Wo,r=>Math.sqrt(r)),zL={kernelName:Wo,backendName:"cpu",kernelFunc:Rte};var bA=st((r,e)=>{let t=r-e;return t*t}),Lte=ut(Ho,bA),GL={kernelName:Ho,backendName:"cpu",kernelFunc:Lte};function yT(r,e,t,n){let o=xe(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let p=0;p<i.length;p++)i[p]=a[p]*t[p]+n[p];o.set(e.get(...i),...a)}return o}var UL=class{constructor(e,t,n,o,s,a){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,a){for(let i=0;i<s;++i){let p=this.getPadWidth(a),u=Math.max(0,p-i),l=Math.max(0,p-(s-(i+1))),m=a-(u+l),c=t+(u>0?0:i-p),d=0;d+=u*this.leftPad.length;for(let T=0;T<m;++T)d+=e[c+T].length;d+=l*this.rightPad.length,d+=(u+l+m-1)*this.separator.length,n[o+i]=new Uint8Array(d);let h=n[o+i],g=0,y=T=>T.forEach(x=>h[g++]=x);for(let T=0;T<u;++T)y(this.leftPad),y(this.separator);for(let T=0;T<m-1;++T)y(e[c+T]),y(this.separator);if(m>0){y(e[c+m-1]);for(let T=0;T<l;++T)y(this.separator),y(this.rightPad)}else{for(let T=0;T<l-1;++T)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let p=t[0];if(p!==0)throw new Error(`First split value must be 0, got ${p}`);for(let u=1;u<o;++u){let l=t[u]>=p;if(l=l&&t[u]<=n,!l)throw new Error(`Invalid split value ${t[u]}, must be in [${p}, ${n}]`);p=t[u]}if(p!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${p}`)}let s=o-1,a=b.getArrayFromDType("int32",o);if(n===0||o===0){let p=new Array(n);for(let u=0;u<=s;++u)a[u]=0;return[p,a]}a[0]=0;for(let p=1;p<=s;++p){let u=t[p]-t[p-1],l=0;this.nGramWidths.forEach(m=>{l+=this.getNumNGrams(u,m)}),this.preserveShort&&u>0&&l===0&&(l=1),a[p]=a[p-1]+l}let i=new Array(a[s]);for(let p=0;p<s;++p){let u=t[p],l=a[p];if(this.nGramWidths.forEach(m=>{let c=t[p+1]-t[p],d=this.getNumNGrams(c,m);this.createNGrams(e,u,i,l,d,m),l+=d}),this.preserveShort&&l===a[p]){let m=t[p+1]-t[p];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(e,u,i,l,d,c)}}return[i,a]}};function TT(r,e,t,n,o,s,a,i){return new UL(t,n,o,s,a,i).compute(r,e)}function _te(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!t||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!t||a.length!==0)&&n.push(a),o=s+1}}function xT(r,e,t){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let c=0;c<n;++c){let d=o.length;_te(r[c],e,t,o);let f=o.length-d;i[c]=f,s+=f,a=Math.max(a,f)}let p=b.getArrayFromDType("int32",s*2),u=new Array(s),l=[n,a],m=0;for(let c=0;c<n;++c)for(let d=0;d<i[c];++d)p[m*2]=c,p[m*2+1]=d,u[m]=o[m],++m;return[p,u,l]}function IT(r,e){let t=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=b.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var yA=st((r,e)=>r-e),$te=Rc((r,e,t,n)=>({real:r-t,imag:e-n})),jh=ut(qo,yA,$te),WL={kernelName:qo,backendName:"cpu",kernelFunc:jh};function CT(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=xe(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let p=0;p<a.length;p++)a[p]=s[p]%r.shape[p];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var Xh=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function KL(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let i=n-t+1,p=e-t+1,u=Math.log(i),l=.5*Math.exp(2*u/3),m=.5*Math.sqrt(u*l*(i-l)/i)*Math.sign(p-i/2),c=Math.max(t,Math.floor(e-p*l/i+m)),d=Math.min(n,Math.floor(e+(i-p)*l/i+m));KL(r,e,c,d)}let o=r[e],s=t,a=n;for(b.swap(r,t,e),Xh(r[n],o)>0&&b.swap(r,t,n);s<a;){for(b.swap(r,s,a),s++,a--;Xh(r[s],o)<0;)s=s+1;for(;Xh(r[a],o)>0;)a=a-1}Xh(r[t],o)===0?b.swap(r,t,a):(a=a+1,b.swap(r,a,n)),a<=e&&(t=a+1),e<=a&&(n=a-1)}}function kT(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],p=b.getTypedArrayFromDType(t,a*n),u=b.getTypedArrayFromDType("int32",a*n);for(let m=0;m<a;m++){let c=m*i,d=r.subarray(c,c+i),f=new Array(d.length);d.forEach((T,x)=>f[x]={value:T,index:x}),n<f.length&&(KL(f,n),f=f.slice(0,n)),o&&f.sort(Xh);let h=m*n,g=p.subarray(h,h+n),y=u.subarray(h,h+n);for(let T=0;T<n;T++)g[T]=f[T].value,y[T]=f[T].index}let l=e.slice();return l[l.length-1]=n,[xe(l,t,p),xe(l,"int32",u)]}function ST(r,e,t,n){let o=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let f=0;f<o;f++)s[0]*=t[f];s[1]=t[o];for(let f=o+1;f<t.length;f++)s[2]*=t[f];let a={},i=new Int32Array(t[o]),p=new gt(s,n,r),u=[],l=s[0]===1&&s[2]===1;for(let f=0;f<t[o];f++){let h;if(l)h=r[f].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let T=0;T<s[2];T++)g.push(p.get(y,f,T));h=g.join(",")}if(a[h]!==void 0)i[f]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[f]=g,u.push(f)}}let m=s.slice();m[1]=Object.keys(a).length;let c=new gt(m,n);u.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)c.set(p.get(g,f,y),g,h,y)});let d=t.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:i}}var Bte="0.0.0";tp("cpu",()=>new Hh,1);var TA=Fe(bo,r=>r>=0?r:Math.exp(r)-1),VL={kernelName:bo,backendName:"cpu",kernelFunc:TA};function xA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;ne([o],"leakyRelu");let a=b.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,p=b.getTypedArrayFromDType("float32",a);for(let u=0;u<i.length;u++)p[u]=i[u]<0?s*i[u]:i[u];return t.makeTensorInfo(o.shape,"float32",p)}var HL={kernelName:ko,backendName:"cpu",kernelFunc:xA};var Ote=st((r,e)=>r<0?e*r:r);function IA(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;ne([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,p]=Ote(n.shape,o.shape,s,a,"float32");return t.makeTensorInfo(p,"float32",i)}var qL={kernelName:Lo,backendName:"cpu",kernelFunc:IA};var CA=Fe($o,r=>Math.max(0,r)),jL={kernelName:$o,backendName:"cpu",kernelFunc:CA};var kA=Fe(Oo,r=>Math.min(Math.max(0,r),6)),XL={kernelName:Oo,backendName:"cpu",kernelFunc:kA};function wl(r,e,t,n,o){if(t==="linear")return Hr({inputs:{x:e},backend:r});if(t==="relu")return CA({inputs:{x:e},backend:r});if(t==="elu")return TA({inputs:{x:e},backend:r});if(t==="relu6")return kA({inputs:{x:e},backend:r});if(t==="prelu")return IA({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return xA({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return gA({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function tt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=b.sizeFromShape(o.shape),i=b.inferFromImplicitShape(s,a),p=b.sizeFromShape(i);b.assert(a===p,()=>`The new shape (${i}) has ${p} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let u=t.data.get(o.dataId);if(u.complexTensorInfos!=null){let l=u.complexTensorInfos.real,m=u.complexTensorInfos.imag;l.shape=i,m.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var YL={kernelName:fs,backendName:"cpu",kernelFunc:tt};function SA(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;ne([o,s],"matMul");let p=o.shape.length,u=s.shape.length,l=a?o.shape[p-2]:o.shape[p-1],m=i?s.shape[u-1]:s.shape[u-2],c=a?o.shape[p-1]:o.shape[p-2],d=i?s.shape[u-2]:s.shape[u-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,l,c]:[g,c,l],k=i?[y,d,m]:[y,m,d],w=tt({inputs:{x:o},backend:t,attrs:{shape:I}}),M=tt({inputs:{x:s},backend:t,attrs:{shape:k}}),F=a?w.shape[1]:w.shape[2],E=a?w.shape[2]:w.shape[1],$=i?M.shape[1]:M.shape[2],G=Math.max(g,y),W=t.data.get(w.dataId).values,V=t.data.get(M.dataId).values,q=b.computeStrides(w.shape),j=b.computeStrides(M.shape),[Y,te,H]=a?[q[0],1,q[1]]:[q[0],q[1],1],[oe,se,ae]=i?[1,j[1],j[0]]:[j[1],1,j[0]],ce=E*$,ue=xe([G,E,$],w.dtype),ye=ue.values,he=t.blockSize;for(let Ce=0;Ce<G;Ce++)for(let we=0;we<E;we+=he)for(let Ee=0;Ee<$;Ee+=he)for(let _e=0;_e<F;_e+=he){let Qe=Math.min(we+he,E),J=Math.min(Ee+he,$),ft=Math.min(_e+he,F);for(let Be=we;Be<Qe;Be++)for(let Mt=Ee;Mt<J;Mt++){let wt=0;for(let lt=_e;lt<ft;lt++){let Zt=Math.min(Ce,g-1)*Y,zt=Math.min(Ce,y-1)*ae,en=W[Zt+Be*te+lt*H],Vt=V[lt*oe+Mt*se+zt];wt+=en*Vt}ye[Ce*ce+(Be*$+Mt)]+=wt}}return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(M),t.makeTensorInfo(x,ue.dtype,ue.values)}var QL={kernelName:io,backendName:"cpu",kernelFunc:SA};function zte(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n,c,d,f,h=[];c=SA({inputs:{a:o,b:s},attrs:{transposeA:p,transposeB:u},backend:t}),a&&(d=Ci({inputs:{a:c,b:a},backend:t}),h.push(c),c=d),l&&(f=wl(t,c,l,i,m),h.push(c),c=f);for(let y of h)t.disposeIntermediateTensorInfo(y);return c}var ZL={kernelName:Cs,backendName:"cpu",kernelFunc:zte};var Gte=Fe(Pi,r=>Math.acos(r)),JL={kernelName:Pi,backendName:"cpu",kernelFunc:Gte};var Ute=Fe(Mi,r=>Math.acosh(r)),e_={kernelName:Mi,backendName:"cpu",kernelFunc:Ute};function Wte(r){let{inputs:e,backend:t}=r,n=e;ne(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=xe(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let p=o[i];for(let u=0;u<a.length;u++)a[u]+=p[u]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var t_={kernelName:oo,backendName:"cpu",kernelFunc:Wte};function Kte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"all");let i=b.parseAxisParam(s,o.shape),p=i,u=C.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=C.getInnerMostAxes(p.length,o.shape.length)),C.assertAxesAreInnerMostDims("all",p,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,p),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x&&k}f[y]=x}u!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(a){let y=C.expandShapeToKeepDim(m,i),T=tt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var r_={kernelName:Fi,backendName:"cpu",kernelFunc:Kte};function Vte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"any");let i=b.parseAxisParam(s,o.shape),p=i,u=C.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=C.getInnerMostAxes(p.length,o.shape.length)),C.assertAxesAreInnerMostDims("any",p,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,p),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x||k}f[y]=x}u!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(a){let y=C.expandShapeToKeepDim(m,i),T=tt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var n_={kernelName:Ei,backendName:"cpu",kernelFunc:Vte};function Hte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMax");let a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Xt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMax",a,p.shape.length);let[l,m]=C.computeOutAndReduceShapes(p.shape,a),c=b.sizeFromShape(l),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(p.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,T=h[y],x=0;for(let I=0;I<f;++I){let k=h[y+I];k>T&&(T=k,x=I)}d[g]=x}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",d)}var o_={kernelName:so,backendName:"cpu",kernelFunc:Hte};function qte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMin");let a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Xt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMin",a,p.shape.length);let[l,m]=C.computeOutAndReduceShapes(p.shape,a),c=b.sizeFromShape(l),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(p.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,T=h[y],x=0;for(let I=0;I<f;++I){let k=h[y+I];k<T&&(T=k,x=I)}d[g]=x}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",d)}var s_={kernelName:ri,backendName:"cpu",kernelFunc:qte};var jte=Fe(Ri,r=>Math.asin(r)),a_={kernelName:Ri,backendName:"cpu",kernelFunc:jte};var Xte=Fe(Li,r=>Math.asinh(r)),i_={kernelName:Li,backendName:"cpu",kernelFunc:Xte};var Yte=Fe(_i,r=>Math.atan(r)),u_={kernelName:_i,backendName:"cpu",kernelFunc:Yte};var Qte=st((r,e)=>Math.atan2(r,e)),Zte=ut(Bi,Qte),p_={kernelName:Bi,backendName:"cpu",kernelFunc:Zte};var Jte=Fe($i,r=>Math.atanh(r)),l_={kernelName:$i,backendName:"cpu",kernelFunc:Jte};function Oc(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,p=o.dilationHeight,u=o.dilationWidth,l=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=xe(o.outShape,t),g=h.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],T=o.outShape[2]*o.outShape[3],x=o.outShape[3];for(let I=0;I<o.batchSize;++I){let k=I*y,w=I*n[0];for(let M=0;M<o.inChannels;++M)for(let F=0;F<o.outHeight;++F){let E=F*a-c,$=Math.max(0,E),G=Math.min(o.inHeight,l+E),W=k+F*T;for(let V=0;V<o.outWidth;++V){let q=V*i-d,j=Math.max(0,q),Y=Math.min(o.inWidth,m+q),te=f,H=0,oe=0;for(let ae=$;ae<G;ae+=p){let ce=w+ae*n[1];for(let ue=j;ue<Y;ue+=u){let ye=ce+ue*n[2],he=r[ye+M];s==="max"&&he>te?te=he:s==="avg"&&(H+=he,oe++)}if(isNaN(te))break}let se=W+V*x+M;g[se]=s==="avg"?H/oe:te}}}return h}function vT(r,e,t,n,o=!1,s=!1){let a=xe(n.outShape,"int32"),i=n.strideHeight,p=n.strideWidth,u=n.dilationHeight,l=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=xe(e,t,r);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let T=0;T<n.outHeight;++T){let x=T*i-d,I=x;for(;I<0;)I+=u;let k=Math.min(n.inHeight,m+x);for(let w=0;w<n.outWidth;++w){let M=w*p-f,F=M;for(;F<0;)F+=l;let E=Math.min(n.inWidth,c+M),$=Number.NEGATIVE_INFINITY,G=-1;for(let W=I;W<k;W+=u){let V=W-x;for(let q=F;q<E;q+=l){let j=q-M,Y=h.get(g,W,q,y);Y>$&&($=Y,o?G=s?((g*n.inHeight+W)*n.inWidth+q)*n.inChannels+y:(W*n.inWidth+q)*n.inChannels+y:G=V*c+j)}}a.set(G,g,T,w,y)}}return a}function AT(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,p=o.strideWidth,u=o.dilationDepth,l=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,T=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=xe(o.outShape,t),I=x.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],w=o.outShape[2]*o.outShape[3]*o.outShape[4],M=o.outShape[3]*o.outShape[4],F=o.outShape[4];for(let E=0;E<o.batchSize;++E){let $=E*k,G=E*n[0];for(let W=0;W<o.inChannels;++W)for(let V=0;V<o.outDepth;++V){let q=V*a-h,j=q;for(;j<0;)j+=u;let Y=Math.min(o.inDepth,c+q),te=$+V*w;for(let H=0;H<o.outHeight;++H){let oe=H*i-g,se=oe;for(;se<0;)se+=l;let ae=Math.min(o.inHeight,d+oe),ce=te+H*M;for(let ue=0;ue<o.outWidth;++ue){let ye=ue*p-y,he=ye;for(;he<0;)he+=m;let Ce=Math.min(o.inWidth,f+ye),we=ce+ue*F,Ee=T,_e=0,Qe=0;for(let ft=j;ft<Y;ft+=u){let Be=G+ft*n[1];for(let Mt=se;Mt<ae;Mt+=l){let wt=Be+Mt*n[2];for(let lt=he;lt<Ce;lt+=m){let Zt=wt+lt*n[3],zt=r[Zt+W];if(s==="max"&&zt>Ee?Ee=zt:s==="avg"&&(_e+=zt,Qe++),isNaN(Ee))break}if(isNaN(Ee))break}if(isNaN(Ee))break}let J=we+W;I[J]=s==="avg"?_e/Qe:Ee}}}}return x}function m_(r,e){let t=xe(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,p=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,m=e.effectiveFilterWidth,c=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){let T=y*n-c,x=T;for(;x<0;)x+=a;let I=Math.min(e.inDepth,u+T);for(let k=0;k<e.outHeight;++k){let w=k*o-d,M=w;for(;M<0;)M+=i;let F=Math.min(e.inHeight,l+w);for(let E=0;E<e.outWidth;++E){let $=E*s-f,G=$;for(;G<0;)G+=p;let W=Math.min(e.inWidth,m+$),V=Number.NEGATIVE_INFINITY,q=-1;for(let j=x;j<I;j+=a){let Y=j-T;for(let te=M;te<F;te+=i){let H=te-w;for(let oe=G;oe<W;oe+=p){let se=oe-$,ae=r.get(h,j,te,oe,g);ae>=V&&(V=ae,q=Y*l*m+H*l+se)}}}t.set(q,h,y,k,E,g)}}}return t}function ere(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;b.assert(C.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=C.computePool2DInfo(o.shape,s,a,u,i,p),m;if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))m=Hr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Oc(c,o.shape,o.dtype,d,l,"avg");m=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var c_={kernelName:ao,backendName:"cpu",kernelFunc:ere};function tre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n;ne(o,"avgPool3d");let l=C.computePool3DInfo(o.shape,s,a,1,i,p,u),m=t.data.get(o.dataId).values,c=AT(m,o.shape,o.dtype,b.computeStrides(o.shape),l,"avg");return t.makeTensorInfo(c.shape,"float32",c.values)}var d_={kernelName:Ru,backendName:"cpu",kernelFunc:tre};function rre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n;ne([o,s],"avgPool3DGrad");let l=C.computePool3DInfo(s.shape,a,i,1,p,u),m=l.strideDepth,c=l.strideHeight,d=l.strideWidth,f=l.filterDepth,h=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,T=l.dilationHeight,x=l.dilationWidth,I=l.effectiveFilterDepth,k=l.effectiveFilterHeight,w=l.effectiveFilterWidth,M=I-1-l.padInfo.front,F=w-1-l.padInfo.left,E=k-1-l.padInfo.top,$=xe(s.shape,"float32"),G=1/(f*h*g),W=t.bufferSync(o);for(let V=0;V<l.batchSize;++V)for(let q=0;q<l.inChannels;++q)for(let j=0;j<l.inDepth;++j)for(let Y=0;Y<l.inHeight;++Y)for(let te=0;te<l.inWidth;++te){let H=j-M,oe=Y-E,se=te-F,ae=0;for(let ce=0;ce<I;ce+=y){let ue=(H+ce)/m;if(!(ue<0||ue>=l.outDepth||Math.floor(ue)!==ue))for(let ye=0;ye<k;ye+=T){let he=(oe+ye)/c;if(!(he<0||he>=l.outHeight||Math.floor(he)!==he))for(let Ce=0;Ce<w;Ce+=x){let we=(se+Ce)/d;if(we<0||we>=l.outWidth||Math.floor(we)!==we)continue;ae+=W.get(V,ue,he,we,q)}}}$.set(ae*G,V,j,Y,te,q)}return t.makeTensorInfo($.shape,$.dtype,$.values)}var f_={kernelName:mm,backendName:"cpu",kernelFunc:rre};function nre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;ne([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=C.computePool2DInfo(a.shape,i,p,1,u),m=l.strideHeight,c=l.strideWidth,d=l.filterHeight,f=l.filterWidth,h=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,T=l.effectiveFilterWidth,x=T-1-l.padInfo.left,I=y-1-l.padInfo.top,k=xe(a.shape,"float32"),w=1/(d*f),M=t.data.get(o.dataId).values,F=xe(o.shape,"float32",M);for(let E=0;E<l.batchSize;++E)for(let $=0;$<l.inChannels;++$)for(let G=0;G<l.inHeight;++G)for(let W=0;W<l.inWidth;++W){let V=G-I,q=W-x,j=0;for(let Y=0;Y<y;Y+=h){let te=(V+Y)/m;if(!(te<0||te>=l.outHeight||Math.floor(te)!==te))for(let H=0;H<T;H+=g){let oe=(q+H)/c;if(oe<0||oe>=l.outWidth||Math.floor(oe)!==oe)continue;j+=F.get(E,te,oe,$)}}k.set(j*w,E,G,W,$)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var h_={kernelName:lm,backendName:"cpu",kernelFunc:nre};function ore(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:p}=e;b.assert(i.shape.length===p.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ne([o,i,p,s,a],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let l=t.data.get(o.dataId).values,m=t.data.get(i.dataId).values,c=t.data.get(p.dataId).values,d=s?t.data.get(s.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(l.length),g=f.length,y=d.length,T=c.length,x=m.length,I=0,k=0,w=0,M=0;for(let F=0;F<l.length;++F)h[F]=f[I++]+(l[F]-m[k++])*d[w++]/Math.sqrt(c[M++]+u),I>=g&&(I=0),k>=x&&(k=0),w>=y&&(w=0),M>=T&&(M=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var g_={kernelName:Io,backendName:"cpu",kernelFunc:ore};function sre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;ne([o],"batchToSpaceND");let i=s.reduce((y,T)=>y*T),p=C.getReshaped(o.shape,s,i),u=C.getPermuted(p.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=tt({inputs:{x:o},backend:t,attrs:{shape:p}}),f=Xt({inputs:{x:d},backend:t,attrs:{perm:u}}),h=tt({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Vs({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var b_={kernelName:is,backendName:"cpu",kernelFunc:sre};function are(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,u=Lc(i,p,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var y_={kernelName:cm,backendName:"cpu",kernelFunc:are};function ire(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var T_={kernelName:dm,backendName:"cpu",kernelFunc:ire};var ure=Fe(Kn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),x_={kernelName:Kn,backendName:"cpu",kernelFunc:ure};var pre=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values;for(let u=0;u<i.length;u++){let l=i[u],m=p[u];n[u]=Math.hypot(l,m)}return t.makeOutput(n,e.shape,"float32")},I_={kernelName:_u,backendName:"cpu",kernelFunc:pre};function ki(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var C_={kernelName:zu,backendName:"cpu",kernelFunc:ki};function fp(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(h=>h.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>b.sizeFromShape(h.shape)>0);if(i.length===1)return Hr({inputs:{x:i[0]},backend:t});let p=i.map(h=>h.shape);if(C.assertParamsConsistent(p,s),i[0].dtype==="complex64"){let h=i.map(I=>Us({inputs:{input:I},backend:t})),g=i.map(I=>ki({inputs:{input:I},backend:t})),y=fp({inputs:h,backend:t,attrs:{axis:s}}),T=fp({inputs:g,backend:t,attrs:{axis:s}}),x=vr({inputs:{real:y,imag:T},backend:t});return h.forEach(I=>t.disposeIntermediateTensorInfo(I)),g.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),x}let u=i.map(h=>{let g=b.sizeFromShape(h.shape.slice(s));return tt({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),l=u.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=C.computeOutShape(u.map(h=>h.shape),1);let m=u[0].shape[0]===1,c=kl(l,a,e[0].dtype,m),d=C.computeOutShape(i.map(h=>h.shape),s),f=t.makeTensorInfo(d,e[0].dtype,c);return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var k_={kernelName:us,backendName:"cpu",kernelFunc:fp};function vA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n;ne([o,s],"conv2d");let m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,y=c.padInfo.left,T=c.padInfo.top,x=c.dataFormat==="channelsLast",I=new gt(c.outShape,o.dtype),k=b.computeStrides(o.shape),w=b.computeStrides(s.shape),M=k[0],F=x?k[1]:k[2],E=x?k[2]:1,$=x?1:k[1],G=I.strides[0],W=x?I.strides[1]:I.strides[2],V=x?I.strides[2]:1,q=x?1:I.strides[1],j=t.data.get(o.dataId).values,Y=t.data.get(s.dataId).values,te=I.values;for(let H=0;H<c.batchSize;++H){let oe=H*M,se=H*G;for(let ae=0;ae<c.outHeight;++ae){let ce=se+ae*W,ue=ae*c.strideHeight-T;for(let ye=0;ye<d;++ye){let he=ue+ye*h;if(he<0||he>=c.inHeight)continue;let Ce=ye*w[0],we=oe+he*F;for(let Ee=0;Ee<c.outWidth;++Ee){let _e=ce+Ee*V,Qe=Ee*c.strideWidth-y;for(let J=0;J<f;++J){let ft=Qe+J*g;if(ft<0||ft>=c.inWidth)continue;let Be=Ce+J*w[1],Mt=we+ft*E,wt=Be;for(let lt=0;lt<c.inChannels;++lt){let Zt=j[Mt+lt*$];for(let zt=0;zt<c.outChannels;++zt)te[_e+zt*q]+=Zt*Y[wt+zt];wt+=c.outChannels}}}}}}return t.makeTensorInfo(I.shape,I.dtype,te)}var S_={kernelName:po,backendName:"cpu",kernelFunc:vA};function lre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n;ne([o,s],"conv2dBackpropFilter");let m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,y=c.dataFormat==="channelsLast",T=new gt(c.filterShape,"float32"),x=c.padInfo.left,I=c.padInfo.top,k=t.data.get(o.dataId).values,w=t.data.get(s.dataId).values,M=new gt(o.shape,o.dtype,k),F=new gt(s.shape,s.dtype,w);for(let E=0;E<h;++E){let $=Math.max(0,Math.ceil((I-E)/d)),G=Math.min(c.outHeight,(c.inHeight+I-E)/d);for(let W=0;W<g;++W){let V=Math.max(0,Math.ceil((x-W)/f)),q=Math.min(c.outWidth,(c.inWidth+x-W)/f);for(let j=0;j<c.inChannels;++j)for(let Y=0;Y<c.outChannels;++Y){let te=0;for(let H=0;H<c.batchSize;++H)for(let oe=$;oe<G;++oe){let se=E+oe*d-I;for(let ae=V;ae<q;++ae){let ce=W+ae*f-x;y?te+=M.get(H,se,ce,j)*F.get(H,oe,ae,Y):te+=M.get(H,j,se,ce)*F.get(H,Y,oe,ae)}}T.set(te,E,W,j,Y)}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var v_={kernelName:fm,backendName:"cpu",kernelFunc:lre};function mre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n;ne([o,s],"conv2dBackpropInput");let m=b.computeStrides(s.shape),c=b.computeStrides(o.shape),d=C.convertConv2DDataFormat(u),f=C.computeConv2DInfo(a,s.shape,i,1,p,l,!1,d),h=new gt(f.inShape,"float32"),g=h.values,y=t.data.get(o.dataId).values,T=t.data.get(s.dataId).values,[x,I,k]=m,{batchSize:w,filterHeight:M,filterWidth:F,inChannels:E,inHeight:$,inWidth:G,outChannels:W,outHeight:V,outWidth:q,strideHeight:j,strideWidth:Y}=f;d=f.dataFormat;let te=M-1-f.padInfo.top,H=F-1-f.padInfo.left,oe=d==="channelsLast",se=h.strides[0],ae=oe?h.strides[1]:h.strides[2],ce=oe?h.strides[2]:1,ue=oe?1:h.strides[1],ye=c[0],he=oe?c[1]:c[2],Ce=oe?c[2]:1,we=oe?1:c[1];for(let Ee=0;Ee<w;++Ee)for(let _e=0;_e<E;++_e)for(let Qe=0;Qe<$;++Qe){let J=Qe-te,ft=Math.max(0,Math.ceil(J/j)),Be=Math.min(V,(M+J)/j);for(let Mt=0;Mt<G;++Mt){let wt=Mt-H,lt=Math.max(0,Math.ceil(wt/Y)),Zt=Math.min(q,(F+wt)/Y),zt=0;for(let Vt=ft;Vt<Be;++Vt){let Ys=Vt*j-J;for(let $r=lt;$r<Zt;++$r){let tn=$r*Y-wt,rn=ye*Ee+he*Vt+Ce*$r,jr=x*(M-1-Ys)+I*(F-1-tn)+k*_e;for(let ns=0;ns<W;++ns){let zn=y[rn+we*ns],Qs=T[jr+ns];zt+=zn*Qs}}}let en=se*Ee+ae*Qe+ce*Mt+ue*_e;g[en]=zt}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var A_={kernelName:lo,backendName:"cpu",kernelFunc:mre};function cre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n;ne([o,s],"conv3d");let u=C.computeConv3DInfo(o.shape,s.shape,a,p,i),{filterDepth:l,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=u,y=g.front,T=g.left,x=g.top,I=new gt(u.outShape,o.dtype),k=t.data.get(o.dataId).values,w=t.data.get(s.dataId).values,M=I.values,F=b.computeStrides(o.shape),E=b.computeStrides(s.shape);for(let $=0;$<u.batchSize;++$){let G=$*F[0],W=$*I.strides[0];for(let V=0;V<u.outDepth;++V){let q=W+V*I.strides[1],j=V*u.strideDepth-y;for(let Y=0;Y<l;++Y){let te=j+Y*d;if(te<0||te>=u.inDepth)continue;let H=Y*E[0],oe=G+te*F[1];for(let se=0;se<u.outHeight;++se){let ae=q+se*I.strides[2],ce=se*u.strideHeight-x;for(let ue=0;ue<m;++ue){let ye=ce+ue*f;if(ye<0||ye>=u.inHeight)continue;let he=H+ue*E[1],Ce=oe+ye*F[2];for(let we=0;we<u.outWidth;++we){let Ee=ae+we*u.outChannels,_e=we*u.strideWidth-T;for(let Qe=0;Qe<c;++Qe){let J=_e+Qe*h;if(J<0||J>=u.inWidth)continue;let ft=he+Qe*E[2],Be=Ce+J*u.inChannels,Mt=ft;for(let wt=0;wt<u.inChannels;++wt){let lt=k[Be+wt];for(let Zt=0;Zt<u.outChannels;++Zt)M[Ee+Zt]+=lt*w[Mt+Zt];Mt+=u.outChannels}}}}}}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}var w_={kernelName:$u,backendName:"cpu",kernelFunc:cre};function dre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:p}=n;ne([o,s],"conv3dBackpropFilterV2");let u=b.computeStrides(o.shape),l=b.computeStrides(s.shape),m=C.computeConv3DInfo(o.shape,p,a,1,i),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,y=m.filterWidth,T=new gt(m.filterShape,"float32"),x=T.values,[I,k,w,M]=T.strides,F=t.data.get(s.dataId).values,[E,$,G,W]=l,V=t.data.get(o.dataId).values,[q,j,Y,te]=u,H=m.padInfo.front,oe=m.padInfo.left,se=m.padInfo.top;for(let ae=0;ae<h;++ae){let ce=Math.max(0,Math.ceil((H-ae)/c)),ue=Math.min(m.outDepth,(m.inDepth+H-ae)/c),ye=ae*I;for(let he=0;he<g;++he){let Ce=Math.max(0,Math.ceil((se-he)/d)),we=Math.min(m.outHeight,(m.inHeight+se-he)/d),Ee=he*k+ye;for(let _e=0;_e<y;++_e){let Qe=Math.max(0,Math.ceil((oe-_e)/f)),J=Math.min(m.outWidth,(m.inWidth+oe-_e)/f),ft=_e*w+Ee;for(let Be=0;Be<m.inChannels;++Be){let Mt=Be*M+ft;for(let wt=0;wt<m.outChannels;++wt){let lt=0;for(let Zt=0;Zt<m.batchSize;++Zt){let zt=Zt*q,en=Zt*E;for(let Vt=ce;Vt<ue;++Vt){let $r=(ae+Vt*c-H)*j+zt,tn=Vt*$+en;for(let rn=Ce;rn<we;++rn){let ns=(he+rn*d-se)*Y+$r,zn=rn*G+tn;for(let Qs=Qe;Qs<J;++Qs){let Pu=(_e+Qs*f-oe)*te+ns,Ip=Qs*W+zn;lt+=V[Pu+Be]*F[Ip+wt]}}}}x[Mt+wt]=lt}}}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var N_={kernelName:hm,backendName:"cpu",kernelFunc:dre};function fre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:p}=n;ne([o],"conv3dBackpropInputV2");let u=b.computeStrides(o.shape),l=b.computeStrides(s.shape),m=C.computeConv3DInfo(p,s.shape,i,1,a),c=new gt(m.inShape,"float32"),d=c.values,[f,h,g,y]=c.strides,T=t.data.get(o.dataId).values,[x,I,k,w]=u,M=t.data.get(s.dataId).values,[F,E,$,G]=l,{batchSize:W,filterDepth:V,filterHeight:q,filterWidth:j,inChannels:Y,inDepth:te,inHeight:H,inWidth:oe,outChannels:se,outDepth:ae,outHeight:ce,outWidth:ue,strideDepth:ye,strideHeight:he,strideWidth:Ce}=m,we=V-1-m.padInfo.front,Ee=q-1-m.padInfo.top,_e=j-1-m.padInfo.left;for(let Qe=0;Qe<W;++Qe)for(let J=0;J<Y;++J)for(let ft=0;ft<te;++ft){let Be=ft-we,Mt=Math.max(0,Math.ceil(Be/ye)),wt=Math.min(ae,(V+Be)/ye);for(let lt=0;lt<H;++lt){let Zt=lt-Ee,zt=Math.max(0,Math.ceil(Zt/he)),en=Math.min(ce,(q+Zt)/he);for(let Vt=0;Vt<oe;++Vt){let Ys=Vt-_e,$r=Math.max(0,Math.ceil(Ys/Ce)),tn=Math.min(ue,(j+Ys)/Ce),rn=0;for(let jr=Mt;jr<wt;++jr){let ns=jr*ye-Be;for(let zn=zt;zn<en;++zn){let Qs=zn*he-Zt;for(let os=$r;os<tn;++os){let Pu=os*Ce-Ys,Ip=x*Qe+I*jr+k*zn+w*os,Vl=F*(V-1-ns)+E*(q-1-Qs)+$*(j-1-Pu)+G*J;for(let xr=0;xr<se;++xr){let Hl=T[Ip+xr],ql=M[Vl+xr];rn+=Hl*ql}}}}d[f*Qe+h*ft+g*lt+y*Vt+J]=rn}}}return t.makeTensorInfo(c.shape,c.dtype,c.values)}var D_={kernelName:gm,backendName:"cpu",kernelFunc:fre};var hre=Fe(mo,r=>Math.cos(r)),P_={kernelName:mo,backendName:"cpu",kernelFunc:hre};var gre=Fe(co,r=>Math.cosh(r)),M_={kernelName:co,backendName:"cpu",kernelFunc:gre};function bre(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:p,extrapolationValue:u}=n,[l,m,c,d]=o.shape,f=s.shape[0],[h,g]=i,y=xe([f,h,g,d],"float32"),T=t.data.get(s.dataId).values,x=t.data.get(a.dataId).values,I=t.data.get(o.dataId).values,k=b.computeStrides(o.shape),w=b.computeStrides(y.shape);for(let M=0;M<f;M++){let F=M*4,E=T[F],$=T[F+1],G=T[F+2],W=T[F+3],V=x[M];if(V>=l)continue;let q=h>1?(G-E)*(m-1)/(h-1):0,j=g>1?(W-$)*(c-1)/(g-1):0;for(let Y=0;Y<h;Y++){let te=h>1?E*(m-1)+Y*q:.5*(E+G)*(m-1);if(te<0||te>m-1){for(let H=0;H<g;H++)for(let oe=0;oe<d;oe++){let se=oe+H*w[2]+Y*w[1]+M*w[0];y.values[se]=u}continue}if(p==="bilinear"){let H=Math.floor(te),oe=Math.ceil(te),se=te-H;for(let ae=0;ae<g;ae++){let ce=g>1?$*(c-1)+ae*j:.5*($+W)*(c-1);if(ce<0||ce>c-1){for(let Ce=0;Ce<d;Ce++){let we=Ce+ae*w[2]+Y*w[1]+M*w[0];y.values[we]=u}continue}let ue=Math.floor(ce),ye=Math.ceil(ce),he=ce-ue;for(let Ce=0;Ce<d;Ce++){let we=Ce+ue*k[2]+H*k[1]+V*k[0],Ee=I[we];we=Ce+ye*k[2]+H*k[1]+V*k[0];let _e=I[we];we=Ce+ue*k[2]+oe*k[1]+V*k[0];let Qe=I[we];we=Ce+ye*k[2]+oe*k[1]+V*k[0];let J=I[we],ft=Ee+(_e-Ee)*he,Be=Qe+(J-Qe)*he;we=Ce+ae*w[2]+Y*w[1]+M*w[0],y.values[we]=ft+(Be-ft)*se}}}else for(let H=0;H<g;++H){let oe=g>1?$*(c-1)+H*j:.5*($+W)*(c-1);if(oe<0||oe>c-1){for(let ce=0;ce<d;ce++){let ue=ce+H*w[2]+Y*w[1]+M*w[0];y.values[ue]=u}continue}let se=Math.round(oe),ae=Math.round(te);for(let ce=0;ce<d;ce++){let ue=ce+se*k[2]+ae*k[1]+V*k[0],ye=ce+H*w[2]+Y*w[1]+M*w[0];y.values[ye]=I[ue]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var F_={kernelName:ia,backendName:"cpu",kernelFunc:bre};function yre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;ne(o,"cumprod");let p=C.getAxesPermutation([s],o.shape.length),u=o;p!=null&&(u=Xt({inputs:{x:o},backend:t,attrs:{perm:p}}));let l=C.getInnerMostAxes(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);let m=Ft(u.dtype,"int32"),c=b.makeOnesTypedArray(b.sizeFromShape(u.shape),m),d=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],h=i?(y,T)=>y+f-T-1:(y,T)=>y+T;for(let y=0;y<d.length;y+=f)for(let T=0;T<f;T++){let x=h(y,T);if(T===0)c[x]=a?1:d[x];else{let I=h(y,T-1);c[x]=a?d[I]*c[I]:d[x]*c[I]}}let g=t.makeTensorInfo(u.shape,m,c);if(p!=null){let y=C.getUndoAxesPermutation(p),T=Xt({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),T}return g}var E_={kernelName:aa,backendName:"cpu",kernelFunc:yre};function Tre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;ne(o,"cumsum");let p=C.getAxesPermutation([s],o.shape.length),u=o;p!=null&&(u=Xt({inputs:{x:o},backend:t,attrs:{perm:p}}));let l=C.getInnerMostAxes(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);let m=Ft(u.dtype,"int32"),c=b.makeZerosTypedArray(b.sizeFromShape(u.shape),m),d=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],h=i?(y,T)=>y+f-T-1:(y,T)=>y+T;for(let y=0;y<d.length;y+=f)for(let T=0;T<f;T++){let x=h(y,T);if(T===0)c[x]=a?0:d[x];else{let I=h(y,T-1);c[x]=a?d[I]+c[I]:d[x]+c[I]}}let g=t.makeTensorInfo(u.shape,m,c);if(p!=null){let y=C.getUndoAxesPermutation(p),T=Xt({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),T}return g}var R_={kernelName:fo,backendName:"cpu",kernelFunc:Tre};function xre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let p=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Lc(p,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let p=t.bufferSync(o),u=t.bufferSync(s),l=mT(p,u,a,i);return t.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var L_={kernelName:bm,backendName:"cpu",kernelFunc:xre};function Ire(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;b.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],p=o.shape[1],u=o.shape[2],l=o.shape[3],m=p*s,c=u*s,d=l/(s*s),f=t.data.get(o.dataId).values,h=new Float32Array(i*m*c*d),g=0;for(let y=0;y<i;++y)for(let T=0;T<m;++T){let x=Math.floor(T/s),I=T%s;for(let k=0;k<c;++k){let w=Math.floor(k/s),M=k%s,F=(I*s+M)*d;for(let E=0;E<d;++E){let G=E+F+l*(w+u*(x+p*y));h[g++]=f[G]}}}return t.makeTensorInfo([i,m,c,d],o.dtype,h)}var __={kernelName:ua,backendName:"cpu",kernelFunc:Ire};function AA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n;ne([o,s],"depthwiseConv2DNative");let l=b.computeStrides(o.shape),m=b.computeStrides(s.shape),c=p;c==null&&(c=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,u,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:y,padInfo:T}=d,x=T.left,I=T.top,k=d.outChannels/d.inChannels,w=new gt(d.outShape,o.dtype),M=t.data.get(o.dataId).values,F=t.data.get(s.dataId).values,E=w.values;for(let $=0;$<d.batchSize;++$){let G=$*l[0],W=$*w.strides[0];for(let V=0;V<d.outHeight;++V){let q=W+V*w.strides[1],j=V*d.strideHeight-I;for(let Y=0;Y<f;++Y){let te=j+Y*g;if(te<0||te>=d.inHeight)continue;let H=Y*m[0],oe=G+te*l[1];for(let se=0;se<d.outWidth;++se){let ae=q+se*w.strides[2],ce=se*d.strideWidth-x;for(let ue=0;ue<h;++ue){let ye=ce+ue*y;if(ye<0||ye>=d.inWidth)continue;let he=H+ue*m[1],Ce=oe+ye*d.inChannels,we=ae,Ee=he;for(let _e=0;_e<d.inChannels;++_e){let Qe=M[Ce+_e];for(let J=0;J<k;++J)E[we+J]+=Qe*F[Ee+J];we+=k,Ee+=k}}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}var $_={kernelName:ho,backendName:"cpu",kernelFunc:AA};function Cre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n;ne([o,s],"depthwiseConv2dNativeBackpropFilter");let m=C.computeConv2DInfo(o.shape,l,a,i,p,u,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new gt(m.filterShape,"float32"),y=m.padInfo.left,T=m.padInfo.top,x=m.outChannels/m.inChannels,I=t.data.get(o.dataId).values,k=new gt(o.shape,o.dtype,I),w=t.data.get(s.dataId).values,M=new gt(s.shape,s.dtype,w);for(let F=0;F<f;++F){let E=Math.max(0,Math.ceil((T-F)/c)),$=Math.min(m.outHeight,(m.inHeight+T-F)/c);for(let G=0;G<h;++G){let W=Math.max(0,Math.ceil((y-G)/d)),V=Math.min(m.outWidth,(m.inWidth+y-G)/d);for(let q=0;q<m.outChannels;++q){let j=Math.trunc(q/x),Y=q%x,te=0;for(let H=0;H<m.batchSize;++H)for(let oe=E;oe<$;++oe){let se=F+oe*c-T;for(let ae=W;ae<V;++ae){let ce=G+ae*d-y;te+=k.get(H,se,ce,j)*M.get(H,oe,ae,q)}}g.set(te,F,G,j,Y)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var B_={kernelName:ym,backendName:"cpu",kernelFunc:Cre};function kre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n;ne([o,s],"depthwiseConv2DNativeBackpropInput");let m=b.computeStrides(o.shape),c=b.computeStrides(s.shape),d=C.computeConv2DInfo(l,s.shape,a,i,p,u,!0),f=new gt(d.inShape,"float32"),h=f.values,[g,y,T]=f.strides,x=t.data.get(o.dataId).values,[I,k,w]=m,M=t.data.get(s.dataId).values,[F,E,$]=c,{batchSize:G,filterHeight:W,filterWidth:V,inChannels:q,inHeight:j,inWidth:Y,outChannels:te,outHeight:H,outWidth:oe,strideHeight:se,strideWidth:ae}=d,ce=W-1-d.padInfo.top,ue=V-1-d.padInfo.left,ye=te/q;for(let he=0;he<G;++he)for(let Ce=0;Ce<q;++Ce)for(let we=0;we<j;++we){let Ee=we-ce,_e=Math.max(0,Math.ceil(Ee/se)),Qe=Math.min(H,(W+Ee)/se);for(let J=0;J<Y;++J){let ft=J-ue,Be=Math.max(0,Math.ceil(ft/ae)),Mt=Math.min(oe,(V+ft)/ae),wt=0;for(let lt=_e;lt<Qe;++lt){let Zt=lt*se-Ee;for(let zt=Be;zt<Mt;++zt){let en=zt*ae-ft,Vt=I*he+k*lt+w*zt,Ys=F*(W-1-Zt)+E*(V-1-en)+$*Ce;for(let $r=0;$r<ye;++$r){let tn=Ce*ye+$r,rn=x[Vt+tn],jr=M[Ys+$r];wt+=rn*jr}}}h[g*he+y*we+T*J+Ce]=wt}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}var O_={kernelName:Tm,backendName:"cpu",kernelFunc:kre};function Sre(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=xe([o,o],n.dtype),i=a.values;for(let u=0;u<s.length;u++)i[u*o+u]=s[u];let p=[...n.shape,...n.shape];return t.makeTensorInfo(p,a.dtype,a.values)}var z_={kernelName:xm,backendName:"cpu",kernelFunc:Sre};var G_={kernelName:Bu,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,p=e,u=p.data.get(n.dataId).values,l=n.shape.length,m=p.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:y,outWidth:T,padInfo:x,strideHeight:I,strideWidth:k,filterHeight:w,filterWidth:M,dilationHeight:F,dilationWidth:E,outShape:$}=C.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),G=b.sizeFromShape($),W=$.length,V=b.getArrayFromDType(n.dtype,G);for(let j=0;j<d;++j)for(let Y=0;Y<y;++Y){let te=Y*I-x.top;for(let H=0;H<T;++H){let oe=H*k-x.left;for(let se=0;se<g;++se){let ae=Number.MIN_SAFE_INTEGER;for(let ue=0;ue<w;++ue){let ye=te+ue*F;if(ye>=0&&ye<f)for(let he=0;he<M;++he){let Ce=oe+he*E;if(Ce>=0&&Ce<h){let we=b.locToIndex([j,ye,Ce,se],l,b.computeStrides(n.shape)),Ee=b.locToIndex([ue,he,se],c,b.computeStrides(o.shape)),_e=u[we]+m[Ee];_e>ae&&(ae=_e)}}}let ce=b.locToIndex([j,Y,H,se],W,b.computeStrides($));V[ce]=ae}}}return{dataId:p.write(b.toTypedArray(V,n.dtype),$,n.dtype),shape:$,dtype:n.dtype}}};var U_={kernelName:xd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:p}=t,u=e,l=b.toNestedArray(n.shape,u.data.get(n.dataId).values),m=b.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:w,dilationHeight:M,dilationWidth:F,outShape:E}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",p);b.assert(s.rank===E.length,()=>`Error in ${xd}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let $=b.toNestedArray(E,u.data.get(s.dataId).values),G=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let V=0;V<c;++V)for(let q=0;q<g;++q){let j=q*x-T.top;for(let Y=0;Y<y;++Y){let te=Y*I-T.left;for(let H=0;H<h;++H){let oe=Number.MIN_SAFE_INTEGER,se=0,ae=0;for(let ce=0;ce<k;++ce){let ue=j+ce*M;if(ue>=0&&ue<d)for(let ye=0;ye<w;++ye){let he=te+ye*F;if(he>=0&&he<f){let Ce=l[V][ue][he][H]+m[ce][ye][H];Ce>oe&&(oe=Ce,se=ce,ae=ye)}}}G[se][ae][H]+=$[V][q][Y][H]}}}return{dataId:u.write(b.toTypedArray(G,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var W_={kernelName:Td,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:p}=t,u=e,l=b.toNestedArray(n.shape,u.data.get(n.dataId).values),m=b.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:w,dilationHeight:M,dilationWidth:F,outShape:E}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",p);b.assert(s.rank===E.length,()=>`Error in ${Td}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let $=b.toNestedArray(E,u.data.get(s.dataId).values),G=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let V=0;V<c;++V)for(let q=0;q<g;++q){let j=q*x-T.top;for(let Y=0;Y<y;++Y){let te=Y*I-T.left;for(let H=0;H<h;++H){let oe=Number.MIN_SAFE_INTEGER,se=j<0?0:j,ae=te<0?0:te;for(let ce=0;ce<k;++ce){let ue=j+ce*M;if(ue>=0&&ue<d)for(let ye=0;ye<w;++ye){let he=te+ye*F;if(he>=0&&he<f){let Ce=l[V][ue][he][H]+m[ce][ye][H];Ce>oe&&(oe=Ce,se=ue,ae=he)}}}G[V][se][ae][H]+=$[V][q][Y][H]}}}return{dataId:u.write(b.toTypedArray(G,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Iu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"sum");let i;o.dtype==="bool"?i=Ws({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=Hr({inputs:{x:o},backend:t});let p=i.shape.length,u=b.parseAxisParam(s,i.shape),l=C.getAxesPermutation(u,p),m=u,c=i;l!=null&&(c=Xt({inputs:{x:i},backend:t,attrs:{perm:l}}),m=C.getInnerMostAxes(m.length,p)),C.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=C.computeOutAndReduceShapes(c.shape,m),h=C.upcastType(c.dtype,"int32"),g=Ec(t,d,h),y=b.sizeFromShape(f),T=t.data.get(g.dataId).values,x=t.data.get(c.dataId).values;for(let I=0;I<T.length;++I){let k=I*y,w=0;for(let M=0;M<y;++M)w+=x[k+M];T[I]=w}if(a){let I=C.expandShapeToKeepDim(g.shape,u),k=g;g=tt({inputs:{x:g},backend:t,attrs:{shape:I}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(i),l!=null&&t.disposeIntermediateTensorInfo(c),g}var K_={kernelName:Ko,backendName:"cpu",kernelFunc:Iu};function vre(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:p}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=C.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,p[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=Xt({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=tt({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=Sl({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Iu({inputs:{x:c},backend:t,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var V_={kernelName:Ou,backendName:"cpu",kernelFunc:vre};function Are(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;ne([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let p=0;p<a.length;++p){let u=a[p];u>=1?s[p]=i[p]:s[p]=i[p]*(u+1)}return t.makeTensorInfo(o.shape,"float32",s)}var H_={kernelName:Im,backendName:"cpu",kernelFunc:Are};var wre=C.ERF_P,Nre=C.ERF_A1,Dre=C.ERF_A2,Pre=C.ERF_A3,Mre=C.ERF_A4,Fre=C.ERF_A5,Ere=Fe(Oi,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+wre*t);return e*(1-((((Fre*n+Mre)*n+Pre)*n+Dre)*n+Nre)*n*Math.exp(-t*t))}),q_={kernelName:Oi,backendName:"cpu",kernelFunc:Ere};function zc(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),p=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+s+1),i.splice(p,0,1),tt({inputs:{x:o},backend:t,attrs:{shape:i}})}var j_={kernelName:ps,backendName:"cpu",kernelFunc:zc};var Rre=st((r,e)=>r/e),Yh=ut(go,Rre),Qh={kernelName:go,backendName:"cpu",kernelFunc:Yh};function wT(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,p=a.complexTensorInfos.imag,u=[o,s],l=b.sizeFromShape(u),m=b.getTypedArrayFromDType("float32",l),c=b.getTypedArrayFromDType("float32",l);for(let g=0;g<o;g++){let y=Vs({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=Vs({inputs:{x:p},backend:t,attrs:{begin:[g,0],size:[1,s]}}),x=vr({inputs:{real:y,imag:T},backend:t}),{real:I,imag:k}=Lre(x,e,t),w=C.mergeRealAndImagArrays(I,k);for(let M=0;M<s;M++){let F=C.getComplexWithIndex(w,M);m[g*s+M]=F.real,c[g*s+M]=F.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(x)}let d=t.makeTensorInfo(u,"float32",m),f=t.makeTensorInfo(u,"float32",c),h=vr({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),h}function Lre(r,e,t){let n=b.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(_re(n)){let i=wA(s,a,n,e,t),p=[r.shape[0],r.shape[1]];if(e){let u=t.makeTensorInfo(p,"float32",i.real),l=t.makeTensorInfo(p,"float32",i.imag),m=t.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),c=Hr({inputs:{x:m},backend:t}),d=Qh.kernelFunc({inputs:{a:u,b:m},backend:t}),f=Qh.kernelFunc({inputs:{a:l,b:c},backend:t}),h=t.data.get(d.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return i}else{let i=C.mergeRealAndImagArrays(s,a),p=$re(i,n,e);return C.splitRealAndImagArrays(p)}}function _re(r){return(r&r-1)===0}function wA(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=C.mergeRealAndImagArrays(r,e),a=t/2,i=C.complexWithEvenIndex(s),p=i.real,u=i.imag,l=[p.length],m=o.makeTensorInfo(l,"float32",p),c=o.makeTensorInfo(l,"float32",u),d=vr({inputs:{real:m,imag:c},backend:o}),f=C.complexWithOddIndex(s),h=f.real,g=f.imag,y=[h.length],T=o.makeTensorInfo(y,"float32",h),x=o.makeTensorInfo(y,"float32",g),I=vr({inputs:{real:T,imag:x},backend:o}),k=wA(p,u,a,n,o),w=k.real,M=k.imag,F=[w.length],E=o.makeTensorInfo(F,"float32",w),$=o.makeTensorInfo(F,"float32",M),G=vr({inputs:{real:E,imag:$},backend:o}),W=wA(h,g,a,n,o),V=W.real,q=W.imag,j=[V.length],Y=o.makeTensorInfo(j,"float32",V),te=o.makeTensorInfo(j,"float32",q),H=vr({inputs:{real:Y,imag:te},backend:o}),oe=C.exponents(t,n),se=[oe.real.length],ae=o.makeTensorInfo(se,"float32",oe.real),ce=o.makeTensorInfo(se,"float32",oe.imag),ue=vr({inputs:{real:ae,imag:ce},backend:o}),ye=Sl({inputs:{a:ue,b:H},backend:o}),he=Ci({inputs:{a:G,b:ye},backend:o}),Ce=jh({inputs:{a:G,b:ye},backend:o}),we=Us({inputs:{input:he},backend:o}),Ee=Us({inputs:{input:Ce},backend:o}),_e=ki({inputs:{input:he},backend:o}),Qe=ki({inputs:{input:Ce},backend:o}),J=fp({inputs:[we,Ee],backend:o,attrs:{axis:0}}),ft=fp({inputs:[_e,Qe],backend:o,attrs:{axis:0}}),Be=o.data.get(J.dataId).values,Mt=o.data.get(ft.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(G),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(te),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(ce),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(ye),o.disposeIntermediateTensorInfo(he),o.disposeIntermediateTensorInfo(Ce),o.disposeIntermediateTensorInfo(we),o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(Ee),o.disposeIntermediateTensorInfo(Qe),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(ft),{real:Be,imag:Mt}}function $re(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let p=C.exponent(o*i,e,t),u=C.getComplexWithIndex(r,i);s+=u.real*p.real-u.imag*p.imag,a+=u.real*p.imag+u.imag*p.real}t&&(s/=e,a/=e),C.assignToTypedArray(n,s,a,o)}return n}function Bre(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),p=wT(i,!1,t),u=tt({inputs:{x:p},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(p),u}var X_={kernelName:Cm,backendName:"cpu",kernelFunc:Bre};function Zh(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||b.inferDtype(o),i=b.getArrayFromDType(a,b.sizeFromShape(n));return Ore(i,o,a),e.makeTensorInfo(n,a,i)}var Y_={kernelName:ni,backendName:"cpu",kernelFunc:Zh};function Ore(r,e,t){r.fill(e)}var Q_={kernelName:ma,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[a,i,p,u]=n.shape,l=o.data.get(n.dataId).values;for(let c=0;c<a;c++){let d=c*p*i*u;for(let f=0;f<i;f++){let h=f*(p*u);for(let g=0;g<p;g++){let y=g*u;for(let T=0;T<u;T++){let x=Math.round(p-g-1),I=d+h+y+T,k=l[I];if(x>=0&&x<p){let w=x*u,M=d+h+w+T;k=l[M]}s[I]=k}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var zre=st((r,e)=>Math.floor(r/e)),Gre=ut(xo,zre,null,"int32"),Z_={kernelName:xo,backendName:"cpu",kernelFunc:Gre};function Ure(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=vA({inputs:{x:o,filter:s},backend:t,attrs:{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;if(l==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){let y=tt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});h=Ci({inputs:{a:h,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else h=Ci({inputs:{a:h,b:a},backend:t});t.disposeIntermediateTensorInfo(g)}if(d){let g=h;if(l==="NCHW"&&d==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let y=tt({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});h=wl(t,h,d,y,f),t.disposeIntermediateTensorInfo(y)}else h=wl(t,h,d,i,f);t.disposeIntermediateTensorInfo(g)}return h}var J_={kernelName:ks,backendName:"cpu",kernelFunc:Ure};function Wre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=AA({inputs:{x:o,filter:s},backend:t,attrs:{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=Ci({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=wl(t,h,d,i,f),t.disposeIntermediateTensorInfo(g)}return h}var e$={kernelName:Ss,backendName:"cpu",kernelFunc:Wre};function Kre(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=b.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[p,u,l,m]=C.prepareAndValidate(n,o);if(u===0)return t.makeTensorInfo(p,n.dtype,[]);let c=t.data.get(o.dataId).values,d=t.bufferSync(n),f=cT(c,d,n.dtype,u,i,l,m,n.shape,s);return t.makeTensorInfo(p,n.dtype,f.values)}var t$={kernelName:ca,backendName:"cpu",kernelFunc:Kre};function Vre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;ne([o,s],"gatherV2");let p=b.parseAxisParam(a,o.shape)[0],u=t.data.get(s.dataId).values,l=o.shape[p];for(let I=0;I<u.length;++I){let k=u[I];b.assert(k<=l-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${l-1}]`)}let m=i;i==null&&(m=0);let c=b.sizeFromShape(s.shape),d=C.segment_util.collectGatherOpShapeInfo(o,s,p,m),f=tt({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=tt({inputs:{x:s},backend:t,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],y=t.bufferSync(h),T=t.bufferSync(f),x=dT(T,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(d.outputShape,x.dtype,x.values)}var r$={kernelName:ls,backendName:"cpu",kernelFunc:Vre};function Hre(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),p=wT(i,!0,t),u=tt({inputs:{x:p},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(p),u}var n$={kernelName:km,backendName:"cpu",kernelFunc:Hre};var qre=Fe(zi,r=>Number.isFinite(r)?1:0,"bool"),o$={kernelName:zi,backendName:"cpu",kernelFunc:qre};var jre=Fe(Gi,r=>Math.abs(r)===1/0?1:0,"bool"),s$={kernelName:Gi,backendName:"cpu",kernelFunc:jre};var Xre=Fe(Ui,r=>Number.isNaN(r)?1:0,"bool"),a$={kernelName:Ui,backendName:"cpu",kernelFunc:Xre};function Yre(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=fT(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var i$={kernelName:Sm,backendName:"cpu",kernelFunc:Yre};var Qre=Fe(Wi,r=>Math.log1p(r)),u$={kernelName:Wi,backendName:"cpu",kernelFunc:Qre};var Zre=st((r,e)=>r&&e),Jre=ut(ga,Zre,null,"bool"),p$={kernelName:ga,backendName:"cpu",kernelFunc:Jre};var ene=Fe(Ki,r=>r?0:1,"bool"),l$={kernelName:Ki,backendName:"cpu",kernelFunc:ene};var tne=st((r,e)=>r||e),rne=ut(Mp,tne,null,"bool"),m$={kernelName:Mp,backendName:"cpu",kernelFunc:rne};function nne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:p}=n;ne(o,"LRN");let u=o.shape[3],l=u-1,m=t.data.get(o.dataId).values,c=b.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%u,y=h-g+Math.max(0,g-s),T=h-g+Math.min(g+s,l),x=0;for(;y<=T;y++){let I=m[y];x+=I*I}return x}for(let h=0;h<c;h++){let g=f(h),y=m[h]*Math.pow(a+i*g,-p);d[h]=y}return t.makeTensorInfo(o.shape,o.dtype,d)}var c$={kernelName:Gu,backendName:"cpu",kernelFunc:nne};function one(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:p,alpha:u,beta:l}=n;ne(a,"LRNGrad");let m=b.sizeFromShape(a.shape),c=a.shape[3],d=t.data.get(a.dataId).values,f=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(m),y=m;for(let T=0;T<y;T++){let x=T%c,I=T-x+Math.max(0,x-i),k=T-x+Math.min(c,x+i+1),w=0;for(let M=I;M<k;M++)w+=Math.pow(f[M],2);w=u*w+p;for(let M=I;M<k;M++){let F=-2*u*l*f[M]*h[T]/w;T===M&&(F+=Math.pow(w,-l)),F*=d[T],g[M]+=F}}return t.makeTensorInfo(a.shape,o.dtype,g)}var d$={kernelName:vm,backendName:"cpu",kernelFunc:one};function NA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,p=o.shape,u=p.length,l=b.parseAxisParam(s,p),m=l,c=C.getAxesPermutation(m,u),d=i.data.get(o.dataId).values;if(c!=null){let I=new Array(u);for(let k=0;k<I.length;k++)I[k]=p[c[k]];d=_c(d,p,o.dtype,c,I),m=C.getInnerMostAxes(m.length,u),p=I}ne(o,"max"),C.assertAxesAreInnerMostDims("max",m,u);let[f,h]=C.computeOutAndReduceShapes(p,m),g=b.sizeFromShape(h),y=hT(d,g,f,o.dtype),T=i.write(y,f,o.dtype),x=f;return a&&(x=C.expandShapeToKeepDim(f,l)),{dataId:T,shape:x,dtype:o.dtype}}var f$={kernelName:vo,backendName:"cpu",kernelFunc:NA};function sne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;b.assert(C.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=C.computePool2DInfo(o.shape,s,a,u,i,p),m;if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))m=Hr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Oc(c,o.shape,o.dtype,d,l,"max");m=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var h$={kernelName:wo,backendName:"cpu",kernelFunc:sne};function ane(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n;ne(o,"maxPool3d");let l=C.computePool3DInfo(o.shape,s,a,1,i,p,u),m=t.data.get(o.dataId).values,c=AT(m,o.shape,o.dtype,b.computeStrides(o.shape),l,"max");return t.makeTensorInfo(c.shape,"float32",c.values)}var g$={kernelName:Uu,backendName:"cpu",kernelFunc:ane};function ine(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n;ne([o,s],"maxPool3DGrad");let l=C.computePool3DInfo(s.shape,a,i,1,p,u),m=t.bufferSync(s),c=m_(m,l),d=l.strideDepth,f=l.strideHeight,h=l.strideWidth,g=l.dilationDepth,y=l.dilationHeight,T=l.dilationWidth,x=l.effectiveFilterDepth,I=l.effectiveFilterHeight,k=l.effectiveFilterWidth,w=x-1-l.padInfo.front,M=k-1-l.padInfo.left,F=I-1-l.padInfo.top,E=xe(s.shape,"float32"),$=t.bufferSync(o);for(let G=0;G<l.batchSize;++G)for(let W=0;W<l.inChannels;++W)for(let V=0;V<l.inDepth;++V)for(let q=0;q<l.inHeight;++q)for(let j=0;j<l.inWidth;++j){let Y=V-w,te=q-F,H=j-M,oe=0;for(let se=0;se<x;se+=g){let ae=(Y+se)/d;if(!(ae<0||ae>=l.outDepth||Math.floor(ae)!==ae))for(let ce=0;ce<I;ce+=y){let ue=(te+ce)/f;if(!(ue<0||ue>=l.outHeight||Math.floor(ue)!==ue))for(let ye=0;ye<k;ye+=T){let he=(H+ye)/h;if(he<0||he>=l.outWidth||Math.floor(he)!==he)continue;let Ce=x*I*k-1-c.get(G,ae,ue,he,W),we=se*I*k+ce*k+ye,Ee=Ce===we?1:0;if(Ee===0)continue;oe+=$.get(G,ae,ue,he,W)*Ee}}}E.set(oe,G,V,q,j,W)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}var b$={kernelName:wm,backendName:"cpu",kernelFunc:ine};function une(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;ne([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,p,u,1,l,m),d=t.data.get(i.dataId).values,f=xe(c.outShape,i.dtype,vT(d,i.shape,i.dtype,c).values),h=c.strideHeight,g=c.strideWidth,y=c.dilationHeight,T=c.dilationWidth,x=c.effectiveFilterHeight,I=c.effectiveFilterWidth,k=I-1-c.padInfo.left,w=x-1-c.padInfo.top,M=xe(i.shape,"float32"),F=t.data.get(o.dataId).values,E=xe(o.shape,"float32",F);for(let $=0;$<c.batchSize;++$)for(let G=0;G<c.inChannels;++G)for(let W=0;W<c.inHeight;++W)for(let V=0;V<c.inWidth;++V){let q=W-w,j=V-k,Y=0;for(let te=0;te<x;te+=y){let H=(q+te)/h;if(!(H<0||H>=c.outHeight||Math.floor(H)!==H))for(let oe=0;oe<I;oe+=T){let se=(j+oe)/g;if(se<0||se>=c.outWidth||Math.floor(se)!==se)continue;let ae=x*I-1-f.get($,H,se,G),ce=te*I+oe,ue=ae===ce?1:0;if(ue===0)continue;Y+=E.get($,H,se,G)*ue}}M.set(Y,$,W,V,G)}return t.makeTensorInfo(M.shape,M.dtype,M.values)}var y$={kernelName:Am,backendName:"cpu",kernelFunc:une};function T$(r,e,t,n,o){let s=b.computeStrides(e),a=Oc(r,e,t,s,o,"max"),i=vT(r,e,t,o,!0,n);return[a.values,i.values]}var x$={kernelName:Nm,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,p=t;ne(n,"MaxPoolWithArgmax");let u=p.data.get(n.dataId).values,l=C.computePool2DInfo(n.shape,o,s,[1,1],a),[m,c]=T$(u,n.shape,n.dtype,i,l),d=p.write(m,l.outShape,n.dtype),f=p.write(c,l.outShape,n.dtype);return[{dataId:d,shape:l.outShape,dtype:n.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function pne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=b.parseAxisParam(s,o.shape),u=C.computeOutAndReduceShapes(o.shape,i)[1],l=b.sizeFromShape(u),m=[],c=t.makeTensorInfo([],"float32",new Float32Array([l]));m.push(c);let d=Ws({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});m.push(d);let f=Yh({inputs:{a:d,b:c},backend:t});m.push(f);let h=Iu({inputs:{x:f},backend:t,attrs:{axis:s,keepDims:a}});return m.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var I$={kernelName:No,backendName:"cpu",kernelFunc:pne};function lne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"min");let i=b.parseAxisParam(s,o.shape),p=i,u=C.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=C.getInnerMostAxes(p.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",p,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,p),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];(Number.isNaN(k)||k<x)&&(x=k)}f[y]=x}u!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(a){let y=C.expandShapeToKeepDim(m,i),T=tt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var C$={kernelName:Do,backendName:"cpu",kernelFunc:lne};function mne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;ne(o,"mirrorPad");let i=s.map((x,I)=>x[0]+o.shape[I]+x[1]),p=s.map(x=>x[0]),u=s.map((x,I)=>x[0]+o.shape[I]),l=a==="reflect"?0:1,m=t.data.get(o.dataId).values,c=o.shape.length,d=b.computeStrides(o.shape),f=b.sizeFromShape(i),h=i.length,g=b.computeStrides(i),y=b.getTypedArrayFromDType(o.dtype,f);for(let x=0;x<f;x++){let I=b.indexToLoc(x,h,g);for(let w=0;w<h;w++)I[w]<p[w]?I[w]=p[w]*2-I[w]-l:I[w]>=u[w]&&(I[w]=(u[w]-1)*2-I[w]+l);I=I.map((w,M)=>w-p[M]);let k=b.locToIndex(I,c,d);y[x]=m[k]}return{dataId:t.write(y,i,o.dtype),shape:i,dtype:o.dtype}}var k$={kernelName:Mo,backendName:"cpu",kernelFunc:mne};var cne=st((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),dne=ut(Vi,cne),S$={kernelName:Vi,backendName:"cpu",kernelFunc:dne};var A$=Np(qd());function DA(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let p=b.parseAxisParam([i],o.shape),u=NA({inputs:{x:o},backend:t,attrs:{reductionIndices:p,keepDims:!1}}),l=C.expandShapeToKeepDim(u.shape,p),m=tt({inputs:{x:u},backend:t,attrs:{shape:l}}),c=jh({inputs:{a:o,b:m},backend:t}),d=rA({inputs:{x:c},backend:t}),f=Iu({inputs:{x:d},backend:t,attrs:{axis:p,keepDims:!1}}),h=tt({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Yh({inputs:{a:d,b:h},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var v$={kernelName:Vo,backendName:"cpu",kernelFunc:DA};function fne(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;ne(o,"multinomial");let p=i?o:DA({inputs:{logits:o},backend:t,attrs:{dim:-1}}),u=p.shape[0],l=p.shape[1],m=t.data.get(p.dataId).values,c=[u,s],d=b.makeZerosTypedArray(b.sizeFromShape(c),"int32");for(let f=0;f<u;++f){let h=f*l,g=new Float32Array(l-1);g[0]=m[h];for(let x=1;x<g.length;++x)g[x]=g[x-1]+m[h+x];let y=A$.alea(a.toString()),T=f*s;for(let x=0;x<s;++x){let I=y();d[T+x]=g.length;for(let k=0;k<g.length;k++)if(I<g[k]){d[T+x]=k;break}}}return i||t.disposeIntermediateTensorInfo(p),t.makeTensorInfo(c,"int32",d)}var w$={kernelName:Dm,backendName:"cpu",kernelFunc:fne};var hne=br.nonMaxSuppressionV3Impl;function gne(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n;ne(o,"NonMaxSuppression");let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,{selectedIndices:m}=hne(u,l,a,i,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var N$={kernelName:ya,backendName:"cpu",kernelFunc:gne};var bne=br.nonMaxSuppressionV4Impl;function yne(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,padToMaxOutputSize:u}=n;ne(o,"NonMaxSuppressionPadded");let l=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=bne(l,m,a,i,p,u);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var D$={kernelName:Hi,backendName:"cpu",kernelFunc:yne};var Tne=br.nonMaxSuppressionV5Impl;function xne(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n;ne(o,"NonMaxSuppressionWithScore");let l=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:y}=Tne(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var P$={kernelName:Ta,backendName:"cpu",kernelFunc:xne};function Ine(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n;ne(o,"oneHot");let p=b.sizeFromShape(o.shape),u=new Float32Array(p*s);u.fill(i);let l=t.data.get(o.dataId).values;for(let m=0;m<p;++m)l[m]>=0&&l[m]<s&&(u[m*s+l[m]]=a);return t.makeTensorInfo([...o.shape,s],"int32",u)}var M$={kernelName:xa,backendName:"cpu",kernelFunc:Ine};function Jh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Us({inputs:{input:n},backend:t}),s=Jh({inputs:{x:o},backend:t}),a=ki({inputs:{input:n},backend:t}),i=Jh({inputs:{x:a},backend:t}),p=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return Zh({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var F$={kernelName:xs,backendName:"cpu",kernelFunc:Jh};function E$(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Us({inputs:{input:n},backend:t}),s=E$({inputs:{x:o},backend:t}),a=ki({inputs:{input:n},backend:t}),i=Jh({inputs:{x:a},backend:t}),p=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return Zh({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var R$={kernelName:cs,backendName:"cpu",kernelFunc:E$};function PA(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return zc({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=zc({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=fp({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}var L$={kernelName:ds,backendName:"cpu",kernelFunc:PA};function Cne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;ne(o,"pad");let i=s.map((T,x)=>T[0]+o.shape[x]+T[1]),p=s.map(T=>T[0]),u=t.data.get(o.dataId).values,l=b.sizeFromShape(o.shape),m=o.shape.length,c=b.computeStrides(o.shape),d=b.sizeFromShape(i),f=i.length,h=b.computeStrides(i),g=b.getTypedArrayFromDType(o.dtype,d);a!==0&&g.fill(a);for(let T=0;T<l;T++){let I=b.indexToLoc(T,m,c).map((w,M)=>w+p[M]),k=b.locToIndex(I,f,h);g[k]=u[T]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var NT={kernelName:Eo,backendName:"cpu",kernelFunc:Cne};var kne=st((r,e)=>Math.pow(r,e)),Sne=ut(Ro,kne),_$={kernelName:Ro,backendName:"cpu",kernelFunc:Sne};function vne(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=vl(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var $$={kernelName:oi,backendName:"cpu",kernelFunc:vne};var Ane=Fe(qi,r=>1/r),B$={kernelName:qi,backendName:"cpu",kernelFunc:Ane};function wne(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;ne(o,"resizeBilinear");let p=b.computeStrides(o.shape),[u,l]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(b.sizeFromShape([m,u,l,f])),y=[s&&u>1?c-1:c,s&&l>1?d-1:d],T=[s&&u>1?u-1:u,s&&l>1?l-1:l],x=0,I=y[0]/T[0],k=y[1]/T[1];for(let w=0;w<m;w++)for(let M=0;M<u;M++){let F;a?F=I*(M+.5)-.5:F=I*M;let E=Math.max(0,Math.floor(F)),$=F-E,G=Math.min(c-1,Math.ceil(F)),W=w*p[0]+E*p[1],V=w*p[0]+G*p[1];for(let q=0;q<l;q++){let j;a?j=k*(q+.5)-.5:j=k*q;let Y=Math.max(0,Math.floor(j)),te=j-Y,H=Math.min(d-1,Math.ceil(j)),oe=W+Y*p[2],se=V+Y*p[2],ae=W+H*p[2],ce=V+H*p[2];for(let ue=0;ue<f;ue++){let ye=h[oe+ue],he=h[se+ue],Ce=h[ae+ue],we=h[ce+ue],Ee=ye+(Ce-ye)*te,_e=he+(we-he)*te,Qe=Ee+(_e-Ee)*$;g[x++]=Qe}}}return t.makeTensorInfo([m,u,l,f],"float32",g)}var O$={kernelName:Bo,backendName:"cpu",kernelFunc:wne};function Nne(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;ne([s,o],"resizeBilinearGrad");let i=b.computeStrides(o.shape),[p,u,l,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(p*u*l*m),h=[a&&c>1?u-1:u,a&&d>1?l-1:l],g=[a&&c>1?c-1:c,a&&d>1?d-1:d],y=h[0]/g[0],T=h[1]/g[1],x=t.data.get(s.dataId).values,I=0;for(let k=0;k<p;k++){let w=k*i[0];for(let M=0;M<c;M++){let F=M*y,E=Math.floor(F),$=Math.min(Math.ceil(F),u-1),G=w+E*i[1],W=w+$*i[1],V=F-E,q=1-V;for(let j=0;j<d;j++){let Y=j*T,te=Math.floor(Y),H=Math.min(Math.ceil(Y),l-1),oe=Y-te,se=1-oe,ae=G+te*i[2],ce=G+H*i[2],ue=W+te*i[2],ye=W+H*i[2],he=q*se,Ce=q*oe,we=V*se,Ee=V*oe;for(let _e=0;_e<m;_e++){let Qe=x[I++];f[ae+_e]+=Qe*he,f[ce+_e]+=Qe*Ce,f[ue+_e]+=Qe*we,f[ye+_e]+=Qe*Ee}}}}return t.makeTensorInfo([p,l,u,m],"float32",f)}var z$={kernelName:Mm,backendName:"cpu",kernelFunc:Nne};function Dne(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;ne(o,"resizeNearestNeighbor");let p=b.computeStrides(o.shape),[u,l]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(m*u*l*f),y=[s&&u>1?c-1:c,s&&l>1?d-1:d],T=[s&&u>1?u-1:u,s&&l>1?l-1:l],x=y[0]/T[0],I=y[1]/T[1],k=0;for(let w=0;w<m;w++){let M=w*p[0];for(let F=0;F<u;F++){let E=a?x*(F+.5):x*F,$=Math.min(c-1,s?Math.round(E):Math.floor(E));a&&($=Math.max(0,$));let G=M+$*p[1];for(let W=0;W<l;W++){let V=a?I*(W+.5):I*W,q=Math.min(d-1,s?Math.round(V):Math.floor(V));a&&(q=Math.max(0,q));let j=G+q*p[2];for(let Y=0;Y<f;Y++){let te=h[j+Y];g[k++]=te}}}}return t.makeTensorInfo([m,u,l,f],o.dtype,g)}var G$={kernelName:si,backendName:"cpu",kernelFunc:Dne};function Pne(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;ne([s,o],"resizeNearestNeighborGrad");let i=b.computeStrides(o.shape),p=b.computeStrides(s.shape),[u,l,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(u*l*m*c),g=t.data.get(s.dataId).values,y=[a&&d>1?l-1:l,a&&f>1?m-1:m],T=[a&&d>1?d-1:d,a&&f>1?f-1:f],x=y[0]/T[0],I=y[1]/T[1],k=1/x,w=1/I,M=Math.ceil(k)*2+2,F=Math.ceil(w)*2+2;for(let E=0;E<u;E++){let $=E*i[0];for(let G=0;G<l;G++){let W=$+G*i[1],V=Math.floor(G*k),q=Math.floor(V-M/2);for(let j=0;j<m;j++){let Y=W+j*i[2],te=Math.floor(j*w),H=Math.floor(te-F/2);for(let oe=0;oe<c;oe++){let se=0;for(let ae=0;ae<M;ae++){let ce=ae+q;if(ce<0||ce>=d)continue;let ue=$+ce*p[1],ye=ce*x,he=Math.min(l-1,a?Math.round(ye):Math.floor(ye));if(G===he)for(let Ce=0;Ce<F;Ce++){let we=Ce+H;if(we<0||we>=f)continue;let Ee=ue+we*p[2],_e=we*I,Qe=Math.min(m-1,a?Math.round(_e):Math.floor(_e));j===Qe&&(se+=g[Ee+oe])}}h[Y+oe]=se}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var U$={kernelName:Pm,backendName:"cpu",kernelFunc:Pne};function Mne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;ne(o,"reverse");let a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return Hr({inputs:{x:o},backend:t});let p=new gt(o.shape,o.dtype),u=t.bufferSync(o);for(let l=0;l<p.size;l++){let m=p.indexToLoc(l),c=m.slice();i.forEach(d=>c[d]=o.shape[d]-1-c[d]),p.set(u.get(...c),...m)}return t.makeTensorInfo(p.shape,p.dtype,p.values)}var W$={kernelName:Ia,backendName:"cpu",kernelFunc:Mne};var K$={kernelName:Da,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,p=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[u,l,m,c]=n.shape,[d,f]=C.getImageCenter(a,l,m),h=255,g=Math.sin(o),y=Math.cos(o),T=i.data.get(n.dataId).values;for(let I=0;I<u;I++){let k=I*m*l*c;for(let w=0;w<l;w++){let M=w*(m*c);for(let F=0;F<m;F++){let E=F*c;for(let $=0;$<c;$++){let G=[u,w,F,$],W=G[2],V=G[1],q=(W-d)*y-(V-f)*g,j=(W-d)*g+(V-f)*y;q=Math.round(q+d),j=Math.round(j+f);let Y=s;if(typeof s!="number"&&($===3?Y=h:Y=s[$]),q>=0&&q<m&&j>=0&&j<l){let H=j*(m*c),oe=q*c,se=k+H+oe+$;Y=T[se]}let te=k+M+E+$;p[te]=Y}}}}return{dataId:i.write(p,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Fne=Fe(Ca,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2===0?e:e+1}),V$={kernelName:Ca,backendName:"cpu",kernelFunc:Fne};function Ene(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=!0,d=t.bufferSync(o),f=t.bufferSync(s),h=xu(d,f,a,m,u,p,i,l,0,c);return t.makeTensorInfo(a,h.dtype,h.values)}var H$={kernelName:ka,backendName:"cpu",kernelFunc:Ene};function Rne(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<e?t=o+1:n=o;return n}function Lne(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<=e?t=o+1:n=o;return n}function q$(r,e,t,n,o,s){let a=b.getArrayFromDType("int32",t*o);for(let i=0;i<t;++i){let p=r.slice(i*n,(i+1)*n),u=i*o;for(let l=0;l<o;++l)a[u+l]=s==="left"?Rne(p,e[l+u]):Lne(p,e[l+u])}return a}function _ne(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,u=q$(i,p,o.shape[0],o.shape[1],s.shape[1],a);return t.makeTensorInfo(s.shape,"int32",u)}var j$={kernelName:Fm,backendName:"cpu",kernelFunc:_ne};function $ne(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;ne([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,p=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Ft(o.dtype,s.dtype),m=b.makeZerosTypedArray(b.sizeFromShape(o.shape),l),c=0,d=a===0||a>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let h=0;h<d;h++)i[f]===1?m[c++]=p[f]:m[c++]=u[f];return t.makeTensorInfo(o.shape,l,m)}var X$={kernelName:hs,backendName:"cpu",kernelFunc:$ne};var Bne=C.SELU_SCALEALPHA,One=C.SELU_SCALE,zne=Fe(ji,r=>r>=0?One*r:Bne*(Math.exp(r)-1)),Y$={kernelName:ji,backendName:"cpu",kernelFunc:zne};var Gne=Fe(Xi,r=>r<0?-1:r>0?1:0),Q$={kernelName:Xi,backendName:"cpu",kernelFunc:Gne};var Une=Fe(Go,r=>Math.sin(r)),Z$={kernelName:Go,backendName:"cpu",kernelFunc:Une};var Wne=Fe(Sa,r=>Math.sinh(r)),J$={kernelName:Sa,backendName:"cpu",kernelFunc:Wne};var Kne=11920928955078125e-23,eB=Math.log(Kne)+2,Vne=Fe(Yi,r=>{let e=r>-eB,t=r<eB,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),tB={kernelName:Yi,backendName:"cpu",kernelFunc:Vne};function Hne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;ne([o],"spaceToBatchND");let i=b.sizeFromShape(s),p=[[0,0]];p.push(...a);for(let w=1+s.length;w<o.shape.length;++w)p.push([0,0]);let u=NT.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),l=C.getReshaped(u.shape,s,i,!1),m=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(u.shape,s,i,!1),h=tt({inputs:{x:u},backend:t,attrs:{shape:l}}),T=Xt({inputs:{x:h},backend:t,attrs:{perm:m}}),k=tt({inputs:{x:T},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(T),k}var rB={kernelName:bs,backendName:"cpu",kernelFunc:Hne};function qne(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.data.get(n.dataId).values,p=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=t.data.get(a.dataId).values[0],[m,c,d,f,h]=gT(i,n.shape,n.dtype,p,o.dtype,u,l);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var nB={kernelName:Ku,backendName:"cpu",kernelFunc:qne};function jne(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.data.get(o.dataId).values),i=t.data.get(n.dataId).values,p=Array.from(t.data.get(s.dataId).values),[u,l,m]=bT(i,n.shape,n.dtype,a,p);return[t.makeTensorInfo(l,n.dtype,u),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var oB={kernelName:Qi,backendName:"cpu",kernelFunc:jne};function Xne(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,[u,l]=$c(a,n.shape,n.dtype,i,p,!0);return t.makeTensorInfo(l,n.dtype,u)}var sB={kernelName:Vu,backendName:"cpu",kernelFunc:Xne};function Yne(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,[u,l]=$c(a,n.shape,n.dtype,i,p);return t.makeTensorInfo(l,n.dtype,u)}var aB={kernelName:Hu,backendName:"cpu",kernelFunc:Yne};function Qne(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1,f=t.bufferSync(o),h;switch(s.dtype){case"bool":{let g=t.bufferSync(s),y=Boolean(t.data.get(a.dataId).values[0]);h=xu(f,g,i,c,l,u,p,m,y,d);break}case"float32":{let g=t.bufferSync(s),y=t.data.get(a.dataId).values[0];h=xu(f,g,i,c,l,u,p,m,y,d);break}case"int32":{let g=t.bufferSync(s),y=t.data.get(a.dataId).values[0];h=xu(f,g,i,c,l,u,p,m,y,d);break}case"string":{let g=t.bufferSync(s),y=b.decodeString(t.data.get(a.dataId).values[0]);h=xu(f,g,i,c,l,u,p,m,y,d);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return t.makeTensorInfo(i,h.dtype,h.values)}var iB={kernelName:qu,backendName:"cpu",kernelFunc:Qne};function Zne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],p=C.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return p.map(m=>{let c=[...l];c[i]=m;let d=Vs({inputs:{x:o},backend:t,attrs:{begin:u,size:c}});return u[i]+=m,d})}var uB={kernelName:ys,backendName:"cpu",kernelFunc:Zne};var pB={kernelName:ai,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;ne(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let p=o[i];s[i]=p*p}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var Jne=Fe(Is,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),lB={kernelName:Is,backendName:"cpu",kernelFunc:Jne};function eoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n;ne(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=tt({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=Tt.computeOutShape(T,x,I),M=Vs({inputs:{x:o},backend:t,attrs:{begin:T,size:w}});k=tt({inputs:{x:M},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(M)}else{let w=t.bufferSync(o),M=yT(d,w,I,T);k=t.makeTensorInfo(f,M.dtype,M.values)}return k}var mB={kernelName:va,backendName:"cpu",kernelFunc:eoe};function toe(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=e,c=t.data.get(l.dataId).values,d=t.data.get(m.dataId).values,[f,h]=TT(c,d,o,s,a,i,p,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var cB={kernelName:ju,backendName:"cpu",kernelFunc:toe};function roe(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values[0],[u,l,m]=xT(i,p,o),c=l.length;return[t.makeTensorInfo([c,2],"int32",u),t.makeTensorInfo([c],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var dB={kernelName:Em,backendName:"cpu",kernelFunc:roe};function noe(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.data.get(s.dataId).values,i=IT(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var fB={kernelName:Rm,backendName:"cpu",kernelFunc:noe};var ooe=Fe(Aa,r=>Math.tan(r)),hB={kernelName:Aa,backendName:"cpu",kernelFunc:ooe};var soe=Fe(jo,r=>Math.tanh(r)),gB={kernelName:jo,backendName:"cpu",kernelFunc:soe};function aoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;ne(o,"tile");let a=CT(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var bB={kernelName:Dn,backendName:"cpu",kernelFunc:aoe};function ioe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;ne(o,"topk");let i=t.data.get(o.dataId).values,[p,u]=kT(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(p.shape,p.dtype,p.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var yB={kernelName:wa,backendName:"cpu",kernelFunc:ioe};function uoe(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=t,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],y=b.computeStrides(o.shape),T=y[0],x=y[1],I=y[2],k=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(g));k.fill(p);let w=n.data.get(o.dataId).values,M=n.data.get(s.dataId).values;for(let E=0;E<l;++E){let $=s.shape[0]===1?M:M.subarray(E*8,E*8+8);for(let G=0;G<f;++G)for(let W=0;W<h;++W)for(let V=0;V<d;++V){let q,j=$[6]*W+$[7]*G+1;if(j===0)continue;let Y=($[0]*W+$[1]*G+$[2])/j,te=($[3]*W+$[4]*G+$[5])/j,H=TB(Y,c,i),oe=TB(te,m,i);switch(a){case"nearest":q=doe(w,m,c,T,x,I,E,oe,H,V,p);break;case"bilinear":q=foe(w,m,c,T,x,I,E,oe,H,V,p);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let se=E*T+G*x+W*I+V;k[se]=q}return n.makeTensorInfo(g,o.dtype,k)}return{dataId:n.write(k,g,o.dtype),shape:o.shape,dtype:o.dtype}}var xB={kernelName:Na,backendName:"cpu",kernelFunc:uoe};function TB(r,e,t){switch(t){case"reflect":return poe(r,e);case"wrap":return loe(r,e);case"nearest":return coe(r,e);case"constant":default:return moe(r,e)}}function poe(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return b.clamp(0,t,e-1)}function loe(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return b.clamp(0,t,e-1)}function moe(r,e){return r}function coe(r,e){return b.clamp(0,r,e-1)}function eg(r,e,t,n,o,s,a,i,p,u,l){let m=a*n+i*o+p*s+u;return 0<=i&&i<e&&0<=p&&p<t?r[m]:l}function doe(r,e,t,n,o,s,a,i,p,u,l){let m=Math.round(i),c=Math.round(p);return eg(r,e,t,n,o,s,a,m,c,u,l)}function foe(r,e,t,n,o,s,a,i,p,u,l){let m=Math.floor(i),c=Math.floor(p),d=m+1,f=c+1,h=(f-p)*eg(r,e,t,n,o,s,a,m,c,u,l)+(p-c)*eg(r,e,t,n,o,s,a,m,f,u,l),g=(f-p)*eg(r,e,t,n,o,s,a,d,c,u,l)+(p-c)*eg(r,e,t,n,o,s,a,d,f,u,l);return(d-i)*h+(i-m)*g}function hoe(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;ne(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:p,indices:u}=ST(a,o,s.shape,s.dtype);return[n.makeTensorInfo(p,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var IB={kernelName:Lm,backendName:"cpu",kernelFunc:hoe};function goe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],p=new Array(a-1),u=0;for(let d=0;d<a;d++)d!==s&&(p[u++]=o.shape[d]);let l=new Array(a).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(i);for(let d=0;d<c.length;d++){l[s]=d;let f=Vs({inputs:{x:o},backend:t,attrs:{begin:l,size:m}});c[d]=tt({inputs:{x:f},backend:t,attrs:{shape:p}}),t.disposeIntermediateTensorInfo(f)}return c}var CB={kernelName:Ts,backendName:"cpu",kernelFunc:goe};function boe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;ne(o,"unsortedSegmentSum");let i=o.shape.length,p=s.shape.length,u=[],l=[],m=i-p,c=s;for(let f=0;f<m;++f){let h=zc({inputs:{input:c},backend:t,attrs:{dim:f+1}});c=h,l.push(h)}for(let f=0;f<a;++f){let h=b.createScalarValue(f,"int32"),g=t.makeTensorInfo([],"int32",h),y=eA({inputs:{a:g,b:c},backend:t}),T=Ws({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),x=Sl({inputs:{a:T,b:o},backend:t}),I=Iu({inputs:{x},backend:t,attrs:{axis:0,keepDims:!1}});u.push(I),l.push(g),l.push(y),l.push(T),l.push(x),l.push(I)}let d=PA({inputs:u,backend:t,attrs:{axis:0}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var kB={kernelName:Xu,backendName:"cpu",kernelFunc:boe};var yoe=[ZL,cL,JL,e_,bL,t_,r_,n_,o_,s_,a_,i_,u_,p_,l_,c_,d_,f_,h_,QL,g_,b_,y_,T_,gL,yL,x_,dL,I_,k_,S_,v_,A_,w_,N_,D_,P_,M_,F_,E_,R_,L_,__,$_,B_,O_,z_,G_,U_,W_,V_,VL,H_,TL,q_,xL,j_,IL,X_,Y_,Q_,CL,Z_,J_,e$,t$,r$,kL,SL,fL,n$,C_,o$,s$,a$,HL,vL,AL,i$,wL,u$,p$,l$,m$,c$,d$,f$,NL,h$,g$,b$,y$,x$,I$,C$,DL,k$,S$,w$,PL,ML,N$,D$,P$,FL,M$,R$,L$,NT,_$,qL,RL,$$,hL,Qh,B$,jL,XL,YL,O$,z$,G$,U$,W$,K$,V$,LL,H$,j$,X$,Y$,$L,Q$,Z$,J$,BL,v$,tB,rB,nB,oB,sB,aB,iB,uB,zL,pB,GL,lB,mB,cB,dB,fB,WL,K_,hB,gB,bB,yB,xB,EL,IB,CB,kB,F$];for(let r of yoe)Zi(r);var Wc={};Xe(Wc,{assertNotComplex:()=>Ka,bindCanvasToFramebuffer:()=>woe,bindColorTextureToFramebuffer:()=>og,bindTextureToProgramUniformSampler:()=>qA,bindTextureUnit:()=>wB,bindVertexBufferToProgramAttribute:()=>ET,callAndCheck:()=>ve,canBeRepresented:()=>LA,createFragmentShader:()=>$A,createFramebuffer:()=>KA,createProgram:()=>BA,createStaticIndexBuffer:()=>GA,createStaticVertexBuffer:()=>zA,createTexture:()=>UA,createVertexShader:()=>_A,getBatchDim:()=>ku,getExtensionOrThrow:()=>Gc,getFramebufferErrorMessage:()=>NB,getMaxTexturesInShader:()=>YA,getNumChannels:()=>voe,getProgramUniformLocation:()=>HA,getProgramUniformLocationOrThrow:()=>VA,getRowsCols:()=>Su,getShapeAs3D:()=>sg,getTextureShapeFromLogicalShape:()=>jA,getWebGLDisjointQueryTimerVersion:()=>QA,getWebGLErrorMessage:()=>AB,getWebGLMaxTextureSize:()=>XA,hasExtension:()=>Jn,isCapableOfRenderingToFloatTexture:()=>ZA,isDownloadFloatTextureEnabled:()=>JA,isReshapeFree:()=>hp,isWebGLFenceEnabled:()=>ew,isWebGLVersionEnabled:()=>LT,linkProgram:()=>OA,logShaderSourceAndInfoLog:()=>FT,resetMaxTextureSize:()=>Noe,resetMaxTexturesInShader:()=>Doe,unbindColorTextureFromFramebuffer:()=>RT,unbindTextureUnit:()=>Aoe,validateFramebuffer:()=>Uc,validateProgram:()=>ng,validateTextureSize:()=>WA});var Nl={},MA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function FA(r,e){Nl[r]=e}function Zn(r,e){if(!(r in Nl)||e!=null){let n=xoe(r,e);if(n!==null)Nl[r]=n;else return console.log("Could not get context for WebGL version",r),null}let t=Nl[r];return t==null||t.isContextLost()?(delete Nl[r],Zn(r)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Nl[r])}function Toe(r){if(typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function xoe(r,e){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=e??Toe(r);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Nl[r]},!1),r===1?t.getContext("webgl",MA)||t.getContext("experimental-webgl",MA):t.getContext("webgl2",MA)}function Dl(r,e){return[e,r]}function SB(r,e){return r*e}function tg(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function Si(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function vB(r,e){let[t,n]=Si(r,e);return t*n*4}function rg(r,e){let t=r,n,o,s,a,i,p,u,l,m,c;return B().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,u=4,l=1,m=t.HALF_FLOAT,c=t.FLOAT,p=t.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,u=4,l=4,m=e!=null?e.HALF_FLOAT_OES:null,c=r.FLOAT,p=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:p,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:m,textureTypeFloat:c}}function ve(r,e){let t=e();return B().getBool("DEBUG")&&Ioe(r),t}function Ioe(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+AB(r,e))}var Coe=596e-10,koe=65504;function LA(r){return!!(B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||Coe<Math.abs(r)&&Math.abs(r)<koe)}function AB(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Gc(r,e){return Cu(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function _A(r,e){let t=Cu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ve(r,()=>r.shaderSource(t,e)),ve(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function $A(r,e){let t=Cu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ve(r,()=>r.shaderSource(t,e)),ve(r,()=>r.compileShader(t)),B().get("ENGINE_COMPILE_ONLY"))return t;if(r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw FT(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var Soe=/ERROR: [0-9]+:([0-9]+):/g;function FT(r,e){let t=Soe.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((m,c)=>b.rightPad((c+1).toString(),s)+m),i=0;for(let m=0;m<a.length;m++)i=Math.max(a[m].length,i);let p=a.slice(0,n-1),u=a.slice(n-1,n),l=a.slice(n);console.log(p.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function BA(r){return Cu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function OA(r,e){if(ve(r,()=>r.linkProgram(e)),!B().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function ng(r,e){if(ve(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function zA(r,e){let t=Cu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),ve(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function GA(r,e){let t=Cu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ve(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),ve(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function voe(){return B().getNumber("WEBGL_VERSION")===2?1:4}function UA(r){return Cu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function WA(r,e){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function KA(r){return Cu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function ET(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),ve(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),ve(r,()=>r.enableVertexAttribArray(i)),!0)}function wB(r,e,t){DB(r,t),ve(r,()=>r.activeTexture(r.TEXTURE0+t)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function Aoe(r,e){DB(r,e),ve(r,()=>r.activeTexture(r.TEXTURE0+e)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function VA(r,e,t){return Cu(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function HA(r,e,t){return r.getUniformLocation(e,t)}function qA(r,e,t,n){ve(r,()=>wB(r,e,n)),ve(r,()=>r.uniform1i(t,n))}function woe(r){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),ve(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),ve(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function og(r,e,t){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),ve(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function RT(r,e){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),ve(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Uc(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+NB(r,e))}function NB(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Cu(r,e,t){let n=ve(r,()=>e());if(n==null)throw new Error(t);return n}function DB(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function ku(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function Su(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function sg(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[ku(r),...Su(r)]),e}function jA(r,e=!1){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?b.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let n=b.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=ku(r),s=2,a=2;return r.length&&([s,a]=Su(r)),n=o*(s/2)*(a/2),b.sizeToSquarishShape(n).map(i=>i*2)}return b.sizeToSquarishShape(n)}function DT(r){return r%2===0}function hp(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||DT(t)&&DT(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&DT(r[0])&&DT(e[0])}var PT,MT;function XA(r){if(PT==null){let e=Zn(r);PT=e.getParameter(e.MAX_TEXTURE_SIZE)}return PT}function Noe(){PT=null}function Doe(){MT=null}function YA(r){if(MT==null){let e=Zn(r);MT=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,MT)}function QA(r){if(r===0)return 0;let e,t=Zn(r);return Jn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Jn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Jn(r,e){return r.getExtension(e)!=null}function LT(r){try{if(Zn(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ZA(r){if(r===0)return!1;let e=Zn(r);if(r===1){if(!Jn(e,"OES_texture_float"))return!1}else if(!Jn(e,"EXT_color_buffer_float"))return!1;return RA(e)}function JA(r){if(r===0)return!1;let e=Zn(r);if(r===1){if(!Jn(e,"OES_texture_float")||!Jn(e,"WEBGL_color_buffer_float"))return!1}else{if(Jn(e,"EXT_color_buffer_float"))return RA(e);let n="EXT_color_buffer_half_float";if(Jn(e,n)){let o=e.getExtension(n);return Poe(e,o)}return!1}return RA(e)}function RA(r){let e=rg(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function Poe(r,e){let t=rg(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function ew(r){return r!==2?!1:Zn(r).fenceSync!=null}function Ka(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var $e=B();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>LT(2)?2:LT(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>XA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>YA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=$e.getNumber("WEBGL_VERSION");return r===0?0:QA(r)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ju.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>ZA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>JA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>ew($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ju.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Yt(){let r,e,t,n,o,s,a,i,p,u;return B().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,p="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,p=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:p,defineRound:u}}function Va(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Pl(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function Moe(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function PB(r,e,t="index"){let n=r.map((s,a)=>a),o=Moe(n,e);return o.map((s,a)=>{let i=`int ${r[a]} = ${t} / ${o[a]}`,p=a===o.length-1?`int ${r[a+1]} = ${t} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${p};`}).join("")}function Kc(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Vc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var _T=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:MB}=C;function FB(r,e,t){let n=[];if(r.forEach(d=>{let f=b.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),t.enableShapeUniforms){let{uniformShape:h}=$T(t.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>Foe(d,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Yt(),p=Loe(i),u,l,m=Boe(i);return e.isPacked?(u=Eoe(e.logicalShape,a,t.enableShapeUniforms),l=$oe(i)):(u=Roe(e.logicalShape,a,t.enableShapeUniforms),l=_oe(i)),t.packedInputs&&(m+=Uoe),[m,p,l,o,u,s,t.userCode].join(`
`)}function qc(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return ese(r,e);case 1:return rse(r,e);case 2:return ose(r,e);case 3:return ase(r,e);case 4:return use(r,e);case 5:return pse(r);case 6:return lse(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function EB(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return Joe(r);case 1:return tse(r,e);case 2:return nse(r,e);case 3:return sse(r,e);default:return ise(r,e)}}function Foe(r,e,t=!1,n){let o="";t?o+=EB(r,n):o+=qc(r,n);let s=r.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(t?o+=mse(r,e):o+=cse(r,e)),o}function Eoe(r,e,t){switch(r.length){case 0:return RB();case 1:return Woe(r,e,t);case 2:return Qoe(r,e,t);case 3:return Voe(r,e,t);default:return qoe(r,e,t)}}function Roe(r,e,t){switch(r.length){case 0:return RB();case 1:return Koe(r,e,t);case 2:return Zoe(r,e,t);case 3:return Hoe(r,e,t);case 4:return joe(r,e,t);case 5:return Xoe(r,e);case 6:return Yoe(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function Loe(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function _oe(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function $oe(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function Boe(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Ooe}
    ${zoe}
    ${Goe}
  `}var Ooe=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,zoe=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Goe=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Uoe=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function RB(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Woe(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Koe(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Voe(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Hoe(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Pl(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Va(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function qoe(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",p="b, r, c";for(let u=2;u<r.length-1;u++)a*=r[r.length-u-1],i=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+i,p=`b${u}, `+p;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${p});
    }
  `}function joe(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Pl(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Va(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Xoe(r,e){let t=Va(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Yoe(r,e){let t=Va(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Qoe(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Zoe(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Ml(r){return`offset${r}`}function Joe(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Yt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function ese(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=Ml(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;let[i,p]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${p}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function tse(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Yt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function rse(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${jc(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Ml(t);return a===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function nse(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],p=Yt();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${p.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${p.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${p.texture2D}(${n}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);
      return ${p.texture2D}(${n}, uv);
    }
  `}function ose(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=b.squeezeShape(t),p=a;if(p.length<t.length){let c=Xc(r,p),d=["row","col"];return`
      ${qc(c,e)}
      float ${o}(int row, int col) {
        return ${o}(${Yc(d,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${jc(r)}
      }
    `;let u=s[0],l=s[1],m=Ml(n);return l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `:u===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${m};
    vec2 uv = uvFromFlat(${u}, ${l}, index);
    return sampleTexture(${n}, uv);
  }
`}function sse(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let c=t.slice(1),d=[1,2],f=Xc(r,c),h=["b","row","col"];return`
        ${EB(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Yc(h,d)});
        }
      `}let i=Yt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let p=a[0],u=a[1],l=Math.ceil(t[2]/2),m=l*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${p}, ${u}, ${m}, ${l}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function ase(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:p}=b.squeezeShape(t),u=i;if(u.length<t.length){let h=Xc(r,u),g=["row","col","depth"];return`
        ${qc(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Yc(g,p)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${jc(r)}
      }
    `;let l=r.shapeInfo.texShape,m=l[0],c=l[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===a&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Ml(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${a} + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function ise(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Yt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,p=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=p[0],l=p[1],m=Math.ceil(s[a-1]/2),c=m*Math.ceil(s[a-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<a-1;h++)d=`int b${h}, `+d,c*=s[a-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${u});
      return ${o.texture2D}(${t}, uv);
    }
  `}function use(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:p,keptDims:u}=b.squeezeShape(t);if(p.length<t.length){let T=Xc(r,p),x=["row","col","depth","depth2"];return`
      ${qc(T,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Yc(x,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${jc(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=Ml(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function pse(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:p,keptDims:u}=b.squeezeShape(e);if(p.length<e.length){let h=Xc(r,p),g=["row","col","depth","depth2","depth3"];return`
      ${qc(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Yc(g,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${jc(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===i&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===o&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Ml(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function lse(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(e);if(o.length<e.length){let g=Xc(r,o),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${qc(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Yc(y,s)});
      }
    `}let a=e[5],i=e[4]*a,p=e[3]*i,u=e[2]*p,l=e[1]*u;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${u}, ${p}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${jc(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===l&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${p}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Ml(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${u} + depth * ${p} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function jc(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function mse(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=MB(r.shapeInfo.logicalShape,e.logicalShape),p=qe(a),u=a-s,l,m=["x","y","z","w","u","v"];s===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(T=>`coords.${m[T+u]} = 0;`).join(`
`);let c="";a<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((T,x)=>`coords.${m[x+u]}`).join(", ");let d="return outputValue;",h=b.sizeFromShape(r.shapeInfo.logicalShape)===1,y=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!y)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!y)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){let T=s-2,x=s-1;i.indexOf(T)>-1&&i.indexOf(x)>-1?d="return vec4(outputValue.x);":i.indexOf(T)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${p} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function cse(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,p=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===p&&r.shapeInfo.flatOffset==null&&b.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let u=qe(p),l=MB(r.shapeInfo.logicalShape,e.logicalShape),m=p-i,c,d=["x","y","z","w","u","v"];i===0?c="":p<2&&l.length>=1?c="coords = 0;":c=l.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return p<2&&i>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function qe(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function $T(r,e,t){let{newShape:n,keptDims:o}=b.squeezeShape(e),s=e.length,a=r&&s===3&&e[0]===1,i=a?e.slice(1):n,p=!r&&s>1&&!b.arraysEqual(e,t)&&n.length<s||a;return{useSqueezeShape:p,uniformShape:p?i:e,keptDims:o}}function Xc(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function Yc(r,e){return e.map(t=>r[t]).join(", ")}function _B(r,e,t,n){let o=t.map((l,m)=>{let c={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(c.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[m],shapeInfo:c}}),s=o.map(l=>l.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=FB(o,a,e),p=$A(r.gl,i),u=r.createProgram(p);return B().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:p,source:i,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:e,fragmentShader:p,source:i,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,...tw(r,e,u)}}function tw(r,e,t){let n={},o={},s={},a=[],i,p,u,l=null,m=null;m=r.getUniformLocation(t,"NAN",!1),B().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(t,"INFINITY",!1));let c=!1;for(let d=0;d<e.variableNames.length;d++){let f=e.variableNames[d];n[f]=r.getUniformLocation(t,f,c),n[`offset${f}`]=r.getUniformLocation(t,`offset${f}`,c),e.enableShapeUniforms&&(o[`${f}Shape`]=r.getUniformLocation(t,`${f}Shape`,c),s[`${f}TexShape`]=r.getUniformLocation(t,`${f}TexShape`,c))}return e.enableShapeUniforms&&(i=r.getUniformLocation(t,"outShape",c),u=r.getUniformLocation(t,"outShapeStrides",c),p=r.getUniformLocation(t,"outTexShape",c)),e.customUniforms&&e.customUniforms.forEach((d,f)=>{a[f]=r.getUniformLocation(t,d.name,c)}),{uniformLocations:n,customUniformLocations:a,infLoc:l,nanLoc:m,inShapesLocations:o,inTexShapesLocations:s,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:p}}function LB(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!b.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,p=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(i,p))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${p} must match`)})}function $B(r,e,t,n,o){e.program.enableShapeUniforms||(LB(e.inShapeInfos,t),LB([e.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):r.setOutputMatrixTexture(s.texture,a[0],a[1]),r.setProgram(e.webGLProgram),B().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((p,u)=>{let l=e.program.variableNames[u],m=e.uniformLocations[l],c=e.uniformLocations[`offset${l}`],d=e.inShapesLocations[`${l}Shape`],f=e.inTexShapesLocations[`${l}TexShape`];if(d){let{uniformShape:h}=$T(e.program.packedInputs,p.shape,p.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(d,new Int32Array(h));break;case 2:r.gl.uniform2iv(d,new Int32Array(h));break;case 3:r.gl.uniform3iv(d,new Int32Array(h));break;case 4:r.gl.uniform4iv(d,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,p.texData.texShape[0],p.texData.texShape[1]),m!=null){if(p.isUniform){if(b.sizeFromShape(p.shape)<2)r.gl.uniform1f(m,p.uniformValues[0]);else{let h=p.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(m,h)}return}p.texData.slice!=null&&c!=null&&r.gl.uniform1i(c,p.texData.slice.flatOffset),r.setInputMatrixTexture(p.texData.texture.texture,m,u)}});let i=e.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let p=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(p));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(p));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(p));break;default:break}}e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((p,u)=>{let l=e.customUniformLocations[u],m=o[u];if(p.type==="float")r.gl.uniform1fv(l,m);else if(p.type==="vec2")r.gl.uniform2fv(l,m);else if(p.type==="vec3")r.gl.uniform3fv(l,m);else if(p.type==="vec4")r.gl.uniform4fv(l,m);else if(p.type==="int")r.gl.uniform1iv(l,m);else if(p.type==="ivec2")r.gl.uniform2iv(l,m);else if(p.type==="ivec3")r.gl.uniform3iv(l,m);else if(p.type==="ivec4")r.gl.uniform4iv(l,m);else throw Error(`uniform type ${p.type} is not supported yet.`)}),r.executeProgram()}function BB(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let p=a.texData.texShape,{useSqueezeShape:u,uniformShape:l,keptDims:m}=$T(r.packedInputs,a.shape,p),c="",d="",f="";if(l.length===1&&r.packedInputs){let k=[Math.ceil(p[0]/2),Math.ceil(p[1]/2)];c=`${k[0]>1}_${k[1]>1}`}else if(l.length===2&&!r.packedInputs)d=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!r.packedInputs){let k=b.computeStrides(l);f=`${k[0]===p[1]}_${k[k.length-1]===p[1]}`}let h=a.shape.length,g=l.length===2&&b.arraysEqual(a.shape,p),y=b.sizeFromShape(a.shape)===1,T=C.getBroadcastDims(a.shape,t.shape),x=!r.packedInputs&&h===t.shape.length&&b.arraysEqual(p,t.texData.texShape),I=r.packedInputs||l.length>2?"":`${p[0]>1}_${p[1]>1}`;n+=`${h}_${x}_${u?m:""}_${l.length}_${y}_${T}_${g}_${c}_${d}_${f}_${I}_${i}`}else{let p=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${p}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${B().getNumber("WEBGL_VERSION")}`,s}function _t(r){return B().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var rw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Yt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Pl(["r","c","d"],e):Va(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var nw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Yt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Pl(["r","c","d"],e):Va(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var ow=class{constructor(e){this.variableNames=["A"];this.outTexUsage=3;let t=Yt();this.outputShape=e,this.userCode=`
      ${_T}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var sw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=3;let t=Yt();this.outputShape=e,this.userCode=`
      ${_T}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var aw=class{constructor(e,t=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Yt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Vc():Kc(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var iw=class{constructor(e,t=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Yt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let p=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${p}] = values[0];
            } else if (offset == 1) {
              result[${p}] = values[1];
            } else if (offset == 2) {
              result[${p}] = values[2];
            } else {
              result[${p}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Vc():Kc(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var Sw={};Xe(Sw,{bindVertexProgramAttributeStreams:()=>gw,createBufferFromOutputTexture:()=>Tw,createFloat16MatrixTexture:()=>cw,createFloat16PackedMatrixTexture:()=>hw,createFloat32MatrixTexture:()=>mw,createIndexBuffer:()=>lw,createPackedMatrixTexture:()=>fw,createUnsignedBytesMatrixTexture:()=>dw,createVertexBuffer:()=>pw,createVertexShader:()=>uw,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Iw,downloadFloat32MatrixFromBuffer:()=>xw,downloadMatrixFromPackedOutputTexture:()=>kw,downloadPackedMatrixFromBuffer:()=>Cw,getInternalFormatForFloat16MatrixTexture:()=>zT,getInternalFormatForFloat16PackedMatrixTexture:()=>WT,getInternalFormatForFloat32MatrixTexture:()=>OT,getInternalFormatForPackedMatrixTexture:()=>UT,getInternalFormatForUnsignedBytesMatrixTexture:()=>GT,uploadDenseMatrixToTexture:()=>bw,uploadPixelDataToTexture:()=>yw});function uw(r){let e=Yt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return _A(r,t)}function pw(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return zA(r,e)}function lw(r){let e=new Uint16Array([0,1,2,2,1,3]);return GA(r,e)}function ag(r,e,t,n,o,s){WA(e,t);let a=UA(r),i=r.TEXTURE_2D;return ve(r,()=>r.bindTexture(i,a)),ve(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),ve(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),ve(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),ve(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),B().getNumber("WEBGL_VERSION")===1?ve(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)):ve(r,()=>r.texStorage2D(i,1,n,e,t)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function OT(r){return r.internalFormatFloat}function mw(r,e,t,n){let[o,s]=Dl(e,t);return ag(r,o,s,OT(n),n.textureFormatFloat,r.FLOAT)}function zT(r){return r.internalFormatHalfFloat}function cw(r,e,t,n){let[o,s]=Dl(e,t);return ag(r,o,s,zT(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function GT(r){return r.downloadTextureFormat}function dw(r,e,t,n){let[o,s]=Dl(e,t);return ag(r,o,s,GT(n),r.RGBA,r.UNSIGNED_BYTE)}function UT(r){return r.internalFormatPackedFloat}function fw(r,e,t,n){let[o,s]=Si(e,t);return ag(r,o,s,UT(n),r.RGBA,r.FLOAT)}function WT(r){return r.internalFormatPackedHalfFloat}function hw(r,e,t,n){let[o,s]=Si(e,t);return ag(r,o,s,WT(n),r.RGBA,n.textureTypeHalfFloat)}function gw(r,e,t){return ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),ET(r,e,"clipSpacePos",t,3,20,0)&&ET(r,e,"uv",t,2,20,12)}function bw(r,e,t,n,o,s){ve(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,p;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,p=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,p=s.internalFormatPackedFloat),a.set(o),B().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,i,a)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,p,t,n,0,r.RGBA,i,a)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function yw(r,e,t){ve(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?B().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):B().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function Tw(r,e,t,n){let o=r.createBuffer();ve(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return ve(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),ve(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),ve(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function xw(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function Iw(r,e,t,n){let[o,s]=Dl(e,t),a=4,i=new Uint8Array(SB(e*t,a));return ve(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function Cw(r,e,t,n,o,s,a,i){let p=r,u=new Float32Array(vB(s,a));return p.bindBuffer(p.PIXEL_PACK_BUFFER,e),p.getBufferSubData(p.PIXEL_PACK_BUFFER,0,u),p.bindBuffer(p.PIXEL_PACK_BUFFER,null),u}function kw(r,e,t){let n=new Float32Array(e*t*4);return ve(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var Qc=class{constructor(e){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let t=B().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,FA(t,e)):this.gl=Zn(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),B().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Gc(this.gl,s),Jn(this.gl,a))this.textureHalfFloatExtension=Gc(this.gl,a);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Jn(this.gl,o))this.colorBufferHalfFloatExtension=Gc(this.gl,o);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Jn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Jn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=pw(this.gl),this.indexBuffer=lw(this.gl),this.framebuffer=KA(this.gl),this.textureConfig=rg(this.gl,this.textureHalfFloatExtension)}get debug(){return B().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ve(e,()=>e.finish()),ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ve(e,()=>e.deleteFramebuffer(this.framebuffer)),ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ve(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),mw(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),cw(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),dw(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),yw(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),bw(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),hw(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),fw(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(RT(this.gl,this.framebuffer),this.outputTexture=null),ve(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Iw(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return Cw(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return xw(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=Tw(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(B().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>kw(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=uw(t));let n=BA(t);return ve(t,()=>t.attachShader(n,this.vertexShader)),ve(t,()=>t.attachShader(n,e)),OA(t,n),this.debug&&ng(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=gw(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ve(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&ng(this.gl,this.program),ve(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?VA(this.gl,e,t):HA(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ve(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),qA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=Si(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&ng(this.gl,this.program),Uc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ve(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ve(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Gc(this.gl,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=hse(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),og(this.gl,e,this.framebuffer),this.debug&&Uc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(og(this.gl,this.outputTexture,this.framebuffer),this.debug&&Uc(this.gl)):RT(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;og(o,e,this.framebuffer),this.debug&&Uc(o),this.outputTexture=e,ve(o,()=>o.viewport(0,0,t,n)),ve(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),ve(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function hse(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:zB,bincountImpl:KT,bincountReduceImpl:GB,ceilImpl:UB,concatImpl:WB,equalImpl:KB,expImpl:VB,expm1Impl:HB,floorImpl:qB,gatherNdImpl:jB,gatherV2Impl:XB,greaterImpl:YB,greaterEqualImpl:QB,lessImpl:ZB,lessEqualImpl:JB,linSpaceImpl:eO,logImpl:tO,maxImpl:rO,maximumImpl:nO,minimumImpl:oO,multiplyImpl:sO,negImpl:aO,notEqualImpl:iO,prodImpl:uO,rangeImpl:pO,rsqrtImpl:lO,scatterImpl:mO,sigmoidImpl:cO,simpleAbsImpl:VT,sliceImpl:dO,sparseFillEmptyRowsImpl:fO,sparseReshapeImpl:hO,sparseSegmentReductionImpl:HT,sqrtImpl:gO,stridedSliceImpl:bO,stringNGramsImpl:yO,stringSplitImpl:TO,stringToHashBucketFastImpl:xO,subImpl:IO,tileImpl:CO,topKImpl:kO,transposeImpl:Fl,uniqueImpl:SO}=Bc;function vw(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function or(r,e){return e===1?[r]:vw(r,e)}function vO(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var Aw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=_t(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=or("rc",this.rank),n=qe(this.rank),o=this.getOutOfBoundsCondition(t),s=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var ig=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${gse(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Vc():Kc(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function gse(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?PB(["r","c","d"],"inputShape"):Va(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var ww=class{constructor(e){this.gpgpu=e;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(e,t,n){let o=wO(t,n),s=NO(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=AO(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let p=this.freeTextures[s].shift();return this.usedTextures[s].push(p),p}let i;return o===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=wO(n,o),a=NO(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=AO(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),p=B().get("WEBGL_DELETE_TEXTURE_THRESHOLD");p!==-1&&this._numBytesAllocated>p?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function bse(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function AO(r,e,t,n,o){let s=yse(e,n),a;if(o){let[p,u]=Si(r[0],r[1]);a=p*u}else{let[p,u]=Dl(r[0],r[1]);a=p*u}let i=bse(t,s);return a*i}function yse(r,e){switch(r){case 3:return UT(e);case 4:return WT(e);case 1:return OT(e);case 0:return zT(e);case 2:return GT(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function Tse(r){return B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function wO(r,e){if(r===1)return 3;if(r===0||r==null)return Tse(e);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function NO(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var Sn=class{constructor(e,t){this.variableNames=["A"];this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},yr="if (isnan(x)) return x;",DO="return x;",Nw="return abs(x);";var PO="return (x >= 0.0) ? x : (exp(x) - 1.0);",MO=yr+`
  return (x < 0.0) ? 0.0 : x;
`,FO=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,El="return x;",EO="return 1.0 / (1.0 + exp(-1.0 * x));";var LO="return x;",_O=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,$O=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,BO=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,OO="return 1.0 / (1.0 + exp(-1.0 * x));",Hs=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var Dw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let t=e.length,n=or("rc",t),o=qe(t),s=vO(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var Ise=br.whereImpl,Cse=1e-7,kse=1e-4,qT={};function Sse(r){return r in qT||(qT[r]={}),qT[r]}var vse=B().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Ase=600;function wse(){return B().global.screen==null?1024:B().global.screen.height*B().global.screen.width*window.devicePixelRatio*Ase/1024/1024}var Pw=class extends ss{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!B().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Qc)t=e;else{let n=Zn(B().getNumber("WEBGL_VERSION"),e);t=new Qc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Zn(B().getNumber("WEBGL_VERSION"));t=new Qc(n),this.binaryCache=Sse(B().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ww(this.gpgpu),this.numMBBeforeWarning=wse(),this.texData=new Ja(this,Fn())}nextDataId(){return Pw.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((B().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||B().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:1,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if(B().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:1,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:p}=t;if(a!=null){let c;p?c=new Hs(i,El):c=new Sn(i,El);let d=this.runWebGLProgram(c,[{dataId:e,shape:i,dtype:o}],o),f=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let u=this.activeTimers!=null,l;u&&(l=b.now());let m;if(o==="complex64"){let c=this.readSync(s.real.dataId),d=this.readSync(s.imag.dataId);m=C.mergeRealAndImagArrays(c,d)}else m=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=b.now()-l),this.convertAndCacheOnCPU(e,m)}async read(e){if(this.pendingRead.has(e)){let f=this.pendingRead.get(e);return new Promise(h=>f.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:p}=t;if(s!=null){let f;p?f=new Hs(o,El):f=new Sn(o,El);let h=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(B().getBool("DEBUG")&&!B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&B().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,l;if(a!=="complex64"&&B().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let f=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...tg(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let m;if(a==="complex64"){let f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=f[0],g=f[1];m=C.mergeRealAndImagArrays(h,g)}else if(u==null)m=this.getValuesFromTexture(e);else{let f=b.sizeFromShape(o);m=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),u!=null){let f=this.gpgpu.gl;ve(f,()=>f.deleteBuffer(u))}let c=this.convertAndCacheOnCPU(e,m),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(f=>f(c)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Fn().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,t={}){let n=this.texData.get(e),{values:o,shape:s,slice:a,dtype:i,isPacked:p,texture:u}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;p?d=new Hs(s,El):d=new Sn(s,El);let f=this.runWebGLProgram(d,[{dataId:e,shape:s,dtype:i}],i),h=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),h}if(u==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape),m=Fn().makeTensorFromTensorInfo(l),c=this.texData.get(l.dataId);return{tensorRef:m,...c.texture}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>b.decodeString(o));return xe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!LA(n))throw B().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=b.sizeFromShape(t);if(B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(e),d=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...tg(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(c),f}let a=B().getBool("WEBGL_PACK")&&o===!0,i=a?sg(t):t,p=a?new sw(i):new ow(i),u=this.runWebGLProgram(p,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),m}timerAvailable(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(p=>p.query)).filter(p=>p!=null),a=b.flatten(this.activeTimers.map(p=>p.name)).filter(p=>p!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let p=await Promise.all(s);i.kernelMs=b.sum(p),i.getExtraProfileInfo=()=>p.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}async getQueryTime(e){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),p=i&&i.origDataId||e,u=this.dataRefCount.get(p);u>1?this.dataRefCount.set(p,u-1):(this.dataRefCount.delete(p),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=vse){return B().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&b.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Ise(e.shape,t)}packedUnaryOp(e,t,n){let o=new Hs(e.shape,t),s=this.compileAndRun(o,[e],n);return Fn().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=VT(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(B().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Nw,e.dtype);let t=new Sn(e.shape,Nw),n=this.compileAndRun(t,[e]);return Fn().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){return Fn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new Dw(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Aw(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[ku(e.shape),...Su(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[ku(t),...Su(t)],a=new ig(s,n),i=!0,p=[n],u=this.runWebGLProgram(a,[o],e.dtype,p,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:o,shape:s,dtype:a}=n;if(t!=null){let c=b.sizeFromShape(s),d=t[0]*t[1]*4;b.assert(c<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=sg(s),p;o?p=new nw(i):p=new rw(i);let u=!0,l=[t??tg(i)],m=this.runWebGLProgram(p,[{shape:i,dtype:a,dataId:e}],a,l,u,t);return{dtype:a,shape:s,dataId:m.dataId}}runWebGLProgram(e,t,n,o,s=!1,a){let i=this.makeTensorInfo(e.outputShape,n),p=this.texData.get(i.dataId);if(e.packedOutput&&(p.isPacked=!0),e.outPackingScheme===0){let y=a??tg(e.outputShape);p.texShape=y.map(T=>T*2)}if(e.outTexUsage!=null&&(p.usage=e.outTexUsage),b.sizeFromShape(i.shape)===0)return p.values=b.getTypedArrayFromDType(i.dtype,0),i;let u=[],l=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let T=this.texData.get(y.dataId);if(T.texture==null){if(!e.packedInputs&&b.sizeFromShape(y.shape)<=B().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:T.values};e.packedInputs&&(T.isPacked=!0,T.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!T.isPacked!=!!e.packedInputs)y=T.isPacked?this.unpackTensor(y):this.packTensor(y),u.push(y),T=this.texData.get(y.dataId);else if(T.isPacked&&!hp(T.shape,y.shape)){let x=y,I=y.shape;y.shape=T.shape,y=this.packedReshape(y,I),u.push(y),T=this.texData.get(y.dataId),x.shape=I}return{shape:y.shape,texData:T,isUniform:!1}});this.uploadToGPU(i.dataId);let m={shape:i.shape,texData:p,isUniform:!1},c=BB(e,l,m),d=this.getAndSaveBinary(c,()=>_B(this.gpgpu,e,l,m)),f=this.activeTimers!=null,h;f&&(h=this.startTimer()),B().get("ENGINE_COMPILE_ONLY")||$B(this.gpgpu,d,l,m,o),u.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let g=B().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let y=b.now();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!B().getBool("WEBGL_LAZILY_UNPACK")&&p.isPacked&&s===!1){let y=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),y}return i}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(B().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!B().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=B().getBool("DEBUG");B().set("DEBUG",!1);let t=this.abs(me(1e-8)).dataSync()[0];if(B().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Cse:kse}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:p}=t;if(a!=null)return;let u=this.activeTimers!=null,l;u&&(l=b.now());let m=t.texShape;if(m==null&&(m=jA(n,p),t.texShape=m),s!=null){let c=sg(n),d,f=m[1],h=m[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(p||!g)&&([f,h]=Si(m[0],m[1])),p?d=new iw(c,g):d=new aw(c,g);let y=g?[h,f]:m,T=this.makeTensorInfo(y,o),x=this.texData.get(T.dataId);g?x.usage=2:x.usage=1,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(T.dataId),f,h,s);let I=[[h,f]],k=!0,w=this.runWebGLProgram(d,[T],o,I,k),M=this.texData.get(w.dataId);t.texShape=M.texShape,t.isPacked=M.isPacked,t.usage=M.usage,B().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=M.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(T),u&&(this.uploadWaitMs+=b.now()-l)}else{let c=this.acquireTexture(m,i,o,p);t.texture=c}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=Nse(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*b.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(s){throw s}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await af(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(FT(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:o,nanLoc:s,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:p,outShapeStridesLocation:u,outTexShapeLocation:l}=tw(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=o,e.nanLoc=s,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=p,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}},ug=Pw;ug.nextDataId=0;function Nse(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var Dse="0.0.0";function zO(){B().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ju.isBrowser()&&tp("webgl",()=>new ug,2);var e5t={forceHalfFloat:zO};var jT=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var qs=class{constructor(e,t,n){this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var gp=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var Ha=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=_t(s);let a="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${qe(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let p=or("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${p[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${p[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${p[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${p[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function sr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var GO={kernelName:Vn,backendName:"webgl",kernelFunc:sr};function On(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=sr({inputs:{x:n},backend:t}),p=sr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:p},s}var UO={kernelName:Lu,backendName:"webgl",kernelFunc:On};var Mw="return (a < 0.) ? b * a : a;",Fw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Pse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),i=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ha(Fw,o.shape,a.shape):new qs(Mw,o.shape,a.shape),p=t.runWebGLProgram(i,[o,a],"float32");return t.disposeIntermediateTensorInfo(a),p}var WO={kernelName:ko,backendName:"webgl",kernelFunc:Pse};var Ew="return (a < 0.) ? b * a : a;",Rw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Mse(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ha(Rw,n.shape,o.shape):new qs(Ew,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var KO={kernelName:Lo,backendName:"webgl",kernelFunc:Mse};var js="if (isnan(x)) return x;",VO=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,HO=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ae({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,p=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let m=i.texData.get(a.dataId),c=t(m.values,p);return i.makeTensorInfo(a.shape,p,c)}let u=B().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,l;return u?l=new Hs(a.shape,e):l=new Sn(a.shape,r),i.runWebGLProgram(l,[a],p)}}function mt({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:p,b:u}=a,l=i;if(n&&p.dtype==="complex64"){let f=l.texData.get(p.dataId),h=l.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(x=>{let[I,k]=x,w={dataId:I.dataId,dtype:I.dtype,shape:p.shape},M={dataId:k.dataId,dtype:k.dtype,shape:u.shape},F=new qs(r,p.shape,u.shape);return l.runWebGLProgram(F,[w,M],Ft(I.dtype,k.dtype))}),T=On({inputs:{real:g,imag:y},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(y),T}let m=s||Ft(p.dtype,u.dtype);if((p.dtype==="string"||u.dtype==="string"||l.shouldExecuteOnCPU([p,u]))&&o!=null){let f=l.texData.get(p.dataId).values,h=l.texData.get(u.dataId).values,g=p.dtype==="string"?C.fromUint8ToStringArray(f):f,y=p.dtype==="string"?C.fromUint8ToStringArray(h):h,[T,x]=o(p.shape,u.shape,g,y,m),I=l.makeTensorInfo(x,m),k=l.texData.get(I.dataId);return k.values=T,I}let c=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,d;return c?d=new Ha(e,p.shape,u.shape,t):d=new qs(r,p.shape,u.shape),l.runWebGLProgram(d,[p,u],m)}}function bp(r,e=!1){if(r==="linear")return e?LO:DO;if(r==="relu")return e?$O:MO;if(r==="elu")return e?_O:PO;if(r==="relu6")return e?BO:FO;if(r==="prelu")return e?Rw:Ew;if(r==="leakyrelu")return e?Fw:Mw;if(r==="sigmoid")return e?OO:EO;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var pg=class{constructor(e,t,n,o=!1,s=!1,a=!1,i=null,p=!1,u=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=_t(this.outputShape.length);let l=o?e[1]:e[2],m=Math.ceil(l/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";i&&(p?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");let T=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",I="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(I=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${x};
          int batchB = ${I};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${y}

        setOutput(result);
      }
    `}};var Lw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},XT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var qO="return a * b;";function lg(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=C.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),p=t.texData.get(o.dataId),u=new XT(Lw.REAL,n.shape,o.shape),l=new XT(Lw.IMAG,n.shape,o.shape),m=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape}],c=t.runWebGLProgram(u,m,"float32"),d=t.runWebGLProgram(l,m,"float32"),f=On({inputs:{real:c,imag:d},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),p=t.texData.get(o.dataId),[u,l]=sO(n.shape,o.shape,i.values,p.values,s),m=t.makeTensorInfo(l,s),c=t.texData.get(m.dataId);return c.values=u,m}let a;return B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Ha(qO,n.shape,o.shape):a=new qs(qO,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var jO={kernelName:Fo,backendName:"webgl",kernelFunc:lg};function XO(r,e,t){let n=[ku(r.shape),...Su(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[ku(e),...Su(e)],a=new ig(s,n),i=!0,p=[n],u=t.runWebGLProgram(a,[o],r.dtype,p,i);return{dataId:u.dataId,shape:e,dtype:u.dtype}}function ie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=b.sizeFromShape(o.shape),p=b.inferFromImplicitShape(s,i),u=b.sizeFromShape(p);b.assert(i===u,()=>`The new shape (${p}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let l=a.texData.get(o.dataId);return l.isPacked&&!hp(o.shape,p)&&!(l.texture!==null&&hp(l.shape,p))?XO(o,p,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:p,dtype:o.dtype})}var YO={kernelName:fs,backendName:"webgl",kernelFunc:ie};var YT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,p=n%4,u="sumValue += dot(values, ones);";if(t!=null){let m=1/t;u=`sumValue += dot(values * ${b.isInt(m)?m.toPrecision(2):m}, ones);`}let l="";s%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${p===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var _w=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",p="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",p="min"):t==="max"&&(i="-1.0 / 1e-20",p="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let l=Math.floor(n/4)*4,m=n%4,c=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${p}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${p}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${u});
      }
    `}};function Ese(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=C.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function eo(r,e,t,n){let o=Ese(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:p,outSize:u}=o[a],l,m;t==="mean"?l=a===0?new YT({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u},i):new YT({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u}):l=new _w({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u},t),m=s,s=n.runWebGLProgram(l,[s],e),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var $w=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=qe(this.rank),s=Rse(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function Rse(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var Bw=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=qe(this.rank),s=vw("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=s[l];let i=`vec2(${a.slice(-2).join()})`,p=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${p}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${p}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function yp(r,e,t){let n=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bw(r.shape,e):new $w(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function QO(r,e,t,n){let o=e,s=r.shape.length,a=b.parseAxisParam(o,r.shape),i=a,p=C.getAxesPermutation(i,s),u=p!=null,l=r;u&&(l=yp(r,p,n),i=C.getInnerMostAxes(i.length,s)),C.assertAxesAreInnerMostDims("sum",i,s);let[m,c]=C.computeOutAndReduceShapes(l.shape,i),d=m;t&&(d=C.expandShapeToKeepDim(m,a));let f=b.sizeFromShape(c),g=b.sizeFromShape(r.shape)/f,y=ie({inputs:{x:l},attrs:{shape:[g,f]},backend:n}),T=Ji(r.dtype),x=eo(y,T,"sum",n),I=ie({inputs:{x},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),u&&n.disposeIntermediateTensorInfo(l),I}function Rl(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return QO(o,s,a,t)}var ZO={kernelName:Ko,backendName:"webgl",kernelFunc:Rl};function Kt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,p=new Array(i);for(let l=0;l<p.length;l++)p[l]=o.shape[s[l]];let u;if(a.shouldExecuteOnCPU([o])){let m=a.texData.get(o.dataId).values,c=Fl(m,o.shape,o.dtype,s,p);u=a.makeTensorInfo(p,o.dtype);let d=a.texData.get(u.dataId);d.values=c}else u=yp(o,s,a);return u}var JO={kernelName:Pn,backendName:"webgl",kernelFunc:Kt};var Ow=1e3;function Ll({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:p=null}){let u=r.shape.length,l=e.shape.length,m=t?r.shape[u-2]:r.shape[u-1],c=n?e.shape[l-1]:e.shape[l-2],d=t?r.shape[u-1]:r.shape[u-2],f=n?e.shape[l-2]:e.shape[l-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[y,m,d]:[y,d,m],w=n?[T,f,c]:[T,c,f],M=ie({inputs:{x:r},backend:o,attrs:{shape:k}}),F=ie({inputs:{x:e},backend:o,attrs:{shape:w}}),E=[M,F],$=Math.max(y,T),G=t?M.shape[1]:M.shape[2],W=s!=null,V=a!=null,q=p==="leakyrelu",j=p!=null?bp(p,!0):null,Y=W||V||q||j!=null,te;if((d===1||f===1)&&G>Ow&&Y===!1){let oe=M,se=F;t&&(oe=Kt({inputs:{x:M},backend:o,attrs:{perm:[0,2,1]}}),E.push(oe)),n&&(se=Kt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),E.push(se));let ae=f!==1,ce=f===1,ue=oe;ae&&(ue=ie({inputs:{x:oe},backend:o,attrs:{shape:[$,G,1]}}),E.push(ue));let ye=f===1?2:1,he=se;ce&&(he=ie({inputs:{x:se},backend:o,attrs:{shape:[$,1,G]}}),E.push(he));let Ce=lg({inputs:{a:ue,b:he},backend:o});te=Rl({inputs:{x:Ce},backend:o,attrs:{axis:ye,keepDims:!0}}),E.push(Ce)}else{let oe=Ft(r.dtype,e.dtype),se=new pg(k,w,[$,d,f],t,n,W,j,V,q),ae=[M,F];if(s!=null&&ae.push(s),V&&ae.push(a),q){let ce=o.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));ae.push(ce),E.push(ce)}te=o.runWebGLProgram(se,ae,oe)}let H=ie({inputs:{x:te},backend:o,attrs:{shape:I}});E.push(te);for(let oe of E)o.disposeIntermediateTensorInfo(oe);return H}function Lse(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n;return Ll({a:o,b:s,transposeA:p,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var ez={kernelName:Cs,backendName:"webgl",kernelFunc:Lse};var tz="return abs(x);";function _se(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=VT(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Hs(n.shape,tz):o=new Sn(n.shape,tz),t.runWebGLProgram(o,[n],n.dtype)}var rz={kernelName:as,backendName:"webgl",kernelFunc:_se};var $se=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Bse=Ae({opSnippet:$se}),nz={kernelName:Pi,backendName:"webgl",kernelFunc:Bse};var Ose=yr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,zse=Ae({opSnippet:Ose}),oz={kernelName:Mi,backendName:"webgl",kernelFunc:zse};var sz="return a + b;",Gse=mt({opSnippet:sz,packedOpSnippet:sz,supportsComplex:!0,cpuKernelImpl:zB}),az={kernelName:Nn,backendName:"webgl",kernelFunc:Gse};var zw=class{constructor(e,t){this.outputShape=[];this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var Gw=class{constructor(e,t){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function QT(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return sr({inputs:{x:n[0]},backend:t});if(n.length>B().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let p=Math.floor(n.length/2),u=QT({inputs:n.slice(0,p),backend:t}),l=QT({inputs:n.slice(p),backend:t});return QT({inputs:[u,l],backend:t})}let o=n.map(p=>p.dtype).reduce((p,u)=>Ft(p,u)),s=n.map(p=>p.shape),i=B().getBool("WEBGL_PACK")?new Gw(n[0].shape,s):new zw(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var iz={kernelName:oo,backendName:"webgl",kernelFunc:QT};function Use(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=p,l=C.getAxesPermutation(u,i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,i)),C.assertAxesAreInnerMostDims("all",u,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,u),f=b.sizeFromShape(d),h=ie({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"all",t),y;if(a){let T=C.expandShapeToKeepDim(c,p);y=ie({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ie({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),y}var uz={kernelName:Fi,backendName:"webgl",kernelFunc:Use};function Wse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=p,l=C.getAxesPermutation(u,i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,i)),C.assertAxesAreInnerMostDims("any",u,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,u),f=b.sizeFromShape(d),h=ie({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"any",t),y;if(a){let T=C.expandShapeToKeepDim(c,p);y=ie({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ie({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),y}var pz={kernelName:Ei,backendName:"webgl",kernelFunc:Wse};var Uw=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",p=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${p};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var Ww=class{constructor(e,t,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;b.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,p=i.length,u=qe(p),l=or("coords",p),m,c;if(a===1){c=p+1;let F=qe(c);m=`
        ${F} sourceLocR = ${F}(${l.join()}, 0);
        ++${l[p-1]};
        ${F} sourceLocG = ${F}(${l.join()}, 0);
        ++${l[p-2]};
        ${F} sourceLocA = ${F}(${l.join()}, 0);
        --${l[p-1]};
        ${F} sourceLocB = ${F}(${l.join()}, 0);
        --${l[p-2]};`}else c=p,m=`
        ${u} sourceLocR = coords;
        ++${l[p-1]};
        ${u} sourceLocG = coords;
        ++${l[p-2]};
        ${u} sourceLocA = coords;
        --${l[p-1]};
        ${u} sourceLocB = coords;
        --${l[p-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(F=>"int "+F),g=or("sourceLocR",c-1).concat("inIdx.r"),y=or("sourceLocG",c-1).concat("inIdx.g"),T=or("sourceLocB",c-1).concat("inIdx.b"),x=or("sourceLocA",c-1).concat("inIdx.a"),I=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,M=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${M}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[p-1]} < ${i[p-1]-1};
        bool hasNextRow = ${l[p-2]} < ${i[p-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function lz(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=C.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},p=new Uw(i,t,n==null),u=[e];n!=null&&u.push(n);let l=r.runWebGLProgram(p,u,"int32");if(l.shape[1]===1)return l;let m=lz(r,e,t,l);return r.disposeIntermediateTensorInfo(l),m}function mz(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=C.computeOptimalWindowSize(s),i=new Ww(o,a,t,n==null),p=n==null?[e]:[e,n],u=r.runWebGLProgram(i,p,"int32");if(u.shape.length===e.shape.length){let l=mz(r,e,t,u);return r.disposeIntermediateTensorInfo(u),l}return u}function ZT(r,e,t,n){let o=[t];if(C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!B().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],a=r.texData.get(e.dataId),i=a!==null&&a.isPacked,p=e;i&&(p=r.unpackTensor(e),s.push(p));let[u,l]=C.computeOutAndReduceShapes(p.shape,o),m=b.sizeFromShape(l),c=ie({inputs:{x:p},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=lz(r,c,n);s.push(d);let f=ie({inputs:{x:d},backend:r,attrs:{shape:u}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return mz(r,e,n)}function Kse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Kt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],p.shape.length);let l=ZT(t,p,a[0],"max");return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),l}var cz={kernelName:so,backendName:"webgl",kernelFunc:Kse};function Vse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Kt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],p.shape.length);let l=ZT(t,p,a[0],"min");return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),l}var dz={kernelName:ri,backendName:"webgl",kernelFunc:Vse};var Hse=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,qse=Ae({opSnippet:Hse}),fz={kernelName:Ri,backendName:"webgl",kernelFunc:qse};var jse=yr+"return log(x + sqrt(x * x + 1.0));",Xse=Ae({opSnippet:jse}),hz={kernelName:Li,backendName:"webgl",kernelFunc:Xse};var Yse=yr+`
  return atan(x);
`,Qse=Ae({opSnippet:Yse}),gz={kernelName:_i,backendName:"webgl",kernelFunc:Qse};var Zse=VO+`
  return atan(a, b);
`,Jse=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+HO+`
  return result;
`,eae=mt({opSnippet:Zse,packedOpSnippet:Jse}),bz={kernelName:Bi,backendName:"webgl",kernelFunc:eae};var tae=yr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,rae=Ae({opSnippet:tae}),yz={kernelName:$i,backendName:"webgl",kernelFunc:rae};var vi=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,p=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,m=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,T="0.0";if(h||(T="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${p});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:y:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / count");let k=Math.floor(a/4)*4,w=a%4,M=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${p});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${M}
          }

          int xC = xCCorner + ${k};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${M}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${M}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${M}
          }
        }
        setOutput(${I});
      }
    `}},_l=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,p=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,m=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,T=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",I="0.0";if(x||(I="-1.0 / 1e-20"),n){let $=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${p}, ${u});
        const ivec3 pads = ivec3(${g}, ${y}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${$} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let M=Math.floor(a/4)*4,F=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${p}, ${u});
      const ivec3 pads = ivec3(${g}, ${y}, ${T});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${M}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${M};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${w});
        }
      }
    `}};function nae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ka(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;b.assert(C.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=C.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))return sr({inputs:{x:o},backend:t});let m=new vi(l,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var Tz={kernelName:ao,backendName:"webgl",kernelFunc:nae};function oae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n,l=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,l,i,p,u),c=new _l(m,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var xz={kernelName:Ru,backendName:"webgl",kernelFunc:oae};var Kw=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,p=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=p-1-e.padInfo.top,m=u-1-e.padInfo.left,c=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Vw=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,p=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,m=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=m-1-e.padInfo.front,h=c-1-e.padInfo.top,g=d-1-e.padInfo.left,y=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${p}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function sae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,p,m,u,l),d=new Vw(c);return t.runWebGLProgram(d,[o],a.dtype)}var Iz={kernelName:mm,backendName:"webgl",kernelFunc:sae};function aae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;Ka([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=C.computePool2DInfo(a.shape,i,p,1,u),m=new Kw(l);return t.runWebGLProgram(m,[o],a.dtype)}var Cz={kernelName:lm,backendName:"webgl",kernelFunc:aae};function iae(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Ll({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var kz={kernelName:io,backendName:"webgl",kernelFunc:iae};var Hw=class{constructor(e,t,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let p="1.0";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${p};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var qw=class{constructor(e,t,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let p="vec4(1.0)";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${p};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var uae=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:p}=t;p==null&&(p=.001);let u=[n,o,s],l=null;a!=null&&(l=a.shape,u.push(a));let m=null;i!=null&&(m=i.shape,u.push(i));let c=B().getBool("WEBGL_PACK_NORMALIZATION")?new qw(n.shape,o.shape,s.shape,l,m,p):new Hw(n.shape,o.shape,s.shape,l,m,p);return e.runWebGLProgram(c,u,u[0].dtype)},Sz={kernelName:Io,backendName:"webgl",kernelFunc:uae};var Xw=class{constructor(e){this.variableNames=["source"];this.outputShape=e,this.rank=e.length;let t=qe(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=pae(this.rank),o,s=e.map((a,i)=>`sourceLoc.${jw[i]} = start[${i}] + coords.${jw[i]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},jw=["x","y","z","w","u","v"];function pae(r){if(r===1)return"sourceLoc";if(r<=6)return jw.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Yw=class{constructor(e){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=qe(this.rank),n=or("coords",this.rank),o=or("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,p=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,m)=>`start[${m}]`).join()});`:e.map((l,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${p}
        setOutput(result);
      }
    `}};function lae(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=Tt.computeFlatOffset(e,b.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let p=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,p+1),s}function qa(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,p]=Tt.parseSliceParams(o,s,a);if(Tt.assertParamsValid(o,i,p),b.sizeFromShape(p)===0)return t.makeTensorInfo(p,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.texData.get(o.dataId),c=dO(m.values,i,p,o.shape,o.dtype);return t.makeTensorInfo(p,o.dtype,c)}let{isPacked:u}=t.texData.get(o.dataId),l=Tt.isSliceContinous(o.shape,i,p);if(u||!l){let m=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yw(p):new Xw(p),c=[i];return t.runWebGLProgram(m,[o],o.dtype,c)}return t.uploadToGPU(o.dataId),lae(o,i,p,t)}var vz={kernelName:gs,backendName:"webgl",kernelFunc:qa};var mae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((T,x)=>T*x),p=C.getReshaped(o.shape,s,i),u=C.getPermuted(p.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=[],f=ie({inputs:{x:o},backend:t,attrs:{shape:p}}),h=Kt({inputs:{x:f},backend:t,attrs:{perm:u}}),g=ie({inputs:{x:h},backend:t,attrs:{shape:l}}),y=qa({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>t.disposeIntermediateTensorInfo(T)),y},Az={kernelName:is,backendName:"webgl",kernelFunc:mae};function cae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),p=t.readSync(s.dataId),u=KT(i,p,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var wz={kernelName:cm,backendName:"webgl",kernelFunc:cae};function dae(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),a=t.readSync(o.dataId),i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var Nz={kernelName:dm,backendName:"webgl",kernelFunc:dae};var fae="return float(a != b);",Qw=mt({opSnippet:fae,cpuKernelImpl:iO,dtype:"bool"}),Dz={kernelName:ba,backendName:"webgl",kernelFunc:Qw};function vu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.real},backend:t})}var Pz={kernelName:Wu,backendName:"webgl",kernelFunc:vu};var hae="return float(int(x));";function Mz(r,e){let t=new Sn(r.shape,hae),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function Zw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return sr({inputs:{x:o},backend:t});let a=bt(o.shape),i=Zw({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),p=On({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),p}if(o.dtype==="complex64"){let a=vu({inputs:{input:o},backend:t}),i=Zw({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=sr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return Mz(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),p=Qw({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var Fz={kernelName:Wn,backendName:"webgl",kernelFunc:Zw};var Ez="return ceil(x);",gae=Ae({opSnippet:Ez,packedOpSnippet:Ez,cpuKernelImpl:UB}),Rz={kernelName:uo,backendName:"webgl",kernelFunc:gae};var Jw=class{constructor(e){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var eN=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function bae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;B().getBool("WEBGL_PACK_CLIP")?i=new eN(o.shape):i=new Jw(o.shape);let p=[[s],[a]];return t.runWebGLProgram(i,[o],o.dtype,p)}var Lz={kernelName:Kn,backendName:"webgl",kernelFunc:bae};var tN=class{constructor(e){this.variableNames=["real","imag"];this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function _z(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function yae(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new tN(n.shape),a=[_z(n,o.complexTensorInfos.real),_z(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var $z={kernelName:_u,backendName:"webgl",kernelFunc:yae};var rN=class{constructor(e){this.outputShape=[];this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var nN=class{constructor(e,t){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=C.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=qe(o),a=or("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let p=new Array(e.length-1);p[0]=e[0][t];for(let h=1;h<p.length;h++)p[h]=p[h-1]+e[h][t];let u=i[t],l=i.slice(-2),m=i.join(),c=`if (${u} < ${p[0]}) {
        return getChannel(
            getT0(${m}), vec2(${l.join()}));
        }`;for(let h=1;h<p.length;h++){let g=p[h-1];c+=`
        if (${u} < ${p[h]}  && ${u} >= ${p[h-1]}) {
          return getChannel(
            getT${h}(${JT(i,u,g)}),
            vec2(${JT(l,u,g)}));
        }`}let d=p.length,f=p[p.length-1];c+=`
        return getChannel(
          getT${d}(${JT(i,u,f)}),
          vec2(${JT(l,u,f)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function JT(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function $l(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var Bz={kernelName:zu,backendName:"webgl",kernelFunc:$l};function Bl(r,e,t){let n=r[0].dtype;if(n==="complex64"){let l=r.map(h=>vu({inputs:{input:h},backend:t})),m=r.map(h=>$l({inputs:{input:h},backend:t})),c=Bl(l,e,t),d=Bl(m,e,t),f=On({inputs:{real:c,imag:d},backend:t});return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),m.forEach(h=>t.disposeIntermediateTensorInfo(h)),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let l=r.map(y=>{let T=b.sizeFromShape(y.shape.slice(e));return ie({inputs:{x:y},backend:t,attrs:{shape:[-1,T]}})}),m=l.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),c=C.computeOutShape(l.map(y=>y.shape),1),d=l[0].shape[0]===1,f=WB(m,c,n,d),h=C.computeOutShape(r.map(y=>y.shape),e),g=t.makeTensorInfo(h,n,f);return l.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}if(r.length>B().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(r.length/2),m=Bl(r.slice(0,l),e,t),c=Bl(r.slice(l),e,t),d=Bl([m,c],e,t);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),d}if(B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let l=new nN(r.map(m=>m.shape),e);return t.runWebGLProgram(l,r,n)}let{tensors2D:s,outShape:a}=Tae(r,e,t),i=new rN(s.map(l=>l.shape)),p=t.runWebGLProgram(i,s,n);s.forEach(l=>t.disposeIntermediateTensorInfo(l));let u=ie({inputs:{x:p},attrs:{shape:a},backend:t});return t.disposeIntermediateTensorInfo(p),u}function Tae(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>ie({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function oN(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(u=>u.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(u=>b.sizeFromShape(u.shape)>0);if(i.length===1)return sr({inputs:{x:i[0]},backend:t});let p=i.map(u=>u.shape);return C.assertParamsConsistent(p,s),Bl(i,s,t)}var Oz={kernelName:us,backendName:"webgl",kernelFunc:oN};var mg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,p=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,m=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,T=g?2:3,x=g?3:1,I="",k="";n&&(o?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:I=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${p}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${k}
        setOutput(result);
      }
    `}},sN=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,p=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,m=e.filterDepth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${p};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var aN=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let{dataFormat:n}=t,o=Yt(),s=n==="channelsLast",a=s?1:2,i=s?2:3,p=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,u="";for(let l=0;l<=1;l++)for(let m=0;m<=1;m++)u+=`
          blockIndex = rc.z + ${m};
          pos = rc.y + ${l};

          ${p}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+m}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+m}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}};function ex(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function tx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=r.shape,u=n.texData.get(r.dataId),l=t.inChannels,m=p[0]*p[1]*p[2],c=t.outChannels,d=t.dataFormat==="channelsLast",f=!1,h=!1,g,y=[];if(s!=null){let I=ex(s.shape,d);I!=null&&(s=ie({inputs:{x:s},backend:n,attrs:{shape:I}}),y.push(s))}if(o!=null){let I=ex(o.shape,d);I!=null&&(o=ie({inputs:{x:o},backend:n,attrs:{shape:I}}),y.push(o))}if(!((m===1||c===1)&&l>Ow)&&u.isPacked&&d&&u.texture!=null&&p[2]%2!==0&&b.arraysEqual(u.shape.slice(-3),p.slice(-3))){let I=p[0]*p[1]*(p[2]+1),k={dataId:r.dataId,shape:[1,I,t.inChannels],dtype:r.dtype},w=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,b.assert(hp(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);let M=ie({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(M);let F=Ll({a:k,b:M,backend:n,transposeA:f,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),E=n.texData.get(F.dataId);b.assert(E.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=w,E.shape=t.outShape,g=sr({inputs:{x:F},backend:n}),g.shape=t.outShape,y.push(F)}else{let I=t.outHeight*t.outWidth,k=ie({inputs:{x:r},backend:n,attrs:{shape:d?[t.batchSize,I,t.inChannels]:[t.batchSize,t.inChannels,I]}}),w=ie({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),M=Ll({a:d?k:w,b:d?w:k,transposeA:!d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ie({inputs:{x:M},backend:n,attrs:{shape:t.outShape}}),y.push(k),y.push(w),y.push(M)}for(let I of y)n.disposeIntermediateTensorInfo(I);return g}function rx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:p,filterHeight:u,inChannels:l,outWidth:m,outHeight:c,dataFormat:d}=t,f=d==="channelsLast",h=p*u*l,g=c*m,y=[t.batchSize,h,g],T=!0,x=!1,I=[];if(s!=null){let H=ex(s.shape,f);H!=null&&(s=ie({inputs:{x:s},backend:n,attrs:{shape:H}}),I.push(s))}if(o!=null){let H=ex(o.shape,f);H!=null&&(o=ie({inputs:{x:o},backend:n,attrs:{shape:H}}),I.push(o))}let k=ie({inputs:{x:e},backend:n,attrs:{shape:[1,h,b.sizeFromShape(e.shape)/h]}});I.push(k);let w=new aN(y,t),M=[r.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],F=n.runWebGLProgram(w,[r],"float32",M),E=ie({inputs:{x:F},backend:n,attrs:{shape:y}});I.push(F),I.push(E);let $=o!=null,G=s!=null,W=i==="leakyrelu",V=i?bp(i,!0):null,q=new pg(f?E.shape:k.shape,f?k.shape:E.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],T,x,$,V,G,W),j=f?[E,k]:[k,E];if(o&&j.push(o),G&&j.push(s),W){let H=n.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));j.push(H),I.push(H)}let Y=n.runWebGLProgram(q,j,"float32"),te=ie({inputs:{x:Y},backend:n,attrs:{shape:t.outShape}});I.push(Y);for(let H of I)n.disposeIntermediateTensorInfo(H);return te}function xae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=tx({x:o,filter:s,convInfo:c,backend:t});else if(B().getBool("WEBGL_CONV_IM2COL"))d=rx({x:o,filter:s,convInfo:c,backend:t});else{let h=new mg(c);d=t.runWebGLProgram(h,[o,s],"float32")}let f=ie({inputs:{x:d},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(d),f}var zz={kernelName:po,backendName:"webgl",kernelFunc:xae};var iN=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},uN=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,p=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,m=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},pN=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},lN=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,p=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Iae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),d=new iN(c);return t.runWebGLProgram(d,[o,s],"float32")}var Gz={kernelName:fm,backendName:"webgl",kernelFunc:Iae};function Cae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(a,s.shape,i,1,p,l,!1,m),d=new uN(c);return t.runWebGLProgram(d,[o,s],"float32")}var Uz={kernelName:lo,backendName:"webgl",kernelFunc:Cae};function kae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n,u=C.computeConv3DInfo(o.shape,s.shape,a,p,i),l=new sN(u);return t.runWebGLProgram(l,[o,s],"float32")}var Wz={kernelName:$u,backendName:"webgl",kernelFunc:kae};function Sae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:p}=n,u=C.computeConv3DInfo(o.shape,p,a,1,i),l=new pN(u);return t.runWebGLProgram(l,[o,s],"float32")}var Kz={kernelName:hm,backendName:"webgl",kernelFunc:Sae};function vae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:p}=n,u=C.computeConv3DInfo(p,s.shape,i,1,a),l=new lN(u);return t.runWebGLProgram(l,[o,s],"float32")}var Vz={kernelName:gm,backendName:"webgl",kernelFunc:vae};var Aae=js+`
  return cos(x);
`,wae=Ae({opSnippet:Aae}),Hz={kernelName:mo,backendName:"webgl",kernelFunc:wae};var Nae=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Dae=Ae({opSnippet:Nae}),qz={kernelName:co,backendName:"webgl",kernelFunc:Dae};var mN=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,p,u]=e,[l]=t,[m,c]=n;this.outputShape=[l,m,c,u];let d=o==="bilinear"?1:0,[f,h]=[`${i-1}.0`,`${p-1}.0`],[g,y,T]=m>1?[`${(i-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,I,k]=c>1?[`${(p-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${I};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var Pae=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:p,extrapolationValue:u}=n,l=new mN(o.shape,s.shape,i,p,u);return t.runWebGLProgram(l,[o,s,a],"float32")},jz={kernelName:ia,backendName:"webgl",kernelFunc:Pae};var nx=class{constructor(e,t,n,o){this.op=e;this.outputShape=t;this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${Xz(s,"coords",this.op)})`,p=this.outputShape[this.outputShape.length-1],u="",l="";n?(u=o?`end != ${p-1}`:"end != 0",l=o?"end + 1":"end - 1"):(u=o?`end + pow2 < ${p}`:"end >= pow2",l=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${qe(s)} coords = getOutputCoords();
        int end = ${Yz(s,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${Yz(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${Xz(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function Xz(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function Yz(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function ox(r,e,t,n,o,s){let a=e.shape.length,i=C.getAxesPermutation([n],a),p=e;i!=null&&(p=Kt({inputs:{x:e},backend:t,attrs:{perm:i}}));let u=C.getInnerMostAxes(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let l=p.shape[u],m=sr({inputs:{x:p},backend:t});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new nx(r,p.shape,!1,s),f=[[c]],h=m;m=t.runWebGLProgram(d,[m],m.dtype,f),t.disposeIntermediateTensorInfo(h)}if(o){let c=new nx(r,p.shape,o,s),d=m;m=t.runWebGLProgram(c,[m],m.dtype),t.disposeIntermediateTensorInfo(d)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Kt({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(p),d}return m}function Fae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return ox("*",o,t,s,a,i)}var Qz={kernelName:aa,backendName:"webgl",kernelFunc:Fae};function Eae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return ox("+",o,t,s,a,i)}var Zz={kernelName:fo,backendName:"webgl",kernelFunc:Eae};function Rae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let p=t.readSync(o.dataId),u=t.readSync(s.dataId),l=KT(p,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let p=t.bufferSync(o),u=t.bufferSync(s),l=GB(p,u,a,i);return t.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var Jz={kernelName:bm,backendName:"webgl",kernelFunc:Rae};var cN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Lae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=new cN(f,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var e3={kernelName:ua,backendName:"webgl",kernelFunc:Lae};var cg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=_t(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,p=e.outChannels/e.inChannels,u="",l="";n&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${p};
        int q = d2 - d1 * ${p};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${l}
        setOutput(result);
      }
    `}};var dg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=_t(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,p=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,m=e.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<m;y++)d+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;d+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let y=0;y<m;y++)d+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(c+1)/2;y++){let T=y*2;if(d+=`
          xC = xCCorner + ${T*u};
          `,p===1){if(T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,u===1&&T>0?d+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<m)){let x=i%2===0?b.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,u>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                      xTexelC${T} = getX(batch, xR, xCOffset, d1);
                      xTexelC${T}Ready = 1;
                    }
                    `),d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                  `):x===1?d+=`
                    xC${T+1} = xTexelC${T};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<m&&(d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<m&&(d+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<m&&(d+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function _ae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n,l=p;l==null&&(l=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let m=C.computeConv2DInfo(o.shape,s.shape,a,l,i,u,!0),c;B().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new dg(m):c=new cg(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return t.runWebGLProgram(c,[o,s],"float32",d)}var t3={kernelName:ho,backendName:"webgl",kernelFunc:_ae};var dN=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},fN=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,p=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${p}; dm++) {
              int d2 = d1 * ${p} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function $ae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n,m=C.computeConv2DInfo(o.shape,l,a,i,p,u,!0),c=new dN(m);return t.runWebGLProgram(c,[o,s],"float32")}var r3={kernelName:ym,backendName:"webgl",kernelFunc:$ae};function Bae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n,m=C.computeConv2DInfo(l,s.shape,a,i,p,u,!0),c=new fN(m);return t.runWebGLProgram(c,[o,s],"float32")}var n3={kernelName:Tm,backendName:"webgl",kernelFunc:Bae};var hN=class{constructor(e){this.variableNames=["X"];this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Oae(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),a=ie({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new hN(s),p=t.runWebGLProgram(i,[a],a.dtype),u=ie({inputs:{x:p},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(p),u}var o3={kernelName:xm,backendName:"webgl",kernelFunc:Oae};var gN=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:p,dilationHeight:u,dilationWidth:l}=e,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${p}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function zae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n,u=C.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",p),l,m=new gN(u);l=t.runWebGLProgram(m,[o,s],"float32");let c=ie({inputs:{x:l},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(l),c}var s3={kernelName:Bu,backendName:"webgl",kernelFunc:zae};function Gae(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:p}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=C.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,p[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=Kt({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=ie({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=lg({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Rl({inputs:{x:c},backend:t,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var a3={kernelName:Ou,backendName:"webgl",kernelFunc:Gae};var Uae="return (x >= 0.0) ? x : (exp(x) - 1.0);",Wae=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Kae=Ae({opSnippet:Uae,packedOpSnippet:Wae}),i3={kernelName:bo,backendName:"webgl",kernelFunc:Kae};var Vae="return (b >= 1.0) ? a : a * (b + 1.0);",Hae=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,qae=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ha(Hae,n.shape,o.shape):new qs(Vae,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},u3={kernelName:Im,backendName:"webgl",kernelFunc:qae};var jae=`
  return vec4(equal(a, b));
`,Xae="return float(a == b);",Yae=mt({opSnippet:Xae,packedOpSnippet:jae,dtype:"bool",cpuKernelImpl:KB}),p3={kernelName:pa,backendName:"webgl",kernelFunc:Yae};var Qae=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Zae=Ae({opSnippet:Qae}),l3={kernelName:Oi,backendName:"webgl",kernelFunc:Zae};var Jae=js+`
  return exp(x);
`,eie=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bN=Ae({opSnippet:Jae,packedOpSnippet:eie,cpuKernelImpl:VB,dtype:"float32"}),m3={kernelName:yo,backendName:"webgl",kernelFunc:bN};function sx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),p=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+o+1),i.splice(p,0,1),ie({inputs:{x:s},backend:n,attrs:{shape:i}})}var c3={kernelName:ps,backendName:"webgl",kernelFunc:sx};var d3="return exp(x) - 1.0;",tie=Ae({opSnippet:d3,packedOpSnippet:d3,cpuKernelImpl:HB}),f3={kernelName:la,backendName:"webgl",kernelFunc:tie};var ax=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function ix(r,e,t){let n=t.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ie({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),p=i.shape,u=new ax("real",p,e),l=new ax("imag",p,e),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:p},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:p}],c=t.runWebGLProgram(u,m,"float32"),d=t.runWebGLProgram(l,m,"float32"),f=On({inputs:{real:c,imag:d},backend:t});t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d);let h=ie({inputs:{x:f},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),h}function rie(r){let{inputs:e,backend:t}=r,{input:n}=e;return ix(n,!1,t)}var h3={kernelName:Cm,backendName:"webgl",kernelFunc:rie};var yN=class{constructor(e,t){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Au(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new yN(n,o),i=[[o]];return e.runWebGLProgram(a,[],s,i)}}var g3={kernelName:ni,backendName:"webgl",kernelFunc:Au};var TN=class{constructor(e){this.variableNames=["Image"];this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var b3={kernelName:ma,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new TN(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var y3="return floor(x);",nie=Ae({opSnippet:y3,packedOpSnippet:y3,cpuKernelImpl:qB}),T3={kernelName:To,backendName:"webgl",kernelFunc:nie};var oie=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,sie=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,aie=mt({opSnippet:oie,packedOpSnippet:sie,dtype:"int32"}),x3={kernelName:xo,backendName:"webgl",kernelFunc:aie};var xN=class{constructor(e){this.variableNames=["A"];let t=Yt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var IN=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let t=Yt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var I3={kernelName:Fp,backendName:"webgl",kernelFunc:iie},Zc;function iie(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[p,u]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],l=[u,p],m=[u,p,s];(i||a)&&(Zc==null&&(Zc=document.createElement("canvas").getContext("2d")),Zc.canvas.width=p,Zc.canvas.height=u,Zc.drawImage(o,0,0,p,u),o=Zc.canvas);let c=t.makeTensorInfo(l,"int32");t.texData.get(c.dataId).usage=2,t.gpgpu.uploadPixelDataToTexture(t.getTexture(c.dataId),o);let d=B().getBool("WEBGL_PACK")?new IN(m):new xN(m),f=t.runWebGLProgram(d,[c],"int32");return t.disposeData(c.dataId),f}function uie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(o.shape,s.shape,p,m,u,c,!1,h),y,T=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=tx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else if(B().getBool("WEBGL_CONV_IM2COL"))y=rx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{let I=a!=null,k=i!=null,w=d==="leakyrelu",M=d?bp(d,!1):null,F=new mg(g,I,M,k,w),E=[o,s],$=(G,W)=>{if(W==="NCHW"&&G.shape.length===1&&G.shape[0]!==1){let V=ie({inputs:{x:G},backend:t,attrs:{shape:[G.shape[0],1,1]}});return T.push(V),V}return G};if(I&&E.push($(a,l)),k&&E.push($(i,l)),w){let G=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));E.push(G),T.push(G)}y=t.runWebGLProgram(F,E,"float32")}let x=ie({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return T.push(y),T.forEach(I=>t.disposeIntermediateTensorInfo(I)),x}var C3={kernelName:ks,backendName:"webgl",kernelFunc:uie};function pie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=l;h==null&&(h=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(p,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`);let g=C.computeConv2DInfo(o.shape,s.shape,p,h,u,m,!0),y=B().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,T=c?bp(c,y):null,x=[o,s],I=a!=null,k=i!=null,w=c==="leakyrelu";if(I&&x.push(a),k&&x.push(i),w){let $=t.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));x.push($),f.push($)}let M;y?M=new dg(g,I,T,k,w):M=new cg(g,I,T,k,w);let F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=t.runWebGLProgram(M,x,"float32",F);return f.forEach($=>t.disposeIntermediateTensorInfo($)),E}var k3={kernelName:Ss,backendName:"webgl",kernelFunc:pie};var CN=class{constructor(e,t,n){this.sliceDim=e;this.strides=t;this.variableNames=["x","indices"];this.outputShape=n;let o=qe(t.length),s=qe(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function lie(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[p,u,l,m]=C.prepareAndValidate(n,o),c=ie({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),d=ie({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/l,l]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let y=t.readSync(o.dataId),T=t.bufferSync(n),x=jB(y,T,n.dtype,u,a,l,m,n.shape,i);return t.makeTensorInfo(p,n.dtype,x.values)}let f=new CN(a,m,[u,l]),h=t.runWebGLProgram(f,[d,c],d.dtype),g=ie({inputs:{x:h},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var S3={kernelName:ca,backendName:"webgl",kernelFunc:lie};var kN=class{constructor(e,t){this.variableNames=["A","indices"];this.outputShape=t,this.rank=t.length;let n=qe(this.rank),o=mie(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function mie(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${t[o]}`);return n.join()}function SN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,p=b.parseAxisParam(a,o.shape)[0];if(B().get("DEBUG")){let T=t.readSync(s.dataId),x=o.shape[p];for(let I=0;I<T.length;++I){let k=T[I];b.assert(k<=x-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${x-1}]`)}}let u=C.segment_util.collectGatherOpShapeInfo(o,s,p,i),l=b.sizeFromShape(s.shape),m=[],c=ie({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=ie({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,l/u.batchSize]}});m.push(c),m.push(d);let f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let T=t.bufferSync(d),x=t.bufferSync(c),I=XB(x,T,f);return m.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(u.outputShape,I.dtype,I.values)}let h=new kN(c.shape,f),g=t.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let y=ie({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return m.forEach(T=>t.disposeIntermediateTensorInfo(T)),y}var v3={kernelName:ls,backendName:"webgl",kernelFunc:SN};var cie="return float(a > b);",die=`
  return vec4(greaterThan(a, b));
`,fie=mt({opSnippet:cie,packedOpSnippet:die,cpuKernelImpl:YB,dtype:"bool"}),A3={kernelName:da,backendName:"webgl",kernelFunc:fie};var hie="return float(a >= b);",gie=`
  return vec4(greaterThanEqual(a, b));
`,bie=mt({opSnippet:hie,packedOpSnippet:gie,dtype:"bool",cpuKernelImpl:QB}),w3={kernelName:Co,backendName:"webgl",kernelFunc:bie};function yie(r){let{inputs:e,backend:t}=r,{input:n}=e;return ix(n,!0,t)}var N3={kernelName:km,backendName:"webgl",kernelFunc:yie};var Tie="return float(!isnan(x) && !isinf(x));",xie=Ae({opSnippet:Tie,dtype:"bool"}),D3={kernelName:zi,backendName:"webgl",kernelFunc:xie};var Iie="return float(isinf(x));",Cie=Ae({opSnippet:Iie,dtype:"bool"}),P3={kernelName:Gi,backendName:"webgl",kernelFunc:Cie};var kie="return float(isnan(x));",Sie=Ae({opSnippet:kie,dtype:"bool"}),M3={kernelName:Ui,backendName:"webgl",kernelFunc:Sie};var vie="return float(a < b);",Aie=`
  return vec4(lessThan(a, b));
`,wie=mt({opSnippet:vie,packedOpSnippet:Aie,cpuKernelImpl:ZB,dtype:"bool"}),F3={kernelName:fa,backendName:"webgl",kernelFunc:wie};var Nie="return float(a <= b);",Die=`
  return vec4(lessThanEqual(a, b));
`,Pie=mt({opSnippet:Nie,packedOpSnippet:Die,cpuKernelImpl:JB,dtype:"bool"}),E3={kernelName:ha,backendName:"webgl",kernelFunc:Pie};function Mie(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=eO(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var R3={kernelName:Sm,backendName:"webgl",kernelFunc:Mie};var Fie=js+`
  return x < 0.0 ? 0./0. : log(x);
`,Eie=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Rie=Ae({opSnippet:Fie,packedOpSnippet:Eie,cpuKernelImpl:tO}),L3={kernelName:So,backendName:"webgl",kernelFunc:Rie};var Lie=js+`
  return log(1.0 + x);
`,_ie=Ae({opSnippet:Lie}),_3={kernelName:Wi,backendName:"webgl",kernelFunc:_ie};var $ie="return float(a >= 1.0 && b >= 1.0);",Bie=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Oie=mt({opSnippet:$ie,packedOpSnippet:Bie,dtype:"bool"}),$3={kernelName:ga,backendName:"webgl",kernelFunc:Oie};var zie="return float(!(x >= 1.0));",Gie=Ae({opSnippet:zie}),B3={kernelName:Ki,backendName:"webgl",kernelFunc:Gie};var Uie="return float(a >= 1.0 || b >= 1.0);",Wie=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Kie=mt({opSnippet:Uie,packedOpSnippet:Wie,dtype:"bool"}),O3={kernelName:Mp,backendName:"webgl",kernelFunc:Kie};var vN=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let p,u=`float(${n}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${u})`:s===1?p=`1.0/(${u})`:p=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${p};
        setOutput(val);
      }
    `}};var AN=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let p,u=`float(${n}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${u})`:s===1?p=`1.0/(${u})`:p=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${p};
        setOutput(result);
      }
    `}};var Vie=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:p}=n,u=B().getBool("WEBGL_PACK_NORMALIZATION")?new AN(o.shape,s,a,i,p):new vN(o.shape,s,a,i,p);return t.runWebGLProgram(u,[o],o.dtype)},z3={kernelName:Gu,backendName:"webgl",kernelFunc:Vie};var wN=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Hie=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:p,alpha:u,beta:l}=n,m=new wN(o.shape,i,p,u,l);return t.runWebGLProgram(m,[o,s,a],o.dtype)},G3={kernelName:vm,backendName:"webgl",kernelFunc:Hie};function U3(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),p=eo(i,r.dtype,"max",n),u=ie({inputs:{x:p},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),u}function NN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=p,l=C.getAxesPermutation(u,i),m=l!=null,c=t.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let x=t.texData.get(d.dataId).values,I=new Array(i);for(let M=0;M<I.length;M++)I[M]=o.shape[l[M]];let k=Fl(x,o.shape,o.dtype,l,I);d=t.makeTensorInfo(I,o.dtype);let w=t.texData.get(d.dataId);w.values=k}else d=yp(o,l,t);u=C.getInnerMostAxes(u.length,i)}C.assertAxesAreInnerMostDims("max",u,i);let[f,h]=C.computeOutAndReduceShapes(d.shape,u),g=f;a&&(g=C.expandShapeToKeepDim(f,p));let y;if(c){let x=t.texData.get(d.dataId).values,I=rO(x,b.sizeFromShape(h),g,o.dtype);y=t.makeTensorInfo(g,o.dtype);let k=t.texData.get(y.dataId);k.values=I}else y=U3(d,h,g,t);return m&&t.disposeIntermediateTensorInfo(d),y}var W3={kernelName:vo,backendName:"webgl",kernelFunc:NN};var qie=jT+`
  return max(a, b);
`,jie=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+gp+`
  return result;
`,Xie=mt({opSnippet:qie,packedOpSnippet:jie,cpuKernelImpl:nO}),K3={kernelName:Ao,backendName:"webgl",kernelFunc:Xie};function Yie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ka(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;b.assert(C.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=C.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))return sr({inputs:{x:o},backend:t});let m=new vi(l,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var V3={kernelName:wo,backendName:"webgl",kernelFunc:Yie};function Qie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:p,dimRoundingMode:u}=n,l=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,l,i,u,p),c=new _l(m,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var H3={kernelName:Uu,backendName:"webgl",kernelFunc:Qie};var DN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,p=a-1-e.padInfo.left,u=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},PN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,p=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,m=p-1-e.padInfo.front,c=u-1-e.padInfo.top,d=l-1-e.padInfo.left,f=p*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Zie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,p,m,u,l),d=new _l(c,"max",!0),f=t.runWebGLProgram(d,[a],a.dtype),h=new PN(c),g=t.runWebGLProgram(h,[o,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}var q3={kernelName:wm,backendName:"webgl",kernelFunc:Zie};function Jie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;Ka([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,p,u,1,l,m),d=!0,f=new vi(c,"max",d),h=t.runWebGLProgram(f,[i],i.dtype),g=new DN(c),y=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),y}var j3={kernelName:Am,backendName:"webgl",kernelFunc:Jie};function X3(r,e,t,n){let o=new vi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new vi(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var Y3={kernelName:Nm,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,p=t;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];b.assert(C.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let l=C.computePool2DInfo(n.shape,o,s,u,a),[m,c]=X3(n,i,l,p);return[m,c]}};function Q3(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),p=eo(i,"float32","mean",n),u=ie({inputs:{x:p},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),u}var Z3={kernelName:No,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,p=b.parseAxisParam(s,n.shape),u=p,l=C.getAxesPermutation(u,i),m=l!=null,c=a.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let I=a.texData.get(f.dataId).values,k=new Array(i);for(let F=0;F<k.length;F++)k[F]=n.shape[l[F]];let w=Fl(I,n.shape,n.dtype,l,k);f=a.makeTensorInfo(k,n.dtype);let M=a.texData.get(f.dataId);M.values=w}else f=yp(n,l,a);d.push(f),u=C.getInnerMostAxes(u.length,i)}C.assertAxesAreInnerMostDims("sum",u,i);let[h,g]=C.computeOutAndReduceShapes(f.shape,u),y=h;o&&(y=C.expandShapeToKeepDim(h,p));let T=Q3(f,g,y,a);for(let x of d)a.disposeIntermediateTensorInfo(x);return T}};function eue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=p,l=C.getAxesPermutation(u,i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",u,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,u),f=b.sizeFromShape(d),h=ie({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"min",t),y;if(a){let T=C.expandShapeToKeepDim(c,p);y=ie({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ie({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),y}var J3={kernelName:Do,backendName:"webgl",kernelFunc:eue};var tue=jT+`
  return min(a, b);
`,rue=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+gp+`
  return result;
`,nue=mt({opSnippet:tue,packedOpSnippet:rue,cpuKernelImpl:oO}),eG={kernelName:Po,backendName:"webgl",kernelFunc:nue};var MN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=t.map((l,m)=>l[0]+e[m]+l[1]);let o=e.length,s=qe(o),a=t.map(l=>l[0]).join(","),i=t.map((l,m)=>l[0]+e[m]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${p}));
      }
    `}};var FN=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t.map((f,h)=>f[0]+e[h]+f[1]);let o=e.length,s=qe(o),a=t.map(f=>f[0]).join(","),i=t.map((f,h)=>f[0]+e[h]).join(","),p=or("rc",o),u=or("source",o),l=`${p[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${u.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${m});
        ${p[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${m});
        ${p[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${m});
        }
        rc = outputLoc;
        ${p[o-2]} += 1;
        if(${p[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${m});
          ${p[o-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var oue=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FN(n.shape,o,s):new MN(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},tG={kernelName:Mo,backendName:"webgl",kernelFunc:oue};var sue=`if (b == 0.0) return NAN;
  return mod(a, b);`,aue=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+gp+`
  return result;
`,iue=mt({opSnippet:sue,packedOpSnippet:aue}),rG={kernelName:Vi,backendName:"webgl",kernelFunc:iue};var EN=class{constructor(e,t,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var uue=`
if (a == b) {
  return 1.0;
};
return a / b;`,pue=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,RN=mt({opSnippet:uue,packedOpSnippet:pue,checkOutOfBounds:!0}),nG={kernelName:go,backendName:"webgl",kernelFunc:RN};var oG="return a - b;",LN=mt({opSnippet:oG,packedOpSnippet:oG,supportsComplex:!0,cpuKernelImpl:IO}),sG={kernelName:qo,backendName:"webgl",kernelFunc:LN};function _N(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=NN({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),p=C.expandShapeToKeepDim(i.shape,a),u=ie({inputs:{x:i},backend:t,attrs:{shape:p}}),l=LN({inputs:{a:o,b:u},backend:t}),m=bN({inputs:{x:l},backend:t}),c=Rl({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=ie({inputs:{x:c},backend:t,attrs:{shape:p}}),f=RN({inputs:{a:m,b:d},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}var aG={kernelName:Vo,backendName:"webgl",kernelFunc:_N};function lue(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,p=i?o:_N({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),u=p.shape[0],l=p.shape[1],m=new EN(u,l,s),c=[[a]],d=t.runWebGLProgram(m,[p],"int32",c);return i||t.disposeIntermediateTensorInfo(p),d}var iG={kernelName:Dm,backendName:"webgl",kernelFunc:lue};var mue=yr+`
  return -x;
`,cue=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function due(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=aO(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Hs(n.shape,cue):o=new Sn(n.shape,mue),t.runWebGLProgram(o,[n],n.dtype)}var uG={kernelName:ms,backendName:"webgl",kernelFunc:due};var fue=br.nonMaxSuppressionV3Impl;function hue(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n,u=t.readSync(o.dataId),l=t.readSync(s.dataId),{selectedIndices:m}=fue(u,l,a,i,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var pG={kernelName:ya,backendName:"webgl",kernelFunc:hue};var gue=br.nonMaxSuppressionV4Impl;function bue(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,padToMaxOutputSize:u}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=gue(l,m,a,i,p,u);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var lG={kernelName:Hi,backendName:"webgl",kernelFunc:bue};var yue=br.nonMaxSuppressionV5Impl;function Tue(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:y}=yue(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var mG={kernelName:Ta,backendName:"webgl",kernelFunc:Tue};var $N=class{constructor(e,t,n,o){this.variableNames=["indices"];this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var xue=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,p=b.sizeFromShape(o.shape),u=new $N(p,s,a,i),l=ie({inputs:{x:o},backend:t,attrs:{shape:[p]}}),m=t.runWebGLProgram(u,[l],o.dtype);t.disposeIntermediateTensorInfo(l);let c=[...o.shape,s],d=ie({inputs:{x:m},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(m),d},cG={kernelName:xa,backendName:"webgl",kernelFunc:xue};function fg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=vu({inputs:{input:n},backend:t}),s=fg({inputs:{x:o},backend:t}),a=$l({inputs:{input:n},backend:t}),i=fg({inputs:{x:a},backend:t}),p=On({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return Au({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var dG={kernelName:xs,backendName:"webgl",kernelFunc:fg};function fG(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=vu({inputs:{input:n},backend:t}),s=fG({inputs:{x:o},backend:t}),a=$l({inputs:{input:n},backend:t}),i=fg({inputs:{x:a},backend:t}),p=On({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return Au({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var hG={kernelName:cs,backendName:"webgl",kernelFunc:fG};function Iue(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return sx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=sx({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=oN({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}var gG={kernelName:ds,backendName:"webgl",kernelFunc:Iue};var BN=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((u,l)=>u[0]+e[l]+u[1]);let o=e.length,s=qe(o),a=t.map(u=>u[0]).join(","),i=t.map((u,l)=>u[0]+e[l]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${p}));
        }
      }
    `}};var ON=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=qe(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),p=or("rc",o),u=or("source",o),l=`${p[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${u.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${p[o-1]} += 1;
       if(${l}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${p[o-2]} += 1;
       if(${p[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${p[o-1]} += 1;
         if(${l}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${u.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var zN=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(b.sizeFromShape(o.shape)===0){let u=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return Au({backend:t,attrs:{shape:u,value:a,dtype:o.dtype}})}let i=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ON(o.shape,s,a):new BN(o.shape,s,a),p=[[a]];return t.runWebGLProgram(i,[o],o.dtype,p)},bG={kernelName:Eo,backendName:"webgl",kernelFunc:zN};var Cue=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,kue=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+gp+`
  return result;
`,Sue=mt({opSnippet:Cue,packedOpSnippet:kue}),yG={kernelName:Ro,backendName:"webgl",kernelFunc:Sue};function vue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=[],u=b.parseAxisParam(s,o.shape),l=u,m=C.getAxesPermutation(l,i),c=o;m!=null&&(c=Kt({inputs:{x:o},backend:t,attrs:{perm:m}}),l=C.getInnerMostAxes(l.length,i),p.push(c)),C.assertAxesAreInnerMostDims("prod",l,i);let d;if(t.shouldExecuteOnCPU([c])){let f=t.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:y}=uO(c.shape,c.dtype,f,l);d=t.makeTensorInfo(g,y,h)}else{let[f,h]=C.computeOutAndReduceShapes(c.shape,l),g=b.sizeFromShape(h),y=ie({inputs:{x:c},backend:t,attrs:{shape:[-1,g]}}),T=Ji(o.dtype),x=eo(y,T,"prod",t);d=ie({inputs:{x},backend:t,attrs:{shape:f}}),p.push(y),p.push(x)}if(a){p.push(d);let f=C.expandShapeToKeepDim(d.shape,u);d=ie({inputs:{x:d},backend:t,attrs:{shape:f}})}return p.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var TG={kernelName:_o,backendName:"webgl",kernelFunc:vue};var GN=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=pO(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},xG={kernelName:oi,backendName:"webgl",kernelFunc:GN};var Aue="return 1.0 / x;",wue=Ae({opSnippet:Aue}),IG={kernelName:qi,backendName:"webgl",kernelFunc:wue};var Nue=yr+`
  return (x < 0.0) ? 0.0 : x;
`,Due=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pue=Ae({opSnippet:Nue,packedOpSnippet:Due}),CG={kernelName:$o,backendName:"webgl",kernelFunc:Pue};var Mue=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Fue=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Eue=Ae({opSnippet:Mue,packedOpSnippet:Fue}),kG={kernelName:Oo,backendName:"webgl",kernelFunc:Eue};var UN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${p}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var WN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${p}.0,
                                     ${p}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Rue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new WN(o.shape,p,u,s,a):new UN(o.shape,p,u,s,a);return t.runWebGLProgram(l,[o],"float32")}var SG={kernelName:Bo,backendName:"webgl",kernelFunc:Rue};var KN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,p=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=p[0]/u[0],m=p[1]/u[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Lue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new KN(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var vG={kernelName:Mm,backendName:"webgl",kernelFunc:Lue};var VN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${p}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var HN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${p}.0,
                                     ${p}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function _ue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new HN(o.shape,p,u,s,a):new VN(o.shape,p,u,s,a);return t.runWebGLProgram(l,[o],o.dtype)}var AG={kernelName:si,backendName:"webgl",kernelFunc:_ue};var qN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,p=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=p[0]/u[0],m=p[1]/u[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${p[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${p[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function $ue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new qN(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var wG={kernelName:Pm,backendName:"webgl",kernelFunc:$ue};var jN=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,p)=>o(p)).join(","),a=qe(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var XN=class{constructor(e,t){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=or("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=qe(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${p(o.slice())};
          if(${s}){
            result.g = ${u(o.slice())};
          }
          if(${a}) {
            result.b = ${l(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function p(f){return c(f)}function u(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function l(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=e.map((T,x)=>d(x,f)),g=h.join(","),y=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function d(f,h){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${h[f]} - 1`:`${h[f]}`}}};function Bue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return sr({inputs:{x:o},backend:t});let p=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new XN(o.shape,i):new jN(o.shape,i);return t.runWebGLProgram(p,[o],o.dtype)}var NG={kernelName:Ia,backendName:"webgl",kernelFunc:Bue};var YN=class{constructor(e,t){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var DG={kernelName:Da,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,p=new YN(n.shape,s),[u,l]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[[u,l,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(p,[n],n.dtype,m)}};var Oue=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,zue=Ae({opSnippet:Oue}),PG={kernelName:Ca,backendName:"webgl",kernelFunc:zue};var Gue="return inversesqrt(x);",Uue=Ae({opSnippet:Gue,cpuKernelImpl:lO}),MG={kernelName:zo,backendName:"webgl",kernelFunc:Uue};var hg=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let p=qe(s.length),u=qe(a.length),l="";n===1?l="i":n===2&&(l="i, j");let m=`getIndices(${l})`,c="";o===1?c="i":o===2&&(c="i, coords[1]");let d=`getUpdates(${c})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${p} strides = ${p}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Wue(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=[m/u,u];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=ie({inputs:{x:o},backend:t,attrs:{shape:[p,i]}}),f=ie({inputs:{x:s},backend:t,attrs:{shape:[p,u]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new hg(p,i,d.shape.length,f.shape.length,l,c),y=t.runWebGLProgram(g,[f,d,h],f.dtype),T=ie({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),T}var FG={kernelName:ka,backendName:"webgl",kernelFunc:Wue};var QN=class{constructor(e,t,n,o){this.variableNames=["sortedSequence","values"];this.customUniforms=[{name:"numInputs",type:"int"}];this.outputShape=[e,n];let s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=B().getNumber("WEBGL_VERSION")===2?s:a,p=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${p} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Kue(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n,i=new QN(o.shape[0],o.shape[1],s.shape[1],a),p=[[o.shape[1]]];return t.runWebGLProgram(i,[o,s],"int32",p)}var EG={kernelName:Fm,backendName:"webgl",kernelFunc:Kue};var ZN=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],p=[],u=[];for(let l=0;l<t.length;l++)u.push(`${i[l]}`),l<e&&p.push(`${i[l]}`);o=p.join(),s=u.join()}let a=qe(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Vue(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new ZN(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],Ft(o.dtype,s.dtype))}var RG={kernelName:hs,backendName:"webgl",kernelFunc:Vue};var Hue=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,que=Ae({opSnippet:Hue}),LG={kernelName:ji,backendName:"webgl",kernelFunc:que};var jue=js+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Xue=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Yue=Ae({opSnippet:jue,packedOpSnippet:Xue,cpuKernelImpl:cO}),_G={kernelName:Uo,backendName:"webgl",kernelFunc:Yue};var Que=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Zue=Ae({opSnippet:Que}),$G={kernelName:Xi,backendName:"webgl",kernelFunc:Zue};var Jue=js+`
  return sin(x);
`,epe=Ae({opSnippet:Jue}),BG={kernelName:Go,backendName:"webgl",kernelFunc:epe};var tpe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,rpe=Ae({opSnippet:tpe}),OG={kernelName:Sa,backendName:"webgl",kernelFunc:rpe};var npe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,ope=Ae({opSnippet:npe}),zG={kernelName:Yi,backendName:"webgl",kernelFunc:ope};var spe=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((y,T)=>y*T),p=[[0,0]];p.push(...a);for(let y=1+s.length;y<o.shape.length;++y)p.push([0,0]);let u=[],l=zN({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),m=C.getReshaped(l.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(l.shape,s,i,!1),f=ie({inputs:{x:l},backend:t,attrs:{shape:m}}),h=Kt({inputs:{x:f},backend:t,attrs:{perm:c}}),g=ie({inputs:{x:h},backend:t,attrs:{shape:d}});return u.push(l),u.push(f),u.push(h),u.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},GG={kernelName:bs,backendName:"webgl",kernelFunc:spe};function ape(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.readSync(n.dataId),p=t.readSync(o.dataId),u=t.readSync(s.dataId),l=t.readSync(a.dataId)[0],[m,c,d,f,h]=fO(i,n.shape,n.dtype,p,o.dtype,u,l);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var UG={kernelName:Ku,backendName:"webgl",kernelFunc:ape};function ipe(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.readSync(o.dataId)),i=t.readSync(n.dataId),p=Array.from(t.readSync(s.dataId)),[u,l,m]=hO(i,n.shape,n.dtype,a,p);return[t.makeTensorInfo(l,n.dtype,u),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var WG={kernelName:Qi,backendName:"webgl",kernelFunc:ipe};function upe(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),p=t.readSync(s.dataId),[u,l]=HT(a,n.shape,n.dtype,i,p,!0);return t.makeTensorInfo(l,n.dtype,u)}var KG={kernelName:Vu,backendName:"webgl",kernelFunc:upe};function ppe(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),p=t.readSync(s.dataId),[u,l]=HT(a,n.shape,n.dtype,i,p);return t.makeTensorInfo(l,n.dtype,u)}var VG={kernelName:Hu,backendName:"webgl",kernelFunc:ppe};function lpe(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let y=t.bufferSync(o),T=t.bufferSync(s),x=b.decodeString(t.readSync(a.dataId)[0]),I=mO(y,T,i,c,l,u,p,m,x,d);return t.makeTensorInfo(i,I.dtype,I.values)}let f=new hg(u,p,o.shape.length,s.shape.length,m,[c,1],d),h=t.runWebGLProgram(f,[s,o,a],s.dtype),g=ie({inputs:{x:h},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(h),g}var HG={kernelName:qu,backendName:"webgl",kernelFunc:lpe};function mpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],p=C.prepareSplitSize(o,s,i),u=o.shape.length,l=new Array(u).fill(0),m=o.shape.slice();return p.map(c=>{let d=[...m];d[i]=c;let f=qa({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});return l[i]+=c,f})}var qG={kernelName:ys,backendName:"webgl",kernelFunc:mpe};var jG="return sqrt(x);",cpe=Ae({opSnippet:jG,packedOpSnippet:jG,cpuKernelImpl:gO}),XG={kernelName:Wo,backendName:"webgl",kernelFunc:cpe};var dpe="return x * x;",fpe=Ae({opSnippet:dpe}),YG={kernelName:ai,backendName:"webgl",kernelFunc:fpe};var QG="return (a - b) * (a - b);",hpe=mt({opSnippet:QG,packedOpSnippet:QG}),ZG={kernelName:Ho,backendName:"webgl",kernelFunc:hpe};function gpe({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=yr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new Sn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var JG={kernelName:Is,backendName:"webgl",kernelFunc:gpe};var JN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=qe(n.length),a=qe(n.length),i="";if(o===1)i="coords * strides + begin";else{let p=0;i=n.map((u,l)=>(p++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${p-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function bpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=ie({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let M=Tt.computeOutShape(T,x,I),F=qa({inputs:{x:o},backend:t,attrs:{begin:T,size:M}});k=ie({inputs:{x:F},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(F)}else if(t.shouldExecuteOnCPU([o])){let F=t.readSync(o.dataId),E=xe(o.shape,o.dtype,F),$=bO(d,E,I,T);k=t.makeTensorInfo(f,o.dtype,$.values)}else{let F=new JN(T,I,d);k=t.runWebGLProgram(F,[o],o.dtype)}let w=ie({inputs:{x:k},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(k),w}var eU={kernelName:va,backendName:"webgl",kernelFunc:bpe};function ype(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=e,c=t.readSync(l.dataId),d=t.readSync(m.dataId),[f,h]=yO(c,d,o,s,a,i,p,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var tU={kernelName:ju,backendName:"webgl",kernelFunc:ype};function Tpe(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.readSync(s.dataId),p=t.readSync(a.dataId)[0],[u,l,m]=TO(i,p,o),c=l.length;return[t.makeTensorInfo([c,2],"int32",u),t.makeTensorInfo([c],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var rU={kernelName:Em,backendName:"webgl",kernelFunc:Tpe};function xpe(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.readSync(s.dataId),i=xO(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var nU={kernelName:Rm,backendName:"webgl",kernelFunc:xpe};var Ipe="return tan(x);",Cpe=Ae({opSnippet:Ipe}),oU={kernelName:Aa,backendName:"webgl",kernelFunc:Cpe};var kpe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Spe=Ae({opSnippet:kpe}),sU={kernelName:jo,backendName:"webgl",kernelFunc:Spe};var eD=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=qe(this.rank),s=vpe(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function vpe(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function tD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let p=t.readSync(o.dataId),u=o.dtype==="string"?p.map(c=>b.decodeString(c)):p,l=xe(o.shape,o.dtype,u),m=CO(l,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new eD(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var aU={kernelName:Dn,backendName:"webgl",kernelFunc:tD};var rD=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},nD=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Ol(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function iU(r){let e=1;for(;e<r;)e*=2;return e}function Ape(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=B().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),p=B().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,l=u[u.length-1];if(t.shouldExecuteOnCPU([o])||l<i||s>p){let $=t.readSync(o.dataId),[G,W]=kO($,u,o.dtype,s,a);return[t.makeTensorInfo(G.shape,G.dtype,G.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(s===0)return u[u.length-1]=0,[t.makeTensorInfo(u,o.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(l===1)return[o,Au({attrs:{shape:u,dtype:"int32",value:0},backend:t})];let m=t.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?t.unpackTensor(o):o,h=b.sizeFromShape(u)/l,g=ie({inputs:{x:d},attrs:{shape:[h,l]},backend:t});c&&Ol(t,d);let y=iU(s),T=iU(l),x=null,I=()=>x===null?[g,g]:[g,x],k=($,G,W)=>{let V=I(),q=new rD(W),Y=[[l],[x===null?1:0],[Number.NEGATIVE_INFINITY],[$],[G]],te=x;x=t.runWebGLProgram(q,V,"int32",Y),Ol(t,te)};for(let $=1;$<y;$*=2){let G=$*2;for(let W=$;W>=1;W/=2)k(G,W,[h,T])}for(let $=T;$>y;$/=2){let G=I(),W=new nD([h,$/2]),q=[[l],[x===null?1:0],[y]],j=x;x=t.runWebGLProgram(W,G,"int32",q),Ol(t,j);let Y=y/2,te=Y*2;for(let H=Y;H>=1;H/=2)k(te,H,x.shape)}let w=x;x=qa({inputs:{x},backend:t,attrs:{begin:0,size:[h,s]}}),Ol(t,w);let M=SN({inputs:{x:g,indices:x},backend:t,attrs:{axis:1,batchDims:1}});Ol(t,g);let F=u.slice(0,-1);F.push(s),w=x,x=ie({inputs:{x},attrs:{shape:F},backend:t}),Ol(t,w);let E=M;return M=ie({inputs:{x:M},attrs:{shape:F},backend:t}),Ol(t,E),[M,x]}var uU={kernelName:wa,backendName:"webgl",kernelFunc:Ape};var oD=class{constructor(e,t,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,p;switch(o){case"constant":p=1;break;case"reflect":p=2;break;case"wrap":p=3;break;case"nearest":p=4;break;default:p=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${p} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${p} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${p} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function wpe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],y=new oD(m,c,a,i,p,g);return t.runWebGLProgram(y,[o,s],"float32")}var pU={kernelName:Na,backendName:"webgl",kernelFunc:wpe};function Npe(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Ka(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:p,indices:u}=SO(a,o,s.shape,s.dtype);return[n.makeTensorInfo(p,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var lU={kernelName:Lm,backendName:"webgl",kernelFunc:Npe};function Dpe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,p=o.shape[s],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(u[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(p);for(let h=0;h<f.length;h++){c[s]=h;let g=qa({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),y=ie({inputs:{x:g},backend:t,attrs:{shape:u}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var mU={kernelName:Ts,backendName:"webgl",kernelFunc:Dpe};var sD=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let p="0.0",u="sumValue",l=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${p};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${u});
      }
    `}};function Ppe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,p=[],u=0,l=C.getAxesPermutation([u],i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),p.push(m),u=C.getInnerMostAxes(1,i)[0]);let c=C.segment_util.computeOutShape(m.shape,u,a),d=b.sizeFromShape([m.shape[u]]),f=ie({inputs:{x:m},backend:t,attrs:{shape:[-1,d]}});p.push(f);let h=Ji(o.dtype),g=(I,k,w,M,F)=>{let E=I.shape[0],$=I.shape[1],G=C.segment_util.segOpComputeOptimalWindowSize($,F),W={windowSize:G,inSize:$,batchSize:E,numSegments:F},V=new sD(W,k),q=t.compileAndRun(V,[I,w],M);if(p.push(q),q.shape[1]===F)return q;let j=GN({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),Y=tD({inputs:{x:j},backend:t,attrs:{reps:[$/G]}});return p.push(j),p.push(Y),g(q,k,Y,M,F)},y=g(f,"unsortedSegmentSum",s,h,a),T=ie({inputs:{x:y},backend:t,attrs:{shape:c}}),x=T;if(l!=null){p.push(T);let I=C.getUndoAxesPermutation(l);x=Kt({inputs:{x},backend:t,attrs:{perm:I}})}return p.forEach(I=>t.disposeIntermediateTensorInfo(I)),x}var cU={kernelName:Xu,backendName:"webgl",kernelFunc:Ppe};var Mpe=[ez,rz,nz,oz,az,iz,uz,pz,cz,dz,fz,hz,gz,bz,yz,Tz,xz,Iz,Cz,kz,Sz,Az,wz,Nz,Fz,Rz,Lz,UO,$z,Oz,zz,Gz,Uz,Wz,Kz,Vz,Hz,qz,jz,Qz,Zz,Jz,e3,t3,r3,n3,o3,s3,a3,i3,u3,p3,l3,m3,c3,f3,h3,g3,b3,T3,x3,I3,C3,k3,S3,v3,A3,w3,GO,N3,Bz,D3,P3,M3,WO,F3,E3,R3,L3,_3,$3,B3,O3,z3,G3,W3,K3,V3,H3,q3,j3,Y3,Z3,J3,eG,tG,rG,iG,jO,uG,pG,lG,mG,Dz,cG,hG,gG,bG,yG,KO,TG,xG,Pz,nG,IG,CG,kG,YO,SG,vG,AG,wG,NG,DG,PG,MG,FG,EG,RG,LG,_G,$G,BG,OG,vz,aG,zG,GG,UG,WG,KG,VG,HG,qG,XG,YG,ZG,JG,eU,tU,rU,nU,sG,ZO,oU,sU,aU,uU,pU,JO,lU,mU,cU,dG];for(let r of Mpe)Zi(r);var Tp=B();Tp.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Tp.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Tp.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Tp.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Tp.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Tp.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Tp.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Tp.registerFlag("WEBGPU_USE_IMPORT",()=>!1);var Fpe="return a + b;",Epe="return areal * breal - aimag * bimag;",Rpe="return areal * bimag + aimag * breal;",Lpe="return a / b;",_pe="return a * b;",$pe="return (a - b) * (a - b);",Bpe="return a - b;",Ope="return f32(a == b);",zpe="return vec4<f32>(a == b);",Gpe="return f32(a > b);",Upe="return vec4<f32>(a > b);",Wpe="return f32(a >= b);",Kpe="return vec4<f32>(a >= b);",Vpe="return f32(a < b);",Hpe="return vec4<f32>(a < b);",qpe="return f32(a <= b);",jpe="return vec4<f32>(a <= b);",Xpe="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Ype=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Qpe=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,fU=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Zpe=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Jpe=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,ele="return f32(a != b);",tle="return vec4<f32>(a != b);",rle=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,nle=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${fU}
  return resultTemp;
  `,ole="if (a < 0.0) { return b * a; }  return a;",sle=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function dU(r,e){let t=e?fU:Qpe;return e?`
    var resultTemp = vec4<f32>(${r}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+t+`
    return resultTemp;
  `:t+`
    return ${r}(a, b);
  `}function Ai(r,e){switch(r){case 0:return _pe;case 1:return Fpe;case 2:return Bpe;case 3:return Lpe;case 4:return e?zpe:Ope;case 5:return e?Upe:Gpe;case 6:return e?Kpe:Wpe;case 7:return e?Hpe:Vpe;case 8:return e?jpe:qpe;case 9:return e?Ype:Xpe;case 10:return e?tle:ele;case 11:return $pe;case 12:return e?Jpe:Zpe;case 14:return e?sle:ole;case 15:return dU("max",e);case 16:return dU("min",e);case 13:return e?nle:rle;case 17:return Epe;case 18:return Rpe;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var ale="return abs(a);",ile="return ceil(a);",ule="return cos(a);",ple=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,lle="return exp(a) - 1.0;",mle="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",cle=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,dle="return exp(a);",fle="return floor(a);",hle="return a;",gle=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,ble="return f32(!(a >= 1.0));",yle="return -a;",Tle="if (a < 0.0) { return uniforms.alpha * a; } return a;",xle=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Ile="return select(a, 0.0, a < 0.0);",Cle="return clamp(a, 0.0, 6.0);",kle="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Sle=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,vle="return 1.0/sqrt(a);",Ale="return 1.0 / (1.0 + exp(-1.0 * a));",wle="return sin(a);",Nle=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Dle="return sqrt(a);",Ple="return a * a;",Mle=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Fle="return f32(i32((a)));";function wu(r,e){switch(r){case 0:return ale;case 2:return ule;case 3:return ple;case 1:return ile;case 4:return e?cle:mle;case 5:return dle;case 6:return lle;case 7:return fle;case 8:return hle;case 9:return gle;case 10:return ble;case 11:return yle;case 14:return e?xle:Tle;case 12:return e?Sle:Ile;case 13:return e?kle:Cle;case 15:return vle;case 18:return Ale;case 16:return wle;case 17:return Nle;case 19:return Dle;case 20:return Ple;case 21:return Mle;case 22:return Fle;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function vn(r,e=!1){if(r===null)return null;if(r==="linear")return wu(8);if(r==="relu")return wu(12,e);if(r==="elu")return wu(4,e);if(r==="relu6")return wu(13,e);if(r==="prelu")return Ai(14,e);if(r==="sigmoid")return wu(18,e);if(r==="leakyrelu")return wu(14,e);throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`)}function hU(r,e){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function Qt(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function wi(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function ux(r,e){return r==="float32"?e?"vec4<f32>":"f32":r==="int32"||r==="bool"?e?"vec4<i32>":"i32":r}function gg(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function ja(){return`
  ${gg()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Se(){return`
    ${ja()}
      let index = getGlobalIndex();
`}function yU(r,e,t,n=!1){let o=[];if(o.push(`
    let workGroupSizeX = ${t.workGroupSize[0]}u;
    let workGroupSizeY = ${t.workGroupSize[1]}u;
    let workGroupSizeZ = ${t.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      ${t.dispatch[1]===1&&t.dispatch[2]===1?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                 localId.y * workGroupSizeX + localId.x;
             let workGroupID = (globalId - localId)/vec3<u32>(
                 workGroupSizeX, workGroupSizeY, workGroupSizeZ);

             return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                 workGroupID.y * numWorkgroups.x + workGroupID.x) *
                 (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                 localInvocationIndex);
      `}
    }
  `),n===!0)return o.push(`
      struct Uniform {
        size            : i32,
        numChannels     : i32,
        outShapeStrides : vec2<i32>,
        dispatchSize    : vec3<u32>,
      };

      @group(0) @binding(0) var<storage, write> result: array<${ux(e.dtype,t.isVec4)}>;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[gU,o.join(`
`),bU(e.shape),t.getUserCode()].join(`
`);let s=!1,a=!1,i="struct Uniforms { NAN : f32, ";t.variableNames.forEach((h,g)=>{let y=Qt(r[g].shape.length);(y==="vec5"||y==="vec6")&&(a=!0),(s||a)&&(i+="@align(16) "),s=a,i+=`${h.charAt(0).toLowerCase()+h.slice(1)}Shape : ${y}, `});let p=Qt(e.shape.length);a=p==="vec5"||p==="vec6",(s||a)&&(i+="@align(16) "),s=a,i+=`outShape : ${p}, `;let u=e.shape.length-1,l=Qt(u);a=l==="vec5"||l==="vec6",(s||a)&&(i+="@align(16) "),s=a,i+=`
       outShapeStrides: ${l}, `,t.size&&(s&&(i+="@align(16) "),s=!1,i+="size : i32, "),t.uniforms&&(s&&(i+="@align(16) "),i+=t.uniforms),i+="};",o.push(i),t.atomic?o.push(`
    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
  `):o.push(`
    @group(0) @binding(0) var<storage, write> result: array<${ux(e.dtype,t.isVec4)}>;
  `),t.variableNames.forEach((h,g)=>{o.push(`
    @group(0) @binding(${1+g}) var<storage, read> ${h}: array<${t.variableTypes?t.variableTypes[g]:ux(r[g].dtype,t.isVec4)}>;
      `)}),i!==""&&o.push(`
    @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
    `);let[m,c]=Ble(e.shape,t.dispatchLayout),d=[gU,o.join(`
`),bU(e.shape),m,Ele(e.shape.length)];if(t.atomic||d.push(Rle(e.shape,e.dtype,t.isVec4)),c===e.shape.length){let h=r.map((g,y)=>Lle(g,e.shape,t.variableTypes?t.variableTypes[y]==="vec4<f32>":t.isVec4,t.dispatchLayout.x.length===e.shape.length)).join(`
`);d.push(h)}return d.push(t.getUserCode()),d.join(`
`)}var gU=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function Ele(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:b.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function Rle(r,e,t){let n=r.length,o=ux(e,t),s;if(t?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${o}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${o}(value);
    }`,n>=2){let a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=Qt(n);t?s+=`
      fn setOutputAtCoords(${a.map(p=>`${p} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${a.map(p=>`${p} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${a.map(p=>`${p} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${a.map(p=>`${p} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function Lle(r,e,t,n){let o=_le(r,t);return r.shape.length<=e.length&&(o+=$le(r,e,t,n)),o}function _le(r,e){let t=r.name,n=r.shape.length,o=Qt(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=a.map(l=>`${l} : i32`).join(", ");if(n<1)return e?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${t}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${t}[0]);
      }
    `;let p=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,u=`${n}D`;return n===0&&(u="1D"),e?`
      fn ${s}(${i}) -> vec4<f32> {
        return vec4<f32>(${t}[getIndexFromCoords${u}(${o}(${a.join(",")}),
          ${p}) / 4]);
      }
      `:`
    fn ${s}(${i}) -> f32 {
      return f32(${t}[getIndexFromCoords${u}(${o}(${a.join(",")}),
        ${p})]);
    }
   `}function $le(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"ByOutput",i=r.shape.length,p=e.length,u=Qt(p);if(b.arraysEqual(r.shape,e)&&n)return t?`
        fn ${a}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${o}[globalIndex]);
        }

        fn ${a}Coords(coords : ${u}) -> vec4<f32> {
          return vec4<f32>(${o}[${p>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${a}Index(globalIndex : i32) -> f32 {
        return f32(${o}[globalIndex]);
      }

      fn ${a}Coords(coords : ${u}) -> f32 {
        return f32(${o}[${p>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let l=C.getBroadcastDims(r.shape,e),m=p-i,c="";if(i===0)return t?`
      fn ${a}Index(globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${a}Coords(coords : ${u}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${a}Index(globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${a}Coords(coords : ${u}) -> f32{
        return get${s}();
      }
    `;p<2&&l.length>=1?c="coords = 0;":c=l.map(g=>`coords.${wi(g+m)} = 0;`).join(`
`);let d="";if(p<2&&i>0)d="coords";else if(p>1){let g=Qt(i),y=r.shape.map((T,x)=>`coords.${wi(x+m)}`).join(", ");d=`${g}(${y})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return t?`
      fn ${a}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${c}
        return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
      }

      fn ${a}Coords(coordsIn : ${u}) -> vec4<f32> {
        var coords = coordsIn;
        ${c}
        return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
      }
    `:`
    fn ${a}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${c}
      return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
    }

    fn ${a}Coords(coordsIn : ${u}) -> f32 {
      var coords = coordsIn;
      ${c}
      return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
    }
  `}function Ble(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length;if(t.length===s)return[`fn getOutputCoords() -> ${Qt(s)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,s];let a="",i=[t,n,o],p=0;for(let c=0;c<i.length;c++){let d=i[c];if(d.length!==0)if(p+=d.length,d.length===1)a+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=hU(d,"uniforms.outShape");a+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)a+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?a+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:a+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let u=[];for(let c=0;c<p;c++)u.push(`d${c}`);let l=Qt(p),m=`fn getOutputCoords() -> ${l} {
    ${a}
  `;return u.length===0?m+=`return ${l}(0); }`:m+=`return ${l}(${u.join(",")}); }`,[m,p]}function bU(r){let e=r.length;if(e<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let t=b.computeStrides(r),n=Qt(e),o=[];for(let a=0;a<e;a++)o.push(`d${a}`);if(t.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s;return s="var index2 = index;"+t.map((a,i)=>{let p=`let ${o[i]} = index2 / uniforms.outShapeStrides.${wi(i)}`,u=i===t.length-1?`let ${o[i+1]} = index2 - ${o[i]} * uniforms.outShapeStrides.${wi(i)}`:`index2 = index2 - ${o[i]} * uniforms.outShapeStrides.${wi(i)}`;return`${p}; ${u};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}var px={};Xe(px,{ArrayBufferToTypedArray:()=>iD,GPUBytesPerElement:()=>Tg,computeDispatch:()=>fe,computeWorkGroupSizeForConv2d:()=>bg,computeWorkGroupSizeForMatMul:()=>aD,computeWorkPerThreadForConv2d:()=>yg,flatDispatchLayout:()=>Ie,isWebGPUSupported:()=>xg,tilesFitEvenlyIntoShape:()=>Gl});var zl=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function Gl(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]===0)}function fe(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(zl(r.x.map(i=>e[i]))/(t[0]*n[0])),r.y?Math.ceil(zl(r.y.map(i=>e[i]))/(t[1]*n[1])):1,r.z?Math.ceil(zl(r.z.map(i=>e[i]))/(t[2]*n[2])):1];return[o,s,a]}function bg(r,e){let t=zl(r.x.map(o=>e[o])),n=zl(r.y.map(o=>e[o]));return t<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function aD(r,e,t){return r===1?[32,1,1]:t===1?[1,32,1]:[8,8,1]}function yg(r,e){let t=zl(r.x.map(o=>e[o])),n=zl(r.y.map(o=>e[o]));return t<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function Ie(r){return{x:r.map((e,t)=>t)}}function Tg(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function iD(r,e){if(e==="float32")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${e}`)}function xg(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}function uD(r,e,t,n,o=4){return b.assert((n%4===0||n%3===0)&&r[0]===4&&(o===3||o===4),()=>`tileInner must be divisible by 4|3. ColPerThread must be 4.
           innerElementSize must be 3|4.`),`
  var<workgroup> mm_Asub : array<array<vec${o}<f32>, ${n/o}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${t/r[0]}>, ${n}>;

  let RowPerThread = ${r[1]};
  let ColPerThread = ${r[0]};
  let InnerElementSize = ${o};
  let TileInner = ${n};

  ${ja()}

    let tileRow = ${e===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${e===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / InnerElementSize;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            BCached[0] = mm_Bsub[k * InnerElementSize][tileCol];
            BCached[1] = mm_Bsub[k * InnerElementSize + 1][tileCol];
            BCached[2] = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${o===3?"":"BCached[3] = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            for (var i = 0; i < RowPerThread; i = i + 1) {
                let ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                ${o===3?"":"acc[i] = BCached[3] * ACached.w + acc[i];"}
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var pD=class{constructor(e,t,n,o,s,a=null,i=null,p=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,8,1];this.isVec4=!0;this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let u=a!=null,l=p!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=o,this.batchBEqualOne=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],o=[this.tileAOuter,this.tileInner],s=[this.tileInner,this.tileBOuter];return[Gl(o,this.aShape.slice(1)),Gl(s,n.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",o="";if(this.activation){let i=vn(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${i}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${i}
            }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
        `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
          let batch = i32(globalId.z);
        `}

        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchBEqualOne?`
          let batchBSize = 0;
          let batch = 0;
          `:`
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
          let batch = i32(globalId.z);
       `}
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${s}
          ${o}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${uD(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};var zle=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(
          t * TileInner + inputRow,
          globalRowStart + inputCol, globalId);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(
          globalRowStart + inputRow,
          t * TileInner + inputCol, globalId);
        `,Gle=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Ig(r,e,t=!1,n=32){let o=r[1]*e[1],s=r[0]*e[0],a=t?o:n,i=t?n:o;b.assert(i%e[1]===0&&a%e[0]===0&&n%e[1]===0,()=>`tileAHight ${i} must be divisible by workGroupSize[1]${e[1]}, tileAWidth ${a} must be divisible by workGroupSize[0]${e[0]}, tileInner ${n} must be divisible by workGroupSize[1]${e[1]}`);let p=i/e[1],u=a/e[0],l=n/e[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${a}>, ${i}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${n}>;
    let RowPerThread = ${r[1]};
    let ColPerThread = ${r[0]};
    let TileInner = ${n};

    @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;

      let globalRowStart = i32(workgroupId.y) * ${o};

      let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${p};
      let tileColA = i32(localId.x) * ${u};
      let tileRowB = i32(localId.y) * ${l};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${u}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${zle(t)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${l}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${n} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${Gle(t)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}var Ule=r=>r?`
      mm_readA(colA, globalRow, globalId),
      mm_readA(colA + 1, globalRow, globalId),
      mm_readA(colA + 2, globalRow, globalId),
      mm_readA(colA + 3, globalRow, globalId)
  `:`
      mm_readA(globalRow, colA, globalId),
      mm_readA(globalRow, colA + 1, globalId),
      mm_readA(globalRow, colA + 2, globalId),
      mm_readA(globalRow, colA + 3, globalId)
  `;function Wle(r,e=!1){return b.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`),`
    let TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${ja()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Ule(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var lD=class{constructor(e,t,n,o,s,a=!1,i=!1,p=null,u=null,l=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let m=a?e[1]:e[2];this.workGroupSize=aD(t[1],m,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),b.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=p!=null,d=l!=null;c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.transposeA=a,this.transposeB=i,this.addBias=c,this.activation=u,this.hasPreluActivationWeights=d,this.batchAEqualOne=o,this.batchBEqualOne=s,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],m),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${i}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e,t,n){let o=this.workGroupSize[1]*this.workPerThread,s=this.workGroupSize[0]*this.workPerThread;this.tileInner=32,this.outputShape[1]===1&&(this.tileInner=this.workGroupSize[0]*4);let a=e%o===0,i=t%s===0,p=n%this.tileInner===0;return[a,i,p]}getUserCode(){let e=this.fitAOuter&&this.fitInner?"return A[batch * batchASize + row * uniforms.aShape[2] + col];":`
        if(row < uniforms.aShape[1] && col < uniforms.aShape[2]) {
          return A[batch * batchASize + row * uniforms.aShape[2] + col];
        }
        return 0.0;
         `,t;this.transposeB===!1?t="return B[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B[batch * batchBSize + col * uniforms.dimInner + row];";let n="",o="";if(this.activation){let i=vn(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
        let batch = 0;
        let batchASize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        `}
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
        let batch = 0;
        let batchBSize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        `}
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?Ig([this.workPerThread,this.workPerThread,1],this.workGroupSize,this.transposeA,this.tileInner):Wle(this.workGroupSize,this.transposeA)}
    `}};function Kle(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${ja()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var mD=class{constructor(e,t,n,o=!1,s=!1,a=null,i=null,p=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize);let u=a!=null,l=p!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e;this.transposeA===!1?e="return f32(A[batch * batchASize + row * uniforms.dimInner + col]);":e="return f32(A[batch * batchASize + col * uniforms.dimAOuter + row]);";let t;this.transposeB===!1?t="return f32(B[batch * batchBSize + row * uniforms.dimBOuter + col]);":t="return f32(B[batch * batchBSize + col * uniforms.dimInner + row]);";let n="",o="";if(this.activation){let i=vn(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = batchIn;
          `}
        ${e}
      }

      fn mm_readB(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = batchIn;
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutputAtCoords(batch, row, col, value);
      }
      ${Kle()}
    `}};function Vle(r){let e=r[1]/2,t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${t}>, ${n}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${ja()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        }
      } else {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${e};
    if (tileRow >= ${e} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var cD=class{constructor(e,t,n,o=null,s=null,a=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,16,1];b.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let i=o!=null;i&&this.variableNames.push("bias");let p=a!=null;p&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=s,this.hasPreluActivationWeights=p,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",o="";if(this.activation){let i=vn(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${i}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${i}
        }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
          let batch = 0;
          let batchASize = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = i32(globalId.z);
          `}
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = i32(globalId.z);
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${s}
          ${o}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${Vle(this.workGroupSize)}
    `}};function Le(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s),i=b.sizeFromShape(a);return b.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var TU={kernelName:fs,backendName:"webgpu",kernelFunc:Le};function Jc({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:p=null}){let u=r.shape.length,l=e.shape.length,m=t?r.shape[u-2]:r.shape[u-1],c=n?e.shape[l-1]:e.shape[l-2],d=t?r.shape[u-1]:r.shape[u-2],f=n?e.shape[l-2]:e.shape[l-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[y,m,d]:[y,d,m],w=n?[T,f,c]:[T,c,f],M=Le({inputs:{x:r},backend:o,attrs:{shape:k}}),F=Le({inputs:{x:e},backend:o,attrs:{shape:w}}),E=[M,F],$=Math.max(y,T),G=y===1,W=T===1,V=m%4===0&&f%4===0&&!t&&!n,q;d*f<=32?q=new mD([$,d,f],G,W,t,n,s,p,a):!t&&!n&&(d<=16&&(f<=512||c>=2*f)||f<=16&&(d<=512||m>=2*d))?q=new cD(k,w,[$,d,f],s,p,a):V?q=new pD(k,[$,d,f],B().get("WEBGPU_MATMUL_WORK_PER_THREAD"),G,W,s,p,a):q=new lD(k,[$,d,f],B().get("WEBGPU_MATMUL_WORK_PER_THREAD"),G,W,t,n,s,p,a);let j=[M,F];s&&j.push(s),a&&j.push(a);let Y=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}];p==="leakyrelu"&&(Y.push({type:"float32",data:[i]}),q.uniforms+=" alpha : f32,");let te=o.runWebGPUProgram(q,j,r.dtype,Y),H=Le({inputs:{x:te},backend:o,attrs:{shape:I}});E.push(te);for(let oe of E)o.disposeData(oe.dataId);return H}function Hle(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n;return Jc({a:o,b:s,transposeA:p,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var xU={kernelName:Cs,backendName:"webgpu",kernelFunc:Hle};var lx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Ai(this.op,!1)}
      }

      ${Se()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var dD=class{constructor(e,t,n,o){this.variableNames=["A","B"];this.size=!0;this.workGroupSize=[256,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.lastDimensionSize=o?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=o,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Ai(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Se()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}};var fD=class{constructor(e,t,n){this.variableNames=["A","B"];this.workPerThread=4;this.isVec4=!0;this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Ai(this.op,this.isVec4)}
      }
      ${Se()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}};var Cg=class{constructor(e,t,n){this.variableNames=["A","B"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Ai(this.op,!1)}
      }
      ${Se()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function hD(r,e,t){if(b.arraysEqual(e,t)&&b.sizeFromShape(e)%4===0)return new fD(r,e,t);let o=e.length===1&&t.length>1&&e[0]<1024,s=t.length===1&&e.length>1&&t[0]<1024;return o||s?new dD(r,e,t,s):new Cg(r,e,t)}function dr(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var IU={kernelName:Vn,backendName:"webgpu",kernelFunc:dr};function Xa(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.tensorMap.get(s.dataId),i=dr({inputs:{x:n},backend:t}),p=dr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:p},s}var CU={kernelName:Lu,backendName:"webgpu",kernelFunc:Xa};var Ya=class{constructor(e,t){this.variableNames=["A"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${wu(this.op,!1)}
      }
      ${Se()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ct({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=t||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let u=a.tensorMap.get(s.dataId),l=e(u.values,i);return a.makeTensorInfo(s.shape,i,l)}let p=new Ya(s.shape,r);return a.runWebGPUProgram(p,[s],i)}}function vt({opSnippet:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;if(t&&a.dtype==="complex64"){let m=p.tensorMap.get(a.dataId),c=p.tensorMap.get(i.dataId),d,f;if(r!==0)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[y,T]=g,x={dataId:y.dataId,dtype:y.dtype,shape:a.shape},I={dataId:T.dataId,dtype:T.dtype,shape:i.shape},k=hD(r,a.shape,i.shape);return p.runWebGPUProgram(k,[x,I],Ft(y.dtype,T.dtype))});else{let g=new lx(17,a.shape,i.shape),y=new lx(18,a.shape,i.shape),T=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}];d=p.runWebGPUProgram(g,T,"float32"),f=p.runWebGPUProgram(y,T,"float32")}let h=Xa({inputs:{real:d,imag:f},backend:p});return p.disposeData(d.dataId),p.disposeData(f.dataId),h}let u=n||Ft(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||p.shouldExecuteOnCPU([a,i]))&&e!=null){let m=p.tensorMap.get(a.dataId).values,c=p.tensorMap.get(i.dataId).values,d=a.dtype==="string"?C.fromUint8ToStringArray(m):m,f=a.dtype==="string"?C.fromUint8ToStringArray(c):c,[h,g]=e(a.shape,i.shape,d,f,u);return p.makeTensorInfo(g,u,h)}let l=hD(r,a.shape,i.shape);return p.runWebGPUProgram(l,[a,i],u)}}var{addImpl:kU,ceilImpl:SU,concatImpl:vU,equalImpl:AU,expImpl:wU,expm1Impl:NU,floorImpl:DU,gatherNdImpl:PU,gatherV2Impl:MU,greaterEqualImpl:FU,greaterImpl:EU,lessEqualImpl:RU,lessImpl:LU,logImpl:_U,maxImpl:$U,maximumImpl:BU,minimumImpl:OU,multiplyImpl:zU,negImpl:GU,notEqualImpl:UU,prodImpl:WU,rangeImpl:KU,rsqrtImpl:VU,scatterImpl:HU,simpleAbsImpl:qU,sliceImpl:jU,stridedSliceImpl:XU,stringNGramsImpl:YU,subImpl:QU,tileImpl:ZU,topKImpl:JU,transposeImpl:eW,uniqueImpl:Rkr}=Bc;var qle=ct({opType:0,cpuKernelImpl:qU}),tW={kernelName:as,backendName:"webgpu",kernelFunc:qle};var jle=vt({opSnippet:1,cpuKernelImpl:kU,supportsComplex:!0}),rW={kernelName:Nn,backendName:"webgpu",kernelFunc:jle};var gD=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${Se()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Xle(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return dr({inputs:{x:n[0]},backend:t});let o=n.map(i=>i.dtype).reduce((i,p)=>Ft(i,p)),s=n.map(i=>i.shape),a=new gD(s);return t.runWebGPUProgram(a,n,o)}var nW={kernelName:oo,backendName:"webgpu",kernelFunc:Xle};var kg=class{constructor(e,t,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="infinityValue : f32,";this.size=!0;let o=[t];C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.length),this.op=n==="min"?"<":">";let[s]=C.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${wi(this.inputShape.length-1)}`,n=()=>{let s="";if(this.outputShape.length===1)this.inputShape.length!==1&&(s+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)s+=`outputCoords.${wi(a)},`;return s};return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      ${Se()}
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}};var bD=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${gg()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var yD=class{constructor(e,t){this.variableNames=["A"];this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Qt(this.outputShape.length),t=Yle(this.newDim);return`
      ${Se()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function Yle(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC.${wi(n)}`;return t.join()}function An(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,p=new Array(i);for(let l=0;l<p.length;l++)p[l]=o.shape[s[l]];if(t.shouldExecuteOnCPU([o])){let m=a.tensorMap.get(o.dataId).values,c=eW(m,o.shape,o.dtype,s,p);return t.makeTensorInfo(p,o.dtype,c)}if(o.shape.length===2&&b.arraysEqual(s,[1,0])){let l=new bD(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}let u=new yD(o.shape,s);return a.runWebGPUProgram(u,[o],o.dtype)}var oW={kernelName:Pn,backendName:"webgpu",kernelFunc:An};function Qle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=An({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],p.shape.length);let l=new kg(p.shape,a[0],"max"),m=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=t.runWebGPUProgram(l,[p],"int32",m);return u.forEach(d=>t.disposeData(d.dataId)),c}var sW={kernelName:so,backendName:"webgpu",kernelFunc:Qle};function Zle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=An({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],p.shape.length);let l=new kg(p.shape,a[0],"min"),m=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=t.runWebGPUProgram(l,[p],"int32",m);return u.forEach(d=>t.disposeData(d.dataId)),c}var aW={kernelName:ri,backendName:"webgpu",kernelFunc:Zle};var Sg=class{constructor(e,t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Se()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}};var vg=class{constructor(e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>,";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Jle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1,l=C.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))return dr({inputs:{x:o},backend:t});let m,c=[{type:"int32",data:[l.strideHeight,l.strideWidth]}];return l.filterHeight===1&&l.filterWidth===1?m=new vg(l):(m=new Sg(l,"avg"),c.push({type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]})),t.runWebGPUProgram(m,[o],o.dtype,c)}var iW={kernelName:ao,backendName:"webgpu",kernelFunc:Jle};function eme(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Jc({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var uW={kernelName:io,backendName:"webgpu",kernelFunc:eme};var xD=class{constructor(e,t){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Qt(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Qt(this.rank),t=tme(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${TD[a]} = uniforms.start[${a}] + coords.${TD[a]};`),`
      ${Se()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},TD=["x","y","z","w","u","v"];function tme(r){if(r===1)return"sourceLoc";if(r<=6)return TD.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Qa(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,p]=Tt.parseSliceParams(o,s,a);if(Tt.assertParamsValid(o,i,p),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.tensorMap.get(o.dataId),c=jU(m.values,i,p,o.shape,o.dtype);return t.makeTensorInfo(p,o.dtype,c)}if(b.sizeFromShape(p)===0)return t.makeTensorInfo(p,o.dtype,[]);let u=new xD(i,p),l=[{type:"int32",data:i}];return t.runWebGPUProgram(u,[o],o.dtype,l)}var pW={kernelName:gs,backendName:"webgpu",kernelFunc:Qa};var rme=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((T,x)=>T*x),p=C.getReshaped(o.shape,s,i),u=C.getPermuted(p.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=[],f=Le({inputs:{x:o},backend:t,attrs:{shape:p}}),h=An({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Le({inputs:{x:h},backend:t,attrs:{shape:l}}),y=Qa({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>t.disposeData(T.dataId)),y},lW={kernelName:is,backendName:"webgpu",kernelFunc:rme};var ID=vt({opSnippet:10,dtype:"bool",cpuKernelImpl:UU}),mW={kernelName:ba,backendName:"webgpu",kernelFunc:ID};function Nu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return dr({inputs:{x:o.complexTensorInfos.real},backend:t})}var cW={kernelName:Wu,backendName:"webgpu",kernelFunc:Nu};function dW(r,e){let t=new Ya(r.shape,22),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function CD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return dr({inputs:{x:o},backend:t});let a=bt(o.shape),i=CD({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),p=Xa({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeData(i.dataId),p}if(o.dtype==="complex64"){let a=Nu({inputs:{input:o},backend:t}),i=CD({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeData(a.dataId),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=dr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return dW(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),p=ID({inputs:{a:o,b:a},backend:t});return t.disposeData(a.dataId),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var fW={kernelName:Wn,backendName:"webgpu",kernelFunc:CD};var nme=ct({opType:1,cpuKernelImpl:SU}),hW={kernelName:uo,backendName:"webgpu",kernelFunc:nme};var kD=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Se()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var SD=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Se()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function ome(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i,p=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return b.sizeFromShape(o.shape)%4===0?i=new kD(o.shape):i=new SD(o.shape),t.runWebGPUProgram(i,[o],o.dtype,p)}var gW={kernelName:Kn,backendName:"webgpu",kernelFunc:ome};var vD=class{constructor(e){this.uniforms="";this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)e.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Se()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Ul(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return dr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var bW={kernelName:zu,backendName:"webgpu",kernelFunc:Ul};function mx(r,e,t){let n=r[0].dtype;if(n==="complex64"){let d=r.map(T=>Nu({inputs:{input:T},backend:t})),f=r.map(T=>Ul({inputs:{input:T},backend:t})),h=mx(d,e,t),g=mx(f,e,t),y=Xa({inputs:{real:h,imag:g},backend:t});return d.forEach(T=>t.disposeData(T.dataId)),f.forEach(T=>t.disposeData(T.dataId)),t.disposeData(h.dataId),t.disposeData(g.dataId),y}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let d=r.map(I=>{let k=b.sizeFromShape(I.shape.slice(e));return Le({inputs:{x:I},backend:t,attrs:{shape:[-1,k]}})}),f=d.map(I=>({vals:t.readSync(I.dataId),shape:I.shape})),h=C.computeOutShape(d.map(I=>I.shape),1),g=d[0].shape[0]===1,y=vU(f,h,n,g),T=C.computeOutShape(r.map(I=>I.shape),e),x=t.makeTensorInfo(T,n,y);return d.forEach(I=>t.disposeData(I.dataId)),x}let{tensors2D:s,outShape:a}=sme(r,e,t),i=s.map(d=>d.shape),p=new vD(i),u=[],l=new Array(i.length-1);if(l.length>0){l[0]=i[0][1],u.push({type:"int32",data:[l[0]]});for(let d=1;d<l.length;d++)l[d]=l[d-1]+i[d][1],u.push({type:"int32",data:[l[d]]})}let m=t.runWebGPUProgram(p,s,s[0].dtype,u);s.forEach(d=>t.disposeData(d.dataId));let c=Le({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeData(m.dataId),c}function sme(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>Le({inputs:{x:s},backend:t,attrs:{shape:[b.sizeFromShape(s.shape.slice(0,e)),b.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function AD(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(u=>u.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(u=>b.sizeFromShape(u.shape)>0);if(i.length===1)return dr({inputs:{x:i[0]},backend:t});let p=i.map(u=>u.shape);return C.assertParamsConsistent(p,s),mx(i,s,t)}var yW={kernelName:us,backendName:"webgpu",kernelFunc:AD};var wD=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      dimAOuter : i32, dimBOuter : i32, dimInner : i32,`;this.workGroupSize=[8,8,1];this.isVec4=!0;this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.innerElementSize=this.convInfo.inChannels%4===0?4:3,this.innerElementSize===3?this.variableTypes=["f32","vec4<f32>"]:this.variableTypes=["vec4<f32>","vec4<f32>"],this.addBias&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),this.hasPreluActivationWeights&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>")),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.workGroupSize[0]*this.innerElementSize,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}_${this.innerElementSize}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],s=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Gl(e,[n,s]),Gl(t,[s,o])]}getUserCode(){let e=uD(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize),t=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
        let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];

        var resData = vec${this.innerElementSize}<f32>(0.0);
        // The bounds checking is always needed since we use it to pad zero for
        // the 'same' padding type.
        if (xRow >= 0 && xRow < uniforms.xShape[1] && xCol >= 0 && xCol < uniforms.xShape[2]) {
          var coord = vec4<i32>(
            batch,
            xRow,
            xCol,
            inChCoord);
          let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
          ${this.innerElementSize===3?"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);":"resData = x[xIndex / 4];"}
        }
        return resData;`,n=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${t}
         }
         return vec${this.innerElementSize}<f32>(0.0);
        `,o=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,s="",a="";if(this.activation){let u=vn(this.activation,this.isVec4);this.hasPreluActivationWeights?s=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${u}
        }`:s=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${u}
        }`,a="value = activation(value, outCoord);"}let i=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${s}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec${this.innerElementSize}<f32> {
          let r = row;
          let c = col * ${this.innerElementSize};
          var batch = i32(globalId.z);
          ${n}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${o}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${i}
            ${a}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}};var ND=class{constructor(e,t,n,o,s=!1,a=null,i=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=bg(this.dispatchLayout,this.outputShape),this.elementsPerThread=yg(this.dispatchLayout,this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=s,this.activation=a,this.hasPreluActivationWeights=i;let p=this.workGroupSize[1]*this.elementsPerThread[1],u=this.workGroupSize[0]*this.elementsPerThread[0];this.tileInner=32,this.fitAOuter=t%p===0,this.fitBOuter=n%u===0,this.fitInner=o%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,t=this.isChannelsLast?`
    let outCoord = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let outCoord = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,n=Ig(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),o=this.isChannelsLast?"row":"col",s=this.isChannelsLast?"col":"row",a=`
    let inChannels = uniforms.wShape[2];
    let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
    let outRow = ${o} / outWidth;
    let outCol = ${o} % outWidth;

    let WRow = ${s} / (uniforms.filterDims[1] * inChannels);
    let WCol = ${s} / inChannels % uniforms.filterDims[1];
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${s} % inChannels;
    ${e}
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,i=this.isChannelsLast?this.fitAOuter&&this.fitInner?`${a}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${a}
    }
    return 0.0;`:this.fitInner&&this.fitBOuter?`${a}`:`if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
          ${a}
        }
        return 0.0;`,p="return W[row * uniforms.wShape[3] + col];",u="",l="";if(this.activation){let d=vn(this.activation,!1);this.hasPreluActivationWeights?u=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${d}
                }`:u=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${d}
                  }
                `,l="value = activation(value, outCoord);"}let m=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${u}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${this.isChannelsLast?i:p}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${this.isChannelsLast?p:i}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      ${t}
      ${m}
      ${l}
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${n}
  `}};function TW(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function ame({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=t.dataFormat==="channelsLast",u=!p,l=!1,m=p&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",c=[],d,f;if(m){let y=t.inHeight*t.inWidth*t.inChannels;d=Le({inputs:{x:r},backend:n,attrs:{shape:[1,t.batchSize,y]}}),f=Le({inputs:{x:e},backend:n,attrs:{shape:[1,y,t.outChannels]}})}else d=Le({inputs:{x:r},backend:n,attrs:{shape:p?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),f=Le({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(c.push(d),c.push(f),s!=null){let y=TW(s.shape,p);y!=null&&(s=Le({inputs:{x:s},backend:n,attrs:{shape:y}}),c.push(s))}if(o!=null){let y=TW(o.shape,p);y!=null&&(o=Le({inputs:{x:o},backend:n,attrs:{shape:y}}),c.push(o))}let h=Jc({a:p?d:f,b:p?f:d,transposeA:u,transposeB:l,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=Le({inputs:{x:h},backend:n,attrs:{shape:t.outShape}});c.push(h);for(let y of c)n.disposeData(y.dataId);return g}function cx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=o!=null,u=s!=null,l=t.dataFormat==="channelsLast",m;if(l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID"||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID"))return ame({x:r,filter:e,convInfo:t,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});let d=(t.inChannels%4===0||t.inChannels%3===0)&&t.outChannels%4===0&&l,f=l?t.outHeight*t.outWidth:t.outChannels,h=l?t.outChannels:t.outHeight*t.outWidth,g=t.filterHeight*t.filterWidth*t.inChannels,y=[t.padInfo.top,t.padInfo.left],T=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[f]},{type:"int32",data:[h]},{type:"int32",data:[g]}];d?m=new wD(t,p,i,u):m=new ND(t,f,h,g,p,i,u);let x=[],I=[r,e];p&&(!l&&o.shape.length===1&&(o=Le({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}}),x.push(o)),I.push(o)),u&&(!l&&s.shape.length===1&&(s=Le({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),x.push(s)),I.push(s)),i==="leakyrelu"&&(T.push({type:"float32",data:[a]}),m.uniforms+=" alpha : f32,");let k=n.runWebGPUProgram(m,I,r.dtype,T);for(let w of x)n.disposeData(w.dataId);return k}function ime(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=t,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m);return cx({x:o,filter:s,convInfo:c,backend:n})}var xW={kernelName:po,backendName:"webgpu",kernelFunc:ime};var DD=class{constructor(e){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e.inShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=bg(this.dispatchLayout,this.outputShape),this.elementsPerThread=yg(this.dispatchLayout,this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${Ig(this.elementsPerThread,this.workGroupSize)}
  `}};var PD=class{constructor(e){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.inShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Se()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function ume(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(a,s.shape,i,1,p,l,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if(B().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new PD(c);else{f=new DD(c);let h=c.inShape[1]*c.inShape[2],g=c.inShape[3],y=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(f,[o,s],"float32",d)}var IW={kernelName:lo,backendName:"webgpu",kernelFunc:ume};var pme=ct({opType:2}),CW={kernelName:mo,backendName:"webgpu",kernelFunc:pme};var lme=ct({opType:3}),kW={kernelName:co,backendName:"webgpu",kernelFunc:lme};var MD=class{constructor(e,t,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,p]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Se()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${p};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var mme=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:p,extrapolationValue:u}=n,l=new MD(o.shape[3],s.shape,i,p),m=[{type:"float32",data:[u]}];return t.runWebGPUProgram(l,[o,s,a],"float32",m)},SW={kernelName:ia,backendName:"webgpu",kernelFunc:mme};var dx=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="index : f32,";this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=o,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",n=this.exclusive?t:`getX(${vW(e,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],s="",a="";return this.exclusive?(s=this.reverse?`end != ${o-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${o}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${Se()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${AW(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${s}) {
           let idx = ${a};
           ${AW(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${vW(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function vW(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function AW(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function fx(r,e,t,n,o,s){let a=e.shape.length,i=C.getAxesPermutation([n],a),p=e;i!=null&&(p=An({inputs:{x:e},backend:t,attrs:{perm:i}}));let u=C.getInnerMostAxes(1,a)[0];if(u!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let l=p.shape[u],m=dr({inputs:{x:p},backend:t});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new dx(r,p.shape,!1,s),f=m,h=[{type:"float32",data:[c]}];m=t.runWebGPUProgram(d,[m],m.dtype,h),t.disposeData(f.dataId)}if(o){let c=new dx(r,p.shape,o,s),d=m,f=[{type:"float32",data:[0]}];m=t.runWebGPUProgram(c,[m],m.dtype,f),t.disposeData(d.dataId)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=An({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeData(m.dataId),t.disposeData(p.dataId),d}return m}function dme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return fx("*",o,t,s,a,i)}var wW={kernelName:aa,backendName:"webgpu",kernelFunc:dme};function fme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return fx("+",o,t,s,a,i)}var NW={kernelName:fo,backendName:"webgpu",kernelFunc:fme};var FD=class{constructor(e,t){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32,";this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function hme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=[{type:"int32",data:[s]}],g=new FD(f,a);return t.runWebGPUProgram(g,[o],o.dtype,h)}var DW={kernelName:ua,backendName:"webgpu",kernelFunc:hme};var Ag=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[4,4,4];this.isVec4=!0;this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let s=vn(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${s}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${gg()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}};var wg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,
      channelMul : i32,`;this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=vn(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${s}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${ja()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function gme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n,l=p;l==null&&(l=[1,1]);let m=C.computeConv2DInfo(o.shape,s.shape,a,l,i,u,!0),c=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}],d;return m.batchSize===1&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&m.strideHeight===1&&m.strideWidth===1&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.filterHeight===3&&m.inChannels%4===0?d=new Ag(m):(d=new wg(m),c.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),t.runWebGPUProgram(d,[o,s],o.dtype,c)}var PW={kernelName:ho,backendName:"webgpu",kernelFunc:gme};var ED=vt({opSnippet:0,cpuKernelImpl:zU,supportsComplex:!0}),MW={kernelName:Fo,backendName:"webgpu",kernelFunc:ED};var RD=class{constructor(e,t){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32,";this.size=!0;this.inputShape=[e.batchSize,e.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Se()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function Ni(r,e,t,n,o){let s=r.shape.length,a=[],i=b.parseAxisParam(e,r.shape),p=i,u=C.getAxesPermutation(p,s),l=r;u!=null&&(l=An({inputs:{x:r},attrs:{perm:u},backend:o}),p=C.getInnerMostAxes(p.length,s),a.push(l)),C.assertAxesAreInnerMostDims(n,p,s);let[m,c]=C.computeOutAndReduceShapes(l.shape,p),d=m;t&&(d=C.expandShapeToKeepDim(m,i));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([l])){let h=o.tensorMap.get(l.dataId).values;switch(n){case"max":let g=$U(h,b.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:y,outShape:T,outDtype:x}=WU(l.shape,l.dtype,h,p);f=o.makeTensorInfo(T,x,y);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=b.sizeFromShape(c),y=b.sizeFromShape(l.shape)/h,T={windowSize:h,inSize:h,batchSize:y,outSize:1},x=n==="mean"?"float32":Ji(r.dtype),I=[{type:"int32",data:[h]}],k=new RD(T,n),w=o.runWebGPUProgram(k,[l],x,I);a.push(w),f=Le({inputs:{x:w},attrs:{shape:d},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),f}function Ng(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return Ni(o,s,a,"sum",t)}var FW={kernelName:Ko,backendName:"webgpu",kernelFunc:Ng};function bme(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:p}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=C.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,p[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=An({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=Le({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=ED({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Ng({inputs:{x:c},backend:t,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeData(h.dataId);return c}var EW={kernelName:Ou,backendName:"webgpu",kernelFunc:bme};var yme=ct({opType:4}),RW={kernelName:bo,backendName:"webgpu",kernelFunc:yme};var Tme=vt({opSnippet:4,dtype:"bool",cpuKernelImpl:AU}),LW={kernelName:pa,backendName:"webgpu",kernelFunc:Tme};var LD=ct({opType:5,cpuKernelImpl:wU,dtype:"float32"}),_W={kernelName:yo,backendName:"webgpu",kernelFunc:LD};function hx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),p=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+o+1),i.splice(p,0,1),Le({inputs:{x:s},backend:n,attrs:{shape:i}})}var $W={kernelName:ps,backendName:"webgpu",kernelFunc:hx};var xme=ct({opType:6,cpuKernelImpl:NU}),BW={kernelName:la,backendName:"webgpu",kernelFunc:xme};var _D=class{constructor(e){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Se()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Za(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new _D(n),i=[{type:"float32",data:[o]}];return e.runWebGPUProgram(a,[],s,i)}}var OW={kernelName:ni,backendName:"webgpu",kernelFunc:Za};var $D=class{constructor(e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var zW={kernelName:ma,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new $D(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var Ime=ct({opType:7,cpuKernelImpl:DU}),GW={kernelName:To,backendName:"webgpu",kernelFunc:Ime};var Cme=vt({opSnippet:12,dtype:"int32"}),UW={kernelName:xo,backendName:"webgpu",kernelFunc:Cme};var BD=class{constructor(e,t=!1){this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.useImport=t,this.shaderKey=`fromPixels_${this.useImport}`}getUserCode(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Se()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var KW={kernelName:Fp,backendName:"webgpu",kernelFunc:kme},ed;function kme(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,p=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[l,m]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,l,s];if(B().getBool("WEBGPU_USE_IMPORT")&&a)return WW({externalImage:o,backend:t,attrs:n,outShape:c,useImport:!0});if((a||i)&&(ed==null&&(ed=document.createElement("canvas").getContext("2d")),ed.canvas.width=l,ed.canvas.height=m,ed.drawImage(o,0,0,l,m),o=ed.canvas),u||p||a||i)return WW({externalImage:o,backend:t,attrs:n,outShape:c,useImport:!1});let d=o.data,f=d;if(s!=null&&s!==4){f=new Uint8Array(o.width*o.height*s);let y=d.length,T=0;for(let x=0;x<y;x++)x%4<s&&(f[T++]=d[x])}let h=t.makeTensorInfo(c,"int32"),g=t.tensorMap.get(h.dataId);return g.values=new Int32Array(f),t.maybeReleaseBuffer(h.dataId),t.uploadToGPU(h.dataId),h}function WW(r){let{externalImage:e,backend:t,attrs:n,outShape:o,useImport:s}=r,{numChannels:a}=n,i=b.sizeFromShape(o),p=b.computeStrides(o),u=new BD(o,s),l=[{type:"uint32",data:[i]},{type:"uint32",data:[a]},{type:"uint32",data:[...p]},{type:"uint32",data:[...u.dispatch]}];return t.runFromPixelsProgram(u,o,l,s,e)}var OD=class{constructor(e,t,n,o,s){this.uniforms="varianceEpsilon : f32,";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Se()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var VW={kernelName:Io,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:p}=e,u=t,l=[n,a,i],m=null;s!=null&&(m=s.shape,l.push(s));let c=null;o!=null&&(c=o.shape,l.push(o));let d=new OD(n.shape,a.shape,i.shape,m,c),f=[{type:"float32",data:[p]}];return u.runWebGPUProgram(d,l,n.dtype,f)}};function Sme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(o.shape,s.shape,p,m,u,c,!1,h);return cx({x:o,filter:s,convInfo:g,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:d})}var HW={kernelName:ks,backendName:"webgpu",kernelFunc:Sme};function vme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=l;f==null&&(f=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(p,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${f}'`);let h=C.computeConv2DInfo(o.shape,s.shape,p,f,u,m,!0),g=[o,s],y=a!=null,T=i!=null;y&&g.push(a),T&&g.push(i);let x=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]}],I;return h.batchSize===1&&h.inHeight===h.outHeight&&h.inWidth===h.outWidth&&h.strideHeight===1&&h.strideWidth===1&&h.filterHeight===h.filterWidth&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.filterHeight===3&&h.inChannels%4===0?I=new Ag(h,y,c,T):(I=new wg(h,y,c,T),x.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.outChannels/h.inChannels]})),c==="leakyrelu"&&(x.push({type:"float32",data:[d]}),I.uniforms+=" alpha : f32,"),t.runWebGPUProgram(I,g,"float32",x)}var qW={kernelName:Ss,backendName:"webgpu",kernelFunc:vme};var zD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Qt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Ame(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[p,u,l,m]=C.prepareAndValidate(n,o),c=Le({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),d=Le({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/l,l]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let T=t.readSync(o.dataId),x=t.bufferSync(n),I=PU(T,x,n.dtype,u,a,l,m,n.shape,i);return t.makeTensorInfo(p,n.dtype,I.values)}let f=new zD(a,[u,l]),h=[{type:"int32",data:[a]},{type:"int32",data:m}],g=t.runWebGPUProgram(f,[d,c],d.dtype,h),y=Le({inputs:{x:g},backend:t,attrs:{shape:p}});return t.disposeData(c.dataId),t.disposeData(d.dataId),t.disposeData(g.dataId),y}var jW={kernelName:ca,backendName:"webgpu",kernelFunc:Ame};var GD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=wme(this.aShape);return`
      ${Se()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function wme(r){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let n=0;n<r.length;n++)n===2?t.push("indexZ"):t.push(`${e[n]}`);return t.join()}function UD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,p=b.parseAxisParam(a,o.shape)[0],u=C.segment_util.collectGatherOpShapeInfo(o,s,p,i),l=b.sizeFromShape(s.shape),m=[],c=Le({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=Le({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,l/u.batchSize]}});m.push(c),m.push(d);let f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let x=t.tensorMap.get(d.dataId).values,I=xe(d.shape,d.dtype,x),w=t.tensorMap.get(c.dataId).values,M=xe(c.shape,c.dtype,w),F=MU(M,I,f);return m.forEach(E=>t.disposeData(E.dataId)),t.makeTensorInfo(u.outputShape,F.dtype,F.values)}let h=new GD(c.shape,f),g=t.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let y=Le({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return m.forEach(T=>t.disposeData(T.dataId)),y}var XW={kernelName:ls,backendName:"webgpu",kernelFunc:UD};var Nme=vt({opSnippet:5,cpuKernelImpl:EU,dtype:"bool"}),YW={kernelName:da,backendName:"webgpu",kernelFunc:Nme};var Dme=vt({opSnippet:6,dtype:"bool",cpuKernelImpl:FU}),QW={kernelName:Co,backendName:"webgpu",kernelFunc:Dme};function Pme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=[{type:"float32",data:[s]}],i=new Ya(o.shape,14);return i.uniforms="alpha : f32,",t.runWebGPUProgram(i,[o],"float32",a)}var ZW={kernelName:ko,backendName:"webgpu",kernelFunc:Pme};var Mme=vt({opSnippet:7,dtype:"bool",cpuKernelImpl:LU}),JW={kernelName:fa,backendName:"webgpu",kernelFunc:Mme};var Fme=vt({opSnippet:8,dtype:"bool",cpuKernelImpl:RU}),eK={kernelName:ha,backendName:"webgpu",kernelFunc:Fme};var Eme=ct({opType:9,cpuKernelImpl:_U}),tK={kernelName:So,backendName:"webgpu",kernelFunc:Eme};var Rme=vt({opSnippet:9,dtype:"bool"}),rK={kernelName:ga,backendName:"webgpu",kernelFunc:Rme};var Lme=ct({opType:10}),nK={kernelName:Ki,backendName:"webgpu",kernelFunc:Lme};function WD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n;return Ni(o,s,a,"max",t)}var oK={kernelName:vo,backendName:"webgpu",kernelFunc:WD};var _me=vt({opSnippet:15,cpuKernelImpl:BU}),sK={kernelName:Ao,backendName:"webgpu",kernelFunc:_me};function $me(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1,l=C.computePool2DInfo(o.shape,s,a,u,i,p),m,c=[];if(l.filterHeight===1&&l.filterWidth===1){if(b.arraysEqual(l.inShape,l.outShape))return dr({inputs:{x:o},backend:t});m=new vg(l),c.push({type:"int32",data:[l.strideHeight,l.strideWidth]})}else m=new Sg(l,"max"),c.push({type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]});return t.runWebGPUProgram(m,[o],o.dtype,c)}var aK={kernelName:wo,backendName:"webgpu",kernelFunc:$me};function Bme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:a}=n;return Ni(o,a,s,"mean",t)}var iK={kernelName:No,backendName:"webgpu",kernelFunc:Bme};function Ome(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return Ni(o,s,a,"min",t)}var uK={kernelName:Do,backendName:"webgpu",kernelFunc:Ome};var zme=vt({opSnippet:16,cpuKernelImpl:OU}),pK={kernelName:Po,backendName:"webgpu",kernelFunc:zme};var KD=class{constructor(e,t,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((u,l)=>`uniforms.pad${l}[0]`).join(","),n=this.xShape.map((u,l)=>`uniforms.pad${l}[0] + uniforms.xShape${e>1?`[${l}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=Qt(e),p=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Se()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${p}));
        }
      }
    `}};var lK={kernelName:Mo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=t,i=o.map(l=>({type:"int32",data:[l[0],l[1]]})),p=new KD(n.shape,o,s);return a.runWebGPUProgram(p,[n],n.dtype,i)}};function Gme(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[a,i]=GU(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o=new Ya(n.shape,11);return t.runWebGPUProgram(o,[n],n.dtype)}var mK={kernelName:ms,backendName:"webgpu",kernelFunc:Gme};function Ume(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n,u=t.readSync(o.dataId),l=t.readSync(s.dataId),{selectedIndices:m}=br.nonMaxSuppressionV3Impl(u,l,a,i,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var cK={kernelName:ya,backendName:"webgpu",kernelFunc:Ume};function Wme(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:y}=br.nonMaxSuppressionV5Impl(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var dK={kernelName:Ta,backendName:"webgpu",kernelFunc:Wme};function Dg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=Nu({inputs:{input:n},backend:t}),s=Dg({inputs:{x:o},backend:t}),a=Ul({inputs:{input:n},backend:t}),i=Dg({inputs:{x:a},backend:t}),p=Xa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),p}else return Za({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var fK={kernelName:xs,backendName:"webgpu",kernelFunc:Dg};function hK(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Nu({inputs:{input:n},backend:t}),s=hK({inputs:{x:o},backend:t}),a=Ul({inputs:{input:n},backend:t}),i=Dg({inputs:{x:a},backend:t}),p=Xa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),p}else return Za({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var gK={kernelName:cs,backendName:"webgpu",kernelFunc:hK};function Kme(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return hx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=hx({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=AD({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeData(l.dataId)),u}var bK={kernelName:ds,backendName:"webgpu",kernelFunc:Kme};var VD=class{constructor(e,t){this.variableNames=["x"];this.uniforms="constantValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Qt(e),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${o})`:`${o}`,i=e>1?"any(outC < start)":"outC < start",p=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Se()}
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${p}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${u}));
          }
        }
      }
    `}};var HD=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(s.every(u=>b.arraysEqual(u,[0,0])))return dr({inputs:{x:o},backend:t});if(b.sizeFromShape(o.shape)===0){let u=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return Za({backend:t,attrs:{shape:u,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(u=>i.push({type:"int32",data:[u[0],u[1]]}));let p=new VD(o.shape,s);return t.runWebGPUProgram(p,[o],o.dtype,i)},yK={kernelName:Eo,backendName:"webgpu",kernelFunc:HD};var Vme=vt({opSnippet:13}),TK={kernelName:Ro,backendName:"webgpu",kernelFunc:Vme};function Hme(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new Cg(14,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var xK={kernelName:Lo,backendName:"webgpu",kernelFunc:Hme};function qme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return Ni(o,s,a,"prod",t)}var IK={kernelName:_o,backendName:"webgpu",kernelFunc:qme};var jme=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=KU(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},CK={kernelName:oi,backendName:"webgpu",kernelFunc:jme};var qD=vt({opSnippet:3}),kK={kernelName:go,backendName:"webgpu",kernelFunc:qD};var Xme=ct({opType:12}),SK={kernelName:$o,backendName:"webgpu",kernelFunc:Xme};var Yme=ct({opType:13}),vK={kernelName:Oo,backendName:"webgpu",kernelFunc:Yme};var jD=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Se()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Qme(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:a,halfPixelCenters:i}=n,[p,u]=a,l=s&&p>1?1:0,m=s&&u>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[i?.5:0]}],f=new jD(o.shape,p,u);return t.runWebGPUProgram(f,[o],"float32",d)}var AK={kernelName:Bo,backendName:"webgpu",kernelFunc:Qme};var XD=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Zme(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=s&&p>1?1:0,m=s&&u>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[s?.5:0]}],f=new XD(o.shape,p,u,a);return t.runWebGPUProgram(f,[o],o.dtype,d)}var wK={kernelName:si,backendName:"webgpu",kernelFunc:Zme};var YD=class{constructor(e,t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Se()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var NK={kernelName:Da,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,p=new YD(n.shape,s),[u,l]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[{type:"float32",data:[u]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),i.runWebGPUProgram(p,[n],n.dtype,m)}};var Jme=ct({opType:15,cpuKernelImpl:VU}),DK={kernelName:zo,backendName:"webgpu",kernelFunc:Jme};var QD=class{constructor(e,t,n,o,s,a,i){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.dispatchLayout=Ie(e),this.dispatch=fe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}`;let p=Qt(s.length);this.uniforms=`sliceDim : i32, strides: ${p}, size: i32,`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="",a="";this.updatesRank===1?(o="coords[0]",s="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(o="coords[0], coords[1]",s="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${o})`,p=this.type==="int32"?"atomicAdd(&(result[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${Se()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${i};
          let flatIndex = getOutputIndexFromCoords(${s});

         ${p}
        }
      }`}};function ece(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=[m/u,u];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=Le({inputs:{x:o},backend:t,attrs:{shape:[p,i]}}),f=Le({inputs:{x:s},backend:t,attrs:{shape:[p,u]}}),h=f.dtype,g=Za({backend:t,attrs:{shape:c,value:0,dtype:h}}),y=b.sizeFromShape(f.shape),T=[{type:"int32",data:[i]},{type:"int32",data:l},{type:"int32",data:[y]}],x=new QD(f.shape,i,d.shape.length,f.shape.length,l,c,h),I=t.runWebGPUProgram(x,[f,d],h,T,g),k=Le({inputs:{x:I},backend:t,attrs:{shape:a}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(I.dataId),k}var PK={kernelName:ka,backendName:"webgpu",kernelFunc:ece};var ZD=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);e=s.join(),t=a.join()}return`
      ${Se()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function tce(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new ZD(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(a,[n,o,s],Ft(o.dtype,s.dtype))}var MK={kernelName:hs,backendName:"webgpu",kernelFunc:tce};var rce=ct({opType:18}),FK={kernelName:Uo,backendName:"webgpu",kernelFunc:rce};var nce=ct({opType:16}),EK={kernelName:Go,backendName:"webgpu",kernelFunc:nce};var oce=ct({opType:17}),RK={kernelName:Sa,backendName:"webgpu",kernelFunc:oce};var JD=vt({opSnippet:2,cpuKernelImpl:QU,supportsComplex:!0}),LK={kernelName:qo,backendName:"webgpu",kernelFunc:JD};function sce(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=WD({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),p=C.expandShapeToKeepDim(i.shape,a),u=Le({inputs:{x:i},backend:t,attrs:{shape:p}}),l=JD({inputs:{a:o,b:u},backend:t}),m=LD({inputs:{x:l},backend:t}),c=Ng({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=Le({inputs:{x:c},backend:t,attrs:{shape:p}}),f=qD({inputs:{a:m,b:d},backend:t});return t.disposeData(i.dataId),t.disposeData(u.dataId),t.disposeData(l.dataId),t.disposeData(m.dataId),t.disposeData(c.dataId),t.disposeData(d.dataId),f}var _K={kernelName:Vo,backendName:"webgpu",kernelFunc:sce};var ace=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((y,T)=>y*T),p=[[0,0]];p.push(...a);for(let y=1+s.length;y<o.shape.length;++y)p.push([0,0]);let u=[],l=HD({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),m=C.getReshaped(l.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(l.shape,s,i,!1),f=Le({inputs:{x:l},backend:t,attrs:{shape:m}}),h=An({inputs:{x:f},backend:t,attrs:{perm:c}}),g=Le({inputs:{x:h},backend:t,attrs:{shape:d}});return u.push(l),u.push(f),u.push(h),u.forEach(y=>t.disposeData(y.dataId)),g},$K={kernelName:bs,backendName:"webgpu",kernelFunc:ace};var e0=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.workGroupSize=[64,1,1];this.workPerThread=4;this.size=!0;this.outputShape=a,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let p=t>1;this.shaderKey=`scatter_${n}_${o}_${p}`;let u=Qt(s.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${u},`;let l="";n===1?l="i":n===2&&(l="i, j"),this.indicesSnippet=`getIndices(${l})`;let m="";o===1?m="i":o===2&&(m="i, coords[1]"),this.updatesSnippet=`getUpdates(${m})`,this.strideString=p?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Se()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function ice(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let T=t.bufferSync(o),x=t.bufferSync(s),I=b.decodeString(t.readSync(a.dataId)[0]),k=HU(T,x,i,c,l,u,p,m,I,d);return t.makeTensorInfo(i,k.dtype,k.values)}let f=[{type:"int32",data:[u]},{type:"int32",data:[p]},{type:"int32",data:m}],h=new e0(u,p,o.shape.length,s.shape.length,m,[c,1],d),g=t.runWebGPUProgram(h,[s,o,a],s.dtype,f),y=Le({inputs:{x:g},backend:t,attrs:{shape:i}});return t.disposeData(g.dataId),y}var BK={kernelName:qu,backendName:"webgpu",kernelFunc:ice};function uce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],p=C.prepareSplitSize(o,s,i),u=o.shape.length,l=new Array(u).fill(0),m=o.shape.slice();return p.map(c=>{let d=[...m];d[i]=c;let f=Qa({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});return l[i]+=c,f})}var OK={kernelName:ys,backendName:"webgpu",kernelFunc:uce};var pce=ct({opType:19}),zK={kernelName:Wo,backendName:"webgpu",kernelFunc:pce};var GK={kernelName:ai,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new Ya(t.shape,20);return n.runWebGPUProgram(o,[t],t.dtype)}};var lce=vt({opSnippet:11}),UK={kernelName:Ho,backendName:"webgpu",kernelFunc:lce};var t0=class{constructor(e){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Qt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Se()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function mce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=Le({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=Tt.computeOutShape(T,x,I),M=Qa({inputs:{x:o},backend:t,attrs:{begin:T,size:w}});k=Le({inputs:{x:M},backend:t,attrs:{shape:f}}),t.disposeData(M.dataId)}else if(t.shouldExecuteOnCPU([o])){let M=t.readSync(o.dataId),F=xe(o.shape,o.dtype,M),E=XU(d,F,I,T);k=t.makeTensorInfo(f,o.dtype,E.values)}else{let M=new t0(d),F=[{type:"int32",data:T},{type:"int32",data:I}],E=t.runWebGPUProgram(M,[o],o.dtype,F);k=Le({inputs:{x:E},backend:t,attrs:{shape:f}}),t.disposeData(E.dataId)}return k}var WK={kernelName:va,backendName:"webgpu",kernelFunc:mce};function cce(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=e,c=t.readSync(l.dataId),d=t.readSync(m.dataId),[f,h]=YU(c,d,o,s,a,i,p,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var KK={kernelName:ju,backendName:"webgpu",kernelFunc:cce};var dce=ct({opType:21}),VK={kernelName:jo,backendName:"webgpu",kernelFunc:dce};var r0=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=fce(this.rank,"uniforms.");return`
      ${Se()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function fce(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function hce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let p=t.readSync(o.dataId),u=o.dtype==="string"?p.map(c=>b.decodeString(c)):p,l=xe(o.shape,o.dtype,u),m=ZU(l,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new r0(o.shape,s);return t.runWebGPUProgram(a,[o],o.dtype)}var HK={kernelName:Dn,backendName:"webgpu",kernelFunc:hce};var n0=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Se()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},o0=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Se()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function td(r,e){e!==null&&r.disposeData(e.dataId)}function qK(r){let e=1;for(;e<r;)e*=2;return e}function gce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=o.shape,p=i[i.length-1];if(t.shouldExecuteOnCPU([o])){let k=t.readSync(o.dataId),[w,M]=JU(k,i,o.dtype,s,a);return[t.makeTensorInfo(w.shape,w.dtype,w.values),t.makeTensorInfo(M.shape,M.dtype,M.values)]}if(s===0)return i[i.length-1]=0,[t.makeTensorInfo(i,o.dtype,[]),t.makeTensorInfo(i,"int32",[])];if(p===1)return[o,Za({attrs:{shape:i,dtype:"int32",value:0},backend:t})];let l=b.sizeFromShape(i)/p,m=Le({inputs:{x:o},attrs:{shape:[l,p]},backend:t}),c=qK(s),d=qK(p),f=null,h=()=>f===null?[m,m]:[m,f],g=(k,w,M)=>{let F=h(),E=new n0(M),G=[{type:"int32",data:[p]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[w]}],W=f;f=t.runWebGPUProgram(E,F,"int32",G),td(t,W)};for(let k=1;k<c;k*=2){let w=k*2;for(let M=k;M>=1;M/=2)g(w,M,[l,d])}for(let k=d;k>c;k/=2){let w=h(),M=new o0([l,k/2]),E=[{type:"int32",data:[p]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],$=f;f=t.runWebGPUProgram(M,w,"int32",E),td(t,$);let G=c/2,W=G*2;for(let V=G;V>=1;V/=2)g(W,V,f.shape)}let y=f;f=Qa({inputs:{x:f},backend:t,attrs:{begin:0,size:[l,s]}}),td(t,y);let T=UD({inputs:{x:m,indices:f},backend:t,attrs:{axis:1,batchDims:1}});td(t,m);let x=i.slice(0,-1);x.push(s),y=f,f=Le({inputs:{x:f},attrs:{shape:x},backend:t}),td(t,y);let I=T;return T=Le({inputs:{x:T},attrs:{shape:x},backend:t}),td(t,I),[T,f]}var jK={kernelName:wa,backendName:"webgpu",kernelFunc:gce};var s0=class{constructor(e){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Se()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function bce(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],y=new s0(g),T=a==="nearest"?1:2,x;switch(i){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let I=[{type:"int32",data:[T]},{type:"int32",data:[x]},{type:"float32",data:[p]}];return t.runWebGPUProgram(y,[o,s],"float32",I)}var XK={kernelName:Na,backendName:"webgpu",kernelFunc:bce};function yce(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,p=o.shape[s],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(u[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(p);for(let h=0;h<f.length;h++){c[s]=h;let g=Qa({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),y=Le({inputs:{x:g},backend:t,attrs:{shape:u}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeData(h.dataId)),f}var YK={kernelName:Ts,backendName:"webgpu",kernelFunc:yce};var Tce=[xU,tW,rW,nW,sW,aW,iW,uW,lW,fW,hW,gW,CU,yW,xW,IW,CW,kW,SW,wW,NW,DW,PW,EW,RW,LW,_W,$W,BW,OW,zW,KW,GW,UW,VW,HW,qW,jW,XW,YW,QW,IU,bW,ZW,JW,eK,tK,rK,nK,oK,sK,aK,iK,uK,pK,lK,MW,mK,cK,dK,mW,gK,bK,yK,TK,xK,IK,CK,cW,kK,SK,vK,TU,AK,wK,NK,DK,PK,MK,FK,EK,RK,pW,WK,KK,_K,$K,BK,OK,zK,GK,UK,LK,FW,VK,HK,jK,XK,oW,YK,fK];for(let r of Tce)Zi(r);var a0=class{constructor(e){this.device=e;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let o=QK(e,t);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(a),a}this.numBytesAllocated+=e;let s=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(o).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let o=QK(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function QK(r,e){return`${r}_${e}`}var i0=class{constructor(e){this.device=e;this.numUsedTextures=0;this.numFreeTextures=0;this.freeTextures=new Map;this.usedTextures=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireTexture(e,t,n,o){let s=JK(n),a=e*t*s,i=ZK(e,t,n,o);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let u=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(u),u}this.numBytesAllocated+=a;let p=this.device.createTexture({size:[e,t],format:n,usage:o});return this.usedTextures.get(i).push(p),p}releaseTexture(e,t,n,o,s){if(this.freeTextures.size===0)return;let a=ZK(t,n,o,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),p=i.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(p,1);let u=JK(o),l=t*n*u;this.numBytesUsed-=l}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function ZK(r,e,t,n){return`${r}_${e}_${t}_${n}`}function JK(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}var eV=(r,e,t,n,o)=>{let s=[n,...t];return o&&s.push(o),r.createBindGroup({layout:e,entries:s.map((a,i)=>({binding:i,resource:a}))})},u0=(r,e,t,n,o,s=!1)=>{let a={dtype:o.dtype,shape:o.shape},i=yU(n,a,e,s),p=r.createShaderModule({code:i,label:e.constructor.name});return r.createComputePipeline({layout:t,compute:{module:p,entryPoint:"main"},label:e.constructor.name})};function p0(r,e,t=[],n="",o=""){let s=r.dispatch[1]===1&&r.dispatch[2]===1?"flatDispatch":"";return r.shaderKey+"_"+(r.workGroupSize?r.workGroupSize.join(","):"")+e.map(i=>i.length).join(",")+t.join(",")+r.variableNames.join(",")+n+o+s}var Ice=B().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),tV=(r,e)=>{let t=r.limits.maxComputeWorkgroupsPerDimension,n=e.dispatchLayout,o=e.dispatch;if(o.every(a=>a<=t))return o;b.assert(o[0]>t&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(o[0]));return s>t?(s=Math.ceil(Math.cbrt(o[0])),b.assert(s<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},l0=class extends ss{constructor(e,t=!1){super();this.commandQueueOwnedIds=new WeakSet;this.tensorDisposalQueue=[];this.uniformDisposalQueue=[];this.stagingDisposalQueue=[];this.textureDisposalQueue=[];this.disposed=!1;this.uploadWaitMs=0;this.downloadWaitMs=0;this.dispatchNumberInEncoder=0;this.fromPixelTextureLayout=null;this.fromPixelImportTextureLayout=null;if(!xg())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new a0(this.device),this.textureManager=new i0(this.device),this.tensorMap=new Ja(this,Fn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return l0.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.textureDisposalQueue.forEach(e=>this.textureManager.releaseTexture(e.texture,e.width,e.height,e.format,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.textureDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:o}=this.tensorMap.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}getTextureManager(){return this.textureManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()},s=b.sizeFromShape(t)*Tg(n);return this.tensorMap.set(o,{dtype:n,shape:t,values:e,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=b.sizeFromShape(n)*Tg(o);this.tensorMap.set(e,{dtype:o,shape:n,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(b.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),o}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=s[0],i=s[1];o=C.mergeRealAndImagArrays(a,i)}else{let s=t.values!=null?t.values:await this.getBufferData(t.bufferInfo.buffer,t.bufferInfo.byteSize);o=iD(s,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:o,shape:s,bufferInfo:a}=t;if(o==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a.buffer==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let i=b.sizeFromShape(s)*Tg(o),p=this.acquireBuffer(i);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,p,0,i),this.submitQueue();let u=this.makeTensorInfo(s,o),l=Fn().makeTensorFromTensorInfo(u),m=this.tensorMap.get(u.dataId);return m.bufferInfo.buffer=p,{tensorRef:l,buffer:p,bufSize:i}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>b.decodeString(o));return xe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,t)}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},p=await Promise.all(s);return i.kernelMs=b.sum(p),i.getExtraProfileInfo=()=>p.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),o=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(o).set(t.values):new Float32Array(o).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let s={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(s)}}makeUniforms(e){let t=0,n=0,o=[];e.forEach(p=>{p.data.length===0&&(p.data=[1]);let u;switch(p.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:b.assert(!1,()=>`Unsupported ${p.data.length}D shape`)}(n===5||n===6)&&(u=16),t=Math.ceil(t/u)*u,n=p.data.length,o.push(t),t+=p.data.length*4});let s=new ArrayBuffer(t);e.forEach((p,u)=>{let l=o[u];p.type==="int32"?new Int32Array(s,l,p.data.length).set(p.data):p.type==="uint32"?new Uint32Array(s,l,p.data.length).set(p.data):new Float32Array(s,l,p.data.length).set(p.data)});let a=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(a,0,s,0,t);let i={byteSize:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:a};return this.uniformDisposalQueue.push(i),{offset:0,size:t,buffer:a}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let s=0;s<e;s++)t.push({binding:s+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),o=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,o,s){if(!s){if(s=this.makeTensorInfo(e.outputShape,n),b.sizeFromShape(s.shape)===0){let M=this.tensorMap.get(s.dataId);return M.values=b.getTypedArrayFromDType(s.dtype,0),s}this.uploadToGPU(s.dataId)}e.dispatch=tV(this.device,e);let a=[{type:"float32",data:[NaN]}],i=t.concat(s).map(M=>M.shape),p="int32";i.map(M=>{a.push({type:p,data:M})});let u=b.computeStrides(s.shape);if(a.push({type:p,data:u}),e.size){let M=b.sizeFromShape(e.outputShape);a.push({type:p,data:[e.isVec4?M/4:M]})}o&&(a=[...a,...o]);let l=this.makeUniforms(a),m=t.map((M,F)=>{if(M.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(M.dataId),{dtype:this.tensorMap.get(M.dataId).dtype,shape:M.shape,name:e.variableNames[F]}}),c=m.map(M=>M.dtype).concat(s.dtype),d=m.map(M=>C.getBroadcastDims(M.shape,s.shape)),f=m.map(M=>b.arraysEqual(M.shape,s.shape)).join("_"),h=d.map(M=>M.join("_")).join(";"),g=p0(e,i,c,h,f),{bindGroupLayout:y,pipelineLayout:T}=this.getCachedOrCreateLayout(e.variableNames.length),x=this.getAndSavePipeline(g,()=>u0(this.device,e,T,m,s)),I=this.activeTimers!=null,k=eV(this.device,y,t.map(M=>this.tensorToBinding(M)),this.tensorToBinding(s),l);this.ensureCommandEncoderReady();let w=this.getComputePass();return I&&this.supportTimeQuery&&w.writeTimestamp(this.querySet,0),w.setPipeline(x),w.setBindGroup(0,k),w.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),I&&this.supportTimeQuery&&w.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(M=>{this.commandQueueOwnedIds.add(M.dataId)}),this.commandQueueOwnedIds.add(s.dataId),B().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),I&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}getFromPixelTextureLayout(e){return e?(this.fromPixelImportTextureLayout===null&&(this.fromPixelImportTextureLayout=this.createFromPixelTextureLayout(!0)),this.fromPixelImportTextureLayout):(this.fromPixelTextureLayout===null&&(this.fromPixelTextureLayout=this.createFromPixelTextureLayout(!1)),this.fromPixelTextureLayout)}createFromPixelTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),e?t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}):t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=this.device.createBindGroupLayout({entries:t}),o=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}copyExternalImageToTexture(e,t){let n=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,o="rgba8unorm",s=this.textureManager.acquireTexture(t[1],t[0],o,n),a=s.createView();this.queue.copyExternalImageToTexture({source:e},{texture:s},[t[1],t[0]]);let i={width:t[1],height:t[0],format:o,usage:n,texture:s};return this.textureDisposalQueue.push(i),a}runFromPixelsProgram(e,t,n,o,s){e.dispatch=tV(this.device,e);let a=this.makeTensorInfo(t,"int32");if(b.sizeFromShape(a.shape)===0){let g=this.tensorMap.get(a.dataId);return g.values=b.getTypedArrayFromDType(a.dtype,0),a}this.uploadToGPU(a.dataId);let i=p0(e,[a.shape]),p=this.getFromPixelTextureLayout(o),u=this.getAndSavePipeline(i,()=>u0(this.device,e,p.pipelineLayout,[],a,!0)),l;if(o){let g={source:s};l=this.device.importExternalTexture(g)}else l=this.copyExternalImageToTexture(s,a.shape);let m=this.tensorToBinding(a),c=this.makeUniforms(n),d=this.device.createBindGroup({layout:p.bindGroupLayout,entries:[{binding:0,resource:{buffer:m.buffer}},{binding:1,resource:l},{binding:2,resource:{buffer:c.buffer}}]});this.ensureCommandEncoderReady();let f=this.getComputePass(),h=this.activeTimers!=null;return h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,0),f.setPipeline(u),f.setBindGroup(0,d),f.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(a.dataId),this.dispatchNumberInEncoder++,B().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),h&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=Ice){return B().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&b.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},rd=l0;rd.nextDataId=0;var rV={};Xe(rV,{WebGPUBackend:()=>rd,webgpu_util:()=>px});xg()&&tp("webgpu",async()=>{B().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:B().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t=e.limits,n={},o=e.features.has("timestamp-query");n.requiredLimits={maxComputeWorkgroupStorageSize:t.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.maxComputeWorkgroupsPerDimension},o?n.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let s=await e.requestDevice(n);return new rd(s,o)},3);var et=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(et||{}),Wl=(i=>(i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu",i))(Wl||{});var nV;function Cce(r){nV=r.wasm.cwrap(Cs,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function kce(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=0;if(a!=null){let F=t.dataIdMap.get(a.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);f=F.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=Wl[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let y=p?o.shape[2]:o.shape[1],T=u?s.shape[1]:s.shape[2],x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),I=t.makeOutput([...x,y,T],o.dtype),k=t.dataIdMap.get(I.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer),M=new Uint8Array(new Int32Array(s.shape).buffer);return nV(c,w,o.shape.length,d,M,s.shape.length,p,u,g,f,h,m||0,k),I}var oV={kernelName:Cs,backendName:"wasm",setupFunc:Cce,kernelFunc:kce};function dt(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,p=a.dataIdMap.get(i.dataId).id,u=a.makeOutput(i.shape,e||i.dtype),l=a.dataIdMap.get(u.dataId).id;return b.sizeFromShape(u.shape)===0||t(p,et[i.dtype],l),u}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var sV=dt(as);function At(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:p}=a,{a:u,b:l}=p,m=i.dataIdMap.get(u.dataId).id,c=i.dataIdMap.get(l.dataId).id,d=t??u.dtype,f=C.assertAndGetBroadcastShape(u.shape,l.shape),h=i.makeOutput(f,d);if(b.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(l.shape).buffer),T=i.dataIdMap.get(h.dataId).id;return(()=>n(m,g,u.shape.length,c,y,l.shape.length,et[u.dtype],T))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var Sce=!0,aV=At(Nn,Sce);var iV;function vce(r){iV=r.wasm.cwrap(oo,null,["array","number","number","number"])}function Ace(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(b.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return iV(s,o.length,et[n.dtype],a),n}var uV={kernelName:oo,backendName:"wasm",setupFunc:vce,kernelFunc:Ace};function Kl(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var pV={kernelName:Vn,backendName:"wasm",kernelFunc:Kl};var lV;function wce(r){lV=r.wasm.cwrap(Pn,null,["number","array","number","number","number","array","number"])}function rs(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=Dce(e.x.shape,n.perm),a=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(a=!1);let i=Nce(e.x.shape,n.perm),p={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let f=Kl({inputs:e,backend:t});return f.shape=i,f}let u=t.makeOutput(i,p.dtype),l=t.dataIdMap.get(p.dataId).id,m=t.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(p.shape).buffer);return lV(l,d,p.shape.length,et[p.dtype],m,c,s.length),u}function Nce(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function Dce(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var mV={kernelName:Pn,backendName:"wasm",kernelFunc:rs,setupFunc:wce};function wn(r,e,t){let n=r.shape,o=r.shape.length,s=b.parseAxisParam(e,n),a=s,i=C.getAxesPermutation(a,o),p=null,u=!1;if(i!=null){let l=new Array(o);for(let d=0;d<l.length;d++)l[d]=n[i[d]];a=C.getInnerMostAxes(a.length,o),p=rs({inputs:{x:r},attrs:{perm:i},backend:t});let m=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(p.dataId).id!==m&&(u=!0)}return{transposed:p,originalAxes:s,axes:a,inputWasTransposed:u}}var cV;function Pce(r){cV=r.wasm.cwrap(Fi,null,["number, number, number"])}function Mce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,p=e.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=wn(a,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;u=l,p=x}let f=u.shape.length;C.assertAxesAreInnerMostDims("all",m,f);let[h,g]=C.computeOutAndReduceShapes(u.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;cV(p,y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var dV={kernelName:Fi,backendName:"wasm",setupFunc:Pce,kernelFunc:Mce};var fV;function Fce(r){fV=r.wasm.cwrap(Ei,null,["number, number, number"])}function Ece(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,p=e.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=wn(a,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;u=l,p=x}let f=u.shape.length;C.assertAxesAreInnerMostDims("any",m,f);let[h,g]=C.computeOutAndReduceShapes(u.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;fV(p,y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var hV={kernelName:Ei,backendName:"wasm",setupFunc:Fce,kernelFunc:Ece};var gV;function Rce(r){gV=r.wasm.cwrap(so,null,["number","number","number","number","number"])}function Lce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,p=s,{transposed:u,axes:l,inputWasTransposed:m}=wn(s,o,e);if(m){let y=e.dataIdMap.get(u.dataId).id;y!==a&&(p=u,i=y)}let c=p.shape.slice(0,-1),d=e.makeOutput(c,"int32"),f=e.dataIdMap.get(d.dataId).id,h=b.sizeFromShape(d.shape),g=p.shape[l[0]];return gV(i,et[p.dtype],h,g,f),m&&e.disposeData(u.dataId),d}var bV={kernelName:so,backendName:"wasm",kernelFunc:Lce,setupFunc:Rce};var yV;function _ce(r){yV=r.wasm.cwrap(ao,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $ce(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=t,l=C.computePool2DInfo(o.shape,a,i,1,p,u),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,y=l.strideHeight,T=l.strideWidth,x=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let I=n.makeOutput(l.outShape,"float32"),k=n.dataIdMap.get(I.dataId).id;return yV(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,T,x,k),I}var TV={kernelName:ao,backendName:"wasm",setupFunc:_ce,kernelFunc:$ce};function fr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s);return b.assert(s===b.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var xV={kernelName:fs,backendName:"wasm",kernelFunc:fr};var IV;function Bce(r){IV=r.wasm.cwrap(io,null,["number","array","number","number","array","number","number","number","number"])}function Oce(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let p=o.shape.length,u=s.shape.length,l=a?o.shape[p-2]:o.shape[p-1],m=i?s.shape[u-1]:s.shape[u-2],c=a?o.shape[p-1]:o.shape[p-2],d=i?s.shape[u-2]:s.shape[u-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,l,c]:[g,c,l],k=i?[y,d,m]:[y,m,d],w=fr({inputs:{x:o},backend:t,attrs:{shape:I}}),M=fr({inputs:{x:s},backend:t,attrs:{shape:k}}),F=t.dataIdMap.get(w.dataId).id,E=t.dataIdMap.get(M.dataId).id,$=a?w.shape[2]:w.shape[1],G=i?M.shape[1]:M.shape[2],W=Math.max(g,y),V=t.makeOutput([W,$,G],w.dtype),q=t.dataIdMap.get(V.dataId).id,j=new Uint8Array(new Int32Array(w.shape).buffer),Y=new Uint8Array(new Int32Array(M.shape).buffer);return IV(F,j,w.shape.length,E,Y,M.shape.length,a,i,q),t.disposeData(w.dataId),t.disposeData(M.dataId),V.shape=x,V}var CV={kernelName:io,backendName:"wasm",setupFunc:Bce,kernelFunc:Oce};function Xs(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=Tt.parseSliceParams(e,t,n),i=Tt.isSliceContinous(e.shape,s,a),p=o.readSync(e.dataId),u=o.makeOutput(a,e.dtype),l=b.computeStrides(e.shape),m=o.dataIdMap.get(u.dataId);if(i){let f=Tt.computeFlatOffset(s,l);return e.dtype==="string"?m.stringBytes=p.slice(f,f+b.sizeFromShape(a)):o.typedArrayFromHeap(u).set(p.subarray(f,f+b.sizeFromShape(a))),u}if(e.dtype==="string"){let f=Al(p,s,a,e.shape,e.dtype);return m.stringBytes=f,u}let c=o.typedArrayFromHeap(u),d=e.shape.length;if(d===2)zce(p,l[0],c,s,a);else if(d===3)Gce(p,l[0],l[1],c,s,a);else if(d===4)Uce(p,l[0],l[1],l[2],c,s,a);else{let f=Al(p,s,a,e.shape,e.dtype);c.set(f)}return u}function zce(r,e,t,n,o){let s=0,a=n[0],i=n[1],p=a+o[0];for(let u=a;u<p;u++){let l=u*e+i;t.set(r.subarray(l,l+o[1]),s),s+=o[1]}}function Gce(r,e,t,n,o,s){let a=0,i=o[0],p=o[1],u=o[2],l=i+s[0],m=p+s[1];for(let c=i;c<l;c++)for(let d=p;d<m;d++){let f=c*e+d*t+u;n.set(r.subarray(f,f+s[2]),a),a+=s[2]}}function Uce(r,e,t,n,o,s,a){let i=0,p=s[0],u=s[1],l=s[2],m=p+a[0],c=u+a[1],d=l+a[2],f=s[3];for(let h=p;h<m;h++)for(let g=u;g<c;g++)for(let y=l;y<d;y++){let T=h*e+g*t+y*n+f;o.set(r.subarray(T,T+a[3]),i),i+=a[3]}}var kV={kernelName:gs,backendName:"wasm",kernelFunc:Xs};function Wce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n,i=s.reduce((y,T)=>y*T),p=C.getReshaped(o.shape,s,i),u=C.getPermuted(p.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=fr({inputs:{x:o},backend:t,attrs:{shape:p}}),f=rs({inputs:{x:d},backend:t,attrs:{perm:u}}),h=fr({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Xs({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(d.dataId),g}var SV={kernelName:is,backendName:"wasm",kernelFunc:Wce};function Du(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var vV={kernelName:Wn,backendName:"wasm",kernelFunc:Du};var AV=dt(uo);var wV;function Kce(r){wV=r.wasm.cwrap(Kn,null,["number","number","number","number"])}function Vce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,p=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(p.dataId).id;return wV(i,s,a,u),p}var NV={kernelName:Kn,backendName:"wasm",setupFunc:Kce,kernelFunc:Vce};function m0(r){let{inputs:e,backend:t}=r,n=b.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=C.computeOutShape(e.map(d=>d.shape),n),s=e.filter(d=>b.sizeFromShape(d.shape)>0);if(s.length===1)return Kl({inputs:{x:s[0]},backend:t});let a=t.makeOutput(o,e[0].dtype);if(b.sizeFromShape(o)===0)return a;let i=s.map(d=>d.shape);if(C.assertParamsConsistent(i,n),s[0].dtype==="string"){let d=s.map(x=>{let I=b.sizeFromShape(x.shape.slice(n));return fr({inputs:{x},backend:t,attrs:{shape:[-1,I]}})}),f=d.map(x=>({vals:t.readSync(x.dataId),shape:x.shape}));o=C.computeOutShape(d.map(x=>x.shape),1);let h=d[0].shape[0]===1,g=kl(f,o,e[0].dtype,h),y=C.computeOutShape(s.map(x=>x.shape),n);a.shape=y;let T=t.dataIdMap.get(a.dataId);return T.stringBytes=C.fromStringArrayToUint8(g),d.forEach(x=>t.disposeData(x.dataId)),a}let p=b.sizeFromShape(s[0].shape.slice(0,n)),u=0,l=s.map(d=>{let f=b.sizeFromShape(d.shape.slice(n));return u+=f,f}),m=s.map(d=>t.typedArrayFromHeap(d)),c=t.typedArrayFromHeap(a);for(let d=0;d<p;d++){let f=d*u;for(let h=0;h<m.length;h++){let g=l[h],y=d*g,T=m[h].subarray(y,y+g);c.set(T,f),f+=g}}return a}var DV={kernelName:us,backendName:"wasm",kernelFunc:m0};var PV;function Hce(r){PV=r.wasm.cwrap(po,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qce(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:p,dilations:u,pad:l,dimRoundingMode:m,dataFormat:c}=t,d=C.convertConv2DDataFormat(c),f=C.computeConv2DInfo(o.shape,s.shape,p,u,l,m,!1,d),h=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,T=f.padInfo.right,x=f.padInfo.bottom,I=f.padInfo.left,k=f.dilationHeight,w=f.dilationWidth,M=f.strideHeight,F=f.strideWidth,E=f.inChannels,$=f.outChannels,G=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let W=n.makeOutput(f.outShape,"float32"),V=n.dataIdMap.get(W.dataId).id;return PV(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,y,T,x,I,G,k,w,M,F,E,$,V),W}var MV={kernelName:po,backendName:"wasm",setupFunc:Hce,kernelFunc:qce};var FV;function jce(r){FV=r.wasm.cwrap(lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Xce(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,inputShape:l}=n,m=1,c=C.convertConv2DDataFormat(p),d=C.computeConv2DInfo(l,s.shape,a,m,i,u,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:y,inHeight:T,inWidth:x,outChannels:I,outHeight:k,outWidth:w,strideHeight:M,strideWidth:F}=d,E=h-1-d.padInfo.top,$=g-1-d.padInfo.left,G=d.dataFormat==="channelsLast",W=b.computeStrides(d.inShape),V=b.computeStrides(o.shape),[q,j,Y]=b.computeStrides(s.shape),te=W[0],H=G?W[1]:W[2],oe=G?W[2]:1,se=G?1:W[1],ae=V[0],ce=G?V[1]:V[2],ue=G?V[2]:1,ye=G?1:V[1],he=e.makeOutput(d.inShape,"float32"),Ce=e.dataIdMap.get(he.dataId).id,we=e.dataIdMap.get(o.dataId).id,Ee=e.dataIdMap.get(s.dataId).id;return FV(we,Ee,f,h,g,T,x,y,k,w,I,M,F,E,$,q,j,Y,te,H,oe,se,ae,ce,ue,ye,Ce),he}var EV={kernelName:lo,backendName:"wasm",setupFunc:jce,kernelFunc:Xce};var RV=dt(mo);var LV=dt(co);var _V=(t=>(t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest",t))(_V||{}),$V;function Yce(r){$V=r.wasm.cwrap(ia,null,["number","number","number","number","array","number","number","number","number","number"])}function Qce(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:p,boxInd:u}=t,l=p.shape[0],[m,c]=a,d=[l,m,c,i.shape[3]],f=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=Du({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(h.dataId));let g=f.id,y=e.dataIdMap.get(p.dataId).id,T=e.dataIdMap.get(u.dataId).id,x=e.makeOutput(d,"float32"),I=e.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return $V(g,y,T,l,k,m,c,_V[o],s,I),h!=null&&e.disposeData(h.dataId),x}var BV={kernelName:ia,backendName:"wasm",setupFunc:Yce,kernelFunc:Qce};var OV;function Zce(r){OV=r.wasm.cwrap(aa,null,["number","number","number","number","number","number"])}function Jce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,p=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let u=C.getAxesPermutation([s],p),l=o;u!==null&&(l=rs({inputs:{x:o},attrs:{perm:u},backend:t}));let m=C.getInnerMostAxes(1,p)[0];C.assertAxesAreInnerMostDims("cumprod",[m],p);let c=t.makeOutput(l.shape,l.dtype),d=l.shape[m],f=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(c.dataId).id;OV(f,a?1:0,i?1:0,d,h,et[o.dtype]);let g=c;if(u!==null){let y=C.getUndoAxesPermutation(u);g=rs({inputs:{x:c},attrs:{perm:y},backend:t}),t.disposeData(l.dataId),t.disposeData(c.dataId)}return g}var zV={kernelName:aa,backendName:"wasm",setupFunc:Zce,kernelFunc:Jce};var GV;function ede(r){GV=r.wasm.cwrap(fo,null,["number","number","number","number","number","number"])}function tde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,p=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let u=C.getAxesPermutation([s],p),l=o;u!==null&&(l=rs({inputs:{x:o},attrs:{perm:u},backend:t}));let m=C.getInnerMostAxes(1,p)[0];C.assertAxesAreInnerMostDims("cumsum",[m],p);let c=t.makeOutput(l.shape,l.dtype),d=l.shape[m],f=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(c.dataId).id;GV(f,a?1:0,i?1:0,d,h,et[o.dtype]);let g=c;if(u!==null){let y=C.getUndoAxesPermutation(u);g=rs({inputs:{x:c},attrs:{perm:y},backend:t}),t.disposeData(l.dataId),t.disposeData(c.dataId)}return g}var UV={kernelName:fo,backendName:"wasm",setupFunc:ede,kernelFunc:tde};var WV;function rde(r){WV=r.wasm.cwrap(ua,null,["number","number","number","array","number","array","array","number","number"])}function nde(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=e.makeOutput(f,"float32"),y=e.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),I=new Uint8Array(new Int32Array(b.computeStrides(f)).buffer),k=e.dataIdMap.get(h.dataId).id;return WV(y,s,a==="NHWC"?1:0,T,o.shape.length-1,x,I,f.length,k),h}var KV={kernelName:ua,backendName:"wasm",setupFunc:rde,kernelFunc:nde};var VV;function ode(r){VV=r.wasm.cwrap(ho,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:p,dilations:u,pad:l,dimRoundingMode:m}=t,c=u??[1,1],d=C.computeConv2DInfo(o.shape,s.shape,p,c,l,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,y=d.padInfo.right,T=d.padInfo.bottom,x=d.padInfo.left,I=d.dilationHeight,k=d.dilationWidth,w=d.strideHeight,M=d.strideWidth,F=d.inChannels,E=d.outChannels,$=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(d.outShape,"float32"),W=n.dataIdMap.get(G.dataId).id;return VV(a,o.shape[0],o.shape[1],o.shape[2],i,f,h,g,y,T,x,$,I,k,w,M,F,E,W),G}var HV={kernelName:ho,backendName:"wasm",setupFunc:ode,kernelFunc:sde};var qV=dt(bo);var ade=!1,jV=At(pa,ade,"bool");var XV=dt(yo,"float32");function gx(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),p=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+s+1),i.splice(p,0,1),fr({inputs:{x:o},backend:n,attrs:{shape:i}})}var YV={kernelName:ps,backendName:"wasm",kernelFunc:gx};function c0(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var QV={kernelName:ni,backendName:"wasm",kernelFunc:c0};var ZV;function ide(r){ZV=r.wasm.cwrap(ma,null,["number","number","number","number","number","number"])}function ude(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,p,u,l]=n.shape;return ZV(s,i,p,u,l,a),o}var JV={kernelName:ma,backendName:"wasm",kernelFunc:ude,setupFunc:ide};var e4=dt(To);var pde=!1,t4=At(xo,pde);var r4;function lde(r){r4=r.wasm.cwrap(Io,null,["number","number","number","number","number","number","number"])}function mde(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:p,scale:u}=t,l=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(a.dataId).id,c=e.dataIdMap.get(i.dataId).id,d=p!=null?e.dataIdMap.get(p.dataId).id:0,f=u!=null?e.dataIdMap.get(u.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(b.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return r4(l,m,c,d,f,o,g),h}var n4={kernelName:Io,backendName:"wasm",setupFunc:lde,kernelFunc:mde};var o4;function cde(r){o4=r.wasm.cwrap(ks,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function dde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,p,l,u,c),g=Wl[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let ue=n.dataIdMap.get(a.dataId);if(ue.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ue.shape}) does not match the number of output channels (${x})`);I=ue.id}let k=h.filterHeight,w=h.filterWidth,M=h.padInfo.top,F=h.padInfo.right,E=h.padInfo.bottom,$=h.padInfo.left,G=h.dilationHeight,W=h.dilationWidth,V=h.strideHeight,q=h.strideWidth,j=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,te=h.batchSize,H=h.inHeight,oe=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,ce=i==null?0:n.dataIdMap.get(i.dataId).id;return o4(y,te,H,oe,T,k,w,I,M,F,E,$,Y,G,W,V,q,j,x,g,ce,f||0,ae),se}var s4={kernelName:ks,backendName:"wasm",setupFunc:cde,kernelFunc:dde};var a4;function fde(r){a4=r.wasm.cwrap(Ss,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function hde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,p,l,u,c,!0),g=Wl[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let ue=n.dataIdMap.get(a.dataId);if(ue.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ue.shape}) does not match the number of output channels (${x})`);I=ue.id}let k=h.filterHeight,w=h.filterWidth,M=h.padInfo.top,F=h.padInfo.right,E=h.padInfo.bottom,$=h.padInfo.left,G=h.dilationHeight,W=h.dilationWidth,V=h.strideHeight,q=h.strideWidth,j=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,te=h.batchSize,H=h.inHeight,oe=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,ce=i==null?0:n.dataIdMap.get(i.dataId).id;return a4(y,te,H,oe,T,k,w,I,M,F,E,$,Y,G,W,V,q,j,x,g,ce,f||0,ae),se}var i4={kernelName:Ss,backendName:"wasm",setupFunc:fde,kernelFunc:hde};var u4;function gde(r){u4=r.wasm.cwrap(ca,null,["number","number","number","number","number","number","array","number"])}function bde(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,p]=Eb.prepareAndValidate(n,o),u=e.makeOutput(s,n.dtype);if(a===0)return u;let l=o.shape,m=l[l.length-1],d=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),y=e.dataIdMap.get(u.dataId).id;return u4(d,et[n.dtype],h,a,m,i,g,y),u}var p4={kernelName:ca,backendName:"wasm",setupFunc:gde,kernelFunc:bde};var l4;function yde(r){l4=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Tde(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,p=b.parseAxisParam(a,o.shape)[0],u=e.readSync(s.dataId),l=o.shape[p];for(let E=0;E<u.length;++E){let $=u[E];b.assert($<=l-1&&$>=0,()=>`GatherV2: the index value ${$} is not in [0, ${l-1}]`)}let m=C.segment_util.collectGatherOpShapeInfo(o,s,p,i),c=fr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:e}),d=b.sizeFromShape(s.shape),f=fr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:e}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=e.makeOutput(h,o.dtype);if(b.sizeFromShape(o.shape)===0)return g;let y=c.shape.length-1,x=e.dataIdMap.get(c.dataId).id,k=e.dataIdMap.get(f.dataId).id,w=e.dataIdMap.get(g.dataId).id,M=new Uint8Array(new Int32Array(b.computeStrides(c.shape)).buffer),F=new Uint8Array(new Int32Array(b.computeStrides(h)).buffer);return l4(x,et[o.dtype],M,y,k,m.batchSize,F,w),e.disposeData(c.dataId),e.disposeData(f.dataId),g.shape=m.outputShape,g}var m4={kernelName:ls,backendName:"wasm",setupFunc:yde,kernelFunc:Tde};var xde=!1,c4=At(da,xde,"bool");var Ide=!1,d4=At(Co,Ide,"bool");var f4;function Cde(r){f4=r.wasm.cwrap(ko,null,["number","number","number","number"])}function kde(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(b.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;f4(o,et[e.dtype],t,a)}return s}var h4={kernelName:ko,backendName:"wasm",setupFunc:Cde,kernelFunc:kde};var Sde=!1,g4=At(fa,Sde,"bool");var vde=!1,b4=At(ha,vde,"bool");var y4=dt(So);var Ade=!1,T4=At(ga,Ade,"bool");var x4;function wde(r){x4=r.wasm.cwrap(vo,null,["number","number","number","number"])}function Nde(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,p=e.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=wn(a,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;u=l,p=x}let f=u.shape.length;C.assertAxesAreInnerMostDims("max",m,f);let[h,g]=C.computeOutAndReduceShapes(u.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;x4(p,et[a.dtype],y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var I4={kernelName:vo,backendName:"wasm",setupFunc:wde,kernelFunc:Nde};var Dde=!1,C4=At(Ao,Dde);var k4;function Pde(r){k4=r.wasm.cwrap(wo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Mde(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;b.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=t,l=C.computePool2DInfo(o.shape,a,i,1,p,u),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,y=l.dilationHeight,T=l.dilationWidth,x=l.strideHeight,I=l.strideWidth,k=l.inChannels,w=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let M=n.makeOutput(l.outShape,"float32"),F=n.dataIdMap.get(M.dataId).id;return k4(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,T,x,I,k,w,F),M}var S4={kernelName:wo,backendName:"wasm",setupFunc:Pde,kernelFunc:Mde};var v4;function Fde(r){v4=r.wasm.cwrap(No,null,["number, number, number"])}function Ede(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=wn(a,o,e),f=m;if(d){let I=e.dataIdMap.get(l.dataId).id;I!==i&&(u=l,p=I,f=C.getInnerMostAxes(f.length,u.shape.length))}C.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[h,g]=C.computeOutAndReduceShapes(u.shape,f),y=b.sizeFromShape(g),T=u;u.dtype!=="float32"&&(T=Du({backend:e,inputs:{x:u},attrs:{dtype:"float32"}}),p=e.dataIdMap.get(T.dataId).id);let x=e.makeOutput(h,"float32");if(b.sizeFromShape(u.shape)!==0){let I=e.dataIdMap.get(x.dataId).id;v4(p,y,I)}if(d&&e.disposeData(l.dataId),s){let I=C.expandShapeToKeepDim(x.shape,c);x.shape=I}return u.dtype!=="float32"&&e.disposeData(T.dataId),x}var A4={kernelName:No,backendName:"wasm",setupFunc:Fde,kernelFunc:Ede};var w4;function Rde(r){w4=r.wasm.cwrap(Do,null,["number","number","number","number"])}function Lde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=wn(a,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;x!==i&&(u=l,p=x)}let f=u.shape.length;C.assertAxesAreInnerMostDims("min",m,f);let[h,g]=C.computeOutAndReduceShapes(u.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,u.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;w4(p,et[a.dtype],y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var N4={kernelName:Do,backendName:"wasm",setupFunc:Rde,kernelFunc:Lde};var _de=!1,D4=At(Po,_de);var P4=(t=>(t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric",t))(P4||{}),M4;function $de(r){M4=r.wasm.cwrap(Mo,null,["number","array","number","number","array","array","number","number"])}function Bde(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+e.shape[h]+f[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),p=t.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),l=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(l).buffer),d=new Uint8Array(new Int32Array(m).buffer);return M4(a,u,e.shape.length,et[e.dtype],c,d,P4[o],p),i}var F4={kernelName:Mo,backendName:"wasm",kernelFunc:Bde,setupFunc:$de};var Ode=!0,E4=At(Fo,Ode);var R4=dt(ms);function nd(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var L4;function zde(r){L4=r.wasm.cwrap(ya,"number",["number","number","number","number","number"])}function Gde(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:p}=t,u=e.dataIdMap.get(i.dataId).id,l=e.dataIdMap.get(p.dataId).id,m=L4(u,l,s,o,a),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=nd(e,m);return e.wasm._free(f),e.wasm._free(h),e.makeOutput([d],"int32",c)}var _4={kernelName:ya,backendName:"wasm",setupFunc:zde,kernelFunc:Gde};var $4;function Ude(r){$4=r.wasm.cwrap(Hi,"number",["number","number","number","number","number","bool"])}function Wde(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:p,scores:u}=t,l=e.dataIdMap.get(p.dataId).id,m=e.dataIdMap.get(u.dataId).id,c=$4(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=nd(e,c);e.wasm._free(h);let y=e.makeOutput([f],"int32",d),T=e.makeOutput([],"int32",g);return[y,T]}var B4={kernelName:Hi,backendName:"wasm",setupFunc:Ude,kernelFunc:Wde};var O4;function Kde(r){O4=r.wasm.cwrap(Ta,"number",["number","number","number","number","number","number"])}function Vde(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:p,scores:u}=t,l=e.dataIdMap.get(p.dataId).id,m=e.dataIdMap.get(u.dataId).id,c=O4(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=nd(e,c);e.wasm._free(g);let y=e.makeOutput([f],"int32",d),T=e.makeOutput([f],"float32",h);return[y,T]}var z4={kernelName:Ta,backendName:"wasm",setupFunc:Kde,kernelFunc:Vde};var Hde=!1,G4=At(ba,Hde,"bool");var U4;function qde(r){U4=r.wasm.cwrap(xa,null,["number","number","number","number","number"])}function jde(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,p=t.makeOutput([...o.shape,s],"int32"),u=t.dataIdMap.get(p.dataId).id,m=t.dataIdMap.get(o.dataId).id;return U4(m,s,a,i,u),p}var W4={kernelName:xa,backendName:"wasm",setupFunc:qde,kernelFunc:jde};function Xde(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var K4={kernelName:cs,backendName:"wasm",kernelFunc:Xde};function Yde(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return gx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=gx({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=m0({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeData(l.dataId)),u}var V4={kernelName:ds,backendName:"wasm",kernelFunc:Yde};var H4;function Qde(r){H4=r.wasm.cwrap(Eo,null,["number","array","number","number","array","array","number","number"])}function Zde(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(b.sizeFromShape(e.shape)===0)return c0({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return H4(a,l,e.shape.length,et[e.dtype],d,f,o,u),i}var bx={kernelName:Eo,backendName:"wasm",kernelFunc:Zde,setupFunc:Qde};var Jde=!1,q4=At(Ro,Jde);var j4;function efe(r){j4=r.wasm.cwrap(Lo,null,["number","number","number"])}function tfe(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=s,p=n,u=p;p.dtype!=="float32"&&(u=Du({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(u.dataId).id);let l=t.makeOutput(n.shape,"float32"),m=t.dataIdMap.get(l.dataId).id;return j4(i,a,m),p.dtype!=="float32"&&t.disposeData(u.dataId),l}var X4={kernelName:Lo,backendName:"wasm",setupFunc:efe,kernelFunc:tfe};var Y4;function rfe(r){Y4=r.wasm.cwrap(_o,null,["number","number","number","number"])}function nfe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=wn(a,o,e),f=m;if(d){let x=e.dataIdMap.get(l.dataId).id;x!==i&&(u=l,p=x,f=C.getInnerMostAxes(f.length,u.shape.length))}C.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[h,g]=C.computeOutAndReduceShapes(u.shape,f),y=b.sizeFromShape(g),T=e.makeOutput(h,u.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;Y4(p,y,et[T.dtype],x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var Q4={kernelName:_o,backendName:"wasm",setupFunc:rfe,kernelFunc:nfe};var ofe=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=vl(n,o,s,a),p=e.makeOutput([i.length],a);return e.typedArrayFromHeap(p).set(i),p},Z4={kernelName:oi,backendName:"wasm",kernelFunc:ofe};var sfe=!0,J4=At(go,sfe);var eH=dt($o);var tH=dt(Oo);var rH;function afe(r){rH=r.wasm.cwrap(Bo,null,["number","number","number","number","number","number","number","number","number","number"])}function ife(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,[l,m,c,d]=o.shape,f=[l,p,u,d],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=Du({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let y=h.id,T=e.makeOutput(f,"float32");if(b.sizeFromShape(o.shape)===0)return T;let x=e.dataIdMap.get(T.dataId).id;return rH(y,l,m,c,d,p,u,s?1:0,a?1:0,x),g!=null&&e.disposeData(g.dataId),T}var nH={kernelName:Bo,backendName:"wasm",setupFunc:afe,kernelFunc:ife};var oH;function ufe(r){oH=r.wasm.cwrap(Ia,null,["number","array","number","array","number","number"])}function pfe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=b.parseAxisParam(s,o.shape);if(o.shape.length===0)return Kl({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(a).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);oH(p,l,a.length,m,o.shape.length,u);let c=fr({inputs:{x:i},attrs:{shape:o.shape},backend:t});return t.disposeData(i.dataId),c}var sH={kernelName:Ia,backendName:"wasm",kernelFunc:pfe,setupFunc:ufe};var aH;function lfe(r){aH=r.wasm.cwrap(Da,null,["number","number","number","number","number","number","number","number","array","number","number"])}function mfe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,p=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(p.dataId).id,[m,c,d,f]=o.shape,[h,g]=C.getImageCenter(i,c,d),y=a===0,T=255,x=typeof a=="number"?[a,a,a,y?0:T]:[...a,T],I=new Uint8Array(new Int32Array(x).buffer);return aH(u,m,c,d,f,s,h,g,I,x.length,l),p}var iH={kernelName:Da,backendName:"wasm",kernelFunc:mfe,setupFunc:lfe};var uH=dt(Ca);var pH=dt(zo);var lH;function cfe(r){lH=r.wasm.cwrap(ka,null,["number","number","number","number","number","number","array","number","number"])}function dfe(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(b.sizeFromShape(a)===0)return i;let{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=Md.calculateShapes(s,o,a),f=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(m).buffer),T=e.dataIdMap.get(i.dataId).id;return lH(f,g,et[s.dtype],p,u,l,y,c,T),i}var mH={kernelName:ka,backendName:"wasm",setupFunc:cfe,kernelFunc:dfe};var cH;function ffe(r){cH=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function hfe(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(s.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:b.sizeFromShape(o.shape.slice(1));return cH(a,i,p,d,l),u}var dH={kernelName:hs,backendName:"wasm",kernelFunc:hfe,setupFunc:ffe};var fH;function gfe(r){fH=r.wasm.cwrap(Uo,null,["number","number"])}function bfe(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return b.sizeFromShape(o.shape)===0||fH(n,s),o}var hH={kernelName:"Sigmoid",backendName:"wasm",setupFunc:gfe,kernelFunc:bfe};var gH=dt(Go);var bH;function yfe(r){bH=r.wasm.cwrap(Vo,null,["number","number","number","number"])}function Tfe(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],p=b.sizeFromShape(t.shape)/i;return b.sizeFromShape(s.shape)===0||bH(o,a,i,p),s}var yH={kernelName:Vo,backendName:"wasm",setupFunc:yfe,kernelFunc:Tfe};function xfe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n,i=b.sizeFromShape(s),p=[[0,0]];p.push(...a);for(let w=1+s.length;w<o.shape.length;++w)p.push([0,0]);let u=bx.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),l=C.getReshaped(u.shape,s,i,!1),m=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(u.shape,s,i,!1),h=fr({inputs:{x:u},backend:t,attrs:{shape:l}}),T=rs({inputs:{x:h},backend:t,attrs:{perm:m}}),k=fr({inputs:{x:T},backend:t,attrs:{shape:c}});return t.disposeData(u.dataId),t.disposeData(h.dataId),t.disposeData(T.dataId),k}var TH={kernelName:bs,backendName:"wasm",kernelFunc:xfe};var xH;function Ife(r){xH=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Cfe(r){let{backend:e,inputs:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t,i=n.shape[0],p=n.shape[1],u=e.readSync(s.dataId)[0],l=[i+u,p],m=e.dataIdMap.get(n.dataId).id,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(a.dataId).id,f=e.makeOutput(l,n.dtype),h=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(l.slice(0,1),o.dtype),y=e.dataIdMap.get(g.dataId).id,T=e.makeOutput([u],"bool"),x=e.dataIdMap.get(T.dataId).id,I=e.makeOutput([i],n.dtype),k=e.dataIdMap.get(I.dataId).id,w=e.makeOutput([4],"int32"),M=e.dataIdMap.get(w.dataId).id,F=xH(m,c,et[o.dtype],i,u,p,d,h,y,x,k,M),E=e.readSync(w.dataId),$;switch(E[0]){case 1:{$=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(E[1]);break}case 2:{$=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(E[1],E[2]);break}case 3:$=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(E[1],E[2],E[3]);break;default:$=""}if(e.disposeData(w.dataId),$)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(T.dataId),e.disposeData(I.dataId),new Error($);let G=f,W=g;return F!==l[0]&&(G=Xs({inputs:{x:f},attrs:{begin:0,size:[F,p]},backend:e}),W=Xs({inputs:{x:g},attrs:{begin:0,size:F},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[G,W,T,I]}var IH={kernelName:Ku,backendName:"wasm",setupFunc:Ife,kernelFunc:Cfe};var CH;function kfe(r){CH=r.wasm.cwrap(Qi,null,["number","number","number","number","number","number","number"])}function Sfe(r){let{backend:e,inputs:t}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,p=e.dataIdMap.get(s.dataId).id,u=n.shape[0],l=b.sizeFromShape(s.shape),m=e.makeOutput([u,l],n.dtype),c=e.dataIdMap.get(m.dataId).id,d=e.makeOutput([l],s.dtype),f=e.dataIdMap.get(d.dataId).id,h=e.makeOutput([3],"int32"),g=e.dataIdMap.get(h.dataId).id;CH(a,i,p,u,c,f,g);let y=e.readSync(h.dataId),T;switch(y[0]){case 0:{T=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{T=C.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:T=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));T=C.getSparseReshapeInputOutputMultipleErrorMessage(x,I);break}case 4:{let x=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));T=C.getSparseReshapeInputOutputMismatchErrorMessage(x,I);break}default:T=""}if(e.disposeData(h.dataId),T)throw e.disposeData(m.dataId),e.disposeData(d.dataId),new Error(T);return[m,d]}var kH={kernelName:Qi,backendName:"wasm",setupFunc:kfe,kernelFunc:Sfe};var SH;function yx(r){SH=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Tx(r,e){let{backend:t,inputs:n}=r,{data:o,indices:s,segmentIds:a}=n,i=s.shape[0],p=t.readSync(a.dataId,i-1,i)[0],l=i>0?p+1:0;if(l<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=l;let c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(a.dataId).id,h=t.makeOutput(m,o.dtype),g=t.dataIdMap.get(h.dataId).id,y=t.makeOutput([4],"int32"),T=t.dataIdMap.get(y.dataId).id;SH(c,et[o.dtype],o.shape[0],d,f,g,T,e,0);let x=t.readSync(y.dataId),I;switch(x[0]){case 0:{I=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{I=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:I=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:I=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:I=""}if(t.disposeData(y.dataId),I)throw t.disposeData(h.dataId),new Error(I);return h}function vfe(r){return Tx(r,!0)}var vH={kernelName:Vu,backendName:"wasm",setupFunc:yx,kernelFunc:vfe};function Afe(r){return Tx(r,!1)}var AH={kernelName:Hu,backendName:"wasm",setupFunc:yx,kernelFunc:Afe};function wfe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=b.parseAxisParam(a,o.shape)[0],p=C.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return p.map(m=>{let c=[...l];c[i]=m;let d=Xs({inputs:{x:o},attrs:{begin:u,size:c},backend:n});return u[i]+=m,d})}var wH={kernelName:ys,backendName:"wasm",kernelFunc:wfe};var NH=dt(Wo);var DH=dt(ai);var Nfe=!0,PH=At(Ho,Nfe);var MH;function Dfe(r){MH=r.wasm.cwrap(Is,null,["number","number","number","number"])}function Pfe(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),p=e.dataIdMap.get(i.dataId).id;return MH(a,o,et[s.dtype],p),i}var FH={kernelName:Is,backendName:"wasm",setupFunc:Dfe,kernelFunc:Pfe};var EH;function Mfe(r){EH=r.wasm.cwrap(va,null,["number","array","number","array","array","array","array","array","number","number"])}function Ffe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=fr({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=Tt.computeOutShape(T,x,I),M=Xs({inputs:{x:o},backend:e,attrs:{begin:T,size:w}});k=fr({inputs:{x:M},backend:e,attrs:{shape:f}}),e.disposeData(M.dataId)}else{let w=e.makeOutput(d,"float32"),M=e.dataIdMap.get(o.dataId).id,F=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),E=new Uint8Array(new Int32Array(T).buffer),$=new Uint8Array(new Int32Array(x).buffer),G=new Uint8Array(new Int32Array(I).buffer),W=new Uint8Array(new Int32Array(d).buffer),V=new Uint8Array(new Int32Array(b.computeStrides(d)).buffer),q=e.dataIdMap.get(w.dataId).id;EH(M,F,o.shape.length,E,$,G,W,V,d.length,q),k=fr({inputs:{x:w},backend:e,attrs:{shape:f}}),e.disposeData(w.dataId)}return k}var RH={kernelName:va,backendName:"wasm",setupFunc:Mfe,kernelFunc:Ffe};var Efe=!0,LH=At(qo,Efe);var _H;function Rfe(r){_H=r.wasm.cwrap(Ko,null,["number","number","number","number"])}function Lfe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=wn(a,o,e),f=m;if(d){let x=e.dataIdMap.get(l.dataId).id;x!==i&&(u=l,p=x,f=C.getInnerMostAxes(f.length,u.shape.length))}C.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[h,g]=C.computeOutAndReduceShapes(u.shape,f),y=b.sizeFromShape(g),T=e.makeOutput(h,u.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;_H(p,y,et[T.dtype],x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var $H={kernelName:Ko,backendName:"wasm",setupFunc:Rfe,kernelFunc:Lfe};var BH=dt(Aa);var OH=dt(jo);var zH;function _fe(r){zH=r.wasm.cwrap(Dn,null,["number","array","number","array","number","number"])}function $fe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let c=0;c<i.length;c++)i[c]=o.shape[c]*a[c];let p=new Uint8Array(new Int32Array(o.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),l=t.makeOutput(i,o.dtype),m=t.dataIdMap.get(l.dataId).id;return zH(s,p,o.shape.length,u,i.length,et[l.dtype],m),l}var GH={kernelName:Dn,backendName:"wasm",setupFunc:_fe,kernelFunc:$fe};var UH;function Bfe(r){UH=r.wasm.cwrap(wa,null,["number","array","number","number","number","bool","number","number"])}var Ofe=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),p=n.shape.slice();p[p.length-1]=o;let u=e.makeOutput(p,n.dtype),l=e.dataIdMap.get(u.dataId).id,m=e.makeOutput(p,"int32"),c=e.dataIdMap.get(m.dataId).id;return UH(a,i,n.shape.length,et[n.dtype],o,s,l,c),[u,m]},WH={kernelName:wa,backendName:"wasm",setupFunc:Bfe,kernelFunc:Ofe};var KH;function zfe(r){KH=r.wasm.cwrap(Na,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Gfe(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],y=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),T=e.makeOutput(g,o.dtype),x=e.dataIdMap.get(T.dataId).id,k=e.dataIdMap.get(o.dataId).id,M=e.dataIdMap.get(s.dataId).id,F=a==="nearest"?1:2,E;switch(i){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return KH(k,M,s.shape[0]>1,l,f,h,d,c,m,y,o.shape.length-1,F,E,p,x),T}var VH={kernelName:Na,backendName:"wasm",setupFunc:zfe,kernelFunc:Gfe};function Ufe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,p=new Array(i-1),u=0;for(let d=0;d<i;d++)d!==s&&(p[u++]=o.shape[d]);let l=new Array(a),m=new Array(i).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<l.length;d++)m[s]=d,l[d]=Xs({inputs:{x:o},attrs:{begin:m,size:c},backend:t});return l.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:p}))}var HH={kernelName:Ts,backendName:"wasm",kernelFunc:Ufe};function Wfe(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var qH={kernelName:xs,backendName:"wasm",kernelFunc:Wfe};var Kfe=[oV,sV,aV,uV,dV,hV,bV,TV,CV,SV,vV,AV,NV,DV,MV,EV,RV,LV,BV,zV,UV,KV,HV,qV,jV,XV,YV,QV,JV,e4,t4,n4,s4,i4,p4,m4,c4,d4,pV,h4,g4,b4,y4,T4,I4,C4,S4,A4,N4,D4,F4,E4,R4,_4,B4,z4,G4,W4,K4,V4,bx,q4,X4,Q4,Z4,J4,eH,tH,xV,nH,sH,iH,uH,pH,mH,dH,hH,gH,kV,yH,TH,IH,kH,vH,AH,wH,NH,DH,PH,FH,RH,LH,$H,BH,OH,GH,WH,VH,mV,HH,qH];for(let r of Kfe)Zi(r);var d0=B();d0.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));d0.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(d0.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var y0=Np(QH());var ZH=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});`;var tq=Np(JH());var kx=class extends ss{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(nq),T0=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Ja(this,Fn())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}move(e,t,n,o,s){let a=this.dataIdNextNumber++;if(o==="string"){let l=t;this.dataIdMap.set(e,{id:a,stringBytes:l,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let i=b.sizeFromShape(n),p=i*b.bytesPerElement(o),u=this.wasm._malloc(p);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,p),u)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:o,dtype:s,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(s==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||b.sizeFromShape(a);let p=b.bytesPerElement(s),u=this.wasm.HEAPU8.slice(o+t*p,o+n*p);return Hfe(u.buffer,s)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=b.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=b.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,a);case"int32":return new Int32Array(o,s,a);case"bool":return new Uint8Array(o,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Vfe(r){return(e,t)=>(b.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function eq(r,e,t){if(Cx!=null)return Cx;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Fg!=null&&Fg[n]!=null?Fg[n]:t+n}async function rq(){let[r,e]=await Promise.all([B().getAsync("WASM_HAS_SIMD_SUPPORT"),B().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(i,p)=>{if(i.endsWith(".worker.js")){let u=ZH.replace(/\n/g,"\\n"),l=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?eq(r,e,Mg??p):p+i},x0&&(o.instantiateWasm=Vfe(eq(r,e,Mg??"")));let s=!1;o.onAbort=()=>{if(s||Eg)return;Eg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&r&&Cx==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+y0.default.toString()],{type:"text/javascript"}),a=(0,y0.default)(o)):a=(0,tq.default)(o),a.then(i=>{s=!0,Eg=!1;let p=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",p,["number"]),dispose:i.cwrap("dispose",p,[])},t({wasm:i})})})}function Hfe(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var qfe=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Cx=null,Mg=null,Fg={},Eg=!1,x0=!1;function jfe(r,e=!1){if(BC("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Eg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Cx=r,x0=e}function Xfe(r,e=!1){if(Eg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")Mg=r;else{Fg=r;let t=qfe.filter(n=>Fg[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}x0=e}var nq=-1,T0=-1;function Yfe(r){nq=r}function Qfe(){if(T0===-1)throw new Error("WASM backend not initialized.");return T0}var Zfe="0.0.0";var Jfe=2;tp("wasm",async()=>{let{wasm:r}=await rq();return new kx(r)},Jfe);var xp="3.18.0-20220529",GXr={tfjs:xp,"tfjs-core":xp,"tfjs-data":xp,"tfjs-layers":xp,"tfjs-converter":xp,"tfjs-backend-cpu":xp,"tfjs-backend-webgl":xp,"tfjs-backend-wasm":xp};export{as as Abs,Pi as Acos,Mi as Acosh,il as AdadeltaOptimizer,ul as AdagradOptimizer,pl as AdamOptimizer,ll as AdamaxOptimizer,Nn as Add,oo as AddN,Fi as All,Ei as Any,so as ArgMax,ri as ArgMin,Ri as Asin,Li as Asinh,_i as Atan,Bi as Atan2,$i as Atanh,ao as AvgPool,Ru as AvgPool3D,mm as AvgPool3DGrad,lm as AvgPoolGrad,kx as BackendWasm,io as BatchMatMul,is as BatchToSpaceND,cm as Bincount,dm as BroadcastArgs,j0 as BroadcastTo,iv as Callback,gS as CallbackList,Wn as Cast,uo as Ceil,Kn as ClipByValue,Lu as Complex,_u as ComplexAbs,us as Concat,po as Conv2D,fm as Conv2DBackpropFilter,lo as Conv2DBackpropInput,$u as Conv3D,hm as Conv3DBackpropFilterV2,gm as Conv3DBackpropInputV2,mo as Cos,co as Cosh,ia as CropAndResize,aa as Cumprod,fo as Cumsum,yS as CustomCallback,Ja as DataStorage,bm as DenseBincount,ua as DepthToSpace,ho as DepthwiseConv2dNative,ym as DepthwiseConv2dNativeBackpropFilter,Tm as DepthwiseConv2dNativeBackpropInput,xm as Diag,Bu as Dilation2D,xd as Dilation2DBackpropFilter,Td as Dilation2DBackpropInput,iC as ENV,uv as EarlyStopping,Ou as Einsum,bo as Elu,Im as EluGrad,gb as Environment,pa as Equal,Oi as Erf,yo as Exp,ps as ExpandDims,la as Expm1,Cm as FFT,ni as Fill,ma as FlipLeftRight,To as Floor,xo as FloorDiv,Fp as FromPixels,Io as FusedBatchNorm,ks as FusedConv2D,Ss as FusedDepthwiseConv2D,Qc as GPGPUContext,ca as GatherNd,ls as GatherV2,rT as GraphModel,da as Greater,Co as GreaterEqual,bS as History,km as IFFT,Vn as Identity,zu as Imag,Pt as InputSpec,zi as IsFinite,Gi as IsInf,Ui as IsNan,ss as KernelBackend,Gu as LRN,vm as LRNGrad,yy as LayerVariable,ts as LayersModel,ko as LeakyRelu,fa as Less,ha as LessEqual,Sm as LinSpace,So as Log,Wi as Log1p,X0 as LogSoftmax,ga as LogicalAnd,Ki as LogicalNot,Mp as LogicalOr,she as LowerBound,Hh as MathBackendCPU,ug as MathBackendWebGL,vo as Max,wo as MaxPool,Uu as MaxPool3D,wm as MaxPool3DGrad,Am as MaxPoolGrad,Nm as MaxPoolWithArgmax,Ao as Maximum,No as Mean,Do as Min,Po as Minimum,Mo as MirrorPad,Vi as Mod,ml as MomentumOptimizer,Dm as Multinomial,Fo as Multiply,ms as Neg,ya as NonMaxSuppressionV3,Hi as NonMaxSuppressionV4,Ta as NonMaxSuppressionV5,ba as NotEqual,D2 as OP_SCOPE_SUFFIX,xa as OneHot,cs as OnesLike,Yr as Optimizer,hi as OptimizerConstructors,ds as Pack,Eo as PadV2,ahe as Pool,Ro as Pow,Lo as Prelu,_o as Prod,cl as RMSPropOptimizer,zs as RNN,oi as Range,I2 as Rank,Wu as Real,go as RealDiv,qi as Reciprocal,Ra as Reduction,$o as Relu,Oo as Relu6,fs as Reshape,Bo as ResizeBilinear,Mm as ResizeBilinearGrad,si as ResizeNearestNeighbor,Pm as ResizeNearestNeighborGrad,Ia as Reverse,Da as RotateWithOffset,Ca as Round,zo as Rsqrt,hu as SGDOptimizer,ka as ScatterNd,Fm as SearchSorted,hs as Select,ji as Selu,Ic as Sequential,Uo as Sigmoid,Xi as Sign,Go as Sin,Sa as Sinh,gs as Slice,Vo as Softmax,Yi as Softplus,bs as SpaceToBatchND,Ku as SparseFillEmptyRows,Qi as SparseReshape,Vu as SparseSegmentMean,Hu as SparseSegmentSum,qu as SparseToDense,ys as SplitV,Wo as Sqrt,ai as Square,Ho as SquaredDifference,Is as Step,va as StridedSlice,ju as StringNGrams,Em as StringSplit,Rm as StringToHashBucketFast,qo as Sub,Ko as Sum,Tn as SymbolicTensor,Aa as Tan,jo as Tanh,Ye as Tensor,gt as TensorBuffer,Dn as Tile,wa as TopK,Na as Transform,Pn as Transpose,Lm as Unique,Ts as Unpack,Xu as UnsortedSegmentSum,ihe as UpperBound,Zu as Variable,xs as ZerosLike,Cs as _FusedMatMul,$t as abs,VC as acos,HC as acosh,Q as add,qC as addN,Ed as all,Hm as any,iu as argMax,jC as argMin,XC as asin,YC as asinh,QC as atan,ZC as atan2,JC as atanh,Up as avgPool,Rd as avgPool3d,p1 as backend,C as backend_util,D5 as basicLSTMCell,li as batchNorm,nk as batchNorm2d,ok as batchNorm3d,sk as batchNorm4d,Wp as batchToSpaceND,Ld as bincount,GBe as booleanMaskAsync,ak as broadcastArgs,Kp as broadcastTo,wr as broadcast_util,Fb as browser,xe as buffer,pee as callbacks,ee as cast,ik as ceil,Rr as clipByValue,Mn as clone,un as complex,pt as concat,uk as concat1d,pk as concat2d,lk as concat3d,mk as concat4d,hE as constraints,_d as conv1d,jn as conv2d,$d as conv2dTranspose,Bd as conv3d,ck as conv3dTranspose,fhe as copyRegisteredKernels,Vp as cos,Od as cosh,Yb as cosineWindow,Xm as cumprod,zd as cumsum,cn as customGrad,mL as data,dk as denseBincount,BC as deprecationWarn,fk as depthToSpace,pu as depthwiseConv2d,fee as deregisterOp,Ju as device_util,s8 as diag,hk as dilation2d,iTe as disableDeprecationWarnings,Me as dispose,uTe as disposeVariables,le as div,gk as divNoNan,c8 as dot,eP as dropout,bk as einsum,lu as elu,aTe as enableDebugMode,sTe as enableProdMode,tP as enclosingPowerOfTwo,Fn as engine,B as env,zr as equal,yk as erf,kk as euclideanNorm,pr as exp,Nr as expandDims,Sk as expm1,Zm as eye,el as fft,Fa as fill,fTe as findBackend,hTe as findBackendFactory,mu as floor,Fd as floorDiv,zO as forceHalfFloat,Ms as fused,mi as gather,Z1 as gatherND,Eb as gather_util,cTe as getBackend,lC as getGradient,Cd as getKernel,bb as getKernelsForBackend,Qfe as getThreadsCount,Sw as gpgpu_util,H8 as grad,q8 as grads,rr as greater,Qo as greaterEqual,rp as ifft,su as imag,fn as image,_Oe as inTopKAsync,gE as initializers,AS as input,Or as io,rf as irfft,_8 as isFinite,B8 as isInf,vk as isNaN,Ut as keep,br as kernel_impls,jE as layers,Hp as leakyRelu,Ud as less,Zo as lessEqual,UP as linalg,Ak as linspace,ite as loadGraphModel,ute as loadGraphModelSync,IJ as loadLayersModel,wk as localResponseNormalization,Lr as log,qp as log1p,Z8 as logSigmoid,Wd as logSoftmax,Nk as logSumExp,Ur as logicalAnd,jp as logicalNot,Kd as logicalOr,aX as logicalXor,Z4e as losses,Dk as lowerBound,He as matMul,m1 as math,Xr as max,Xp as maxPool,Vd as maxPool3d,Pk as maxPoolWithArgmax,Xn as maximum,Lt as mean,Pd as memory,dX as meshgrid,XE as metrics,Ym as min,cu as minimum,Mk as mirrorPad,Fk as mod,TJ as model,YE as models,Jm as moments,ZBe as movingAverage,L as mul,TX as multiRNNCell,Ek as multinomial,Je as neg,af as nextFrame,Qm as norm,di as notEqual,ou as oneHot,lr as ones,Dr as onesLike,A as op,SX as outerProduct,Ln as pad,wX as pad1d,DX as pad2d,MX as pad3d,EX as pad4d,BX as pool,Rn as pow,Qp as prelu,FC as print,Hd as prod,pTe as profile,UX as rand,YX as randomGamma,Vb as randomNormal,Ea as randomUniform,du as range,mTe as ready,pi as real,Uk as reciprocal,tp as registerBackend,CJ as registerCallbackConstructor,Q0 as registerGradient,Zi as registerKernel,dee as registerOp,QE as regularizers,Wr as relu,jd as relu6,dTe as removeBackend,_ as reshape,gr as reverse,oY as reverse1d,aY as reverse2d,uY as reverse3d,lY as reverse4d,tl as rfft,Xd as round,Yd as rsqrt,me as scalar,Y1 as scatterND,Md as scatter_util,Ub as searchSorted,Qd as selu,Wk as separableConv2d,xJ as sequential,re as serialization,k6 as setBackend,gTe as setPlatform,Yfe as setThreadsCount,jfe as setWasmPath,Xfe as setWasmPaths,FA as setWebGLContext,Kk as setdiff1dAsync,Bc as shared,mn as sigmoid,Vk as sign,v4e as signal,Zd as sin,Jd as sinh,Ge as slice,ef as slice1d,Hb as slice2d,tf as slice3d,tc as slice4d,Tt as slice_util,Jp as softmax,ci as softplus,Yp as spaceToBatchND,sf as sparse,Xb as sparseToDense,x4e as spectral,kr as split,Rt as sqrt,je as square,nf as squaredDifference,dn as squeeze,mr as stack,fu as step,Hk as stridedSlice,oy as string,pe as sub,de as sum,Ji as sumOutType,qk as tan,uu as tanh,Fr as tensor,Ot as tensor1d,fi as tensor2d,OC as tensor3d,LY as tensor4d,_Y as tensor5d,$Y as tensor6d,Ns as tensor_util,N1 as test_util,z as tidy,Gr as tile,lTe as time,jk as topk,dl as train,Ue as transpose,rl as truncatedNormal,qb as unique,dhe as unregisterGradient,che as unregisterKernel,Xk as unsortedSegmentSum,_r as unstack,Ft as upcastType,Yk as upperBound,b as util,j8 as valueAndGrad,X8 as valueAndGrads,Qk as variable,Ob as variableGrads,GXr as version,lte as version_converter,Q6 as version_core,Bte as version_cpu,Ff as version_layers,Zfe as version_wasm,Dse as version_webgl,e5t as webgl,Wc as webgl_util,rV as webgpu,Bt as where,of as whereAsync,bt as zeros,Ne as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
