var Wj=Object.create;var rv=Object.defineProperty;var Kj=Object.getOwnPropertyDescriptor;var Vj=Object.getOwnPropertyNames;var Hj=Object.getPrototypeOf,qj=Object.prototype.hasOwnProperty;var K0=(r=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(t,e)=>(typeof require<"u"?require:t)[e]}):r)(function(r){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});var Rr=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),He=(r,t)=>{for(var e in t)rv(r,e,{get:t[e],enumerable:!0})},jj=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Vj(t))!qj.call(r,o)&&o!==e&&rv(r,o,{get:()=>t[o],enumerable:!(n=Kj(t,o))||n.enumerable});return r};var hm=(r,t,e)=>(e=r!=null?Wj(Hj(r)):{},jj(t||!r||!r.__esModule?rv(e,"default",{value:r,enumerable:!0}):e,r));var Y1=Rr(()=>{});var Z1=Rr(()=>{});var SF=Rr((kF,eA)=>{(function(r,t,e){function n(i){var u=this,l=a();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(i),u.s0<0&&(u.s0+=1),u.s1-=l(i),u.s1<0&&(u.s1+=1),u.s2-=l(i),u.s2<0&&(u.s2+=1),l=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function s(i,u){var l=new n(i),p=u&&u.state,m=l.next;return m.int32=function(){return l.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&o(p,l),m.state=function(){return o(l,{})}),m}function a(){var i=4022871197,u=function(l){l=String(l);for(var p=0;p<l.length;p++){i+=l.charCodeAt(p);var m=.02519603282416938*i;i=m>>>0,m-=i,m*=i,i=m>>>0,m-=i,i+=m*4294967296}return(i>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.alea=s})(kF,typeof eA=="object"&&eA,typeof define=="function"&&define)});var AF=Rr((vF,tA)=>{(function(r,t,e){function n(a){var i=this,u="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var p=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^p^p>>>8},a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor128=s})(vF,typeof tA=="object"&&tA,typeof define=="function"&&define)});var NF=Rr((wF,rA)=>{(function(r,t,e){function n(a){var i=this,u="";i.next=function(){var p=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(p^p<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,l==u.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorwow=s})(wF,typeof rA=="object"&&rA,typeof define=="function"&&define)});var FF=Rr((DF,nA)=>{(function(r,t,e){function n(a){var i=this;i.next=function(){var l=i.x,p=i.i,m,c,d;return m=l[p],m^=m>>>7,c=m^m<<24,m=l[p+1&7],c^=m^m>>>10,m=l[p+3&7],c^=m^m>>>3,m=l[p+4&7],c^=m^m<<7,m=l[p+7&7],m=m^m<<13,c^=m^m<<9,l[p]=c,i.i=p+1&7,c};function u(l,p){var m,c,d=[];if(p===(p|0))c=d[0]=p;else for(p=""+p,m=0;m<p.length;++m)d[m&7]=d[m&7]<<15^p.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],l.x=d,l.i=0,m=256;m>0;--m)l.next()}u(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.x&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorshift7=s})(DF,typeof nA=="object"&&nA,typeof define=="function"&&define)});var PF=Rr((RF,oA)=>{(function(r,t,e){function n(a){var i=this;i.next=function(){var l=i.w,p=i.X,m=i.i,c,d;return i.w=l=l+1640531527|0,d=p[m+34&127],c=p[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=p[m]=d^c,i.i=m,d+(l^l>>>16)|0};function u(l,p){var m,c,d,f,h,g=[],b=128;for(p===(p|0)?(c=p,p=null):(p=p+"\0",c=0,b=Math.max(b,p.length)),d=0,f=-32;f<b;++f)p&&(c^=p.charCodeAt((f+32)%p.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(p&&p.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;l.w=h,l.X=g,l.i=d}u(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.X&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor4096=s})(RF,typeof oA=="object"&&oA,typeof define=="function"&&define)});var EF=Rr((MF,sA)=>{(function(r,t,e){function n(a){var i=this,u="";i.next=function(){var p=i.b,m=i.c,c=i.d,d=i.a;return p=p<<25^p>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-p|0,i.b=p=p<<20^p>>>12^m,i.c=m=m-c|0,i.d=c<<16^m>>>16^d,i.a=d-p|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):u+=a;for(var l=0;l<u.length+20;l++)i.b^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.tychei=s})(MF,typeof sA=="object"&&sA,typeof define=="function"&&define)});var LF=Rr(()=>{});var $F=Rr((_F,iy)=>{(function(r,t,e){var n=256,o=6,s=52,a="random",i=e.pow(n,o),u=e.pow(2,s),l=u*2,p=n-1,m;function c(x,I,k){var A=[];I=I==!0?{entropy:!0}:I||{};var F=g(h(I.entropy?[x,T(t)]:x??b(),3),A),R=new d(A),P=function(){for(var L=R.g(o),O=i,G=0;L<u;)L=(L+G)*n,O*=n,G=R.g(1);for(;L>=l;)L/=2,O/=2,G>>>=1;return(L+G)/O};return P.int32=function(){return R.g(4)|0},P.quick=function(){return R.g(4)/4294967296},P.double=P,g(T(R.S),t),(I.pass||k||function(L,O,G,W){return W&&(W.S&&f(W,R),L.state=function(){return f(R,{})}),G?(e[a]=L,O):L})(P,F,"global"in I?I.global:this==e,I.state)}function d(x){var I,k=x.length,A=this,F=0,R=A.i=A.j=0,P=A.S=[];for(k||(x=[k++]);F<n;)P[F]=F++;for(F=0;F<n;F++)P[F]=P[R=p&R+x[F%k]+(I=P[F])],P[R]=I;(A.g=function(L){for(var O,G=0,W=A.i,H=A.j,V=A.S;L--;)O=V[W=p&W+1],G=G*n+V[p&(V[W]=V[H=p&H+O])+(V[H]=O)];return A.i=W,A.j=H,G})(n)}function f(x,I){return I.i=x.i,I.j=x.j,I.S=x.S.slice(),I}function h(x,I){var k=[],A=typeof x,F;if(I&&A=="object")for(F in x)try{k.push(h(x[F],I-1))}catch{}return k.length?k:A=="string"?x:x+"\0"}function g(x,I){for(var k=x+"",A,F=0;F<k.length;)I[p&F]=p&(A^=I[p&F]*19)+k.charCodeAt(F++);return T(I)}function b(){try{var x;return m&&(x=m.randomBytes)?x=x(n):(x=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(x)),T(x)}catch{var I=r.navigator,k=I&&I.plugins;return[+new Date,r,k,r.screen,T(t)]}}function T(x){return String.fromCharCode.apply(0,x)}if(g(e.random(),t),typeof iy=="object"&&iy.exports){iy.exports=c;try{m=LF()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):e["seed"+a]=c})(typeof self<"u"?self:_F,[],Math)});var Th=Rr((iLe,BF)=>{var CY=SF(),kY=AF(),SY=NF(),vY=FF(),AY=PF(),wY=EF(),rl=$F();rl.alea=CY;rl.xor128=kY;rl.xorwow=SY;rl.xorshift7=vY;rl.xor4096=AY;rl.tychei=wY;BF.exports=rl});var Tw=Rr(()=>{});var jh=Rr(()=>{});var vg=Rr(()=>{});var s0=Rr(()=>{});var Qq=Rr(()=>{});var Jq=Rr(()=>{});var ej=Rr((bk,i0)=>{"use strict";var a0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(t){t=t||{};function e(){return ue.buffer!=st&&lr(ue.buffer),Vt}function n(){return ue.buffer!=st&&lr(ue.buffer),zn}function o(){return ue.buffer!=st&&lr(ue.buffer),pr}function s(){return ue.buffer!=st&&lr(ue.buffer),to}function a(){return ue.buffer!=st&&lr(ue.buffer),Br}function i(){return ue.buffer!=st&&lr(ue.buffer),us}function u(){return ue.buffer!=st&&lr(ue.buffer),sn}function l(){return ue.buffer!=st&&lr(ue.buffer),vr}var p=typeof t<"u"?t:{},m,c;p.ready=new Promise(function(M,K){m=M,c=K});var d;typeof process<"u"&&process.listeners&&(d={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},p),h=[],g="./this.program",b=(M,K)=>{throw K},T=typeof window=="object",x=typeof importScripts=="function",I=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",k=p.ENVIRONMENT_IS_PTHREAD||!1,A="";function F(M){return p.locateFile?p.locateFile(M,A):A+M}var R,P,L,O;function G(M){if(M instanceof Op)return;X("exiting due to exception: "+M)}var W,H,V;if(I){x?A=vg().dirname(A)+"/":A=__dirname+"/",V=()=>{H||(W=jh(),H=vg())},R=function(ne,me){return V(),ne=H.normalize(ne),W.readFileSync(ne,me?void 0:"utf8")},L=K=>{var ne=R(K,!0);return ne.buffer||(ne=new Uint8Array(ne)),ne},P=(K,ne,me)=>{V(),K=H.normalize(K),W.readFile(K,function(Ee,at){Ee?me(Ee):ne(at.buffer)})},process.argv.length>1&&(g=process.argv[1].replace(/\\/g,"/")),h=process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof Op))throw K}),process.on("unhandledRejection",function(K){throw K}),b=(K,ne)=>{if(ls())throw process.exitCode=K,ne;G(ne),process.exit(K)},p.inspect=function(){return"[Emscripten Module object]"};let M;try{M=s0()}catch(K){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),K}global.Worker=M.Worker}else(T||x)&&(x?A=self.location.href:typeof document<"u"&&document.currentScript&&(A=document.currentScript.src),r&&(A=r),A.indexOf("blob:")!==0?A=A.substr(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1):A="",I||(R=M=>{var K=new XMLHttpRequest;return K.open("GET",M,!1),K.send(null),K.responseText},x&&(L=M=>{var K=new XMLHttpRequest;return K.open("GET",M,!1),K.responseType="arraybuffer",K.send(null),new Uint8Array(K.response)}),P=(M,K,ne)=>{var me=new XMLHttpRequest;me.open("GET",M,!0),me.responseType="arraybuffer",me.onload=()=>{if(me.status==200||me.status==0&&me.response){K(me.response);return}ne()},me.onerror=ne,me.send(null)}),O=M=>document.title=M);I&&typeof performance>"u"&&(global.performance=Qq().performance);var q=console.log.bind(console),Z=console.warn.bind(console);I&&(V(),q=M=>W.writeSync(1,M+`
`),Z=M=>W.writeSync(2,M+`
`));var j=p.print||q,X=p.printErr||Z;Object.assign(p,f),f=null,p.arguments&&(h=p.arguments),p.thisProgram&&(g=p.thisProgram),p.quit&&(b=p.quit);var se=4,ae=Atomics.load,pe=Atomics.store,oe=Atomics.compareExchange,ge;p.wasmBinary&&(ge=p.wasmBinary);var fe=p.noExitRuntime||!0;typeof WebAssembly!="object"&&Bp("no native wasm support detected");var ue,ve,De=!1,Re;function je(M,K){M||Bp(K)}var Q=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function bt(M,K,ne){for(var me=K+ne,Ee=K;M[Ee]&&!(Ee>=me);)++Ee;if(Ee-K>16&&M.buffer&&Q)return Q.decode(M.buffer instanceof SharedArrayBuffer?M.slice(K,Ee):M.subarray(K,Ee));for(var at="";K<Ee;){var We=M[K++];if(!(We&128)){at+=String.fromCharCode(We);continue}var Ue=M[K++]&63;if((We&224)==192){at+=String.fromCharCode((We&31)<<6|Ue);continue}var cr=M[K++]&63;if((We&240)==224?We=(We&15)<<12|Ue<<6|cr:We=(We&7)<<18|Ue<<12|cr<<6|M[K++]&63,We<65536)at+=String.fromCharCode(We);else{var wn=We-65536;at+=String.fromCharCode(55296|wn>>10,56320|wn&1023)}}return at}function lt(M,K){return M?bt(n(),M,K):""}function Dt(M,K,ne,me){if(!(me>0))return 0;for(var Ee=ne,at=ne+me-1,We=0;We<M.length;++We){var Ue=M.charCodeAt(We);if(Ue>=55296&&Ue<=57343){var cr=M.charCodeAt(++We);Ue=65536+((Ue&1023)<<10)|cr&1023}if(Ue<=127){if(ne>=at)break;K[ne++]=Ue}else if(Ue<=2047){if(ne+1>=at)break;K[ne++]=192|Ue>>6,K[ne++]=128|Ue&63}else if(Ue<=65535){if(ne+2>=at)break;K[ne++]=224|Ue>>12,K[ne++]=128|Ue>>6&63,K[ne++]=128|Ue&63}else{if(ne+3>=at)break;K[ne++]=240|Ue>>18,K[ne++]=128|Ue>>12&63,K[ne++]=128|Ue>>6&63,K[ne++]=128|Ue&63}}return K[ne]=0,ne-Ee}function Mt(M,K,ne){return Dt(M,n(),K,ne)}function Tt(M){for(var K=0,ne=0;ne<M.length;++ne){var me=M.charCodeAt(ne);me<=127?K++:me<=2047?K+=2:me>=55296&&me<=57343?(K+=4,++ne):K+=3}return K}var st,Vt,zn,pr,to,Br,us,sn,vr;k&&(st=p.buffer);function lr(M){st=M,p.HEAP8=Vt=new Int8Array(M),p.HEAP16=pr=new Int16Array(M),p.HEAP32=Br=new Int32Array(M),p.HEAPU8=zn=new Uint8Array(M),p.HEAPU16=to=new Uint16Array(M),p.HEAPU32=us=new Uint32Array(M),p.HEAPF32=sn=new Float32Array(M),p.HEAPF64=vr=new Float64Array(M)}var Xr=p.INITIAL_MEMORY||16777216;if(k)ue=p.wasmMemory,st=p.buffer;else if(p.wasmMemory)ue=p.wasmMemory;else if(ue=new WebAssembly.Memory({initial:Xr/65536,maximum:32768,shared:!0}),!(ue.buffer instanceof SharedArrayBuffer))throw X("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),I&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");ue&&(st=ue.buffer),Xr=st.byteLength,lr(st);var Yr,ii=[],ps=[],wu=[],um=!1;function ls(){return fe}function Or(){if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)Ik(p.preRun.shift());$g(ii)}function _p(){um=!0,!k&&$g(ps)}function xk(){if(!k){if(p.postRun)for(typeof p.postRun=="function"&&(p.postRun=[p.postRun]);p.postRun.length;)x0(p.postRun.shift());$g(wu)}}function Ik(M){ii.unshift(M)}function T0(M){ps.unshift(M)}function x0(M){wu.unshift(M)}var ui=0,$p=null,pm=null;function I0(M){ui++,p.monitorRunDependencies&&p.monitorRunDependencies(ui)}function C0(M){if(ui--,p.monitorRunDependencies&&p.monitorRunDependencies(ui),ui==0&&($p!==null&&(clearInterval($p),$p=null),pm)){var K=pm;pm=null,K()}}function Bp(M){k?postMessage({cmd:"onAbort",arg:M}):p.onAbort&&p.onAbort(M),M="Aborted("+M+")",X(M),De=!0,Re=1,M+=". Build with -sASSERTIONS for more info.";var K=new WebAssembly.RuntimeError(M);throw c(K),K}var Ck="data:application/octet-stream;base64,";function Fg(M){return M.startsWith(Ck)}function Rg(M){return M.startsWith("file://")}var an;an="tfjs-backend-wasm-threaded-simd.wasm",Fg(an)||(an=F(an));function Pg(M){try{if(M==an&&ge)return new Uint8Array(ge);if(L)return L(M);throw"both async and sync fetching of the wasm failed"}catch(K){Bp(K)}}function Mg(){if(!ge&&(T||x)){if(typeof fetch=="function"&&!Rg(an))return fetch(an,{credentials:"same-origin"}).then(function(M){if(!M.ok)throw"failed to load wasm binary file at '"+an+"'";return M.arrayBuffer()}).catch(function(){return Pg(an)});if(P)return new Promise(function(M,K){P(an,function(ne){M(new Uint8Array(ne))},K)})}return Promise.resolve().then(function(){return Pg(an)})}function kk(){var M={env:Zg,wasi_snapshot_preview1:Zg};function K(We,Ue){var cr=We.exports;if(p.asm=cr,Dk(p.asm._emscripten_tls_init),Yr=p.asm.__indirect_function_table,T0(p.asm.__wasm_call_ctors),ve=Ue,!k){var wn=Qe.unusedWorkers.length;Qe.unusedWorkers.forEach(function(aa){Qe.loadWasmModuleToWorker(aa,function(){--wn||C0("wasm-instantiate")})})}}k||I0("wasm-instantiate");function ne(We){K(We.instance,We.module)}function me(We){return Mg().then(function(Ue){return WebAssembly.instantiate(Ue,M)}).then(function(Ue){return Ue}).then(We,function(Ue){X("failed to asynchronously prepare wasm: "+Ue),Bp(Ue)})}function Ee(){return!ge&&typeof WebAssembly.instantiateStreaming=="function"&&!Fg(an)&&!Rg(an)&&!I&&typeof fetch=="function"?fetch(an,{credentials:"same-origin"}).then(function(We){var Ue=WebAssembly.instantiateStreaming(We,M);return Ue.then(ne,function(cr){return X("wasm streaming compile failed: "+cr),X("falling back to ArrayBuffer instantiation"),me(ne)})}):me(ne)}if(p.instantiateWasm)try{var at=p.instantiateWasm(M,K);return at}catch(We){return X("Module.instantiateWasm callback failed with error: "+We),!1}return Ee().catch(c),{}}var k0,S0,Sk={};function Op(M){this.name="ExitStatus",this.message="Program terminated with exit("+M+")",this.status=M}function Eg(M){var K=Qe.pthreads[M];delete Qe.pthreads[M],K.terminate(),JS(M),Qe.runningWorkers.splice(Qe.runningWorkers.indexOf(K),1),K.pthread_ptr=0}function vk(M){var K=Qe.pthreads[M];K.postMessage({cmd:"cancel"})}function Ak(M){var K=Qe.pthreads[M];je(K),Qe.returnWorkerToPool(K)}function Nu(M){var K=Qe.getNewWorker();if(!K)return 6;Qe.runningWorkers.push(K),Qe.pthreads[M.pthread_ptr]=K,K.pthread_ptr=M.pthread_ptr;var ne={cmd:"run",start_routine:M.startRoutine,arg:M.arg,pthread_ptr:M.pthread_ptr};return K.runPthread=()=>{ne.time=performance.now(),K.postMessage(ne,M.transferList)},K.loaded&&(K.runPthread(),delete K.runPthread),0}var Lg={varargs:void 0,get:function(){Lg.varargs+=4;var M=a()[Lg.varargs-4>>2];return M},getStr:function(M){var K=lt(M);return K}};function wk(M){if(k)return Du(1,1,M);Re=M,ls()||(Qe.terminateAllThreads(),p.onExit&&p.onExit(M),De=!0),b(M,new Op(M))}function _g(M,K){if(Re=M,!K&&k)throw Og(M),"unwind";wk(M)}var Gf=_g;function v0(M){if(M instanceof Op||M=="unwind")return Re;b(1,M)}var Qe={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){k?Qe.initWorker():Qe.initMainThread()},initMainThread:function(){for(var M=8;M--;)Qe.allocateUnusedWorker()},initWorker:function(){fe=!1},setExitStatus:function(M){Re=M},terminateAllThreads:function(){for(var M of Object.values(Qe.pthreads))Qe.returnWorkerToPool(M);for(var M of Qe.unusedWorkers)M.terminate();Qe.unusedWorkers=[]},returnWorkerToPool:function(M){var K=M.pthread_ptr;delete Qe.pthreads[K],Qe.unusedWorkers.push(M),Qe.runningWorkers.splice(Qe.runningWorkers.indexOf(M),1),M.pthread_ptr=0,JS(K)},receiveObjectTransfer:function(M){},threadInitTLS:function(){Qe.tlsInitFunctions.forEach(M=>M())},loadWasmModuleToWorker:function(M,K){M.onmessage=ne=>{var me=ne.data,Ee=me.cmd;if(M.pthread_ptr&&(Qe.currentProxiedOperationCallerThread=M.pthread_ptr),me.targetThread&&me.targetThread!=nb()){var at=Qe.pthreads[me.targetThread];at?at.postMessage(me,me.transferList):X('Internal error! Worker sent a message "'+Ee+'" to target pthread '+me.targetThread+", but that thread no longer exists!"),Qe.currentProxiedOperationCallerThread=void 0;return}Ee==="processProxyingQueue"?Wf(me.queue):Ee==="spawnThread"?Nu(me):Ee==="cleanupThread"?Ak(me.thread):Ee==="killThread"?Eg(me.thread):Ee==="cancelThread"?vk(me.thread):Ee==="loaded"?(M.loaded=!0,K&&K(M),M.runPthread&&(M.runPthread(),delete M.runPthread)):Ee==="print"?j("Thread "+me.threadId+": "+me.text):Ee==="printErr"?X("Thread "+me.threadId+": "+me.text):Ee==="alert"?alert("Thread "+me.threadId+": "+me.text):me.target==="setimmediate"?M.postMessage(me):Ee==="onAbort"?p.onAbort&&p.onAbort(me.arg):Ee&&X("worker sent an unknown command "+Ee),Qe.currentProxiedOperationCallerThread=void 0},M.onerror=ne=>{var me="worker sent an error!";throw X(me+" "+ne.filename+":"+ne.lineno+": "+ne.message),ne},I&&(M.on("message",function(ne){M.onmessage({data:ne})}),M.on("error",function(ne){M.onerror(ne)}),M.on("detachedExit",function(){})),M.postMessage({cmd:"load",urlOrBlob:p.mainScriptUrlOrBlob||r,wasmMemory:ue,wasmModule:ve})},allocateUnusedWorker:function(){var M=F("tfjs-backend-wasm-threaded-simd.worker.js");Qe.unusedWorkers.push(new Worker(M))},getNewWorker:function(){return Qe.unusedWorkers.length==0&&(Qe.allocateUnusedWorker(),Qe.loadWasmModuleToWorker(Qe.unusedWorkers[0])),Qe.unusedWorkers.pop()}};p.PThread=Qe;function $g(M){for(;M.length>0;)M.shift()(p)}function A0(M){var K=ev(),ne=M();return ob(K),ne}function pj(M){return M}function Uf(M){var K=/\b_Z[\w\d_]+/g;return M.replace(K,function(ne){var me=ne;return ne===me?ne:me+" ["+ne+"]"})}function Bg(){var M=nb(),K=a()[M+44>>2],ne=a()[M+48>>2],me=K-ne;z0(K,me),ob(K)}p.establishStackSpace=Bg;function Og(M){if(k)return Du(2,0,M);try{Gf(M)}catch(K){v0(K)}}var zp=[];function Nk(M){var K=zp[M];return K||(M>=zp.length&&(zp.length=M+1),zp[M]=K=Yr.get(M)),K}function zg(M,K){var ne=Nk(M)(K);ls()?Qe.setExitStatus(ne):O0(ne)}p.invokeEntryPoint=zg;function lj(){var M=new Error;if(!M.stack){try{throw new Error}catch(K){M=K}if(!M.stack)return"(no stack trace available)"}return M.stack.toString()}function Dk(M){Qe.tlsInitFunctions.push(M)}function Fk(M,K){e().set(M,K)}function Rk(M){_0(M,!x,1,!T),Qe.threadInitTLS()}function Pk(M){k?postMessage({cmd:"cleanupThread",thread:M}):Ak(M)}function Gg(M,K,ne,me){return k?Du(3,1,M,K,ne,me):Ug(M,K,ne,me)}function Ug(M,K,ne,me){if(typeof SharedArrayBuffer>"u")return X("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Ee=[],at=0;if(k&&(Ee.length===0||at))return Gg(M,K,ne,me);if(at)return at;var We={startRoutine:ne,pthread_ptr:M,arg:me,transferList:Ee};return k?(We.cmd="spawnThread",postMessage(We,Ee),0):Nu(We)}function Mk(){return Date.now()}function Ek(){return 2097152}var Lk=!0;function _k(){return Lk}function Wf(M){Atomics.store(a(),M>>2,1),nb()&&B0(M),Atomics.compareExchange(a(),M>>2,1,0)}p.executeNotifiedProxyingQueue=Wf;function $k(M,K,ne,me){if(M==K)setTimeout(()=>Wf(me));else if(k)postMessage({targetThread:M,cmd:"processProxyingQueue",queue:me});else{var Ee=Qe.pthreads[M];if(!Ee)return;Ee.postMessage({cmd:"processProxyingQueue",queue:me})}return 1}function Bk(M,K,ne){return-1}function Ok(){Bp("")}function Gp(M){Gp.shown||(Gp.shown={}),Gp.shown[M]||(Gp.shown[M]=1,I&&(M="warning: "+M),X(M))}function zk(){I||x||Gp("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Wg(){return 2147483648}function Gk(){return Wg()}var lm;I?lm=()=>{var M=process.hrtime();return M[0]*1e3+M[1]/1e6}:k?lm=()=>performance.now()-p.__performance_now_clock_drift:lm=()=>performance.now();function Uk(M,K,ne){n().copyWithin(M,K,K+ne)}function Wk(){return I?Jq().cpus().length:navigator.hardwareConcurrency}function Du(M,K){var ne=arguments.length-2,me=arguments;return A0(()=>{for(var Ee=ne,at=sb(Ee*8),We=at>>3,Ue=0;Ue<ne;Ue++){var cr=me[2+Ue];l()[We+Ue]=cr}return $0(M,Ee,at,K)})}var Kf=[];function Kk(M,K,ne){Kf.length=K;for(var me=ne>>3,Ee=0;Ee<K;Ee++)Kf[Ee]=l()[me+Ee];var at=M<0,We=at?Sk[-M-1]:Jk[M];return We.apply(null,Kf)}function Vk(M){try{return ue.grow(M-st.byteLength+65535>>>16),lr(ue.buffer),1}catch{}}function Hk(M){var K=n().length;if(M=M>>>0,M<=K)return!1;var ne=Wg();if(M>ne)return!1;let me=(cr,wn)=>cr+(wn-cr%wn)%wn;for(var Ee=1;Ee<=4;Ee*=2){var at=K*(1+.2/Ee);at=Math.min(at,M+100663296);var We=Math.min(ne,me(Math.max(M,at),65536)),Ue=Vk(We);if(Ue)return!0}return!1}function qk(){throw"unwind"}function Kg(M){return k?Du(4,1,M):52}function Vg(M,K,ne,me,Ee){return k?Du(5,1,M,K,ne,me,Ee):70}var jk=[null,[],[]];function Xk(M,K){var ne=jk[M];K===0||K===10?((M===1?j:X)(bt(ne,0)),ne.length=0):ne.push(K)}function Hg(M,K,ne,me){if(k)return Du(6,1,M,K,ne,me);for(var Ee=0,at=0;at<ne;at++){var We=i()[K>>2],Ue=i()[K+4>>2];K+=8;for(var cr=0;cr<Ue;cr++)Xk(M,n()[We+cr]);Ee+=Ue}return i()[me>>2]=Ee,0}function qg(M,K){M<128?K.push(M):K.push(M%128|128,M>>7)}function Yk(M){for(var K={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},ne={parameters:[],results:M[0]=="v"?[]:[K[M[0]]]},me=1;me<M.length;++me)ne.parameters.push(K[M[me]]);return ne}function w0(M,K){if(typeof WebAssembly.Function=="function")return new WebAssembly.Function(Yk(K),M);var ne=[1,96],me=K.slice(0,1),Ee=K.slice(1),at={i:127,p:127,j:126,f:125,d:124};qg(Ee.length,ne);for(var We=0;We<Ee.length;++We)ne.push(at[Ee[We]]);me=="v"?ne.push(0):ne.push(1,at[me]);var Ue=[0,97,115,109,1,0,0,0,1];qg(ne.length,Ue),Ue.push.apply(Ue,ne),Ue.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var cr=new WebAssembly.Module(new Uint8Array(Ue)),wn=new WebAssembly.Instance(cr,{e:{f:M}}),aa=wn.exports.f;return aa}function N0(M,K){if(jg)for(var ne=M;ne<M+K;ne++){var me=Nk(ne);me&&jg.set(me,ne)}}var jg=void 0,Xg=[];function D0(){if(Xg.length)return Xg.pop();try{Yr.grow(1)}catch(M){throw M instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":M}return Yr.length-1}function F0(M,K){Yr.set(M,K),zp[M]=Yr.get(M)}var R0=1;function P0(M,K,ne){for(var me=0;me<M.length;++me)e()[K++>>0]=M.charCodeAt(me);ne||(e()[K>>0]=0)}var M0=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function Yg(M){var K=p["_"+M];return K}function Zk(M,K,ne,me,Ee){var at={string:Gn=>{var fm=0;if(Gn!=null&&Gn!==0){var W0=(Gn.length<<2)+1;fm=sb(W0),Mt(Gn,fm,W0)}return fm},array:Gn=>{var fm=sb(Gn.length);return Fk(Gn,fm),fm}};function We(Gn){return K==="string"?lt(Gn):K==="boolean"?Boolean(Gn):Gn}var Ue=Yg(M),cr=[],wn=0;if(me)for(var aa=0;aa<me.length;aa++){var U0=at[ne[aa]];U0?(wn===0&&(wn=ev()),cr[aa]=U0(me[aa])):cr[aa]=me[aa]}var tv=Ue.apply(null,cr);function Uj(Gn){return wn!==0&&ob(wn),We(Gn)}return tv=Uj(tv),tv}function Qk(M,K,ne,me){ne=ne||[];var Ee=ne.every(We=>We==="number"||We==="boolean"),at=K!=="string";return at&&Ee&&!me?Yg(M):function(){return Zk(M,K,ne,arguments,me)}}Qe.init();var Jk=[null,wk,Og,Gg,Kg,Vg,Hg],E0=!1,Zg={__emscripten_init_main_thread_js:Rk,__emscripten_thread_cleanup:Pk,__pthread_create_js:Ug,_emscripten_date_now:Mk,_emscripten_default_pthread_stack_size:Ek,_emscripten_get_now_is_monotonic:_k,_emscripten_notify_task_queue:$k,_emscripten_set_offscreencanvas_size:Bk,abort:Ok,emscripten_check_blocking_allowed:zk,emscripten_get_heap_max:Gk,emscripten_get_now:lm,emscripten_memcpy_big:Uk,emscripten_num_logical_cores:Wk,emscripten_receive_on_main_thread_js:Kk,emscripten_resize_heap:Hk,emscripten_unwind_to_js_event_loop:qk,exit:Gf,fd_close:Kg,fd_seek:Vg,fd_write:Hg,memory:ue||p.wasmMemory},L0=kk(),eS=p.___wasm_call_ctors=function(){return(eS=p.___wasm_call_ctors=p.asm.__wasm_call_ctors).apply(null,arguments)},tS=p._init=function(){return(tS=p._init=p.asm.init).apply(null,arguments)},rS=p._init_with_threads_count=function(){return(rS=p._init_with_threads_count=p.asm.init_with_threads_count).apply(null,arguments)},nS=p._get_threads_count=function(){return(nS=p._get_threads_count=p.asm.get_threads_count).apply(null,arguments)},oS=p._register_tensor=function(){return(oS=p._register_tensor=p.asm.register_tensor).apply(null,arguments)},sS=p._dispose_data=function(){return(sS=p._dispose_data=p.asm.dispose_data).apply(null,arguments)},aS=p._dispose=function(){return(aS=p._dispose=p.asm.dispose).apply(null,arguments)},iS=p._Abs=function(){return(iS=p._Abs=p.asm.Abs).apply(null,arguments)},uS=p._Add=function(){return(uS=p._Add=p.asm.Add).apply(null,arguments)},pS=p._AddN=function(){return(pS=p._AddN=p.asm.AddN).apply(null,arguments)},lS=p._All=function(){return(lS=p._All=p.asm.All).apply(null,arguments)},mS=p._Any=function(){return(mS=p._Any=p.asm.Any).apply(null,arguments)},cS=p._ArgMax=function(){return(cS=p._ArgMax=p.asm.ArgMax).apply(null,arguments)},dS=p._AvgPool=function(){return(dS=p._AvgPool=p.asm.AvgPool).apply(null,arguments)},fS=p._BatchMatMul=function(){return(fS=p._BatchMatMul=p.asm.BatchMatMul).apply(null,arguments)},hS=p._Ceil=function(){return(hS=p._Ceil=p.asm.Ceil).apply(null,arguments)},gS=p._ClipByValue=function(){return(gS=p._ClipByValue=p.asm.ClipByValue).apply(null,arguments)},bS=p._Conv2D=function(){return(bS=p._Conv2D=p.asm.Conv2D).apply(null,arguments)},yS=p._Conv2DBackpropInput=function(){return(yS=p._Conv2DBackpropInput=p.asm.Conv2DBackpropInput).apply(null,arguments)},TS=p._Cos=function(){return(TS=p._Cos=p.asm.Cos).apply(null,arguments)},xS=p._Cosh=function(){return(xS=p._Cosh=p.asm.Cosh).apply(null,arguments)},IS=p._CropAndResize=function(){return(IS=p._CropAndResize=p.asm.CropAndResize).apply(null,arguments)},CS=p._Cumprod=function(){return(CS=p._Cumprod=p.asm.Cumprod).apply(null,arguments)},kS=p._Cumsum=function(){return(kS=p._Cumsum=p.asm.Cumsum).apply(null,arguments)},SS=p._DepthToSpace=function(){return(SS=p._DepthToSpace=p.asm.DepthToSpace).apply(null,arguments)},vS=p._DepthwiseConv2dNative=function(){return(vS=p._DepthwiseConv2dNative=p.asm.DepthwiseConv2dNative).apply(null,arguments)},AS=p._Elu=function(){return(AS=p._Elu=p.asm.Elu).apply(null,arguments)},wS=p._Equal=function(){return(wS=p._Equal=p.asm.Equal).apply(null,arguments)},NS=p._Exp=function(){return(NS=p._Exp=p.asm.Exp).apply(null,arguments)},DS=p._FlipLeftRight=function(){return(DS=p._FlipLeftRight=p.asm.FlipLeftRight).apply(null,arguments)},FS=p._Floor=function(){return(FS=p._Floor=p.asm.Floor).apply(null,arguments)},RS=p._FloorDiv=function(){return(RS=p._FloorDiv=p.asm.FloorDiv).apply(null,arguments)},PS=p._FusedBatchNorm=function(){return(PS=p._FusedBatchNorm=p.asm.FusedBatchNorm).apply(null,arguments)},MS=p._FusedConv2D=function(){return(MS=p._FusedConv2D=p.asm.FusedConv2D).apply(null,arguments)},ES=p._FusedDepthwiseConv2D=function(){return(ES=p._FusedDepthwiseConv2D=p.asm.FusedDepthwiseConv2D).apply(null,arguments)},LS=p._Gather=function(){return(LS=p._Gather=p.asm.Gather).apply(null,arguments)},_S=p._GatherNd=function(){return(_S=p._GatherNd=p.asm.GatherNd).apply(null,arguments)},$S=p._Greater=function(){return($S=p._Greater=p.asm.Greater).apply(null,arguments)},BS=p._GreaterEqual=function(){return(BS=p._GreaterEqual=p.asm.GreaterEqual).apply(null,arguments)},OS=p._LeakyRelu=function(){return(OS=p._LeakyRelu=p.asm.LeakyRelu).apply(null,arguments)},zS=p._Less=function(){return(zS=p._Less=p.asm.Less).apply(null,arguments)},GS=p._LessEqual=function(){return(GS=p._LessEqual=p.asm.LessEqual).apply(null,arguments)},US=p._Log=function(){return(US=p._Log=p.asm.Log).apply(null,arguments)},WS=p._LogicalAnd=function(){return(WS=p._LogicalAnd=p.asm.LogicalAnd).apply(null,arguments)},KS=p._LogicalNot=function(){return(KS=p._LogicalNot=p.asm.LogicalNot).apply(null,arguments)},VS=p._LogicalOr=function(){return(VS=p._LogicalOr=p.asm.LogicalOr).apply(null,arguments)},HS=p._LogicalXor=function(){return(HS=p._LogicalXor=p.asm.LogicalXor).apply(null,arguments)},qS=p._Max=function(){return(qS=p._Max=p.asm.Max).apply(null,arguments)},jS=p._MaxPool=function(){return(jS=p._MaxPool=p.asm.MaxPool).apply(null,arguments)},Qg=p._Maximum=function(){return(Qg=p._Maximum=p.asm.Maximum).apply(null,arguments)},Jg=p._Mean=function(){return(Jg=p._Mean=p.asm.Mean).apply(null,arguments)},Vf=p._Min=function(){return(Vf=p._Min=p.asm.Min).apply(null,arguments)},XS=p._Minimum=function(){return(XS=p._Minimum=p.asm.Minimum).apply(null,arguments)},YS=p._MirrorPad=function(){return(YS=p._MirrorPad=p.asm.MirrorPad).apply(null,arguments)},mm=p._Multiply=function(){return(mm=p._Multiply=p.asm.Multiply).apply(null,arguments)},eb=p._Neg=function(){return(eb=p._Neg=p.asm.Neg).apply(null,arguments)},cm=p._NonMaxSuppressionV3=function(){return(cm=p._NonMaxSuppressionV3=p.asm.NonMaxSuppressionV3).apply(null,arguments)},dm=p._NonMaxSuppressionV4=function(){return(dm=p._NonMaxSuppressionV4=p.asm.NonMaxSuppressionV4).apply(null,arguments)},ZS=p._NonMaxSuppressionV5=function(){return(ZS=p._NonMaxSuppressionV5=p.asm.NonMaxSuppressionV5).apply(null,arguments)},U=p._NotEqual=function(){return(U=p._NotEqual=p.asm.NotEqual).apply(null,arguments)},J=p._OneHot=function(){return(J=p._OneHot=p.asm.OneHot).apply(null,arguments)},Te=p._PadV2=function(){return(Te=p._PadV2=p.asm.PadV2).apply(null,arguments)},Le=p._Pow=function(){return(Le=p._Pow=p.asm.Pow).apply(null,arguments)},Lt=p._Prelu=function(){return(Lt=p._Prelu=p.asm.Prelu).apply(null,arguments)},Bt=p._Prod=function(){return(Bt=p._Prod=p.asm.Prod).apply(null,arguments)},nt=p._RealDiv=function(){return(nt=p._RealDiv=p.asm.RealDiv).apply(null,arguments)},Xe=p._Relu=function(){return(Xe=p._Relu=p.asm.Relu).apply(null,arguments)},mr=p._Relu6=function(){return(mr=p._Relu6=p.asm.Relu6).apply(null,arguments)},An=p._ResizeBilinear=function(){return(An=p._ResizeBilinear=p.asm.ResizeBilinear).apply(null,arguments)},sa=p._ResizeNearestNeighbor=function(){return(sa=p._ResizeNearestNeighbor=p.asm.ResizeNearestNeighbor).apply(null,arguments)},tb=p._Reverse=function(){return(tb=p._Reverse=p.asm.Reverse).apply(null,arguments)},Hf=p._RotateWithOffset=function(){return(Hf=p._RotateWithOffset=p.asm.RotateWithOffset).apply(null,arguments)},QS=p._Round=function(){return(QS=p._Round=p.asm.Round).apply(null,arguments)},un=p._Rsqrt=function(){return(un=p._Rsqrt=p.asm.Rsqrt).apply(null,arguments)},Fu=p._ScatterNd=function(){return(Fu=p._ScatterNd=p.asm.ScatterNd).apply(null,arguments)},rb=p._SelectV2=function(){return(rb=p._SelectV2=p.asm.SelectV2).apply(null,arguments)},mj=p._Sigmoid=function(){return(mj=p._Sigmoid=p.asm.Sigmoid).apply(null,arguments)},cj=p._Sin=function(){return(cj=p._Sin=p.asm.Sin).apply(null,arguments)},dj=p._Softmax=function(){return(dj=p._Softmax=p.asm.Softmax).apply(null,arguments)},fj=p._SparseFillEmptyRows=function(){return(fj=p._SparseFillEmptyRows=p.asm.SparseFillEmptyRows).apply(null,arguments)},hj=p._SparseReshape=function(){return(hj=p._SparseReshape=p.asm.SparseReshape).apply(null,arguments)},gj=p._SparseSegmentReduction=function(){return(gj=p._SparseSegmentReduction=p.asm.SparseSegmentReduction).apply(null,arguments)},bj=p._Sqrt=function(){return(bj=p._Sqrt=p.asm.Sqrt).apply(null,arguments)},yj=p._Square=function(){return(yj=p._Square=p.asm.Square).apply(null,arguments)},Tj=p._SquaredDifference=function(){return(Tj=p._SquaredDifference=p.asm.SquaredDifference).apply(null,arguments)},xj=p._Step=function(){return(xj=p._Step=p.asm.Step).apply(null,arguments)},Ij=p._StridedSlice=function(){return(Ij=p._StridedSlice=p.asm.StridedSlice).apply(null,arguments)},Cj=p._Sub=function(){return(Cj=p._Sub=p.asm.Sub).apply(null,arguments)},kj=p._Sum=function(){return(kj=p._Sum=p.asm.Sum).apply(null,arguments)},Sj=p._Tan=function(){return(Sj=p._Tan=p.asm.Tan).apply(null,arguments)},vj=p._Tanh=function(){return(vj=p._Tanh=p.asm.Tanh).apply(null,arguments)},Aj=p._Tile=function(){return(Aj=p._Tile=p.asm.Tile).apply(null,arguments)},wj=p._TopK=function(){return(wj=p._TopK=p.asm.TopK).apply(null,arguments)},Nj=p._Transform=function(){return(Nj=p._Transform=p.asm.Transform).apply(null,arguments)},Dj=p._Transpose=function(){return(Dj=p._Transpose=p.asm.Transpose).apply(null,arguments)},Fj=p.__FusedMatMul=function(){return(Fj=p.__FusedMatMul=p.asm._FusedMatMul).apply(null,arguments)},Rj=p._malloc=function(){return(Rj=p._malloc=p.asm.malloc).apply(null,arguments)},Pj=p._free=function(){return(Pj=p._free=p.asm.free).apply(null,arguments)},Mj=p.__emscripten_tls_init=function(){return(Mj=p.__emscripten_tls_init=p.asm._emscripten_tls_init).apply(null,arguments)},nb=p._pthread_self=function(){return(nb=p._pthread_self=p.asm.pthread_self).apply(null,arguments)},Ej=p.___errno_location=function(){return(Ej=p.___errno_location=p.asm.__errno_location).apply(null,arguments)},_0=p.__emscripten_thread_init=function(){return(_0=p.__emscripten_thread_init=p.asm._emscripten_thread_init).apply(null,arguments)},Lj=p.__emscripten_thread_crashed=function(){return(Lj=p.__emscripten_thread_crashed=p.asm._emscripten_thread_crashed).apply(null,arguments)},_j=p._emscripten_main_thread_process_queued_calls=function(){return(_j=p._emscripten_main_thread_process_queued_calls=p.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},$j=p._emscripten_main_browser_thread_id=function(){return($j=p._emscripten_main_browser_thread_id=p.asm.emscripten_main_browser_thread_id).apply(null,arguments)},$0=p._emscripten_run_in_main_runtime_thread_js=function(){return($0=p._emscripten_run_in_main_runtime_thread_js=p.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},Bj=p._emscripten_dispatch_to_thread_=function(){return(Bj=p._emscripten_dispatch_to_thread_=p.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},B0=p.__emscripten_proxy_execute_task_queue=function(){return(B0=p.__emscripten_proxy_execute_task_queue=p.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},JS=p.__emscripten_thread_free_data=function(){return(JS=p.__emscripten_thread_free_data=p.asm._emscripten_thread_free_data).apply(null,arguments)},O0=p.__emscripten_thread_exit=function(){return(O0=p.__emscripten_thread_exit=p.asm._emscripten_thread_exit).apply(null,arguments)},z0=p._emscripten_stack_set_limits=function(){return(z0=p._emscripten_stack_set_limits=p.asm.emscripten_stack_set_limits).apply(null,arguments)},ev=p.stackSave=function(){return(ev=p.stackSave=p.asm.stackSave).apply(null,arguments)},ob=p.stackRestore=function(){return(ob=p.stackRestore=p.asm.stackRestore).apply(null,arguments)},sb=p.stackAlloc=function(){return(sb=p.stackAlloc=p.asm.stackAlloc).apply(null,arguments)},Oj=p.dynCall_iijjiiii=function(){return(Oj=p.dynCall_iijjiiii=p.asm.dynCall_iijjiiii).apply(null,arguments)},zj=p.dynCall_jiji=function(){return(zj=p.dynCall_jiji=p.asm.dynCall_jiji).apply(null,arguments)};p.keepRuntimeAlive=ls,p.wasmMemory=ue,p.cwrap=Qk,p.ExitStatus=Op,p.PThread=Qe;var ab;pm=function M(){ab||G0(),ab||(pm=M)};function G0(M){if(M=M||h,ui>0)return;if(k){m(p),_p(),postMessage({cmd:"loaded"});return}if(Or(),ui>0)return;function K(){ab||(ab=!0,p.calledRun=!0,!De&&(_p(),m(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),xk()))}p.setStatus?(p.setStatus("Running..."),setTimeout(function(){setTimeout(function(){p.setStatus("")},1),K()},1)):K()}if(p.preInit)for(typeof p.preInit=="function"&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();G0();var ib;d&&(ib={uncaughtException:process.listeners("uncaughtException").filter(function(M){return!d.uncaughtException.indexOf(M)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(M){return!d.unhandledRejection.indexOf(M)>-1})});var ub;if(typeof WasmBackendModule<"u")ub=WasmBackendModule;else if(typeof t<"u")ub=t;else throw new Error("Could not find wasm module in post.js");if(ib){var Gj=ub._dispose;ub._dispose=function(){Gj(),ib.uncaughtException.forEach(function(M){process.removeListener("uncaughtException",M)}),ib.unhandledRejection.forEach(function(M){process.removeListener("unhandledRejection",M)})}}return t.ready}})();typeof bk=="object"&&typeof i0=="object"?i0.exports=a0:typeof define=="function"&&define.amd?define([],function(){return a0}):typeof bk=="object"&&(bk.WasmBackendModuleThreadedSimd=a0)});var nj=Rr((yk,f0)=>{"use strict";var d0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(t){t=t||{};var e=typeof t<"u"?t:{},n,o;e.ready=new Promise(function(U,J){n=U,o=J});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var a=Object.assign({},e),i=[],u="./this.program",l=(U,J)=>{throw J},p=typeof window=="object",m=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d="";function f(U){return e.locateFile?e.locateFile(U,d):d+U}var h,g,b,T;function x(U){if(U instanceof ui)return;R("exiting due to exception: "+U)}var I,k,A;c?(m?d=vg().dirname(d)+"/":d=__dirname+"/",A=()=>{k||(I=jh(),k=vg())},h=function(J,Te){return A(),J=k.normalize(J),I.readFileSync(J,Te?void 0:"utf8")},b=U=>{var J=h(U,!0);return J.buffer||(J=new Uint8Array(J)),J},g=(U,J,Te)=>{A(),U=k.normalize(U),I.readFile(U,function(Le,Lt){Le?Te(Le):J(Lt.buffer)})},process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(U){if(!(U instanceof ui))throw U}),process.on("unhandledRejection",function(U){throw U}),l=(U,J)=>{if(Vt())throw process.exitCode=U,J;x(J),process.exit(U)},e.inspect=function(){return"[Emscripten Module object]"}):(p||m)&&(m?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):d="",h=U=>{var J=new XMLHttpRequest;return J.open("GET",U,!1),J.send(null),J.responseText},m&&(b=U=>{var J=new XMLHttpRequest;return J.open("GET",U,!1),J.responseType="arraybuffer",J.send(null),new Uint8Array(J.response)}),g=(U,J,Te)=>{var Le=new XMLHttpRequest;Le.open("GET",U,!0),Le.responseType="arraybuffer",Le.onload=()=>{if(Le.status==200||Le.status==0&&Le.response){J(Le.response);return}Te()},Le.onerror=Te,Le.send(null)},T=U=>document.title=U);var F=e.print||console.log.bind(console),R=e.printErr||console.warn.bind(console);Object.assign(e,a),a=null,e.arguments&&(i=e.arguments),e.thisProgram&&(u=e.thisProgram),e.quit&&(l=e.quit);var P=4,L;e.wasmBinary&&(L=e.wasmBinary);var O=e.noExitRuntime||!0;typeof WebAssembly!="object"&&ps("no native wasm support detected");var G,W=!1,H;function V(U,J){U||ps(J)}var q=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Z(U,J,Te){for(var Le=J+Te,Lt=J;U[Lt]&&!(Lt>=Le);)++Lt;if(Lt-J>16&&U.buffer&&q)return q.decode(U.subarray(J,Lt));for(var Bt="";J<Lt;){var nt=U[J++];if(!(nt&128)){Bt+=String.fromCharCode(nt);continue}var Xe=U[J++]&63;if((nt&224)==192){Bt+=String.fromCharCode((nt&31)<<6|Xe);continue}var mr=U[J++]&63;if((nt&240)==224?nt=(nt&15)<<12|Xe<<6|mr:nt=(nt&7)<<18|Xe<<12|mr<<6|U[J++]&63,nt<65536)Bt+=String.fromCharCode(nt);else{var An=nt-65536;Bt+=String.fromCharCode(55296|An>>10,56320|An&1023)}}return Bt}function j(U,J){return U?Z(ge,U,J):""}function X(U,J,Te,Le){if(!(Le>0))return 0;for(var Lt=Te,Bt=Te+Le-1,nt=0;nt<U.length;++nt){var Xe=U.charCodeAt(nt);if(Xe>=55296&&Xe<=57343){var mr=U.charCodeAt(++nt);Xe=65536+((Xe&1023)<<10)|mr&1023}if(Xe<=127){if(Te>=Bt)break;J[Te++]=Xe}else if(Xe<=2047){if(Te+1>=Bt)break;J[Te++]=192|Xe>>6,J[Te++]=128|Xe&63}else if(Xe<=65535){if(Te+2>=Bt)break;J[Te++]=224|Xe>>12,J[Te++]=128|Xe>>6&63,J[Te++]=128|Xe&63}else{if(Te+3>=Bt)break;J[Te++]=240|Xe>>18,J[Te++]=128|Xe>>12&63,J[Te++]=128|Xe>>6&63,J[Te++]=128|Xe&63}}return J[Te]=0,Te-Lt}function se(U,J,Te){return X(U,ge,J,Te)}function ae(U){for(var J=0,Te=0;Te<U.length;++Te){var Le=U.charCodeAt(Te);Le<=127?J++:Le<=2047?J+=2:Le>=55296&&Le<=57343?(J+=4,++Te):J+=3}return J}var pe,oe,ge,fe,ue,ve,De,Re,je;function Q(U){pe=U,e.HEAP8=oe=new Int8Array(U),e.HEAP16=fe=new Int16Array(U),e.HEAP32=ve=new Int32Array(U),e.HEAPU8=ge=new Uint8Array(U),e.HEAPU16=ue=new Uint16Array(U),e.HEAPU32=De=new Uint32Array(U),e.HEAPF32=Re=new Float32Array(U),e.HEAPF64=je=new Float64Array(U)}var bt=e.INITIAL_MEMORY||16777216,lt,Dt=[],Mt=[],Tt=[],st=!1;function Vt(){return O}function zn(){if(e.preRun)for(typeof e.preRun=="function"&&(e.preRun=[e.preRun]);e.preRun.length;)Br(e.preRun.shift());$p(Dt)}function pr(){st=!0,$p(Mt)}function to(){if(e.postRun)for(typeof e.postRun=="function"&&(e.postRun=[e.postRun]);e.postRun.length;)sn(e.postRun.shift());$p(Tt)}function Br(U){Dt.unshift(U)}function us(U){Mt.unshift(U)}function sn(U){Tt.unshift(U)}var vr=0,lr=null,Xr=null;function Yr(U){vr++,e.monitorRunDependencies&&e.monitorRunDependencies(vr)}function ii(U){if(vr--,e.monitorRunDependencies&&e.monitorRunDependencies(vr),vr==0&&(lr!==null&&(clearInterval(lr),lr=null),Xr)){var J=Xr;Xr=null,J()}}function ps(U){e.onAbort&&e.onAbort(U),U="Aborted("+U+")",R(U),W=!0,H=1,U+=". Build with -sASSERTIONS for more info.";var J=new WebAssembly.RuntimeError(U);throw o(J),J}var wu="data:application/octet-stream;base64,";function um(U){return U.startsWith(wu)}function ls(U){return U.startsWith("file://")}var Or;Or="tfjs-backend-wasm.wasm",um(Or)||(Or=f(Or));function _p(U){try{if(U==Or&&L)return new Uint8Array(L);if(b)return b(U);throw"both async and sync fetching of the wasm failed"}catch(J){ps(J)}}function xk(){if(!L&&(p||m)){if(typeof fetch=="function"&&!ls(Or))return fetch(Or,{credentials:"same-origin"}).then(function(U){if(!U.ok)throw"failed to load wasm binary file at '"+Or+"'";return U.arrayBuffer()}).catch(function(){return _p(Or)});if(g)return new Promise(function(U,J){g(Or,function(Te){U(new Uint8Array(Te))},J)})}return Promise.resolve().then(function(){return _p(Or)})}function Ik(){var U={env:zg,wasi_snapshot_preview1:zg};function J(nt,Xe){var mr=nt.exports;e.asm=mr,G=e.asm.memory,Q(G.buffer),lt=e.asm.__indirect_function_table,us(e.asm.__wasm_call_ctors),ii("wasm-instantiate")}Yr("wasm-instantiate");function Te(nt){J(nt.instance)}function Le(nt){return xk().then(function(Xe){return WebAssembly.instantiate(Xe,U)}).then(function(Xe){return Xe}).then(nt,function(Xe){R("failed to asynchronously prepare wasm: "+Xe),ps(Xe)})}function Lt(){return!L&&typeof WebAssembly.instantiateStreaming=="function"&&!um(Or)&&!ls(Or)&&!c&&typeof fetch=="function"?fetch(Or,{credentials:"same-origin"}).then(function(nt){var Xe=WebAssembly.instantiateStreaming(nt,U);return Xe.then(Te,function(mr){return R("wasm streaming compile failed: "+mr),R("falling back to ArrayBuffer instantiation"),Le(Te)})}):Le(Te)}if(e.instantiateWasm)try{var Bt=e.instantiateWasm(U,J);return Bt}catch(nt){return R("Module.instantiateWasm callback failed with error: "+nt),!1}return Lt().catch(o),{}}var T0,x0;function ui(U){this.name="ExitStatus",this.message="Program terminated with exit("+U+")",this.status=U}function $p(U){for(;U.length>0;)U.shift()(e)}function pm(U){return U}function I0(U){var J=/\b_Z[\w\d_]+/g;return U.replace(J,function(Te){var Le=Te;return Te===Le?Te:Le+" ["+Te+"]"})}function C0(){var U=new Error;if(!U.stack){try{throw new Error}catch(J){U=J}if(!U.stack)return"(no stack trace available)"}return U.stack.toString()}function Bp(U,J){oe.set(U,J)}function Ck(){ps("")}function Fg(U,J,Te){ge.copyWithin(U,J,J+Te)}function Rg(){return 2147483648}function an(U){try{return G.grow(U-pe.byteLength+65535>>>16),Q(G.buffer),1}catch{}}function Pg(U){var J=ge.length;U=U>>>0;var Te=Rg();if(U>Te)return!1;let Le=(mr,An)=>mr+(An-mr%An)%An;for(var Lt=1;Lt<=4;Lt*=2){var Bt=J*(1+.2/Lt);Bt=Math.min(Bt,U+100663296);var nt=Math.min(Te,Le(Math.max(U,Bt),65536)),Xe=an(nt);if(Xe)return!0}return!1}var Mg={varargs:void 0,get:function(){Mg.varargs+=4;var U=ve[Mg.varargs-4>>2];return U},getStr:function(U){var J=j(U);return J}};function kk(U){return 52}function k0(U,J,Te,Le,Lt){return 70}var S0=[null,[],[]];function Sk(U,J){var Te=S0[U];J===0||J===10?((U===1?F:R)(Z(Te,0)),Te.length=0):Te.push(J)}function Op(U,J,Te,Le){for(var Lt=0,Bt=0;Bt<Te;Bt++){var nt=De[J>>2],Xe=De[J+4>>2];J+=8;for(var mr=0;mr<Xe;mr++)Sk(U,ge[nt+mr]);Lt+=Xe}return De[Le>>2]=Lt,0}function Eg(U,J){U<128?J.push(U):J.push(U%128|128,U>>7)}function vk(U){for(var J={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},Te={parameters:[],results:U[0]=="v"?[]:[J[U[0]]]},Le=1;Le<U.length;++Le)Te.parameters.push(J[U[Le]]);return Te}function Ak(U,J){if(typeof WebAssembly.Function=="function")return new WebAssembly.Function(vk(J),U);var Te=[1,96],Le=J.slice(0,1),Lt=J.slice(1),Bt={i:127,p:127,j:126,f:125,d:124};Eg(Lt.length,Te);for(var nt=0;nt<Lt.length;++nt)Te.push(Bt[Lt[nt]]);Le=="v"?Te.push(0):Te.push(1,Bt[Le]);var Xe=[0,97,115,109,1,0,0,0,1];Eg(Te.length,Xe),Xe.push.apply(Xe,Te),Xe.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var mr=new WebAssembly.Module(new Uint8Array(Xe)),An=new WebAssembly.Instance(mr,{e:{f:U}}),sa=An.exports.f;return sa}var Nu=[];function Lg(U){var J=Nu[U];return J||(U>=Nu.length&&(Nu.length=U+1),Nu[U]=J=lt.get(U)),J}function wk(U,J){if(_g)for(var Te=U;Te<U+J;Te++){var Le=Lg(Te);Le&&_g.set(Le,Te)}}var _g=void 0,Gf=[];function v0(){if(Gf.length)return Gf.pop();try{lt.grow(1)}catch(U){throw U instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":U}return lt.length-1}function Qe(U,J){lt.set(U,J),Nu[U]=lt.get(U)}var $g=1;function A0(U,J,Te){for(var Le=0;Le<U.length;++Le)oe[J++>>0]=U.charCodeAt(Le);Te||(oe[J>>0]=0)}var pj=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function Uf(U){Uf.shown||(Uf.shown={}),Uf.shown[U]||(Uf.shown[U]=1,c&&(U="warning: "+U),R(U))}function Bg(U){var J=e["_"+U];return J}function Og(U,J,Te,Le,Lt){var Bt={string:un=>{var Fu=0;if(un!=null&&un!==0){var rb=(un.length<<2)+1;Fu=Vf(rb),se(un,Fu,rb)}return Fu},array:un=>{var Fu=Vf(un.length);return Bp(un,Fu),Fu}};function nt(un){return J==="string"?j(un):J==="boolean"?Boolean(un):un}var Xe=Bg(U),mr=[],An=0;if(Le)for(var sa=0;sa<Le.length;sa++){var tb=Bt[Te[sa]];tb?(An===0&&(An=Qg()),mr[sa]=tb(Le[sa])):mr[sa]=Le[sa]}var Hf=Xe.apply(null,mr);function QS(un){return An!==0&&Jg(An),nt(un)}return Hf=QS(Hf),Hf}function zp(U,J,Te,Le){Te=Te||[];var Lt=Te.every(nt=>nt==="number"||nt==="boolean"),Bt=J!=="string";return Bt&&Lt&&!Le?Bg(U):function(){return Og(U,J,Te,arguments,Le)}}var Nk=!1,zg={abort:Ck,emscripten_memcpy_big:Fg,emscripten_resize_heap:Pg,fd_close:kk,fd_seek:k0,fd_write:Op},lj=Ik(),Dk=e.___wasm_call_ctors=function(){return(Dk=e.___wasm_call_ctors=e.asm.__wasm_call_ctors).apply(null,arguments)},Fk=e._init=function(){return(Fk=e._init=e.asm.init).apply(null,arguments)},Rk=e._init_with_threads_count=function(){return(Rk=e._init_with_threads_count=e.asm.init_with_threads_count).apply(null,arguments)},Pk=e._get_threads_count=function(){return(Pk=e._get_threads_count=e.asm.get_threads_count).apply(null,arguments)},Gg=e._register_tensor=function(){return(Gg=e._register_tensor=e.asm.register_tensor).apply(null,arguments)},Ug=e._dispose_data=function(){return(Ug=e._dispose_data=e.asm.dispose_data).apply(null,arguments)},Mk=e._dispose=function(){return(Mk=e._dispose=e.asm.dispose).apply(null,arguments)},Ek=e._Abs=function(){return(Ek=e._Abs=e.asm.Abs).apply(null,arguments)},Lk=e._Add=function(){return(Lk=e._Add=e.asm.Add).apply(null,arguments)},_k=e._AddN=function(){return(_k=e._AddN=e.asm.AddN).apply(null,arguments)},Wf=e._All=function(){return(Wf=e._All=e.asm.All).apply(null,arguments)},$k=e._Any=function(){return($k=e._Any=e.asm.Any).apply(null,arguments)},Bk=e._ArgMax=function(){return(Bk=e._ArgMax=e.asm.ArgMax).apply(null,arguments)},Ok=e._AvgPool=function(){return(Ok=e._AvgPool=e.asm.AvgPool).apply(null,arguments)},Gp=e._BatchMatMul=function(){return(Gp=e._BatchMatMul=e.asm.BatchMatMul).apply(null,arguments)},zk=e._Ceil=function(){return(zk=e._Ceil=e.asm.Ceil).apply(null,arguments)},Wg=e._ClipByValue=function(){return(Wg=e._ClipByValue=e.asm.ClipByValue).apply(null,arguments)},Gk=e._Conv2D=function(){return(Gk=e._Conv2D=e.asm.Conv2D).apply(null,arguments)},lm=e._Conv2DBackpropInput=function(){return(lm=e._Conv2DBackpropInput=e.asm.Conv2DBackpropInput).apply(null,arguments)},Uk=e._Cos=function(){return(Uk=e._Cos=e.asm.Cos).apply(null,arguments)},Wk=e._Cosh=function(){return(Wk=e._Cosh=e.asm.Cosh).apply(null,arguments)},Du=e._CropAndResize=function(){return(Du=e._CropAndResize=e.asm.CropAndResize).apply(null,arguments)},Kf=e._Cumprod=function(){return(Kf=e._Cumprod=e.asm.Cumprod).apply(null,arguments)},Kk=e._Cumsum=function(){return(Kk=e._Cumsum=e.asm.Cumsum).apply(null,arguments)},Vk=e._DepthToSpace=function(){return(Vk=e._DepthToSpace=e.asm.DepthToSpace).apply(null,arguments)},Hk=e._DepthwiseConv2dNative=function(){return(Hk=e._DepthwiseConv2dNative=e.asm.DepthwiseConv2dNative).apply(null,arguments)},qk=e._Elu=function(){return(qk=e._Elu=e.asm.Elu).apply(null,arguments)},Kg=e._Equal=function(){return(Kg=e._Equal=e.asm.Equal).apply(null,arguments)},Vg=e._Exp=function(){return(Vg=e._Exp=e.asm.Exp).apply(null,arguments)},jk=e._FlipLeftRight=function(){return(jk=e._FlipLeftRight=e.asm.FlipLeftRight).apply(null,arguments)},Xk=e._Floor=function(){return(Xk=e._Floor=e.asm.Floor).apply(null,arguments)},Hg=e._FloorDiv=function(){return(Hg=e._FloorDiv=e.asm.FloorDiv).apply(null,arguments)},qg=e._FusedBatchNorm=function(){return(qg=e._FusedBatchNorm=e.asm.FusedBatchNorm).apply(null,arguments)},Yk=e._FusedConv2D=function(){return(Yk=e._FusedConv2D=e.asm.FusedConv2D).apply(null,arguments)},w0=e._FusedDepthwiseConv2D=function(){return(w0=e._FusedDepthwiseConv2D=e.asm.FusedDepthwiseConv2D).apply(null,arguments)},N0=e._Gather=function(){return(N0=e._Gather=e.asm.Gather).apply(null,arguments)},jg=e._GatherNd=function(){return(jg=e._GatherNd=e.asm.GatherNd).apply(null,arguments)},Xg=e._Greater=function(){return(Xg=e._Greater=e.asm.Greater).apply(null,arguments)},D0=e._GreaterEqual=function(){return(D0=e._GreaterEqual=e.asm.GreaterEqual).apply(null,arguments)},F0=e._LeakyRelu=function(){return(F0=e._LeakyRelu=e.asm.LeakyRelu).apply(null,arguments)},R0=e._Less=function(){return(R0=e._Less=e.asm.Less).apply(null,arguments)},P0=e._LessEqual=function(){return(P0=e._LessEqual=e.asm.LessEqual).apply(null,arguments)},M0=e._Log=function(){return(M0=e._Log=e.asm.Log).apply(null,arguments)},Yg=e._LogicalAnd=function(){return(Yg=e._LogicalAnd=e.asm.LogicalAnd).apply(null,arguments)},Zk=e._LogicalNot=function(){return(Zk=e._LogicalNot=e.asm.LogicalNot).apply(null,arguments)},Qk=e._LogicalOr=function(){return(Qk=e._LogicalOr=e.asm.LogicalOr).apply(null,arguments)},Jk=e._LogicalXor=function(){return(Jk=e._LogicalXor=e.asm.LogicalXor).apply(null,arguments)},E0=e._Max=function(){return(E0=e._Max=e.asm.Max).apply(null,arguments)},Zg=e._MaxPool=function(){return(Zg=e._MaxPool=e.asm.MaxPool).apply(null,arguments)},L0=e._Maximum=function(){return(L0=e._Maximum=e.asm.Maximum).apply(null,arguments)},eS=e._Mean=function(){return(eS=e._Mean=e.asm.Mean).apply(null,arguments)},tS=e._Min=function(){return(tS=e._Min=e.asm.Min).apply(null,arguments)},rS=e._Minimum=function(){return(rS=e._Minimum=e.asm.Minimum).apply(null,arguments)},nS=e._MirrorPad=function(){return(nS=e._MirrorPad=e.asm.MirrorPad).apply(null,arguments)},oS=e._Multiply=function(){return(oS=e._Multiply=e.asm.Multiply).apply(null,arguments)},sS=e._Neg=function(){return(sS=e._Neg=e.asm.Neg).apply(null,arguments)},aS=e._NonMaxSuppressionV3=function(){return(aS=e._NonMaxSuppressionV3=e.asm.NonMaxSuppressionV3).apply(null,arguments)},iS=e._NonMaxSuppressionV4=function(){return(iS=e._NonMaxSuppressionV4=e.asm.NonMaxSuppressionV4).apply(null,arguments)},uS=e._NonMaxSuppressionV5=function(){return(uS=e._NonMaxSuppressionV5=e.asm.NonMaxSuppressionV5).apply(null,arguments)},pS=e._NotEqual=function(){return(pS=e._NotEqual=e.asm.NotEqual).apply(null,arguments)},lS=e._OneHot=function(){return(lS=e._OneHot=e.asm.OneHot).apply(null,arguments)},mS=e._PadV2=function(){return(mS=e._PadV2=e.asm.PadV2).apply(null,arguments)},cS=e._Pow=function(){return(cS=e._Pow=e.asm.Pow).apply(null,arguments)},dS=e._Prelu=function(){return(dS=e._Prelu=e.asm.Prelu).apply(null,arguments)},fS=e._Prod=function(){return(fS=e._Prod=e.asm.Prod).apply(null,arguments)},hS=e._RealDiv=function(){return(hS=e._RealDiv=e.asm.RealDiv).apply(null,arguments)},gS=e._Relu=function(){return(gS=e._Relu=e.asm.Relu).apply(null,arguments)},bS=e._Relu6=function(){return(bS=e._Relu6=e.asm.Relu6).apply(null,arguments)},yS=e._ResizeBilinear=function(){return(yS=e._ResizeBilinear=e.asm.ResizeBilinear).apply(null,arguments)},TS=e._ResizeNearestNeighbor=function(){return(TS=e._ResizeNearestNeighbor=e.asm.ResizeNearestNeighbor).apply(null,arguments)},xS=e._Reverse=function(){return(xS=e._Reverse=e.asm.Reverse).apply(null,arguments)},IS=e._RotateWithOffset=function(){return(IS=e._RotateWithOffset=e.asm.RotateWithOffset).apply(null,arguments)},CS=e._Round=function(){return(CS=e._Round=e.asm.Round).apply(null,arguments)},kS=e._Rsqrt=function(){return(kS=e._Rsqrt=e.asm.Rsqrt).apply(null,arguments)},SS=e._ScatterNd=function(){return(SS=e._ScatterNd=e.asm.ScatterNd).apply(null,arguments)},vS=e._SelectV2=function(){return(vS=e._SelectV2=e.asm.SelectV2).apply(null,arguments)},AS=e._Sigmoid=function(){return(AS=e._Sigmoid=e.asm.Sigmoid).apply(null,arguments)},wS=e._Sin=function(){return(wS=e._Sin=e.asm.Sin).apply(null,arguments)},NS=e._Softmax=function(){return(NS=e._Softmax=e.asm.Softmax).apply(null,arguments)},DS=e._SparseFillEmptyRows=function(){return(DS=e._SparseFillEmptyRows=e.asm.SparseFillEmptyRows).apply(null,arguments)},FS=e._SparseReshape=function(){return(FS=e._SparseReshape=e.asm.SparseReshape).apply(null,arguments)},RS=e._SparseSegmentReduction=function(){return(RS=e._SparseSegmentReduction=e.asm.SparseSegmentReduction).apply(null,arguments)},PS=e._Sqrt=function(){return(PS=e._Sqrt=e.asm.Sqrt).apply(null,arguments)},MS=e._Square=function(){return(MS=e._Square=e.asm.Square).apply(null,arguments)},ES=e._SquaredDifference=function(){return(ES=e._SquaredDifference=e.asm.SquaredDifference).apply(null,arguments)},LS=e._Step=function(){return(LS=e._Step=e.asm.Step).apply(null,arguments)},_S=e._StridedSlice=function(){return(_S=e._StridedSlice=e.asm.StridedSlice).apply(null,arguments)},$S=e._Sub=function(){return($S=e._Sub=e.asm.Sub).apply(null,arguments)},BS=e._Sum=function(){return(BS=e._Sum=e.asm.Sum).apply(null,arguments)},OS=e._Tan=function(){return(OS=e._Tan=e.asm.Tan).apply(null,arguments)},zS=e._Tanh=function(){return(zS=e._Tanh=e.asm.Tanh).apply(null,arguments)},GS=e._Tile=function(){return(GS=e._Tile=e.asm.Tile).apply(null,arguments)},US=e._TopK=function(){return(US=e._TopK=e.asm.TopK).apply(null,arguments)},WS=e._Transform=function(){return(WS=e._Transform=e.asm.Transform).apply(null,arguments)},KS=e._Transpose=function(){return(KS=e._Transpose=e.asm.Transpose).apply(null,arguments)},VS=e.__FusedMatMul=function(){return(VS=e.__FusedMatMul=e.asm._FusedMatMul).apply(null,arguments)},HS=e._malloc=function(){return(HS=e._malloc=e.asm.malloc).apply(null,arguments)},qS=e._free=function(){return(qS=e._free=e.asm.free).apply(null,arguments)},jS=e.___errno_location=function(){return(jS=e.___errno_location=e.asm.__errno_location).apply(null,arguments)},Qg=e.stackSave=function(){return(Qg=e.stackSave=e.asm.stackSave).apply(null,arguments)},Jg=e.stackRestore=function(){return(Jg=e.stackRestore=e.asm.stackRestore).apply(null,arguments)},Vf=e.stackAlloc=function(){return(Vf=e.stackAlloc=e.asm.stackAlloc).apply(null,arguments)},XS=e.dynCall_iijjiiii=function(){return(XS=e.dynCall_iijjiiii=e.asm.dynCall_iijjiiii).apply(null,arguments)},YS=e.dynCall_jiji=function(){return(YS=e.dynCall_jiji=e.asm.dynCall_jiji).apply(null,arguments)};e.cwrap=zp;var mm;Xr=function U(){mm||eb(),mm||(Xr=U)};function eb(U){if(U=U||i,vr>0||(zn(),vr>0))return;function J(){mm||(mm=!0,e.calledRun=!0,!W&&(pr(),n(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),to()))}e.setStatus?(e.setStatus("Running..."),setTimeout(function(){setTimeout(function(){e.setStatus("")},1),J()},1)):J()}if(e.preInit)for(typeof e.preInit=="function"&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();eb();var cm;s&&(cm={uncaughtException:process.listeners("uncaughtException").filter(function(U){return!s.uncaughtException.indexOf(U)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(U){return!s.unhandledRejection.indexOf(U)>-1})});var dm;if(typeof t<"u")dm=t;else if(typeof WasmBackendModuleThreadedSimd<"u")dm=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(cm){var ZS=dm._dispose;dm._dispose=function(){ZS(),cm.uncaughtException.forEach(function(U){process.removeListener("uncaughtException",U)}),cm.unhandledRejection.forEach(function(U){process.removeListener("unhandledRejection",U)})}}return t.ready}})();typeof yk=="object"&&typeof f0=="object"?f0.exports=d0:typeof define=="function"&&define.amd?define([],function(){return d0}):typeof yk=="object"&&(yk.WasmBackendModule=d0)});var Xj=1e-7,Yj=1e-4,ia=class{constructor(t,e){this.backend=t;this.dataMover=e;this.data=new WeakMap;this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},no=class{refCount(t){return ro("refCount")}incRef(t){return ro("incRef")}timerAvailable(){return!0}time(t){return ro("time")}read(t){return ro("read")}readSync(t){return ro("readSync")}readToGPU(t,e){return ro("readToGPU")}numDataIds(){return ro("numDataIds")}disposeData(t,e){return ro("disposeData")}write(t,e,n){return ro("write")}move(t,e,n,o,s){return ro("move")}memory(){return ro("memory")}floatPrecision(){return ro("floatPrecision")}epsilon(){return this.floatPrecision()===32?Xj:Yj}dispose(){return ro("dispose")}};function ro(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function V0(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,pb(r,t,e)}function Zj(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,pb(r,e,n),pb(t,e,n)}function gm(r,t,e){return Math.max(r,Math.min(t,e))}function Qj(r){return r%2===0?r:r+1}function pb(r,t,e){let n=r[t];r[t]=r[e],r[e]=n}function Jj(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function e6(r,t){let e=Math.random();return t*e+(1-e)*r}function t6(r,t){let e=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(t[n]);e+=o*o}return e}function D(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function Ot(r,t,e=""){D(Un(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function oo(r){D(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ua(r,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(r)||Cr(r)&&!e)for(let n=0;n<r.length;++n)ua(r[n],t,e);else t.push(r);return t}function tt(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function r6(r){return r.length===0}function Un(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function Pi(r){return r%1===0}function n6(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function o6(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function s6(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return V0(t),t}function Wp(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function a6(r,t=n=>0,e){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=t(s);if(e!=null&&s>=e){o();return}setTimeout(a,i)};a()})}function i6(r,t){let e=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)e*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let o=r.slice();return o[n]=t/e,o}function gr(r,t){let e=t.length;return r=r==null?t.map((n,o)=>o):[].concat(r),D(r.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),D(r.every(n=>Pi(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?e+n:n)}function nv(r,t){let e=[],n=[],o=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||o?null:gr(t,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(e.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(e.push(r[i]),n.push(i))}return{newShape:e,keptDims:n}}function ov(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${r}`);return e}function sv(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function av(r,t){for(let e=0;e<r.length;e++){let n=r[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function iv(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function u6(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function Cr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function lb(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function uv(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function pa(r){return typeof r=="string"||r instanceof String}function H0(r){return typeof r=="boolean"}function q0(r){return typeof r=="number"}function bm(r){return Array.isArray(r)?bm(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":q0(r)?"float32":pa(r)?"string":H0(r)?"bool":"float32"}function pi(r){return!!(r&&r.constructor&&r.call&&r.apply)}function ym(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function li(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*r[n+1];return e}function j0(r,t,e,n=!1){let o=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=e[r+a]}else{let s=t[0],a=t.slice(1),i=a.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=j0(r+u*i,a,e,n)}return o}function Up(r,t,e=!1){if(r.length===0)return t[0];let n=r.reduce((o,s)=>o*s)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return j0(0,r,t,e)}function qf(r,t){let e=Tm(r,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function Tm(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function p6(r,t){let e=r.reduce((n,o)=>n*o,1);if(t==null||t==="float32")return Up(r,new Float32Array(e));if(t==="int32")return Up(r,new Int32Array(e));if(t==="bool")return Up(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function jf(r){r.forEach(t=>{D(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function l6(r,t,e){if(t===0)return 0;if(t===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=e[o]*r[o];return n}function m6(r,t,e){if(t===0)return[];if(t===1)return[r];let n=new Array(t);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/e[o]),r-=n[o]*e[o];return n[n.length-1]=r,n}function Xf(r){return r&&r.then&&typeof r.then=="function"}var X0="tfjsflags",Yf=class{constructor(t){this.global=t;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=d6;this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&($().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){let o=this.urlFlags[t];$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(Xf(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);X0 in t&&t[X0].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=h6(o,s)})}};function d6(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(f6(t,n[0],n[1]),n.join("="))),t}function f6(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function h6(r,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${r}.`)}function $(){return pv}var pv=null;function Y0(r){pv=r}var lv;function mv(){if(lv==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");lv=r}return lv}function g6(){let r=mv();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function Zf(r,t){let e=g6();if(e.has(r))return e.get(r);{let n=t();return e.set(r,n),e.get(r)}}var ms="Abs",Mi="Acos",Ei="Acosh",Nn="Add",so="AddN",Li="All",_i="Any",ao="ArgMax",mi="ArgMin",$i="Asin",Bi="Asinh",Oi="Atan",zi="Atanh",la="Atan2",io="AvgPool",xm="AvgPoolGrad",Ru="AvgPool3D",Im="AvgPool3DGrad",uo="BatchMatMul",cs="BatchToSpaceND",Cm="Bincount",Z0="BroadcastTo",km="BroadcastArgs",Wn="Cast",po="Ceil",Kn="ClipByValue",Pu="Complex",Mu="ComplexAbs",ds="Concat",lo="Conv2D",Sm="Conv2DBackpropFilter",mo="Conv2DBackpropInput",Eu="Conv3D",vm="Conv3DBackpropFilterV2",Am="Conv3DBackpropInputV2",co="Cos",fo="Cosh",ma="Cumprod",ho="Cumsum",ca="CropAndResize",wm="DenseBincount",da="DepthToSpace",go="DepthwiseConv2dNative",Nm="DepthwiseConv2dNativeBackpropFilter",Dm="DepthwiseConv2dNativeBackpropInput",Fm="Diag",Lu="Dilation2D",Qf="Dilation2DBackpropInput",Jf="Dilation2DBackpropFilter",bo="RealDiv",_u="Einsum",yo="Elu",Rm="EluGrad",Gi="Erf",fa="Equal",To="Exp",fs="ExpandDims",ha="Expm1",Pm="FFT",ci="Fill",ga="FlipLeftRight",xo="Floor",Io="FloorDiv",Co="FusedBatchNorm",hs="GatherV2",ba="GatherNd",ya="Greater",ko="GreaterEqual",Vn="Identity",Mm="IFFT",$u="Imag",Ui="IsFinite",Wi="IsInf",Ta="IsNan",So="LeakyRelu",xa="Less",Ia="LessEqual",Em="LinSpace",vo="Log",Ki="Log1p",Ca="LogicalAnd",ka="LogicalNot",Vi="LogicalOr",Q0="LogicalXor",J0="LogSoftmax",Cge="LowerBound",Bu="LRN",Lm="LRNGrad",Ao="Max",wo="Maximum",No="MaxPool",_m="MaxPoolGrad",Ou="MaxPool3D",$m="MaxPool3DGrad",Bm="MaxPoolWithArgmax",Do="Mean",Fo="Min",Ro="Minimum",Po="MirrorPad",Hi="Mod",Om="Multinomial",Mo="Multiply",gs="Neg",Sa="NotEqual",va="NonMaxSuppressionV3",qi="NonMaxSuppressionV4",Aa="NonMaxSuppressionV5",bs="OnesLike",wa="OneHot",ys="Pack",Eo="PadV2",kge="Pool",Lo="Pow",_o="Prelu",$o="Prod",zm="RaggedGather",Gm="RaggedTensorToTensor",di="Range",zu="Real",Na="Reciprocal",Bo="Relu",Ts="Reshape",Oo="ResizeNearestNeighbor",Um="ResizeNearestNeighborGrad",zo="ResizeBilinear",Wm="ResizeBilinearGrad",Go="Relu6",Da="Reverse",Fa="Round",Uo="Rsqrt",Ra="ScatterNd",Km="SearchSorted",xs="Select",ji="Selu",Is="Slice",Wo="Sin",Pa="Sinh",Xi="Sign",Ko="Sigmoid",Yi="Softplus",Vo="Sqrt",Ho="Sum",Cs="SpaceToBatchND",ks="SplitV",qo="Softmax",Gu="SparseFillEmptyRows",Zi="SparseReshape",Uu="SparseSegmentMean",Wu="SparseSegmentSum",Ku="SparseToDense",jo="SquaredDifference",fi="Square",Ma="StridedSlice",hi="StringNGrams",Vu="StringSplit",Hu="StringToHashBucketFast",Xo="Sub",Ea="Tan",Yo="Tanh",Dn="Tile",La="TopK",_a="Transform",Fn="Transpose",Vm="Unique",Ss="Unpack",qu="UnsortedSegmentSum",Sge="UpperBound",vs="ZerosLike",As="Step",Kp="FromPixels",$a="RotateWithOffset",ws="_FusedMatMul",Ns="FusedConv2D",Ds="FusedDepthwiseConv2D";function gi(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(...r)}function b6(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.log(...r)}var Hm=Zf("kernelRegistry",()=>new Map),eh=Zf("gradRegistry",()=>new Map);function th(r,t){let e=dv(r,t);return Hm.get(e)}function cv(r){return eh.get(r)}function mb(r){let t=Hm.entries(),e=[];for(;;){let{done:n,value:o}=t.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&e.push(a)}return e}function Qi(r){let{kernelName:t,backendName:e}=r,n=dv(t,e);Hm.has(n)&&gi(`The kernel '${t}' for backend '${e}' is already registered`),Hm.set(n,r)}function t1(r){let{kernelName:t}=r;eh.has(t)&&$().getBool("DEBUG")&&gi(`Overriding the gradient for '${t}'`),eh.set(t,r)}function Dge(r,t){let e=dv(r,t);if(!Hm.has(e))throw new Error(`The kernel '${r}' for backend '${t}' is not registered`);Hm.delete(e)}function Fge(r){if(!eh.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);eh.delete(r)}function Rge(r,t){mb(r).forEach(n=>{let o=Object.assign({},n,{backendName:t});Qi(o)})}function dv(r,t){return`${t}_${r}`}var y={};He(y,{arraysEqual:()=>Un,assert:()=>D,assertNonNegativeIntegerDimensions:()=>jf,assertNonNull:()=>oo,assertShapesMatch:()=>Ot,bytesFromStringArray:()=>uv,bytesPerElement:()=>lb,checkConversionForErrors:()=>av,clamp:()=>gm,computeStrides:()=>li,createScalarValue:()=>S6,createShuffledIndices:()=>s6,decodeString:()=>Ym,distSquared:()=>t6,encodeString:()=>Xu,fetch:()=>A6,fingerPrint64:()=>k6,flatten:()=>ua,getArrayFromDType:()=>sv,getTypedArrayFromDType:()=>ov,hasEncodingLoss:()=>u6,hexToLong:()=>rh,indexToLoc:()=>m6,inferDtype:()=>bm,inferFromImplicitShape:()=>i6,isBoolean:()=>H0,isFunction:()=>pi,isInt:()=>Pi,isNumber:()=>q0,isPromise:()=>Xf,isScalarShape:()=>r6,isString:()=>pa,isTypedArray:()=>Cr,isValidDtype:()=>iv,locToIndex:()=>l6,makeOnesTypedArray:()=>qf,makeZerosNestedTypedArray:()=>p6,makeZerosTypedArray:()=>Tm,nearestDivisor:()=>ym,nearestLargerEven:()=>Qj,now:()=>jp,parseAxisParam:()=>gr,randUniform:()=>e6,repeatedTry:()=>a6,rightPad:()=>Wp,shuffle:()=>V0,shuffleCombo:()=>Zj,sizeFromShape:()=>tt,sizeToSquarishShape:()=>o6,squeezeShape:()=>nv,sum:()=>Jj,swap:()=>pb,tanh:()=>n6,toNestedArray:()=>Up,toTypedArray:()=>Xm});var bv={};He(bv,{default:()=>gv});var Fs=null;try{Fs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Jt(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}Jt.prototype.__isLong__;Object.defineProperty(Jt.prototype,"__isLong__",{value:!0});function pn(r){return(r&&r.__isLong__)===!0}function r1(r){var t=Math.clz32(r&-r);return r?31-t:t}Jt.isLong=pn;var n1={},o1={};function Vp(r,t){var e,n,o;return t?(r>>>=0,(o=0<=r&&r<256)&&(n=o1[r],n)?n:(e=kt(r,0,!0),o&&(o1[r]=e),e)):(r|=0,(o=-128<=r&&r<128)&&(n=n1[r],n)?n:(e=kt(r,r<0?-1:0,!1),o&&(n1[r]=e),e))}Jt.fromInt=Vp;function Rs(r,t){if(isNaN(r))return t?Ji:Ba;if(t){if(r<0)return Ji;if(r>=u1)return m1}else{if(r<=-a1)return Hn;if(r+1>=a1)return l1}return r<0?Rs(-r,t).neg():kt(r%jm|0,r/jm|0,t)}Jt.fromNumber=Rs;function kt(r,t,e){return new Jt(r,t,e)}Jt.fromBits=kt;var cb=Math.pow;function hv(r,t,e){if(r.length===0)throw Error("empty string");if(typeof t=="number"?(e=t,t=!1):t=!!t,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return t?Ji:Ba;if(e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return hv(r.substring(1),t,e).neg();for(var o=Rs(cb(e,8)),s=Ba,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),u=parseInt(r.substring(a,a+i),e);if(i<8){var l=Rs(cb(e,i));s=s.mul(l).add(Rs(u))}else s=s.mul(o),s=s.add(Rs(u))}return s.unsigned=t,s}Jt.fromString=hv;function Oa(r,t){return typeof r=="number"?Rs(r,t):typeof r=="string"?hv(r,t):kt(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}Jt.fromValue=Oa;var s1=1<<16,y6=1<<24,jm=s1*s1,u1=jm*jm,a1=u1/2,i1=Vp(y6),Ba=Vp(0);Jt.ZERO=Ba;var Ji=Vp(0,!0);Jt.UZERO=Ji;var qm=Vp(1);Jt.ONE=qm;var p1=Vp(1,!0);Jt.UONE=p1;var fv=Vp(-1);Jt.NEG_ONE=fv;var l1=kt(-1,2147483647,!1);Jt.MAX_VALUE=l1;var m1=kt(-1,-1,!0);Jt.MAX_UNSIGNED_VALUE=m1;var Hn=kt(0,-2147483648,!1);Jt.MIN_VALUE=Hn;var be=Jt.prototype;be.toInt=function(){return this.unsigned?this.low>>>0:this.low};be.toNumber=function(){return this.unsigned?(this.high>>>0)*jm+(this.low>>>0):this.high*jm+(this.low>>>0)};be.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Hn)){var e=Rs(t),n=this.div(e),o=n.mul(e).sub(this);return n.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var s=Rs(cb(t,6),this.unsigned),a=this,i="";;){var u=a.div(s),l=a.sub(u.mul(s)).toInt()>>>0,p=l.toString(t);if(a=u,a.isZero())return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}};be.getHighBits=function(){return this.high};be.getHighBitsUnsigned=function(){return this.high>>>0};be.getLowBits=function(){return this.low};be.getLowBitsUnsigned=function(){return this.low>>>0};be.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Hn)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};be.isZero=function(){return this.high===0&&this.low===0};be.eqz=be.isZero;be.isNegative=function(){return!this.unsigned&&this.high<0};be.isPositive=function(){return this.unsigned||this.high>=0};be.isOdd=function(){return(this.low&1)===1};be.isEven=function(){return(this.low&1)===0};be.equals=function(t){return pn(t)||(t=Oa(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};be.eq=be.equals;be.notEquals=function(t){return!this.eq(t)};be.neq=be.notEquals;be.ne=be.notEquals;be.lessThan=function(t){return this.comp(t)<0};be.lt=be.lessThan;be.lessThanOrEqual=function(t){return this.comp(t)<=0};be.lte=be.lessThanOrEqual;be.le=be.lessThanOrEqual;be.greaterThan=function(t){return this.comp(t)>0};be.gt=be.greaterThan;be.greaterThanOrEqual=function(t){return this.comp(t)>=0};be.gte=be.greaterThanOrEqual;be.ge=be.greaterThanOrEqual;be.compare=function(t){if(pn(t)||(t=Oa(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};be.comp=be.compare;be.negate=function(){return!this.unsigned&&this.eq(Hn)?Hn:this.not().add(qm)};be.neg=be.negate;be.add=function(t){pn(t)||(t=Oa(t));var e=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=t.high>>>16,i=t.high&65535,u=t.low>>>16,l=t.low&65535,p=0,m=0,c=0,d=0;return d+=s+l,c+=d>>>16,d&=65535,c+=o+u,m+=c>>>16,c&=65535,m+=n+i,p+=m>>>16,m&=65535,p+=e+a,p&=65535,kt(c<<16|d,p<<16|m,this.unsigned)};be.subtract=function(t){return pn(t)||(t=Oa(t)),this.add(t.neg())};be.sub=be.subtract;be.multiply=function(t){if(this.isZero())return this;if(pn(t)||(t=Oa(t)),Fs){var e=Fs.mul(this.low,this.high,t.low,t.high);return kt(e,Fs.get_high(),this.unsigned)}if(t.isZero())return this.unsigned?Ji:Ba;if(this.eq(Hn))return t.isOdd()?Hn:Ba;if(t.eq(Hn))return this.isOdd()?Hn:Ba;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(i1)&&t.lt(i1))return Rs(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=t.high>>>16,u=t.high&65535,l=t.low>>>16,p=t.low&65535,m=0,c=0,d=0,f=0;return f+=a*p,d+=f>>>16,f&=65535,d+=s*p,c+=d>>>16,d&=65535,d+=a*l,c+=d>>>16,d&=65535,c+=o*p,m+=c>>>16,c&=65535,c+=s*l,m+=c>>>16,c&=65535,c+=a*u,m+=c>>>16,c&=65535,m+=n*p+o*l+s*u+a*i,m&=65535,kt(d<<16|f,m<<16|c,this.unsigned)};be.mul=be.multiply;be.divide=function(t){if(pn(t)||(t=Oa(t)),t.isZero())throw Error("division by zero");if(Fs){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?Fs.div_u:Fs.div_s)(this.low,this.high,t.low,t.high);return kt(e,Fs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ji:Ba;var n,o,s;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Ji;if(t.gt(this.shru(1)))return p1;s=Ji}else{if(this.eq(Hn)){if(t.eq(qm)||t.eq(fv))return Hn;if(t.eq(Hn))return qm;var a=this.shr(1);return n=a.div(t).shl(1),n.eq(Ba)?t.isNegative()?qm:fv:(o=this.sub(t.mul(n)),s=n.add(o.div(t)),s)}else if(t.eq(Hn))return this.unsigned?Ji:Ba;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=Ba}for(o=this;o.gte(t);){n=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),u=i<=48?1:cb(2,i-48),l=Rs(n),p=l.mul(t);p.isNegative()||p.gt(o);)n-=u,l=Rs(n,this.unsigned),p=l.mul(t);l.isZero()&&(l=qm),s=s.add(l),o=o.sub(p)}return s};be.div=be.divide;be.modulo=function(t){if(pn(t)||(t=Oa(t)),Fs){var e=(this.unsigned?Fs.rem_u:Fs.rem_s)(this.low,this.high,t.low,t.high);return kt(e,Fs.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};be.mod=be.modulo;be.rem=be.modulo;be.not=function(){return kt(~this.low,~this.high,this.unsigned)};be.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};be.clz=be.countLeadingZeros;be.countTrailingZeros=function(){return this.low?r1(this.low):r1(this.high)+32};be.ctz=be.countTrailingZeros;be.and=function(t){return pn(t)||(t=Oa(t)),kt(this.low&t.low,this.high&t.high,this.unsigned)};be.or=function(t){return pn(t)||(t=Oa(t)),kt(this.low|t.low,this.high|t.high,this.unsigned)};be.xor=function(t){return pn(t)||(t=Oa(t)),kt(this.low^t.low,this.high^t.high,this.unsigned)};be.shiftLeft=function(t){return pn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):kt(0,this.low<<t-32,this.unsigned)};be.shl=be.shiftLeft;be.shiftRight=function(t){return pn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):kt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};be.shr=be.shiftRight;be.shiftRightUnsigned=function(t){return pn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low>>>t|this.high<<32-t,this.high>>>t,this.unsigned):t===32?kt(this.high,0,this.unsigned):kt(this.high>>>t-32,0,this.unsigned)};be.shru=be.shiftRightUnsigned;be.shr_u=be.shiftRightUnsigned;be.rotateLeft=function(t){var e;return pn(t)&&(t=t.toInt()),(t&=63)===0?this:t===32?kt(this.high,this.low,this.unsigned):t<32?(e=32-t,kt(this.low<<t|this.high>>>e,this.high<<t|this.low>>>e,this.unsigned)):(t-=32,e=32-t,kt(this.high<<t|this.low>>>e,this.low<<t|this.high>>>e,this.unsigned))};be.rotl=be.rotateLeft;be.rotateRight=function(t){var e;return pn(t)&&(t=t.toInt()),(t&=63)===0?this:t===32?kt(this.high,this.low,this.unsigned):t<32?(e=32-t,kt(this.high<<e|this.low>>>t,this.low<<e|this.high>>>t,this.unsigned)):(t-=32,e=32-t,kt(this.low<<e|this.high>>>t,this.high<<e|this.low>>>t,this.unsigned))};be.rotr=be.rotateRight;be.toSigned=function(){return this.unsigned?kt(this.low,this.high,!1):this};be.toUnsigned=function(){return this.unsigned?this:kt(this.low,this.high,!0)};be.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};be.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};be.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Jt.fromBytes=function(t,e,n){return n?Jt.fromBytesLE(t,e):Jt.fromBytesBE(t,e)};Jt.fromBytesLE=function(t,e){return new Jt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Jt.fromBytesBE=function(t,e){return new Jt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};var gv=Jt;var qp=gv||bv;function rh(r){return qp.fromString(r,!0,16)}var d1=rh("c3a5c85c97cb3127"),Hp=rh("b492b66fbe98f273"),ln=rh("9ae16a3b2f90404f");function yv(r){return r.xor(r.shru(47))}function f1(r,t,e){let n=r.slice(t,t+e);return qp.fromBytes(Array.from(n),!0,!0)}function Ht(r,t){return f1(r,t,8)}function c1(r,t){return f1(r,t,4)}function Pr(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function ju(r,t,e=rh("9ddfea08eb382d69")){let n=r.xor(t).mul(e);n=n.xor(n.shru(47));let o=t.xor(n).mul(e);return o=o.xor(o.shru(47)),o=o.mul(e),o}function T6(r,t,e,n,o,s){o=o.add(r),s=Pr(s.add(o).add(n),21);let a=o;return o=o.add(t),o=o.add(e),s=s.add(Pr(o,44)),[o.add(n),s.add(a)]}function db(r,t,e,n){return T6(Ht(r,t),Ht(r,t+8),Ht(r,t+16),Ht(r,t+24),e,n)}function x6(r,t=r.length){if(t>=8){let e=ln.add(t*2),n=Ht(r,0).add(ln),o=Ht(r,t-8),s=Pr(o,37).mul(e).add(n),a=Pr(n,25).add(o).mul(e);return ju(s,a,e)}if(t>=4){let e=ln.add(t*2),n=c1(r,0);return ju(n.shl(3).add(t),c1(r,t-4),e)}if(t>0){let e=r[0],n=r[t>>1],o=r[t-1],s=e+(n<<8),a=t+(o<<2);return yv(ln.mul(s).xor(d1.mul(a))).mul(ln)}return ln}function I6(r,t=r.length){let e=ln.add(t*2),n=Ht(r,0).mul(Hp),o=Ht(r,8),s=Ht(r,t-8).mul(e),a=Ht(r,t-16).mul(ln);return ju(Pr(n.add(o),43).add(Pr(s,30)).add(a),n.add(Pr(o.add(ln),18)).add(s),e)}function C6(r,t=r.length){let e=ln.add(t*2),n=Ht(r,0).mul(ln),o=Ht(r,8),s=Ht(r,t-8).mul(e),a=Ht(r,t-16).mul(ln),i=Pr(n.add(o),43).add(Pr(s,30)).add(a),u=ju(i,n.add(Pr(o.add(ln),18)).add(s),e),l=Ht(r,16).mul(e),p=Ht(r,24),m=i.add(Ht(r,t-32)).mul(e),c=u.add(Ht(r,t-24)).mul(e);return ju(Pr(l.add(p),43).add(Pr(m,30)).add(c),l.add(Pr(p.add(n),18)).add(m),e)}function k6(r,t=r.length){let e=qp.fromNumber(81,!0);if(t<=32)return t<=16?x6(r,t):I6(r,t);if(t<=64)return C6(r,t);let n=e,o=e.mul(Hp).add(113),s=yv(o.mul(ln).add(113)).mul(ln),a=[qp.UZERO,qp.UZERO],i=[qp.UZERO,qp.UZERO];n=n.mul(ln).add(Ht(r,0));let u=0,l=(t-1>>6)*64,p=l+(t-1&63)-63;do n=Pr(n.add(o).add(a[0]).add(Ht(r,u+8)),37).mul(Hp),o=Pr(o.add(a[1]).add(Ht(r,u+48)),42).mul(Hp),n=n.xor(i[1]),o=o.add(a[0]).add(Ht(r,u+40)),s=Pr(s.add(i[0]),33).mul(Hp),a=db(r,u,a[1].mul(Hp),n.add(i[0])),i=db(r,u+32,s.add(i[1]),o.add(Ht(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let m=Hp.add(s.and(255).shl(1));return u=p,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Pr(n.add(o).add(a[0]).add(Ht(r,u+8)),37).mul(m),o=Pr(o.add(a[1]).add(Ht(r,u+48)),42).mul(m),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(Ht(r,u+40))),s=Pr(s.add(i[0]),33).mul(m),a=db(r,u,a[1].mul(m),n.add(i[0])),i=db(r,u+32,s.add(i[1]),o.add(Ht(r,u+16))),[s,n]=[n,s],ju(ju(a[0],i[0],m).add(yv(o).mul(d1)).add(s),ju(a[1],i[1],m).add(n),m)}function S6(r,t){return t==="string"?Xu(r):Xm([r],t)}function v6(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function Xm(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=ua(r)),$().getBool("DEBUG")&&av(r,t),v6(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let n=0;n<e.length;++n)Math.round(r[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function jp(){return $().platform.now()}function A6(r,t){return $().platform.fetch(r,t)}function Xu(r,t="utf-8"){return t=t||"utf-8",$().platform.encode(r,t)}function Ym(r,t="utf-8"){return t=t||"utf-8",$().platform.decode(r,t)}var fb=class{constructor(t,e){this.backendTimer=t;this.logger=e;e==null&&(this.logger=new Tv)}profileKernel(t,e,n){let o,s=()=>{o=n()},a,i=jp();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();a=Promise.resolve({kernelMs:jp()-i})}if($().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let p=o[l];p.data().then(m=>{w6(m,p.dtype,t)})}return{kernelName:t,outputs:o,inputs:e,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:n,timeMs:o,inputs:s,extraInfo:a}=t;n.forEach(i=>{Promise.all([i.data(),o,a]).then(u=>{this.logger.logKernelProfile(e,i,u[0],u[1],s,u[2])})})}};function w6(r,t,e){if(t!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${e}'`),!0}return!1}var Tv=class{logKernelProfile(t,e,n,o,s,a){let i=typeof o=="number"?Wp(`${o}ms`,9):o.error,u=Wp(t,25),l=e.rank,p=e.size,m=Wp(e.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||e.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${i}	%c${l}D ${m}	%c${p}	%c${c}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function h1(r,t,e){let n={},o={};for(let u=0;u<t.length;u++)n[t[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],p=l.inputs;for(let m in p){let c=p[m],d=!1;for(let f=0;f<t.length;f++)if(n[c.id]){l.outputs.forEach(h=>n[h.id]=!0),d=!0,o[l.id]=!0;break}if(d)break}}let s={};s[e.id]=!0;let a={};for(let u=r.length-1;u>=0;u--){let l=r[u],p=l.inputs;for(let m=0;m<l.outputs.length;m++)if(s[l.outputs[m].id]){for(let c in p)s[p[c].id]=!0,a[l.id]=!0;break}}let i=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&a[l.id]){let p={};for(let c in l.inputs){let d=l.inputs[c];n[d.id]&&(p[c]=d)}let m=Object.assign({},l);m.inputs=p,m.outputs=l.outputs,i.push(m)}}return i}function g1(r,t,e,n){for(let o=t.length-1;o>=0;o--){let s=t[o],a=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?a.push(l):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let u in s.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);let l=e(()=>i[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let p=s.inputs[u];if(!Un(l.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${p.shape}'`);if(r[p.id]==null)r[p.id]=l;else{let m=r[p.id];r[p.id]=n(m,l),m.dispose()}}}}var b1=20,nh=3,xv=7;function y1(r,t,e,n){let o=li(t),s=N6(r,t,e,o),a=t.length,i=hb(r,t,e,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${a}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(l=>"    "+l).join(`
`)),u.join(`
`)}function N6(r,t,e,n){let o=tt(t),s=n[n.length-1],a=new Array(s).fill(0),i=t.length,u=e==="complex64"?sh(r):r;if(i>1)for(let l=0;l<o/s;l++){let p=l*s;for(let m=0;m<s;m++)a[m]=Math.max(a[m],oh(u[p+m],0,e).length)}return a}function oh(r,t,e){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(xv))} + ${parseFloat(r[1].toFixed(xv))}j`:pa(r)?n=`'${r}'`:e==="bool"?n=T1(r):n=parseFloat(r.toFixed(xv)).toString(),Wp(n,t)}function T1(r){return r===0?"false":"true"}function hb(r,t,e,n,o,s=!0){let a=e==="complex64"?2:1,i=t[0],u=t.length;if(u===0){if(e==="complex64"){let h=sh(r);return[oh(h[0],0,e)]}return e==="bool"?[T1(r[0])]:[r[0].toString()]}if(u===1){if(i>b1){let g=nh*a,b=Array.from(r.slice(0,g)),T=Array.from(r.slice((i-nh)*a,i*a));return e==="complex64"&&(b=sh(b),T=sh(T)),["["+b.map((x,I)=>oh(x,o[I],e)).join(", ")+", ..., "+T.map((x,I)=>oh(x,o[i-nh+I],e)).join(", ")+"]"]}let h=e==="complex64"?sh(r):Array.from(r);return["["+h.map((g,b)=>oh(g,o[b],e)).join(", ")+"]"]}let l=t.slice(1),p=n.slice(1),m=n[0]*a,c=[];if(i>b1){for(let h=0;h<nh;h++){let g=h*m,b=g+m;c.push(...hb(r.slice(g,b),l,e,p,o,!1))}c.push("...");for(let h=i-nh;h<i;h++){let g=h*m,b=g+m;c.push(...hb(r.slice(g,b),l,e,p,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*m,b=g+m;c.push(...hb(r.slice(g,b),l,e,p,o,h===i-1))}let d=u===2?",":"";c[0]="["+c[0]+d;for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<u;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function sh(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var ht=class{constructor(t,e,n){this.dtype=e;if(this.shape=t.slice(),this.size=tt(t),n!=null){let o=n.length;D(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||sv(e,this.size),this.strides=li(t)}set(t,...e){e.length===0&&(e=[0]),D(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let o of t){if(o<0||o>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let n=t[t.length-1];for(let o=0;o<t.length-1;++o)n+=this.strides[o]*t[o];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return za().makeTensor(this.values,this.shape,this.dtype)}},za=null,Zm=null,D6=null;function x1(r){za=r}function I1(r){Zm=r}function C1(r){D6=r}var Ke=class{constructor(t,e,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=t.slice(),this.dtype=e||"float32",this.size=tt(t),this.strides=li(t),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let t=await this.data();return Zm.buffer(this.shape,this.dtype,t)}bufferSync(){return Zm.buffer(this.shape,this.dtype,this.dataSync())}async array(){let t=await this.data();return Up(this.shape,t,this.dtype==="complex64")}arraySync(){return Up(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let t=za().read(this.dataId);if(this.dtype==="string"){let e=await t;try{return e.map(n=>Ym(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),za().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=za().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Ym(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();let t=await za().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(za().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Zm.print(this,t)}clone(){return this.throwIfDisposed(),Zm.clone(this)}toString(t=!1){let e=this.dataSync();return y1(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Zm.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),za().makeVariable(this,t,e,n)}};Object.defineProperty(Ke,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function F6(){return Zf("Tensor",()=>Ke)}F6();var eu=class extends Ke{constructor(e,n,o,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=n;this.name=o}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Un(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);za().disposeTensor(this),this.dataId=e.dataId,za().incRef(this,null)}dispose(){za().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(eu,Symbol.hasInstance,{value:r=>r instanceof Ke&&r.assign!=null&&r.assign instanceof Function});var Ps={};He(Ps,{assertTypesMatch:()=>Iv,getTensorsInContainer:()=>ah,isTensorInList:()=>P6,makeTypesMatch:()=>Ye});var k1=(i=>(i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6",i))(k1||{}),S1=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(S1||{}),v1=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(v1||{}),A1=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(A1||{}),w1=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(w1||{}),R6={float32:A1,int32:S1,bool:v1,complex64:w1};function Et(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return R6[r][t]}function tu(r){return Et(r,"int32")}function Ye(r,t){if(r.dtype===t.dtype)return[r,t];let e=Et(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function Iv(r,t){D(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function P6(r,t){return t.some(e=>e.id===r.id)}function ah(r){let t=[];return N1(r,t,new Set),t}function N1(r,t,e){if(r==null)return;if(r instanceof Ke){t.push(r);return}if(!M6(r))return;let n=r;for(let o in n){let s=n[o];e.has(s)||(e.add(s),N1(s,t,e))}}function M6(r){return Array.isArray(r)||typeof r=="object"}function Cv(r){return r.kernelName!=null}var gb=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},bb=class{constructor(t){this.ENV=t;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new gb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(gi(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new fb(this.backendInstance),!0}setupRegisteredKernels(){mb(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){mb(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let n=e.factory();if(n&&!(n instanceof no)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,gi(`Initialization of backend ${t} failed`),gi(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return gi(`Initialization of backend ${t} failed`),gi(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let n=this.state.tensorInfo.get(e),o=n.backend,s=this.readSync(e),a=o.refCount(e);o.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=e(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,e,n){t();try{let o=n();return e(),o}catch(o){throw e(),o}}nextTensorId(){return bb.nextTensorId++}nextVariableId(){return bb.nextVariableId++}clone(t){let e=N.runKernel(Vn,{x:t}),n={x:t},o=a=>({x:()=>{let i="float32",u={x:a},l={dtype:i};return N.runKernel(Wn,u,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[e],o,s,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(th(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u,l=Cv(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Cv(t)){let{kernelName:f,inputs:h,attrs:g}=t;this.backendName==null&&this.backend;let b=th(f,this.backendName);D(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{let T=this.backend.numDataIds();u=b.kernelFunc({inputs:h,attrs:g,backend:this.backend});let x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,T,x);let I=x.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(o){let k=this.getTensorsForGradient(f,h,I);n=this.saveTensorsForBackwardMode(k)}return I}}else{let{forwardFunc:f}=t,h=g=>{!o||(n=g.map(b=>this.keep(this.clone(b))))};i=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,h));let b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,b),b}}let{inputs:p,attrs:m}=t,c=Cv(t)?null:t.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=i():(d=this.profiler.profileKernel(l,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs)}),o&&this.addTapeNode(l,p,e,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(f=>p[f]!=null?p[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){let o=cv(t);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(D(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(l=>e[l])):i=s.map(l=>e[l]);let u=n.filter((l,p)=>a[p]);return i.concat(u)}return[]}makeTensor(t,e,n,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=t;n==="string"&&pa(t[0])&&(s=t.map(u=>Xu(u)));let a=o.write(s,e,n),i=new Ke(e,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let u=this.state.tensorInfo.get(a),l=uv(s);this.state.numBytes+=l-u.bytes,u.bytes=l}return i}makeTensorFromDataId(t,e,n,o){n=n||"float32";let s={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(s,o)}makeTensorFromTensorInfo(t,e){let{dataId:n,shape:o,dtype:s}=t,a=new Ke(o,s,n,this.nextTensorId());return this.trackTensor(a,e),a}makeVariable(t,e=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));let s=new eu(t,e,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*lb(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof eu||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let n=t.size*lb(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},u=cv(t);u!=null&&(o=u.gradFunc),o!=null&&(i.gradient=l=>(l=l.map((p,m)=>{if(p==null){let c=n[m],d=Tm(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return p}),o(l.length>1?l:l[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=ah(t),n=new Set(e.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(t,e,n,o=!1){if(D(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));D(s instanceof Ke,()=>"The result y returned by f() must be a tensor.");let a=h1(this.state.activeTape,e,s);if(!o&&a.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??E6(s.shape),g1(i,a,l=>this.tidy(l),L6);let u=e.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let p of l.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(t){return D(pi(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{D(e.every(i=>i instanceof Ke),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};e.forEach((i,u)=>{o[u]=i});let s=(i,u)=>(n=t(...e,u),D(n.value instanceof Ke,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(pi(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,u)=>{let l=n.gradFunc(i,u),p=Array.isArray(l)?l:[l];D(p.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(p.every(c=>c instanceof Ke),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return p.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){let e=jp(),n=await this.backend.time(t);return n.wallMs=jp()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new gb;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},ih=bb;ih.nextTensorId=0,ih.nextVariableId=0;function E6(r){let t=qf(tt(r),"float32");return N.makeTensor(t,r,"float32")}function kv(){let r=mv();if(r._tfengine==null){let t=new Yf(r);r._tfengine=new ih(t)}return Y0(r._tfengine.ENV),x1(()=>r._tfengine),r._tfengine}var N=kv();function L6(r,t){let e={a:r,b:t};return N.runKernel(Nn,e)}var Yu={};He(Yu,{isBrowser:()=>vv,isMobile:()=>B6,mockIsMobile:()=>$6});function _6(){return typeof navigator<"u"&&navigator!=null}var Sv;function $6(r){Sv=r}function B6(r){if(Sv!==void 0)return Sv;if(r||_6()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function vv(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Zo=$();Zo.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Zo.registerFlag("IS_BROWSER",()=>vv());Zo.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Zo.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Zo.registerFlag("PROD",()=>!1);Zo.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Zo.getBool("DEBUG"));Zo.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Zo.registerFlag("IS_TEST",()=>!1);Zo.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Zo.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Zo.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Zo.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);function zr(r,t){let e=r;if(Cr(r))return t==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(e)||Cr(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(r)&&$().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&F1(r,n,[]),n}function F1(r,t,e){if(e=e||[],!Array.isArray(r)&&!Cr(r)){D(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}D(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),D(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let n=t.slice(1);for(let o=0;o<r.length;++o)F1(r[o],n,e.concat(o))}function D1(r,t,e,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${r} tensor, but got ${t} tensor`)}}function S(r,t,e,n="numeric"){if(r instanceof Ke)return D1(n,r.dtype,t,e),r;let o=bm(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),D1(n,o,t,e),r==null||!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}let s=zr(r,o);!Cr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?Xm(r,o):ua(r,[],!0);return N.makeTensor(i,s,o)}function ru(r,t,e,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>S(s,`${t}[${a}]`,e,n))}var Av="__op";function w(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],n=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+Av;let o=(...s)=>{N.startScope(e);try{let a=n(...s);return Xf(a)&&console.error("Cannot return a Promise inside of tidy."),N.endScope(a),a}catch(a){throw N.endScope(null),a}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}function O6(r,t){let e=S(r,"real","complex"),n=S(t,"imag","complex");Ot(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:e,imag:n};return N.runKernel(Pu,o)}var Rn=w({complex_:O6});function mn(r,t,e,n){if(n==null&&(n=bm(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){jf(t);let o=tt(t),s=tt(e);D(o===s,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<e.length;++a){let i=e[a],u=a===e.length-1?i!==tt(t.slice(a)):!0;D(e[a]===t[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Cr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=n!=="string"?Xm(r,n):ua(r,[],!0),N.makeTensor(r,t,n)}function Ar(r,t,e){let n=zr(r,e);return mn(r,t,n,e)}var uh={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var yb=4;async function P1(r,t){let e=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],u=Array.isArray(r)?r[a].tensor:r[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);let l={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let p=new Promise(async m=>{let c=await u.bytes(),d=c.reduce((g,b)=>g+b.length,0)+yb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let b=c[g],T=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(T,h),h+=yb,f.set(b,h),h+=b.length}m(f)});n.push(p)}else n.push(u.data());t!=null&&(l.group=t),e.push(l)}let s=await Promise.all(n);return{data:z6(s),specs:e}}function Tb(r,t){let e={},n,o=0;for(let s of t){let a=s.name,i=s.dtype,u=s.shape,l=tt(u),p;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=uh[m.dtype],d=r.slice(o,o+l*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(i==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){p=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=K6()),p=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(i==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);p=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*c}else if(i==="string"){let m=tt(s.shape);p=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+yb))[0];o+=yb;let f=new Uint8Array(r.slice(o,o+d));p.push(f),o+=d}}else{let m=uh[i],c=r.slice(o,o+l*m);if(i==="float32")p=new Float32Array(c);else if(i==="int32")p=new Int32Array(c);else if(i==="bool")p=new Uint8Array(c);else if(i==="complex64"){p=new Float32Array(c);let d=new Float32Array(p.length/2),f=new Float32Array(p.length/2);for(let b=0;b<d.length;b++)d[b]=p[b*2],f[b]=p[b*2+1];let h=Ar(d,u,"float32"),g=Ar(f,u,"float32");e[a]=Rn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*m}i!=="complex64"&&(e[a]=Ar(p,u,i))}return e}function z6(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),o=0;return e.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var wv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function R1(r){return wv?Buffer.byteLength(r):new Blob([r]).size}function M1(r){if(wv)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let n=0,o=t.length;n<o;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function E1(r){if(wv){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function Qm(r){if(r.length===1)return r[0];let t=0;r.forEach(o=>{t+=o.byteLength});let e=new Uint8Array(t),n=0;return r.forEach(o=>{e.set(new Uint8Array(o),n),n+=o.byteLength}),e.buffer}function Nv(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function xb(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}async function Jm(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await t(r.weightsManifest);e.weightSpecs=n,e.weightData=o}return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),e}function bi(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:R1(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:R1(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function G6(){let r=e=>{let n=e<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function U6(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function W6(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function K6(){let r=G6(),t=U6(),e=W6();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],u=r[e[i>>10]+(i&1023)]+t[i>>10];s[a]=u}return new Float32Array(o)}}var Ft=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ft.instance==null&&(Ft.instance=new Ft),Ft.instance}static registerSaveRouter(t){Ft.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Ft.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Ft.getHandlers(t,"save")}static getLoadHandlers(t,e){return Ft.getHandlers(t,"load",e)}static getHandlers(t,e,n){let o=[];return(e==="load"?Ft.getInstance().loadRouters:Ft.getInstance().saveRouters).forEach(a=>{let i=a(t,n);i!==null&&o.push(i)}),o}},L1=r=>Ft.registerSaveRouter(r),_1=r=>Ft.registerLoadRouter(r),$1=r=>Ft.getSaveHandlers(r),B1=(r,t)=>Ft.getLoadHandlers(r,t);var Dv="tensorflowjs",Fv=1,Xp="models_store",Zu="model_info_store";function O1(){if(!$().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Rv(r){let t=r.result;t.createObjectStore(Xp,{keyPath:"modelPath"}),t.createObjectStore(Zu,{keyPath:"modelPath"})}var yi=class{constructor(t){if(this.indexedDB=O1(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,o)=>{let s=this.indexedDB.open(Dv,Fv);s.onupgradeneeded=()=>Rv(s),s.onsuccess=()=>{let a=s.result;if(e==null){let i=a.transaction(Xp,"readonly"),l=i.objectStore(Xp).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=p=>(a.close(),o(l.error)),i.oncomplete=()=>a.close()}else{let i=bi(e),u=a.transaction(Zu,"readwrite"),l=u.objectStore(Zu),p=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),m;p.onsuccess=()=>{m=a.transaction(Xp,"readwrite");let d=m.objectStore(Xp).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=f=>{l=u.objectStore(Zu);let h=l.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(d.error)),h.onerror=g=>(a.close(),o(d.error))}},p.onerror=c=>(a.close(),o(p.error)),u.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};yi.URL_SCHEME="indexeddb://";var z1=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(yi.URL_SCHEME)?V6(r.slice(yi.URL_SCHEME.length)):null;Ft.registerSaveRouter(z1);Ft.registerLoadRouter(z1);function V6(r){return new yi(r)}function H6(r){return r.startsWith(yi.URL_SCHEME)?r.slice(yi.URL_SCHEME.length):r}var Ib=class{constructor(){this.indexedDB=O1()}async listModels(){return new Promise((t,e)=>{let n=this.indexedDB.open(Dv,Fv);n.onupgradeneeded=()=>Rv(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Zu,"readonly"),i=s.objectStore(Zu).getAll();i.onsuccess=()=>{let u={};for(let l of i.result)u[l.modelPath]=l.modelArtifactsInfo;t(u)},i.onerror=u=>(o.close(),e(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>e(n.error)})}async removeModel(t){return t=H6(t),new Promise((e,n)=>{let o=this.indexedDB.open(Dv,Fv);o.onupgradeneeded=()=>Rv(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(Zu,"readwrite"),i=a.objectStore(Zu),u=i.get(t),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let p=i.delete(t),m=()=>{l=s.transaction(Xp,"readwrite");let d=l.objectStore(Xp).delete(t);d.onsuccess=()=>e(u.result.modelArtifactsInfo),d.onerror=f=>n(u.error)};p.onsuccess=m,p.onerror=c=>(m(),s.close(),n(u.error))}},u.onerror=p=>(s.close(),n(u.error)),a.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var nu="/",ec="tensorflowjs_models",G1="info",q6="model_topology",j6="weight_specs",X6="weight_data",Y6="model_metadata";function U1(r){return{info:[ec,r,G1].join(nu),topology:[ec,r,q6].join(nu),weightSpecs:[ec,r,j6].join(nu),weightData:[ec,r,X6].join(nu),modelMetadata:[ec,r,Y6].join(nu)}}function W1(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function Z6(r){let t=r.split(nu);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(nu)}function Q6(r){return r.startsWith(Ti.URL_SCHEME)?r.slice(Ti.URL_SCHEME.length):r}var Ti=class{constructor(t){if(!$().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=U1(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),o=bi(t);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,M1(t.weightData));let s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw W1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy,i.signature!=null&&(e.signature=i.signature),i.userDefinedMetadata!=null&&(e.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(e.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(e.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=E1(a),e}};Ti.URL_SCHEME="localstorage://";var K1=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Ti.URL_SCHEME)?J6(r.slice(Ti.URL_SCHEME.length)):null;Ft.registerSaveRouter(K1);Ft.registerLoadRouter(K1);function J6(r){return new Ti(r)}var Cb=class{constructor(){D($().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let t={},e=ec+nu,n=nu+G1;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(e)&&s.endsWith(n)){let a=Z6(s);t[a]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){t=Q6(t);let e=U1(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let n=JSON.parse(this.LS.getItem(e.info));return W1(e),n}};var tc="://",Mr=class{constructor(){this.managers={}}static getInstance(){return Mr.instance==null&&(Mr.instance=new Mr),Mr.instance}static registerManager(t,e){D(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(tc)&&(t=t.slice(0,t.indexOf(tc))),D(t.length>0,()=>"scheme must not be an empty string.");let n=Mr.getInstance();D(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){let e=Mr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Mr.getInstance().managers)}};function kb(r){if(r.indexOf(tc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Mr.getSchemes().join(",")}`);return{scheme:r.split(tc)[0],path:r.split(tc)[1]}}async function V1(r,t,e=!1){D(r!==t,()=>`Old path and new path are the same: '${r}'`);let n=Ft.getLoadHandlers(r);D(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),D(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Ft.getSaveHandlers(t);D(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),D(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let a=s[0],i=kb(r).scheme,u=kb(r).path,l=i===kb(r).scheme,p=await o.load();e&&l&&await Mr.getManager(i).removeModel(u);let m=await a.save(p);return e&&!l&&await Mr.getManager(i).removeModel(u),m.modelArtifactsInfo}async function H1(){let r=Mr.getSchemes(),t={};for(let e of r){let n=await Mr.getManager(e).listModels();for(let o in n){let s=e+tc+o;t[s]=n[o]}}return t}async function q1(r){let t=kb(r);return Mr.getManager(t.scheme).removeModel(t.path)}async function j1(r,t){return V1(r,t,!1)}async function X1(r,t){return V1(r,t,!0)}var Pv=class{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}};if($().get("IS_BROWSER")){$().setPlatform("browser",new Pv);try{Mr.registerManager(Ti.URL_SCHEME,new Cb)}catch{}try{Mr.registerManager(yi.URL_SCHEME,new Ib)}catch{}}var e5={importFetch:()=>Y1()},Mv;var Ev=class{constructor(){this.util=Z1(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return $().global.fetch!=null?$().global.fetch(t,e):(Mv==null&&(Mv=e5.importFetch()),Mv(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}};$().get("IS_NODE")&&!$().get("IS_BROWSER")&&$().setPlatform("node",new Ev);function xe(r,t="float32",e){return t=t||"float32",jf(r),new ht(r,t,e)}function t5(r,t){let e=S(r,"x","cast");if(!iv(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:e},o={dtype:t};return N.runKernel(Wn,n,o)}var re=w({cast_:t5});function r5(r){let e={x:S(r,"x","clone","string_or_numeric")};return N.runKernel(Vn,e)}var cn=w({clone_:r5});function Sb(r,t=!1){console.log(r.toString(t))}kv();var n5={buffer:xe,cast:re,clone:cn,print:Sb};I1(n5);var Pn={};He(Pn,{browserFiles:()=>J1,browserHTTPRequest:()=>r2,concatenateArrayBuffers:()=>Qm,copyModel:()=>j1,decodeWeights:()=>Tb,encodeWeights:()=>P1,fromMemory:()=>n2,fromMemorySync:()=>zv,getLoadHandlers:()=>B1,getModelArtifactsForJSON:()=>Jm,getModelArtifactsInfoForJSON:()=>bi,getSaveHandlers:()=>$1,http:()=>wb,isHTTPScheme:()=>Ab,listModels:()=>H1,loadWeights:()=>e2,moveModel:()=>X1,registerLoadRouter:()=>_1,registerSaveRouter:()=>L1,removeModel:()=>q1,weightsLoaderFactory:()=>Bv,withSaveHandler:()=>o2,withSaveHandlerSync:()=>s2});var o5="model",s5=".json",a5=".weights.bin";function Q1(r){return new Promise(t=>setTimeout(t)).then(r)}var vb=class{constructor(t){if(!$().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(vb.URL_SCHEME)&&(t=t.slice(vb.URL_SCHEME.length)),(t==null||t.length===0)&&(t=o5),this.modelJsonFileName=t+s5,this.weightDataFileName=t+a5}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],o=xb(t,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await Q1(()=>a.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=e,await Q1(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:bi(t)}}}},rc=vb;rc.URL_SCHEME="downloads://";var Lv=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:a});return}let u=Jm(s,l=>this.loadWeights(l));t(u)},n.onerror=o=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(t){let e=[],n=[];for(let a of t)e.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(t),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[e,Qm(a)])}loadWeightsFile(t,e){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],n=this.weightsFiles.map(s=>Nv(s.name)),o={};for(let s of t)s.paths.forEach(a=>{let i=Nv(a);if(e.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(e.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},i5=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(rc.URL_SCHEME)?u5(r.slice(rc.URL_SCHEME.length)):null;Ft.registerSaveRouter(i5);function u5(r="model"){return new rc(r)}function J1(r){return new Lv(r)}function _v(r,t,e,n){a(r),e=e??0,n=n??1,i(e,n);let o=0,s=u=>(u.then(l=>{let p=e+ ++o/r.length*(n-e);return t(p),l}),u);function a(u){D(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,l){D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),D(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),D(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function $v(r,t){t==null&&(t={});let e=t.fetchFunc==null?$().platform.fetch:t.fetchFunc,n=r.map(m=>e(m,t.requestInit,{isBinary:!0})),o=0,s=.5,i=(t.onProgress==null?await Promise.all(n):await _v(n,t.onProgress,o,s)).map(m=>m.arrayBuffer()),u=.5,l=1;return t.onProgress==null?await Promise.all(i):await _v(i,t.onProgress,u,l)}async function e2(r,t="",e,n){return Bv(a=>$v(a,{requestInit:n}))(r,t,e)}function Bv(r){return async(t,e="",n)=>{let o=t.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(t.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,T=uh[b]*tt(g.shape),x=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:T})};n!=null?n.forEach((I,k)=>{I===g.name&&(x(),a[k]=!0)}):x(),i.push(g.name),h+=T})}),!a.every(d=>d)){let d=n.filter((f,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let u=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),l=[];u.forEach(d=>{t[d].paths.forEach(f=>{let h=e+(e.endsWith("/")?"":"/")+f;l.push(h)})});let p=await r(l),m={},c=0;return u.forEach(d=>{let f=t[d].paths.length,h=0;for(let I=0;I<f;I++)h+=p[c+I].byteLength;let g=new ArrayBuffer(h),b=new Uint8Array(g),T=0;for(let I=0;I<f;I++){let k=new Uint8Array(p[c+I]);b.set(k,T),T+=k.byteLength}s[d].forEach(I=>{let k=g.slice(I.groupOffset,I.groupOffset+I.sizeBytes),A=Tb(k,[I.manifestEntry]);for(let F in A)m[F]=A[F]}),c+=f}),m}}var p5="application/octet-stream",l5="application/json",ph=class{constructor(t,e){this.DEFAULT_METHOD="POST";if(e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(D(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=$().platform.fetch,D(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&D(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],o=xb(t,n);e.body.append("model.json",new Blob([JSON.stringify(o)],{type:l5}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:p5}),"model.weights.bin");let s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:bi(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=e.modelTopology,o=e.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Jm(e,s=>this.loadWeights(s))}async loadWeights(t){let e=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=m5(e),s=this.weightPathPrefix||n,a=[];for(let p of t)a.push(...p.weights);let i=[],u=[];for(let p of t)for(let m of p.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(m)):i.push(s+m+o);this.weightUrlConverter&&i.push(...await Promise.all(u));let l=await $v(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Qm(l)]}};ph.URL_SCHEME_REGEX=/^https?:\/\//;function m5(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),n=r.substring(0,t),o=e>t?r.substring(e):"";return[n+"/",o]}function Ab(r){return r.match(ph.URL_SCHEME_REGEX)!=null}var t2=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(n=>Ab(n)):e=Ab(r),e)return wb(r,t)}return null};Ft.registerSaveRouter(t2);Ft.registerLoadRouter(t2);function wb(r,t){return new ph(r,t)}function r2(r,t){return wb(r,t)}var lh=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},Nb=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},Ov=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function n2(r,t,e,n){let o=arguments;return new Ov(zv(...o))}function zv(r,t,e,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new lh(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new lh({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new lh({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:n}))}function o2(r){return new Nb(r)}function s2(r){return new Nb(r)}var u2={};He(u2,{confusionMatrix:()=>i2});function c5(r,t,e=!1,n=!1){let o=S(r,"a","matMul"),s=S(t,"b","matMul");[o,s]=Ye(o,s);let a={a:o,b:s},i={transposeA:e,transposeB:n};return N.runKernel(uo,a,i)}var Ve=w({matMul_:c5});function d5(r,t,e=1,n=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:S(r,"indices","oneHot","int32")},i={dtype:o,depth:t,onValue:e,offValue:n};return N.runKernel(wa,a,i)}var Qu=w({oneHot_:d5});function Ixe(){$().set("PROD",!0)}function Cxe(){$().set("DEBUG",!0)}function kxe(){$().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Gv(r){$().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}C1(Gv);function Sxe(){N.disposeVariables()}function Mn(){return N}function mh(){return N.memory()}function vxe(r){return N.profile(r)}function z(r,t){return N.tidy(r,t)}function Fe(r){ah(r).forEach(e=>e.dispose())}function zt(r){return N.keep(r)}function Axe(r){return N.time(r)}function f5(r){return N.setBackend(r)}function wxe(){return N.ready()}function Nxe(){return N.backendName}function Dxe(r){N.removeBackend(r)}function Fxe(r){return N.findBackend(r)}function Rxe(r){return N.findBackendFactory(r)}function Ju(r,t,e=1){return N.registerBackend(r,t,e)}function a2(){return N.backend}function Pxe(r,t){$().setPlatform(r,t)}function h5(r){let e={input:S(r,"input","imag")};return N.runKernel($u,e)}var ep=w({imag_:h5});function g5(r){let e={x:S(r,"x","neg")};return N.runKernel(gs,e)}var Je=w({neg_:g5});function b5(r){let e={input:S(r,"input","real")};return N.runKernel(zu,e)}var ou=w({real_:b5});function y5(r,t,e){let n=S(r,"x","transpose");if(t==null&&(t=n.shape.map((a,i)=>i).reverse()),D(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{D(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:t};return n.dtype==="complex64"?z(()=>{let a=ou(n),i=ep(n);return a=N.runKernel(Fn,{x:a},s),i=N.runKernel(Fn,{x:i},s),e&&(i=Je(i)),Rn(a,i)}):N.runKernel(Fn,o,s)}var ze=w({transpose_:y5});function T5(r,t,e){let n=S(r,"labels","confusionMatrix"),o=S(t,"predictions","confusionMatrix");D(e==null||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),D(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),D(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),D(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),D(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);let s=Qu(re(n,"int32"),e),a=Qu(re(o,"int32"),e),i=ze(s),u=Ve(i,a);return re(u,"int32")}var i2=w({confusionMatrix_:T5});var wr={};He(wr,{assertAndGetBroadcastShape:()=>$e,getBroadcastDims:()=>p2,getReductionAxes:()=>St});function p2(r,t){let e=r.length,n=[];for(let o=0;o<e;o++){let s=e-1-o,a=r[s]||1;(t[t.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function St(r,t){let e=[];for(let n=0;n<t.length;n++){let o=r[r.length-n-1],s=t.length-n-1,a=t[s];(o==null||o===1&&a>1)&&e.unshift(s)}return e}function $e(r,t){let e=[],n=Math.max(r.length,t.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=t[t.length-o-1];if(a==null&&(a=1),s===1)e.unshift(a);else if(a===1)e.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(i)}else e.unshift(s)}return e}var Fb={};He(Fb,{fromPixels:()=>A5,fromPixelsAsync:()=>S5,toPixels:()=>v5});function Db(r,t,e){if(oo(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=zr(r,e);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return mn(r,t,n,e)}var Yp;function l2(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(th(Kp,N.backendName)!=null){let f={pixels:r},h={numChannels:t};return N.runKernel(Kp,f,h)}let[l,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(a)m=r.getContext("2d").getImageData(0,0,l,p).data;else if(n||e)m=r.data;else if(s||o||i){if(Yp==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Yp=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Yp=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Yp.canvas.width=l,Yp.canvas.height=p,Yp.drawImage(r,0,0,l,p),m=Yp.getImageData(0,0,l,p).data}let c;if(t===4)c=new Int32Array(m);else{let f=l*p;c=new Int32Array(f*t);for(let h=0;h<f;h++)for(let g=0;g<t;++g)c[h*t+g]=m[h*4+g]}return Db(c,[p,l,t],"int32")}function x5(r){return r!=null&&r.data instanceof Uint8Array}function I5(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function C5(r){return r!=null&&r.width!==0&&r.height!==0}function k5(r){return I5()&&!(r instanceof ImageBitmap)&&C5(r)&&!x5(r)}async function S5(r,t=3){let e=null;if($().getBool("WRAP_TO_IMAGEBITMAP")&&k5(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?e=n:e=r}else e=r;return l2(e,t)}async function v5(r,t){let e=S(r,"img","toPixels");if(!(r instanceof Ke)){let l=e;e=re(l,"int32"),l.dispose()}if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let[n,o]=e.shape.slice(0,2),s=e.rank===2?1:e.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);let a=await e.data(),i=e.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let p=[0,0,0,255];for(let c=0;c<s;c++){let d=a[l*s+c];if(e.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(e.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(p[0]=d*i,p[1]=d*i,p[2]=d*i):p[c]=d*i}let m=l*4;u[m+0]=Math.round(p[0]),u[m+1]=Math.round(p[1]),u[m+2]=Math.round(p[2]),u[m+3]=Math.round(p[3])}if(t!=null){t.width=o,t.height=n;let l=t.getContext("2d"),p=new ImageData(u,o,n);l.putImageData(p,0,0)}return e!==r&&e.dispose(),u}var A5=w({fromPixels_:l2});var Rb={};He(Rb,{prepareAndValidate:()=>m2});function m2(r,t){let e=r.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(tt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=t.shape,s=o[o.length-1],a=1;for(let m=0;m<o.length-1;++m)a*=o[m];let i=r.shape,u=o.slice();u.pop();let l=1;for(let m=s;m<e;++m)l*=i[m],u.push(i[m]);let p=[...li(r.shape).map(m=>m/l),1].slice(0,s);return[u,a,l,p]}var ch={};He(ch,{calculateShapes:()=>c2,validateInput:()=>Pb,validateUpdateShape:()=>Uv});function Uv(r,t,e){let n=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(e.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(e.rank-o))throw new Error(s+` Output shape length < ${n+(e.rank-o)}`);if(e.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(e.shape[a]!==t.shape[a])throw new Error(s+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-o;++a)if(e.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${e.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function Pb(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}Uv(e,t,r)}function c2(r,t,e){let n=t.shape.length,o=n>1?t.shape[n-1]:1,s=e.length,a=1;for(let m=o;m<s;++m)a*=e[m];let i=o<1?1:o,u=tt(t.shape)/i,l=[...li(e.slice(0,o)),1],p=tt(e);return{sliceRank:o,numUpdates:u,sliceSize:a,strides:l,outputSize:p}}var xt={};He(xt,{assertParamsValid:()=>N5,computeFlatOffset:()=>M5,computeOutShape:()=>F5,getNormalizedAxes:()=>R5,isSliceContinous:()=>P5,maskToAxes:()=>D5,parseSliceParams:()=>Kv,sliceInfo:()=>E5,startForAxis:()=>x2,startIndicesWithElidedDims:()=>b2,stopForAxis:()=>I2,stopIndicesWithElidedDims:()=>y2,stridesForAxis:()=>T2,stridesWithElidedDims:()=>f2});var Wv=-2,w5=-1;function N5(r,t,e){let n=r.shape.length;D(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),D(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)D(t[o]+e[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${t[o]+e[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function D5(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function F5(r,t,e){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((t[o]-r[o])/e[o]);return n}function f2(r,t,e,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<e;s++)s===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function h2(r,t,e){return e<=r?e:e-(t-1)}function g2(r,t){let e=[];for(let n=0;n<r;n++)e.push(t+n);return e}function R5(r,t,e,n,o,s,a,i,u){let l=r.length,p=new Array(l),m=new Array(l),c=new Array(l);if(t.length&&e>0){let d=t[0],f=e+1;p=b2(a,d,f,n,r),m=y2(i,d,f,o,r),c=f2(s,d,f,r)}else for(let d=0;d<l;d++)p[d]=x2(a,n,s,r,d,u),m[d]=I2(i,o,s,r,d,u),c[d]=T2(s,d,u);return{begin:p,end:m,strides:c}}function b2(r,t,e,n,o){let s=[...o],a=g2(e,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let u=h2(t,e,i),l=n[u];r&1<<u&&(l=0),s[i]=l}return s}function y2(r,t,e,n,o){let s=[...o],a=g2(e,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let u=h2(t,e,i),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[i]=l}for(let i=0;i<s.length;i++){let u=o[i];s[i]<0&&(s[i]+=u),s[i]=gm(0,s[i],o[i])}return s}function T2(r,t,e){let n=r[t];return(e&1<<t||n==null)&&(n=1),n}function x2(r,t,e,n,o,s){let a=t[o],i=e[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),a=gm(0,a,u-1),a}function I2(r,t,e,n,o,s){let a=t[o],i=e[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),i>0?a=gm(0,a,u):a=gm(-1,a,u-1),a}function P5(r,t,e){let n=e.length;for(let o=0;o<e.length;o++)if(e[o]>1){n=o;break}for(let o=n+1;o<e.length;o++)if(t[o]>0||e[o]!==r[o])return!1;return!0}function M5(r,t){let e=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)e+=r[n]*t[n];return e}function Kv(r,t,e){let n,o=r.shape.length;typeof t=="number"?n=[t,...new Array(o-1).fill(0)]:t.length<o?n=t.concat(new Array(o-t.length).fill(0)):n=t.slice(),n.forEach(a=>{D(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(o).fill(-1):typeof e=="number"?s=[e,...new Array(o-1).fill(-1)]:e.length<o?s=e.concat(new Array(o-e.length).fill(-1)):s=e,s=s.map((a,i)=>a>=0?a:(D(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function E5(r,t,e,n,o,s,a,i,u){let l;if(n==null?(l=new Array(t.length),l.fill(1)):l=n,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,m={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let x=0;x<m.dims;x++)p&&(1<<x&i)!==0&&m.numAddAxisAfterEllipsis++,1<<x&a&&(p=!0);p||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};L5(m,c);let d=!0,f=!0,h=!0,g=[],b=[];for(let x=0;x<r.length;++x){if(c.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);let I=!!(c.shrinkAxisMask&1<<x),k=r[x];if(k===-1){g.push(I?1:-1);continue}let A=[c.beginMask&1<<x,c.endMask&1<<x],F=[c.strides[x]>0?0:-1,c.strides[x]>0?k:k-1];if(I&&c.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[x]===1;let R=!!(c.beginMask&1<<x&&c.endMask&1<<x);if(c.beginValid&&c.endValid){if(I){let G=c.begin[x]<0?k+c.begin[x]:c.begin[x];if(c.begin[x]=G,c.end[x]=c.begin[x]+1,G<0||G>=k)throw Error(`slice index ${c.begin[x]} of dimension ${x} out of bounds.`)}else c.begin[x]=d2(c.begin[x],0,c.strides[x],k,A,F),c.end[x]=d2(c.end[x],1,c.strides[x],k,A,F);let O=c.strides[x]===1&&c.begin[x]===0&&c.end[x]===k;d=d&&O,f=f&&(x===0&&c.strides[x]===1||O)}else d=d&&c.strides[x]===1&&R,f=f&&(x===0&&c.strides[x]===1||R);let P,L=!1;if(c.beginValid&&c.endValid?(P=c.end[x]-c.begin[x],L=!0):I?(P=1,L=!0):R&&k>=0&&(c.strides[x]<0?P=-k:P=k,L=!0),L){let O;P===0||P<0!=c.strides[x]<0?O=0:O=Math.trunc(P/c.strides[x])+(P%c.strides[x]!==0?1:0),g.push(O)}else g.push(-1)}for(let x=0;x<c.finalShapeGatherIndices.length;++x){let I=c.finalShapeGatherIndices[x];I>=0?b.push(g[I]):I===Wv&&b.push(1)}return{finalShapeSparse:b.filter((x,I)=>c.finalShapeGatherIndices[I]!==Wv),finalShape:b,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function L5(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(t.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<o;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&r.newAxisMask)t.finalShapeGatherIndices.push(Wv),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[n]),r.end!=null&&(t.end[e]=r.end[n]),t.strides[e]=r.strides[n],r.beginMask&1<<n&&(t.beginMask|=1<<e),r.endMask&1<<n&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(w5),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function d2(r,t,e,n,o,s){if(o[t])return e>0?s[t]:s[t+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var ee={};He(ee,{Serializable:()=>dh,SerializationMap:()=>xi,registerClass:()=>En});var dh=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},xi=class{constructor(){this.classNameMap={}}static getMap(){return xi.instance==null&&(xi.instance=new xi),xi.instance}static register(t){xi.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function En(r){D(r.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),D(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),xi.register(r)}var v2={};He(v2,{TEST_EPSILON_FLOAT16:()=>C2,createVideoElement:()=>U5,encodeStrings:()=>S2,expectArrayBuffersEqual:()=>G5,expectArraysClose:()=>$5,expectArraysEqual:()=>O5,expectNumbersClose:()=>k2,expectPromiseToFail:()=>B5,expectValuesInRange:()=>z5,play:()=>W5,testEpsilon:()=>Mb});var _5=.001,C2=.1;function $5(r,t,e){return e==null&&(e=Mb()),Vv(r,t,(n,o)=>Hv(n,o,e))}function Mb(){return N.backend.floatPrecision()===32?_5:C2}function Vv(r,t,e){let n=!0;if((Cr(r)||Cr(t))&&(n=!1),Cr(r)&&Cr(t)&&(n=!0),n){let a=r.constructor.name,i=t.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(t)){let a=zr(r),i=zr(t);if(!Un(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=Cr(r)?r:ua(r),s=Cr(t)?t:ua(t);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],u=s[a];if(!e(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function B5(r,t){r().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function O5(r,t){let e=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return pa(r)||pa(r[0])||pa(t)||pa(t[0])?Vv(r,e,(n,o)=>n==o):Vv(r,t,(n,o)=>Hv(n,o,0))}function k2(r,t,e){if(e==null&&(e=Mb()),!Hv(r,t,e))throw new Error(`Numbers differ: actual === ${r}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function Hv(r,t,e){return!isFinite(r)&&!isFinite(t)?!0:!(isNaN(r)||isNaN(t)||Math.abs(r-t)>e)}function z5(r,t,e){for(let n=0;n<r.length;n++)if(r[n]<t||r[n]>e)throw new Error(`Value out of range:${r[n]} low: ${t}, high: ${e}`)}function G5(r,t){let e=new Float32Array(r),n=new Float32Array(t);if(e.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${e.length}`);for(let o=0;o<n.length;o++)if(e[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${e[o]} instead`)}function S2(r){for(let t=0;t<r.length;t++){let e=r[t];Array.isArray(e)?S2(e):r[t]=Xu(e)}return r}function U5(r){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(r),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function W5(r){await r.play(),"requestVideoFrameCallback"in r&&await new Promise(t=>{r.requestVideoFrameCallback(t)})}var K5="0.0.0";function V5(r,t){let e=S(r,"a","add"),n=S(t,"b","add");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Nn,o)}var Y=w({add_:V5});function H5(r,t){let e=S(r,"a","floorDiv"),n=S(t,"b","floorDiv");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Io,o)}var Eb=w({floorDiv_:H5});function q5(r,t){let e=S(r,"a","div"),n=S(t,"b","div");if([e,n]=Ye(e,n),e.dtype==="int32"&&n.dtype==="int32")return Eb(e,n);let o={a:e,b:n},s={};return N.runKernel(bo,o,s)}var ce=w({div_:q5});function j5(r,t){let e=S(r,"a","mul"),n=S(t,"b","mul");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Mo,o)}var E=w({mul_:j5});function X5(r){let t=S(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return N.runKernel(Mu,e)}else{let e={x:t};return N.runKernel(ms,e)}}var Gt=w({abs_:X5});function Y5(r){let e={x:S(r,"x","acos")};return N.runKernel(Mi,e)}var A2=w({acos_:Y5});function Z5(r){let e={x:S(r,"x","acosh")};return N.runKernel(Ei,e)}var w2=w({acosh_:Z5});function Q5(r){D(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),D(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((o,s)=>S(o,`tensors${s}`,"addN")),e=t[0];t.forEach(o=>{if(o.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(o=>{if(!Un(o.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return N.runKernel(so,n)}var N2=w({addN_:Q5});function J5(r,t=null,e=!1){let o={x:S(r,"x","all","bool")},s={axis:t,keepDims:e};return N.runKernel(Li,o,s)}var Lb=w({all_:J5});function eX(r,t=null,e=!1){let o={x:S(r,"x","any","bool")},s={axis:t,keepDims:e};return N.runKernel(_i,o,s)}var fh=w({any_:eX});function tX(r,t=0){let n={x:S(r,"x","argMax")},o={axis:t};return N.runKernel(ao,n,o)}var tp=w({argMax_:tX});function rX(r,t=0){let n={x:S(r,"x","argMin")},o={axis:t};return N.runKernel(mi,n,o)}var D2=w({argMin_:rX});function nX(r){let e={x:S(r,"x","asin")};return N.runKernel($i,e)}var F2=w({asin_:nX});function oX(r){let e={x:S(r,"x","asinh")};return N.runKernel(Bi,e)}var R2=w({asinh_:oX});function sX(r){let e={x:S(r,"x","atan")};return N.runKernel(Oi,e)}var P2=w({atan_:sX});function aX(r,t){let e=S(r,"a","atan2"),n=S(t,"b","atan2");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(la,o)}var M2=w({atan2_:aX});function iX(r){let e={x:S(r,"x","atanh")};return N.runKernel(zi,e)}var E2=w({atanh_:iX});function uX(r,t,e,n,o="NHWC",s){let a=r[3],i=[...t,a],u=_2(o);return Qp(r,i,e,s,n,null,null,u)}function jv(r,t,e,n,o,s,a="channelsLast"){let[i,u]=_b(t),l;if(a==="channelsLast")l=[i,u,r[3],r[3]];else if(a==="channelsFirst")l=[i,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Qp(r,l,e,n,o,s,!1,a)}function pX(r,t,e,n,o,s,a="NDHWC"){let[i,u,l]=qv(t),p,m;if(a==="NDHWC")m="channelsLast",p=[i,u,l,r[4],r[4]];else if(a==="NCDHW")m="channelsFirst",p=[i,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return L2(r,p,e,n,o,!1,m,s)}function Qp(r,t,e,n,o,s,a=!1,i="channelsLast"){let[u,l,p,m]=[-1,-1,-1,-1];if(i==="channelsLast")[u,l,p,m]=r;else if(i==="channelsFirst")[u,m,l,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[c,d,,f]=t,[h,g]=_b(e),[b,T]=_b(n),x=nc(c,b),I=nc(d,T),{padInfo:k,outHeight:A,outWidth:F}=cX(o,l,p,h,g,x,I,s,i),R=a?f*m:f,P;return i==="channelsFirst"?P=[u,R,A,F]:i==="channelsLast"&&(P=[u,A,F,R]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:p,inChannels:m,outHeight:A,outWidth:F,outChannels:R,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:I,dilationHeight:b,dilationWidth:T,inShape:r,outShape:P,filterShape:t}}function L2(r,t,e,n,o,s=!1,a="channelsLast",i){let[u,l,p,m,c]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,l,p,m,c]=r;else if(a==="channelsFirst")[u,c,l,p,m]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,f,h,,g]=t,[b,T,x]=qv(e),[I,k,A]=qv(n),F=nc(d,I),R=nc(f,k),P=nc(h,A),{padInfo:L,outDepth:O,outHeight:G,outWidth:W}=dX(o,l,p,m,b,T,x,F,R,P,i),H=s?g*c:g,V;return a==="channelsFirst"?V=[u,H,O,G,W]:a==="channelsLast"&&(V=[u,O,G,W,H]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:p,inWidth:m,inChannels:c,outDepth:O,outHeight:G,outWidth:W,outChannels:H,padInfo:L,strideDepth:b,strideHeight:T,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:F,effectiveFilterHeight:R,effectiveFilterWidth:P,dilationDepth:I,dilationHeight:k,dilationWidth:A,inShape:r,outShape:V,filterShape:t}}function lX(r,t,e,n,o){n==null&&(n=Xv(r,t,e));let s=r[0],a=r[1],i=Zp((s-t+2*n)/e+1,o),u=Zp((a-t+2*n)/e+1,o);return[i,u]}function mX(r,t,e,n,o,s){o==null&&(o=Xv(r,t,n));let a=r[0],i=r[1],u=r[2],l=Zp((a-t+2*o)/n+1,s),p=Zp((i-t+2*o)/n+1,s),m=Zp((u-t+2*o)/n+1,s);return[l,p,m,e]}function Xv(r,t,e,n=1){let o=nc(t,n);return Math.floor((r[0]*(e-1)-e+o)/2)}function _b(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function qv(r){return typeof r=="number"?[r,r,r]:r}function nc(r,t){return t<=1?r:r+(r-1)*(t-1)}function cX(r,t,e,n,o,s,a,i,u){let l,p,m;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=lX([t,e],s,n,r,i);p=d[0],m=d[1]}else if(r==="same"){p=Math.ceil(t/n),m=Math.ceil(e/o);let c=Math.max(0,(p-1)*n+s-t),d=Math.max(0,(m-1)*o+a-e),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),b=d-g;l={top:f,bottom:h,left:g,right:b,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/n),m=Math.ceil((e-a+1)/o);else if(typeof r=="object"){let c=u==="channelsLast"?r[1][0]:r[2][0],d=u==="channelsLast"?r[1][1]:r[2][1],f=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},p=Zp((t-s+c+d)/n+1,i),m=Zp((e-a+f+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:p,outWidth:m}}function dX(r,t,e,n,o,s,a,i,u,l,p){let m,c,d,f;if(typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=mX([t,e,n,1],i,1,o,r,p);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(t/o),d=Math.ceil(e/s),f=Math.ceil(n/a);let h=(c-1)*o+i-t,g=(d-1)*s+u-e,b=(f-1)*a+l-n,T=Math.floor(h/2),x=h-T,I=Math.floor(g/2),k=g-I,A=Math.floor(b/2),F=b-A;m={top:I,bottom:k,left:A,right:F,front:T,back:x,type:"SAME"}}else if(r==="valid")m={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},c=Math.ceil((t-i+1)/o),d=Math.ceil((e-u+1)/s),f=Math.ceil((n-l+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function Zp(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function Qo(r){let[t,e,n]=_b(r);return t===1&&e===1&&n===1}function Er(r,t){return Qo(r)||Qo(t)}function _2(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Rt(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")D(Pi(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(o=>{D(Pi(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function fX(r,t){let n={x:S(r,"x","reshape","string_or_numeric")},o={shape:t};return N.runKernel(Ts,n,o)}var _=w({reshape_:fX});function hX(r,t,e,n,o){let s=S(r,"x","avgPool","float32"),a=1;D(Er(e,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let i=s,u=!1;s.rank===3&&(u=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Rt("avgPool",n,o);let l={x:i},p={filterSize:t,strides:e,pad:n,dimRoundingMode:o},m=N.runKernel(io,l,p);return m=re(m,s.dtype),u?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var oc=w({avgPool_:hX});function gX(r,t,e,n,o,s="NDHWC"){let a=S(r,"x","avgPool3d","float32"),i=a,u=!1;a.rank===4&&(u=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Rt("avgPool3d",n,o);let l={x:i},p={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Ru,l,p);return m=re(m,i.dtype),u?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var $b=w({avgPool3d_:gX});function bX(r,t=0){D(r.length>=1,()=>"Pass at least one tensor to concat");let e=ru(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),e.length===1)return cn(e[0]);let n=e,o={axis:t};return N.runKernel(ds,n,o)}var mt=w({concat_:bX});function yX(r){let e={x:S(r,"x","sigmoid","float32")};return N.runKernel(Ko,e)}var Ln=w({sigmoid_:yX});function TX(r,t,e){let n=S(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:t,size:e};return N.runKernel(Is,o,s)}var Be=w({slice_:TX});function xX(r){let e={x:S(r,"x","tanh","float32")};return N.runKernel(Yo,e)}var rp=w({tanh_:xX});function IX(r,t,e,n,o,s){let a=S(r,"forgetBias","basicLSTMCell"),i=S(t,"lstmKernel","basicLSTMCell"),u=S(e,"lstmBias","basicLSTMCell"),l=S(n,"data","basicLSTMCell"),p=S(o,"c","basicLSTMCell"),m=S(s,"h","basicLSTMCell"),c=mt([l,m],1),d=Ve(c,i),f=Y(d,u),h=f.shape[0],g=f.shape[1]/4,b=[h,g],T=Be(f,[0,0],b),x=Be(f,[0,g],b),I=Be(f,[0,g*2],b),k=Be(f,[0,g*3],b),A=Y(E(Ln(T),rp(x)),E(p,Ln(Y(a,I)))),F=E(rp(A),Ln(k));return[A,F]}var $2=w({basicLSTMCell_:IX});function CX(r,t,e){let n=S(r,"x","batchToSpaceND"),o=t.reduce((i,u)=>i*u);D(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),D(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),D(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);let s={x:n},a={blockShape:t,crops:e};return N.runKernel(cs,s,a)}var sc=w({batchToSpaceND_:CX});function B2(r){let t;return r.rank===0||r.rank===1?t=_(r,[1,1,1,r.size]):r.rank===2?t=_(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function kX(r,t,e,n,o,s){s==null&&(s=.001);let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let p;n!=null&&(p=S(n,"offset","batchNorm")),D(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(p==null||i.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:B2(a),scale:l,offset:p,mean:i,variance:u},d={varianceEpsilon:s},f=N.runKernel(Co,c,d);return _(f,a.shape)}var np=w({batchNorm_:kX});function SX(r,t,e,n,o,s){let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let p;return n!=null&&(p=S(n,"offset","batchNorm")),D(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),D(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&D(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),np(a,i,u,p,l,s)}var Bb=w({batchNorm2d_:SX});function vX(r,t,e,n,o,s){let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let p;return n!=null&&(p=S(n,"offset","batchNorm")),D(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),D(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&D(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),np(a,i,u,p,l,s)}var Ob=w({batchNorm3d_:vX});function AX(r,t,e,n,o,s){let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let p;return n!=null&&(p=S(n,"offset","batchNorm")),D(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),D(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&D(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),np(a,i,u,p,l,s)}var zb=w({batchNorm4d_:AX});function wX(r,t,e){let n=S(r,"x","bincount"),o=S(t,"weights","bincount");D(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:e};return N.runKernel(Cm,s,a)}var Gb=w({bincount_:wX});function NX(r,t){let e=S(r,"s0","broadcastArgs","int32"),n=S(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:e,s1:n};return N.runKernel(km,o)}var O2=w({broadcastArgs_:NX});function DX(r,t){let e=S(r,"broadcastTo","x"),n=e.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let l=e.shape.slice();for(;l.length<t.length;)l.unshift(1);e=_(e,l)}let o=e.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(o[l]===t[l])s[l]=1;else if(e.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return cn(e);let i={x:e},u={reps:s};return N.runKernel(Dn,i,u)}var op=w({broadcastTo_:DX});function FX(r){let e={x:S(r,"x","ceil","float32")};return N.runKernel(po,e)}var z2=w({ceil_:FX});function Ms(r,t,e){let n={shape:r,value:t,dtype:e};return N.runKernel(ci,{},n)}function RX(r,t,e){let n=S(r,"x","clipByValue");if(D(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Ms(n.shape,t,n.dtype);let o={x:n},s={clipValueMin:t,clipValueMax:e};return N.runKernel(Kn,o,s)}var Gr=w({clipByValue_:RX});function PX(r){return mt(r,0)}var Ub=w({concat1d_:PX});function MX(r,t){return mt(r,t)}var Wb=w({concat2d_:MX});function EX(r,t){return mt(r,t)}var Kb=w({concat3d_:EX});function LX(r,t){return mt(r,t)}var Vb=w({concat4d_:LX});function _X(r,t,e,n,o="NHWC",s=[1,1],a){let i=S(r,"x","conv2d","float32"),u=S(t,"filter","conv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Rt("conv2d",n,a);let m=o==="NHWC"?l.shape[3]:l.shape[1];D(m===u.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${u.shape[2]}.`),D(Er(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let c={x:l,filter:u},d={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(lo,c,d);return p?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var es=w({conv2d_:_X});function $X(r,t,e,n,o="NWC",s=1,a){let i=S(r,"x","conv1d"),u=S(t,"filter","conv1d"),l=i,p=!1;i.rank===2&&(p=!0,l=_(i,[1,i.shape[0],i.shape[1]])),D(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),D(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Rt("conv1d",n,a),D(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),D(Er(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),D(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=_(u,[1,u.shape[0],u.shape[1],u.shape[2]]),c=_(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=es(c,m,[1,e],n,"NHWC",[1,s],a);return p?_(g,[g.shape[2],g.shape[3]]):_(g,[g.shape[0],g.shape[2],g.shape[3]])}var Hb=w({conv1d_:$X});function BX(r,t,e,n,o,s="NHWC",a){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let i=r,u=t,l=!1;t.rank===3&&(l=!0,u=_(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,r[0],r[1],r[2]]),D(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),D(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),D(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let p=s==="NHWC"?i[3]:i[1],m=s==="NHWC"?u.shape[3]:u.shape[1];D(p===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${e.shape[2]}.`),D(m===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${e.shape[3]}.`),Rt("conv2dDerInput",o,a);let c={dy:u,filter:e},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=N.runKernel(mo,c,d);return l?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ac=w({conv2DBackpropInput_:BX});function OX(r,t,e,n,o,s){let a=S(r,"x","conv2dTranspose"),i=S(t,"filter","conv2dTranspose");return ac(e,a,i,n,o,"NHWC",s)}var qb=w({conv2dTranspose_:OX});function zX(r,t,e,n,o="NDHWC",s=[1,1,1]){let a=S(r,"x","conv3d"),i=S(t,"filter","conv3d"),u=a,l=!1;a.rank===4&&(l=!0,u=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),D(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),D(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),D(Er(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),D(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let p={x:u,filter:i},m={strides:e,pad:n,dataFormat:o,dilations:s},c=N.runKernel(Eu,p,m);return l?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var jb=w({conv3d_:zX});function GX(r,t,e,n,o){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let s=r,a=t,i=!1;t.rank===4&&(i=!0,a=_(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=a.shape[4];D(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),D(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),D(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),D(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),D(l===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${e.shape[4]}.`);let p={dy:a,filter:e},m={pad:o,strides:n,inputShape:s},c=N.runKernel(Am,p,m);return i?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Xb=w({conv3DBackpropInput_:GX});function UX(r,t,e,n,o){let s=S(r,"x","conv3dTranspose"),a=S(t,"filter","conv3dTranspose");return Xb(e,s,a,n,o)}var Yb=w({conv3dTranspose_:UX});function WX(r){let e={x:S(r,"x","cos","float32")};return N.runKernel(co,e)}var ic=w({cos_:WX});function KX(r){let e={x:S(r,"x","cosh","float32")};return N.runKernel(fo,e)}var Zb=w({cosh_:KX});function VX(r,t=0,e=!1,n=!1){let s={x:S(r,"x","cumprod")},a={axis:t,exclusive:e,reverse:n};return N.runKernel(ma,s,a)}var hh=w({cumprod_:VX});function HX(r,t=0,e=!1,n=!1){let s={x:S(r,"x","cumsum")},a={axis:t,exclusive:e,reverse:n};return N.runKernel(ho,s,a)}var Qb=w({cumsum_:HX});function qX(r,t,e,n=!1){let o=S(r,"x","denseBincount"),s=S(t,"weights","denseBincount");D(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),D(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:e,binaryOutput:n};return N.runKernel(wm,a,i)}var G2=w({denseBincount_:qX});function jX(r,t,e="NHWC"){let n=S(r,"x","depthToSpace","float32"),o=e==="NHWC"?n.shape[1]:n.shape[2],s=e==="NHWC"?n.shape[2]:n.shape[3],a=e==="NHWC"?n.shape[3]:n.shape[1];D(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),D(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${n.shape}`),D(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),D(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},u={blockSize:t,dataFormat:e};return N.runKernel(da,i,u)}var U2=w({depthToSpace_:jX});function XX(r,t,e,n,o="NHWC",s=[1,1],a){let i=S(r,"x","depthwiseConv2d","float32"),u=S(t,"filter","depthwiseConv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let m=o==="NHWC"?l.shape[3]:l.shape[1];D(m===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${u.shape[2]}.`),Rt("depthwiseConv2d",n,a);let c={x:l,filter:u},d={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(go,c,d);return p?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var sp=w({depthwiseConv2d_:XX});function YX(r){let e={x:S(r,"x","diag")};return N.runKernel(Fm,e)}var W2=w({diag_:YX});function ZX(r,t,e,n,o=[1,1],s="NHWC"){let a=S(r,"x","dilation2d"),i=S(t,"filter","dilation2d");D(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),D(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),D(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=a,l=!1;a.rank===3&&(u=_(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);let p={x:u,filter:i},m={strides:e,pad:n,dilations:o},c=N.runKernel(Lu,p,m);return l?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var K2=w({dilation2d_:ZX});function QX(r,t){let e=S(r,"a","equal","string_or_numeric"),n=S(t,"b","equal","string_or_numeric");[e,n]=Ye(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(fa,o)}var Zr=w({equal_:QX});function JX(r,t,e){let n=S(t,"a","where"),o=S(e,"b","where"),s=S(r,"condition","where","bool"),a=$e($e(s.shape,n.shape),o.shape),i=op(s,a),u=op(n,a),l=op(o,a),p={condition:i,t:u,e:l};return N.runKernel(xs,p)}var Ut=w({where_:JX});function e8(r){let e={x:S(r,"x","zerosLike")};return N.runKernel(vs,e)}var we=w({zerosLike_:e8});function t8(r,t){let e=S(r,"a","div"),n=S(t,"b","div");[e,n]=Ye(e,n);let o=ce(e,n),s=we(o),a=Zr(n,s);return Ut(a,s,o)}var V2=w({divNoNan_:t8});function r8(r,t){let e=S(r,"t1","dot"),n=S(t,"t2","dot");D((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);let o=e.rank===1?e.size:e.shape[1],s=n.rank===1?n.size:n.shape[0];if(D(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),e.rank===1&&n.rank===1){let a=_(e,[1,-1]),i=_(n,[-1,1]),u=Ve(a,i);return _(u,[])}else if(e.rank===1&&n.rank===2){let a=_(e,[1,-1]),i=_(n,[n.shape[0],n.shape[1]]),u=Ve(a,i);return _(u,[u.size])}else if(e.rank===2&&n.rank===1){let a=_(n,[-1,1]),i=Ve(e,a);return _(i,[i.size])}else{let a=_(n,[n.shape[0],n.shape[1]]);return Ve(e,a)}}var H2=w({dot_:r8});function n8(r,...t){let e=t.map((o,s)=>S(o,`tensors${s}`,"einsum")),n={equation:r};return N.runKernel(_u,e,n)}var q2=w({einsum_:n8});function o8(r){let e={x:S(r,"x","elu","float32")};return N.runKernel(yo,e)}var ap=w({elu_:o8});function s8(r){let t=S(r,"x","erf");D(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=re(t,"float32"));let e={x:t};return N.runKernel(Gi,e)}var j2=w({erf_:s8});function Yv(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function X2(r,t,e){let n=r.length+t.length,o=[],s=0,a=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?o.push(r[s++]):o.push(t[a++]);return o}function Zv(r,t){let e=[],n=r.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&e.push(r[s]);let o=t.map(s=>r[s]);return[e,o]}function Es(r,t){let e=t.map(n=>1);return X2(r,e,t)}function a8(r,t,e){D(Yv(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function Qv(r,t){if(Yv(r,t))return null;let e=[];for(let n=0;n<t;++n)r.indexOf(n)===-1&&e.push(n);return r.forEach(n=>e.push(n)),e}function gh(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function i8(r,t){let e=[];for(let n=t-r;n<t;++n)e.push(n);return e}function u8(r,t=null,e=!1){let o={x:S(r,"x","max")},s={reductionIndices:t,keepDims:e};return N.runKernel(Ao,o,s)}var dn=w({max_:u8});function p8(r,t=null,e=!1){let o={x:S(r,"x","min")},s={axis:t,keepDims:e};return N.runKernel(Fo,o,s)}var bh=w({min_:p8});function l8(r,t){let e=S(r,"base","pow"),n=S(t,"exp","pow");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Lo,o)}var qn=w({pow_:l8});function de(r,t){if((Cr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Cr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return mn(r,[],[],t)}function m8(r){let e={x:S(r,"x","sqrt","float32")};return N.runKernel(Vo,e)}var _t=w({sqrt_:m8});function c8(r){let t=S(r,"x","square"),e={};return N.runKernel("Square",{x:t},e)}var qe=w({square_:c8});function d8(r,t=null,e=!1){let n=S(r,"x","sum");n.dtype==="bool"&&(n=re(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return N.runKernel(Ho,o,s)}var he=w({sum_:d8});function f8(r,t="euclidean",e=null,n=!1){r=S(r,"x","norm");let o=Y2(r,t,e),s=o.shape;if(n){let a=gr(e,r.shape);s=Es(o.shape,a)}return _(o,s)}function Y2(r,t,e=null){if(r.rank===0)return Gt(r);if(r.rank!==1&&e===null)return Y2(_(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return he(Gt(r),e);if(t===1/0)return dn(Gt(r),e);if(t===-1/0)return bh(Gt(r),e);if(t==="euclidean"||t===2)return _t(he(qn(Gt(r),de(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return dn(he(Gt(r),e[0]),e[1]-1);if(t===1/0)return dn(he(Gt(r),e[1]),e[0]);if(t===-1/0)return bh(he(Gt(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return _t(he(qe(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var Jp=w({norm_:f8});function h8(r,t=null,e=!1){return Jp(r,"euclidean",t,e)}var Z2=w({euclideanNorm_:h8});function g8(r){let e={x:S(r,"x","exp")};return N.runKernel(To,e)}var br=w({exp_:g8});function b8(r,t=0){let e=S(r,"x","expandDims","string_or_numeric");D(t<=e.rank,()=>"Axis must be <= rank of the tensor");let n={input:e},o={dim:t};return N.runKernel(fs,n,o)}var Lr=w({expandDims_:b8});function y8(r){let e={x:S(r,"x","expm1")};return N.runKernel(ha,e)}var Q2=w({expm1_:y8});function T8(r,t){let e=S(r,"x","tile","string_or_numeric");D(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let n={x:e},o={reps:t};return N.runKernel(Dn,n,o)}var Qr=w({tile_:T8});function x8(r,t,e,n="float32"){t==null&&(t=r);let o=xe([r,t],n),s=r<=t?r:t;for(let i=0;i<s;++i)o.set(1,i,i);let a=_(o.toTensor(),[r,t]);if(e==null)return a;if(e.length===1)return Qr(Lr(a,0),[e[0],1,1]);if(e.length===2)return Qr(Lr(Lr(a,0),0),[e[0],e[1],1,1]);if(e.length===3)return Qr(Lr(Lr(Lr(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var el=w({eye_:x8});function I8(r){let e={x:S(r,"x","floor","float32")};return N.runKernel(xo,e)}var ip=w({floor_:I8});function C8(r,t,e=0,n=0){let o=S(r,"x","gather"),s=S(t,"indices","gather","int32"),a={x:o,indices:s},i={axis:e,batchDims:n};return N.runKernel(hs,a,i)}var up=w({gather_:C8});function k8(r,t){let e=S(r,"a","greater","string_or_numeric"),n=S(t,"b","greater","string_or_numeric");[e,n]=Ye(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ya,o)}var ir=w({greater_:k8});function S8(r,t){let e=S(r,"a","greaterEqual","string_or_numeric"),n=S(t,"b","greaterEqual","string_or_numeric");[e,n]=Ye(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ko,o)}var Ls=w({greaterEqual_:S8});function v8(r){let e={x:S(r,"x","isFinite")};return N.runKernel(Ui,e)}var J2=w({isFinite_:v8});function A8(r){let e={x:S(r,"x","isInf")};return N.runKernel(Wi,e)}var eF=w({isInf_:A8});function w8(r){let e={x:S(r,"x","isNaN")};return N.runKernel(Ta,e)}var tF=w({isNaN_:w8});function N8(r,t=.2){let n={x:S(r,"x","leakyRelu")},o={alpha:t};return N.runKernel(So,n,o)}var uc=w({leakyRelu_:N8});function D8(r,t){let e=S(r,"a","less","string_or_numeric"),n=S(t,"b","less","string_or_numeric");[e,n]=Ye(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(xa,o)}var Jb=w({less_:D8});function F8(r,t){let e=S(r,"a","lessEqual","string_or_numeric"),n=S(t,"b","lessEqual","string_or_numeric");[e,n]=Ye(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ia,o)}var _s=w({lessEqual_:F8});function rF(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:t,num:e};return N.runKernel(Em,{},n)}function R8(r,t=5,e=1,n=1,o=.5){let s=S(r,"x","localResponseNormalization");D(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),D(Pi(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=_(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:a},l={depthRadius:t,bias:e,alpha:n,beta:o},p=N.runKernel(Bu,u,l);return i?_(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var nF=w({localResponseNormalization_:R8});function P8(r){let e={x:S(r,"x","log","float32")};return N.runKernel(vo,e)}var Ur=w({log_:P8});function M8(r){let e={x:S(r,"x","log1p")};return N.runKernel(Ki,e)}var pc=w({log1p_:M8});function E8(r){return D(pi(r),()=>"The f passed in grad(f) must be a function"),(t,e)=>{let n=S(t,"x","tf.grad","string_or_numeric"),o=e!=null?S(e,"dy","tf.grad"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(n),[n],o);return o!=null&&Ot(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),ty(a),a[0]})}}function L8(r){return D(pi(r),()=>"The f passed in grads(f) must be a function"),(t,e)=>{D(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=ru(t,"args","tf.grads","string_or_numeric"),o=e!=null?S(e,"dy","tf.grads"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(...n),n,o);return o!=null&&Ot(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ty(a),a})}}function _8(r){return D(pi(r),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{D(t instanceof Ke,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(e==null||e instanceof Ke,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=N.gradients(()=>r(t),[t],e);return ty(n),{grad:n[0],value:o}}}function $8(r){return D(pi(r),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{D(Array.isArray(t)&&t.every(o=>o instanceof Ke),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(e==null||e instanceof Ke,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=N.gradients(()=>r(...t),t,e);return e!=null&&Ot(n.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ty(n.grads),n}}function ey(r,t){D(pi(r),()=>"The f passed in variableGrads(f) must be a function"),D(t==null||Array.isArray(t)&&t.every(l=>l instanceof eu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let l in N.registeredVariables)t.push(N.registeredVariables[l])}let n=e?t.filter(l=>!l.trainable):null,o=t.length;t=t.filter(l=>l.trainable),D(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=N.gradients(r,t,null,s);D(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let u={};return t.forEach((l,p)=>{i[p]!=null&&(u[l.name]=i[p])}),n?.forEach(l=>u[l.name]=null),{value:a,grads:u}}function fn(r){return N.customGrad(r)}function ty(r){if(r.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function B8(r){let e={x:S(r,"x","softplus")};return N.runKernel(Yi,e)}var su=w({softplus_:B8});function O8(r){let t=S(r,"x","logSigmoid");return fn(n=>({value:Je(su(Je(n))),gradFunc:a=>E(a,Ln(Je(n)))}))(t)}var oF=w({logSigmoid_:O8});function z8(r,t){let e=S(r,"a","sub"),n=S(t,"b","sub");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Xo,o)}var le=w({sub_:z8});function G8(r,t=-1){let e=S(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return fn((o,s)=>{let i=dn(o,t,!0),u=le(o,i),l=le(re(u,"float32"),Ur(he(br(u),t,!0)));return s([l]),{value:l,gradFunc:(m,c)=>{let[d]=c,f=!0,h=br(d);return le(m,E(he(m,t,f),h))}}})(e)}var ry=w({logSoftmax_:G8});function U8(r,t=null,e=!1){let n=S(r,"x","logSumExp"),o=gr(t,n.shape),s=dn(n,o,!0),a=le(n,s),i=br(a),u=he(i,o),l=Ur(u),p=Y(_(s,l.shape),l);if(e){let m=Es(p.shape,o);return _(p,m)}return p}var ny=w({logSumExp_:U8});function W8(r,t){let e=S(r,"a","logicalAnd","bool"),n=S(t,"b","logicalAnd","bool");$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ca,o)}var Jr=w({logicalAnd_:W8});function K8(r){let e={x:S(r,"x","logicalNot","bool")};return N.runKernel(ka,e)}var lc=w({logicalNot_:K8});function V8(r,t){let e=S(r,"a","logicalOr","bool"),n=S(t,"b","logicalOr","bool");$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Vi,o)}var oy=w({logicalOr_:V8});function H8(r,t){let e=S(r,"a","logicalXor","bool"),n=S(t,"b","logicalXor","bool");return $e(e.shape,n.shape),Jr(oy(r,t),lc(Jr(r,t)))}var sF=w({logicalXor_:H8});var sy=2147483648;function q8(r,t,e="left"){let n=S(r,"sortedSequence","searchSorted"),o=S(t,"values","searchSorted"),s=n.shape[n.shape.length-1],a=o.shape[o.shape.length-1],i=_(n,[-1,s]),u=_(o,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(tt(u.shape)>=sy)throw new Error(`values tensor size must less than ${sy}`);if(i.shape[1]>=sy)throw new Error(`trailing dim_size must less than ${sy} for int32 output type, was ${i.shape[1]}`);let l={sortedSequence:i,values:u},p={side:e};return N.runKernel(Km,l,p)}var yh=w({searchSorted_:q8});function aF(r,t){return yh(r,t,"left")}function j8(r,t,e,n,o){let s=S(r,"x","maxPool"),a=1,i=s,u=!1;s.rank===3&&(u=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),D(Er(e,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),Rt("maxPool",n,o);let l={x:i},p={filterSize:t,strides:e,pad:n,dimRoundingMode:o},m=N.runKernel(No,l,p);return u?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var mc=w({maxPool_:j8});function X8(r,t=[1,1,1],e,n,o,s="NDHWC"){let a=S(r,"x","maxPool3d"),i=a,u=!1;a.rank===4&&(u=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Rt("maxPool3d",n,o);let l={x:i},p={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Ou,l,p);return u?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var ay=w({maxPool3d_:X8});function Y8(r,t,e,n,o=!1){let a={x:S(r,"x","maxPoolWithArgmax")},i={filterSize:t,strides:e,pad:n,includeBatchInIndex:o},u=N.runKernel(Bm,a,i);return{result:u[0],indexes:u[1]}}var iF=w({maxPoolWithArgmax_:Y8});function Z8(r,t){let e=S(r,"a","maximum"),n=S(t,"b","maximum");[e,n]=Ye(e,n),e.dtype==="bool"&&(e=re(e,"int32"),n=re(n,"int32")),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(wo,o)}var ts=w({maximum_:Z8});function Q8(r,t=null,e=!1){let o={x:S(r,"x","mean")},s={axis:t,keepDims:e};return N.runKernel(Do,o,s)}var $t=w({mean_:Q8});function It(r,t="float32"){if(t==="complex64"){let n=It(r,"float32"),o=It(r,"float32");return Rn(n,o)}let e=Tm(tt(r),t);return N.makeTensor(e,r,t)}function yr(r,t="float32"){if(t==="complex64"){let n=yr(r,"float32"),o=It(r,"float32");return Rn(n,o)}let e=qf(tt(r),t);return N.makeTensor(e,r,t)}function uF(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=S(r,"x","meshgrid",r instanceof Ke?r.dtype:"float32");if(t===void 0)return[n];let o=S(t,"y","meshgrid",t instanceof Ke?t.dtype:"float32"),s=tt(n.shape),a=tt(o.shape);return e==="xy"?(n=_(n,[1,-1]),o=_(o,[-1,1]),[Ve(yr([a,1],n.dtype),n),Ve(o,yr([1,s],o.dtype))]):(n=_(n,[-1,1]),o=_(o,[1,-1]),[Ve(n,yr([1,a],n.dtype)),Ve(yr([s,1],o.dtype),o)])}function J8(r,t){let e=S(r,"a","minimum"),n=S(t,"b","minimum");[e,n]=Ye(e,n),e.dtype==="bool"&&(e=re(e,"int32"),n=re(n,"int32")),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ro,o)}var pp=w({minimum_:J8});function eY(r,t,e){D(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let n=S(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let o=e==="reflect"?1:0;for(let i=0;i<n.rank;i++)D(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(t[i][0]>=0&&t[i][0]<=n.shape[i]-o&&t[i][1]>=0&&t[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:e},a={x:n};return N.runKernel(Po,a,s)}var pF=w({mirrorPad_:eY});function tY(r,t){let e=S(r,"a","mod"),n=S(t,"b","mod");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Hi,o)}var lF=w({mod_:tY});function rY(r,t=null,e=!1){r=S(r,"x","moments");let n=gr(t,r.shape),o=$t(r,n,e),s=o.shape;e||(s=Es(o.shape,n));let a=qe(le(re(r,"float32"),_(o,s))),i=$t(a,n,e);return{mean:o,variance:i}}var tl=w({moments_:rY});function nY(r,t,e,n){let o=S(t,"data","multiRNNCell"),s=ru(e,"c","multiRNNCell"),a=ru(n,"h","multiRNNCell"),i=o,u=[];for(let m=0;m<r.length;m++){let c=r[m](i,s[m],a[m]);u.push(c[0]),u.push(c[1]),i=c[1]}let l=[],p=[];for(let m=0;m<u.length;m+=2)l.push(u[m]),p.push(u[m+1]);return[l,p]}var mF=w({multiRNNCell_:nY});function oY(r,t,e,n=!1){let o=S(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);e=e||Math.random();let u={logits:a===1?_(o,[1,-1]):o},l={numSamples:t,seed:e,normalized:n},p=N.runKernel(Om,u,l);return a===1?_(p,[p.size]):p}var cF=w({multinomial_:oY});function sY(r,t){let e=S(r,"a","notEqual","string_or_numeric"),n=S(t,"b","notEqual","string_or_numeric");[e,n]=Ye(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Sa,o)}var au=w({notEqual_:sY});function aY(r){let e={x:S(r,"x","onesLike")};return N.runKernel(bs,e)}var _r=w({onesLike_:aY});function iY(r,t){let e=S(r,"v1","outerProduct"),n=S(t,"v2","outerProduct");D(e.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${n.rank}.`);let o=_(e,[-1,1]),s=_(n,[1,-1]);return Ve(o,s)}var dF=w({outerProduct_:iY});function uY(r,t,e=0){let n=S(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:t,constantValue:e},s={x:n};return N.runKernel(Eo,s,o)}var jn=w({pad_:uY});function pY(r,t,e=0){return D(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),jn(r,[t],e)}var fF=w({pad1d_:pY});function lY(r,t,e=0){return D(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jn(r,t,e)}var hF=w({pad2d_:lY});function mY(r,t,e=0){return D(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jn(r,t,e)}var gF=w({pad3d_:mY});function cY(r,t,e=0){return D(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jn(r,t,e)}var bF=w({pad4d_:cY});function dY(r,t,e){let n=S(r,"x","spaceToBatchND");D(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),D(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),D(n.shape.reduce((a,i,u)=>u>0&&u<=t.length?a&&(i+e[u-1][0]+e[u-1][1])%t[u-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let o={x:n},s={blockShape:t,paddings:e};return N.runKernel(Cs,o,s)}var cc=w({spaceToBatchND_:dY});function fY(r,t,e,n,o,s,a){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=S(r,"x","maxPool"),u=i,l=!1;i.rank===3&&(l=!0,u=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(Er(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let p=jv(u.shape,t,s,o,n),m=[p.dilationHeight,p.dilationWidth],c;n==="same"?c=gY([p.filterHeight,p.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=hY([p.inHeight,p.inWidth],m,c),g=d?n:"valid",b=d?u:cc(u,m,f),x=(e==="avg"?()=>oc(b,t,s,g,a):()=>mc(b,t,s,g,a))(),I=d?x:sc(x,m,h);return l?_(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function hY(r,t,e){let n=e.map(p=>p[0]),o=e.map(p=>p[1]),s=r.concat(n,o),a=t.map((p,m)=>(p-s[m]%p)%p),i=o.map((p,m)=>p+a[m]),u=t.map((p,m)=>[n[m],i[m]]),l=t.map((p,m)=>[0,a[m]]);return[u,l]}function gY(r,t){let n=r.map((a,i)=>a+(a-1)*(t[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var yF=w({pool_:fY});function bY(r,t){let e=S(r,"x","prelu"),n=S(t,"alpha","prelu"),o={x:e,alpha:n};return N.runKernel(_o,o)}var dc=w({prelu_:bY});function yY(r,t=null,e=!1){let n=S(r,"x","prod");n.dtype==="bool"&&(n=re(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return N.runKernel($o,o,s)}var TF=w({prod_:yY});function TY(r,t,e,n){let o=r.map((p,m)=>S(p,`tensors${m}`,"raggedGather","int32")),s=S(t,"paramsDenseValues","raggedGather"),a=S(e,"indices","raggedGather","int32"),i={paramsNestedSplits:o,paramsDenseValues:s,indices:a},u={outputRaggedRank:n},l=N.runKernel(zm,i,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}var xF=w({raggedGather_:TY});function xY(r,t,e,n,o){let s=S(r,"shape","raggedTensorToTensor","int32"),a=S(t,"values","raggedTensorToTensor"),i=S(e,"defaultValue","raggedTensorToTensor",a.dtype),u=n.map((m,c)=>S(m,`tensors${c}`,"raggedTensorToTensor","int32")),l={shape:s,values:a,defaultValue:i,rowPartitionTensors:u},p={rowPartitionTypes:o};return N.runKernel(Gm,l,p)}var IF=w({raggedTensorToTensor_:xY});function IY(r,t,e){let n=tt(r),o=null;if(e==null||e==="float32")o=new Float32Array(n);else if(e==="int32")o=new Int32Array(n);else if(e==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${e}`);for(let s=0;s<n;s++)o[s]=t();return N.makeTensor(o,r,e)}var CF=w({rand_:IY});var ly=hm(Th());var nl=class{constructor(t,e,n,o,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=ly.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let t,e,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*o*i,e=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},uy=class{constructor(t,e,n,o){this.alpha=t,this.beta=1/e,this.dtype=n;let s=o||Math.random();this.randu=ly.alea(s.toString()),this.randn=new nl(0,1,n,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,t=o*o,e=1-.331*t*t,n=.5*t+this.d*(1-a+Math.log(a)),s=this.randu(),s<e||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},py=class{constructor(t=0,e=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=t,this.range=e-t,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=ly.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function NY(r,t,e=1,n="float32",o){if(e==null&&(e=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new uy(t,e,n,o),a=xe(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var OF=w({randomGamma_:NY});function DY(r,t=0,e=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new nl(t,e,n,!1,o),a=xe(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var ol=w({randomNormal_:DY});function FY(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return ol(r,0,1,t,e)}var zF=w({randomStandardNormal_:FY});function RY(r,t=0,e=1,n="float32",o){let s=xe(r,n),a=new py(t,e,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var Ii=w({randomUniform_:RY});function lp(r,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:t,step:e,dtype:n};return N.runKernel(di,{},o)}function PY(r){let e={x:S(r,"x","reciprocal")};return N.runKernel(Na,e)}var GF=w({reciprocal_:PY});function MY(r){let e={x:S(r,"x","relu")};return N.runKernel(Bo,e)}var en=w({relu_:MY});function EY(r){let e={x:S(r,"x","relu6")};return N.runKernel(Go,e)}var my=w({relu6_:EY});function LY(r,t){let n={x:S(r,"x","reverse")},o={dims:t};return N.runKernel(Da,n,o)}var Nr=w({reverse_:LY});function _Y(r){let t=S(r,"x","reverse");return D(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Nr(t,0)}var UF=w({reverse1d_:_Y});function $Y(r,t){let e=S(r,"x","reverse");return D(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Nr(e,t)}var WF=w({reverse2d_:$Y});function BY(r,t){let e=S(r,"x","reverse");return D(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Nr(e,t)}var KF=w({reverse3d_:BY});function OY(r,t){let e=S(r,"x","reverse");return D(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Nr(e,t)}var VF=w({reverse4d_:OY});function zY(r){let e={x:S(r,"x","round")};return N.runKernel(Fa,e)}var cy=w({round_:zY});function GY(r){let e={x:S(r,"x","rsqrt","float32")};return N.runKernel(Uo,e)}var dy=w({rsqrt_:GY});function UY(r){let e={x:S(r,"x","selu")};return N.runKernel(ji,e)}var fy=w({selu_:UY});function WY(r,t,e,n,o,s=[1,1],a="NHWC"){let i=S(r,"x","separableConv2d"),u=S(t,"depthwiseFilter","separableConv2d"),l=S(e,"pointwiseFilter","separableConv2d"),p=i,m=!1;if(i.rank===3&&(m=!0,p=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),D(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),D(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let c=u.shape[2],d=u.shape[3];D(l.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${l.shape[2]}.`);let f=sp(p,u,n,o,a,s),g=es(f,l,1,"valid",a);return m?_(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var hy=w({separableConv2d_:WY});async function KY(r,t){let e=S(r,"x","setdiff1d"),n=S(t,"y","setdiff1d");D(e.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${n.dtype}).`),D(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),D(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await e.data(),s=await n.data(),a=new Set(s),i=0;for(let p=0;p<o.length;p++)a.has(o[p])||i++;let u=new ht([i],e.dtype),l=new ht([i],"int32");for(let p=0,m=0;p<o.length;p++)a.has(o[p])||(u.values[m]=o[p],l.values[m]=p,m++);return[u.toTensor(),l.toTensor()]}var HF=KY;function VY(r){let e={x:S(r,"x","sign")};return N.runKernel(Xi,e)}var qF=w({sign_:VY});function HY(r){let e={x:S(r,"x","sin","float32")};return N.runKernel(Wo,e)}var gy=w({sin_:HY});function qY(r){let e={x:S(r,"x","sinh")};return N.runKernel(Pa,e)}var by=w({sinh_:qY});function jY(r,t,e){let n=S(r,"x","slice1d");return D(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Be(n,[t],[e])}var fc=w({slice1d_:jY});function XY(r,t,e){let n=S(r,"x","slice2d");return D(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Be(n,t,e)}var xh=w({slice2d_:XY});function YY(r,t,e){let n=S(r,"x","slice3d");return D(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Be(n,t,e)}var hc=w({slice3d_:YY});function ZY(r,t,e){let n=S(r,"x","slice4d");return D(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Be(n,t,e)}var sl=w({slice4d_:ZY});function QY(r,t=-1){let e=S(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let n={logits:e},o={dim:t};return N.runKernel(qo,n,o)}var gc=w({softmax_:QY});function JY(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return N.runKernel(Pm,t)}var bc=w({fft_:JY});function eZ(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return N.runKernel(Mm,t)}var al=w({ifft_:eZ});function tZ(r){let t=r.shape[r.shape.length-1],e=r.size/t,n;if(t<=2){let o=_(r,[e,t]);n=al(o)}else{let o=[e,2*(t-1)],s=_(ou(r),[e,t]),a=_(ep(r),[e,t]),i=Nr(Be(s,[0,1],[e,t-2]),1),u=E(Nr(Be(a,[0,1],[e,t-2]),1),de(-1)),l=mt([s,i],1),p=mt([a,u],1),m=_(Rn(l,p),[o[0],o[1]]);n=al(m)}if(n=ou(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=_(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var yy=w({irfft_:tZ});function rZ(r,t,e=0){let o={x:S(r,"x","split")},s={numOrSizeSplits:t,axis:e};return N.runKernel(ks,o,s)}var Dr=w({split_:rZ});function nZ(r,t){D(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],n=r.size/e,o;if(t!=null&&t<e){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=t,o=Be(r,f,h),e=t}else if(t!=null&&t>e){let f=r.shape.map(h=>h);f[r.shape.length-1]=t-e,o=mt([r,It(f)],r.shape.length-1),e=t}else o=r;let s=we(o),a=_(Rn(o,s),[n,e]),i=bc(a),u=Math.floor(e/2)+1,l=ou(i),p=ep(i),m=Dr(l,[u,e-u],l.shape.length-1),c=Dr(p,[u,e-u],p.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=u,_(Rn(m[0],c[0]),d)}var yc=w({rfft_:nZ});function oZ(r,t){let e=S(r,"a","squaredDifference"),n=S(t,"b","squaredDifference");[e,n]=Ye(e,n),$e(e.shape,n.shape);let o={a:e,b:n},s={};return N.runKernel(jo,o,s)}var Ty=w({squaredDifference_:oZ});function sZ(r,t){let e=S(r,"x","squeeze","string_or_numeric");return _(e,nv(e.shape,t).newShape)}var $s=w({squeeze_:sZ});function aZ(r,t=0){let e=ru(r,"tensors","stack","string_or_numeric");D(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&D(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let n=e,o={axis:t};return N.runKernel(ys,n,o)}var Tr=w({stack_:aZ});function iZ(r,t=0){let n={x:S(r,"x","step")},o={alpha:t};return N.runKernel(As,n,o)}var Ci=w({step_:iZ});function uZ(r,t,e,n,o=0,s=0,a=0,i=0,u=0){let p={x:S(r,"x","stridedSlice","string_or_numeric")},m={begin:t,end:e,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return N.runKernel(Ma,p,m)}var jF=w({stridedSlice_:uZ});function pZ(r){let e={x:S(r,"x","tan","float32")};return N.runKernel(Ea,e)}var XF=w({tan_:pZ});function qt(r,t){oo(r);let e=zr(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return mn(r,null,e,t)}function Ga(r,t,e){if(oo(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=zr(r,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return mn(r,t,n,e)}function YF(r,t,e){if(oo(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=zr(r,e);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return mn(r,t,n,e)}function ZF(r,t,e){if(oo(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=zr(r,e);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return mn(r,t,n,e)}function QF(r,t,e){if(oo(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=zr(r,e);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,mn(r,t,n,e)}function lZ(r,t=1,e=!0){let n=S(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);let s={x:n},a={k:t,sorted:e},[i,u]=N.runKernel(La,s,a);return{values:i,indices:u}}var JF=w({topk_:lZ});function mZ(r,t=0,e=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new nl(t,e,n,!0,o),a=xe(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Tc=w({truncatedNormal_:mZ});function cZ(r,t=0){let e=S(r,"x","unique","string_or_numeric");D(e.rank>0,()=>"The input tensor must be at least 1D");let n={x:e},o={axis:t},[s,a]=N.runKernel(Vm,n,o);return{values:s,indices:a}}var eR=w({unique_:cZ});function dZ(r,t,e){let n=S(r,"x","unsortedSegmentSum"),o=S(t,"segmentIds","unsortedSegmentSum","int32");D(Pi(e),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:e};return N.runKernel(qu,s,a)}var xy=w({unsortedSegmentSum_:dZ});function fZ(r,t=0){let e=S(r,"x","unstack","string_or_numeric");D(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let n={value:e},o={axis:t};return N.runKernel(Ss,n,o)}var Wr=w({unstack_:fZ});function tR(r,t){return yh(r,t,"right")}function Iy(r,t=!0,e,n){return N.makeVariable(r,t,e,n)}function Cy(r,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let n=xe(r,"int32"),o=xe([e.length,r.length],"int32");for(let s=0;s<e.length;s++){let a=n.indexToLoc(e[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function hZ(r){let t=S(r,"condition","whereAsync","bool"),e=await t.data(),n=Cy(t.shape,e);return r!==t&&t.dispose(),n}var ky=hZ;async function gZ(r,t,e){let n=S(r,"tensor","boolMask"),o=S(t,"mask","boolMask","bool"),s=e??0,a=o.rank,i=n.shape;D(a>0,()=>"mask cannot be scalar"),Ot(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+a;h++)u*=i[h];let l=i.slice(0,s).concat([u],i.slice(s+a)),p=_(n,l),m=_(o,[-1]),c=await ky(m),d=$s(c,[1]),f=up(p,d,s);return r!==n&&n.dispose(),t!==o&&o.dispose(),d.dispose(),p.dispose(),m.dispose(),c.dispose(),f}var bZ=gZ;function yZ(r,t,e,n,o=!0){let s=S(r,"v","movingAverage"),a=S(t,"x","movingAverage"),i=S(e,"decay","movingAverage");Iv(s,a),D(Un(s.shape,a.shape),()=>"Shape mismatch in v and x");let u=de(1),l=le(u,i),p=E(le(a,s),l);if(o){D(n!=null,()=>"When using zeroDebias: true, step is required.");let m=S(n,"step","movingAverage");p=ce(p,le(u,qn(i,m)))}return Y(s,p)}var TZ=w({movingAverage_:yZ});function xZ(r,t,e){let n=S(r,"indices","scatterND","int32"),o=S(t,"updates","scatterND");Pb(o,n,e);let s={indices:n,updates:o},a={shape:e};return N.runKernel(Ra,s,a)}var IZ=w({scatterND_:xZ});function rR(r,t,e,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(e.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${s}.`);let a=t.size;if(!(t.rank===0||t.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function kZ(r,t,e,n=0){let o=S(r,"sparseIndices","sparseToDense","int32"),s=S(t,"sparseValues","sparseToDense","string_or_numeric"),a=S(n,"defaultValue","sparseToDense",s.dtype);rR(o,s,e,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},u={outputShape:e};return N.runKernel(Ku,i,u)}var SZ=w({sparseToDense_:kZ});function vZ(r,t){let e=S(t,"indices","gatherND","int32"),o={params:S(r,"x","gatherND","string_or_numeric"),indices:e};return N.runKernel(ba,o)}var AZ=w({gatherND_:vZ});function nR(r,t){if(t==null)return r.shape.slice();if(Un(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let n=0;n<r.shape.length;n++)t[n]==null&&r.shape[n]!=null?e.push(r.shape[n]):e.push(t[n]);return e}return t}function wZ(r,t,e,n){let o=S(r,"x","dropout");if(D(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),D(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof Ke?o.clone():o;let s=nR(o,e),a=1-t,i=ce(ip(Y(Ii(s,0,1,"float32",n),a)),a);return E(o,i)}var aA=w({dropout_:wZ});function iA(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Ih(r,t,e){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=t-e*Math.cos(a)}return qt(o,"float32")}async function NZ(r,t,e=1){let n=S(r,"predictions","inTopK"),o=S(t,"targets","inTopK");D(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),D(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Ot(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];D(e>0&&e<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${e}`);let a=await n.data(),i=await o.data(),[u,l]=[a.length/s,s],p=ov("bool",u);for(let m=0;m<u;m++){let c=m*l,d=a.subarray(c,c+l),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),p[m]=0;for(let h=0;h<e;h++)if(f[h].index===i[m]){p[m]=1;break}}return r!==n&&n.dispose(),t!==o&&o.dispose(),Ar(p,o.shape,"bool")}var DZ=NZ;var mp={};He(mp,{conv2d:()=>oR,depthwiseConv2d:()=>sR,matMul:()=>aR});function FZ(r,t,e,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=t;u.rank===3&&(u=_(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),D(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),D(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let l=s==="NHWC"?i.shape[3]:i.shape[1],p=s==="NHWC"?u.shape[3]:u.shape[1];D(l===e[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${e[2]}.`),D(p===e[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${e[3]}).`),Rt("conv2dDerFilter",o,a);let m={x:i,dy:u},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:e};return N.runKernel(Sm,m,c)}var xc=w({conv2DBackpropFilter_:FZ});function il(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return E(r,Ci(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function ul(r,t){let e=t,n=St(r.shape,t.shape);return n.length>0&&(e=he(e,n)),_(e,r.shape)}function pl(r,t,e,n){if(t==="linear")return r;if(t==="relu")return en(r);if(t==="elu")return ap(r);if(t==="relu6")return my(r);if(t==="prelu")return dc(r,e);if(t==="leakyrelu")return uc(r,n);if(t==="sigmoid")return Ln(r);throw new Error(`Unknown fused activation ${t}.`)}var ll=(r,t)=>!(r>0)||t==="linear";function RZ({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(u=u||"linear",ll(N.state.gradientDepth,u)===!1){D(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let A=es(r,t,e,n,o,s,a);return i!=null&&(A=Y(A,i)),pl(A,u,l,p)}let m=S(r,"x","conv2d","float32"),c=S(t,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Rt("fused conv2d",n,a);let h=o==="NHWC"?d.shape[3]:d.shape[1];D(c.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),D(Er(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let g=Qp(d.shape,c.shape,e,s,n,a),b;i!=null&&(b=S(i,"bias","fused conv2d"),[b]=Ye(b,m),o==="NHWC"?$e(g.outShape,b.shape):(D(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),D(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let T;if(l!=null){let A=l.shape;if(D(A.length<=1||A.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${A.length}.`),A.length===1)D(A[0]===1||A[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the number of output channels (${g.outChannels}).`);else if(A.length===3)try{$e(A,g.outShape)}catch{let R=`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(R)}T=S(l,"prelu weights","fused conv2d")}let x=(A,F)=>{D(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[R,P,L,O]=F,G=il(A,L,u);D(Qo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=ac(P.shape,G,R,e,n),H=xc(P,G,R.shape,e,n),V=[W,H];if(O!=null){let q=ul(O,G);V.push(q)}return V},I={x:d,filter:c,bias:b,preluActivationWeights:T},k={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?fn((F,R,P)=>{let L=N.runKernel(Ns,I,k);return P([R,F,L]),f&&(L=_(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:x}})(d,c):fn((F,R,P,L)=>{let O=N.runKernel(Ns,I,k);return L([R,F,O,P]),f&&(O=_(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:x}})(d,c,b)}var oR=w({fusedConv2d_:RZ});function PZ(r,t,e,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=t;u.rank===3&&(u=_(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={x:i,dy:u},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:e};return N.runKernel(Nm,l,p)}var Sy=w({depthwiseConv2dNativeBackpropFilter_:PZ});function MZ(r,t,e,n,o,s=[1,1],a){let i=t,u=!1;t.rank===3&&(u=!0,i=_(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={dy:i,filter:e},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},m=N.runKernel(Dm,l,p);return u?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var vy=w({depthwiseConv2dNativeBackpropInput_:MZ});function EZ({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(ll(N.state.gradientDepth,u)===!1){let k=sp(r,t,e,n,o,s,a);return i!=null&&(k=Y(k,i)),pl(k,u,l,p)}let m=S(r,"x","depthwiseConv2d","float32"),c=S(t,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),D(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),D(Er(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),Rt("fused depthwiseConv2d",n,a);let h=Qp(d.shape,c.shape,e,s,n,a,!0),g;i!=null&&(g=S(i,"bias","fused conv2d"),[g]=Ye(g,m),$e(h.outShape,g.shape));let b;l!=null&&(b=S(l,"prelu weights","fused depthwiseConv2d"));let T=(k,A)=>{D(Qo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[F,R,P,L]=A,O=il(k,P,u),G=vy(R.shape,O,F,e,n,s,a),W=Sy(R,O,F.shape,e,n,s,a);if(L!=null){let H=ul(g,O);return[G,W,H]}return[G,W]},x={x:d,filter:c,bias:g,preluActivationWeights:b},I={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?fn((A,F,R)=>{let P=N.runKernel(Ds,x,I);return R([F,A,P]),f&&(P=_(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:T}})(d,c):fn((A,F,R,P)=>{let L=N.runKernel(Ds,x,I);return P([F,A,L,R]),f&&(L=_(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:T}})(d,c,g)}var sR=w({fusedDepthwiseConv2d_:EZ});function LZ({a:r,b:t,transposeA:e=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(ll(N.state.gradientDepth,s)===!1){let O=Ve(r,t,e,n);return o!=null&&(O=Y(O,o)),pl(O,s,a,i)}let u=S(r,"a","fused matMul"),l=S(t,"b","fused matMul");[u,l]=Ye(u,l);let p=e?u.shape[u.rank-2]:u.shape[u.rank-1],m=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=e?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=tt(f),b=tt(h);D(p===m,()=>`Error in fused matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${e} and transposeB=${n} must match.`);let x=$e(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([c,d]),I=e?_(u,[g,p,c]):_(u,[g,c,p]),k=n?_(l,[b,d,m]):_(l,[b,m,d]),A;o!=null&&(A=S(o,"bias","fused matMul"),[A]=Ye(A,u),$e(x,A.shape));let F;a!=null&&(F=S(a,"prelu weights","fused matMul"));let R=(O,G)=>{let[W,H,V,q]=G,Z=il(_(O,V.shape),V,s),j,X;if(!e&&!n?(j=Ve(Z,H,!1,!0),X=Ve(W,Z,!0,!1)):!e&&n?(j=Ve(Z,H,!1,!1),X=Ve(Z,W,!0,!1)):e&&!n?(j=Ve(H,Z,!1,!0),X=Ve(W,Z,!1,!1)):(j=Ve(H,Z,!0,!0),X=Ve(Z,W,!0,!0)),o!=null){let se=ul(q,Z);return[j,X,se]}else return[j,X]},P={a:I,b:k,bias:A,preluActivationWeights:F},L={transposeA:e,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?fn((G,W,H)=>{let V=N.runKernel(ws,P,L);return H([G,W,V]),{value:_(V,x),gradFunc:R}})(I,k):fn((G,W,H,V)=>{let q=N.runKernel(ws,P,L);return V([G,W,q,H]),{value:_(q,x),gradFunc:R}})(I,k,A)}var aR=w({fusedMatMul_:LZ});function _Z(r){return Ih(r,.54,.46)}var iR=w({hammingWindow_:_Z});function $Z(r){return Ih(r,.5,.5)}var Ay=w({hannWindow_:$Z});function BZ(r,t,e,n=!1,o=0){let s=0,a=[];for(;s+t<=r.size;)a.push(Be(r,s,t)),s+=e;if(n)for(;s<r.size;){let i=s+t-r.size,u=mt([Be(r,s,t-i),Ms([i],o)]);a.push(u),s+=e}return a.length===0?Ga([],[0,t]):_(mt(a),[a.length,t])}var wy=w({frame_:BZ});function OZ(r,t,e,n,o=Ay){n==null&&(n=iA(t));let s=wy(r,t,e),a=E(s,o(t));return yc(a,n)}var uR=w({stft_:OZ});function zZ(r,t,e,n,o="bilinear",s=0){let a=S(r,"image","cropAndResize"),i=S(t,"boxes","cropAndResize","float32"),u=S(e,"boxInd","cropAndResize","int32"),l=i.shape[0];D(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),D(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),D(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),D(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),D(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let p={image:a,boxes:i,boxInd:u},m={method:o,extrapolationValue:s,cropSize:n};return N.runKernel(ca,p,m)}var pR=w({cropAndResize_:zZ});function GZ(r){let t=S(r,"image","flipLeftRight","float32");D(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return N.runKernel(ga,e,{})}var lR=w({flipLeftRight_:GZ});function UZ(r){let t=S(r,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];D(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),D(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(t.rank);return o.fill(1,0,e),o[e]=3,Qr(t,o)}var mR=w({grayscaleToRGB_:UZ});function WZ(r,t,e=0,n=.5){let o=S(r,"image","rotateWithOffset","float32");D(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:t,fillValue:e,center:n};return N.runKernel($a,s,a)}var cR=w({rotateWithOffset_:WZ});function Bs(r,t,e,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return e=Math.min(e,a),D(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),D(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),D(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),D(t.rank===1,()=>"scores must be a 1D tensor"),D(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),D(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function KZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppression","float32"),a=S(t,"scores","nonMaxSuppression","float32"),i=Bs(s,a,e,n,o);e=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u={maxOutputSize:e,iouThreshold:n,scoreThreshold:o};return N.runKernel(va,{boxes:s,scores:a},u)}var dR=w({nonMaxSuppression_:KZ});function fR(r,t,e){let n=VZ(r,t,e),o=n<0?-(n+1):n;r.splice(o,0,t)}function VZ(r,t,e){return qZ(r,t,e||HZ)}function HZ(r,t){return r>t?1:r<t?-1:0}function qZ(r,t,e){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=e(t,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function Ny(r,t,e,n,o){return uA(r,t,e,n,o,0)}function Dy(r,t,e,n,o,s){return uA(r,t,e,n,o,0,!1,s,!0)}function Fy(r,t,e,n,o,s){return uA(r,t,e,n,o,s,!0)}function uA(r,t,e,n,o,s,a=!1,i=!1,u=!1){let l=[];for(let g=0;g<t.length;g++)t[g]>o&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(hR);let p=s>0?-.5/s:0,m=[],c=[];for(;m.length<e&&l.length>0;){let g=l.pop(),{score:b,boxIndex:T,suppressBeginIndex:x}=g;if(b<o)break;let I=!1;for(let k=m.length-1;k>=x;--k){let A=jZ(r,T,m[k]);if(A>=n){I=!0;break}if(g.score=g.score*XZ(n,p,A),g.score<=o)break}g.suppressBeginIndex=m.length,I||(g.score===b?(m.push(T),c.push(g.score)):g.score>o&&fR(l,g,hR))}let d=m.length,f=e-d;i&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return a&&(h.selectedScores=c),u&&(h.validOutputs=d),h}function jZ(r,t,e){let n=r.subarray(t*4,t*4+4),o=r.subarray(e*4,e*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),p=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(i-s)*(u-a),f=(m-l)*(c-p);if(d<=0||f<=0)return 0;let h=Math.max(s,l),g=Math.max(a,p),b=Math.min(i,m),T=Math.min(u,c),x=Math.max(b-h,0)*Math.max(T-g,0);return x/(d+f-x)}function XZ(r,t,e){let n=Math.exp(t*e*e);return e<=r?n:0}function hR(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}async function YZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppressionAsync"),a=S(t,"scores","nonMaxSuppressionAsync"),i=Bs(s,a,e,n,o);e=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u=await Promise.all([s.data(),a.data()]),l=u[0],p=u[1],{selectedIndices:m}=Ny(l,p,e,n,o);return s!==r&&s.dispose(),a!==t&&a.dispose(),qt(m,"int32")}var gR=YZ;function ZZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppression"),i=S(t,"scores","nonMaxSuppression"),u=Bs(a,i,e,n,o,s);e=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:a,scores:i},p={maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=N.runKernel(Aa,l,p);return{selectedIndices:m[0],selectedScores:m[1]}}var bR=w({nonMaxSuppressionWithScore_:ZZ});async function QZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(t,"scores","nonMaxSuppressionAsync"),u=Bs(a,i,e,n,o,s);e=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([a.data(),i.data()]),p=l[0],m=l[1],{selectedIndices:c,selectedScores:d}=Fy(p,m,e,n,o,s);return a!==r&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:qt(c,"int32"),selectedScores:qt(d)}}var yR=QZ;function JZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppression"),i=S(t,"scores","nonMaxSuppression"),u=Bs(a,i,e,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,c={boxes:a,scores:i},d={maxOutputSize:l,iouThreshold:p,scoreThreshold:m,padToMaxOutputSize:s},f=N.runKernel(qi,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var TR=w({nonMaxSuppressionPadded_:JZ});async function eQ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(t,"scores","nonMaxSuppressionAsync"),u=Bs(a,i,e,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,[c,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:h}=Dy(c,d,l,p,m,s);return a!==r&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:qt(f,"int32"),validOutputs:de(h,"int32")}}var xR=eQ;function tQ(r,t,e=!1,n=!1){let o=S(r,"images","resizeBilinear");D(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),D(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),D(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,i={images:s},u={alignCorners:e,halfPixelCenters:n,size:t},l=N.runKernel(zo,i,u);return a?_(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var IR=w({resizeBilinear_:tQ});function rQ(r,t,e=!1,n=!1){let o=S(r,"images","resizeNearestNeighbor");D(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),D(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),D(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,i={images:s},u={alignCorners:e,halfPixelCenters:n,size:t},l=N.runKernel(Oo,i,u);return a?_(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var CR=w({resizeNearestNeighbor_:rQ});function nQ(r,t="binary",e=!1,n=.5){let o=S(r,"image","threshold"),s=.2989,a=.587,i=.114,u=o.shape[0]*o.shape[1],l=E(qt([n]),255),p,m,c,d;if(D(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),D(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),D(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),D(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[p,m,c]=Dr(o,[1,1,1],-1);let g=E(p,s),b=E(m,a),T=E(c,i);d=Y(Y(g,b),T)}else d=r;if(t==="otsu"){let g=Gb(re(cy(d),"int32"),Ar([]),256);l=oQ(g,u)}let f=e?_s(d,l):ir(d,l);return re(E(f,255),"int32")}function oQ(r,t){let e=qt([-1]),n=qt([0]),o=qt([0]),s,a,i,u,l,p;for(let m=0;m<r.size-1;m++){s=Be(r,0,m+1),a=Be(r,m+1),l=ce(he(s),t),p=ce(he(a),t);let c=he(E(s,lp(0,s.size)));i=ce(c,he(s));let d=Ms(a.shape,s.size),f=Y(lp(0,a.size),d),h=E(a,f);u=ce(he(h),he(a));let g=le(i,u),b=le(i,u),T=E(l,p);o=E(E(T,g),b);let x=ir(o,n);n=Ut(x,o,n),e=Ut(x,qt([m]),e)}return e}var kR=w({threshold_:nQ});function sQ(r,t,e="nearest",n="constant",o=0,s){let a=S(r,"image","transform","float32"),i=S(t,"transforms","transform","float32");D(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:a,transforms:i},l={interpolation:e,fillMode:n,fillValue:o,outputShape:s};return N.runKernel(_a,u,l)}var SR=w({transform_:sQ});function aQ(r,t,e){D(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),D(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);let n=S(r,"a","bandPart");D(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(e<=a))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`);t<0&&(t=s),e<0&&(e=a);let i=_(lp(0,s,1,"int32"),[-1,1]),u=lp(0,a,1,"int32"),l=le(i,u),p=Jr(_s(l,de(+t,"int32")),Ls(l,de(-e,"int32"))),m=It([s,a],n.dtype);return _(Tr(Wr(_(n,[-1,s,a])).map(c=>Ut(p,c,m))),o)}var vR=w({bandPart_:aQ});function iQ(r){let t;if(Array.isArray(r)){t=!1,D(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)D(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else t=!0,r=Dr(r,r.shape[0],0).map(o=>$s(o,[0]));D(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],n=r;for(let o=0;o<r.length;++o)e.push(N.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=E(he(E(e[a],s)),e[a]);s=le(s,i)}return ce(s,Jp(s,"euclidean"))}));return t?Tr(e,0):e}var AR=w({gramSchmidt_:iQ});function uQ(r,t=!1){if(D(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return wR(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=Wr(_(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,p]=wR(u,t);o.push(l),s.push(p)});let a=_(Tr(o,0),r.shape),i=_(Tr(s,0),r.shape);return[a,i]}}function wR(r,t=!1){return N.tidy(()=>{D(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],n=r.shape[1],o=el(e),s=cn(r),a=Ga([[1]],[1,1]),i=cn(a),u=e>=n?n:e;for(let l=0;l<u;++l){let p=s,m=i,c=o;[i,s,o]=N.tidy(()=>{let d=Be(s,[l,l],[e-l,1]),f=Jp(d),h=Be(s,[l,l],[1,1]),g=Ut(ir(h,0),Ga([[-1]]),Ga([[1]])),b=le(h,E(g,f)),T=ce(d,b);T.shape[0]===1?i=cn(a):i=mt([a,Be(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);let x=Je(ce(Ve(g,b),f)),I=Be(s,[l,0],[e-l,n]),k=E(x,i),A=ze(i);if(l===0)s=le(I,Ve(k,Ve(A,I)));else{let P=le(I,Ve(k,Ve(A,I)));s=mt([Be(s,[0,0],[l,n]),P],0)}let F=ze(k),R=Be(o,[0,l],[e,o.shape[1]-l]);if(l===0)o=le(R,Ve(Ve(R,i),F));else{let P=le(R,Ve(Ve(R,i),F));o=mt([Be(o,[0,0],[e,l]),P],1)}return[i,s,o]}),Fe([p,m,c])}return!t&&e>n&&(o=Be(o,[0,0],[e,n]),s=Be(s,[0,0],[n,n])),[o,s]})}var NR=w({qr_:uQ});var Ua=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))(Ua||{});function pQ(r,t,e=3){let n=S(r,"losses","computeWeightedLoss"),o=null;t!=null&&(o=S(t,"weights","computeWeightedLoss"));let s=o==null?n:E(n,o);if(e===0)return s;if(e===2)return he(s);if(e===1){if(o==null)return $t(s);{let a=n.size/o.size,i=ce(he(s),he(o));return a>1?ce(i,de(a)):i}}if(e===3){if(o==null)return ce(he(s),de(n.size));{let a=E(o,yr(n.shape)),i=re(he(au(a,de(0))),"float32");return ce(he(s),i)}}throw Error(`Unknown reduction: ${e}`)}var Kr=w({computeWeightedLoss_:pQ});function lQ(r,t,e,n=3){let o=S(r,"labels","absoluteDifference"),s=S(t,"predictions","absoluteDifference"),a=null;e!=null&&(a=S(e,"weights","absoluteDifference")),Ot(o.shape,s.shape,"Error in absoluteDifference: ");let i=Gt(le(o,s));return Kr(i,a,n)}var DR=w({absoluteDifference_:lQ});function mQ(r,t,e,n,o=3){let s=S(r,"labels","cosineDistance"),a=S(t,"predictions","cosineDistance"),i=null;n!=null&&(i=S(n,"weights","cosineDistance")),Ot(s.shape,a.shape,"Error in cosineDistance: ");let u=de(1),l=le(u,he(E(s,a),e,!0));return Kr(l,i,o)}var FR=w({cosineDistance_:mQ});function cQ(r,t,e,n=3){let o=S(r,"labels","hingeLoss"),s=S(t,"predictions","hingeLoss"),a=null;e!=null&&(a=S(e,"weights","hingeLoss")),Ot(o.shape,s.shape,"Error in hingeLoss: ");let i=de(1);o=le(E(de(2),o),i);let u=en(le(i,E(o,s)));return Kr(u,a,n)}var RR=w({hingeLoss_:cQ});function dQ(r,t,e,n=1,o=3){let s=S(r,"labels","huberLoss"),a=S(t,"predictions","huberLoss"),i=null;e!=null&&(i=S(e,"weights","huberLoss")),Ot(s.shape,a.shape,"Error in huberLoss: ");let u=de(n),l=Gt(le(a,s)),p=pp(l,u),m=le(l,p),c=Y(E(de(.5),qe(p)),E(u,m));return Kr(c,i,o)}var PR=w({huberLoss_:dQ});function fQ(r,t,e,n=1e-7,o=3){let s=S(r,"labels","logLoss"),a=S(t,"predictions","logLoss"),i=null;e!=null&&(i=S(e,"weights","logLoss")),Ot(s.shape,a.shape,"Error in logLoss: ");let u=de(1),l=de(n),p=Je(E(s,Ur(Y(a,l)))),m=E(le(u,s),Ur(Y(le(u,a),l))),c=le(p,m);return Kr(c,i,o)}var MR=w({logLoss_:fQ});function hQ(r,t,e,n=3){let o=S(r,"labels","meanSquaredError"),s=S(t,"predictions","meanSquaredError"),a=null;e!=null&&(a=S(e,"weights","meanSquaredError")),Ot(o.shape,s.shape,"Error in meanSquaredError: ");let i=Ty(o,s);return Kr(i,a,n)}var ER=w({meanSquaredError_:hQ});function gQ(r,t){let e=S(r,"labels","sigmoidCrossEntropyWithLogits"),n=S(t,"logits","sigmoidCrossEntropyWithLogits");Ot(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=en(n),s=E(n,e),a=pc(br(Je(Gt(n))));return Y(le(o,s),a)}function bQ(r,t,e,n=0,o=3){let s=S(r,"multiClassLabels","sigmoidCrossEntropy"),a=S(t,"logits","sigmoidCrossEntropy"),i=null;if(e!=null&&(i=S(e,"weights","sigmoidCrossEntropy")),Ot(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=de(n),p=de(1),m=de(.5);s=Y(E(s,le(p,l)),E(m,l))}let u=gQ(s,a);return Kr(u,i,o)}var LR=w({sigmoidCrossEntropy_:bQ});function yQ(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return fn((o,s,a)=>{let u=ny(s,[e],!0),l=le(re(s,"float32"),u);a([o,l]);let p=Je(E(l,o));return{value:he(p,[e]),gradFunc:(d,f)=>{let[h,g]=f,b=Es(d.shape,[e]);return[E(_(d,b),le(re(h,"float32"),br(g))),E(_(d,b),le(br(g),re(h,"float32")))]}}})(r,t)}function TQ(r,t,e,n=0,o=3){let s=S(r,"onehotLabels","softmaxCrossEntropy"),a=S(t,"logits","softmaxCrossEntropy"),i=null;if(e!=null&&(i=S(e,"weights","softmaxCrossEntropy")),Ot(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let l=de(n),p=de(1),m=de(s.shape[1]);s=Y(E(s,le(p,l)),ce(l,m))}let u=yQ(s,a);return Kr(u,i,o)}var _R=w({softmaxCrossEntropy_:TQ});function xQ(r,t,e,n){let o=S(r,"indices","sparseFillEmptyRows","int32"),s=S(t,"values","sparseFillEmptyRows"),a=S(e,"denseShape","sparseFillEmptyRows","int32"),i=S(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let u={indices:o,values:s,denseShape:a,defaultValue:i},l=N.runKernel(Gu,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var $R=w({sparseFillEmptyRows_:xQ});function IQ(r,t,e){let n=S(r,"inputIndices","sparseReshape","int32"),o=S(t,"inputShape","sparseReshape","int32"),s=S(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=N.runKernel(Zi,a);return{outputIndices:i[0],outputShape:i[1]}}var BR=w({sparseReshape_:IQ});function CQ(r,t,e){let n=S(r,"data","sparseSegmentMean"),o=S(t,"indices","sparseSegmentMean","int32"),s=S(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(Uu,a)}var OR=w({sparseSegmentMean_:CQ});function kQ(r,t,e){let n=S(r,"data","sparseSegmentSum"),o=S(t,"indices","sparseSegmentSum","int32"),s=S(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(Wu,a)}var zR=w({sparseSegmentSum_:kQ});function SQ(r,t,e,n,o,s,a,i){let u=S(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=S(t,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:e,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},m={data:u,dataSplits:l},c=N.runKernel(hi,m,p);return{nGrams:c[0],nGramsSplits:c[1]}}var GR=w({stringNGrams_:SQ});function vQ(r,t,e=!0){let n=S(r,"input","stringSplit","string"),o=S(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:e},a={input:n,delimiter:o},i=N.runKernel(Vu,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var UR=w({stringSplit_:vQ});function AQ(r,t){let e=S(r,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let o={input:e};return N.runKernel(Hu,o,n)}var WR=w({stringToHashBucketFast_:AQ});var wQ={fft:bc,ifft:al,rfft:yc,irfft:yy},NQ={hammingWindow:iR,hannWindow:Ay,frame:wy,stft:uR},cp={flipLeftRight:lR,grayscaleToRGB:mR,resizeNearestNeighbor:CR,resizeBilinear:IR,rotateWithOffset:cR,cropAndResize:pR,nonMaxSuppression:dR,nonMaxSuppressionAsync:gR,nonMaxSuppressionWithScore:bR,nonMaxSuppressionWithScoreAsync:yR,nonMaxSuppressionPadded:TR,nonMaxSuppressionPaddedAsync:xR,threshold:kR,transform:SR},pA={bandPart:vR,gramSchmidt:AR,qr:NR},DQ={absoluteDifference:DR,computeWeightedLoss:Kr,cosineDistance:FR,hingeLoss:RR,huberLoss:PR,logLoss:MR,meanSquaredError:ER,sigmoidCrossEntropy:LR,softmaxCrossEntropy:_R},FQ={sparseFillEmptyRows:$R,sparseReshape:BR,sparseSegmentMean:OR,sparseSegmentSum:zR},RQ={stringNGrams:GR,stringSplit:UR,stringToHashBucketFast:WR};var Vr=class extends dh{minimize(e,n=!1,o){let{value:s,grads:a}=this.computeGradients(e,o);if(o!=null){let i=o.map(u=>({name:u.name,tensor:a[u.name]}));this.applyGradients(i)}else this.applyGradients(a);return Fe(a),n?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return ey(e,n)}dispose(){this.iterations_!=null&&Fe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:de(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Vr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var dp=class extends Vr{constructor(e,n,o=null){super();this.learningRate=e;this.rho=n;this.epsilon=o;this.accumulatedGrads=[];this.accumulatedUpdates=[];o==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accum_grad`,variable:z(()=>we(a).variable(i))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${o}/accum_var`,variable:z(()=>we(a).variable(i))});let u=Array.isArray(e)?e[s].tensor:e[o];if(u==null)return;let l=this.accumulatedGrads[s].variable,p=this.accumulatedUpdates[s].variable;z(()=>{let m=Y(E(l,this.rho),E(qe(u),1-this.rho)),c=E(ce(_t(Y(p,this.epsilon)),_t(Y(l,this.epsilon))),u),d=Y(E(p,this.rho),E(qe(c),1-this.rho));l.assign(m),p.assign(d);let f=Y(E(c,-this.learningRate),a);a.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Fe(this.accumulatedGrads.map(e=>e.variable)),Fe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=e.length/2,o=!1;this.accumulatedGrads=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedUpdates=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}};dp.className="Adadelta";En(dp);var fp=class extends Vr{constructor(e,n=.1){super();this.learningRate=e;this.initialAccumulatorValue=n;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accumulator`,variable:z(()=>Ms(a.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(e)?e[s].tensor:e[o];if(i==null)return;let u=this.accumulatedGrads[s].variable;z(()=>{let l=Y(u,qe(i));u.assign(l);let p=Y(E(ce(i,_t(Y(l,N.backend.epsilon()))),-this.learningRate),a);a.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Fe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=!1;this.accumulatedGrads=e.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}};fp.className="Adagrad";En(fp);var hp=class extends Vr{constructor(e,n,o,s=null){super();this.learningRate=e;this.beta1=n;this.beta2=o;this.epsilon=s;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];z(()=>{this.accBeta1=de(n).variable(),this.accBeta2=de(o).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let n=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);z(()=>{let o=le(1,this.accBeta1),s=le(1,this.accBeta2);n.forEach((a,i)=>{let u=N.registeredVariables[a],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:z(()=>we(u).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:z(()=>we(u).variable(l))});let p=Array.isArray(e)?e[i].tensor:e[a];if(p==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedSecondMoment[i].variable,d=Y(E(m,this.beta1),E(p,1-this.beta1)),f=Y(E(c,this.beta2),E(qe(p),1-this.beta2)),h=ce(d,o),g=ce(f,s);m.assign(d),c.assign(f);let b=Y(E(ce(h,Y(_t(g),this.epsilon)),-this.learningRate),u);u.assign(b)}),this.accBeta1.assign(E(this.accBeta1,this.beta1)),this.accBeta2.assign(E(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Fe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),z(()=>{this.accBeta1.assign(qn(this.beta1,this.iterations_+1)),this.accBeta2.assign(qn(this.beta2,this.iterations_+1))});let n=e.length/2,o=!1;this.accumulatedFirstMoment=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}};hp.className="Adam";En(hp);var gp=class extends Vr{constructor(e,n,o,s=null,a=0){super();this.learningRate=e;this.beta1=n;this.beta2=o;this.epsilon=s;this.decay=a;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];z(()=>{this.iteration=de(0).variable(),this.accBeta1=de(n).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let n=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);z(()=>{let o=le(1,this.accBeta1),s=ce(-this.learningRate,Y(E(this.iteration,this.decay),1));n.forEach((a,i)=>{let u=N.registeredVariables[a],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:we(u).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:we(u).variable(l)});let p=Array.isArray(e)?e[i].tensor:e[a];if(p==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedWeightedInfNorm[i].variable,d=Y(E(m,this.beta1),E(p,1-this.beta1)),f=E(c,this.beta2),h=Gt(p),g=ts(f,h);m.assign(d),c.assign(g);let b=Y(E(ce(s,o),ce(d,Y(g,this.epsilon))),u);u.assign(b)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(E(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Fe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}};gp.className="Adamax";En(gp);var ki=class extends Vr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=Array.isArray(e)?e[s].tensor:e[o];if(a==null)return;let i=N.registeredVariables[o];z(()=>{let u=Y(E(this.c,a),i);i.assign(u)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=zt(de(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}};ki.className="SGD";En(ki);var bp=class extends ki{constructor(e,n,o=!1){super(e);this.learningRate=e;this.momentum=n;this.useNesterov=o;this.accumulations=[];this.m=de(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${o}/momentum`,variable:z(()=>we(a).variable(!1))});let i=this.accumulations[s].variable,u=Array.isArray(e)?e[s].tensor:e[o];u!=null&&z(()=>{let l,p=Y(E(this.m,i),u);this.useNesterov?l=Y(E(this.c,Y(u,E(p,this.m))),a):l=Y(E(this.c,p),a),i.assign(p),a.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Fe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=!1;this.accumulations=e.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}};bp.className="Momentum";En(bp);var yp=class extends Vr{constructor(e,n=.9,o=0,s=null,a=!1){super();this.learningRate=e;this.decay=n;this.momentum=o;this.epsilon=s;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=a,s==null&&(this.epsilon=N.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${o}/rms`,variable:z(()=>we(a).variable(i))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${o}/momentum`,variable:z(()=>we(a).variable(i))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${o}/mg`,variable:z(()=>we(a).variable(i))});let u=Array.isArray(e)?e[s].tensor:e[o];if(u==null)return;let l=this.accumulatedMeanSquares[s].variable,p=this.accumulatedMoments[s].variable;z(()=>{let m=Y(E(l,this.decay),E(qe(u),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,d=Y(E(c,this.decay),E(u,1-this.decay)),f=ce(E(u,this.learningRate),_t(le(m,Y(qe(d),this.epsilon)))),h=Y(E(p,this.momentum),f);l.assign(m),c.assign(d),p.assign(h);let g=le(a,h);a.assign(g)}else{let c=Y(E(l,this.decay),E(qe(u),1-this.decay)),d=Y(E(p,this.momentum),ce(E(u,this.learningRate),_t(Y(c,this.epsilon))));l.assign(c),p.assign(d);let f=le(a,d);a.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Fe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Fe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Fe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=this.centered?e.length/3:e.length/2,o=!1;this.accumulatedMeanSquares=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedMoments=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}};yp.className="RMSProp";En(yp);var Wa=class{static sgd(t){return new ki(t)}static momentum(t,e,n=!1){return new bp(t,e,n)}static rmsprop(t,e=.9,n=0,o=null,s=!1){return new yp(t,e,n,o,s)}static adam(t=.001,e=.9,n=.999,o=null){return new hp(t,e,n,o)}static adadelta(t=.001,e=.95,n=null){return new dp(t,e,n)}static adamax(t=.002,e=.9,n=.999,o=null,s=0){return new gp(t,e,n,o,s)}static adagrad(t,e=.1){return new fp(t,e)}};var ml={sgd:Wa.sgd,momentum:Wa.momentum,adadelta:Wa.adadelta,adagrad:Wa.adagrad,rmsprop:Wa.rmsprop,adamax:Wa.adamax,adam:Wa.adam};var PQ=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function Ch(){return new Promise(r=>PQ(()=>r()))}var C={};He(C,{ERF_A1:()=>qQ,ERF_A2:()=>jQ,ERF_A3:()=>XQ,ERF_A4:()=>YQ,ERF_A5:()=>ZQ,ERF_P:()=>HQ,PARALLELIZE_THRESHOLD:()=>Ry,RowPartitionType:()=>KR,SELU_SCALE:()=>mA,SELU_SCALEALPHA:()=>lA,applyActivation:()=>pl,assertAndGetBroadcastShape:()=>$e,assertAxesAreInnerMostDims:()=>a8,assertParamsConsistent:()=>MQ,assignToTypedArray:()=>n7,axesAreInnerMostDims:()=>Yv,calculateShapes:()=>c2,checkEinsumDimSizes:()=>p7,checkPadOnDimRoundingMode:()=>Rt,combineLocations:()=>X2,combineRaggedTensorToTensorShapes:()=>LQ,complexWithEvenIndex:()=>e7,complexWithOddIndex:()=>t7,computeConv2DInfo:()=>Qp,computeConv3DInfo:()=>L2,computeDefaultPad:()=>Xv,computeDilation2DInfo:()=>uX,computeOptimalWindowSize:()=>OQ,computeOutAndReduceShapes:()=>Zv,computeOutShape:()=>EQ,computePool2DInfo:()=>jv,computePool3DInfo:()=>pX,convertConv2DDataFormat:()=>_2,decodeEinsumEquation:()=>i7,eitherStridesOrDilationsAreOne:()=>Er,expandShapeToKeepDim:()=>Es,exponent:()=>s7,exponents:()=>o7,fromStringArrayToUint8:()=>F7,fromUint8ToStringArray:()=>D7,getAxesPermutation:()=>Qv,getBroadcastDims:()=>p2,getComplexWithIndex:()=>r7,getEinsumComputePath:()=>l7,getEinsumPermutation:()=>u7,getFusedBiasGradient:()=>ul,getFusedDyActivation:()=>il,getImageCenter:()=>zQ,getInnerMostAxes:()=>i8,getPermuted:()=>UQ,getRaggedRank:()=>$Q,getReductionAxes:()=>St,getReshaped:()=>GQ,getReshapedPermuted:()=>WQ,getRowPartitionTypesHelper:()=>_Q,getSliceBeginCoords:()=>KQ,getSliceSize:()=>VQ,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>f7,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>h7,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>g7,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>T7,getSparseReshapeInputOutputMismatchErrorMessage:()=>I7,getSparseReshapeInputOutputMultipleErrorMessage:()=>x7,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>b7,getSparseReshapeNegativeOutputDimErrorMessage:()=>y7,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>v7,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>C7,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>k7,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>S7,getUndoAxesPermutation:()=>gh,isIdentityPermutation:()=>m7,log:()=>b6,mergeRealAndImagArrays:()=>QQ,prepareAndValidate:()=>m2,prepareSplitSize:()=>d7,segment_util:()=>dA,shouldFuse:()=>ll,slice_util:()=>xt,splitRealAndImagArrays:()=>JQ,tupleValuesAreOne:()=>Qo,upcastType:()=>Et,validateDefaultValueShape:()=>BQ,validateInput:()=>Pb,validateUpdateShape:()=>Uv,warn:()=>gi});function MQ(r,t){let e=r[0].length;r.forEach((o,s)=>{D(o.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),D(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<e;a++)D(a===t||o[a]===n[a],()=>`Error in concat${e}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function EQ(r,t){let e=r[0].slice();for(let n=1;n<r.length;n++)e[t]+=r[n][t];return e}var KR=(a=>(a[a.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",a[a.VALUE_ROWIDS=1]="VALUE_ROWIDS",a[a.ROW_LENGTHS=2]="ROW_LENGTHS",a[a.ROW_SPLITS=3]="ROW_SPLITS",a[a.ROW_LIMITS=4]="ROW_LIMITS",a[a.ROW_STARTS=5]="ROW_STARTS",a))(KR||{});function LQ(r,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<r+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(r+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${n.length}`);for(let o=1;o<e.length;++o){let s=e[o],a=n[n.length-e.length+o],i=n[a];if(s>=0)if(i>=0){if(i!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${o+r}] = ${s} but shape[${o+r}] = ${i}`)}else n[a]=s}return n}function _Q(r){let t={FIRST_DIM_SIZE:0,VALUE_ROWIDS:1,ROW_LENGTHS:2,ROW_SPLITS:3,ROW_LIMITS:4,ROW_STARTS:5},e=[];for(let n of r)if(n in t)e.push(t[n]);else break;return e}function $Q(r){return r.length===0?0:r[0]===0?r.length-1:r.length}function BQ(r,t){if(r==null||t==null)return;let e=r.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let o=0;o<Math.min(e,n-1);++o){let s=r[o],a=t[o+1];if(s>=0&&a>=0&&s!==1&&s!==a)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${o-r.length}] = ${s} but ragged tensor input.flatValues.shape[${o-r.length}] = ${a}`)}}var Ry=30;function OQ(r){return r<=Ry?r:ym(r,Math.floor(Math.sqrt(r)))}function zQ(r,t,e){let n=e*(typeof r=="number"?r:r[0]),o=t*(typeof r=="number"?r:r[1]);return[n,o]}function GQ(r,t,e,n=!0){let o=[];if(n)o=o.concat(t.slice(0)),o.push(r[0]/e),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=t.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/t[a],t[a]]);o=o.concat(r.slice(s+1))}return o}function UQ(r,t,e=!0){let n=[];if(e){n.push(t);for(let o=t+1;o<r;++o)o<=2*t?(n.push(o),n.push(o-(t+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=t*2+1||a%2===1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function WQ(r,t,e,n=!0){let o=[];n?o.push(r[0]/e):o.push(r[0]*e);for(let s=1;s<r.length;++s)s<=t.length?n?o.push(t[s-1]*r[s]):o.push(r[s]/t[s-1]):o.push(r[s]);return o}function KQ(r,t){let e=[0];for(let n=0;n<t;++n)e.push(r[n][0]);return e}function VQ(r,t,e){let n=r.slice(0,1);for(let o=0;o<e;++o)n.push(r[o+1]-t[o][0]-t[o][1]);return n}var lA=1.7580993408473768,mA=1.0507009873554805;var HQ=.3275911,qQ=.254829592,jQ=-.284496736,XQ=1.421413741,YQ=-1.453152027,ZQ=1.061405429;function QQ(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let n=0;n<e.length;n+=2)e[n]=r[n/2],e[n+1]=t[n/2];return e}function JQ(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)t[n/2]=r[n],e[n/2]=r[n+1];return{real:t,imag:e}}function e7(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=0;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function t7(r){let t=Math.floor(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=2;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function r7(r,t){let e=r[t*2],n=r[t*2+1];return{real:e,imag:n}}function n7(r,t,e,n){r[n*2]=t,r[n*2+1]=e}function o7(r,t){let e=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(t?2:-2)*Math.PI*(o/r);e[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:e,imag:n}}function s7(r,t,e){let n=(e?2:-2)*Math.PI*(r/t),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var cA="->",a7=/->/g,VR=",",HR="...";function i7(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(a7,"").length)/cA.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${cA}").`);let[n,o]=r.split(cA);D(n.indexOf(HR)===-1,()=>`The ellipsis notation ("${HR}") is not supported yet.`);let s=n.split(VR),a=s.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let c=0;c<n.length;++c){let d=n[c];i.indexOf(d)===-1&&d!==VR&&i.push(d)}let u=new Array(s.length);for(let c=0;c<a;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);u[c]=[];for(let d=0;d<s[c].length;++d)u[c].push(i.indexOf(s[c][d]))}let l=i.length,p=o.length,m=[];for(let c=p;c<l;++c)m.push(c);return{allDims:i,summedDims:m,idDims:u}}function u7(r,t){let e=new Array(r);e.fill(-1);for(let o=0;o<t.length;++o)e[t[o]]=o;let n=[];for(let o=0;o<r;++o)e[o]===-1&&n.push(o);return e=e.filter(o=>o!==-1),{permutationIndices:e,expandDims:n}}function p7(r,t,e){let n=new Array(r);for(let o=0;o<e.length;++o){let s=e[o].shape;for(let a=0;a<t[o].length;++a)n[t[o][a]]===void 0?n[t[o][a]]=s[a]:D(n[t[o][a]]===s[a],()=>`Expected dimension ${n[t[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function l7(r,t){let e=r,n=[],o=0;r.length===0&&e.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<e.length;++a){let i=e[a],u=c7(t,i);for(let l of u)s.indexOf(l)===-1&&(n[a].push(l),s.push(l))}return{path:e,steps:n}}function m7(r){return r.every((t,e)=>t===e)}function c7(r,t){let e=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function d7(r,t,e=0){let n=[];if(typeof t=="number")D(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(r.shape[e]/t);else{let o=t.reduce((a,i)=>(i===-1&&(a+=1),a),0);D(o<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let a=t.reduce((i,u)=>u>0?i+u:i);t[s]=r.shape[e]-a}D(r.shape[e]===t.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function f7(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function h7(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function g7(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function b7(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function y7(r,t){return`size ${r} must be non-negative, not ${t}`}function T7(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function x7(r,t){let e=tt(r),n=tt(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${t}`}function I7(r,t){let e=tt(r),n=tt(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${t}`}function C7(){return"segment ids must be >= 0"}function k7(){return"segment ids are not increasing"}function S7(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function v7(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var dA={};He(dA,{collectGatherOpShapeInfo:()=>N7,computeOutShape:()=>w7,segOpComputeOptimalWindowSize:()=>A7});function A7(r,t){let e=!1,n;for(r<=Ry?(n=r,e=!0):n=ym(r,Math.floor(Math.sqrt(r)));!e;)n>t||n===r?e=!0:n=ym(r,n+1);return n}function w7(r,t,e){let n=[],o=r.length;for(let s=0;s<o;s++)s!==t?n.push(r[s]):n.push(e);return n}function N7(r,t,e,n){let o=t.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let m=0;m<n;++m)if(r.shape[m]!==t.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${t.shape[m]}.`);let a=r.shape[e],i=[],u=1,l=1,p=1;for(let m=0;m<n;++m)i.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<e;m++)i.push(r.shape[m]),l*=r.shape[m];for(let m=n;m<o;m++)i.push(t.shape[m]);for(let m=e+1;m<s;m++)i.push(r.shape[m]),p*=r.shape[m];return{batchSize:u,sliceSize:p,outerSize:l,dimSize:a,outputShape:i}}function D7(r){try{return r.map(t=>Ym(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function F7(r){return r.map(t=>Xu(t))}var xr={};He(xr,{nonMaxSuppressionV3Impl:()=>Ny,nonMaxSuppressionV4Impl:()=>Dy,nonMaxSuppressionV5Impl:()=>Fy,whereImpl:()=>Cy});var _n=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,_n.prototype)}},Hr=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Hr.prototype)}},B=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,B.prototype)}},Ae=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ae.prototype)}},Ic=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ic.prototype)}};var kh=class{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}};function zs(r,t){if(Array.isArray(r)){let e=[];for(let n=0;n<t;n++)e=e.concat(r);return e}else{let e=new Array(t);return e.fill(r),e}}function rs(r,t){if(!r)throw new Ic(t)}function hA(r,t){let e=0;for(let n of r)n===t&&e++;return e}function Fr(r){return r.length===1?r[0]:r}function vt(r){return Array.isArray(r)?r:[r]}function Gs(r){let e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function iu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}var Os={};function Cc(r){if(r==null)return null;let t={};return t.className=r.getClassName(),t.config=r.getConfig(),t}function fA(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(t=>fA(t));else{let t=Object.keys(r);for(let e of t){let n=r[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[e]=n.value:fA(n))}}}function Si(r,t={},e={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in e)a=e[s];else if(s in Os)a=Os[s];else if(a=t[s],a==null)throw new B(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new B(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,u;if(a in e?[i,u]=e[a]:a in Os?[i,u]=Os.className:a in t&&([i,u]=t[a]),i==null)throw new B(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let d of Object.keys(Os))l[d]=Os[d];for(let d of Object.keys(e))l[d]=e[d];let p=s.config;p.customObjects=l;let m={...Os};for(let d of Object.keys(e))Os[d]=e[d];fA(s.config);let c=u(i,s.config,e,o);return Os={...m},c}else{let l={...Os};for(let m of Object.keys(e))Os[m]=e[m];let p=new i(s.config);return Os={...l},p}}}function R7(r,t){return r<t?-1:r>t?1:0}function Sh(r,t){return-1*R7(r,t)}function Us(r){if(r==null)return r;let t=[];for(let e of r)t.indexOf(e)===-1&&t.push(e);return t}function qR(r){if(r==null)throw new B(`Invalid value in obj: ${JSON.stringify(r)}`);for(let t in r)if(r.hasOwnProperty(t))return!1;return!0}function vi(r,t,e){if(e!=null&&r.indexOf(e)<0)throw new B(`${e} is not a valid ${t}.  Valid values are ${r} or null/undefined.`)}function Py(r,t,e=0,n=1/0){return rs(e>=0),rs(n>=e),Array.isArray(r)&&r.length>=e&&r.length<=n&&r.every(o=>typeof o===t)}function rr(r,t){Array.isArray(r)?(y.assert(r.length>0,()=>`${t} is unexpectedly an empty array.`),r.forEach((e,n)=>rr(e,`element ${n+1} of ${t}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${t} to be a positive integer, but got ${jR(r)}.`)}function jR(r){return r===null?"null":Array.isArray(r)?"["+r.map(t=>jR(t)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function XR(r,t,e){let n=e!=null?e():y.now(),o;return(...a)=>{let i=e!=null?e():y.now();return i-n<t||(n=i,o=r(...a)),o}}function My(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var P7=0;function Ly(){return P7++}var Ey={};function Tp(r=""){return r in Ey||(Ey[r]=0),Ey[r]+=1,r+Ey[r].toString()}var YR=["channelsFirst","channelsLast"],ZR=["nearest","bilinear"],QR=["valid","same","causal"],JR=["max","avg"],eP=["sum","mul","concat","ave"];var kc=new Map;function Wt(r){vi(YR,"DataFormat",r)}function rP(r){vi(ZR,"InterpolationFormat",r)}function hn(r){vi(QR,"PaddingMode",r)}function gA(r){vi(JR,"PoolMode",r)}var vh=[],tP="/";function Va(r,t){vh.push(r);try{let e=t();return vh.pop(),e}catch(e){throw vh.pop(),e}}function M7(){return vh.length===0?"":vh.join(tP)+tP}function _y(r){if(!nP(r))throw new Error("Not a valid tensor name: '"+r+"'");return M7()+r}function $y(r){if(!nP(r))throw new Error("Not a valid tensor name: '"+r+"'");kc.has(r)||kc.set(r,0);let t=kc.get(r);if(kc.set(r,kc.get(r)+1),t>0){let e=`${r}_${t}`;return kc.set(e,1),e}else return r}var E7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function nP(r){return!!r.match(E7)}function oP(r){return r===parseInt(r.toString(),10)}function Ws(r,t,e){t==null&&(t=0),e==null&&(e=r.length);let n=1;for(let o=t;o<e;++o)n*=r[o];return n}function cl(r){if(r.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n<t&&(t=n)}return t}function Ha(r){if(r.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n>t&&(t=n)}return t}function tn(r,t){if(t<r)throw new B(`end (${t}) < begin (${r}) is forbidden.`);let e=[];for(let n=r;n<t;++n)e.push(n);return e}var bA;function dr(){return bA==null&&(bA=a2().epsilon()),bA}function gn(){return"channelsLast"}function dl(r,t){return re(r,t)}function pu(r,t=-1){let e=r.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),_(r,e)}function sP(r,t){return z(()=>{if(r.shape.length!==2)throw new B(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let e=pu(r,1);return Oy(e,[1,t,1])})}function aP(r){let t=[Ws(r.shape)];return _(r,t)}function iP(r){if(r.rank<=1)throw new B(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let t=[r.shape[0],Ws(r.shape,1)];return _(r,t)}function uu(r,t,e){return z(()=>{switch(r.rank){case 1:return fc(r,t,e);case 2:return xh(r,[t,0],[e,r.shape[1]]);case 3:return hc(r,[t,0,0],[e,r.shape[1],r.shape[2]]);case 4:return sl(r,[t,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Be(r,[t,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Be(r,[t,0,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new B(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function yA(r,t,e){return z(()=>{switch(r.rank){case 1:return fc(r,t,e);case 2:return xh(r,[0,t],[r.shape[0],e]);case 3:return hc(r,[0,0,t],[r.shape[0],r.shape[1],e]);case 4:return sl(r,[0,0,0,t],[r.shape[0],r.shape[1],r.shape[2],e]);default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Ah(r,t,e,n){return z(()=>{switch(r.rank){case 1:return fc(r,t,e);case 2:switch(n){case 1:return uu(r,t,e);case 2:return yA(r,t,e);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return uu(r,t,e);case 2:return hc(r,[0,t,0],[r.shape[0],e,r.shape[2]]);case 3:return yA(r,t,e);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return uu(r,t,e);case 2:return sl(r,[0,t,0,0],[r.shape[0],e,r.shape[2],r.shape[3]]);case 3:return sl(r,[0,0,t,0],[r.shape[0],r.shape[1],e,r.shape[3]]);case 4:return yA(r,t,e);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Sc(r,t=-1){let e;return t<0&&(e=r[0].rank,e!==0?t=e:t=0),t===r[0].rank&&(t=-1),mt(r,t)}function xA(r,t){switch(r.rank){case 1:return Ub([r,t]);case 2:return Wb([r,t],0);case 3:return Kb([r,t],0);case 4:return Vb([r,t],0);default:throw new B(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Oy(r,t){if(Array.isArray(t)||(t=[t]),r.rank!==t.length)throw new B(`The length of input n (${t.length}) does not match the number of dimensions in input x (${r.rank})`);return Qr(r,t)}function vc(r,t=0,e=1,n,o){return ol(r,t,e,n,o)}function Ks(r,t,e,n){if(r.rank<2||t.rank<2)throw new Ae(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${t.shape}`);if(t.rank>=3){let o=r.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(o!==s)throw new Ae(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${t.shape}`)}if(r.rank===2&&t.rank===2)return mp.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:n?TA(r.rank,n,gn()):null,activation:e});{let o=r.shape.slice(),s=o.pop();r=_(r,[-1,s]);let a=t.shape.slice(),i=a.pop(),u=a.pop(),l=[...a,i],p=Array.from({length:t.rank},(f,h)=>h===0?t.rank-2:h<=t.rank-2?h-1:h);t=_(ze(t,p),[u,-1]);let m=[...o,...l],c=!1,d=!1;return _(mp.matMul({a:r,b:t,transposeA:c,transposeB:d,bias:n?TA(r.rank,n,gn()):null,activation:e}),m)}}function zy(r,t,e){return z(()=>(Array.isArray(t)?t=qt(t,"int32"):t=re(t,"int32"),up(r,t,e)))}function fl(r){return E(r,r)}function TA(r,t,e){let n=t.shape;if(t.rank!==1&&t.rank!==r)throw new B(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${r}`);if(r===5){if(e==="channelsFirst")return n.length===1?_(t,[1,n[0],1,1,1]):_(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?_(t,[1,1,1,1,n[0]]):_(t,[1].concat(n))}else if(r===4){if(e==="channelsFirst")return n.length===1?_(t,[1,n[0],1,1]):_(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?_(t,[1,1,1,n[0]]):_(t,[1].concat(n))}else if(r===3){if(e==="channelsFirst")return n.length===1?_(t,[1,n[0],1]):_(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?_(t,[1,1,n[0]]):_(t,[1].concat(n))}else if(r<3)return t;throw new B(`Unsupported input rank by biasAdd: ${t.rank}`)}function bn(r,t,e){return z(()=>(e==null&&(e=gn()),Wt(e),Y(r,TA(r.rank,t,e))))}function uP(r,t=1){if(t!==1)throw new Ae(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ap(r)}function pP(r){return z(()=>ce(r,Y(Gt(r),1)))}function Gy(r,t,e,n){return z(()=>aA(r,t,e,n))}function lP(r){return z(()=>{let t=Y(.5,E(.2,r));return Gr(t,0,1)})}function xp(r,t,e=!1){return e?r():t()}var mP=["fanIn","fanOut","fanAvg"],cP=["normal","uniform","truncatedNormal"];function L7(r){vi(mP,"FanMode",r)}function _7(r){vi(cP,"Distribution",r)}var Tn=class extends ee.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Ac=class extends Tn{apply(t,e){return It(t,e)}};Ac.className="Zeros";ee.registerClass(Ac);var Ip=class extends Tn{apply(t,e){return yr(t,e)}};Ip.className="Ones";ee.registerClass(Ip);var wc=class extends Tn{constructor(e){super();if(typeof e!="object")throw new B(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new B(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return z(()=>E(de(this.value),yr(e,n)))}getConfig(){return{value:this.value}}};wc.className="Constant";ee.registerClass(wc);var Nc=class extends Tn{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return Ii(e,this.minval,this.maxval,n)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Nc.className="RandomUniform";ee.registerClass(Nc);var Dc=class extends Tn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`randomNormal does not support dType ${n}.`);return vc(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Dc.className="RandomNormal";ee.registerClass(Dc);var Fc=class extends Tn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`truncatedNormal does not support dType ${n}.`);return Tc(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Fc.className="TruncatedNormal";ee.registerClass(Fc);var Rc=class extends Tn{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,n){return z(()=>{if(e.length!==2||e[0]!==e[1])throw new B("Identity matrix initializer can only be used for 2D square matrices.");return E(this.gain,el(e[0]))})}getConfig(){return{gain:this.gain}}};Rc.className="Identity";ee.registerClass(Rc);function $7(r,t="channelsLast"){let e,n;if(Wt(t),r.length===2)e=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(t==="channelsFirst"){let o=Ws(r,2);e=r[1]*o,n=r[0]*o}else if(t==="channelsLast"){let o=Ws(r,0,r.length-2);e=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=Ws(r);e=Math.sqrt(o),n=Math.sqrt(o)}return[e,n]}var qr=class extends Tn{constructor(e){super();if(e.scale<0)throw new B(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,L7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,_7(this.distribution),this.seed=e.seed}apply(e,n){let o=$7(e),s=o[0],a=o[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,s):this.mode==="fanOut"?i/=Math.max(1,a):i/=Math.max(1,(s+a)/2),this.distribution==="normal"){let u=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`${this.getClassName()} does not support dType ${n}.`);return Tc(e,0,u,n,this.seed)}else{let u=Math.sqrt(3*i);return Ii(e,-u,u,n)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};qr.className="VarianceScaling";ee.registerClass(qr);var hl=class extends qr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qr.className}};hl.className="GlorotUniform";ee.registerClass(hl);var gl=class extends qr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qr.className}};gl.className="GlorotNormal";ee.registerClass(gl);var bl=class extends qr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qr.className}};bl.className="HeNormal";ee.registerClass(bl);var yl=class extends qr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qr.className}};yl.className="HeUniform";ee.registerClass(yl);var Tl=class extends qr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qr.className}};Tl.className="LeCunNormal";ee.registerClass(Tl);var xl=class extends qr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qr.className}};xl.className="LeCunNormal";ee.registerClass(xl);var Pc=class extends Tn{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Ae("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,n){return z(()=>{if(e.length<2)throw new Ae("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let o=e[0]>e[1]?[e[1],e[0]]:e,s=vc(o,0,1,"float32"),a=pA.gramSchmidt(s);return e[0]>e[1]&&(a=ze(a)),E(this.gain,a)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Pc.className="Orthogonal";ee.registerClass(Pc);var dP={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function fP(r,t={}){return Si(r,ee.SerializationMap.getMap().classNameMap,t,"initializer")}function Pt(r){return Cc(r)}function Ct(r){if(typeof r=="string"){let t=r in dP?dP[r]:r;if(t==="GlorotNormal")return new gl;if(t==="GlorotUniform")return new hl;if(t==="HeNormal")return new bl;if(t==="HeUniform")return new yl;if(t==="LeCunNormal")return new Tl;if(t==="LeCunUniform")return new xl;{let e={};return e.className=t,e.config={},fP(e)}}else return r instanceof Tn?r:fP(r)}function Uy(r){return Array.isArray(r)&&Array.isArray(r[0])}function Mc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function _e(r){let t;if(Array.isArray(r)){if(r.length!==1)throw new B(`Expected Tensor length to be 1; got ${r.length}`);t=r[0]}else t=r;return t}function rt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new B(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Ec(r){let t=0;for(let e of r)e.shape.length===0?t+=1:t+=e.shape.reduce((n,o)=>n*o);return t}var gP="Variable",wh=class{constructor(t,e="float32",n=gP,o=!0,s=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Ly(),n=n??gP,this.originalName=_y(n),this.name=$y(this.originalName),this.trainable_=o,this.constraint=s,this.val=Iy(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),O7(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}};function O7(r,t){if(r.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(t.shape))}function Nh(r){return r.map(t=>t.read())}function Lc(r){r.forEach(t=>{t[0].write(t[1])})}var At=class{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}},rn=class{constructor(t,e,n,o,s,a,i){this.dtype=t;this.shape=e;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=Ly(),a!=null&&(this.originalName=_y(a),this.name=$y(this.originalName)),this.rank=e.length}},z7=0,lu=class{constructor(t,e){this.callArgs=e;this.id=z7++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let n of t.inboundLayers)n?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},G7=0,Oe=class extends ee.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=G7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){let o=this.getClassName();n=Gs(o)+"_"+Tp(o)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let o;if(e.batchInputShape!=null)o=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),o=[a].concat(e.inputShape)}this.batchInputShape=o;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new Hr(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new B(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Fr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Fr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new _n(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new _n(`Layer ${this.name} is not connected, no input to return.`);return Fr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new _n(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new _n(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Fr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=vt(e),this.inputSpec==null||this.inputSpec.length===0)return;let n=vt(this.inputSpec);if(e.length!==n.length)throw new B(`Layer ${this.name} expects ${n.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let o=0;o<e.length;o++){let s=e[o],a=n[o];if(a==null)continue;let i=s.rank;if(a.ndim!=null&&i!==a.ndim)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&s.dtype!==a.dtype)throw new B(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${s.dtype}.`);if(a.axes){let u=s.shape;for(let l in a.axes){let p=Number(l),m=a.axes[l],c=p>=0?u[p]:u[u.length+p];if(m!=null&&[m,null].indexOf(c)===-1)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected axis ${p} of input shape to have value ${m} but got shape ${u}.`)}}if(a.shape!=null)for(let u=0;u<a.shape.length;++u){let l=a.shape[u],p=s.shape[u];if(l!=null&&p!=null&&l!==p)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${s.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();let o=vt(e),s=!0;for(let i of o)if(!(i instanceof rn)){s=!1;break}let a=!0;for(let i of o)if(i instanceof rn){a=!1;break}if(s===a)throw new B("Arguments to apply() must be all SymbolicTensors or all Tensors");return Va(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let i=[];for(let u of vt(e))i.push(u.shape);this.build(Fr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let i=this.call(e,n),u=vt(i),l=[];for(let p of u)o.indexOf(p)!==-1&&(p=p.clone()),l.push(p);if(i=Fr(l),this.activityRegularizer!=null)throw new Ae("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=U7(e),u=this.computeOutputShape(i),l,p=W7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),u!=null&&u.length>0&&Array.isArray(u[0])?l=u.map((m,c)=>new rn(p,m,this,vt(e),n,this.name,c)):l=new rn(p,u,this,vt(e),n,this.name),this.addInboundNode(e,l,null,null,i,u,n),this._refCount++,this.activityRegularizer!=null)throw new Ae("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((o,s)=>{o!=null&&e[s]!=null&&e[s]!==o&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new _n(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let n of this.inboundNodes){let o=JSON.stringify(n.outputShapes);e.indexOf(o)===-1&&e.push(o)}if(e.length===1){let n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new _n(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Hr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ec(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Nh(e?this.trainableWeights:this.weights)}setWeights(e){z(()=>{let n=this.weights;if(n.length!==e.length)throw new B(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;let o=[],s=Nh(n);for(let a=0;a<s.length;++a){let i=s[a],u=n[a],l=e[a];if(!y.arraysEqual(i.shape,l.shape))throw new B(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);o.push([u,l])}Lc(o)})}addWeight(e,n,o,s,a,i,u,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new B(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),o==null&&(o="float32"),this.fastWeightInitDuringBuild&&(s=l!=null?l():Ct("zeros"));let p=s.apply(n,o),m=new wh(p,o,e,i,u);return p.dispose(),a!=null&&this.addLoss(()=>a.apply(m.read())),i==null&&(i=!0),i?this._trainableWeights.push(m):this._nonTrainableWeights.push(m),m}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=vt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(o=>{if(o!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(e,n,o,s,a,i,u=null){let l=vt(e);n=vt(n),o=vt(o),s=vt(s),a=Mc(a),i=Mc(i);let p=[],m=[],c=[];for(let d of l)p.push(d.sourceLayer),m.push(d.nodeIndex),c.push(d.tensorIndex);new lu({outboundLayer:this,inboundLayers:p,nodeIndices:m,tensorIndices:c,inputTensors:l,outputTensors:n,inputMasks:o,outputMasks:s,inputShapes:a,outputShapes:i},u);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function U7(r){r=vt(r);let t=[];for(let e of r)t.push(e.shape);return Fr(t)}function W7(r){return"float32"}function IA(r,t,e){if((t==null||e!=null&&e>0)&&(t=r.sourceLayer,e=r.nodeIndex),t.inboundNodes.length===0)return[r];{let n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],u=n.nodeIndices[s],l=IA(a,i,u);for(let p of l)o.indexOf(p)===-1&&o.push(p)}return o}}}var qa=class extends Oe{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Tp("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new B("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new B("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new B("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=e.dtype||"float32";this.batchInputShape=n,this.dtype=o,this.inputSpec=[{shape:n}];let s=new rn(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new lu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new B(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};qa.className="InputLayer";ee.registerClass(qa);function Wy(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new B("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=r.batchShape;r.shape!=null&&t==null&&(t=[null].concat(r.shape));let e=r.dtype;return e==null&&(e="float32"),new qa({batchInputShape:t,name:r.name,dtype:e,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function K7(r,t){if(r.dtype==null||r.dtype===t.dtype)return t;try{return re(t,r.dtype)}catch{throw new B(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Vs=class{constructor(t){this.id2Value={};this.id2Mask={};this.name2Id={};if(t instanceof Vs)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=K7(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new B(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof rn){if(this.id2Value[t.id]==null)throw new B(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new B(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof rn){if(this.id2Value[t.id]==null)throw new B(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new B(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Fe(this.id2Mask)}},Ky=new kh,Vy=new kh;function yP(r){Ky?.setMaxEntries(r),Vy?.setMaxEntries(r)}function Il(r,t,e,n){let o=e==null?!1:e.training,s=Array.isArray(r),a=s?r:[r],i=a.map(f=>f.name),u=[],l=t.names();for(let f of i)l.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let p=i.join(",")+"|"+t.names().sort().join(","),m=Ky.get(p),c;if(m==null){let f=V7(a,t);m=f.sorted,c=f.recipientCounts,Ky.put(p,m),Vy.put(p,c)}c={},o||Object.assign(c,Vy.get(p));let d=new Vs(t);for(let f=0;f<m.length;++f){if(n!=null){let P=mh().numTensors;P>n.maxNumTensors&&(n.maxNumTensors=P),P<n.minNumTensors&&(n.minNumTensors=P)}let h=m[f],g=h.sourceLayer;if(g instanceof qa)continue;let b=[],T=[],x=[],I=!1;for(let P of h.inputs){let L=d.getValue(P),O=d.getMask(P);b.push(L),T.push(O),O!=null&&(I=!0),o||(c[P.name]--,c[P.name]===0&&!t.hasKey(P)&&i.indexOf(P.name)===-1&&!L.isDisposed&&P.sourceLayer.stateful!==!0&&x.push(L))}I&&(e=e||{},e.mask=T[0]);let k=vt(g.apply(b,e)),A=null;g.supportsMasking&&(A=g.computeMask(b,T));let F=q7(h),R=Array.isArray(F)?F:[F];for(let P=0;P<R.length;++P){d.hasKey(R[P])||d.add(R[P],k[P],Array.isArray(A)?A[0]:A);let L=i.indexOf(R[P].name);L!==-1&&(u[L]=k[P])}o||Fe(x)}return d.disposeMasks(),s?u:u[0]}function V7(r,t){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(r.length===1){let o=bP(r[0],t);e=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=bP(s,t);for(let u of a)o.has(u.name)||(e.push(u),o.add(u.name));for(let u in i)n[u]==null&&(n[u]=new Set),i[u].forEach(l=>n[u].add(l))}}return{sorted:e,recipientCounts:H7(n)}}function H7(r){let t={};for(let e in r)t[e]=r[e].size;return t}function bP(r,t){let e=new Set,n=[],o={};for(let i of t.names())e.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(e.has(i.name)){s.pop();continue}let u=a[a.length-1]===s.length-1;if(i.inputs.length===0||u)s.pop(),n.push(i),e.add(i.name),u&&a.pop();else{a.push(s.length-1);for(let l of i.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(i.name),!e.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function q7(r){let t;if(r.sourceLayer.inboundNodes.length===1)t=r.sourceLayer.output;else{let e=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){e=n;break}t=r.sourceLayer.getOutputAt(e)}return t}var j7=$();j7.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,yP);var Hy={kernelName:ms,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,Ci(re(e,"float32"),-1))}}};var TP={kernelName:Mi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=qe(re(e,"float32")),o=_t(le(de(1),n));return Je(ce(r,o))}}}};var xP={kernelName:Ei,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=_t(le(qe(re(e,"float32")),1));return ce(r,n)}}}};var IP={kernelName:Nn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=r,u=St(e.shape,o);return u.length>0&&(i=he(i,u)),_(i,e.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=he(i,u)),_(i,n.shape)}}}};var CP={kernelName:so,saveAllInputs:!0,gradFunc:(r,t)=>{let e={};return t.forEach((n,o)=>{e[o]=()=>r.clone()}),e}};var kP={kernelName:ao,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>we(e)}}};var SP={kernelName:mi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>we(e)}}};var vP={kernelName:$i,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,_t(le(de(1),qe(re(e,"float32")))))}}};var AP={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=_t(Y(de(1),qe(re(e,"float32"))));return ce(r,n)}}}};var wP={kernelName:la,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=Y(qe(e),qe(n)),u=E(r,ce(n,i)),l=St(e.shape,o);return l.length>0&&(u=he(u,l)),_(u,e.shape)},b:()=>{let i=Y(qe(e),qe(n)),u=Je(E(r,ce(e,i))),l=St(n.shape,o);return l.length>0&&(u=he(u,l)),_(u,n.shape)}}}};var NP={kernelName:Oi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,Y(qe(re(e,"float32")),1))}}};var DP={kernelName:zi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,le(de(1),qe(re(e,"float32"))))}}};function X7(r,t,e,n,o,s){let a=S(r,"dy","avgPool3dGrad"),i=S(t,"input","avgPool3dGrad"),u=a,l=i,p=!1;i.rank===4&&(p=!0,u=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),D(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Rt("avgPool3dGrad",o,s);let m={dy:u,input:l},c={filterSize:e,strides:n,pad:o,dimRoundingMode:s},d=N.runKernel(Im,m,c);return p?_(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var FP=w({avgPool3dGrad_:X7});var RP={kernelName:Ru,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=e;return{x:()=>FP(r,n,o,s,a,i)}}};function Y7(r,t,e,n,o){let s=S(r,"dy","avgPoolGrad"),a=S(t,"input","avgPoolGrad");D(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,u=s,l=!1;a.rank===3&&(l=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),D(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let p={dy:u,input:i},m={filterSize:e,strides:n,pad:o},c=N.runKernel(xm,p,m);return l?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var PP=w({avgPoolGrad_:Y7});var MP={kernelName:io,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:a}=e;return{x:()=>PP(r,n,o,s,a)}}};var EP={kernelName:uo,inputsToSave:["a","b"],gradFunc:(r,t,e)=>{let[n,o]=t,{transposeA:s,transposeB:a}=e;return!s&&!a?{a:()=>Ve(r,o,!1,!0),b:()=>Ve(n,r,!0,!1)}:!s&&a?{a:()=>Ve(r,o,!1,!1),b:()=>Ve(r,n,!0,!1)}:s&&!a?{a:()=>Ve(o,r,!1,!0),b:()=>Ve(n,r,!1,!1)}:{a:()=>Ve(o,r,!0,!0),b:()=>Ve(r,n,!0,!0)}}};var LP={kernelName:cs,gradFunc:(r,t,e)=>{let{blockShape:n,crops:o}=e;return{x:()=>cc(r,n,o)}}};var _P={kernelName:Z0,gradFunc:(r,t,e)=>{let n=e,o=n.inputShape,s=n.shape,a=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])a[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>he(r,i,!0)}}};var $P={kernelName:Wn,gradFunc:r=>({x:()=>r.clone()})};var BP={kernelName:po,gradFunc:r=>({x:()=>we(r)})};var OP={kernelName:Kn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{clipValueMin:o,clipValueMax:s}=e;return{x:()=>Ut(Jr(Ls(n,o),_s(n,s)),r,we(r))}}};var zP={kernelName:Mu,inputsToSave:["x"],gradFunc:Hy.gradFunc};var GP={kernelName:ds,saveAllInputs:!0,gradFunc:(r,t,e)=>{let n=t.map(u=>u.shape),{axis:o}=e,s=gr(o,t[0].shape)[0],a=n.map(u=>u[s]);return Dr(r,a,s).map(u=>()=>u)}};var UP={kernelName:lo,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{dilations:s,strides:a,pad:i,dataFormat:u}=e;return D(Qo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>ac(n.shape,r,o,a,i,u),filter:()=>xc(n,r,o.shape,a,i,u)}}};var WP={kernelName:mo,inputsToSave:["dy","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{strides:s,pad:a,dataFormat:i,dimRoundingMode:u}=e;return{dy:()=>es(r,o,s,a,i,1,u),filter:()=>xc(r,n,o.shape,s,a,i,u)}}};function Z7(r,t,e,n,o){let s=r;r.rank===4&&(s=_(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=t;a.rank===4&&(a=_(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),D(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),D(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),D(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),D(a.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${e[4]}).`);let i={x:s,dy:a},u={strides:n,pad:o,filterShape:e};return N.runKernel(vm,i,u)}var KP=w({conv3DBackpropFilter_:Z7});var VP={kernelName:Eu,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s}=e;D(Qo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=t;return{x:()=>Xb(a.shape,r,i,o,s),filter:()=>KP(a,r,i.shape,o,s)}}};var HP={kernelName:co,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(Je(gy(re(e,"float32"))),r)}}};var qP={kernelName:fo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(by(re(e,"float32")),r)}}};var jP={kernelName:ho,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o,exclusive:s,reverse:a}=e;return{x:()=>{let i=Qv([o],n.rank),u=Qb(r,o,s,!a);return i!=null&&(u=ze(u,i)),u}}}};var XP={kernelName:go,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=e,i=n??[1,1];D(Qo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[u,l]=t;return D(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),D(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),D(Er(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Rt("depthwiseConv2d",s,a),{x:()=>vy(u.shape,r,l,o,s,i,a),filter:()=>Sy(u,r,l.shape,o,s,i,a)}}};var YP={kernelName:Lu,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>N.runKernel(Qf,s,e),filter:()=>N.runKernel(Jf,a,e)}}};var ZP={kernelName:yo,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t,n={dy:r,y:e};return{x:()=>N.runKernel(Rm,n)}}};var QP={kernelName:Gi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=E(br(Je(qe(e))),2/Math.sqrt(Math.PI));return{x:()=>E(r,n)}}};var JP={kernelName:To,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,e)}}};var eM={kernelName:fs,inputsToSave:["input"],gradFunc:(r,t)=>{let[e]=t;return{input:()=>_(r,e.shape)}}};var tM={kernelName:ha,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,br(e))}}};var rM={kernelName:xo,gradFunc:r=>({x:()=>we(r)})};var nM={kernelName:Io,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=ce(r,re(n,"float32")),u=St(e.shape,o);return u.length>0?_(he(i,u),e.shape):i},b:()=>{let i=E(r,re(e,"float32")),u=St(n.shape,o);u.length>0&&(i=_(he(i,u),n.shape));let l=qe(n);return Je(ce(i,re(l,"float32")))}}}};var oM={kernelName:Co,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,t,e)=>{let{varianceEpsilon:n}=e,[o,s,a,i]=t,u=i??de(1),l=St(s.shape,o.shape),p=[];if(s.rank===1){for(let I=0;I<o.shape.length-1;++I)p.push(o.shape[I]);p.push(1)}let m=le(o,s),c=E(r,u),d=dy(Y(a,de(n))),f=E(E(E(d,d),d),de(-.5));return{x:()=>s.rank===1?_(E(E(r,Qr(_(d,[1,1,1,s.shape[0]]),p)),u),o.shape):_(E(E(r,d),u),o.shape),mean:()=>{let I=E(E(d,de(-1)),c);return s.rank===1&&(I=he(I,l)),_(I,s.shape)},variance:()=>{let I=E(E(f,m),c);return s.rank===1&&(I=he(I,l)),_(I,s.shape)},scale:()=>{let I=E(m,d),k=E(r,I);return s.rank===1&&(k=he(k,l)),_(k,s.shape)},offset:()=>{let I=r;return s.rank===1&&(I=he(I,l)),_(I,s.shape)}}}};var iM={kernelName:hs,inputsToSave:["x","indices"],gradFunc:(r,t,e)=>{let[n,o]=t,{axis:s}=e,a=gr(s,n.shape)[0];return{x:()=>{let u=n.shape,l=o.size,p=u.slice(0,a),m=p.length,c=u.slice(s,u.length).slice(1),d=c.length,f=sM(0,m),h=sM(m+1,m+1+d),g=aM([p,[l],c]),b=_(r,g),T=_(o,[l]),x=aM([[m],f,h]),I=ze(b,x),k=xy(I,T,n.shape[a]),A=gh(x);return k=ze(k,A),k},indices:()=>o}}};function sM(r,t){let e=[];for(let n=r;n<t;++n)e.push(n);return e}function aM(r){let t=[];for(let e=0;e<r.length;++e)for(let n=0;n<r[e].length;++n)t.push(r[e][n]);return t}var uM={kernelName:ko,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>we(e),b:()=>we(n)}}};var pM={kernelName:Vn,gradFunc:r=>({x:()=>re(r,"float32")})};var lM={kernelName:Ui,gradFunc:r=>({x:()=>we(r)})};var mM={kernelName:Wi,gradFunc:r=>({x:()=>we(r)})};var cM={kernelName:Ta,gradFunc:r=>({x:()=>we(r)})};var dM={kernelName:So,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{alpha:o}=e,s=ir(n,0);return{x:()=>Ut(s,r,E(r,o))}}};var fM={kernelName:Ki,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,Y(e,1))}}};var hM={kernelName:vo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,re(e,"float32"))}}};var gM={kernelName:J0,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e;return{logits:()=>{let a=br(n);return le(r,E(he(r,o,!0),a))}}}};function Q7(r,t,e,n=5,o=1,s=1,a=.5){let i={x:r,y:t,dy:e},u={depthRadius:n,bias:o,alpha:s,beta:a};return N.runKernel(Lm,i,u)}var bM=w({localResponseNormalizationBackprop_:Q7});var yM={kernelName:Bu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{depthRadius:s,bias:a,alpha:i,beta:u}=e;return{x:()=>bM(n,o,r,s,a,i,u)}}};function qy(r,t,e,n){return t.rank<e.rank&&(t=_(t,Es(t.shape,n))),r.rank<e.rank&&(r=_(r,Es(r.shape,n))),{x:()=>E(r,re(Zr(e,t),r.dtype))}}var CA={kernelName:Ao,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{reductionIndices:o}=n,s=t[0],a=t[1],i=gr(o,s.shape),u=qy(r,a,s,i);return{x:()=>u.x()}}};var TM={kernelName:wo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>E(r,re(Ls(e,n),"float32")),b:()=>E(r,re(Jb(e,n),"float32"))}}};function J7(r,t,e,n,o,s,a){let i=S(r,"dy","maxPool3dGrad"),u=S(t,"input","maxPool3dGrad"),l=S(e,"output","maxPool3dGrad"),p=i,m=u,c=l,d=!1;u.rank===4&&(d=!0,p=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=_(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),c=_(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),D(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),D(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),D(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Rt("maxPool3dGrad",s,a);let f={dy:p,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=N.runKernel($m,f,h);return d?_(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var xM=w({maxPool3dGrad_:J7});var IM={kernelName:Ou,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=e;return{x:()=>xM(r,n,o,s,a,i,u)}}};function eJ(r,t,e,n,o,s,a){let i=S(r,"dy","maxPoolGrad"),u=S(t,"input","maxPoolGrad"),l=S(e,"output","maxPoolGrad");D(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),D(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),D(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Rt("maxPoolGrad",s,a);let p={dy:i,input:u,output:l},m={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return N.runKernel(_m,p,m)}var CM=w({maxPoolGrad_:eJ});var kM={kernelName:No,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:a,pad:i}=e;return{x:()=>CM(r,n,o,s,a,i)}}};var SM={kernelName:Do,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=gr(o,n.shape),i=Zv(n.shape,s)[1],u=tt(i);return{x:()=>{let p=n.shape.slice();s.forEach(d=>{p[d]=1});let m=_(r,p);return ce(E(m,yr(n.shape,"float32")),u)}}}};var vM={kernelName:Fo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{axis:o}=n,[s,a]=t,i=gr(o,s.shape),u=qy(r,a,s,i);return{x:()=>u.x()}}};var AM={kernelName:Ro,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>E(r,re(_s(e,n),"float32")),b:()=>E(r,re(ir(e,n),"float32"))}}};var wM={kernelName:Po,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(a=>a[0]);return{x:()=>Be(r,s,n.shape)}}};var NM={kernelName:Hi,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=St(e.shape,o);return i.length>0?_(he(r,i),e.shape):r},b:()=>{let i=E(r,Je(ip(ce(e,n)))),u=St(n.shape,o);return u.length>0?_(he(i,u),n.shape):i}}}};var DM={kernelName:Mo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=E(r,re(n,"float32")),u=St(e.shape,o);return u.length>0?_(he(i,u),e.shape):i},b:()=>{let i=E(r,re(e,"float32")),u=St(n.shape,o);return u.length>0?_(he(i,u),n.shape):i}}}};var FM={kernelName:gs,gradFunc:r=>({x:()=>Je(r)})};var RM={kernelName:wa,inputsToSave:["indices"],gradFunc:(r,t)=>{let e=t[0];return{indices:()=>It(e.shape,"float32")}}};var PM={kernelName:bs,gradFunc:r=>({x:()=>we(r)})};var MM={kernelName:ys,saveAllInputs:!0,gradFunc:(r,t,e)=>{let{axis:n}=e;return Wr(r,n).map(s=>()=>s)}};var kA={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(a=>a[0]);return{x:()=>Be(r,s,n.shape)}}};var EM={kernelName:Lo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,t)=>{let[e,n,o]=t,s=e,a=n,i=$e(s.shape,a.shape);return{a:()=>{let p=re(a,"float32"),m=E(r,E(p,qn(s,le(p,de(1))))),c=St(s.shape,i);return c.length>0&&(m=he(m,c)),_(m,s.shape)},b:()=>{let p=ir(s,0),m=Ut(p,Ur(s),we(s)),c=E(r,E(o,m)),d=St(a.shape,i);return d.length>0&&(c=he(c,d)),_(c,a.shape)}}}};var LM={kernelName:_o,inputsToSave:["x","alpha"],gradFunc:(r,t)=>{let[e,n]=t,o=ir(e,0);return{x:()=>Ut(o,r,E(r,n)),alpha:()=>{let s=Ut(o,we(r),E(r,e)),a=St(n.shape,r.shape);return a.length>0&&(s=he(s,a)),_(s,n.shape)}}}};function tJ(r,t,e){let n=r.shape.slice();n[e]=1;let o=_(t,n),s=hh(r,e,!0,!1),a=hh(r,e,!0,!0),i=E(s,a);return E(o,i)}function rJ(r,t,e){let n=r.shape.length,o=n-e.length,s=C.getAxesPermutation(e,n),a=r;s!=null&&(a=ze(r,s));let i=a.shape.slice(),l=i.splice(n-e.length,e.length).reduce((c,d)=>c*d,1);i.push(l);let p=a.reshape(i),m=tJ(p,t,o);if(m=m.reshape(a.shape),s!=null){let c=C.getUndoAxesPermutation(s);m=ze(m,c)}return m}var _M={kernelName:$o,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=[];return o==null?s=n.shape.map((a,i)=>i):typeof o=="number"?s=[o]:s=o,{x:()=>rJ(n,r,s)}}};var $M={kernelName:bo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=ce(r,re(n,"float32")),u=St(e.shape,o);return u.length>0?_(he(i,u),e.shape):i},b:()=>{let i=E(r,re(e,"float32")),u=St(n.shape,o);u.length>0&&(i=_(he(i,u),n.shape));let l=qe(n);return Je(ce(i,re(l,"float32")))}}}};var BM={kernelName:Na,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,Je(qe(e)))}}};var OM={kernelName:Go,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=E(_s(e,6),Ci(e));return{x:()=>E(r,re(n,"float32"))}}};var zM={kernelName:Bo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,re(Ci(e),"float32"))}}};var GM={kernelName:Ts,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>_(r,e.shape)}}};var UM={kernelName:zo,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>N.runKernel(Wm,o,e)}}};var WM={kernelName:Oo,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>N.runKernel(Um,o,e)}}};var KM={kernelName:Da,gradFunc:(r,t,e)=>{let{dims:n}=e,o=gr(n,r.shape);return{x:()=>Nr(r,o)}}};var VM={kernelName:Fa,gradFunc:r=>({x:()=>we(r)})};var HM={kernelName:Uo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Je(ce(r,E(qn(e,1.5),2)))}}};var qM={kernelName:xs,inputsToSave:["condition"],gradFunc:(r,t)=>{let[e]=t;return{condition:()=>re(we(e),"float32"),t:()=>E(r,re(e,r.dtype)),e:()=>E(r,re(lc(e),r.dtype))}}};var jM={kernelName:ji,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=ir(e,de(0)),o=de(lA),s=de(mA),a=E(r,s),i=E(E(r,o),br(re(e,"float32")));return Ut(n,a,i)}}}};var XM={kernelName:Ko,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,E(e,le(de(1),e)))}}};var YM={kernelName:Xi,gradFunc:r=>({x:()=>we(r)})};var ZM={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(ic(re(e,"float32")),r)}}};var QM={kernelName:Pa,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(Zb(re(e,"float32")),r)}}};var JM={kernelName:Is,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{begin:o,size:s}=e,a=n.shape,[i,u]=Kv(n,o,s),l=[];for(let p=0;p<r.rank;p++)l.push([i[p],a[p]-i[p]-u[p]]);return{x:()=>jn(r,l)}}};var eE={kernelName:qo,outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{dim:o}=e,s=!0,a=E(r,n);return{logits:()=>le(a,E(he(a,[o],s),n))}}};var tE={kernelName:Yi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,Ln(e))}}};var SA={kernelName:Cs,gradFunc:(r,t,e)=>{let{blockShape:n,paddings:o}=e;return{x:()=>sc(r,n,o)}}};var vA={kernelName:ks,gradFunc:(r,t,e)=>{let{axis:n}=e;return{x:()=>mt(r,n)}}};var rE={kernelName:Vo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,E(_t(re(e,"float32")),2))}}};var nE={kernelName:fi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,E(re(e,"float32"),2))}}};var oE={kernelName:jo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=de(2);return{a:()=>E(r,E(o,le(e,n))),b:()=>E(r,E(o,le(n,e)))}}};var sE={kernelName:As,gradFunc:r=>({x:()=>we(r)})};var aE={kernelName:Xo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=r,u=St(e.shape,o);return u.length>0&&(i=he(i,u)),_(i,e.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=he(i,u)),_(Je(i),n.shape)}}}};var iE={kernelName:Ho,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,o=n.shape.slice(),{axis:s}=e;gr(s,n.shape).forEach(l=>{o[l]=1});let i=_(r,o),u=E(i,yr(n.shape,"float32"));return{x:()=>u}}};var uE={kernelName:Ea,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,qe(ic(e)))}}};var pE={kernelName:Yo,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(le(de(1),qe(e)),r)}}};var lE={kernelName:Dn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{reps:o}=e;return{x:()=>{let a=we(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Y(a,Be(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)a=Y(a,Be(r,[i*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)a=Y(a,Be(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let p=0;p<o[3];++p)a=Y(a,Be(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var mE={kernelName:Fn,gradFunc:(r,t,e)=>{let n=e,{perm:o}=n,s=gh(o);return{x:()=>ze(r,s)}}};var cE={kernelName:Ss,gradFunc:(r,t,e)=>{let n=e,{axis:o}=n;return{value:()=>Tr(r,o)}}};var dE={kernelName:qu,inputsToSave:["segmentIds"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nJ(r,e)}}};function nJ(r,t){let e=ts(t,we(t)),n=up(r,e),o=Ls(t,de(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=Lr(o,i+1);o=Jr(o,yr(n.shape,"bool"));let a=we(n);return Ut(o,n,a)}var fE={kernelName:vs,gradFunc:r=>({x:()=>we(r)})};var oJ=[Hy,TP,xP,IP,CP,kP,SP,vP,AP,wP,NP,DP,RP,MP,EP,LP,_P,$P,BP,OP,zP,GP,WP,UP,VP,HP,qP,jP,XP,YP,$M,ZP,QP,JP,eM,tM,nM,rM,oM,iM,uM,pM,lM,mM,cM,dM,fM,hM,gM,yM,CA,CA,TM,IM,kM,SM,vM,AM,wM,NM,DM,FM,RM,PM,MM,kA,kA,EM,LM,_M,BM,OM,zM,GM,UM,WM,KM,VM,HM,qM,jM,XM,YM,ZM,QM,JM,eE,tE,SA,SA,vA,vA,rE,oE,nE,sE,aE,iE,uE,pE,lE,mE,cE,dE,fE];for(let r of oJ)t1(r);var bE={};He(bE,{maxNorm:()=>sJ,minMaxNorm:()=>uJ,nonNeg:()=>iJ,unitNorm:()=>aJ});function AA(r,t){return z(()=>_t(he(E(r,r),t,!0)))}var Cl=class extends ee.Serializable{getConfig(){return{}}},_c=class extends Cl{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let n=AA(e,this.axis),o=Gr(n,0,this.maxValue);return E(e,ce(o,Y(dr(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};_c.className="MaxNorm";ee.registerClass(_c);var $c=class extends Cl{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>ce(e,Y(dr(),AA(e,this.axis))))}getConfig(){return{axis:this.axis}}};$c.className="UnitNorm";ee.registerClass($c);var Bc=class extends Cl{apply(t){return en(t)}};Bc.className="NonNeg";ee.registerClass(Bc);var Oc=class extends Cl{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let n=AA(e,this.axis),o=Y(E(this.rate,Gr(n,this.minValue,this.maxValue)),E(1-this.rate,n));return E(e,ce(o,Y(dr(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Oc.className="MinMaxNorm";ee.registerClass(Oc);var hE={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function jt(r){return Cc(r)}function gE(r,t={}){return Si(r,ee.SerializationMap.getMap().classNameMap,t,"constraint")}function Xt(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in hE?hE[r]:r,config:{}};return gE(e)}else return r instanceof Cl?r:gE(r)}function sJ(r){return new _c(r)}function aJ(r){return new $c(r)}function iJ(){return new Bc}function uJ(r){return new Oc(r)}var yE={};He(yE,{constant:()=>mJ,glorotNormal:()=>yJ,glorotUniform:()=>bJ,heNormal:()=>TJ,heUniform:()=>xJ,identity:()=>hJ,leCunNormal:()=>IJ,leCunUniform:()=>CJ,ones:()=>lJ,orthogonal:()=>kJ,randomNormal:()=>dJ,randomUniform:()=>cJ,truncatedNormal:()=>fJ,varianceScaling:()=>gJ,zeros:()=>pJ});function pJ(){return new Ac}function lJ(){return new Ip}function mJ(r){return new wc(r)}function cJ(r){return new Nc(r)}function dJ(r){return new Dc(r)}function fJ(r){return new Fc(r)}function hJ(r){return new Rc(r)}function gJ(r){return new qr(r)}function bJ(r){return new hl(r)}function yJ(r){return new gl(r)}function TJ(r){return new bl(r)}function xJ(r){return new yl(r)}function IJ(r){return new Tl(r)}function CJ(r){return new xl(r)}function kJ(r){return new Pc(r)}var XE={};He(XE,{Layer:()=>Oe,RNN:()=>ns,RNNCell:()=>du,activation:()=>$9,add:()=>H9,alphaDropout:()=>Dee,average:()=>q9,averagePooling1d:()=>KA,averagePooling2d:()=>VA,averagePooling3d:()=>HA,avgPool1d:()=>ree,avgPool2d:()=>oee,avgPool3d:()=>aee,avgPooling1d:()=>nee,avgPooling2d:()=>see,avgPooling3d:()=>iee,batchNormalization:()=>J9,bidirectional:()=>Iee,concatenate:()=>j9,conv1d:()=>N9,conv2d:()=>D9,conv2dTranspose:()=>F9,conv3d:()=>R9,conv3dTranspose:()=>P9,convLstm2d:()=>bee,convLstm2dCell:()=>yee,cropping2D:()=>E9,dense:()=>B9,depthwiseConv2d:()=>_9,dot:()=>Q9,dropout:()=>O9,elu:()=>C9,embedding:()=>V9,flatten:()=>G9,gaussianDropout:()=>Nee,gaussianNoise:()=>wee,globalAveragePooling1d:()=>uee,globalAveragePooling2d:()=>pee,globalMaxPool1d:()=>kee,globalMaxPool2d:()=>See,globalMaxPooling1d:()=>VE,globalMaxPooling2d:()=>HE,gru:()=>mee,gruCell:()=>cee,input:()=>EA,inputLayer:()=>I9,layerNormalization:()=>eee,leakyReLU:()=>S9,lstm:()=>dee,lstmCell:()=>fee,masking:()=>Fee,maxPool1d:()=>vee,maxPool2d:()=>Aee,maxPooling1d:()=>qE,maxPooling2d:()=>jE,maxPooling3d:()=>lee,maximum:()=>X9,minimum:()=>Y9,multiply:()=>Z9,permute:()=>K9,prelu:()=>v9,reLU:()=>k9,repeatVector:()=>U9,reshape:()=>W9,rnn:()=>Tee,separableConv2d:()=>M9,simpleRNN:()=>hee,simpleRNNCell:()=>gee,softmax:()=>A9,spatialDropout1d:()=>z9,stackedRNNCells:()=>xee,thresholdedReLU:()=>w9,timeDistributed:()=>Cee,upSampling2d:()=>L9,zeroPadding2d:()=>tee});async function Ai(r){if(r==null)return;let t=[],e=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;t.push(a.data()),e.push(o),n.push(a)}}if(t.length>0){let o=await Promise.all(t);for(let s=0;s<o.length;++s)r[e[s]]=o[s][0];Fe(n)}}function jy(r){if(r!=null)for(let t in r){let e=r[t];typeof e!="number"&&e.dispose()}}var SJ=125,mu=class{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}},Xy=class{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainEnd(t)}},wA=class extends mu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});let o=n.size==null?0:n.size;this.seen+=o;for(let s in n){let a=n[s];if(typeof a=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+a*o;else{let i;s in this.totals?i=this.totals[s]:this.totals[s]=0;let u=z(()=>Y(this.totals[s],E(a,o)));this.totals[s]=u,i?.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(let o of this.params.metrics)this.totals[o]!=null&&(typeof this.totals[o]=="number"?n[o]=this.totals[o]/this.seen:z(()=>{let s=E(ce(1,this.seen),this.totals[o]);n[o]=s,this.totals[o].dispose(),zt(n[o])}))}},Yy=class extends mu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(let o in n)this.history[o]==null&&(this.history[o]=[]),this.history[o].push(n[o])}async syncData(){let e=[],n=[],o=[];for(let a in this.history){let i=this.history[a];for(let u=0;u<i.length;++u)if(typeof i[u]!="number"){let l=i[u];e.push(l.data()),n.push(a),o.push(u)}}let s=await Promise.all(e);for(let a=0;a<s.length;++a)this.history[n[a]][o[a]].dispose(),this.history[n[a]][o[a]]=s[a][0]}},Zy=class extends mu{constructor(e,n){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ch,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=SJ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=XR(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,o){let s=[];this.yield!=null&&(await Ai(o),s.push(this.yield(e,n,o))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await Ai(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){let o=[];this.epochEnd!=null&&(await Ai(n),o.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&o.push(this.nextFrameFunc()),await Promise.all(o)}async onBatchBegin(e,n){this.batchBegin!=null&&(await Ai(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){let o=[];this.batchEnd!=null&&(await Ai(n),o.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?o.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&o.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(o)}async onTrainBegin(e){this.trainBegin!=null&&(await Ai(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ai(e),await this.trainEnd(e))}};function Qy(r,t){return r==null&&(r={}),r instanceof mu?[r]:Array.isArray(r)&&r[0]instanceof mu?r:vt(r).map(n=>new Zy(n,t))}var ja=class{constructor(){}static registerCallbackConstructor(t,e){y.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),ja.checkForDuplicate(e),ja.constructors[t]==null&&(ja.constructors[t]=[]),ja.constructors[t].push(e)}static checkForDuplicate(t){for(let e in ja.constructors)ja.constructors[+e].forEach(o=>{if(o===t)throw new B("Duplicate callback constructor.")})}static clear(){ja.constructors={}}static createCallbacks(t){let e=[];for(let n in ja.constructors){let o=+n;t>=o&&e.push(...ja.constructors[o])}return e.map(n=>new n)}},zc=ja;zc.constructors={};function Jy(r,t,e,n,o,s,a,i,u){let l=new Yy,p=[new wA,...zc.createCallbacks(t)];r!=null&&p.push(...r),p.push(l);let m=new Xy(p);return m.setParams({epochs:e,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:t,doValidation:i,metrics:u}),{callbackList:m,history:l}}function xn(r,t={},e=!1){return Si(r,ee.SerializationMap.getMap().classNameMap,t,"layer",e)}function Dh(r,t){return z(()=>{r.dtype!=="float32"&&(r=re(r,"float32"));let e=he(fl(r),t,!0),n=Ms(e.shape,dr()),o=_t(ts(e,n));return ce(r,o)})}function wi(r,t){return z(()=>$t(fl(le(t,r)),-1))}function Gc(r,t){return z(()=>$t(Gt(le(t,r)),-1))}function Cp(r,t){return z(()=>{let e=le(r,t),n=Gr(Gt(r),dr(),Number.MAX_VALUE),o=Gt(ce(e,n));return E(100,$t(o,-1))})}function vJ(r,t){return z(()=>{let e=Gr(t,dr(),Number.MAX_VALUE),n=Ur(Y(1,e)),o=Gr(r,dr(),Number.MAX_VALUE),s=Ur(Y(1,o));return $t(fl(le(n,s)),-1)})}function AJ(r,t){return z(()=>{let e=ts(0,le(1,E(r,t)));return $t(fl(e),-1)})}function wJ(r,t){return z(()=>{let e=ts(0,le(1,E(r,t)));return $t(e,-1)})}function NJ(r,t){return z(()=>{let e=he(E(r,t),-1),n=dn(E(le(1,r),t),-1);return ts(0,Y(1,le(n,e)))})}function DJ(r,t){return z(()=>{let e=Math.log(2),n=le(t,r),o=le(Y(n,su(E(-2,n))),e);return $t(o,-1)})}function kl(r,t,e=!1){return z(()=>{if(e)t=gc(t);else{let n=he(t,t.shape.length-1,!0);t=ce(t,n)}return t=Gr(t,dr(),1-dr()),Je(he(E(re(r,"float32"),Ur(t)),t.shape.length-1))})}function Uc(r,t,e=!1){return z(()=>{let n=re(ip(aP(r)),"int32");t=Gr(t,dr(),1-dr());let o=t.shape,s=_(Qu(n,o[o.length-1]),o);return kl(s,t,e)})}function FJ(r,t){if(!y.arraysEqual(r.shape,t.shape))throw new B(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(t.shape)}`);return z(()=>{let e=en(t),n=Je(Gt(t));return Y(le(e,E(t,r)),pc(br(n)))})}function Wc(r,t){return z(()=>{let e;return e=Gr(t,dr(),1-dr()),e=Ur(ce(e,le(1,e))),$t(FJ(r,e),-1)})}function RJ(r,t){return z(()=>{let e=Gr(r,dr(),1),n=Gr(t,dr(),1);return he(E(r,Ur(ce(e,n))),-1)})}function PJ(r,t){return z(()=>{let e=Ur(Y(dr(),t));return $t(le(t,E(r,e)),-1)})}function Rh(r,t){return z(()=>{let e=Dh(r,-1),n=Dh(t,-1),o=E(e,n);return Je(he(o,-1))})}var Fh={meanSquaredError:wi,meanAbsoluteError:Gc,meanAbsolutePercentageError:Cp,meanSquaredLogarithmicError:vJ,squaredHinge:AJ,hinge:wJ,categoricalHinge:NJ,logcosh:DJ,categoricalCrossentropy:kl,sparseCategoricalCrossentropy:Uc,binaryCrossentropy:Wc,kullbackLeiblerDivergence:RJ,poisson:PJ,cosineProximity:Rh};function eT(r){if(typeof r=="string"){if(r in Fh)return Fh[r];let t=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new B(t)}else return r}function Ph(r,t){return z(()=>{let e=E(.5,_r(t)),n=dl(ir(t,e),r.dtype);return $t(Zr(r,n),-1)})}function Mh(r,t){return z(()=>dl(Zr(tp(r,-1),tp(t,-1)),"float32"))}function xE(r,t){return z(()=>re(he(Jr(Zr(r,1),Zr(t,1))),"float32"))}function MJ(r,t){return z(()=>re(he(Jr(Zr(r,1),Zr(t,0))),"float32"))}function EJ(r,t){return z(()=>re(he(Jr(Zr(r,0),Zr(t,1))),"float32"))}function NA(r,t){return z(()=>{let e=xE(r,t),n=EJ(r,t),o=Y(e,n);return re(Ut(ir(o,0),ce(e,o),0),"float32")})}function IE(r,t){return z(()=>{let e=xE(r,t),n=MJ(r,t),o=Y(e,n);return re(Ut(ir(o,0),ce(e,o),0),"float32")})}function rT(r,t){return Wc(r,t)}function nT(r,t){return r.rank===t.rank&&(r=$s(r,[r.rank-1])),t=tp(t,-1),t.dtype!==r.dtype&&(t=re(t,r.dtype)),re(Zr(r,t),"float32")}var LJ=wi,_J=wi,$J=Gc,BJ=Gc,OJ=Cp,zJ=Cp,Eh=kl,GJ=Rh,DA=Uc,tT={binaryAccuracy:Ph,categoricalAccuracy:Mh,precision:NA,categoricalCrossentropy:Eh,sparseCategoricalCrossentropy:DA,mse:LJ,MSE:_J,mae:$J,MAE:BJ,mape:OJ,MAPE:zJ,cosine:GJ};function CE(r){if(typeof r=="string"&&r in tT)return tT[r];if(typeof r!="string"&&r!=null)return r;throw new B(`Unknown metric ${r}`)}function Lh(r){if(rs(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let t;for(let e of Object.keys(Fh))if(Fh[e]===r){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(tT))if(tT[e]===r){t=e;break}return t!==void 0?t:r.name}}function SE(r){let t={Adagrad:()=>ml.adagrad(.01),Adadelta:()=>ml.adadelta(1,.95,dr()),Adam:()=>ml.adam(.001,.9,.999,dr()),Adamax:()=>ml.adamax(.002,.9,.999,dr(),0),RMSProp:()=>ml.rmsprop(.001,.9,0,dr()),SGD:()=>ml.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,r in t)return t[r]();throw new B(`Unknown Optimizer ${r}`)}function RA(r,t,e=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!FA(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function FA(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let t=Object.keys(r);for(let e of t)if(typeof e!="string"||!FA(r[e]))return!1;return!0}else if(Array.isArray(r)){for(let t of r)if(!FA(t))return!1;return!0}else return!1;else{let t=typeof r;return t==="string"||t==="number"||t==="boolean"}}function vE(r,t,e,n=console.log){let o=KJ(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(p=>Math.floor(t*p)));let a;if(!o){s.push("Receives inputs"),a=[];for(let p in r.nodesByDepth)a.push(...r.nodesByDepth[p])}n("_".repeat(t)),oT(s,e,n),n("=".repeat(t));let i=r.layers;for(let p=0;p<i.length;++p)o?VJ(i[p],e,n):HJ(i[p],e,a,n),n((p===i.length-1?"=":"_").repeat(t));r.checkTrainableWeightsConsistency();let u=WJ(r),l=Ec(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(t))}function WJ(r){let t;return r.collectedTrainableWeights!=null?t=Ec(r.collectedTrainableWeights):t=Ec(r.trainableWeights),t}function KJ(r){let t=!0,e=[],n=[];for(let o in r.nodesByDepth)e.push(r.nodesByDepth[o]);for(let o of e){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}n.push(...o)}if(t)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function oT(r,t,e=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,t[o]),n+=" ".repeat(t[o]-n.length);e(n)}function VJ(r,t,e){let n,o;try{o=r.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,a=r.getClassName(),i=[`${s} (${a})`,o,n,r.countParams().toString()];oT(i,t,e)}function HJ(r,t,e,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let a=[];for(let m of r.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];a.push(`${d}[${f}][${h}]`)}let i=r.name,u=r.getClassName(),l=a.length===0?"":a[0],p=[`${i} (${u})`,s,o,r.countParams().toString(),l];oT(p,t,n);for(let m=1;m<a.length;++m)oT(["","","","",a[m]],t,n)}function AE(r,t,e){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&t===0&&typeof e=="string"}function Sl(r,t){if(r===null)return null;if(typeof r=="string")return iu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];AE(t,o,s)?e.push(s):e.push(Sl(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")e[n]=o;else{let s=iu(n);e[s]=Sl(o,s)}}return e}}function sT(r,t){if(r==null)return null;if(typeof r=="string")return Gs(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];AE(t,o,s)?e.push(s):e.push(sT(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n],s=Gs(n);(n==="name"||n==="className")&&typeof o=="string"?e[s]=o:e[s]=sT(o,n)}return e}}var _h="0.0.0";var Xn=class extends Oe{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let x=this.getClassName().toLowerCase();this.name=Tp(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Us(this.inputs).length!==this.inputs.length)throw new B(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Us(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let x of this.outputs){let I=x.sourceLayer,k=x.nodeIndex,A=x.tensorIndex;this.outputLayers.push(I),this.outputLayersNodeIndices.push(k),this.outputLayersTensorIndices.push(A)}for(let x of this.inputs){let I=x.sourceLayer,k=x.nodeIndex,A=x.tensorIndex;rs(k===0,"input layer has >1 nodes"),rs(A===0,"input layer has >1 tensors"),this.inputLayers.push(I),this.inputLayersNodeIndices.push(k),this.inputLayersTensorIndices.push(A)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){let I=this.inputLayers[x];if(!(I instanceof qa))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${I.getClassName()}.`);this.inputNames.push(I.name),this.feedInputShapes.push(I.batchInputShape),this.feedInputNames.push(I.name)}for(let x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);let n={},o={},s={},a={},i={},u=[],l=(x,I,k,A,F,R)=>{(A==null||F==null||R==null)&&(A=x.sourceLayer,F=x.nodeIndex,R=x.tensorIndex);let P=A.inboundNodes[F];if(k.indexOf(P)!==-1)throw new Hr(`The tensor ${x.name} at layer "${A.name}" is part of a cycle.`);if(I.indexOf(P)!==-1)return;this.containerNodes.add(Xn.nodeKey(A,F)),A.id in i||(i[A.id]=Object.keys(i).length),k.indexOf(P)===-1&&k.push(P);let L=P.inboundLayers.length;for(let O=0;O<L;O++){let G=P.inputTensors[O],W=P.inboundLayers[O],H=P.nodeIndices[O],V=P.tensorIndices[O];l(G,I,k,W,H,V)}for(I.push(P);k.indexOf(P)>=0;)k.splice(k.indexOf(P),1);u.push(P)},p=[],m=[];for(let x of this.outputs)l(x,p,m);let c=u.slice().reverse();for(let x of c){o[x.id]=x,x.id in n||(n[x.id]=0);let I=n[x.id],k=s[x.outboundLayer.id]==null?0:s[x.outboundLayer.id];I=Math.max(I,k),s[x.outboundLayer.id]=I,a[x.outboundLayer.id]=x.outboundLayer,n[x.id]=I;for(let A=0;A<x.inboundLayers.length;A++){let F=x.inboundLayers[A],R=x.nodeIndices[A],P=F.inboundNodes[R],L=n[P.id]==null?0:n[P.id];n[P.id]=Math.max(I+1,L),o[P.id]=P}}let d={};for(let x in n){let I=n[x];I in d||(d[I]=[]),d[I].push(o[x])}let f={};for(let x in s){let I=s[x];I in f||(f[I]=[]),f[I].push(a[x])}let h=Object.keys(f).map(x=>parseInt(x,10)).sort(Sh);this.layers=[];for(let x of h){let I=f[x];I.sort((k,A)=>{let F=i[k.id],R=i[A.id];return F<R?-1:F>R?1:0});for(let k of I)k instanceof Xn&&this.internalContainerRefs.push(k),this.layers.push(k)}this.layersByDepth=f,h=Object.keys(d).map(x=>parseInt(x,10)).sort(Sh);let g=this.inputs.slice(),b=[];for(let x of h)for(let I of d[x]){let k=I.outboundLayer;if(k!=null){for(let A of I.inputTensors)if(g.indexOf(A)===-1)throw new Hr(`Graph disconnected: cannot obtain value for tensor ${A} at layer "${k.name}". The following previous layers were accessed without issue: ${b}`);for(let A of I.outputTensors)g.push(A);b.push(k.name)}}this.nodesByDepth=d;let T=this.layers.map(x=>x.name);for(let x of T){let I=T.filter(k=>k===x).length;if(I!==1)throw new Hr(`The name "${x}" is used ${I} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(T))}this.outboundNodes=[],this.inboundNodes=[],new lu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(let n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(o=>o.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new B("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.layers)n.push(...o.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){let o={},s=0;for(let i of this.layers)for(let u of i.weights){if(o[u.originalName]!=null)throw new B(`Duplicate weight name: ${u.originalName}`);o[u.originalName]=u,s++}let a=[];for(let i in e){let u=i;if(o[i]==null){let l=i.split("/");u=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(o[u]!=null)a.push([o[u],e[i]]);else if(n)throw new B(`Provided weight data has no target variable: ${i}`);delete o[u]}if(n){let i=[];for(let u in o)i.push(u);if(i.length>0)throw new B(`${i.length} of ${s} weights are not set: ${i}`)}Lc(a)}updatedConfig(){let e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${_h}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){let o=sT(this.updatedConfig());return n?JSON.stringify(o):o}call(e,n){return z(()=>{e=vt(e);let o=new Vs;for(let s=0;s<this.inputs.length;++s)o.add(this.inputs[s],e[s]);return Il(this.outputs,o,n)})}computeMask(e,n){return z(()=>{e=vt(e);let o;return n==null?o=zs(null,e.length):o=vt(n),this.runInternalGraph(e,o)[1]})}computeOutputShape(e){let n=Mc(e);if(n.length!==this.inputLayers.length)throw new B(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let o={};for(let u=0;u<n.length;u++){let l=this.inputLayers[u],p=n[u],m=l.name+"_0_0";o[m]=p}let s=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Sh);if(s.length>1)for(let u of s){let l=this.nodesByDepth[u];for(let p of l){let m=p.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(m.id)!==-1)continue;let c=[];for(let g=0;g<p.inboundLayers.length;g++){let b=p.inboundLayers[g],T=p.nodeIndices[g],x=p.tensorIndices[g],I=`${b.name}_${T}_${x}`,k=o[I];c.push(k)}let d=m.computeOutputShape(Fr(c)),f=Mc(d),h=m.inboundNodes.indexOf(p);for(let g=0;g<f.length;g++){let b=`${m.name}_${h}_${g}`;o[b]=f[g]}}}let a=[],i=[];for(let u=0;u<this.outputLayers.length;u++){let l=this.outputLayers[u],p=this.outputLayersNodeIndices[u],m=this.outputLayersTensorIndices[u],c=`${l.name}_${p}_${m}`;i.push(c)}for(let u=0;u<i.length;u++){let l=i[u];rs(l in o),a.push(o[l])}return Fr(a)}runInternalGraph(e,n){n==null&&(n=zs(null,e.length));let o={};for(let l=0;l<this.inputs.length;++l){let p=this.inputs[l],m=e[l],c=n[l];o[p.id]=[m,c]}let s=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Sh);for(let l of s){let p=this.nodesByDepth[l];for(let m of p){let c=m.outboundLayer,d=m.inputTensors,f=m.outputTensors,h=new Array;for(let g of d)g.id in o&&h.push(o[g.id]);if(h.length===d.length){let g={},b,T,x,I;if(m.callArgs!=null&&(g=m.callArgs),h.length===1){let[k,A]=h[0];g.mask==null&&(g.mask=A),x=vt(c.call(k,g)),I=vt(c.computeMask(k,A)),b=[k],T=[A]}else b=h.map(k=>k[0]),T=h.map(k=>k[1]),g.mask==null&&(g.mask=T),x=vt(c.call(b,g)),I=vt(c.computeMask(b,T));if(c.activityRegularizer)throw new Ae("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let k=0;k<f.length;++k){let A=f[k],F=x[k],R=I[k];o[A.id]=[F,R]}}}}let a=[],i=[],u=[];for(let l of this.outputs){rs(l.id in o,`Could not compute output ${l.name} : ${l.id}`);let[p,m]=o[l.id];u.push(p.shape),a.push(p),i.push(m)}return[a,i,u]}buildNodeConversionMap(e){let n={},o;for(let s of this.layers){o=s instanceof Xn?1:0;for(let a=0;a<s.inboundNodes.length;a++){let i=Xn.nodeKey(s,a);this.containerNodes.has(i)&&(n[i]=o,o+=1)}}return n}getLayer(e,n){if(n!=null){if(this.layers.length<=n)throw new B(`Was asked to retrieve layer at index ${n}, but model only has ${this.layers.length} layer(s).`);return this.layers[n]}else if(e==null)throw new B("Provide either a layer name or layer index");for(let o of this.layers)if(o.name===e)return o;throw new B(`No such layer: ${e}`)}calculateLosses(){return z(()=>{let e=[];for(let n of this.layers)for(let o=0;o<n.inboundNodes.length;++o){let s=Xn.nodeKey(n,o);this.containerNodes.has(s)&&e.push(...n.calculateLosses())}return e})}getConfig(){let e={name:this.name},n=this.buildNodeConversionMap(this.layers),o=[];for(let i of this.layers){let u=i.getClassName(),l=i.getConfig(),p=[];for(let c=0;c<i.inboundNodes.length;c++){let d=i.inboundNodes[c],f=Xn.nodeKey(i,c),h={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let g=[];for(let b=0;b<d.inboundLayers.length;b++){let T=d.inboundLayers[b],x=d.nodeIndices[b],I=d.tensorIndices[b],k=Xn.nodeKey(T,x),A=n[k];A==null&&(A=0),g.push([T.name,A,I,h])}p.push(g)}}}let m={};m.name=i.name,m.className=u,m.config=l,m.inboundNodes=p,o.push(m)}e.layers=o;let s=[];for(let i=0;i<this.inputLayers.length;i++){let u=this.inputLayers[i],l=this.inputLayersNodeIndices[i],p=Xn.nodeKey(u,l);if(!this.containerNodes.has(p))continue;let m=n[p];m==null&&(m=0);let c=this.inputLayersTensorIndices[i];s.push([u.name,m,c])}e.inputLayers=s;let a=[];for(let i=0;i<this.outputLayers.length;i++){let u=this.outputLayers[i],l=this.outputLayersNodeIndices[i],p=Xn.nodeKey(u,l);if(!this.containerNodes.has(p))continue;let m=n[p];m==null&&(m=0);let c=this.outputLayersTensorIndices[i];a.push([u.name,m,c])}return e.outputLayers=a,e}static fromConfig(e,n,o={},s=!1){let a={},i={};function u(b,T){b.name in i?i[b.name].push(T):i[b.name]=[T]}function l(b,T){let x=[],I;for(let k of T){let A=k[0],F=k[1],R=k[2];if(I=k[3]==null?{}:k[3],!(A in a)){u(b,T);return}let P=a[A];if(P.inboundNodes.length<=F){u(b,T);return}let L=P.inboundNodes[F];x.push(L.outputTensors[R])}x.length>0&&b.apply(Fr(x),I)}function p(b){let T=b.name,x=xn(b,n.customObjects!=null?n.customObjects:{});x.setFastWeightInitDuringBuild(s),a[T]=x,b.inboundNodes.forEach(k=>{if(!(k instanceof Array))throw new B(`Corrupted configuration, expected array for nodeData: ${k}`);u(x,k)})}let m=n.name,c=n.layers;for(let b of c)p(b);for(;!qR(i);)for(let b of c){let T=a[b.name];if(T.name in i){let x=i[T.name];delete i[T.name];for(let I of x)l(T,I)}}let d=[],f=[],h=n.inputLayers;for(let b of h){let T=b[0],x=b[1],I=b[2];rs(T in a);let A=a[T].inboundNodes[x].outputTensors;d.push(A[I])}let g=n.outputLayers;for(let b of g){let T=b[0],x=b[1],I=b[2];rs(T in a);let A=a[T].inboundNodes[x].outputTensors;f.push(A[I])}return new e({inputs:d,outputs:f,name:m})}get stateful(){if(this._stateful)throw new B("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function qJ(r,t,e){let n=t.length;if(r==null||Array.isArray(r)&&r.length===0)return t.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&t[0]in r?[r[t[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${e} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return t.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(r)}`)}function aT(r,t){return qJ(r,t,"classWeight")}async function iT(r,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let o=z(()=>{if(r.shape.length===1)return cn(r);if(r.shape.length===2){if(r.shape[1]>1)return tp(r,1);if(r.shape[1]===1)return _(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Fe(o);let a=[];return s.forEach(i=>{if(e[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(e[i])}),qt(a,"float32")}else return null}function wE(r,t){return E(r,t)}var jJ=32;function FE(r,t){let e,n,o=t;e=o.xs,n=o.ys,y.assert(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=NE("input",r.inputNames,e),a=NE("output",r.outputNames,n),i=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)y.assert(s[u].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let u=0;u<a.length;u++)y.assert(a[u].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function NE(r,t,e){if(e instanceof Ke)return[e];if(Array.isArray(e))return y.assert(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${r} keys ${t}.`),e;{let n=[];for(let o of t){if(e[o]==null)throw new B(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(e[o])}return n}}function XJ(r){if(r.length===3)throw new Ae("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function RE(r,t,e){let n=e.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),y.assert(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),y.assert(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=e.validationData!=null,s,a;if(o)if(DE(e.validationData))y.assert(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let g=XJ(e.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let p=Qy(e.callbacks,e.yieldEvery),m=e.verbose==null?1:e.verbose,{callbackList:c,history:d}=Jy(p,m,e.epochs,null,null,YJ(t,e),null,o,l);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,h=await t.iterator();for(;f<e.epochs;){let g={};await c.onEpochBegin(f);let b=0,T=0;for(n||(h=await t.iterator());!n||b<e.batchesPerEpoch;){let x=await h.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:I,ys:k}=FE(r,x.value),A={};A.batch=T,A.size=I[0].shape[0],await c.onBatchBegin(T,A);let F=[];if(e.classWeight!=null){let L=aT(e.classWeight,r.outputNames);for(let O=0;O<L.length;++O)F.push(await iT(k[O],null,L[O]))}let R=I.concat(k).concat(F),P=i(R);Fe(R);for(let L=0;L<u.length;++L){let O=u[L],G=P[L];A[O]=G,zt(G)}await c.onBatchEnd(T,A),jy(A),T++,b++}if(n?b>=e.batchesPerEpoch:x.done){if(o){let I;DE(e.validationData)?I=vt(await r.evaluateDataset(e.validationData,{batches:e.validationBatches})):I=vt(r.evaluate(s,a,{batchSize:e.validationBatchSize==null?jJ:e.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=I[k]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function YJ(r,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(r.size)&&(e=r.size),e}function DE(r){return typeof r.iterator=="function"}function ZJ(r){return typeof r.next=="function"}async function PE(r,t,e){e=e||{};let n=e.batches!=null,o=r.testFunction,s=[];if(e.verbose>0)throw new Ae("Verbose mode is not implemented yet.");y.assert(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let a=ZJ(t)?t:await t.iterator(),i=0,u=0;for(;!n||u<e.batches;){let l=await a.next();if(s=z(()=>{if(l.value){let{xs:p,ys:m}=FE(r,l.value),c=p.concat(m),d=z(()=>o(c));if(Fe(c),u===0)for(let h=0;h<d.length;++h)s.push(de(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],b=s[h];s[h]=z(()=>Y(s[h],E(f,g))),u>0&&Fe(b)}Fe(d),i+=f,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let p=s[l];s[l]=ce(s[l],i),Fe(p)}return Fr(s)}function uT(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function Kc(r,t,e){return r==null?[null]:Array.isArray(r)?r.map(n=>uu(n,t,e-t)):uu(r,t,e-t)}function pT(r,t){return z(()=>r==null?null:Array.isArray(r)?r.map(e=>pT(e,t)):zy(r,t.dtype==="int32"?t:re(t,"int32")))}function lT(r,t){let e=[],n=0,o=null;for(;n<r;)o=n+t,o>=r&&(o=r),e.push([n,o]),n=o;return e}async function QJ(r,t,e,n,o,s,a,i,u,l,p,m,c,d,f){o==null&&(o=32),s==null&&(s=1),p==null&&(p=!0),c==null&&(c=0);let h=!1;if(u!=null&&l!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new B("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(e,o,d,"steps_per_epoch"),b;g!=null&&(b=tn(0,g)),a==null&&(a=1);let{callbackList:T,history:x}=Jy(i,a,s,c,g,d,o,h,m);T.setModel(r),r.history=x,await T.onTrainBegin(),r.stopTraining_=!1;for(let I=c;I<s;++I){await T.onEpochBegin(I);let k={};if(d!=null)throw new Ae("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Ae("batch shuffling is not implemneted yet");p&&y.shuffle(b);let A=qt(b),F=lT(g,o);for(let R=0;R<F.length;++R){let P={};if(await T.onBatchBegin(R,P),z(()=>{let L=F[R][0],O=F[R][1],G=uu(A,L,O-L);P.batch=R,P.size=O-L;let W=pT(e,G),H=t(W);for(let V=0;V<n.length;++V){let q=n[V],Z=H[V];P[q]=Z,zt(Z)}if(R===F.length-1&&h){let V=r.testLoop(u,l,o);for(let q=0;q<n.length;++q){let Z=n[q],j=V[q];zt(j),k["val_"+Z]=j}}}),await T.onBatchEnd(R,P),jy(P),r.stopTraining_)break}A.dispose()}if(await T.onEpochEnd(I,k),r.stopTraining_)break}return await T.onTrainEnd(),await r.history.syncData(),r.history}async function ME(r,t,e,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,u,l,p,m,c;try{let d=n.batchSize==null?32:n.batchSize;uT(d);let f=!1,h=await r.standardizeUserData(t,e,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,b;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)u=n.validationData[0],l=n.validationData[1];else throw n.validationData.length===3?new Ae("validationData including sample weights is not supported yet."):new B(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let P=!0,L=await r.standardizeUserData(u,l,null,null,P,d);p=L[0],m=L[1],b=p.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let P=Math.floor(o[0].shape[0]*(1-n.validationSplit)),L=o[0].shape[0];p=Kc(o,P,L),a=o,o=Kc(o,0,P),m=Kc(s,P,L),i=s,s=Kc(s,0,P),b=p.concat(m)}else n.validationSteps!=null&&(g=!0);let T=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),I=r.getDedupedMetricsNames(),k,A;g?(r.makeTestFunction(),k=r.testFunction,A=I.slice().concat(I.map(P=>"val_"+P))):(k=null,b=[],A=I.slice());let F=Qy(n.callbacks,n.yieldEvery);return await QJ(r,x,T,I,d,n.epochs,n.verbose,F,k,b,n.shuffle,A,n.initialEpoch,null,null)}finally{r.isTraining=!1,Hs(o,t),Hs(s,e),Hs(a,t),Hs(i,e),Hs(p,u),Hs(m,l),c!=null&&Fe(c)}}function PA(r){let t=[];r instanceof Ke&&(r=[r]);for(let e=0;e<r.length;++e){let n=r[e];if(n.rank===1)t.push(pu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function Hs(r,t){if(r==null)return;let e=[];if(t instanceof Ke)e.push(t.id);else if(Array.isArray(t))t.forEach(o=>e.push(o.id));else if(t!=null)for(let o in t){let s=t[o];e.push(s.id)}let n=[];if(r instanceof Ke)e.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{e.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];e.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function JJ(r){return r instanceof Ke}function MA(r){return Array.isArray(r)}function EE(r){return!JJ(r)&&!MA(r)}function LE(r,t,e,n=!0,o=""){if(t==null||t.length===0){if(r!=null){let a=!1;if(MA(r)&&r.length>0)a=!0;else if(EE(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new B(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return t.map(a=>null);let s;if(EE(r)){r=r,s=[];for(let a of t){if(r[a]==null)throw new B(`No data provided for "${a}". Need data for each key in: ${t}`);s.push(r[a])}}else if(MA(r)){if(r=r,r.length!==t.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,t.length>1)throw new B(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=PA(s),e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;let i=s[a];if(i.shape.length!==e[a].length)throw new B(`Error when checking ${o}: expected ${t[a]} to have ${e[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<e[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=e[a][u];if(p!=null&&p>=0&&l!==p)throw new B(`${o} expected a batch of elements where each example has shape [${e[a].slice(1,e[a].length)}] (i.e.,tensor shape [*,${e[a].slice(1,e[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function e9(r,t,e){let n=Us(r.map(s=>s.shape[0]));n.sort();let o=Us(t.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new B(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new B(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!y.arraysEqual(n,o))throw new B(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function t9(r,t,e){let n=[wi,Wc,kl];for(let o=0;o<r.length;++o){let s=r[o],a=t[o],i=e[o];if(a!=null){if(a===kl&&s.shape[s.shape.length-1]===1)throw new B(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let u=s.shape.slice(1),l=i.slice(1);for(let p=0;p<u.length;++p){let m=u[p],c=l[p];if(c!=null&&m!==c)throw new B(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function _E(r,t,e,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==t.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(t.length>1)throw new B(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;let i=s[a];if(i.shape.length!==e[a].length)throw new B(`Error when checking ${o}: expected ${t[a]} to have ${e[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<e[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=e[a][u];if(p!=null&&p!==l)throw new B(`Error when checking ${o}: expected ${t[a]} to have shape ${JSON.stringify(e[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function r9(r,t){if(r==null||Array.isArray(r)&&r.length===0)return t.map(n=>[]);let e;if(typeof r=="string"||typeof r=="function")e=[r];else if(Array.isArray(r)||typeof r=="object")e=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(e))return t.map(n=>e);{let n=[];for(let o of t){let s=e.hasOwnProperty(o)?e[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var n9="layers-model",Yn=class extends Xn{constructor(e){super(e);this.isTraining=!1}summary(e,n,o=console.log){if(!this.built)throw new B("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");vE(this,e,n,o)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=SE(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Vr))throw new B("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new B(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(eT(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new B(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(u=>eT(u))}else{let i=eT(e.loss);this.outputs.forEach(u=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let u=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(u),this.feedLossFns.push(this.lossFunctions[i])}let o=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Va("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let u=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([u,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let s=r9(e.metrics,this.outputNames),a=(i,u,l)=>{this.outputNames.length>1&&(u=this.outputNames[i]+"_"+u),this.metricsNames.push(u),this.metricsTensors.push([l,i])};Va("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let u=s[i];(p=>{let m="",c,d,f;for(let h of p){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let b=this.internalOutputShapes[i];b[b.length-1]===1||this.lossFunctions[i]===Wc?["accuracy","acc"].indexOf(h)!==-1?d=Ph:["crossentropy","ce"].indexOf(h)!==-1&&(d=rT):this.lossFunctions[i]===Uc?["accuracy","acc"].indexOf(h)!==-1?d=nT:["crossentropy","ce"].indexOf(h)!==-1&&(d=DA):["accuracy","acc"].indexOf(h)!==-1?d=Mh:["crossentropy","ce"].indexOf(h)!==-1&&(d=Eh);let T;["accuracy","acc"].indexOf(h)!==-1?T="acc":["crossentropy","ce"].indexOf(h)!==-1&&(T="ce"),f=d,c=m+T}else f=CE(h),c=m+Lh(h);let g;Va(c,()=>{g=f}),a(i,c,g)}})(u)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,o={}){let s=o.batchSize==null?32:o.batchSize;uT(s);let a=!0,i=this.standardizeUserDataXY(e,n,a,s);try{let u=i[0].concat(i[1]);this.makeTestFunction();let l=this.testFunction,p=this.testLoop(l,u,s,o.verbose,o.steps);return Fr(p)}finally{Hs(i[0],e),Hs(i[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),PE(this,e,n)}checkNumSamples(e,n,o,s="steps"){let a;if(o!=null){if(a=null,n!=null)throw new B(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new B(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return a}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new B("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(n),s=o?n:[n],a=this.retrieveSymbolicTensors(s),i=new Vs;if(e instanceof Ke&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new B(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(let l of this.inputs){let p=e[l.name];if(p==null)throw new B(`No value is provided for the model's input ${l.name}`);i.add(l,p)}let u=Il(a,i);return o?u:u[0]}retrieveSymbolicTensors(e){let n=zs(null,e.length),o=e.length;for(let s of this.layers){let a=Array.isArray(s.output)?s.output:[s.output],i=a.map(u=>u.name);for(let u=0;u<e.length;++u){let l=i.indexOf(e[u]);if(l!==-1&&(n[u]=a[l],o--),o===0)break}if(o===0)break}if(o>0){let s=[];throw n.forEach((a,i)=>{a==null&&s.push(e[i])}),new B(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return n}predictLoop(e,n=32,o=!1){return z(()=>{let s=this.checkNumSamples(e);if(o)throw new Ae("Verbose predictLoop() is not implemented yet.");let a=lT(s,n),i=this.outputs.map(u=>[]);for(let u=0;u<a.length;++u)z(()=>{let p=a[u][0],m=a[u][1],c=Kc(e,p,m),d=[];if(Array.isArray(c))for(let h=0;h<c.length;++h)d.push({key:this.inputs[h],value:c[h]});else d.push({key:this.inputs[0],value:c});let f=new Vs(d);return Il(this.outputs,f)}).forEach((p,m)=>i[m].push(p));return Fr(i.map(u=>mt(u,0)))})}predict(e,n={}){let o=PA(e);_E(o,this.inputNames,this.feedInputShapes,!1);try{let s=n.batchSize==null?32:n.batchSize;return uT(s),this.predictLoop(o,s)}finally{Hs(o,e)}}predictOnBatch(e){_E(e,this.inputNames,this.feedInputShapes,!0);let n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,o=!0,s){if(this.optimizer_==null)throw new Hr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let i=0;i<this.feedOutputShapes.length;++i){let u=this.feedOutputShapes[i];this.feedLossFns[i]===Uc?a.push(u.slice(0,u.length-1).concat([1])):a.push(u)}if(e=LE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=LE(n,this.feedOutputNames,a,!1,"target"),e9(e,n,null),t9(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new B(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,o,s,a=!0,i){let[u,l]=this.standardizeUserDataXY(e,n,a,i);if(o!=null)throw new Error("sample weight is not supported yet.");let p=null;if(s!=null){let m=aT(s,this.outputNames);p=[];for(let c=0;c<m.length;++c)p.push(await iT(l[c],null,m[c]))}return[u,l,p]}testLoop(e,n,o,s=0,a){return z(()=>{let i=this.checkNumSamples(n,o,a,"steps"),u=[];if(s>0)throw new Ae("Verbose mode is not implemented yet.");if(a!=null)throw new Ae("steps mode in testLoop() is not implemented yet");{let l=lT(i,o),p=qt(tn(0,i));for(let m=0;m<l.length;++m){let c=l[m][0],d=l[m][1],f=uu(p,c,d-c),h=pT(n,f),g=e(h);if(m===0)for(let b=0;b<g.length;++b)u.push(de(0));for(let b=0;b<g.length;++b){let T=g[b];u[b]=Y(u[b],E(d-c,T))}}for(let m=0;m<u.length;++m)u[m]=ce(u[m],i)}return u})}getDedupedMetricsNames(){let e=this.metricsNames,n=[];for(let o=0;o<e.length;++o){let s=e[o],a=s;hA(e,s)>1&&(a+=`_${hA(e.slice(0,o),s)}`),n.push(a)}return n}makeTrainFunction(){return e=>{let n=[],o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],u=()=>{let c=[];for(let g=0;g<this.inputs.length;++g)c.push({key:this.inputs[g],value:o[g]});let d=new Vs(c),f=Il(this.outputs,d,{training:!0}),h;for(let g=0;g<this.lossFunctions.length;++g){let b=this.lossFunctions[g],T=b(s[g],f[g]);a[g]!=null&&(T=wE(T,a[g]));let x=$t(T);n.push(x),g===0?h=T:h=Y(h,T)}for(let g=0;g<this.metricsTensors.length;++g){let b;if(this.outputs.length>1&&g<this.outputs.length)b=n[g];else{let T=this.metricsTensors[g][0],x=this.metricsTensors[g][1];b=$t(T(s[x],f[x]))}zt(b),i.push(b)}return h=$t(h),this.calculateLosses().forEach(g=>{h=Y(h,g)}),h},l=this.collectedTrainableWeights.map(c=>c.read()),p=!0;return[this.optimizer_.minimize(u,p,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>z(()=>{let n=[],o,s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let p=0;p<this.inputs.length;++p)i.push({key:this.inputs[p],value:s[p]});let u=new Vs(i),l=Il(this.outputs,u);for(let p=0;p<this.lossFunctions.length;++p){let m=this.lossFunctions[p],c=$t(m(a[p],l[p]));p===0?o=c:o=Y(o,c),n.push(o)}for(let p=0;p<this.metricsTensors.length;++p){let m=this.metricsTensors[p][0],c=this.metricsTensors[p][1],d=$t(m(a[c],l[c]));n.push(d)}return n})}async fit(e,n,o={}){return ME(this,e,n,o)}async fitDataset(e,n){return RE(this,e,n)}async trainOnBatch(e,n){let o=await this.standardizeUserData(e,n),s=o[0],a=o[1],u=this.makeTrainFunction()(s.concat(a)),l=[];for(let p of u){let m=await p.data();l.push(m[0])}return Fe(u),Hs(o[0],e),Hs(o[1],n),Fr(l)}getNamedWeights(e){let n=[],o=e!=null&&e.trainableOnly,s=o?this.trainableWeights:this.weights,a=this.getWeights(o);for(let i=0;i<s.length;++i)o&&!s[i].trainable||n.push({name:s[i].originalName,tensor:a[i]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let n=mh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-mh().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Gs(this.loss);else if(Array.isArray(this.loss)){for(let n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>Gs(n))}else{let n=Object.keys(this.loss);e={};let o=this.loss;for(let s of n)if(typeof o[s]=="string")e[s]=Gs(o[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Gs(Lh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Gs(Lh(e)));{let e={};for(let n in this.metrics)e[n]=Gs(Lh(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let n=Sl(e.optimizer_config),o=xn(n),s;if(typeof e.loss=="string")s=iu(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(i=>iu(i));else if(e.loss!=null){s={};for(let i in e.loss)s[i]=iu(e.loss[i])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(i=>iu(i));else if(e.metrics!=null){a={};for(let i in e.metrics)a[i]=iu(e.metrics[i])}this.compile({loss:s,metrics:a,optimizer:o})}async save(e,n){if(typeof e=="string"){let p=Pn.getSaveHandlers(e);if(p.length===0)throw new B(`Cannot find any save handlers for URL '${e}'`);if(p.length>1)throw new B(`Found more than one (${p.length}) save handlers for URL '${e}'`);e=p[0]}if(e.save==null)throw new B("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=await Pn.encodeWeights(this.getNamedWeights(n)),s=!1,a=null,u={modelTopology:this.toJSON(a,s),format:n9,generatedBy:`TensorFlow.js tfjs-layers v${_h}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){u.trainingConfig=this.getTrainingConfig();let p="optimizer",{data:m,specs:c}=await Pn.encodeWeights(await this.optimizer.getWeights(),p);o.specs.push(...c),o.data=Pn.concatenateArrayBuffers([o.data,m])}return this.userDefinedMetadata!=null&&(RA(this.userDefinedMetadata,this.name,!0),u.userDefinedMetadata=this.userDefinedMetadata),u.weightData=o.data,u.weightSpecs=o.specs,e.save(u)}setUserDefinedMetadata(e){RA(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Yn.className="Model";ee.registerClass(Yn);var mT=class extends Yn{};mT.className="Functional";ee.registerClass(mT);async function $E(r,t){"modelTopology"in r||(r={modelTopology:r}),r=r;let e=r.modelTopology;e.model_config!=null&&(e=e.model_config);let n=Sl(e),o=xn(n,t);if(r.weightsManifest!=null){let s=await Pn.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Fe(s)}return o}async function BE(r,t){if(t==null&&(t={}),typeof r=="string"){let e=Pn.getLoadHandlers(r,t);if(e.length===0)e.push(Pn.browserHTTPRequest(r,t));else if(e.length>1)throw new B(`Found more than one (${e.length}) load handlers for URL '${r}'`);r=e[0]}return o9(r,void 0,t)}async function o9(r,t,e){if(e==null&&(e={}),r.load==null)throw new B("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=e.strict==null?!0:e.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=xn(Sl(o),t,a),u=n.trainingConfig;if(u!=null&&i.loadTrainingConfig(u),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new B("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:p}=s9(n.weightData,n.weightSpecs);i.loadWeights(l,s),i.optimizer!=null&&p.length>0&&await i.optimizer.setWeights(p),Fe(l),Fe(p.map(m=>m.tensor))}return i}function s9(r,t){let e=Pn.decodeWeights(r,t),n={},o=[];return t.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:e[s.name]}):n[s.name]=e[s.name]}),{modelWeights:n,optimizerWeights:o}}var cT=class extends Yn{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Tp("sequential_"),e.layers!=null)for(let n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new B(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let n=e instanceof cT||e instanceof Yn,o;if(n){if(o=e,o.outputs.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new B("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new B("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=Wy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(n)this.outputs=o.outputs,this.inputs=o.inputs;else{if(e.inboundNodes.length!==1)throw new B(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=IA(this.outputs[0])}this.inboundNodes=[],new lu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:zs(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(rt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Yn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,o=console.log){this.built||this.build(),super.summary(e,n,o)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,o={}){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.evaluate(e,n,o)}async evaluateDataset(e,n){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,o={}){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.fit(e,n,o)}async fitDataset(e,n){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,o={},s=!1){let a,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new B("Legacy serialization format not supported yet.");a=n}else y.assert(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=n.layers,delete n.layers,i=n;let u=new e(i);if(!(u instanceof cT))throw new Ae(`Sequential.fromConfig called on non-Sequential input: ${u}`);for(let l of a){let m=xn(l,void 0,s);s&&m.setFastWeightInitDuringBuild(!0),u.add(m)}return u}set stopTraining(e){if(this.model==null)throw new B("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new B("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let n of this.layers){let o={};o.className=n.getClassName(),o.config=n.getConfig(),e.push(o)}return{name:this.name,layers:e}}},vl=cT;vl.className="Sequential";ee.registerClass(vl);function a9(r){return new Yn(r)}function i9(r){return new vl(r)}function u9(r,t){return t==null&&(t={}),BE(r,t)}function EA(r){return Wy(r)}function p9(r,t){zc.registerCallbackConstructor(r,t)}var nn=class extends ee.Serializable{getConfig(){return{}}},dT=class extends nn{apply(t,e=1){return uP(t,e)}};dT.className="elu";ee.registerClass(dT);var fT=class extends nn{apply(t){return fy(t)}};fT.className="selu";ee.registerClass(fT);var hT=class extends nn{apply(t){return en(t)}};hT.className="relu";ee.registerClass(hT);var gT=class extends nn{apply(t){return z(()=>pp(6,en(t)))}};gT.className="relu6";ee.registerClass(gT);var bT=class extends nn{apply(t){return t}};bT.className="linear";ee.registerClass(bT);var yT=class extends nn{apply(t){return Ln(t)}};yT.className="sigmoid";ee.registerClass(yT);var TT=class extends nn{apply(t){return lP(t)}};TT.className="hardSigmoid";ee.registerClass(TT);var xT=class extends nn{apply(t){return su(t)}};xT.className="softplus";ee.registerClass(xT);var IT=class extends nn{apply(t){return pP(t)}};IT.className="softsign";ee.registerClass(IT);var CT=class extends nn{apply(t){return rp(t)}};CT.className="tanh";ee.registerClass(CT);var Vc=class extends nn{apply(t,e=-1){return gc(t,e)}};Vc.className="softmax";ee.registerClass(Vc);var kT=class extends nn{apply(t,e=-1){return ry(t,e)}};kT.className="logSoftmax";ee.registerClass(kT);var ST=class extends nn{apply(t,e=1){return z(()=>E(Ln(E(t,e)),t))}};ST.className="swish";ee.registerClass(ST);var vT=class extends nn{apply(t){return z(()=>E(t,rp(su(t))))}};vT.className="mish";ee.registerClass(vT);function Xa(r){return r.getClassName()}function LA(r,t={}){return Si(r,ee.SerializationMap.getMap().classNameMap,t,"activation")}function Ya(r){if(r==null){let t={};return t.className="linear",t.config={},LA(t)}if(typeof r=="string"){let t={};return t.className=r,t.config={},LA(t)}else return r instanceof nn?r:LA(r)}function _A(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var AT=class extends ee.Serializable{},kp=class extends AT{constructor(e){super();_A(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return z(()=>{let n=It([1]);return this.hasL1&&(n=Y(n,he(E(this.l1,Gt(e))))),this.hasL2&&(n=Y(n,he(E(this.l2,fl(e))))),_(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}};kp.className="L1L2";ee.registerClass(kp);function GE(r){return _A(r),new kp({l1:r!=null?r.l1:null,l2:0})}function UE(r){return _A(r),new kp({l2:r!=null?r.l2:null,l1:0})}var OE={l1l2:"L1L2"};function gt(r){return Cc(r)}function zE(r,t={}){return Si(r,ee.SerializationMap.getMap().classNameMap,t,"regularizer")}function wt(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in OE?OE[r]:r,config:{}};return zE(e)}else return r instanceof AT?r:zE(r)}var Hc=class extends Oe{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=_e(e);let o=en(e);return this.maxValue!=null&&(o=Gr(o,0,this.maxValue)),o}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}};Hc.className="ReLU";ee.registerClass(Hc);var qc=class extends Oe{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=_e(e);return uc(o,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};qc.className="LeakyReLU";ee.registerClass(qc);var jc=class extends Oe{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ct(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=wt(e.alphaRegularizer),this.alphaConstraint=Xt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new B(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=rt(e);let n=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)n[s-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)o[s]=e[s];this.inputSpec=[new At({ndim:e.length,axes:o})],this.built=!0}call(e,n){return e=_e(e),dc(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Pt(this.alphaInitializer),alphaRegularizer:gt(this.alphaRegularizer),alphaConstraint:jt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}};jc.className="PReLU";ee.registerClass(jc);var Xc=class extends Oe{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ae(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=_e(e);return ap(o)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};Xc.className="ELU";ee.registerClass(Xc);var Yc=class extends Oe{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){let o=_e(e);return E(o,re(ir(o,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}};Yc.className="ThresholdedReLU";ee.registerClass(Yc);var Zc=class extends Oe{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new Vc().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){let o=_e(e);return this.softmax(o,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}};Zc.className="Softmax";ee.registerClass(Zc);function Sp(r,t,e){if(typeof r=="number")return zs(r,t);if(r.length!==t)throw new B(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${r.length} elements.`);for(let n=0;n<t;++n){let o=r[n];if(!oP(o))throw new B(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function $n(r,t,e,n,o=1){if(r==null)return r;let s=t+(t-1)*(o-1),a;return e==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Za(r,t,e,n){if(r==null)return null;if(n==="valid")r=r*t+Ha([e-t,0]);else if(n==="same")r=r*t;else throw new B(`Unsupport padding mode: ${n}.`);return r}function $h(r,t){return z(()=>(Wt(t),t==="channelsFirst"?ze(r,[0,2,3,1]):r))}function $A(r,t){return z(()=>(Wt(t),t==="channelsFirst"?ze(r,[0,2,3,4,1]):r))}function m9(r,t,e,n=1,o="valid",s,a=1){return z(()=>{if(s==null&&(s=gn()),Wt(s),r.shape.length!==3)throw new B(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(t.shape.length!==3)throw new B(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new B(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(r=ze(r,[0,2,1])),o==="causal")throw new Ae("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Hb(r,t,n,o==="same"?"same":"valid","NWC",a);return e!=null&&(i=bn(i,e)),i})}function WE(r,t,e,n=[1,1],o="valid",s,a,i=null){return z(()=>{if(s==null&&(s=gn()),Wt(s),r.rank!==3&&r.rank!==4)throw new B(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(t.rank!==3&&t.rank!==4)throw new B(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=$h(r,s);if(o==="causal")throw new Ae("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=mp.conv2d({x:u,filter:t,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:e,activation:i}),s==="channelsFirst"&&(u=ze(u,[0,3,1,2])),u})}function c9(r,t,e,n=[1,1,1],o="valid",s,a){return z(()=>{if(s==null&&(s=gn()),Wt(s),r.rank!==4&&r.rank!==5)throw new B(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(t.rank!==4&&t.rank!==5)throw new B(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=$A(r,s);if(o==="causal")throw new Ae("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=jb(i,t,n,o==="same"?"same":"valid","NDHWC",a),e!=null&&(i=bn(i,e)),s==="channelsFirst"&&(i=ze(i,[0,4,1,2,3])),i})}var Nl=class extends Oe{constructor(e,n){super(n);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(Nl.verifyArgs(n),this.rank=e,rr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ae(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Sp(n.kernelSize,e,"kernelSize"),this.strides=Sp(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,hn(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Wt(this.dataFormat),this.activation=Ya(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=Ct(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Xt(n.biasConstraint),this.biasRegularizer=wt(n.biasRegularizer),this.activityRegularizer=wt(n.activityRegularizer),this.dilationRate=Sp(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new B(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new B(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new B(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(rs("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Py(e.kernelSize,"number",1,3))throw new B(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Xa(this.activation),useBias:this.useBias,biasInitializer:Pt(this.biasInitializer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),biasConstraint:jt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}},vp=class extends Nl{constructor(e,n){super(e,n);this.kernel=null;vp.verifyArgs(n),this.filters=n.filters,rr(this.filters,"filters"),this.kernelInitializer=Ct(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Xt(n.kernelConstraint),this.kernelRegularizer=wt(n.kernelRegularizer)}build(e){e=rt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=this.kernelSize.concat([o,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:o}}],this.built=!0}call(e,n){return z(()=>{e=_e(e);let o,s=this.bias==null?null:this.bias.read(),a=My(this.activation.getClassName());if(a!=null&&this.rank===2)o=WE(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)o=m9(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)o=WE(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)o=c9(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ae("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(o=this.activation.apply(o))}return o})}computeOutputShape(e){e=rt(e);let n=[],o=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<o.length;++a){let i=$n(o[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);n.push(i)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(n),s.push(this.filters)):(s.push(this.filters),s=s.concat(n)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Pt(this.kernelInitializer),kernelRegularizer:gt(this.kernelRegularizer),kernelConstraint:jt(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new B(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},BA=class extends vp{constructor(t){super(2,t),BA.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Py(t.kernelSize,"number",1,2))throw new B(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}},Al=BA;Al.className="Conv2D";ee.registerClass(Al);var OA=class extends vp{constructor(t){super(3,t),OA.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new B(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}},wl=OA;wl.className="Conv3D";ee.registerClass(wl);var Qc=class extends Al{constructor(e){super(e);if(this.inputSpec=[new At({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=rt(e),e.length!==4)throw new B("Input should have rank 4; Received input shape: "+JSON.stringify(e));let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");let o=e[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:4,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{let o=_e(e);if(o.shape.length!==4)throw new B(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,a=s[0],i,u;this.dataFormat==="channelsFirst"?(i=2,u=3):(i=1,u=2);let l=s[i],p=s[u],m=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],f=this.strides[1],h=Za(l,d,m,this.padding),g=Za(p,f,c,this.padding),b=[a,h,g,this.filters];this.dataFormat!=="channelsLast"&&(o=ze(o,[0,2,3,1]));let T=qb(o,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(T=ze(T,[0,3,1,2])),this.bias!=null&&(T=bn(T,this.bias.read(),this.dataFormat)),this.activation!=null&&(T=this.activation.apply(T)),T})}computeOutputShape(e){e=rt(e);let n=e.slice(),o,s,a;this.dataFormat==="channelsFirst"?(o=1,s=2,a=3):(o=3,s=1,a=2);let i=this.kernelSize[0],u=this.kernelSize[1],l=this.strides[0],p=this.strides[1];return n[o]=this.filters,n[s]=Za(n[s],l,i,this.padding),n[a]=Za(n[a],p,u,this.padding),n}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Qc.className="Conv2DTranspose";ee.registerClass(Qc);var Jc=class extends wl{constructor(e){super(e);if(this.inputSpec=[new At({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=rt(e),e.length!==5)throw new B("Input should have rank 5; Received input shape: "+JSON.stringify(e));let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");let o=e[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:5,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{let o=_e(e);if(o.shape.length!==5)throw new B(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,a=s[0],i,u,l;this.dataFormat==="channelsFirst"?(l=2,i=3,u=4):(l=1,i=2,u=3);let p=s[l],m=s[i],c=s[u],d=this.kernelSize[0],f=this.kernelSize[1],h=this.kernelSize[2],g=this.strides[0],b=this.strides[1],T=this.strides[2],x=Za(p,g,d,this.padding),I=Za(m,b,f,this.padding),k=Za(c,T,h,this.padding),A=[a,x,I,k,this.filters];this.dataFormat!=="channelsLast"&&(o=ze(o,[0,2,3,4,1]));let F=Yb(o,this.kernel.read(),A,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(F=ze(F,[0,4,1,2,3])),this.bias!==null&&(F=bn(F,this.bias.read(),this.dataFormat)),this.activation!==null&&(F=this.activation.apply(F)),F})}computeOutputShape(e){e=rt(e);let n=e.slice(),o,s,a,i;this.dataFormat==="channelsFirst"?(o=1,s=2,a=3,i=4):(o=4,s=1,a=2,i=3);let u=this.kernelSize[0],l=this.kernelSize[1],p=this.kernelSize[2],m=this.strides[0],c=this.strides[1],d=this.strides[2];return n[o]=this.filters,n[s]=Za(n[s],m,u,this.padding),n[a]=Za(n[a],c,l,this.padding),n[i]=Za(n[i],d,p,this.padding),n}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Jc.className="Conv3DTranspose";ee.registerClass(Jc);var wT=class extends vp{constructor(e,n){super(e,n);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(n.filters==null)throw new B("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new B("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new B(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=Ct(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=wt(n.depthwiseRegularizer),this.depthwiseConstraint=Xt(n.depthwiseConstraint),this.pointwiseInitializer=Ct(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=wt(n.pointwiseRegularizer),this.pointwiseConstraint=Xt(n.pointwiseConstraint)}build(e){if(e=rt(e),e.length<this.rank+2)throw new B(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new B(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);let o=e[n],s=this.kernelSize.concat([o,this.depthMultiplier]),a=[];for(let u=0;u<this.rank;++u)a.push(1);a.push(o*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new At({ndim:this.rank+2,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{e=_e(e);let o;if(this.rank===1)throw new Ae("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=ze(e,[0,2,3,1])),o=hy(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=bn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=ze(o,[0,3,1,2])),o})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Pt(this.depthwiseInitializer),e.pointwiseInitializer=Pt(this.pointwiseInitializer),e.depthwiseRegularizer=gt(this.depthwiseRegularizer),e.pointwiseRegularizer=gt(this.pointwiseRegularizer),e.depthwiseConstraint=jt(this.depthwiseConstraint),e.pointwiseConstraint=jt(this.pointwiseConstraint),e}};wT.className="SeparableConv";var ed=class extends wT{constructor(t){super(2,t)}};ed.className="SeparableConv2D";ee.registerClass(ed);var zA=class extends vp{constructor(t){super(1,t),zA.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Py(t.kernelSize,"number",1,1))throw new B(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}},td=zA;td.className="Conv1D";ee.registerClass(td);var rd=class extends Oe{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return z(()=>{if(e=_e(e),this.dataFormat==="channelsLast"){let o=Ah(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ah(o,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=Ah(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ah(o,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}};rd.className="Cropping2D";ee.registerClass(rd);var nd=class extends Oe{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,rP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let n=e[2]==null?null:this.size[0]*e[2],o=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,o]}else{let n=e[1]==null?null:this.size[0]*e[1],o=e[2]==null?null:this.size[1]*e[2];return[e[0],n,o,e[3]]}}call(e,n){return z(()=>{let o=_e(e),s=o.shape;if(this.dataFormat==="channelsFirst"){o=ze(o,[0,2,3,1]);let a=this.size[0]*s[2],i=this.size[1]*s[3],u=this.interpolation==="nearest"?cp.resizeNearestNeighbor(o,[a,i]):cp.resizeBilinear(o,[a,i]);return ze(u,[0,3,1,2])}else{let a=this.size[0]*s[1],i=this.size[1]*s[2];return this.interpolation==="nearest"?cp.resizeNearestNeighbor(o,[a,i]):cp.resizeBilinear(o,[a,i])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}};nd.className="UpSampling2D";ee.registerClass(nd);function d9(r,t,e=[1,1],n="valid",o,s){return z(()=>{o==null&&(o=gn()),Wt(o);let a=$h(r,o);if(r.rank!==4)throw new B(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(t.rank!==4)throw new B(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=sp(a,t,e,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=ze(a,[0,3,1,2])),a})}var od=class extends Nl{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ct(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Xt(e.depthwiseConstraint),this.depthwiseRegularizer=wt(e.depthwiseRegularizer)}build(e){if(e=rt(e),e.length<4)throw new B(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new B(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);let o=e[n],s=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{e=_e(e);let o=d9(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=bn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(e){e=rt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=$n(n,this.kernelSize[0],this.padding,this.strides[0]),i=$n(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,a,i]:[e[0],a,i,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Pt(this.depthwiseInitializer),e.depthwiseRegularizer=gt(this.depthwiseRegularizer),e.depthwiseConstraint=jt(this.depthwiseRegularizer),e}};od.className="DepthwiseConv2D";ee.registerClass(od);function GA(r,t,e,n){if(Array.isArray(r)){if(t!=null||e!=null)throw new B("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(t=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return t=o(t),e=o(e),{inputs:r,initialState:t,constants:e}}function UA(r,t,e,n=!1,o,s,a=!1,i=!1){return z(()=>{let u=t.shape.length;if(u<3)throw new B(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(tn(2,u));if(t=ze(t,l),s!=null)throw new Ae("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=re(re(o,"bool"),"float32"),o.rank===u-1&&(o=Lr(o,-1)),o=ze(o,l)),n&&(t=Nr(t,0),o!=null&&(o=Nr(o,0)));let p=[],m,c=e,d=t.shape[0],f=Wr(t),h;o!=null&&(h=Wr(o));for(let b=0;b<d;++b){let T=f[b],x=z(()=>r(T,c));if(o==null)m=x[0],c=x[1];else{let I=z(()=>{let k=h[b],A=le(_r(k),k),F=Y(E(x[0],k),E(c[0],A)),R=c.map((P,L)=>Y(E(x[1][L],k),E(P,A)));return{output:F,newStates:R}});m=I.output,c=I.newStates}i&&p.push(m)}let g;return i&&(g=Tr(p,1)),[m,g,c]})}var WA=class extends Oe{constructor(e){super(e);let n;if(e.cell==null)throw new B("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new Rl({cells:e.cell}):n=e.cell,n.stateSize==null)throw new B("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new At({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return tn(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Uy(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let o=n[0],s;if(this.returnSequences?s=[e[0],e[1],o]:s=[e[0],o],this.returnState){let a=[];for(let i of n)a.push([e[0],i]);return[s].concat(a)}else return s}computeMask(e,n){return z(()=>{Array.isArray(n)&&(n=n[0]);let o=this.returnSequences?n:null;if(this.returnState){let s=this.states.map(a=>null);return[o].concat(s)}else return o})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let o=0;o<e;++o)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ae("Constants support is not implemented in RNN yet.");Uy(e)&&(e=e[0]),e=e;let o=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new At({shape:[o,null,...s]});let a=[e[0]].concat(e.slice(2));this.cell.build(a);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(u=>u.shape[u.shape.length-1]),i))throw new B(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(u=>new At({shape:[null,u]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){z(()=>{if(!this.stateful)throw new _n("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>It([o,s])):this.states_=[It([o,this.cell.stateSize])];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>It([o,s])):this.states_[0]=It([o,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let s=0;s<this.states_.length;++s){let a=e[s],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,u=[o,i];if(!y.arraysEqual(a.shape,u))throw new B(`State ${s} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${a.shape}`);this.states_[s]=a}}this.states_=this.states_.map(s=>zt(s.clone()))})}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let a=GA(e,o,s,this.numConstants);e=a.inputs,o=a.initialState,s=a.constants;let i=[],u=[];if(o!=null){n.initialState=o,i=i.concat(o),this.stateSpec=[];for(let p of o)this.stateSpec.push(new At({shape:p.shape}));u=u.concat(this.stateSpec)}if(s!=null&&(n.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof rn){let p=[e].concat(i),m=this.inputSpec.concat(u),c=this.inputSpec;this.inputSpec=m;let d=super.apply(p,n);return this.inputSpec=c,d}else return super.apply(e,n)}call(e,n){return z(()=>{let o=n==null?null:n.mask,s=n==null?null:n.training,a=n==null?null:n.initialState;e=_e(e),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(e));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new B(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let u={training:s},p=UA((h,g)=>{let b=this.cell.call([h].concat(g),u);return[b[0],b.slice(1)]},e,a,this.goBackwards,o,null,this.unroll,this.returnSequences),m=p[0],c=p[1],d=p[2];this.stateful&&this.resetStates(d,s);let f=this.returnSequences?c:m;return this.returnState?[f].concat(d):f})}getInitialState(e){return z(()=>{let n=It(e.shape);return n=he(n,[1,2]),n=pu(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?Oy(n,[1,o]):n):this.cell.stateSize>1?[Oy(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===WA.className&&(n.cell={className:this.cell.getClassName(),config:o}),{...o,...e,...n}}static fromConfig(e,n,o={}){let s=n.cell,a=xn(s,o);return new e(Object.assign(n,{cell:a}))}},ns=WA;ns.className="RNN";ee.registerClass(ns);var du=class extends Oe{},Dl=class extends du{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,rr(this.units,"units"),this.activation=Ya(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Xt(e.kernelConstraint),this.recurrentConstraint=Xt(e.recurrentConstraint),this.biasConstraint=Xt(e.biasConstraint),this.dropout=cl([1,Ha([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=cl([1,Ha([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=rt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{if(e=e,e.length!==2)throw new B(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let o=e[1];e=e[0];let s=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fu({ones:()=>_r(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fu({ones:()=>_r(o),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let a,i=this.dropoutMask,u=this.recurrentDropoutMask;i!=null?a=Ks(E(e,i),this.kernel.read()):a=Ks(e,this.kernel.read()),this.bias!=null&&(a=bn(a,this.bias.read())),u!=null&&(o=E(o,u));let l=Y(a,Ks(o,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Xa(this.activation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...n}}};Dl.className="SimpleRNNCell";ee.registerClass(Dl);var sd=class extends ns{constructor(t){t.cell=new Dl(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return new t(e)}};sd.className="SimpleRNN";ee.registerClass(sd);var Fl=class extends du{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new B("GRUCell does not support reset_after parameter set to true.");this.units=e.units,rr(this.units,"units"),this.activation=Ya(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ya(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Xt(e.kernelConstraint),this.recurrentConstraint=Xt(e.recurrentConstraint),this.biasConstraint=Xt(e.biasConstraint),this.dropout=cl([1,Ha([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=cl([1,Ha([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=rt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{if(e=e,e.length!==2)throw new B(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training==null?!1:n.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fu({ones:()=>_r(e),rate:this.dropout,training:o,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fu({ones:()=>_r(s),rate:this.recurrentDropout,training:o,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,u,l,p;0<this.dropout&&this.dropout<1&&(e=E(e,a[0]));let m=Ks(e,this.kernel.read());this.useBias&&(m=bn(m,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=E(s,i[0]));let c=this.recurrentKernel.read(),[d,f]=Dr(c,[2*this.units,this.units],c.rank-1),h=Ks(s,d),[g,b,T]=Dr(m,3,m.rank-1),[x,I]=Dr(h,2,h.rank-1);u=this.recurrentActivation.apply(Y(g,x)),l=this.recurrentActivation.apply(Y(b,I));let k=Ks(E(l,s),f);p=this.activation.apply(Y(T,k));let A=Y(E(u,s),E(Y(1,Je(u)),p));return[A,A]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Xa(this.activation),recurrentActivation:Xa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...n}}};Fl.className="GRUCell";ee.registerClass(Fl);var ad=class extends ns{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Fl(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};ad.className="GRU";ee.registerClass(ad);var cu=class extends du{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,rr(this.units,"units"),this.activation=Ya(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ya(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Xt(e.kernelConstraint),this.recurrentConstraint=Xt(e.recurrentConstraint),this.biasConstraint=Xt(e.biasConstraint),this.dropout=cl([1,Ha([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=cl([1,Ha([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;e=rt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,i=this.units;o=new(s=class extends Tn{apply(l,p){let m=a.apply([i]),c=new Ip().apply([i]),d=a.apply([i*2]);return xA(xA(m,c),d)}},s.className="CustomInit",s)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return z(()=>{let o=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new B(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fu({ones:()=>_r(e),rate:this.dropout,training:o,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fu({ones:()=>_r(s),rate:this.recurrentDropout,training:o,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,u=this.recurrentDropoutMask,l,p,m,c;0<this.dropout&&this.dropout<1&&(e=E(e,i[0]));let d=Ks(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=E(s,u[0])),d=Y(d,Ks(s,this.recurrentKernel.read())),this.useBias&&(d=bn(d,this.bias.read()));let[f,h,g,b]=Dr(d,4,d.rank-1);l=this.recurrentActivation.apply(f),p=this.recurrentActivation.apply(h),m=Y(E(p,a),E(l,this.activation.apply(g))),c=this.recurrentActivation.apply(b);let T=E(c,this.activation.apply(m));return[T,T,m]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Xa(this.activation),recurrentActivation:Xa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...n}}};cu.className="LSTMCell";ee.registerClass(cu);var id=class extends ns{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new cu(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};id.className="LSTM";ee.registerClass(id);var Rl=class extends du{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return z(()=>{e=e;let o=e.slice(1),s=[];for(let u of this.cells.slice().reverse())Array.isArray(u.stateSize)?s.push(o.splice(0,u.stateSize.length)):s.push(o.splice(0,1));s.reverse();let a=[],i;for(let u=0;u<this.cells.length;++u){let l=this.cells[u];o=s[u],u===0?i=[e[0]].concat(o):i=[i[0]].concat(o),i=l.call(i,n),a.push(i.slice(1))}o=[];for(let u of a.slice().reverse())o.push(...u);return[i[0]].concat(o)})}build(e){Uy(e)&&(e=e[0]),e=e;let n;this.cells.forEach((o,s)=>{Va(`RNNCell_${s}`,()=>{o.build(e),Array.isArray(o.stateSize)?n=o.stateSize[0]:n=o.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){let e=super.getConfig(),n=a=>({className:a.getClassName(),config:a.getConfig()}),s={cells:this.cells.map(n)};return{...e,...s}}static fromConfig(e,n,o={}){let s=[];for(let a of n.cells)s.push(xn(a,o));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.cells)n.push(...o.trainableWeights);return n.concat(e)}return e}getWeights(){let e=[];for(let n of this.cells)e.push(...n.weights);return Nh(e)}setWeights(e){let n=[];for(let o of this.cells){let s=o.weights.length,a=e.splice(s);for(let i=0;i<o.weights.length;++i)n.push([o.weights[i],a[i]])}Lc(n)}};Rl.className="StackedRNNCells";ee.registerClass(Rl);function fu(r){let{ones:t,rate:e,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(t(),e):Gy(t(),e),i=()=>xp(a,t,n);return!o||o<=1?zt(i().clone()):Array(o).fill(void 0).map(i).map(l=>zt(l.clone()))}var NT=class extends ns{constructor(e){if(e.unroll)throw new Ae("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ae("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new At({ndim:5})]}call(e,n){return z(()=>{if(this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new B("ConvRNN2D cell does not support constants");let o=n==null?null:n.mask,s=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(e,{mask:o,training:s,initialState:a})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return z(()=>{let{stateSize:n}=this.cell,o=e.shape,s=this.computeSingleOutputShape(o),a=[s[0],...s.slice(2)],i=It(a);return Array.isArray(n)?Array(n.length).fill(i):[i]})}resetStates(e,n=!1){z(()=>{if(!this.stateful)throw new _n("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape,s=this.computeSingleOutputShape(o),a=[s[0],...s.slice(2)];if(o[0]==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(a)):this.states_=[It(a)];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(a)):this.states_[0]=It(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let u=0;u<this.states_.length;++u){let l=e[u],p=a;if(!y.arraysEqual(l.shape,p))throw new B(`State ${u} is incompatible with layer ${this.name}: expected shape=${p}, received shape=${l.shape}`);this.states_[u]=l}}this.states_=this.states_.map(u=>zt(u.clone()))})}computeSingleOutputShape(e){let{dataFormat:n,filters:o,kernelSize:s,padding:a,strides:i,dilationRate:u}=this.cell,l=n==="channelsFirst",p=e[l?3:2],m=e[l?4:3],c=$n(p,s[0],a,i[0],u[0]),d=$n(m,s[1],a,i[1],u[1]);return[...e.slice(0,2),...l?[o,c,d]:[c,d,o]]}};NT.className="ConvRNN2D";var Pl=class extends cu{constructor(e){let{filters:n,kernelSize:o,strides:s,padding:a,dataFormat:i,dilationRate:u}=e;super({...e,units:n});this.filters=n,rr(this.filters,"filters"),this.kernelSize=Sp(o,2,"kernelSize"),this.kernelSize.forEach(l=>rr(l,"kernelSize")),this.strides=Sp(s||1,2,"strides"),this.strides.forEach(l=>rr(l,"strides")),this.padding=a||"valid",hn(this.padding),this.dataFormat=i||"channelsLast",Wt(this.dataFormat),this.dilationRate=Sp(u||1,2,"dilationRate"),this.dilationRate.forEach(l=>rr(l,"dilationRate"))}build(e){var u;e=rt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=4,a=this.kernelSize.concat([o,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let p=this.biasInitializer,m=this.filters;l=new(u=class extends Tn{apply(d,f){let h=p.apply([m]),g=yr([m]),b=p.apply([m*2]);return Sc([h,g,b])}},u.className="CustomInit",u)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return z(()=>{if(e.length!==3)throw new B(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training||!1,s=e[0],a=e[1],i=e[2],u=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fu({ones:()=>_r(s),rate:this.dropout,training:o,count:u,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,p=(ae,pe,oe)=>!pe||!pe[oe]?ae:E(pe[oe],ae),m=p(s,l,0),c=p(s,l,1),d=p(s,l,2),f=p(s,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fu({ones:()=>_r(a),rate:this.recurrentDropout,training:o,count:u,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,g=p(a,h,0),b=p(a,h,1),T=p(a,h,2),x=p(a,h,3),I=3,[k,A,F,R]=Dr(this.kernel.read(),u,I),[P,L,O,G]=this.useBias?Dr(this.bias.read(),u):[null,null,null,null];m=this.inputConv(m,k,P,this.padding),c=this.inputConv(c,A,L,this.padding),d=this.inputConv(d,F,O,this.padding),f=this.inputConv(f,R,G,this.padding);let[W,H,V,q]=Dr(this.recurrentKernel.read(),u,I);g=this.recurrentConv(g,W),b=this.recurrentConv(b,H),T=this.recurrentConv(T,V),x=this.recurrentConv(x,q);let Z=this.recurrentActivation.apply(Y(m,g)),j=this.recurrentActivation.apply(Y(c,b)),X=Y(E(j,i),E(Z,this.activation.apply(Y(d,T)))),se=E(this.recurrentActivation.apply(Y(f,x)),this.activation.apply(X));return[se,se,X]})}getConfig(){let{units:e,...n}=super.getConfig(),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...n,...o}}inputConv(e,n,o,s){let a=es(e,n,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?bn(a,o,this.dataFormat):a}recurrentConv(e,n){return es(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Pl.className="ConvLSTM2DCell";ee.registerClass(Pl);var ud=class extends NT{constructor(t){let e=new Pl(t);super({...t,cell:e})}static fromConfig(t,e){return new t(e)}};ud.className="ConvLSTM2D";ee.registerClass(ud);var Ml=class extends Oe{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let n=e.shape,o=[];for(let s=0;s<this.noiseShape.length;++s)o.push(this.noiseShape[s]==null?n[s]:this.noiseShape[s]);return o}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);if(0<this.rate&&this.rate<1){let s=n.training==null?!1:n.training,a=this.getNoiseShape(o);return xp(()=>Gy(o,this.rate,a,this.seed),()=>o,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}};Ml.className="Dropout";ee.registerClass(Ml);var pd=class extends Ml{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}};pd.className="SpatialDropout1D";ee.registerClass(pd);var ld=class extends Oe{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,rr(this.units,"units"),this.activation=Ya(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Xt(e.kernelConstraint),this.biasConstraint=Xt(e.biasConstraint),this.kernelRegularizer=wt(e.kernelRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=rt(e);let n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=rt(e);let n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e),s=My(this.activation.getClassName()),a;return s!=null?a=Ks(o,this.kernel.read(),s,this.bias?this.bias.read():null):(a=Ks(o,this.kernel.read()),this.bias!=null&&(a=bn(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:Xa(this.activation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),biasConstraint:jt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}};ld.className="Dense";ee.registerClass(ld);var md=class extends Oe{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=rt(e);for(let n of e.slice(1))if(n==null)throw new B(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ws(e,1)]}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);if(this.dataFormat==="channelsFirst"&&o.rank>1){let s=[0];for(let a=2;a<o.rank;++a)s.push(a);s.push(1),o=ze(o,s)}return iP(o)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let n=super.getConfig();return Object.assign(e,n),e}};md.className="Flatten";ee.registerClass(md);var cd=class extends Oe{constructor(e){super(e);this.supportsMasking=!0,this.activation=Ya(e.activation)}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);return this.activation.apply(o)})}getConfig(){let e={activation:Xa(this.activation)},n=super.getConfig();return Object.assign(e,n),e}};cd.className="Activation";ee.registerClass(cd);var dd=class extends Oe{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return z(()=>(e=_e(e),sP(e,this.n)))}getConfig(){let e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}};dd.className="RepeatVector";ee.registerClass(dd);var fd=class extends Oe{constructor(e){super(e);this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){let o="Total size of new array must be unchanged.",s=n.slice(),a=1,i=null;for(let l=0;l<s.length;++l){let p=s[l];if(this.isUnknown(p))if(i===null)i=l;else throw new B("Can only specifiy one unknown dimension.");else a*=p}let u=Ws(e);if(i!==null){if(a===0||u%a!==0)throw new B(o);s[i]=u/a}else if(u!==a)throw new B(o);return s}computeOutputShape(e){let n=!1;for(let o=0;o<e.length;++o)if(this.isUnknown(e[o])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e),s=o.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return _(o,a)})}getConfig(){let e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}};fd.className="Reshape";ee.registerClass(fd);var hd=class extends Oe{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let n=tn(1,e.dims.length+1);if(!y.arraysEqual(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new At({ndim:this.dims.length+1})]}computeOutputShape(e){e=rt(e);let n=e.slice();return this.dims.forEach((o,s)=>{n[s+1]=e[o]}),n}call(e,n){return ze(_e(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}};hd.className="Permute";ee.registerClass(hd);var gd=class extends Oe{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){let o=_e(e),s=-1;return fh(au(o,this.maskValue),s)}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e),s=-1,a=!0,i=fh(au(o,this.maskValue),s,a);return E(o,re(i,o.dtype))})}};gd.className="Masking";ee.registerClass(gd);var bd=class extends Oe{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(vt(e.inputLength))}this.inputDim=e.inputDim,rr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,rr(this.outputDim,"outputDim"),this.embeddingsInitializer=Ct(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=wt(e.embeddingsRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.embeddingsConstraint=Xt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return z(()=>this.maskZero?(e=_e(e),au(e,we(e))):null)}computeOutputShape(e){if(e=rt(e),this.inputLength==null)return[...e,this.outputDim];let n=vt(this.inputLength);if(n.length!==e.length-1)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let o=0;for(let s=0;s<n.length;++s){let a=n[s],i=e[s+1];if(a!=null&&i!=null&&a!==i)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(n[o]=i),o++}}return[e[0],...n,this.outputDim]}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);o.dtype!=="int32"&&(o=dl(o,"int32"));let s=zy(this.embeddings.read(),_(o,[o.size]));return _(s,rt(this.computeOutputShape(o.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pt(this.embeddingsInitializer),embeddingsRegularizer:gt(this.embeddingsRegularizer),activityRegularizer:gt(this.activityRegularizer),embeddingsConstraint:jt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}};bd.className="Embedding";ee.registerClass(bd);var hu=class extends Oe{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Ae}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;let o=e.slice(0,e.length-n.length);for(let s=0;s<n.length;++s){let a=e[e.length-n.length+s],i=n[s];if(a==null||i==null||a<0||i<0)o.push(null);else if(a===1)o.push(i);else if(i===1)o.push(a);else{if(a!==i)throw new B("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));o.push(a)}}return o}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[rt(e)]),e=e,e.length<2)throw new B(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(let a of e)a!=null&&a[0]!==null&&n.push(a[0]);if(n=Us(n),n.length>1)throw new B(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let o=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let i=e[a]==null?null:e[a].slice(1);o=this.computeElementwiseOpOutputShape(o,i)}let s=e.map(a=>a.length);e.indexOf(null)===-1&&Us(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return z(()=>{if(e=e,this.reshapeRequired){let o=[],s=e.map(a=>a.rank);if(s.indexOf(null)===-1){let a=Ha(s);for(let i of e){let u=i.rank;for(let l=0;l<a-u;++l)i=pu(i,1);o.push(i)}return this.mergeFunction(o)}else{let a=!1;for(let l of e){let p=l.rank;if(p==null){let m=l.shape,c=m[0],d=m.slice(1).concat([c]),f=_(l,[c].concat(Ws(m.slice(1))));f=ze(f,[1,0]),f=_(f,d),o.push(f),a=!0}else if(p>1){let m=tn(1,p).concat([0]);o.push(ze(l,m)),a=!0}else o.push(l)}let i=this.mergeFunction(o),u=i.rank;if(a){if(u==null){let l=i.shape,p=l.length,m=l[p-1],c=[m].concat(l.slice(0,l.length-1));i=_(ze(_(i,[-1,m]),[1,0]),c)}else if(u>1){let l=[u-1].concat(tn(0,u-1));i=ze(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=[];for(let s of e)s!=null&&s[0]!==null&&o.push(s[0]);return o=Us(o),o.length===1?n=o.concat(n):n=[null].concat(n),n}computeMask(e,n){return z(()=>{if(n==null)return null;if(!Array.isArray(n))throw new B("`mask` should be an Array");if(!Array.isArray(e))throw new B("`inputs` should be an Array");if(n.length!==e.length)throw new B(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(s=>s==null))return null;n=n.map(s=>s==null?s:Lr(s,0));let o=n[0];for(let s=1;s<n.length-1;++s)o=Jr(o,n[s]);return o})}},yd=class extends hu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Y(e,t[n]);return e})}};yd.className="Add";ee.registerClass(yd);var Td=class extends hu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=E(e,t[n]);return e})}};Td.className="Multiply";ee.registerClass(Td);var xd=class extends hu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Y(e,t[n]);return E(1/t.length,e)})}};xd.className="Average";ee.registerClass(xd);var Id=class extends hu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ts(e,t[n]);return e})}};Id.className="Maximum";ee.registerClass(Id);var Cd=class extends hu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=pp(e,t[n]);return e})}};Cd.className="Minimum";ee.registerClass(Cd);var kd=class extends hu{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new B("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(let s of e)if(s!=null){n=!1;break}if(n)return;let o=[];for(let s=0;s<e.length;++s){let a=e[s].slice();a.splice(this.axis,1);let i=!1;for(let u of o)if(y.arraysEqual(u,a)){i=!0;break}i||o.push(a)}if(o.length>1)throw new B("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return z(()=>Sc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new B("A `Concatenate` layer should be called on a list of inputs.");let n=e,o=n[0].slice(),s=this.axis<0?o.length+this.axis:this.axis;for(let a of n.slice(1)){if(o[s]==null||a[s]==null){o[s]=null;break}o[s]+=a[s]}return o}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new B("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new B("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new B(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return z(()=>{let o=!0;if(n.forEach(i=>{if(i!=null){o=!1;return}}),o)return null;let s=[];for(let i=0;i<e.length;++i)n[i]==null?s.push(re(_r(e[i]),"bool")):n[i].rank<e[i].rank?s.push(Lr(n[i],-1)):s.push(n[i]);let a=mt(s,this.axis);return Lb(a,-1,!1)})}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}};kd.className="Concatenate";ee.registerClass(kd);function Bh(r,t){for(;r<0;)r+=t;return r}function f9(r,t,e){if(r.shape.length>3||t.shape.length>3)throw new Ae("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),r.dtype==="complex64"||t.dtype==="complex64")throw new Ae("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=t.shape.length;e==null&&(e=[n-1,o-2]);let s=e;return z(()=>{let a;if(n>o){a=n-o;let u=[];for(let l=0;l<a;++l)u.push(1);t=_(t,t.shape.concat(u))}else if(o>n){a=o-n;let u=[];for(let l=0;l<a;++l)u.push(1);r=_(r,r.shape.concat(u))}else a=0;let i;if(r.shape.length===2&&t.shape.length===2)s[0]===s[1]?i=he(E(r,t),s[0]):i=he(E(ze(r,[1,0]),t),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===t.shape.length-1;i=Ve(r,t,u,l)}if(a>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let p=u;p<u+a;++p)l.push(p);i=$s(i,l)}return i.shape.length===1&&(i=Lr(i,1)),i})}var Sd=class extends hu{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0],o=e[1];if(n.length>3||o.length>3)throw new Ae("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);if(n[s[0]]!==o[s[1]])throw new B(`Dimension incompatibility: ${n[s[0]]} !== ${o[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new B(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],o=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((a,i)=>Bh(a,e[i].shape.length)):s=[Bh(this.axes,n.shape.length),Bh(this.axes,o.shape.length)],this.normalize&&(n=Dh(n,s[0]),o=Dh(o,s[1])),f9(n,o,s)}interpretAxes(e,n){let o;return Array.isArray(this.axes)?o=this.axes:o=[Bh(this.axes,e.length),Bh(this.axes,n.length)],o}computeOutputShape(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0].slice(),o=e[1].slice();if(n.length>3||o.length>3)throw new Ae("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);n.splice(s[0],1),o.splice(s[1],1),o.splice(0,1);let a=n.concat(o);return a.length===1&&a.push(1),a}computeMask(e,n){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}};Sd.className="Dot";ee.registerClass(Sd);var vd=class extends Oe{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);return xp(()=>Y(vc(o.shape,0,this.stddev),o),()=>o,n.training||!1)})}};vd.className="GaussianNoise";ee.registerClass(vd);var Ad=class extends Oe{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);return this.rate>0&&this.rate<1?xp(()=>{let a=Math.sqrt(this.rate/(1-this.rate));return E(o,vc(o.shape,1,a))},()=>o,n.training||!1):o})}};Ad.className="GaussianDropout";ee.registerClass(Ad);var wd=class extends Oe{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||_e(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return z(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(e);return xp(()=>{let a=_e(e),i=1.6732632423543772,u=1.0507009873554805,l=-i*u,p=Ls(Ii(o),this.rate);p=dl(p,"float32");let m=((1-this.rate)*(1+this.rate*l**2))**-.5,c=-m*l*this.rate,d=Y(E(a,p),E(Y(p,-1),l));return Y(E(d,m),c)},()=>_e(e),n.training||!1)}return e})}};wd.className="AlphaDropout";ee.registerClass(wd);function Oh(r,t,e,n,o,s=.001){let a;if(r.rank===2)a=Bb(r,t,e,n,o,s);else if(r.rank===3)a=Ob(r,t,e,n,o,s);else if(r.rank===4)a=zb(r,t,e,n,o,s);else throw new Ae(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function h9(r,t,e,n,o=.001){return z(()=>{let s=tl(r,n),a=s.mean,i=s.variance;return[Oh(r,a,i,e,t,o),a,i]})}function g9(r,t,e,n,o=.001){return z(()=>{let s=tl(r,n),a=s.mean,i=s.variance,u=[];for(let f of tn(0,r.rank))n.indexOf(f)!==-1?u.push(1):u.push(r.shape[f]);let l=_(a,u),p=_(i,u),m=t==null?null:_(t,u),c=e==null?null:_(e,u);return[Oh(r,l,p,c,m,o),a,i]})}function b9(r,t,e,n,o=.001){return y.arraysEqual(n.slice().sort(),tn(0,r.rank-1))?h9(r,t,e,n,o):g9(r,t,e,n,o)}var Nd=class extends Oe{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ct(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ct(e.movingVarianceInitializer||"ones"),this.betaConstraint=Xt(e.betaConstraint),this.gammaConstraint=Xt(e.gammaConstraint),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer)}build(e){e=rt(e);let n=this.axis>=0?this.axis:this.axis+e.length,o=e[n];if(o==null)throw new B(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new At({ndim:e.length,axes:{[n]:o}})];let s=[o];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return z(()=>{let o=n.training==null?!1:n.training,s=_e(e),a=s.shape,i=a.length,u=tn(0,i),l=this.axis>=0?this.axis:this.axis+i;u.splice(l,1);let p=zs(1,i);p[l]=a[l];let m=u.slice();m.sort();let c=!y.arraysEqual(m,tn(0,i).slice(0,i-1)),d=()=>{if(c){let x=_(this.movingMean.read(),p),I=_(this.movingVariance.read(),p),k=this.center?_(this.beta.read(),p):null,A=this.scale?_(this.gamma.read(),p):null;return Oh(s,x,I,k,A,this.epsilon)}else return Oh(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return d();let[f,h,g]=b9(s,this.gamma.read(),this.beta.read(),u,this.epsilon),b=(x,I,k)=>{z(()=>{let A=1-k,F=x.read(),R=E(le(F,I),A);x.write(le(F,R))})};return(()=>{b(this.movingMean,h,this.momentum),b(this.movingVariance,g,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pt(this.betaInitializer),gammaInitializer:Pt(this.gammaInitializer),movingMeanInitializer:Pt(this.movingMeanInitializer),movingVarianceInitializer:Pt(this.movingVarianceInitializer),betaRegularizer:gt(this.betaRegularizer),gammaRegularizer:gt(this.gammaRegularizer),betaConstraint:jt(this.betaConstraint),gammaConstraint:jt(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}};Nd.className="BatchNormalization";ee.registerClass(Nd);var Dd=class extends Oe{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=rt(e);let n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=n);for(let a of this.axis)if(a<0||a>=n)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Us(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(a=>e[a]),s=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,n){let o=_e(e),s=o.shape,a=s.length;return z(()=>{let{mean:u,variance:l}=tl(o,this.axis,!0),p=zs(1,a);for(let g of this.axis)p[g]=s[g];let m=g=>g!=null&&g.shape.length!==a?_(g,p):g,c=this.scale?m(this.gamma.read()):null,d=this.center?m(this.beta.read()):null,f=[],h=[];for(let g=0;g<a;++g)this.axis.indexOf(g)!==-1?(f.push(s[g]),h.push(1)):(f.push(1),h.push(s[g]));return u=Qr(u,f),l=Qr(l,f),c!=null&&(c=Qr(c,h)),d!=null&&(d=Qr(d,h)),Oh(o,u,l,d,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pt(this.betaInitializer),gammaInitializer:Pt(this.gammaInitializer),betaRegularizer:gt(this.betaRegularizer),gammaRegularizer:gt(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}};Dd.className="LayerNormalization";ee.registerClass(Dd);function y9(r,t,e){return z(()=>{if(r.rank!==4)throw new B(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new B("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=gn()),e!=="channelsLast"&&e!=="channelsFirst")throw new B(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],jn(r,n)})}var Fd=class extends Oe{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?gn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new B(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,o;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],o=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new B(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new B(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);o=e.padding[1]}this.padding=[n,o]}this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=rt(e);let n,o;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?o=e[3]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],e[1],n,o]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?o=e[2]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],n,o,e[3]])}call(e,n){return z(()=>y9(_e(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}};Fd.className="ZeroPadding2D";ee.registerClass(Fd);function ET(r,t,e,n,o,s){return z(()=>{Wt(o),gA(s),hn(n),e==null&&(e=[1,1]),n==null&&(n="valid"),o==null&&(o=gn()),s==null&&(s="max"),r=$h(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=mc(r,t,e,i):a=oc(r,t,e,i),o==="channelsFirst"&&(a=ze(a,[0,3,1,2])),a})}function KE(r,t,e,n,o,s){return z(()=>{Wt(o),gA(s),hn(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),o==null&&(o=gn()),s==null&&(s="max"),r=$A(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=ay(r,t,e,i):a=$b(r,t,e,i),o==="channelsFirst"&&(a=ze(a,[0,4,1,2,3])),a})}var DT=class extends Oe{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new B(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(rr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new B(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);rr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,hn(this.padding),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){e=rt(e);let n=$n(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return z(()=>{this.invokeCallHook(e,n),e=pu(_e(e),2);let o=this.poolingFunction(_e(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return $s(o,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}},Rd=class extends DT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),hn(o),ET(t,e,n,o,s,"max")}};Rd.className="MaxPooling1D";ee.registerClass(Rd);var Pd=class extends DT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),hn(o),ET(t,e,n,o,s,"avg")}};Pd.className="AveragePooling1D";ee.registerClass(Pd);var FT=class extends Oe{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new B(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];rr(this.poolSize,"poolSize"),rr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),hn(this.padding),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=rt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=$n(n,this.poolSize[0],this.padding,this.strides[0]),o=$n(o,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,o]:[e[0],n,o,e[3]]}call(e,n){return z(()=>(this.invokeCallHook(e,n),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},Md=class extends FT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),hn(o),ET(t,e,n,o,s,"max")}};Md.className="MaxPooling2D";ee.registerClass(Md);var Ed=class extends FT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),hn(o),ET(t,e,n,o,s,"avg")}};Ed.className="AveragePooling2D";ee.registerClass(Ed);var RT=class extends Oe{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new B(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];rr(this.poolSize,"poolSize"),rr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),hn(this.padding),this.inputSpec=[new At({ndim:5})]}computeOutputShape(e){e=rt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=$n(n,this.poolSize[0],this.padding,this.strides[0]),o=$n(o,this.poolSize[1],this.padding,this.strides[1]),s=$n(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,o,s]:[e[0],n,o,s,e[4]]}call(e,n){return z(()=>(this.invokeCallHook(e,n),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},Ld=class extends RT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),hn(o),KE(t,e,n,o,s,"max")}};Ld.className="MaxPooling3D";ee.registerClass(Ld);var _d=class extends RT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),hn(o),KE(t,e,n,o,s,"avg")}};_d.className="AveragePooling3D";ee.registerClass(_d);var PT=class extends Oe{constructor(t){super(t),this.inputSpec=[new At({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ae}},$d=class extends PT{constructor(t){super(t||{})}call(t,e){return z(()=>{let n=_e(t);return $t(n,1)})}};$d.className="GlobalAveragePooling1D";ee.registerClass($d);var Bd=class extends PT{constructor(t){super(t||{})}call(t,e){return z(()=>{let n=_e(t);return dn(n,1)})}};Bd.className="GlobalMaxPooling1D";ee.registerClass(Bd);var MT=class extends Oe{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new Ae}getConfig(){let e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},Od=class extends MT{call(t,e){return z(()=>{let n=_e(t);return this.dataFormat==="channelsLast"?$t(n,[1,2]):$t(n,[2,3])})}};Od.className="GlobalAveragePooling2D";ee.registerClass(Od);var zd=class extends MT{call(t,e){return z(()=>{let n=_e(t);return this.dataFormat==="channelsLast"?dn(n,[1,2]):dn(n,[2,3])})}};zd.className="GlobalMaxPooling2D";ee.registerClass(zd);var LT=class extends Oe{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,o={}){let s=n.layer,a=xn(s,o);delete n.layer;let i={layer:a};return Object.assign(i,n),new e(i)}},Gd=class extends LT{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=rt(t),t.length<3)throw new B(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=rt(t);let e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),o=t[1];return[n[0],o].concat(n.slice(1))}call(t,e){return z(()=>(t=_e(t),UA((a,i)=>[_e(this.layer.call(a,e)),[]],t,[],!1,null,null,!1,!0)[1]))}};Gd.className="TimeDistributed";ee.registerClass(Gd);function T9(r){vi(eP,"BidirectionalMergeMode",r)}var x9="concat",Ud=class extends LT{constructor(e){super(e);let n=e.layer.getConfig(),o={};o.className=e.layer.getClassName(),o.config=n,this.forwardLayer=xn(o),n.goBackwards=n.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=n,this.backwardLayer=xn(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?x9:e.mergeMode,T9(this.mergeMode),e.weights)throw new Ae("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let n=e.length,o=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,o)),this.backwardLayer.setWeights(e.slice(o))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let o,s,a;return this.returnState&&(a=n.slice(1)),o=n[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,s=[o]):this.mergeMode==null?s=[o,o.slice()]:s=[o],this.returnState?this.mergeMode==null?s.concat(a).concat(a.slice()):[o].concat(a).concat(a.slice()):Fr(s)}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let a=GA(e,o,s,this.numConstants);if(e=a.inputs,o=a.initialState,s=a.constants,Array.isArray(e)&&(o=e.slice(1),e=e[0]),(o==null||o.length===0)&&s==null)return super.apply(e,n);let i=[],u=[];if(o!=null){let p=o.length;if(p%2>0)throw new B("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=o,i.push(...o);let m=o.map(c=>new At({shape:c.shape}));this.forwardLayer.stateSpec=m.slice(0,p/2),this.backwardLayer.stateSpec=m.slice(p/2),u.push(...m)}if(s!=null)throw new Ae("Support for constants in Bidirectional layers is not implemented yet.");let l=i[0]instanceof rn;for(let p of i)if(p instanceof rn!==l)throw new B("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let p=[e].concat(i),m=this.inputSpec.concat(u),c=this.inputSpec;this.inputSpec=m;let d=super.apply(p,n);return this.inputSpec=c,d}else return super.apply(e,n)}call(e,n){return z(()=>{let o=n.initialState,s,a;if(o==null)s=this.forwardLayer.call(e,n),a=this.backwardLayer.call(e,n);else{let l=o.slice(0,o.length/2),p=o.slice(o.length/2);s=this.forwardLayer.call(e,Object.assign(n,{initialState:l})),a=this.backwardLayer.call(e,Object.assign(n,{initialState:p}))}let i;this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=Nr(a,1));let u;return this.mergeMode==="concat"?u=Sc([s,a]):this.mergeMode==="sum"?u=Y(s,a):this.mergeMode==="ave"?u=E(.5,Y(s,a)):this.mergeMode==="mul"?u=E(s,a):this.mergeMode==null&&(u=[s,a]),this.returnState?this.mergeMode==null?u.concat(i):[u].concat(i):u})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Va(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Va(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[n,n]:o=n:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let a=this.forwardLayer.states.map(i=>null);return Array.isArray(o)?o.concat(a).concat(a):[o].concat(a).concat(a)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){let o=xn(n.layer);if(delete n.layer,n.numConstants!=null)throw new Ae("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=n;return s.layer=o,new e(s)}};Ud.className="Bidirectional";ee.registerClass(Ud);function I9(r){return new qa(r)}function C9(r){return new Xc(r)}function k9(r){return new Hc(r)}function S9(r){return new qc(r)}function v9(r){return new jc(r)}function A9(r){return new Zc(r)}function w9(r){return new Yc(r)}function N9(r){return new td(r)}function D9(r){return new Al(r)}function F9(r){return new Qc(r)}function R9(r){return new wl(r)}function P9(r){return new Jc(r)}function M9(r){return new ed(r)}function E9(r){return new rd(r)}function L9(r){return new nd(r)}function _9(r){return new od(r)}function $9(r){return new cd(r)}function B9(r){return new ld(r)}function O9(r){return new Ml(r)}function z9(r){return new pd(r)}function G9(r){return new md(r)}function U9(r){return new dd(r)}function W9(r){return new fd(r)}function K9(r){return new hd(r)}function V9(r){return new bd(r)}function H9(r){return new yd(r)}function q9(r){return new xd(r)}function j9(r){return new kd(r)}function X9(r){return new Id(r)}function Y9(r){return new Cd(r)}function Z9(r){return new Td(r)}function Q9(r){return new Sd(r)}function J9(r){return new Nd(r)}function eee(r){return new Dd(r)}function tee(r){return new Fd(r)}function KA(r){return new Pd(r)}function ree(r){return KA(r)}function nee(r){return KA(r)}function VA(r){return new Ed(r)}function oee(r){return VA(r)}function see(r){return VA(r)}function HA(r){return new _d(r)}function aee(r){return HA(r)}function iee(r){return HA(r)}function uee(r){return new $d(r)}function pee(r){return new Od(r)}function VE(r){return new Bd(r)}function HE(r){return new zd(r)}function qE(r){return new Rd(r)}function jE(r){return new Md(r)}function lee(r){return new Ld(r)}function mee(r){return new ad(r)}function cee(r){return new Fl(r)}function dee(r){return new id(r)}function fee(r){return new cu(r)}function hee(r){return new sd(r)}function gee(r){return new Dl(r)}function bee(r){return new ud(r)}function yee(r){return new Pl(r)}function Tee(r){return new ns(r)}function xee(r){return new Rl(r)}function Iee(r){return new Ud(r)}function Cee(r){return new Gd(r)}var kee=VE,See=HE,vee=qE,Aee=jE;function wee(r){return new vd(r)}function Nee(r){return new Ad(r)}function Dee(r){return new wd(r)}function Fee(r){return new gd(r)}var YE={};He(YE,{MAPE:()=>Gee,MSE:()=>Kee,binaryAccuracy:()=>Ree,binaryCrossentropy:()=>Pee,categoricalAccuracy:()=>Eee,categoricalCrossentropy:()=>Lee,cosineProximity:()=>Bee,mape:()=>Uee,meanAbsoluteError:()=>Oee,meanAbsolutePercentageError:()=>zee,meanSquaredError:()=>Wee,mse:()=>Vee,precision:()=>_ee,recall:()=>$ee,sparseCategoricalAccuracy:()=>Mee});function Ree(r,t){return Ph(r,t)}function Pee(r,t){return rT(r,t)}function Mee(r,t){return nT(r,t)}function Eee(r,t){return Mh(r,t)}function Lee(r,t){return Eh(r,t)}function _ee(r,t){return NA(r,t)}function $ee(r,t){return IE(r,t)}function Bee(r,t){return Rh(r,t)}function Oee(r,t){return Gc(r,t)}function zee(r,t){return Cp(r,t)}function Gee(r,t){return Cp(r,t)}function Uee(r,t){return Cp(r,t)}function Wee(r,t){return wi(r,t)}function Kee(r,t){return wi(r,t)}function Vee(r,t){return wi(r,t)}var ZE={};He(ZE,{modelFromJSON:()=>$E});var QE={};He(QE,{l1:()=>qee,l1l2:()=>Hee,l2:()=>jee});function Hee(r){return new kp(r)}function qee(r){return GE(r)}function jee(r){return UE(r)}var $T=class extends mu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Yn))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function _T(r,t){return r<t}function JE(r,t){return r>t}var BT=class extends $T{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Ae("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=_T:this.mode==="max"?this.monitorFunc=JE:this.monitor.indexOf("acc")!==-1?this.monitorFunc=JE:this.monitorFunc=_T,this.monitorFunc===_T&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===_T?1/0:-1/0}async onEpochEnd(e,n){await Ai(n);let o=this.getMonitorValue(n);o!=null&&(this.monitorFunc(o-this.minDelta,this.best)?(this.best=o,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let n=e[this.monitor];return n==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),n}};function Xee(r){return new BT(r)}var Yee={earlyStopping:Xee};var Zee=$();Zee.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var qA=(Q=>(Q[Q.DT_INVALID=0]="DT_INVALID",Q[Q.DT_FLOAT=1]="DT_FLOAT",Q[Q.DT_DOUBLE=2]="DT_DOUBLE",Q[Q.DT_INT32=3]="DT_INT32",Q[Q.DT_UINT8=4]="DT_UINT8",Q[Q.DT_INT16=5]="DT_INT16",Q[Q.DT_INT8=6]="DT_INT8",Q[Q.DT_STRING=7]="DT_STRING",Q[Q.DT_COMPLEX64=8]="DT_COMPLEX64",Q[Q.DT_INT64=9]="DT_INT64",Q[Q.DT_BOOL=10]="DT_BOOL",Q[Q.DT_QINT8=11]="DT_QINT8",Q[Q.DT_QUINT8=12]="DT_QUINT8",Q[Q.DT_QINT32=13]="DT_QINT32",Q[Q.DT_BFLOAT16=14]="DT_BFLOAT16",Q[Q.DT_QINT16=15]="DT_QINT16",Q[Q.DT_QUINT16=16]="DT_QUINT16",Q[Q.DT_UINT16=17]="DT_UINT16",Q[Q.DT_COMPLEX128=18]="DT_COMPLEX128",Q[Q.DT_HALF=19]="DT_HALF",Q[Q.DT_RESOURCE=20]="DT_RESOURCE",Q[Q.DT_VARIANT=21]="DT_VARIANT",Q[Q.DT_UINT32=22]="DT_UINT32",Q[Q.DT_UINT64=23]="DT_UINT64",Q[Q.DT_FLOAT_REF=101]="DT_FLOAT_REF",Q[Q.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",Q[Q.DT_INT32_REF=103]="DT_INT32_REF",Q[Q.DT_UINT8_REF=104]="DT_UINT8_REF",Q[Q.DT_INT16_REF=105]="DT_INT16_REF",Q[Q.DT_INT8_REF=106]="DT_INT8_REF",Q[Q.DT_STRING_REF=107]="DT_STRING_REF",Q[Q.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",Q[Q.DT_INT64_REF=109]="DT_INT64_REF",Q[Q.DT_BOOL_REF=110]="DT_BOOL_REF",Q[Q.DT_QINT8_REF=111]="DT_QINT8_REF",Q[Q.DT_QUINT8_REF=112]="DT_QUINT8_REF",Q[Q.DT_QINT32_REF=113]="DT_QINT32_REF",Q[Q.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",Q[Q.DT_QINT16_REF=115]="DT_QINT16_REF",Q[Q.DT_QUINT16_REF=116]="DT_QUINT16_REF",Q[Q.DT_UINT16_REF=117]="DT_UINT16_REF",Q[Q.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",Q[Q.DT_HALF_REF=119]="DT_HALF_REF",Q[Q.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",Q[Q.DT_VARIANT_REF=121]="DT_VARIANT_REF",Q[Q.DT_UINT32_REF=122]="DT_UINT32_REF",Q[Q.DT_UINT64_REF=123]="DT_UINT64_REF",Q))(qA||{}),Qee;(t=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=t.CheckpointFormatVersion||={})})(Qee||={});var jA={};function ete(r,t){let e={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:t};jA[r]=e}function OT(r){return jA[r]}function tte(r){delete jA[r]}function v(r,t,e,n,o){let s=t.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return kr(t.inputNames[s.inputIndexStart],e,n,o);if(s.type==="tensors")return t.inputNames.slice(i,u).map(c=>kr(c,e,n,o));let l=kr(t.inputNames.slice(i)[0],e,n,o),p=l.dataSync();return s.type==="number"?p[0]:y.toNestedArray(l.shape,p)}let a=t.attrParams[r];return a&&a.value}function kr(r,t,e,n){let[o,s]=In(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=e.currentContextIds.find(i=>!!t[zT(o,i)]);return a!==void 0?t[zT(o,a)][s]:void 0}function eL(r,t,e){return t[zT(r,e.currentContextId)]}function qs(r,t){let[e,n,o]=In(r);return[zT(e,t&&t.currentContextId),n,o]}function zT(r,t){return t?`${r}-${t}`:r}function In(r){let t=r.split(":");if(t.length===1)return[r,0,void 0];let e=t[0],n=t.length===3?t[1]:void 0,o=Number(t[t.length-1]);return[e,o,n]}function zh(r,t,e){let n=v("pad",r,t,e);if(n==="explicit"){n=v("explicitPaddings",r,t,e);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Qa(r){return r.kept?r:cn(r)}var XA={};He(XA,{json:()=>rte});var rte=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var YA={};He(YA,{json:()=>nte});var nte=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var ZA={};He(ZA,{json:()=>ote});var ote=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var QA={};He(QA,{json:()=>ste});var ste=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var JA={};He(JA,{json:()=>ate});var ate=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var ew={};He(ew,{json:()=>ite});var ite=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var tw={};He(tw,{json:()=>ute});var ute=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var rw={};He(rw,{json:()=>pte});var pte=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var nw={};He(nw,{json:()=>lte});var lte=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var ow={};He(ow,{json:()=>mte});var mte=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var sw={};He(sw,{json:()=>cte});var cte=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var aw={};He(aw,{json:()=>dte});var dte=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var iw={};He(iw,{json:()=>fte});var fte=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var uw={};He(uw,{json:()=>hte});var hte=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var pw={};He(pw,{json:()=>gte});var gte=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var lw={};He(lw,{json:()=>bte});var bte=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var mw={};He(mw,{json:()=>yte});var yte=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var cw={};He(cw,{json:()=>Tte});var Tte=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var dw={};He(dw,{json:()=>xte});var xte=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Gh=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[XA,YA,ZA,QA,JA,ew,tw,rw,nw,ow,sw,aw,iw,uw,pw,lw,mw,cw,dw],e=[].concat(...t.map(n=>n.json));this.opMappers=e.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(t,e={}){let n=t.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),u=[],l=[],p={},m={};e!=null&&(p=this.mapSignatureEntries(e.inputs),m=this.mapSignatureEntries(e.outputs));let c=Object.keys(i);c.forEach(h=>{let g=i[h];g.inputNames.forEach((b,T)=>{let[x,,I]=qs(b),k=i[x];if(k.outputs!=null){let A=k.outputs.indexOf(I);if(A!==-1){let F=`${x}:${A}`;g.inputNames[T]=F}}g.inputs.push(k),k.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=i[h];g.children.length===0&&l.push(g)}):Object.keys(m).forEach(h=>{let[g]=qs(h),b=i[g];b!=null&&(b.signatureKey=m[h],l.push(b))}),Object.keys(p).length>0?Object.keys(p).forEach(h=>{let[g]=qs(h),b=i[g];b&&(b.signatureKey=p[h],u.push(b))}):u=o;let d={};t.library!=null&&t.library.function!=null&&(d=t.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:i,inputs:u,outputs:l,weights:s,placeholders:o,signature:e,functions:d};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){let e=OT(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(n.inputParams=e.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),e.attrs!=null&&(n.attrParams=e.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=GT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=GT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=jT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=jT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=WT(t.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=WT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=qT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=qT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=UT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=UT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=YT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=YT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=HT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=HT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=XT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=XT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=KT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=KT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=VT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=VT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=tL(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=tL(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${t.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(t){let e=t.nodeDef,n=[],o=[],s={};e!=null&&(s=e.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let a=[],i=[];t.signature.inputArg.forEach(m=>{let[c]=qs(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:fw(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,a.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=qs(d),b=s[h];if(b.outputs!=null){let T=b.outputs.indexOf(g);if(T!==-1){let x=`${h}:${T}`;c.inputNames[f]=x}}c.inputs.push(b),b.children.push(c)})});let l=t.ret;t.signature.outputArg.forEach(m=>{let[c,d]=qs(l[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,i.push(f))});let p=this.mapArgsToSignature(t);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:p}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n),e),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return e!=null&&(n=e[n]),{name:n,dtype:t.type}}};function Ite(r){let t=$().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function rL(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):Ite(r);return t?e:e.toLowerCase()}function GT(r,t,e,n=!1){let o=r[t];return o!=null?rL(o.s,n):e}function UT(r,t,e){let n=r[t];return n?n.b:e}function WT(r,t,e){let n=r[t]||{},o=n.i!=null?n.i:n.f!=null?n.f:e;return typeof o=="number"?o:parseInt(o,10)}function fw(r){switch(typeof r=="string"&&(r=qA[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function tL(r,t,e){let n=r[t];return n&&n.func?n.func.name:e}function KT(r,t,e){let n=r[t];return n&&n.type?fw(n.type):e}function VT(r,t,e){let n=r[t];return n&&n.list&&n.list.type?n.list.type.map(o=>fw(o)):e}function nL(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function HT(r,t,e){let n=r[t];return n&&n.shape?nL(n.shape):e}function qT(r,t,e){let n=r[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):e}function jT(r,t,e,n=!1){let o=r[t];return o&&o.list&&o.list.s?o.list.s.map(s=>rL(s,n)):e}function XT(r,t,e){let n=r[t];return n&&n.list&&n.list.shape?n.list.shape.map(o=>nL(o)):e}function YT(r,t,e){let n=r[t];return n&&n.list&&n.list.b?n.list.b:e}var ZT=class{constructor(t,e,n){this.node=t;this.tensorMap=e;this.context=n;this.inputs=[];this.attrs={};this.inputs=t.inputNames.map(o=>this.getInput(o)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(t){return kr(t,this.tensorMap,this.context)}getAttr(t,e){let n=this.node.rawAttrs[t];if(n.tensor!=null)return kr(t,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return WT(this.node.rawAttrs,t,e);if(n.s!=null)return GT(this.node.rawAttrs,t,e);if(n.b!=null)return UT(this.node.rawAttrs,t,e);if(n.shape!=null)return HT(this.node.rawAttrs,t,e);if(n.type!=null)return KT(this.node.rawAttrs,t,e);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return qT(this.node.rawAttrs,t,e);if(n.list.s!=null)return jT(this.node.rawAttrs,t,e);if(n.list.shape!=null)return XT(this.node.rawAttrs,t,e);if(n.list.b!=null)return YT(this.node.rawAttrs,t,e);if(n.list.type!=null)return VT(this.node.rawAttrs,t,e)}return e}};var ct={};He(ct,{OP_SCOPE_SUFFIX:()=>Av,abs:()=>Gt,acos:()=>A2,acosh:()=>w2,add:()=>Y,addN:()=>N2,all:()=>Lb,any:()=>fh,argMax:()=>tp,argMin:()=>D2,asin:()=>F2,asinh:()=>R2,atan:()=>P2,atan2:()=>M2,atanh:()=>E2,avgPool:()=>oc,avgPool3d:()=>$b,basicLSTMCell:()=>$2,batchNorm:()=>np,batchNorm2d:()=>Bb,batchNorm3d:()=>Ob,batchNorm4d:()=>zb,batchToSpaceND:()=>sc,bincount:()=>Gb,booleanMaskAsync:()=>bZ,broadcastArgs:()=>O2,broadcastTo:()=>op,buffer:()=>xe,cast:()=>re,ceil:()=>z2,clipByValue:()=>Gr,clone:()=>cn,complex:()=>Rn,concat:()=>mt,concat1d:()=>Ub,concat2d:()=>Wb,concat3d:()=>Kb,concat4d:()=>Vb,conv1d:()=>Hb,conv2d:()=>es,conv2dTranspose:()=>qb,conv3d:()=>jb,conv3dTranspose:()=>Yb,cos:()=>ic,cosh:()=>Zb,cosineWindow:()=>Ih,cumprod:()=>hh,cumsum:()=>Qb,denseBincount:()=>G2,depthToSpace:()=>U2,depthwiseConv2d:()=>sp,diag:()=>W2,dilation2d:()=>K2,div:()=>ce,divNoNan:()=>V2,dot:()=>H2,dropout:()=>aA,einsum:()=>q2,elu:()=>ap,enclosingPowerOfTwo:()=>iA,equal:()=>Zr,erf:()=>j2,euclideanNorm:()=>Z2,exp:()=>br,expandDims:()=>Lr,expm1:()=>Q2,eye:()=>el,fft:()=>bc,fill:()=>Ms,floor:()=>ip,floorDiv:()=>Eb,fused:()=>mp,gather:()=>up,gatherND:()=>AZ,greater:()=>ir,greaterEqual:()=>Ls,ifft:()=>al,imag:()=>ep,image:()=>cp,inTopKAsync:()=>DZ,irfft:()=>yy,isFinite:()=>J2,isInf:()=>eF,isNaN:()=>tF,leakyRelu:()=>uc,less:()=>Jb,lessEqual:()=>_s,linalg:()=>pA,linspace:()=>rF,localResponseNormalization:()=>nF,log:()=>Ur,log1p:()=>pc,logSigmoid:()=>oF,logSoftmax:()=>ry,logSumExp:()=>ny,logicalAnd:()=>Jr,logicalNot:()=>lc,logicalOr:()=>oy,logicalXor:()=>sF,losses:()=>DQ,lowerBound:()=>aF,matMul:()=>Ve,max:()=>dn,maxPool:()=>mc,maxPool3d:()=>ay,maxPoolWithArgmax:()=>iF,maximum:()=>ts,mean:()=>$t,meshgrid:()=>uF,min:()=>bh,minimum:()=>pp,mirrorPad:()=>pF,mod:()=>lF,moments:()=>tl,movingAverage:()=>TZ,mul:()=>E,multiRNNCell:()=>mF,multinomial:()=>cF,neg:()=>Je,norm:()=>Jp,notEqual:()=>au,oneHot:()=>Qu,ones:()=>yr,onesLike:()=>_r,op:()=>w,outerProduct:()=>dF,pad:()=>jn,pad1d:()=>fF,pad2d:()=>hF,pad3d:()=>gF,pad4d:()=>bF,pool:()=>yF,pow:()=>qn,prelu:()=>dc,print:()=>Sb,prod:()=>TF,raggedGather:()=>xF,raggedTensorToTensor:()=>IF,rand:()=>CF,randomGamma:()=>OF,randomNormal:()=>ol,randomStandardNormal:()=>zF,randomUniform:()=>Ii,range:()=>lp,real:()=>ou,reciprocal:()=>GF,relu:()=>en,relu6:()=>my,reshape:()=>_,reverse:()=>Nr,reverse1d:()=>UF,reverse2d:()=>WF,reverse3d:()=>KF,reverse4d:()=>VF,rfft:()=>yc,round:()=>cy,rsqrt:()=>dy,scalar:()=>de,scatterND:()=>IZ,searchSorted:()=>yh,selu:()=>fy,separableConv2d:()=>hy,setdiff1dAsync:()=>HF,sigmoid:()=>Ln,sign:()=>qF,signal:()=>NQ,sin:()=>gy,sinh:()=>by,slice:()=>Be,slice1d:()=>fc,slice2d:()=>xh,slice3d:()=>hc,slice4d:()=>sl,softmax:()=>gc,softplus:()=>su,spaceToBatchND:()=>cc,sparse:()=>FQ,sparseToDense:()=>SZ,spectral:()=>wQ,split:()=>Dr,sqrt:()=>_t,square:()=>qe,squaredDifference:()=>Ty,squeeze:()=>$s,stack:()=>Tr,step:()=>Ci,stridedSlice:()=>jF,string:()=>RQ,sub:()=>le,sum:()=>he,tan:()=>XF,tanh:()=>rp,tensor:()=>Ar,tensor1d:()=>qt,tensor2d:()=>Ga,tensor3d:()=>Db,tensor4d:()=>YF,tensor5d:()=>ZF,tensor6d:()=>QF,tile:()=>Qr,topk:()=>JF,transpose:()=>ze,truncatedNormal:()=>Tc,unique:()=>eR,unsortedSegmentSum:()=>xy,unstack:()=>Wr,upperBound:()=>tR,variable:()=>Iy,where:()=>Ut,whereAsync:()=>ky,zeros:()=>It,zerosLike:()=>we});var oL=(r,t,e,n=ct)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(v("a",r,t,e),v("b",r,t,e))];case"AddN":return[n.addN(v("tensors",r,t,e))];case"FloorMod":case"Mod":return[n.mod(v("a",r,t,e),v("b",r,t,e))];case"Mul":return[n.mul(v("a",r,t,e),v("b",r,t,e))];case"RealDiv":case"Div":return[n.div(v("a",r,t,e),v("b",r,t,e))];case"DivNoNan":return[n.divNoNan(v("a",r,t,e),v("b",r,t,e))];case"FloorDiv":return[n.floorDiv(v("a",r,t,e),v("b",r,t,e))];case"Sub":return[n.sub(v("a",r,t,e),v("b",r,t,e))];case"Minimum":return[n.minimum(v("a",r,t,e),v("b",r,t,e))];case"Maximum":return[n.maximum(v("a",r,t,e),v("b",r,t,e))];case"Pow":return[n.pow(v("a",r,t,e),v("b",r,t,e))];case"SquaredDifference":return[n.squaredDifference(v("a",r,t,e),v("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var sL=(r,t,e,n=ct)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(v("x",r,t,e))];case"Acos":return[n.acos(v("x",r,t,e))];case"Acosh":return[n.acosh(v("x",r,t,e))];case"Asin":return[n.asin(v("x",r,t,e))];case"Asinh":return[n.asinh(v("x",r,t,e))];case"Atan":return[n.atan(v("x",r,t,e))];case"Atan2":return[n.atan2(v("x",r,t,e),v("y",r,t,e))];case"Atanh":return[n.atanh(v("x",r,t,e))];case"Ceil":return[n.ceil(v("x",r,t,e))];case"Complex":return[n.complex(v("real",r,t,e),v("imag",r,t,e))];case"Cos":return[n.cos(v("x",r,t,e))];case"Cosh":return[n.cosh(v("x",r,t,e))];case"Elu":return[n.elu(v("x",r,t,e))];case"Erf":return[n.erf(v("x",r,t,e))];case"Exp":return[n.exp(v("x",r,t,e))];case"Expm1":return[n.expm1(v("x",r,t,e))];case"Floor":return[n.floor(v("x",r,t,e))];case"Log":return[n.log(v("x",r,t,e))];case"Log1p":return[n.log1p(v("x",r,t,e))];case"Imag":return[n.imag(v("x",r,t,e))];case"Neg":return[n.neg(v("x",r,t,e))];case"Reciprocal":return[n.reciprocal(v("x",r,t,e))];case"Real":return[n.real(v("x",r,t,e))];case"Relu":return[n.relu(v("x",r,t,e))];case"Round":return[n.round(v("x",r,t,e))];case"Selu":return[n.selu(v("x",r,t,e))];case"Sigmoid":return[n.sigmoid(v("x",r,t,e))];case"Sin":return[n.sin(v("x",r,t,e))];case"Sign":return[n.sign(v("x",r,t,e))];case"Sinh":return[n.sinh(v("x",r,t,e))];case"Softplus":return[n.softplus(v("x",r,t,e))];case"Sqrt":return[n.sqrt(v("x",r,t,e))];case"Square":return[n.square(v("x",r,t,e))];case"Tanh":return[n.tanh(v("x",r,t,e))];case"Tan":return[n.tan(v("x",r,t,e))];case"ClipByValue":return[n.clipByValue(v("x",r,t,e),v("clipValueMin",r,t,e),v("clipValueMax",r,t,e))];case"Relu6":return[n.relu6(v("x",r,t,e))];case"Rsqrt":return[n.rsqrt(kr(r.inputNames[0],t,e))];case"Prod":return[n.prod(v("x",r,t,e),v("axes",r,t,e))];case"LeakyRelu":return[n.leakyRelu(v("x",r,t,e),v("alpha",r,t,e))];case"Prelu":return[n.prelu(v("x",r,t,e),v("alpha",r,t,e))];case"IsNan":return[n.isNaN(kr(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Zn(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){y.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=t[n];y.assert(o<0||s<0||o===s,()=>e+` Shapes ${r} and ${t} must match`)}}}function aL(r){return!(typeof r=="number"||r.some(t=>t<0))}function Wd(r,t,e){let n=QT(r,e),o=!aL(n);if(o&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&t.forEach(s=>{n=QT(s.shape,n)}),!aL(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function QT(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let n=0;n<r.length;++n){let o=r[n],s=t[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[n]=o>=0?o:s}return e}var JT=class{constructor(t,e,n,o,s,a,i){this.name=t;this.dtype=e;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=de(0),zt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Zn(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,zt(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((n,o)=>this.write(n,e[o]))}gather(t,e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let o=0;o<this.size();o++)t.push(o)}if(t.length===0)return Ar([],[0].concat(this.elementShape));let n=this.readMany(t);return Zn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Tr(n,0)}concat(t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return Ar([],[0].concat(this.elementShape));let e=[];for(let o=0;o<this.size();o++)e.push(o);let n=this.readMany(e);return Zn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),mt(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Wr(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0,o=t.map(u=>(n+=u,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:e.size/n,a=[];z(()=>{e=_(e,[1,n,s]);for(let u=0;u<t.length;++u){let l=u===0?0:o[u-1],p=[0,l,0],m=[1,t[u],s];a[u]=_(Be(e,p,m),this.elementShape)}return a});let i=[];for(let u=0;u<t.length;u++)i[u]=u;this.writeMany(i,a)}};var gu=class{constructor(t,e,n,o=-1){this.tensors=t;this.elementShape=e;this.elementDtype=n;t?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Zn(e,s.shape,"TensorList shape mismatch: "),zt(s)}),this.idTensor=de(0),this.maxNumElements=o,zt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new gu([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Zn(t,this.elementShape,"TensorList shape mismatch: ");let o=Wd(this.elementShape,this.tensors,t);return z(()=>{let s=this.tensors.map(a=>_(a,o));return Tr(s,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Wd(this.elementShape,this.tensors,t),o=this.tensors.pop();return o.kept=!1,Zn(o.shape,t,"TensorList shape mismatch: "),_(o,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Zn(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");zt(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new gu([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Zn(this.tensors[t].shape,e,"TensorList shape mismatch: ");let o=Wd(this.elementShape,this.tensors,e);return _(this.tensors[t],o)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Zn(this.elementShape,e.shape,"TensorList shape mismatch: "),zt(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Zn(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());let o=Wd(this.elementShape,this.tensors,n);return t.length===0?Ar([],[0].concat(o)):z(()=>{let s=t.map(a=>_(this.tensors[a],o));return Tr(s,0)})}concat(t,e){if(!!t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Zn(this.elementShape,e,"TensorList shape mismatch: ");let n=Wd(this.elementShape,this.tensors,e);return this.size()===0?Ar([],[0].concat(n)):z(()=>{let o=this.tensors.map(s=>_(s,n));return mt(o,0)})}};function iL(r,t,e){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let o=r.shape.slice(1);Zn(o,t,"TensorList shape mismatch: ");let s=Wr(r);return new gu(s,t,n)}function uL(r,t,e,n){return new gu([],r,t,n)}function pL(r,t,e,n){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let o=Math.max(...t);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new gu([],e,r.dtype,n),a=Wr(r,0);return t.forEach((i,u)=>{s.setItem(i,a[u])}),s}function lL(r,t,e){let n=0,o=t.map(p=>(n+=p,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=QT(s,e),i=n===0?0:r.size/n,u=z(()=>{let p=[];r=_(r,[1,n,i]);for(let m=0;m<t.length;++m){let c=m===0?0:o[m-1],d=[0,c,0],f=[1,t[m],i];p[m]=_(Be(r,d,f),a)}return r.dispose(),p}),l=new gu([],e,r.dtype,t.length);for(let p=0;p<u.length;p++)l.setItem(p,u[p]);return l}var mL=async(r,t,e)=>{switch(r.op){case"If":case"StatelessIf":{let n=v("thenBranch",r,t,e),o=v("elseBranch",r,t,e),s=v("cond",r,t,e),a=v("args",r,t,e);return(await s.data())[0]?e.functionMap[n].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap):e.functionMap[o].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let n=v("body",r,t,e),o=v("cond",r,t,e),s=v("args",r,t,e),a=await e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap),i=s.map(p=>p.id),u=await a[0].data();a.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&p.dispose()});let l=s;for(;u[0];){let p=l;l=await e.functionMap[n].executeFunctionAsync(l,e.tensorArrayMap,e.tensorListMap);let m=l.map(d=>d.id);p.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await e.functionMap[o].executeFunctionAsync(l,e.tensorArrayMap,e.tensorListMap);u=await c[0].data(),c.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return l}case"LoopCond":{let n=v("pred",r,t,e);return[Qa(n)]}case"Switch":{let n=v("pred",r,t,e),o=v("data",r,t,e);return o.kept||(o=Qa(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>kr(o,t,e)!==void 0);if(n){let o=kr(n,t,e);return[Qa(o)]}return}case"Enter":{let n=v("frameName",r,t,e),o=v("tensor",r,t,e);return e.enterFrame(n),[Qa(o)]}case"Exit":{let n=v("tensor",r,t,e);return e.exitFrame(),[Qa(n)]}case"NextIteration":{let n=v("tensor",r,t,e);return e.nextIteration(),[Qa(n)]}case"TensorArrayV3":{let n=v("size",r,t,e),o=v("dtype",r,t,e),s=v("elementShape",r,t,e),a=v("dynamicSize",r,t,e),i=v("clearAfterRead",r,t,e),u=v("identicalElementShapes",r,t,e),l=v("name",r,t,e),p=new JT(l,o,n,s,u,a,i);return e.addTensorArray(p),[p.idTensor,de(1)]}case"TensorArrayWriteV3":{let n=v("tensorArrayId",r,t,e),o=v("index",r,t,e),s=v("tensor",r,t,e),a=e.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=v("tensorArrayId",r,t,e),o=v("index",r,t,e);return[e.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=v("tensorArrayId",r,t,e),o=v("indices",r,t,e),s=v("dtype",r,t,e);return[e.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=v("tensorArrayId",r,t,e),o=v("indices",r,t,e),s=v("tensor",r,t,e),a=e.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=v("tensorArrayId",r,t,e),o=e.getTensorArray(n.id),s=v("dtype",r,t,e);return[o.concat(s)]}case"TensorArraySplitV3":{let n=v("tensorArrayId",r,t,e),o=v("tensor",r,t,e),s=v("lengths",r,t,e),a=e.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=v("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return[de(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=v("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=v("tensorListId",r,t,e),o=v("index",r,t,e),s=v("tensor",r,t,e),a=e.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=v("tensorListId",r,t,e),o=v("index",r,t,e),s=v("elementShape",r,t,e),a=v("elementDType",r,t,e);return[e.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=v("indices",r,t,e),o=v("tensor",r,t,e),s=v("elementShape",r,t,e),a=v("numElements",r,t,e),i=pL(o,n,s,a);return e.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=v("elementShape",r,t,e),o=v("elementDType",r,t,e),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=v(s,r,t,e),i=r.op==="TensorListReserve"?-1:a,u=uL(n,o,a,i);return e.addTensorList(u),[u.idTensor]}case"TensorListGather":{let n=v("tensorListId",r,t,e),o=v("indices",r,t,e),s=v("elementShape",r,t,e),a=v("elementDType",r,t,e);return[e.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=v("tensorListId",r,t,e),o=v("elementShape",r,t,e),s=v("elementDType",r,t,e),a=v("numElements",r,t,e);return[e.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=v("tensor",r,t,e),o=v("elementShape",r,t,e),s=v("elementDType",r,t,e),a=iL(n,o,s);return e.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=v("tensorListId",r,t,e),o=e.getTensorList(n.id),s=v("dtype",r,t,e),a=v("elementShape",r,t,e);return[o.concat(s,a)]}case"TensorListPushBack":{let n=v("tensorListId",r,t,e),o=v("tensor",r,t,e),s=e.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=v("tensorListId",r,t,e),o=v("elementShape",r,t,e),s=v("elementDType",r,t,e);return[e.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=v("tensor",r,t,e),o=v("elementShape",r,t,e),s=v("lengths",r,t,e),a=lL(n,s,o);return e.addTensorList(a),[a.idTensor]}case"TensorListLength":{let n=v("tensorListId",r,t,e),o=e.getTensorList(n.id);return[de(o.size(),"int32")]}case"TensorListResize":{let n=v("tensorListId",r,t,e),o=v("size",r,t,e),a=e.getTensorList(n.id).resize(o);return e.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function cL(r,t,e){let[n,o]=v("fusedOps",r,t,e),s=n==="biasadd",a=!s,i=o==="prelu",u=n==="fusedbatchnorm",l=v("numArgs",r,t,e);if(s){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=v("strides",r,t,e),m=zh(r,t,e),c=v("dataFormat",r,t,e).toUpperCase(),d=v("dilations",r,t,e),[f,h]=v("args",r,t,e);a&&(h=f,f=void 0);let g=v("leakyreluAlpha",r,t,e);return{stride:p,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var dL=(r,t,e,n=ct)=>{switch(r.op){case"Conv1D":{let o=v("stride",r,t,e),s=v("pad",r,t,e),a=v("dataFormat",r,t,e).toUpperCase(),i=v("dilation",r,t,e);return[n.conv1d(v("x",r,t,e),v("filter",r,t,e),o,s,a,i)]}case"Conv2D":{let o=v("strides",r,t,e),s=zh(r,t,e),a=v("dataFormat",r,t,e).toUpperCase(),i=v("dilations",r,t,e);return[n.conv2d(v("x",r,t,e),v("filter",r,t,e),[o[1],o[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:p,leakyreluAlpha:m}=cL(r,t,e);return[n.fused.conv2d({x:v("x",r,t,e),filter:v("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:p,preluActivationWeights:l,leakyreluAlpha:m})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:p,leakyreluAlpha:m}=cL(r,t,e);return[n.fused.depthwiseConv2d({x:v("x",r,t,e),filter:v("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:p,preluActivationWeights:l,leakyreluAlpha:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=v("outputShape",r,t,e),s=v("strides",r,t,e),a=zh(r,t,e);return[n.conv2dTranspose(v("x",r,t,e),v("filter",r,t,e),o,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=v("strides",r,t,e),s=zh(r,t,e),a=v("dilations",r,t,e),i=v("dataFormat",r,t,e).toUpperCase();return[n.depthwiseConv2d(v("input",r,t,e),v("filter",r,t,e),[o[1],o[2]],s,i,[a[1],a[2]])]}case"Conv3D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("dataFormat",r,t,e).toUpperCase(),i=v("dilations",r,t,e);return[n.conv3d(v("x",r,t,e),v("filter",r,t,e),[o[1],o[2],o[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.avgPool(v("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.maxPool(v("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e),i=v("includeBatchInIndex",r,t,e),{result:u,indexes:l}=n.maxPoolWithArgmax(v("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s,i);return[u,l]}case"AvgPool3D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.avgPool3d(v("x",r,t,e),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.maxPool3d(v("x",r,t,e),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("dilations",r,t,e),i=o[1],u=o[2],l=a[1],p=a[2];return[n.dilation2d(v("x",r,t,e),v("filter",r,t,e),[i,u],s,[l,p],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fL=(r,t,e,n=ct)=>{switch(r.op){case"Fill":{let o=v("shape",r,t,e),s=v("dtype",r,t,e),a=v("value",r,t,e);return[n.fill(o,a,s)]}case"LinSpace":{let o=v("start",r,t,e),s=v("stop",r,t,e),a=v("num",r,t,e);return[n.linspace(o,s,a)]}case"Multinomial":{let o=v("logits",r,t,e),s=v("numSamples",r,t,e),a=v("seed",r,t,e);return[n.multinomial(o,s,a)]}case"OneHot":{let o=v("indices",r,t,e),s=v("depth",r,t,e),a=v("onValue",r,t,e),i=v("offValue",r,t,e),u=v("dtype",r,t,e);return[n.oneHot(o,s,a,i,u)]}case"Ones":return[n.ones(v("shape",r,t,e),v("dtype",r,t,e))];case"OnesLike":return[n.onesLike(v("x",r,t,e))];case"RandomStandardNormal":return[n.randomStandardNormal(v("shape",r,t,e),v("dtype",r,t,e),v("seed",r,t,e))];case"RandomUniform":return[n.randomUniform(v("shape",r,t,e),v("minval",r,t,e),v("maxval",r,t,e),v("dtype",r,t,e))];case"Range":{let o=v("start",r,t,e),s=v("stop",r,t,e),a=v("step",r,t,e);return[n.range(o,s,a,v("dtype",r,t,e))]}case"TruncatedNormal":{let o=v("shape",r,t,e),s=v("mean",r,t,e),a=v("stdDev",r,t,e),i=v("seed",r,t,e);return[n.truncatedNormal(o,s,a,v("dtype",r,t,e),i)]}case"Zeros":return[n.zeros(v("shape",r,t,e),v("dtype",r,t,e))];case"ZerosLike":return[n.zerosLike(v("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function hw(r,t,e){let n=v("boxes",r,t,e),o=v("scores",r,t,e),s=v("maxOutputSize",r,t,e),a=v("iouThreshold",r,t,e),i=v("scoreThreshold",r,t,e),u=v("softNmsSigma",r,t,e);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}var hL=async(r,t,e,n,o=ct)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l,softNmsSigma:p}=hw(r,t,e),m=await o.image.nonMaxSuppressionWithScoreAsync(s,a,i,u,l,p);return[m.selectedIndices,m.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=hw(r,t,e),p=v("padToMaxOutputSize",r,t,e),m=await o.image.nonMaxSuppressionPaddedAsync(s,a,i,u,l,p);return[m.selectedIndices,m.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=hw(r,t,e);return[await o.image.nonMaxSuppressionAsync(s,a,i,u,l)]}case"Where":{let s=o.cast(v("condition",r,t,e),"bool"),a=[await o.whereAsync(s)];return s.dispose(),a}case"ListDiff":return o.setdiff1dAsync(v("x",r,t,e),v("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gL=(r,t,e,n=ct)=>{switch(r.op){case"LowerBound":{let o=v("sortedSequence",r,t,e),s=v("values",r,t,e);return[n.lowerBound(o,s)]}case"TopKV2":{let o=v("x",r,t,e),s=v("k",r,t,e),a=v("sorted",r,t,e),i=n.topk(o,s,a);return[i.values,i.indices]}case"UpperBound":{let o=v("sortedSequence",r,t,e),s=v("values",r,t,e);return[n.upperBound(o,s)]}case"Unique":{let o=v("x",r,t,e),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=v("x",r,t,e),s=v("axis",r,t,e),a=n.unique(o,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bL=(r,t,e,n=ct)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let o=v("default",r,t,e);return[kr(r.name,t,e)||o];case"Placeholder":return[kr(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let p=v("x",r,t,e);return[Qa(p)]}case"IdentityN":return v("x",r,t,e).map(p=>Qa(p));case"Snapshot":let s=v("x",r,t,e);return[Qa(s)];case"Shape":return[n.tensor1d(v("x",r,t,e).shape,"int32")];case"ShapeN":return v("x",r,t,e).map(p=>n.tensor1d(p.shape));case"Size":return[n.scalar(v("x",r,t,e).size,"int32")];case"Rank":return[n.scalar(v("x",r,t,e).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let a=v("x",r,t,e),i=v("data",r,t,e),u=v("message",r,t,e),l=v("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let p=0;p<i.length;p++)console.log(Array.prototype.slice.call(i[p].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var ex=class{constructor(t,e){this.keyDType=t;this.valueDType=e;this.handle=de(0),this.tensorMap=new Map,zt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return de(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),z(()=>{let o=Wr(e),s=n.length,a=o.length;y.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let u=n[i],l=o[i];zt(l),this.tensorMap.set(u,l)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return z(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,e);o.push(i)}return Tr(o)})}findWithDefault(t,e){let n=this.tensorMap.get(t);return n??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var yL=async(r,t,e,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=v("keyDType",r,t,e),s=v("valueDType",r,t,e),a=new ex(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=v("tableHandle",r,t,e,n),s=v("keys",r,t,e),a=v("values",r,t,e);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=v("tableHandle",r,t,e,n),s=v("keys",r,t,e),a=v("defaultValue",r,t,e);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=v("tableHandle",r,t,e,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var TL=(r,t,e,n=ct)=>{switch(r.op){case"ResizeBilinear":{let o=v("images",r,t,e),s=v("size",r,t,e),a=v("alignCorners",r,t,e),i=v("halfPixelCenters",r,t,e);return[n.image.resizeBilinear(o,[s[0],s[1]],a,i)]}case"ResizeNearestNeighbor":{let o=v("images",r,t,e),s=v("size",r,t,e),a=v("alignCorners",r,t,e),i=v("halfPixelCenters",r,t,e);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],a,i)]}case"CropAndResize":{let o=v("image",r,t,e),s=v("boxes",r,t,e),a=v("boxInd",r,t,e),i=v("cropSize",r,t,e),u=v("method",r,t,e),l=v("extrapolationValue",r,t,e);return[n.image.cropAndResize(o,s,a,i,u,l)]}case"ImageProjectiveTransformV3":{let o=v("images",r,t,e),s=v("transforms",r,t,e),a=v("outputShape",r,t,e),i=v("fillValue",r,t,e),u=v("interpolation",r,t,e),l=v("fillMode",r,t,e);return[n.image.transform(o,s,u.toLowerCase(),l.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xL=(r,t,e,n=ct)=>{switch(r.op){case"Equal":return[n.equal(v("a",r,t,e),v("b",r,t,e))];case"NotEqual":return[n.notEqual(v("a",r,t,e),v("b",r,t,e))];case"Greater":return[n.greater(v("a",r,t,e),v("b",r,t,e))];case"GreaterEqual":return[n.greaterEqual(v("a",r,t,e),v("b",r,t,e))];case"Less":return[n.less(v("a",r,t,e),v("b",r,t,e))];case"LessEqual":return[n.lessEqual(v("a",r,t,e),v("b",r,t,e))];case"LogicalAnd":return[n.logicalAnd(v("a",r,t,e),v("b",r,t,e))];case"LogicalNot":return[n.logicalNot(v("a",r,t,e))];case"LogicalOr":return[n.logicalOr(v("a",r,t,e),v("b",r,t,e))];case"Select":case"SelectV2":return[n.where(v("condition",r,t,e),v("a",r,t,e),v("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var IL=(r,t,e,n=ct)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(v("a",r,t,e),v("b",r,t,e),v("transposeA",r,t,e),v("transposeB",r,t,e))];case"Einsum":return[n.einsum(v("equation",r,t,e),...v("tensors",r,t,e))];case"Transpose":return[n.transpose(v("x",r,t,e),v("perm",r,t,e))];case"_FusedMatMul":let[o,s]=v("fusedOps",r,t,e),a=o==="biasadd",i=s==="prelu",u=v("numArgs",r,t,e),l=v("leakyreluAlpha",r,t,e);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,m]=v("args",r,t,e);return[n.fused.matMul({a:v("a",r,t,e),b:v("b",r,t,e),transposeA:v("transposeA",r,t,e),transposeB:v("transposeB",r,t,e),bias:p,activation:s,preluActivationWeights:m,leakyreluAlpha:l})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var CL=(r,t,e,n=ct)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(v("x",r,t,e),v("axis",r,t,e),v("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(v("x",r,t,e),v("mean",r,t,e),v("variance",r,t,e),v("offset",r,t,e),v("scale",r,t,e),v("epsilon",r,t,e))];case"FusedBatchNormV3":return[n.batchNorm(v("x",r,t,e),v("mean",r,t,e),v("variance",r,t,e),v("offset",r,t,e),v("scale",r,t,e),v("epsilon",r,t,e))];case"LRN":return[n.localResponseNormalization(v("x",r,t,e),v("radius",r,t,e),v("bias",r,t,e),v("alpha",r,t,e),v("beta",r,t,e))];case"Softmax":return[n.softmax(v("x",r,t,e))];case"LogSoftmax":return[n.logSoftmax(v("x",r,t,e))];case"SparseToDense":return[n.sparseToDense(v("sparseIndices",r,t,e),v("outputShape",r,t,e),v("sparseValues",r,t,e),v("defaultValue",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var kL=(r,t,e,n=ct)=>{switch(r.op){case"Max":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.max(v("x",r,t,e),i,u)]}case"Mean":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.mean(v("x",r,t,e),i,u)]}case"Min":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.min(v("x",r,t,e),i,u)]}case"Sum":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.sum(v("x",r,t,e),i,u)]}case"All":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.all(v("x",r,t,e),i,u)]}case"Any":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.any(v("x",r,t,e),i,u)]}case"ArgMax":{let i=v("axis",r,t,e);return[n.argMax(v("x",r,t,e),i)]}case"ArgMin":{let i=v("axis",r,t,e);return[n.argMin(v("x",r,t,e),i)]}case"Prod":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.prod(v("x",r,t,e),i,u)]}case"Cumprod":{let i=v("axis",r,t,e),u=v("exclusive",r,t,e),l=v("reverse",r,t,e);return[n.cumprod(v("x",r,t,e),i,u,l)]}case"Cumsum":{let i=v("axis",r,t,e),u=v("exclusive",r,t,e),l=v("reverse",r,t,e);return[n.cumsum(v("x",r,t,e),i,u,l)]}case"Bincount":let o=v("x",r,t,e),s=v("weights",r,t,e),a=v("size",r,t,e);return[n.bincount(o,s,a)];case"DenseBincount":{let i=v("x",r,t,e),u=v("weights",r,t,e),l=v("size",r,t,e),p=v("binaryOutput",r,t,e);return[n.denseBincount(i,u,l,p)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var SL=(r,t,e,n=ct)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=v("n",r,t,e),s=v("axis",r,t,e),a=v("tensors",r,t,e);return a=a.slice(0,o),[n.concat(a,s)]}case"Gather":{let o=v("x",r,t,e),s=v("indices",r,t,e);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=v("axis",r,t,e),s=v("batchDims",r,t,e),a=v("x",r,t,e),i=v("indices",r,t,e);return[n.gather(a,n.cast(i,"int32"),o,s)]}case"Reverse":{let o=v("dims",r,t,e),s=[];for(let i=0;i<o.length;i++)o[i]&&s.push(i);let a=v("x",r,t,e);return[n.reverse(a,s)]}case"ReverseV2":{let o=v("axis",r,t,e),s=v("x",r,t,e);return[n.reverse(s,o)]}case"Slice":{let o=v("begin",r,t,e),s=v("size",r,t,e);return[n.slice(v("x",r,t,e),o,s)]}case"StridedSlice":{let o=v("begin",r,t,e),s=v("end",r,t,e),a=v("strides",r,t,e),i=v("beginMask",r,t,e),u=v("endMask",r,t,e),l=v("ellipsisMask",r,t,e),p=v("newAxisMask",r,t,e),m=v("shrinkAxisMask",r,t,e),c=v("x",r,t,e);return[n.stridedSlice(c,o,s,a,i,u,l,p,m)]}case"Pack":return z(()=>{let o=v("axis",r,t,e),s=v("tensors",r,t,e),a=s[0].shape,i=n.squeeze(s[0]).shape,u=s.map(l=>{let p=y.arraysEqual(l.shape,a);if(!p&&!y.arraysEqual(n.squeeze(l).shape,i))throw new Error("the input tensors shape does not match");return p?l:n.reshape(l,a)});return[n.stack(u,o)]});case"Unpack":{let o=v("axis",r,t,e),s=v("tensor",r,t,e);return n.unstack(s,o)}case"Tile":{let o=v("reps",r,t,e);return[n.tile(v("x",r,t,e),o)]}case"Split":case"SplitV":{let o=v("axis",r,t,e),s=v("numOrSizeSplits",r,t,e),a=v("x",r,t,e);return n.split(a,s,o)}case"ScatterNd":{let o=v("indices",r,t,e),s=v("values",r,t,e),a=v("shape",r,t,e);return[n.scatterND(o,s,a)]}case"GatherNd":{let o=v("x",r,t,e),s=v("indices",r,t,e);return[n.gatherND(o,s)]}case"SparseToDense":{let o=v("sparseIndices",r,t,e),s=v("outputShape",r,t,e),a=v("sparseValues",r,t,e),i=v("defaultValue",r,t,e);return[n.sparseToDense(o,a,s,a.dtype===i.dtype?i:n.cast(i,a.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var vL=(r,t,e,n=ct)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:a,reverseIndexMap:i}=n.sparse.sparseFillEmptyRows(v("indices",r,t,e),v("values",r,t,e),v("denseShape",r,t,e),v("defaultValue",r,t,e));return[o,s,a,i]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(v("inputIndices",r,t,e),v("inputShape",r,t,e),v("newShape",r,t,e));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(v("data",r,t,e),v("indices",r,t,e),v("segmentIds",r,t,e))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(v("data",r,t,e),v("indices",r,t,e),v("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var AL=(r,t,e,n=ct)=>{switch(r.op){case"FFT":return[n.fft(v("x",r,t,e))];case"IFFT":return[n.ifft(v("x",r,t,e))];case"RFFT":return[n.rfft(v("x",r,t,e))];case"IRFFT":return[n.irfft(v("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var wL=(r,t,e,n=ct)=>{switch(r.op){case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(v("data",r,t,e),v("dataSplits",r,t,e),v("separator",r,t,e),v("nGramWidths",r,t,e),v("leftPad",r,t,e),v("rightPad",r,t,e),v("padWidth",r,t,e),v("preserveShortSequences",r,t,e));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:a}=n.string.stringSplit(v("input",r,t,e),v("delimiter",r,t,e),v("skipEmpty",r,t,e));return[o,s,a]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(v("input",r,t,e),v("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var NL=(r,t,e,n=ct)=>{switch(r.op){case"Cast":return[n.cast(v("x",r,t,e),v("dtype",r,t,e))];case"ExpandDims":{let o=v("axis",r,t,e);return[n.expandDims(v("x",r,t,e),o)]}case"Squeeze":{let o=v("axis",r,t,e);return[n.squeeze(v("x",r,t,e),o)]}case"Reshape":return[n.reshape(v("x",r,t,e),v("shape",r,t,e))];case"MirrorPad":return[n.mirrorPad(v("x",r,t,e),v("padding",r,t,e),v("mode",r,t,e))];case"PadV2":case"Pad":return[n.pad(v("x",r,t,e),v("padding",r,t,e),v("constantValue",r,t,e))];case"SpaceToBatchND":{let o=v("blockShape",r,t,e),s=v("paddings",r,t,e);return[n.spaceToBatchND(v("x",r,t,e),o,s)]}case"BatchToSpaceND":{let o=v("blockShape",r,t,e),s=v("crops",r,t,e);return[n.batchToSpaceND(v("x",r,t,e),o,s)]}case"DepthToSpace":{let o=v("blockSize",r,t,e),s=v("dataFormat",r,t,e).toUpperCase();return[n.depthToSpace(v("x",r,t,e),o,s)]}case"BroadcastTo":return[n.broadcastTo(v("x",r,t,e),v("shape",r,t,e))];case"BroadcastArgs":return[n.broadcastArgs(v("s0",r,t,e),v("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function gw(r,t,e,n,o=z){let s=((a,i,u)=>{switch(a.category){case"arithmetic":return o(()=>oL(a,i,u));case"basic_math":return o(()=>sL(a,i,u));case"control":return mL(a,i,u);case"convolution":return o(()=>dL(a,i,u));case"creation":return o(()=>fL(a,i,u));case"dynamic":return hL(a,i,u);case"evaluation":return o(()=>gL(a,i,u));case"image":return o(()=>TL(a,i,u));case"graph":return o(()=>bL(a,i,u));case"logical":return o(()=>xL(a,i,u));case"matrices":return o(()=>IL(a,i,u));case"normalization":return o(()=>CL(a,i,u));case"reduction":return o(()=>kL(a,i,u));case"slice_join":return o(()=>SL(a,i,u));case"sparse":return o(()=>vL(a,i,u));case"spectral":return o(()=>AL(a,i,u));case"string":return o(()=>wL(a,i,u));case"transformation":return o(()=>NL(a,i,u));case"hash_table":return yL(a,i,u,n);case"custom":let l=OT(a.op);if(l&&l.customExecutor)return l.customExecutor(new ZT(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return y.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var Uh=class{constructor(t={},e={},n={},o={}){this.weightMap=t;this.tensorArrayMap=e;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function bw(r,t,e,n){let o=new Set,s=[],a=null,i=null,u=new Set,l=Object.keys(r).map(c=>In(c)[0]),p=[];n!=null&&(p=n.map(c=>In(c.name)[0]));let m=[...t];for(;m.length>0;){let c=m.pop();if((yw(c)||Kte(c)||Vte(c))&&a==null&&(a=c,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),e[c.name]==null&&l.indexOf(c.name)===-1&&p.indexOf(c.name)===-1){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{u.has(d.name)||(u.add(d.name),m.push(d))})}}return{inputs:r,outputs:t,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function DL(r,t,e){let{usedNodes:n,inputs:o}=e,s=[],a=Object.keys(o).map(p=>In(p)[0]).map(p=>r.nodes[p]),i=r.initNodes;a.forEach(p=>{n.has(p.name)&&s.push(p)}),r.weights.forEach(p=>{n.has(p.name)&&s.push(p)}),i?.forEach(p=>{n.has(p.name)&&s.push(p)});let u=new Set,l=[];for(;s.length>0;){let p=s.pop();u.add(p.name),t[p.name]||l.push(p),p.children.forEach(m=>{!u.has(m.name)&&n.has(m.name)&&m.inputs.every(c=>u.has(c.name))&&s.push(m)})}return l}var Gte=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Ute=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Wte=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function yw(r){return Gte.indexOf(r.op)>=0}function Kte(r){return Ute.indexOf(r.op)>=0}function Vte(r){return Wte.indexOf(r.op)>=0}var El=class{constructor(t,e){this.graph=t;this.parent=e;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new El(t.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(n=>t[n].map(o=>o.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){let n=t.map(s=>s.name).sort(),o=e.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(t,e){let n=bw(t,e,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=e.map(l=>l.name),u=Object.keys(t);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return DL(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);let n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let o=n.map(m=>this.graph.nodes[In(m)[0]]),s=e.map(m=>In(m)[0]),a=s.map(m=>this.graph.nodes[m]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),u=this.compiledMap.get(i);u==null&&(u=this.compile(t,a),this.compiledMap.set(i,u));let l={},p={};return z(()=>{let m=new Uh(this.weightMap,l,p,this.functionExecutorMap),c={...this.weightMap};Object.keys(t).forEach(h=>{let[g,b]=In(h),T=[];T[b]=t[h],c[g]=T});let d=this.getFrozenTensorIds(c),f={};for(let h=0;h<u.length;h++){let g=u[h];if(!c[g.name]){let b=gw(g,c,m,this._resourceManager);if(y.isPromise(b))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);c[g.name]=b,this.checkTensorForDisposal(g.name,g,c,m,d,s,f)}}return this.parent==null&&m.dispose(d),e.map(h=>kr(h,c,m))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(n=>t[n]).map(n=>n.map(o=>o.id)));return new Set(e)}checkTensorForDisposal(t,e,n,o,s,a,i){e.category==="control"||a.indexOf(t)!==-1||(n[t].forEach(u=>{u!=null&&(i[u.id]=(i[u.id]||0)+e.children.length)}),e.inputs.forEach(u=>{if(u.category!=="control"){let l=eL(u.name,n,o);l?.forEach(p=>{if(p&&!p.kept&&!s.has(p.id)){let m=i[p.id];if(m===1){if(!this.keepTensorForDebug)p.dispose();else{let[c,d]=qs(e.name,o);this.intermediateTensors[c]?this.intermediateTensors[c][d]=p:(this.intermediateTensors[c]=[],this.intermediateTensors[c][d]=p)}delete i[p.id]}else m!=null&&i[p.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(e=>e.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let t in this.intermediateTensors)this.intermediateTensors[t].forEach(e=>e.dispose()),delete this.intermediateTensors[t]}async _executeAsync(t,e,n=!1,o={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=$().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){console.warn(p.message)}this.resetIntermediateTensors();let a=new Uh(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,a,e,n);let i=e.map(p=>kr(p,this.tensorsMap,a)),u=i.map(p=>p.id),l=Object.keys(t).map(p=>t[p].id);return this.keepIds=new Set([...u,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(t,e,n){let o=t.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,o){let s=Object.keys(t),a=s.map(x=>this.graph.nodes[In(x)[0]]),i=n.map(x=>In(x)[0]),u=i.map(x=>this.graph.nodes[x]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:m,syncInputs:c}=bw(t,u,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:e.currentContext})),f={...this.weightMap};Object.keys(t).forEach(x=>{let[I,k]=In(x),A=[];A[k]=t[x],f[I]=A});let h={},g=this.getFrozenTensorIds(f),b={};for(;d.length>0;){let x=this.processStack(a,d,e,f,b,g,i,h,l);await Promise.all(x)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=u.filter(x=>!yw(x)&&!kr(x.name,f,e)).map(x=>x.name);if(T.length>0){let x="";throw m!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${x}`)}return f}processStack(t,e,n,o,s,a,i,u,l){let p=[];for(;e.length>0;){let m=e.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&v("isConstant",m.node,o,n)&&([c]=qs(m.node.name,n)),o[m.node.name]==null){let d=gw(m.node,o,n,this._resourceManager);c||([c]=qs(m.node.name,n));let f=n.currentContext;y.isPromise(d)?p.push(d.then(h=>(o[c]=h,n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,e,n,o,s,l),h))):(o[c]=d,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,e,n,o,s,l))}else this.processChildNodes(m.node,e,n,o,s,l)}return p}processChildNodes(t,e,n,o,s,a){t.children.forEach(i=>{let[u]=qs(i.name,n);s[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!kr(l,o,n))&&(s[u]=!0,e.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!kr(l,o,n))&&(s[u]=!0,e.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let n=t[e],[o]=In(e),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((u,l)=>a[l]===-1||a[l]===u);y.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){let e={};for(let n in t)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];e[o.name]=t[n]}else e[n]=t[n];return e}checkInputs(t){let e=Object.keys(t).filter(n=>{let[o]=In(n);return this.graph.nodes[o]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[e]!=null?this._signature.outputs[e].name:e,{})}checkOutputs(t){t.forEach(e=>{let[n]=In(e);if(!this.graph.nodes[n])throw new Error(`The output '${e}' is not found in the graph`)})}};var tx=class{constructor(t={},e={}){this.hashTableNameToHandle=t;this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var Hte="?tfjs-format=file",qte="model.json",Wh=class{constructor(t,e={},n=Pn){this.modelUrl=t;this.loadOptions=e;this.version="n/a";this.io=n,e==null&&(this.loadOptions={}),this.resourceManager=new tx}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return y.isPromise(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;let e=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(n=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;let o=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new El(Gh.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let s=Gh.Instance.transformGraph(t.modelInitializer);this.initializer=new El(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if(typeof t=="string"){let n=this.io.getSaveHandlers(t);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${t}'`);t=n[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){let n=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){let o=n instanceof Ke?[n]:n,s={};return o.forEach((a,i)=>s[this.structuredOutputKeys[i]]=a),s}return n}normalizeInputs(t){if(!(t instanceof Ke)&&!Array.isArray(t))return t;if(t=Array.isArray(t)?t:[t],t.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,o)=>(e[n]=t[o],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function jte(r,t={},e=Pn){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=Yte(r));let n=new Wh(r,t,e);return await n.load(),n}function Xte(r){if(r==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!r.load)throw new Error(`modelUrl IO Handler ${r} has no load function`);let t=new Wh(r);return t.load(),t}function Yte(r){return r.endsWith("/")||(r=r+"/"),`${r}${qte}${Hte}`}var Zte="0.0.0";var YL={};He(YL,{CSVDataset:()=>Hd,Dataset:()=>Ja,FileDataSource:()=>Zd,TextLineDataset:()=>Vd,URLDataSource:()=>Qd,array:()=>OL,csv:()=>KL,func:()=>VL,generator:()=>HL,microphone:()=>jL,version_data:()=>XL,webcam:()=>qL,zip:()=>zL});var BL=hm(Th());var LL=hm(Th());function FL(r,t){return rx(r,t)}function rx(r,t,e=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(e.has(r))return e.get(r);let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(Ap(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],u=rx(i,t,e,n);s[a]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return e.set(r,o.value),o.value}function RL(r,t=xw){return PL(r,t)}function PL(r,t,e=new Set){let n=r[0];if(e.has(n))throw new Error("Circular references are not supported.");let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(Ap(n)){let s=Array.isArray(n)?[]:{};e.add(n);for(let a in n){let i=r.map(l=>l[a]),u=PL(i,t,e);s[a]=u}return e.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function xw(r){return r===null?null:Ap(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function nx(r,t){let e=new Map;rx(r,t,e);for(let o of Array.from(e.keys())){let s=e.get(o);if(y.isPromise(s)){let a=await s;e.set(o,a)}}return rx(r,t,e)}function Ap(r){let t=!1;if($().get("IS_BROWSER"))t=r instanceof TextDecoder;else{let{StringDecoder:e}=Tw();t=r instanceof e}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Ke)&&!(r instanceof Promise)&&!t)}function ML(r){return r==null||Qte(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Ke||y.isTypedArray(r)}function Qte(r){return r===null||typeof r!="object"&&typeof r!="function"}function EL(r){return FL(r,Jte)}function Jte(r){return r instanceof Ke?{value:r.clone(),recurse:!1}:Ap(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Kd=class{constructor(t){this.capacity=t;this.begin=0;this.end=0;if(t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}};var Iw=class extends Kd{constructor(){super(Iw.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,e=new Array(t),n=this.length();for(let o=0;o<n;o++)e[o]=this.get(this.wrap(this.begin+o));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},Kh=Iw;Kh.INITIAL_CAPACITY=32;function Ew(r){return new Cw(r)}function Vh(r){return new kw(r)}function _L(r,t){return new sx(r,t)}function $L(r,t=Lw.FAIL){return new Pw(r,t)}var nr=class{async toArray(){let t=[],e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){let t=this.prefetch(100),e=[],n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Fw(this,t)}filter(t){return new Nw(this,t)}map(t){return new Dw(this,t)}mapAsync(t){return new ox(this,t)}serialMapAsync(t){return new ox(this,t).serial()}flatmap(t){return new Rw(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new ww(this,t,e)}columnMajorBatch(t,e=!0,n=xw){return this.rowMajorBatch(t,e).map(s=>RL(s,n))}concatenate(t,e){return new sx(Ew([this,t]),e)}take(t){return t<0||t==null?this:new Aw(this,t)}skip(t){return t<0||t==null?this:new vw(this,t)}prefetch(t){return new ax(this,t)}shuffle(t,e){return new Mw(this,t,e)}serial(){return new Sw(this)}},Cw=class extends nr{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:EL(e),done:!1}}},kw=class extends nr{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},Sw=class extends nr{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},vw=class extends nr{constructor(e,n){super();this.upstream=e;this.maxCount=n;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Fe(e.value)}return this.upstream.next()}},Aw=class extends nr{constructor(e,n){super();this.upstream=e;this.maxCount=n;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},ww=class extends nr{constructor(e,n,o=!0){super();this.upstream=e;this.batchSize=n;this.enableSmallLastBatch=o;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let n=await this.upstream.next();if(n.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(n.value)}return{value:e,done:!1}}},Nw=class extends nr{constructor(e,n){super();this.upstream=e;this.predicate=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Fe(e.value)}}},Dw=class extends nr{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let n=Ps.getTensorsInContainer(e.value),o=this.transform(e.value),s=Ps.getTensorsInContainer(o);for(let a of n)Ps.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},Fw=class extends nr{constructor(e,n){super();this.upstream=e;this.handler=n;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},ox=class extends nr{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let n=Ps.getTensorsInContainer(e.value),o=await this.transform(e.value),s=Ps.getTensorsInContainer(o);for(let a of n)Ps.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},Ll=class extends nr{constructor(){super();this.outputQueue=new Kh,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},Rw=class extends Ll{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let n=Ps.getTensorsInContainer(e.value),o=this.transform(e.value),s=Ps.getTensorsInContainer(o);this.outputQueue.pushAll(o);for(let a of n)Ps.isTensorInList(a,s)||a.dispose();return!0}},sx=class extends nr{constructor(e,n){super();this.baseErrorHandler=n;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let o=await this.moreIterators.next();if(o.done)return{value:null,done:!0};this.iterator=o.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let n=await this.iterator.next();return n.done?(this.iterator=null,this.readFromChain(e)):n}},Lw=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))(Lw||{}),Pw=class extends nr{constructor(e,n=0){super();this.iterators=e;this.mismatchMode=n;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let n=0,o=0;function s(i){return i instanceof nr?{value:i.next().then(l=>(n++,l.done&&o++,l.value)),recurse:!1}:{value:null,recurse:!0}}let a=await nx(this.iterators,s);if(n===o)return{value:null,done:!0};if(o>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},ax=class extends nr{constructor(e,n){super();this.upstream=e;this.bufferSize=n;this.buffer=new Kd(n)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},Mw=class extends ax{constructor(e,n,o){super(e,n);this.upstream=e;this.windowSize=n;this.upstreamExhausted=!1;this.random=LL.alea(o||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),n=await this.buffer.shuffleExcise(e);if(n.done)this.upstreamExhausted=!0;else return this.refill(),n}return{value:null,done:!0}}};var Ja=class{constructor(){this.size=null}batch(t,e=!0){let n=this;y.assert(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let o;return this.size===1/0||this.size==null?o=this.size:e?o=Math.ceil(this.size/t):o=Math.floor(this.size/t),Bn(async()=>(await n.iterator()).columnMajorBatch(t,e,ere),o)}concatenate(t){let e=this,n;return this.size===1/0||t.size===1/0?n=1/0:this.size!=null&&t.size!=null?n=this.size+t.size:n=null,Bn(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){let e=this,n;return this.size===1/0?n=1/0:n=null,Bn(async()=>(await e.iterator()).filter(o=>z(()=>t(o))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){let e=this;return Bn(async()=>(await e.iterator()).map(n=>z(()=>t(n))),this.size)}mapAsync(t){let e=this;return Bn(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return Bn(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){let e=this,n;return this.size!=null&&t>0?n=this.size*t:t===0?n=0:this.size!=null&&(t===void 0||t<0)?n=1/0:n=null,Bn(async()=>{let o=Vh(async()=>({value:await e.iterator(),done:!1}));return _L(o.take(t))},n)}skip(t){let e=this,n;return this.size!=null&&t>=0&&this.size>=t?n=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?n=0:n=null,Bn(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=BL.alea(e||y.now().toString());return Bn(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(t,a.toString())},this.size)}take(t){let e=this,n;return this.size!=null&&this.size>t?n=t:this.size!=null&&this.size<=t?n=this.size:n=null,Bn(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ja.MAX_BUFFER_SIZE=1e4;function Bn(r,t=null){return new class extends Ja{constructor(){super(...arguments);this.size=t}async iterator(){return r()}}}function OL(r){return Bn(async()=>Ew(r),r.length)}function zL(r){if(!Ap(r))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(r))for(let e=0;e<r.length;e++)t=t==null?r[e].size:Math.min(t,r[e].size);else if(r instanceof Object)for(let e in r)t=t==null?r[e].size:Math.min(t,r[e].size);return Bn(async()=>{let e=await nx(r,n=>{if(n instanceof Ja)return{value:n.iterator(),recurse:!1};if(Ap(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return $L(e,1)},t)}function ere(r){if(r===null)return null;let t=r[0];return ML(t)?{value:tre(r),recurse:!1}:{value:null,recurse:!0}}function tre(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Ke?Tr(r):Ar(r)}var Vd=class extends Ja{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}};var ix='"',Hh=Symbol("out"),GL=Symbol("field"),ux=Symbol("quote"),_w=Symbol("quoteafterquote"),UL=Symbol("quoteinquote"),Hd=class extends Ja{constructor(e,n){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new Vd(e),n||(n={}),this.hasHeader=n.hasHeader!==!1,this.fullColumnNames=n.columnNames,this.columnConfigs=n.columnConfigs,this.configuredColumnsOnly=n.configuredColumnsOnly,n.delimWhitespace?(y.assert(n.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=n.delimiter?n.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&y.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let n=this.fullColumnNames.reduce((s,a)=>(s[a]=s[a]+1||1,s),{}),o=Object.keys(n).filter(s=>n[s]>1);if(y.assert(o.length===0,()=>"Duplicate column names found: "+o.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let n=await(await this.base.iterator()).next();if(n.done)throw new Error("No data was found for CSV parsing.");let o=n.value;return this.parseRow(o,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(n=>this.makeDataElement(n))}makeDataElement(e){let n=this.parseRow(e),o={},s={};for(let a=0;a<this.fullColumnNames.length;a++){let i=this.fullColumnNames[a],u=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!u)){let l=n[a],p=null;if(l==="")if(u&&u.default!==void 0)p=u.default;else{if(u&&(u.required||u.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);p=void 0}else{let m=Number(l);if(isNaN(m))u&&u.dtype==="bool"?p=this.getBoolean(l):p=l;else if(!u||!u.dtype)p=m;else switch(u.dtype){case"float32":p=m;break;case"int32":p=Math.floor(m);break;case"bool":p=this.getBoolean(l);break;default:p=m}}u&&u.isLabel?s[i]=p:o[i]=p}}return Object.keys(s).length===0?o:{xs:o,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,n=!0){let o=[],s=0,a=e.length,i=Hh;for(let u=0;u<a;u++)switch(i){case Hh:switch(e.charAt(u)){case ix:s=u+1,i=ux;break;case this.delimiter:if(s=u+1,this.delimiter===" "&&this.delimWhitespace)break;o.push(""),i=Hh;break;default:i=GL,s=u;break}break;case GL:switch(e.charAt(u)){case this.delimiter:o.push(e.substring(s,u)),i=Hh,s=u+1;break;default:}break;case ux:switch(e.charAt(u)){case ix:i=_w;break;default:}break;case _w:switch(e.charAt(u)){case this.delimiter:o.push(e.substring(s,u-1)),i=Hh,s=u+1;break;case ix:i=ux;break;default:i=UL;break}break;case UL:switch(e.charAt(u)){case ix:i=ux;break;default:}break;default:}if(i===_w?o.push(e.substring(s,a-1)):o.push(e.substring(s)),n&&o.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${o}`);return o}};var qd=class extends nr{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!$().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new qd(e);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(o){throw new Error(`Error thrown while initializing video stream: ${o.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,n,o=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(o.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(o.timeDataQueue);n=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],n=[],o=0;return new Promise(s=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:n}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++o===this.numFrames&&(clearInterval(a),s({freqDataQueue:e,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let n=e[0].length,o=new Float32Array(e.length*n);return e.forEach((s,a)=>o.set(s,a*n)),o}getTensorFromAudioDataArray(e,n){let o=new Float32Array(y.sizeFromShape(n));return o.set(e,o.length-e.length),Ar(o,n)}};var jd=class extends nr{constructor(e,n){super();this.webcamVideoElement=e;this.webcamConfig=n;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=qt([0],"int32"),this.webcamConfig.centerCrop){let o=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-o)/2,i=(1-s)/2,u=a+o,l=s+i;this.cropBox=Ga([i,a,l,u],[1,4])}else this.cropBox=Ga([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,n={}){if(!$().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=n.resizeWidth,e.height=n.resizeHeight}let o=new jd(e,n);return await o.start(),o}async start(){this.webcamConfig.facingMode&&y.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Fb.fromPixels(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return z(()=>{let n=Lr(re(e,"float32"),0),o;o=cp.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=o.shape;return _(o,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(n=>n.stop());try{this.webcamVideoElement.srcObject=null}catch(n){console.log(n),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Xd=class{};var qh=class extends nr{split(t){return new $w(this,t)}},$w=class extends qh{constructor(e,n){super();this.upstream=e;this.impl=new Bw(e,n)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Bw=class extends Ll{constructor(e,n){super();this.upstream=e;this.separator=n;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let n=e.value.split(this.separator);n[0]=this.carryover+n[0];for(let o of n.slice(0,-1))this.outputQueue.push(o);return this.carryover=n[n.length-1],!0}};var px=class extends nr{decodeUTF8(){return new Ow(this)}},Ow=class extends qh{constructor(e){super();this.upstream=e;this.impl=new zw(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},zw=class extends Ll{constructor(e){super();this.upstream=e;if($().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:n}=Tw();this.decoder=new n("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),n;if(e.done)return!1;n=e.value;let o;return $().get("IS_BROWSER")?o=this.decoder.decode(n,{stream:!0}):o=this.decoder.write(Buffer.from(n.buffer)),this.outputQueue.push(o),!0}};var Yd=class extends px{constructor(e,n={}){super();this.file=e;this.options=n;y.assert(e instanceof Uint8Array||($().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=n.offset||0,this.chunkSize=n.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((n,o)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)n(new Uint8Array(this.file.slice(this.offset,s)));else{let a=new FileReader;a.onload=u=>{let l=a.result;if(l instanceof ArrayBuffer&&(l=new Uint8Array(l)),!(l instanceof Uint8Array))return o(new TypeError("FileReader returned unknown type."));n(l)},a.onabort=u=>o(new Error("Aborted")),a.onerror=u=>o(new Error(u.type));let i=this.file.slice(this.offset,s);a.readAsArrayBuffer(i)}this.offset=s}),done:!1}}};async function WL(r,t={},e){let n,o;typeof r=="string"?n=r:(n=r.url,o=rre(r));let s=await(e||y.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new Yd(a,t)}else throw new Error(s.statusText)}var rre=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function lx(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var Zd=class extends Xd{constructor(e,n={}){super();this.input=e;this.options=n}async iterator(){if(lx(this.input)&&$().get("IS_NODE")){let e=jh();this.input=e.readFileSync(this.input.slice(7))}return new Yd(this.input,this.options)}};var Qd=class extends Xd{constructor(e,n={}){super();this.url=e;this.fileOptions=n}async iterator(){return lx(this.url)?new Zd(this.url,this.fileOptions).iterator():WL(this.url,this.fileOptions)}};function KL(r,t={}){return new Hd(new Qd(r),t)}function VL(r){let t=Vh(r);return Bn(async()=>t)}function HL(r){return Bn(async()=>{let t=await r();return Vh(()=>t.next())})}async function qL(r,t){return jd.create(r,t)}async function jL(r){return qd.create(r)}var XL="0.0.0";function te(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var nre=xr.whereImpl,Gw=class extends no{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new ia(this,Mn())}nextDataId(){return Gw.nextDataId++}write(e,n,o){this.firstUse&&(this.firstUse=!1,$().get("IS_NODE")&&C.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:o,refCount:1}),s}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let a=o.map(i=>y.encodeString(i));s=this.write(a,e,n)}else s=this.write(o,e,n);return{dataId:s,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){let n=this.data.get(e);n.refCount--}}move(e,n,o,s,a){this.data.set(e,{values:n,dtype:s,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:n,complexTensorInfos:o}=this.data.get(e);if(n==="complex64"){let s=this.readSync(o.real.dataId),a=this.readSync(o.imag.dataId);return C.mergeRealAndImagArrays(s,a)}return this.data.get(e).values}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return xe(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,n)}makeOutput(e,n,o){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(n,o,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let n=y.now();return e(),{kernelMs:y.now()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){te([e],"where");let n=this.readSync(e.dataId);return nre(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Jd=Gw;Jd.nextDataId=0;var af={};He(af,{addImpl:()=>Kw,bincountImpl:()=>rf,bincountReduceImpl:()=>mx,castImpl:()=>Ww,ceilImpl:()=>Vw,concatImpl:()=>_l,equalImpl:()=>Hw,expImpl:()=>jw,expm1Impl:()=>Yw,floorImpl:()=>Zw,gatherNdImpl:()=>cx,gatherV2Impl:()=>dx,greaterEqualImpl:()=>Jw,greaterImpl:()=>Qw,lessEqualImpl:()=>tN,lessImpl:()=>eN,linSpaceImpl:()=>fx,logImpl:()=>rN,maxImpl:()=>hx,maximumImpl:()=>nN,minimumImpl:()=>oN,multiplyImpl:()=>Xh,negImpl:()=>sN,notEqualImpl:()=>aN,prodImpl:()=>iN,raggedGatherImpl:()=>gx,raggedTensorToTensorImpl:()=>bx,rangeImpl:()=>Bl,rsqrtImpl:()=>uN,scatterImpl:()=>bu,sigmoidImpl:()=>S_,simpleAbsImpl:()=>Uw,sliceImpl:()=>Ol,sparseFillEmptyRowsImpl:()=>yx,sparseReshapeImpl:()=>Tx,sparseSegmentReductionImpl:()=>sf,sqrtImpl:()=>w_,squaredDifferenceImpl:()=>lN,stridedSliceImpl:()=>xx,stringNGramsImpl:()=>zl,stringSplitImpl:()=>Gl,stringToHashBucketFastImpl:()=>Ul,subImpl:()=>cN,tileImpl:()=>Ix,topKImpl:()=>Cx,transposeImpl:()=>nf,uniqueImpl:()=>kx});function Uw(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}var ore=r=>{let{x:t}=r.inputs,e=r.backend;te(t,"abs");let n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId).values;return n=Uw(o),e.makeOutput(n,t.shape,t.dtype)},ZL={kernelName:ms,backendName:"cpu",kernelFunc:ore};function ot(r){return(t,e,n,o,s)=>{let a=C.assertAndGetBroadcastShape(t,e),i=a.length,u=y.computeStrides(a),l=y.sizeFromShape(a),p=y.getTypedArrayFromDType(s,l),m=t.length,c=e.length,d=y.computeStrides(t),f=y.computeStrides(e),h=C.getBroadcastDims(t,a),g=C.getBroadcastDims(e,a);if(h.length+g.length===0)for(let b=0;b<p.length;++b)p[b]=r(n[b%n.length],o[b%o.length]);else for(let b=0;b<p.length;++b){let T=y.indexToLoc(b,i,u),x=T.slice(-m);h.forEach(F=>x[F]=0);let I=y.locToIndex(x,m,d),k=T.slice(-c);g.forEach(F=>k[F]=0);let A=y.locToIndex(k,c,f);p[b]=r(n[I],o[A])}return[p,a]}}function Sr(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,i=e.makeTensorInfo(n.shape,"complex64"),u=e.data.get(i.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",s),imag:e.makeTensorInfo(o.shape,"float32",a)},i}var QL={kernelName:Pu,backendName:"cpu",kernelFunc:Sr};function ef(r,t,e="float32"){if(e==="complex64"){let o=ef(r,t,"float32"),s=ef(r,t,"float32");return Sr({inputs:{real:o,imag:s},backend:r})}let n=y.makeZerosTypedArray(y.sizeFromShape(t),e);return r.makeTensorInfo(t,e,n)}function jr(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var JL={kernelName:Vn,backendName:"cpu",kernelFunc:jr};function js(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.real,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var e_={kernelName:zu,backendName:"cpu",kernelFunc:js};function Ww(r,t,e,n){if(n==="int32"){let o=Int32Array.from(r);return[t,"int32",o]}if(n==="bool"){let o=y.toTypedArray([0],e),[s,a]=ot((i,u)=>i!==u?1:0)(t,[],r,o,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function Xs(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return jr({inputs:{x:o},backend:e});let p=ef(e,o.shape,o.dtype),m=Xs({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),c=Sr({inputs:{real:m,imag:p},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),c}if(o.dtype==="complex64"){let p=js({inputs:{input:o},backend:e}),m=Xs({inputs:{x:p},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(p),m}if(!y.hasEncodingLoss(o.dtype,s)){let p=jr({inputs:{x:o},backend:e});return{dataId:p.dataId,shape:p.shape,dtype:s}}let a=e.data.get(o.dataId).values,[i,u,l]=Ww(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,u,l)}var t_={kernelName:Wn,backendName:"cpu",kernelFunc:Xs};function ut(r,t,e,n){return e==null?({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;te([a,i],r);let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,m=a.dtype==="string"?C.fromUint8ToStringArray(l):l,c=a.dtype==="string"?C.fromUint8ToStringArray(p):p,d=n||a.dtype,[f,h]=t(a.shape,i.shape,m,c,d);return u.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let l=Xs({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(l.dataId),m=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,d=u.data.get(m.dataId).values,f=u.data.get(c.dataId).values,h=Xs({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),b=g.complexTensorInfos.real,T=g.complexTensorInfos.imag,x=u.data.get(b.dataId).values,I=u.data.get(T.dataId).values,[k,A,F]=e(a.shape,i.shape,d,f,x,I),R=u.makeTensorInfo(F,"float32",k),P=u.makeTensorInfo(F,"float32",A),L=Sr({inputs:{real:R,imag:P},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(R),u.disposeIntermediateTensorInfo(P),L}else{let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,m=n||a.dtype,[c,d]=t(a.shape,i.shape,l,p,m);return u.makeTensorInfo(d,m,c)}}}function tf(r){return(t,e,n,o,s,a)=>{let i=C.assertAndGetBroadcastShape(t,e),u=y.sizeFromShape(i),l=i.length,p=y.computeStrides(i),m=y.getTypedArrayFromDType("float32",u),c=y.getTypedArrayFromDType("float32",u),d=C.getBroadcastDims(t,i),f=C.getBroadcastDims(e,i),h=C.mergeRealAndImagArrays(n,o),g=C.mergeRealAndImagArrays(s,a),b=t.length,T=y.computeStrides(t),x=e.length,I=y.computeStrides(e);if(d.length+f.length===0)for(let k=0;k<m.length;k++){let A=k%h.length,F=k%g.length,R=r(h[A*2],h[A*2+1],g[F*2],g[F*2+1]);m[k]=R.real,c[k]=R.imag}else for(let k=0;k<m.length;k++){let A=y.indexToLoc(k,l,p),F=A.slice(-b);d.forEach(G=>F[G]=0);let R=y.locToIndex(F,b,T),P=A.slice(-x);f.forEach(G=>P[G]=0);let L=y.locToIndex(P,x,I),O=r(h[R*2],h[R*2+1],g[L*2],g[L*2+1]);m[k]=O.real,c[k]=O.imag}return[m,c,i]}}var Kw=ot((r,t)=>r+t),sre=tf((r,t,e,n)=>({real:r+e,imag:t+n})),Ni=ut(Nn,Kw,sre),r_={kernelName:Nn,backendName:"cpu",kernelFunc:Ni};function rf(r,t,e,n,o){let s=y.sizeFromShape(n),a=y.makeZerosTypedArray(o,e);for(let i=0;i<r.length;i++){let u=r[i];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?a[u]+=t[i]:a[u]+=1)}return a}function mx(r,t,e,n=!1){let o=r.shape[0],s=r.shape[1],a=xe([o,e],t.dtype);for(let i=0;i<o;i++)for(let u=0;u<s;u++){let l=r.get(i,u);if(l<0)throw new Error("Input x must be non-negative!");l>=e||(n?a.set(1,i,l):t.size>0?a.set(a.get(i,l)+t.get(i,u),i,l):a.set(a.get(i,l)+1,i,l))}return a}function Cn(r){return(t,e,n)=>{let o=y.getTypedArrayFromDType(e,t.length);for(let s=0;s<t.length;++s)o[s]=r(t[s],n);return o}}function Pe(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(te(a,r),a.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=y.sizeFromShape(a.shape),p=e||a.dtype,m=y.getArrayFromDType(p,l);for(let c=0;c<l;++c)m[c]=t(u[c],o);return i.makeTensorInfo(a.shape,p,m)}}function Ys(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(te(a,r),a.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=e||a.dtype,p=t(u,l,o);return i.makeTensorInfo(a.shape,l,p)}}var Vw=Cn(r=>Math.ceil(r)),are=Ys(po,Vw),n_={kernelName:po,backendName:"cpu",kernelFunc:are};function _l(r,t,e,n){let o=y.getArrayFromDType(e,y.sizeFromShape(t));if(n&&e!=="string"){let s=0;r.forEach(a=>{let i=y.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=e==="string"?C.fromUint8ToStringArray(a.vals):a.vals,u=0;for(let l=0;l<a.shape[0];++l){let p=l*t[1]+s;for(let m=0;m<a.shape[1];++m)o[p+m]=i[u++]}s+=a.shape[1]})}return o}var Hw=ot((r,t)=>r===t?1:0),qw=ut(fa,Hw,null,"bool"),o_={kernelName:fa,backendName:"cpu",kernelFunc:qw};var jw=Cn(r=>Math.exp(r)),Xw=Ys(To,jw,"float32"),s_={kernelName:To,backendName:"cpu",kernelFunc:Xw};var Yw=Cn(r=>Math.expm1(r)),ire=Ys(ha,Yw),a_={kernelName:ha,backendName:"cpu",kernelFunc:ire};var Zw=Cn(r=>Math.floor(r)),ure=Ys(xo,Zw),i_={kernelName:xo,backendName:"cpu",kernelFunc:ure};function cx(r,t,e,n,o,s,a,i,u){let l=xe([n,s],e);for(let p=0;p<n;p++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[p*o+d];c+=f*a[d],m.push(f)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${m} does not index into ${i}`);for(let d=0;d<s;d++)l.values[p*s+d]=t.get(...t.indexToLoc(c*s+d))}return l}function dx(r,t,e){let n=xe(e,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],u=a[2],l=t.locToIndex([i,u]);a[2]=t.values[l];let p=r.locToIndex(a);0<=p&&p<r.values.length&&(n.values[o]=r.values[p])}return n}var Qw=ot((r,t)=>r>t?1:0),pre=ut(ya,Qw,null,"bool"),u_={kernelName:ya,backendName:"cpu",kernelFunc:pre};var Jw=ot((r,t)=>r>=t?1:0),lre=ut(ko,Jw,null,"bool"),p_={kernelName:ko,backendName:"cpu",kernelFunc:lre};var eN=ot((r,t)=>r<t?1:0),mre=ut(xa,eN,null,"bool"),l_={kernelName:xa,backendName:"cpu",kernelFunc:mre};var tN=ot((r,t)=>r<=t?1:0),cre=ut(Ia,tN,null,"bool"),m_={kernelName:Ia,backendName:"cpu",kernelFunc:cre};function fx(r,t,e){let n=(t-r)/(e-1),o=y.makeZerosTypedArray(e,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var rN=Cn(r=>Math.log(r)),dre=Ys(vo,rN),c_={kernelName:vo,backendName:"cpu",kernelFunc:dre};function hx(r,t,e,n){let o=y.getTypedArrayFromDType(n,y.sizeFromShape(e));for(let s=0;s<o.length;++s){let a=s*t,i=r[a];for(let u=0;u<t;++u){let l=r[a+u];(Number.isNaN(l)||l>i)&&(i=l)}o[s]=i}return o}var nN=ot((r,t)=>Math.max(r,t)),fre=ut(wo,nN),d_={kernelName:wo,backendName:"cpu",kernelFunc:fre};var oN=ot((r,t)=>Math.min(r,t)),hre=ut(Ro,oN),f_={kernelName:Ro,backendName:"cpu",kernelFunc:hre};var Xh=ot((r,t)=>r*t),gre=tf((r,t,e,n)=>({real:r*e-t*n,imag:r*n+t*e})),$l=ut(Mo,Xh,gre),h_={kernelName:Mo,backendName:"cpu",kernelFunc:$l};function sN(r,t,e){let n=y.createScalarValue(-1,e);return Xh([],t,n,r,e)}function bre(r){let{inputs:t,backend:e}=r,{x:n}=t;te(n,"neg");let o=e.data.get(n.dataId).values,[s,a]=sN(o,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,s)}var g_={kernelName:gs,backendName:"cpu",kernelFunc:bre};var aN=ot((r,t)=>r!==t?1:0),yre=ut(Sa,aN,null,"bool"),b_={kernelName:Sa,backendName:"cpu",kernelFunc:yre};function nf(r,t,e,n,o){let s=t.length,a=y.sizeFromShape(t),i=y.computeStrides(t),u=y.computeStrides(o),l=y.getTypedArrayFromDType(e,y.sizeFromShape(o));for(let p=0;p<a;++p){let m=y.indexToLoc(p,s,i),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=y.locToIndex(c,s,u);l[d]=r[p]}return l}function Yt(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{perm:s}=e;te(o,"transpose");let a=o.shape.length,i=new Array(a);for(let m=0;m<i.length;m++)i[m]=o.shape[s[m]];let u=n.data.get(o.dataId).values,l=nf(u,o.shape,o.dtype,s,i);return{dataId:n.write(l,i,o.dtype),shape:i,dtype:o.dtype}}var y_={kernelName:Fn,backendName:"cpu",kernelFunc:Yt};function iN(r,t,e,n){let[o,s]=C.computeOutAndReduceShapes(r,n),a=Et(t,"int32"),i=y.makeZerosTypedArray(y.sizeFromShape(o),a),u=y.sizeFromShape(s);for(let l=0;l<i.length;++l){let p=l*u,m=1;for(let c=0;c<u;++c)m*=e[p+c];i[l]=m}return{outVals:i,outShape:o,outDtype:a}}function Tre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"prod");let i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=C.getAxesPermutation(u,i),p=u,m=o,c=[];l!=null&&(m=Yt({inputs:{x:o},backend:e,attrs:{perm:l}}),c.push(m),p=C.getInnerMostAxes(p.length,i));let d=e.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=iN(m.shape,m.dtype,d,p),b=h;return a&&(b=C.expandShapeToKeepDim(h,u)),c.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.makeTensorInfo(b,g,f)}var T_={kernelName:$o,backendName:"cpu",kernelFunc:Tre};function xre(r,t,e){r.forEach((n,o)=>{if(n<0||n>=e){let s=y.indexToLoc(o,t.length,y.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${e})`)}})}function Ire(r,t){for(let e=0;e<r.length;++e){let n=r[e],o=e===r.length-1?t:r[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>o)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function Cre(r,t,e,n){let o=[],s=0,a=t.length-1+e.length,i=new Array(a).fill(null).map(()=>[0]);Ire(e,n);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];let p=t[l+1];for(let m=1;m<u+1;++m)i[l].push(m*p)}for(let l=0;l<r.length;++l){let p=r[l],m=r[l]+1;for(let c=0;c<e.length;++c){let d=e[c],f=c+t.length-1;if(f>=0){let h=i[f],g=h[h.length-1]-d[p];for(let b=p;b<m;++b)i[f].push(d[b+1]+g)}p=d[p],m=d[m]}m!==p&&(o.push([p,m]),s+=m-p)}return{outSplits:i,valueSlices:o,numValues:s}}function kre(r){let t=[];for(let e=0;e<r.length;++e){let n=r[e].length,o=y.getArrayFromDType("int32",n);t.push(o),r[e].forEach((s,a)=>o[a]=s)}return t}function x_(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<r.length;n++)e[t-1]*=r[n];return e}function Sre(r,t,e,n,o,s){let a=x_(t,2)[1],i=x_(s,2)[1],u=0;for(let l of e)for(let p=l[0];p<l[1];++p){for(let m=0;m<n;++m)o[u*i+m]=r[p*a+m];++u}}function vre(r,t,e,n,o){let s=t.slice();s[0]=o;let a=y.getArrayFromDType(e,y.sizeFromShape(s)),i=r.length,u=i===0?0:i/t[0];return Sre(r,t,n,u,a,s),[a,s]}function gx(r,t,e,n,o,s,a,i){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let u=t[0][0]-1;if(xre(s,a,u),n.length===0)throw new Error("params.rank must be nonzero");let l=n[0],{outSplits:p,valueSlices:m,numValues:c}=Cre(s,a,r,l),d=kre(p),f=vre(e,n,o,m,c);return[d,f[0],f[1]]}var Zs=C.RowPartitionType,of=class{constructor(t,e,n,o,s,a,i,u,l,p){this.shape=t;this.shapeShape=e;this.values=n;this.valuesShape=o;this.valuesDType=s;this.defaultValue=a;this.defaultValueShape=i;this.rowPartitionValues=u;this.rowPartitionValuesShapes=l;this.rowPartitionTypes=C.getRowPartitionTypesHelper(p),this.raggedRank=C.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Zs.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Zs.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Zs.VALUE_ROWIDS:return of.getMaxWidthValueRowID(e);case Zs.ROW_SPLITS:return of.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Zs[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let n=0;for(let o=0;o<e-1;++o){let s=t[o+1]-t[o];s>n&&(n=s)}return n}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let n=0,o=t[0],s=0;for(let a=1;a<e;++a){let i=t[a];i!==o&&(o=i,s=Math.max(a-n,s),n=a)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return C_(t,n)}calculateOutputSize(t){let e=this.valuesShape,n=this.defaultValueShape;C.validateDefaultValueShape(n,e);let o=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=C.combineRaggedTensorToTensorShapes(this.raggedRank,o,e);a[0]<0&&(a[0]=t);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(t,e,n){let o=Math.min(t,n),s=[],a=0;for(let i=0;i<o;++i,a+=e)s.push(a);for(let i=o;i<t;++i)s.push(-1);return y.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,n,o){let s=t.length,a=[];for(let i=0;i<s-1;++i){let u=t[i+1]-t[i],l=Math.min(o,u),p=e[i];p===-1&&(l=0);for(let m=0;m<l;++m)a.push(p),p+=n;for(let m=0;m<u-l;++m)a.push(-1)}if(s>0&&a.length!==t[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(t,e,n,o){let s=t.length,a=[];if(s===0)return[];let i=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let l=e[u];a.push(l);for(let p=1;p<s;++p){let m=t[p];if(m===u)l>=0&&(++i,i<o?l+=n:l=-1);else{if(i=0,u=m,m>=e.length)throw new Error(`Got nextValueRowId=${m} which is not less than ${e.length}`);l=e[m]}a.push(l)}if(a.length!==t.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(t,e,n,o){let s=this.getRowPartitionTensor(t),a=this.getRowPartitionTypeByDimension(t);switch(a){case Zs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,o);case Zs.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,n,o);default:throw new Error(`Unsupported partition type: ${Zs[a]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case Zs.FIRST_DIM_SIZE:return t[0];case Zs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Zs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Zs[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let u=o.length-2;u>=0;--u)o[u]=o[u+1]*n[u+1];let s=C_(n,!1),a=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(s));if(o[0]*n[0]>0){let u=this.calculateFirstParentOutputIndex(e,o[0],n[0]);for(let l=1;l<=this.raggedRank;++l)u=this.calculateOutputIndex(l-1,u,o[l],n[l]);this.setOutput(this.raggedRank,u,a,s)}return[s,a]}setOutput(t,e,n,o){if(n.length===0)return;let s=this.values,a=n,i=o.slice();i=i.slice(t+1);let u=y.sizeFromShape(i),l=e.length,p=this.defaultValue;if(p.length!==u&&p.length!==1){let f=this.defaultValueShape;z(()=>{let h=_(p,f);p=op(h,i).dataSync()})}let m=0,c=0,d=0;for(let f=0;f<=l;++f){let h=f<l?e[f]:-1;if(h===d){++d;continue}if(c<d){let g=s.subarray(m*u),b=a.subarray(c*u),T=(d-c)*u;I_(b,g,T)}if(f>=l){let g=n.length;h=Math.floor(g/u)}if(h>d)if(this.defaultValue.length===1)a.subarray(d*u,h*u).fill(this.defaultValue[0]),d=h;else for(;h>d;){let g=a.slice(d*u);I_(g,p,u),++d}h<0?(m=f+1,c=d):(m=f,c=d,d=c+1)}}};function I_(r,t,e){for(let n=0;n<e;n++)r[n]=t[n]}function C_(r,t){let e=[];for(let n of r){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function bx(r,t,e,n,o,s,a,i,u,l){return new of(r,t,e,n,o,s,a,i,u,l).compute()}function Bl(r,t,e,n){let o=r===t,s=r<t&&e<0,a=t<r&&e>1;if(o||s||a)return y.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((t-r)/e)),u=y.makeZerosTypedArray(i,n);t<r&&e===1&&(e=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+e;return u}var uN=Cn(r=>1/Math.sqrt(r)),Are=Ys(Uo,uN),k_={kernelName:Uo,backendName:"cpu",kernelFunc:Are};function bu(r,t,e,n,o,s,a,i,u,l){let p=[n/o,o],m=r.values,c=t.values;if(n===0)return xe(e,t.dtype);let d=xe(p,t.dtype);typeof u=="string"||typeof u=="number"?d.values.fill(u):typeof u=="boolean"&&d.values.fill(+u);for(let f=0;f<s;f++){let h=[],g=0;for(let b=0;b<a;b++){let T=m[f*a+b];h.push(T),g+=T*i[b]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${e}`);for(let b=0;b<o;b++)l?d.values[g*o+b]+=c[f*o+b]:d.values[g*o+b]=t.rank===0?c[0]:c[f*o+b]}return d}var S_=Cn(r=>1/(1+Math.exp(-r))),pN=Pe(Ko,r=>1/(1+Math.exp(-r))),v_={kernelName:Ko,backendName:"cpu",kernelFunc:pN};function Ol(r,t,e,n,o){let s=xt.isSliceContinous(n,t,e),a=y.sizeFromShape(e),i=y.computeStrides(n);if(s){let m=xt.computeFlatOffset(t,i);return o==="string"?r.slice(m,m+a):r.subarray(m,m+a)}let u=o==="string"?C.fromUint8ToStringArray(r):r,l=xe(n,o,u),p=xe(e,o);for(let m=0;m<p.size;++m){let c=p.indexToLoc(m),d=c.map((f,h)=>f+t[h]);p.set(l.get(...d),...c)}return o==="string"?C.fromStringArrayToUint8(p.values):p.values}function Qs(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n;te(o,"slice");let[i,u]=xt.parseSliceParams(o,s,a);xt.assertParamsValid(o,i,u);let l=e.data.get(o.dataId).values,p=Ol(l,i,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,p)}var A_={kernelName:Is,backendName:"cpu",kernelFunc:Qs};function yx(r,t,e,n,o,s,a){let i=t[0],u=s[0],l=new Array(u),p=new Array(i),m=t[1];if(u===0){if(i!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=y.getArrayFromDType(e,0),b=y.getArrayFromDType(o,0);return[g,[0,m],b,l,p]}let c=!0,d=0,f=new Array(u).fill(0);for(let g=0;g<i;++g){let b=r[g*m];if(b<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=u)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,u));++f[b],c=c&&b>=d,d=b}let h=!0;for(let g=0;g<u;++g){let b=f[g]===0;l[g]=b,h=h&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,b=n;for(let T=0;T<i;++T)p[T]=T;return[g,[i,m],b,l,p]}else{let g=f[u-1],b=y.getArrayFromDType(e,g*m),T=y.getArrayFromDType(o,g),x=new Array(u).fill(0);for(let I=0;I<i;++I){let k=r[I*m],A=x[k],F=(k===0?0:f[k-1])+A;x[k]++;for(let R=0;R<m;++R)b[F*m+R]=r[I*m+R];T[F]=n[I],p[I]=F}for(let I=0;I<u;++I)if(x[I]===0){let A=I===0?0:f[I-1];b[A*m+0]=I;for(let F=1;F<m;++F)b[A*m+F]=0;T[A]=a}return[b,[g,m],T,l,p]}}function Tx(r,t,e,n,o){let s=y.sizeFromShape(n),a=t[0],i=o.length,u=[],l=1,p=-1;for(let g=0;g<i;++g){let b=o[g];if(b===-1){if(p!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,g));p=g,u.push(1)}else{if(b<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(g,b));l*=b,u.push(b)}}if(p!==-1){if(l<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/l);if(l*g!==s)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[p]=g}if(y.sizeFromShape(u)!==s)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let h=y.getArrayFromDType(e,a*i);for(let g=0;g<a;++g){let b=0;for(let T=0;T<c;++T)b+=r[g*c+T]*d[T];for(let T=0;T<i;++T)h[g*i+T]=Math.trunc(b/f[T]),b%=f[T]}return[h,[a,i],u]}function sf(r,t,e,n,o,s=!1,a=0){let i=n.length,u=[t[0],r.length/t[0]],l=u[1],m=i>0?o[i-1]+1:0;if(m<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=t.slice();c[0]=m;let d=c.reduce((x,I)=>x*I,1),f=y.getArrayFromDType(e,d);if(i===0)return m>0&&f.fill(a),[f,c];if(m<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,b=0,T=o[h];for(;;){let x=0;if(g<i){if(x=o[g],T===x){++g;continue}if(T>=x)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(T<0||T>=m)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T,m));T>b&&f.fill(a,b*l,T*l);for(let I=h;I<g;++I){let k=n[I];if(k<0||k>=u[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(I,n[I],u[0]));for(let A=0;A<l;A++)f[T*l+A]+=r[k*l+A]}if(s)for(let I=0;I<l;I++)f[T*l+I]/=g-h;if(h=g,++g,b=T+1,T=x,g>i)break}return b<m&&f.fill(a,b*l,m*l),[f,c]}var w_=Cn(r=>Math.sqrt(r)),wre=Pe(Vo,r=>Math.sqrt(r)),N_={kernelName:Vo,backendName:"cpu",kernelFunc:wre};var lN=ot((r,t)=>{let e=r-t;return e*e}),Nre=ut(jo,lN),D_={kernelName:jo,backendName:"cpu",kernelFunc:Nre};function xx(r,t,e,n){let o=xe(r,t.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*e[u]+n[u];o.set(t.get(...i),...a)}return o}var mN=class{constructor(t,e,n,o,s,a){this.separator=y.encodeString(t),this.nGramWidths=e,this.leftPad=y.encodeString(n),this.rightPad=y.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,o,s,a){for(let i=0;i<s;++i){let u=this.getPadWidth(a),l=Math.max(0,u-i),p=Math.max(0,u-(s-(i+1))),m=a-(l+p),c=e+(l>0?0:i-u),d=0;d+=l*this.leftPad.length;for(let T=0;T<m;++T)d+=t[c+T].length;d+=p*this.rightPad.length,d+=(l+p+m-1)*this.separator.length,n[o+i]=new Uint8Array(d);let h=n[o+i],g=0,b=T=>T.forEach(x=>h[g++]=x);for(let T=0;T<l;++T)b(this.leftPad),b(this.separator);for(let T=0;T<m-1;++T)b(t[c+T]),b(this.separator);if(m>0){b(t[c+m-1]);for(let T=0;T<p;++T)b(this.separator),b(this.rightPad)}else{for(let T=0;T<p-1;++T)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(t,e){let n=t.length,o=e.length;if(o>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let p=e[l]>=u;if(p=p&&e[l]<=n,!p)throw new Error(`Invalid split value ${e[l]}, must be in [${u}, ${n}]`);u=e[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,a=y.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)a[l]=0;return[u,a]}a[0]=0;for(let u=1;u<=s;++u){let l=e[u]-e[u-1],p=0;this.nGramWidths.forEach(m=>{p+=this.getNumNGrams(l,m)}),this.preserveShort&&l>0&&p===0&&(p=1),a[u]=a[u-1]+p}let i=new Array(a[s]);for(let u=0;u<s;++u){let l=e[u],p=a[u];if(this.nGramWidths.forEach(m=>{let c=e[u+1]-e[u],d=this.getNumNGrams(c,m);this.createNGrams(t,l,i,p,d,m),p+=d}),this.preserveShort&&p===a[u]){let m=e[u+1]-e[u];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(t,l,i,p,d,c)}}return[i,a]}};function zl(r,t,e,n,o,s,a,i){return new mN(e,n,o,s,a,i).compute(r,t)}function Dre(r,t,e,n){if(!r.length)return;if(t.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(t.length===1){let s=t[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!e||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!e||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||t.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!e||a.length!==0)&&n.push(a),o=s+1}}function Gl(r,t,e){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let c=0;c<n;++c){let d=o.length;Dre(r[c],t,e,o);let f=o.length-d;i[c]=f,s+=f,a=Math.max(a,f)}let u=y.getArrayFromDType("int32",s*2),l=new Array(s),p=[n,a],m=0;for(let c=0;c<n;++c)for(let d=0;d<i[c];++d)u[m*2]=c,u[m*2+1]=d,l[m]=o[m],++m;return[u,l,p]}function Ul(r,t){let e=y.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)e[n]=y.fingerPrint64(r[n]).modulo(t).getLowBitsUnsigned();return e}var cN=ot((r,t)=>r-t),Fre=tf((r,t,e,n)=>({real:r-e,imag:t-n})),Yh=ut(Xo,cN,Fre),F_={kernelName:Xo,backendName:"cpu",kernelFunc:Yh};function Ix(r,t){let e=new Array(r.rank);for(let o=0;o<e.length;o++)e[o]=r.shape[o]*t[o];let n=xe(e,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let u=0;u<a.length;u++)a[u]=s[u]%r.shape[u];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var Zh=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function R_(r,t,e=0,n=r.length-1){for(;n>e;){if(n-e>600){let i=n-e+1,u=t-e+1,l=Math.log(i),p=.5*Math.exp(2*l/3),m=.5*Math.sqrt(l*p*(i-p)/i)*Math.sign(u-i/2),c=Math.max(e,Math.floor(t-u*p/i+m)),d=Math.min(n,Math.floor(t+(i-u)*p/i+m));R_(r,t,c,d)}let o=r[t],s=e,a=n;for(y.swap(r,e,t),Zh(r[n],o)>0&&y.swap(r,e,n);s<a;){for(y.swap(r,s,a),s++,a--;Zh(r[s],o)<0;)s=s+1;for(;Zh(r[a],o)>0;)a=a-1}Zh(r[e],o)===0?y.swap(r,e,a):(a=a+1,y.swap(r,a,n)),a<=t&&(e=a+1),t<=a&&(n=a-1)}}function Cx(r,t,e,n,o){let s=t[t.length-1],[a,i]=[r.length/s,s],u=y.getTypedArrayFromDType(e,a*n),l=y.getTypedArrayFromDType("int32",a*n);for(let m=0;m<a;m++){let c=m*i,d=r.subarray(c,c+i),f=new Array(d.length);d.forEach((T,x)=>f[x]={value:T,index:x}),n<f.length&&(R_(f,n),f=f.slice(0,n)),o&&f.sort(Zh);let h=m*n,g=u.subarray(h,h+n),b=l.subarray(h,h+n);for(let T=0;T<n;T++)g[T]=f[T].value,b[T]=f[T].index}let p=t.slice();return p[p.length-1]=n,[xe(p,e,u),xe(p,"int32",l)]}function kx(r,t,e,n){let o=y.parseAxisParam(t,e)[0],s=[1,e[0],1];for(let f=0;f<o;f++)s[0]*=e[f];s[1]=e[o];for(let f=o+1;f<e.length;f++)s[2]*=e[f];let a={},i=new Int32Array(e[o]),u=new ht(s,n,r),l=[],p=s[0]===1&&s[2]===1;for(let f=0;f<e[o];f++){let h;if(p)h=r[f].toString();else{let g=[];for(let b=0;b<s[0];b++)for(let T=0;T<s[2];T++)g.push(u.get(b,f,T));h=g.join(",")}if(a[h]!==void 0)i[f]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[f]=g,l.push(f)}}let m=s.slice();m[1]=Object.keys(a).length;let c=new ht(m,n);l.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let b=0;b<s[2];b++)c.set(u.get(g,f,b),g,h,b)});let d=e.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:i}}var Rre="0.0.0";Ju("cpu",()=>new Jd,1);var dN=Pe(yo,r=>r>=0?r:Math.exp(r)-1),P_={kernelName:yo,backendName:"cpu",kernelFunc:dN};function fN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n;te([o],"leakyRelu");let a=y.sizeFromShape(o.shape),i=e.data.get(o.dataId).values,u=y.getTypedArrayFromDType("float32",a);for(let l=0;l<i.length;l++)u[l]=i[l]<0?s*i[l]:i[l];return e.makeTensorInfo(o.shape,"float32",u)}var M_={kernelName:So,backendName:"cpu",kernelFunc:fN};var Pre=ot((r,t)=>r<0?t*r:r);function hN(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t;te([n,o],"prelu");let s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,[i,u]=Pre(n.shape,o.shape,s,a,"float32");return e.makeTensorInfo(u,"float32",i)}var E_={kernelName:_o,backendName:"cpu",kernelFunc:hN};var gN=Pe(Bo,r=>Math.max(0,r)),L_={kernelName:Bo,backendName:"cpu",kernelFunc:gN};var bN=Pe(Go,r=>Math.min(Math.max(0,r),6)),__={kernelName:Go,backendName:"cpu",kernelFunc:bN};function Wl(r,t,e,n,o){if(e==="linear")return jr({inputs:{x:t},backend:r});if(e==="relu")return gN({inputs:{x:t},backend:r});if(e==="elu")return dN({inputs:{x:t},backend:r});if(e==="relu6")return bN({inputs:{x:t},backend:r});if(e==="prelu")return hN({inputs:{x:t,alpha:n},backend:r});if(e==="leakyrelu")return fN({inputs:{x:t},backend:r,attrs:{alpha:o}});if(e==="sigmoid")return pN({inputs:{x:t},backend:r});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function et(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,a=y.sizeFromShape(o.shape),i=y.inferFromImplicitShape(s,a),u=y.sizeFromShape(i);y.assert(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.incRef(o.dataId);let l=e.data.get(o.dataId);if(l.complexTensorInfos!=null){let p=l.complexTensorInfos.real,m=l.complexTensorInfos.imag;p.shape=i,m.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var $_={kernelName:Ts,backendName:"cpu",kernelFunc:et};function yN(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;te([o,s],"matMul");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[l-1]:s.shape[l-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,p,c]:[g,c,p],k=i?[b,d,m]:[b,m,d],A=et({inputs:{x:o},backend:e,attrs:{shape:I}}),F=et({inputs:{x:s},backend:e,attrs:{shape:k}}),R=a?A.shape[1]:A.shape[2],P=a?A.shape[2]:A.shape[1],L=i?F.shape[1]:F.shape[2],O=Math.max(g,b),G=e.data.get(A.dataId).values,W=e.data.get(F.dataId).values,H=y.computeStrides(A.shape),V=y.computeStrides(F.shape),[q,Z,j]=a?[H[0],1,H[1]]:[H[0],H[1],1],[X,se,ae]=i?[1,V[1],V[0]]:[V[1],1,V[0]],pe=P*L,oe=xe([O,P,L],A.dtype),ge=oe.values,fe=e.blockSize;for(let ue=0;ue<O;ue++)for(let ve=0;ve<P;ve+=fe)for(let De=0;De<L;De+=fe)for(let Re=0;Re<R;Re+=fe){let je=Math.min(ve+fe,P),Q=Math.min(De+fe,L),bt=Math.min(Re+fe,R);for(let lt=ve;lt<je;lt++)for(let Dt=De;Dt<Q;Dt++){let Mt=0;for(let Tt=Re;Tt<bt;Tt++){let st=Math.min(ue,g-1)*q,Vt=Math.min(ue,b-1)*ae,zn=G[st+lt*Z+Tt*j],pr=W[Tt*X+Dt*se+Vt];Mt+=zn*pr}ge[ue*pe+(lt*L+Dt)]+=Mt}}return e.disposeIntermediateTensorInfo(A),e.disposeIntermediateTensorInfo(F),e.makeTensorInfo(x,oe.dtype,oe.values)}var B_={kernelName:uo,backendName:"cpu",kernelFunc:yN};function Mre(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c,d,f,h=[];c=yN({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:e}),a&&(d=Ni({inputs:{a:c,b:a},backend:e}),h.push(c),c=d),p&&(f=Wl(e,c,p,i,m),h.push(c),c=f);for(let b of h)e.disposeIntermediateTensorInfo(b);return c}var O_={kernelName:ws,backendName:"cpu",kernelFunc:Mre};var Ere=Pe(Mi,r=>Math.acos(r)),z_={kernelName:Mi,backendName:"cpu",kernelFunc:Ere};var Lre=Pe(Ei,r=>Math.acosh(r)),G_={kernelName:Ei,backendName:"cpu",kernelFunc:Lre};function _re(r){let{inputs:t,backend:e}=r,n=t;te(t,"addN");let o=n.map(i=>e.data.get(i.dataId).values),s=xe(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let u=o[i];for(let l=0;l<a.length;l++)a[l]+=u[l]}return e.makeTensorInfo(s.shape,s.dtype,s.values)}var U_={kernelName:so,backendName:"cpu",kernelFunc:_re};function $re(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"all");let i=y.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Yt({inputs:{x:o},backend:e,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("all",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),p.dtype),h=e.data.get(p.dataId).values;for(let b=0;b<f.length;++b){let T=b*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x&&k}f[b]=x}l!=null&&e.disposeIntermediateTensorInfo(p);let g=e.makeTensorInfo(m,p.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),T=et({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),T}return g}var W_={kernelName:Li,backendName:"cpu",kernelFunc:$re};function Bre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"any");let i=y.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Yt({inputs:{x:o},backend:e,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("any",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),p.dtype),h=e.data.get(p.dataId).values;for(let b=0;b<f.length;++b){let T=b*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x||k}f[b]=x}l!=null&&e.disposeIntermediateTensorInfo(p);let g=e.makeTensorInfo(m,p.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),T=et({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),T}return g}var K_={kernelName:_i,backendName:"cpu",kernelFunc:Bre};function Ore(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;te(o,"argMax");let a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Yt({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMax",a,u.shape.length);let[p,m]=C.computeOutAndReduceShapes(u.shape,a),c=y.sizeFromShape(p),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=e.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,T=h[b],x=0;for(let I=0;I<f;++I){let k=h[b+I];k>T&&(T=k,x=I)}d[g]=x}return l.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(p,"int32",d)}var V_={kernelName:ao,backendName:"cpu",kernelFunc:Ore};function zre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;te(o,"argMin");let a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Yt({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMin",a,u.shape.length);let[p,m]=C.computeOutAndReduceShapes(u.shape,a),c=y.sizeFromShape(p),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=e.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,T=h[b],x=0;for(let I=0;I<f;++I){let k=h[b+I];k<T&&(T=k,x=I)}d[g]=x}return l.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(p,"int32",d)}var H_={kernelName:mi,backendName:"cpu",kernelFunc:zre};var Gre=Pe($i,r=>Math.asin(r)),q_={kernelName:$i,backendName:"cpu",kernelFunc:Gre};var Ure=Pe(Bi,r=>Math.asinh(r)),j_={kernelName:Bi,backendName:"cpu",kernelFunc:Ure};var Wre=Pe(Oi,r=>Math.atan(r)),X_={kernelName:Oi,backendName:"cpu",kernelFunc:Wre};var Kre=ot((r,t)=>Math.atan2(r,t)),Vre=ut(la,Kre),Y_={kernelName:la,backendName:"cpu",kernelFunc:Vre};var Hre=Pe(zi,r=>Math.atanh(r)),Z_={kernelName:zi,backendName:"cpu",kernelFunc:Hre};function uf(r,t,e,n,o,s){let a=o.strideHeight,i=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=xe(o.outShape,e),g=h.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],T=o.outShape[2]*o.outShape[3],x=o.outShape[3];for(let I=0;I<o.batchSize;++I){let k=I*b,A=I*n[0];for(let F=0;F<o.inChannels;++F)for(let R=0;R<o.outHeight;++R){let P=R*a-c,L=Math.max(0,P),O=Math.min(o.inHeight,p+P),G=k+R*T;for(let W=0;W<o.outWidth;++W){let H=W*i-d,V=Math.max(0,H),q=Math.min(o.inWidth,m+H),Z=f,j=0,X=0;for(let ae=L;ae<O;ae+=u){let pe=A+ae*n[1];for(let oe=V;oe<q;oe+=l){let ge=pe+oe*n[2],fe=r[ge+F];s==="max"&&fe>Z?Z=fe:s==="avg"&&(j+=fe,X++)}if(isNaN(Z))break}let se=G+W*x+F;g[se]=s==="avg"?j/X:Z}}}return h}function Sx(r,t,e,n,o=!1,s=!1){let a=xe(n.outShape,"int32"),i=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=xe(t,e,r);for(let g=0;g<n.batchSize;++g)for(let b=0;b<n.inChannels;++b)for(let T=0;T<n.outHeight;++T){let x=T*i-d,I=x;for(;I<0;)I+=l;let k=Math.min(n.inHeight,m+x);for(let A=0;A<n.outWidth;++A){let F=A*u-f,R=F;for(;R<0;)R+=p;let P=Math.min(n.inWidth,c+F),L=Number.NEGATIVE_INFINITY,O=-1;for(let G=I;G<k;G+=l){let W=G-x;for(let H=R;H<P;H+=p){let V=H-F,q=h.get(g,G,H,b);q>L&&(L=q,o?O=s?((g*n.inHeight+G)*n.inWidth+H)*n.inChannels+b:(G*n.inWidth+H)*n.inChannels+b:O=W*c+V)}}a.set(O,g,T,A,b)}}return a}function vx(r,t,e,n,o,s){let a=o.strideDepth,i=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,p=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,b=o.padInfo.left,T=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=xe(o.outShape,e),I=x.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[2]*o.outShape[3]*o.outShape[4],F=o.outShape[3]*o.outShape[4],R=o.outShape[4];for(let P=0;P<o.batchSize;++P){let L=P*k,O=P*n[0];for(let G=0;G<o.inChannels;++G)for(let W=0;W<o.outDepth;++W){let H=W*a-h,V=H;for(;V<0;)V+=l;let q=Math.min(o.inDepth,c+H),Z=L+W*A;for(let j=0;j<o.outHeight;++j){let X=j*i-g,se=X;for(;se<0;)se+=p;let ae=Math.min(o.inHeight,d+X),pe=Z+j*F;for(let oe=0;oe<o.outWidth;++oe){let ge=oe*u-b,fe=ge;for(;fe<0;)fe+=m;let ue=Math.min(o.inWidth,f+ge),ve=pe+oe*R,De=T,Re=0,je=0;for(let bt=V;bt<q;bt+=l){let lt=O+bt*n[1];for(let Dt=se;Dt<ae;Dt+=p){let Mt=lt+Dt*n[2];for(let Tt=fe;Tt<ue;Tt+=m){let st=Mt+Tt*n[3],Vt=r[st+G];if(s==="max"&&Vt>De?De=Vt:s==="avg"&&(Re+=Vt,je++),isNaN(De))break}if(isNaN(De))break}if(isNaN(De))break}let Q=ve+G;I[Q]=s==="avg"?Re/je:De}}}}return x}function Q_(r,t){let e=xe(t.outShape,"int32"),n=t.strideDepth,o=t.strideHeight,s=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,c=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let h=0;h<t.batchSize;++h)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let T=b*n-c,x=T;for(;x<0;)x+=a;let I=Math.min(t.inDepth,l+T);for(let k=0;k<t.outHeight;++k){let A=k*o-d,F=A;for(;F<0;)F+=i;let R=Math.min(t.inHeight,p+A);for(let P=0;P<t.outWidth;++P){let L=P*s-f,O=L;for(;O<0;)O+=u;let G=Math.min(t.inWidth,m+L),W=Number.NEGATIVE_INFINITY,H=-1;for(let V=x;V<I;V+=a){let q=V-T;for(let Z=F;Z<R;Z+=i){let j=Z-A;for(let X=O;X<G;X+=u){let se=X-L,ae=r.get(h,V,Z,X,g);ae>=W&&(W=ae,H=q*p*m+j*p+se)}}}e.set(H,h,b,k,P,g)}}}return e}function qre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;te(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u),m;if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))m=jr({inputs:{x:o},backend:e});else{let c=e.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=uf(c,o.shape,o.dtype,d,p,"avg");m=e.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var J_={kernelName:io,backendName:"cpu",kernelFunc:qre};function jre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;te(o,"avgPool3d");let p=C.computePool3DInfo(o.shape,s,a,1,i,u,l),m=e.data.get(o.dataId).values,c=vx(m,o.shape,o.dtype,y.computeStrides(o.shape),p,"avg");return e.makeTensorInfo(c.shape,"float32",c.values)}var e$={kernelName:Ru,backendName:"cpu",kernelFunc:jre};function Xre(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;te([o,s],"avgPool3DGrad");let p=C.computePool3DInfo(s.shape,a,i,1,u,l),m=p.strideDepth,c=p.strideHeight,d=p.strideWidth,f=p.filterDepth,h=p.filterHeight,g=p.filterWidth,b=p.dilationDepth,T=p.dilationHeight,x=p.dilationWidth,I=p.effectiveFilterDepth,k=p.effectiveFilterHeight,A=p.effectiveFilterWidth,F=I-1-p.padInfo.front,R=A-1-p.padInfo.left,P=k-1-p.padInfo.top,L=xe(s.shape,"float32"),O=1/(f*h*g),G=e.bufferSync(o);for(let W=0;W<p.batchSize;++W)for(let H=0;H<p.inChannels;++H)for(let V=0;V<p.inDepth;++V)for(let q=0;q<p.inHeight;++q)for(let Z=0;Z<p.inWidth;++Z){let j=V-F,X=q-P,se=Z-R,ae=0;for(let pe=0;pe<I;pe+=b){let oe=(j+pe)/m;if(!(oe<0||oe>=p.outDepth||Math.floor(oe)!==oe))for(let ge=0;ge<k;ge+=T){let fe=(X+ge)/c;if(!(fe<0||fe>=p.outHeight||Math.floor(fe)!==fe))for(let ue=0;ue<A;ue+=x){let ve=(se+ue)/d;if(ve<0||ve>=p.outWidth||Math.floor(ve)!==ve)continue;ae+=G.get(W,oe,fe,ve,H)}}}L.set(ae*O,W,V,q,Z,H)}return e.makeTensorInfo(L.shape,L.dtype,L.values)}var t$={kernelName:Im,backendName:"cpu",kernelFunc:Xre};function Yre(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s;te([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=C.computePool2DInfo(a.shape,i,u,1,l),m=p.strideHeight,c=p.strideWidth,d=p.filterHeight,f=p.filterWidth,h=p.dilationHeight,g=p.dilationWidth,b=p.effectiveFilterHeight,T=p.effectiveFilterWidth,x=T-1-p.padInfo.left,I=b-1-p.padInfo.top,k=xe(a.shape,"float32"),A=1/(d*f),F=e.data.get(o.dataId).values,R=xe(o.shape,"float32",F);for(let P=0;P<p.batchSize;++P)for(let L=0;L<p.inChannels;++L)for(let O=0;O<p.inHeight;++O)for(let G=0;G<p.inWidth;++G){let W=O-I,H=G-x,V=0;for(let q=0;q<b;q+=h){let Z=(W+q)/m;if(!(Z<0||Z>=p.outHeight||Math.floor(Z)!==Z))for(let j=0;j<T;j+=g){let X=(H+j)/c;if(X<0||X>=p.outWidth||Math.floor(X)!==X)continue;V+=R.get(P,Z,X,L)}}k.set(V*A,P,O,G,L)}return e.makeTensorInfo(k.shape,k.dtype,k.values)}var r$={kernelName:xm,backendName:"cpu",kernelFunc:Yre};function Zre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:u}=t;y.assert(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),te([o,i,u,s,a],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=e.data.get(o.dataId).values,m=e.data.get(i.dataId).values,c=e.data.get(u.dataId).values,d=s?e.data.get(s.dataId).values:new Float32Array([1]),f=a?e.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(p.length),g=f.length,b=d.length,T=c.length,x=m.length,I=0,k=0,A=0,F=0;for(let R=0;R<p.length;++R)h[R]=f[I++]+(p[R]-m[k++])*d[A++]/Math.sqrt(c[F++]+l),I>=g&&(I=0),k>=x&&(k=0),A>=b&&(A=0),F>=T&&(F=0);return e.makeTensorInfo(o.shape,o.dtype,h)}var n$={kernelName:Co,backendName:"cpu",kernelFunc:Zre};function Qre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;te([o],"batchToSpaceND");let i=s.reduce((b,T)=>b*T),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=et({inputs:{x:o},backend:e,attrs:{shape:u}}),f=Yt({inputs:{x:d},backend:e,attrs:{perm:l}}),h=et({inputs:{x:f},backend:e,attrs:{shape:p}}),g=Qs({inputs:{x:h},backend:e,attrs:{begin:m,size:c}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),g}var o$={kernelName:cs,backendName:"cpu",kernelFunc:Qre};function Jre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,l=rf(i,u,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,l)}var s$={kernelName:Cm,backendName:"cpu",kernelFunc:Jre};function ene(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var a$={kernelName:km,backendName:"cpu",kernelFunc:ene};var tne=Pe(Kn,(r,t)=>{let e=t;return r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r}),i$={kernelName:Kn,backendName:"cpu",kernelFunc:tne};var rne=r=>{let{x:t}=r.inputs,e=r.backend,n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values;for(let l=0;l<i.length;l++){let p=i[l],m=u[l];n[l]=Math.hypot(p,m)}return e.makeOutput(n,t.shape,"float32")},u$={kernelName:Mu,backendName:"cpu",kernelFunc:rne};function Di(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.imag,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var p$={kernelName:$u,backendName:"cpu",kernelFunc:Di};function wp(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(h=>h.shape);C.assertParamsConsistent(a,s);let i=C.computeOutShape(t.map(h=>h.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let u=t.filter(h=>y.sizeFromShape(h.shape)>0);if(u.length===1)return jr({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){let h=u.map(I=>js({inputs:{input:I},backend:e})),g=u.map(I=>Di({inputs:{input:I},backend:e})),b=wp({inputs:h,backend:e,attrs:{axis:s}}),T=wp({inputs:g,backend:e,attrs:{axis:s}}),x=Sr({inputs:{real:b,imag:T},backend:e});return h.forEach(I=>e.disposeIntermediateTensorInfo(I)),g.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(T),x}let l=u.map(h=>{let g=y.sizeFromShape(h.shape.slice(s));return et({inputs:{x:h},backend:e,attrs:{shape:[-1,g]}})}),p=l.map(h=>({vals:e.data.get(h.dataId).values,shape:h.shape}));i=C.computeOutShape(l.map(h=>h.shape),1);let m=l[0].shape[0]===1,c=_l(p,i,t[0].dtype,m),d=C.computeOutShape(u.map(h=>h.shape),s),f=e.makeTensorInfo(d,t[0].dtype,c);return l.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var l$={kernelName:ds,backendName:"cpu",kernelFunc:wp};function TN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n;te([o,s],"conv2d");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,b=c.padInfo.left,T=c.padInfo.top,x=c.dataFormat==="channelsLast",I=new ht(c.outShape,o.dtype),k=y.computeStrides(o.shape),A=y.computeStrides(s.shape),F=k[0],R=x?k[1]:k[2],P=x?k[2]:1,L=x?1:k[1],O=I.strides[0],G=x?I.strides[1]:I.strides[2],W=x?I.strides[2]:1,H=x?1:I.strides[1],V=e.data.get(o.dataId).values,q=e.data.get(s.dataId).values,Z=I.values;for(let j=0;j<c.batchSize;++j){let X=j*F,se=j*O;for(let ae=0;ae<c.outHeight;++ae){let pe=se+ae*G,oe=ae*c.strideHeight-T;for(let ge=0;ge<d;++ge){let fe=oe+ge*h;if(fe<0||fe>=c.inHeight)continue;let ue=ge*A[0],ve=X+fe*R;for(let De=0;De<c.outWidth;++De){let Re=pe+De*W,je=De*c.strideWidth-b;for(let Q=0;Q<f;++Q){let bt=je+Q*g;if(bt<0||bt>=c.inWidth)continue;let lt=ue+Q*A[1],Dt=ve+bt*P,Mt=lt;for(let Tt=0;Tt<c.inChannels;++Tt){let st=V[Dt+Tt*L];for(let Vt=0;Vt<c.outChannels;++Vt)Z[Re+Vt*H]+=st*q[Mt+Vt];Mt+=c.outChannels}}}}}}return e.makeTensorInfo(I.shape,I.dtype,Z)}var m$={kernelName:lo,backendName:"cpu",kernelFunc:TN};function nne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n;te([o,s],"conv2dBackpropFilter");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,p,a,1,i,l,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,b=c.dataFormat==="channelsLast",T=new ht(c.filterShape,"float32"),x=c.padInfo.left,I=c.padInfo.top,k=e.data.get(o.dataId).values,A=e.data.get(s.dataId).values,F=new ht(o.shape,o.dtype,k),R=new ht(s.shape,s.dtype,A);for(let P=0;P<h;++P){let L=Math.max(0,Math.ceil((I-P)/d)),O=Math.min(c.outHeight,(c.inHeight+I-P)/d);for(let G=0;G<g;++G){let W=Math.max(0,Math.ceil((x-G)/f)),H=Math.min(c.outWidth,(c.inWidth+x-G)/f);for(let V=0;V<c.inChannels;++V)for(let q=0;q<c.outChannels;++q){let Z=0;for(let j=0;j<c.batchSize;++j)for(let X=L;X<O;++X){let se=P+X*d-I;for(let ae=W;ae<H;++ae){let pe=G+ae*f-x;b?Z+=F.get(j,se,pe,V)*R.get(j,X,ae,q):Z+=F.get(j,V,se,pe)*R.get(j,q,X,ae)}}T.set(Z,P,G,V,q)}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}var c$={kernelName:Sm,backendName:"cpu",kernelFunc:nne};function one(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n;te([o,s],"conv2dBackpropInput");let m=y.computeStrides(s.shape),c=y.computeStrides(o.shape),d=C.convertConv2DDataFormat(l),f=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,d),h=new ht(f.inShape,"float32"),g=h.values,b=e.data.get(o.dataId).values,T=e.data.get(s.dataId).values,[x,I,k]=m,{batchSize:A,filterHeight:F,filterWidth:R,inChannels:P,inHeight:L,inWidth:O,outChannels:G,outHeight:W,outWidth:H,strideHeight:V,strideWidth:q}=f;d=f.dataFormat;let Z=F-1-f.padInfo.top,j=R-1-f.padInfo.left,X=d==="channelsLast",se=h.strides[0],ae=X?h.strides[1]:h.strides[2],pe=X?h.strides[2]:1,oe=X?1:h.strides[1],ge=c[0],fe=X?c[1]:c[2],ue=X?c[2]:1,ve=X?1:c[1];for(let De=0;De<A;++De)for(let Re=0;Re<P;++Re)for(let je=0;je<L;++je){let Q=je-Z,bt=Math.max(0,Math.ceil(Q/V)),lt=Math.min(W,(F+Q)/V);for(let Dt=0;Dt<O;++Dt){let Mt=Dt-j,Tt=Math.max(0,Math.ceil(Mt/q)),st=Math.min(H,(R+Mt)/q),Vt=0;for(let pr=bt;pr<lt;++pr){let to=pr*V-Q;for(let Br=Tt;Br<st;++Br){let us=Br*q-Mt,sn=ge*De+fe*pr+ue*Br,vr=x*(F-1-to)+I*(R-1-us)+k*Re;for(let lr=0;lr<G;++lr){let Xr=b[sn+ve*lr],Yr=T[vr+lr];Vt+=Xr*Yr}}}let zn=se*De+ae*je+pe*Dt+oe*Re;g[zn]=Vt}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}var d$={kernelName:mo,backendName:"cpu",kernelFunc:one};function sne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u}=n;te([o,s],"conv3d");let l=C.computeConv3DInfo(o.shape,s.shape,a,u,i),{filterDepth:p,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=l,b=g.front,T=g.left,x=g.top,I=new ht(l.outShape,o.dtype),k=e.data.get(o.dataId).values,A=e.data.get(s.dataId).values,F=I.values,R=y.computeStrides(o.shape),P=y.computeStrides(s.shape);for(let L=0;L<l.batchSize;++L){let O=L*R[0],G=L*I.strides[0];for(let W=0;W<l.outDepth;++W){let H=G+W*I.strides[1],V=W*l.strideDepth-b;for(let q=0;q<p;++q){let Z=V+q*d;if(Z<0||Z>=l.inDepth)continue;let j=q*P[0],X=O+Z*R[1];for(let se=0;se<l.outHeight;++se){let ae=H+se*I.strides[2],pe=se*l.strideHeight-x;for(let oe=0;oe<m;++oe){let ge=pe+oe*f;if(ge<0||ge>=l.inHeight)continue;let fe=j+oe*P[1],ue=X+ge*R[2];for(let ve=0;ve<l.outWidth;++ve){let De=ae+ve*l.outChannels,Re=ve*l.strideWidth-T;for(let je=0;je<c;++je){let Q=Re+je*h;if(Q<0||Q>=l.inWidth)continue;let bt=fe+je*P[2],lt=ue+Q*l.inChannels,Dt=bt;for(let Mt=0;Mt<l.inChannels;++Mt){let Tt=k[lt+Mt];for(let st=0;st<l.outChannels;++st)F[De+st]+=Tt*A[Dt+st];Dt+=l.outChannels}}}}}}}}return e.makeTensorInfo(I.shape,I.dtype,I.values)}var f$={kernelName:Eu,backendName:"cpu",kernelFunc:sne};function ane(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:u}=n;te([o,s],"conv3dBackpropFilterV2");let l=y.computeStrides(o.shape),p=y.computeStrides(s.shape),m=C.computeConv3DInfo(o.shape,u,a,1,i),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,b=m.filterWidth,T=new ht(m.filterShape,"float32"),x=T.values,[I,k,A,F]=T.strides,R=e.data.get(s.dataId).values,[P,L,O,G]=p,W=e.data.get(o.dataId).values,[H,V,q,Z]=l,j=m.padInfo.front,X=m.padInfo.left,se=m.padInfo.top;for(let ae=0;ae<h;++ae){let pe=Math.max(0,Math.ceil((j-ae)/c)),oe=Math.min(m.outDepth,(m.inDepth+j-ae)/c),ge=ae*I;for(let fe=0;fe<g;++fe){let ue=Math.max(0,Math.ceil((se-fe)/d)),ve=Math.min(m.outHeight,(m.inHeight+se-fe)/d),De=fe*k+ge;for(let Re=0;Re<b;++Re){let je=Math.max(0,Math.ceil((X-Re)/f)),Q=Math.min(m.outWidth,(m.inWidth+X-Re)/f),bt=Re*A+De;for(let lt=0;lt<m.inChannels;++lt){let Dt=lt*F+bt;for(let Mt=0;Mt<m.outChannels;++Mt){let Tt=0;for(let st=0;st<m.batchSize;++st){let Vt=st*H,zn=st*P;for(let pr=pe;pr<oe;++pr){let Br=(ae+pr*c-j)*V+Vt,us=pr*L+zn;for(let sn=ue;sn<ve;++sn){let lr=(fe+sn*d-se)*q+Br,Xr=sn*O+us;for(let Yr=je;Yr<Q;++Yr){let ps=(Re+Yr*f-X)*Z+lr,wu=Yr*G+Xr;Tt+=W[ps+lt]*R[wu+Mt]}}}}x[Dt+Mt]=Tt}}}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}var h$={kernelName:vm,backendName:"cpu",kernelFunc:ane};function ine(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:a,strides:i,inputShape:u}=n;te([o],"conv3dBackpropInputV2");let l=y.computeStrides(o.shape),p=y.computeStrides(s.shape),m=C.computeConv3DInfo(u,s.shape,i,1,a),c=new ht(m.inShape,"float32"),d=c.values,[f,h,g,b]=c.strides,T=e.data.get(o.dataId).values,[x,I,k,A]=l,F=e.data.get(s.dataId).values,[R,P,L,O]=p,{batchSize:G,filterDepth:W,filterHeight:H,filterWidth:V,inChannels:q,inDepth:Z,inHeight:j,inWidth:X,outChannels:se,outDepth:ae,outHeight:pe,outWidth:oe,strideDepth:ge,strideHeight:fe,strideWidth:ue}=m,ve=W-1-m.padInfo.front,De=H-1-m.padInfo.top,Re=V-1-m.padInfo.left;for(let je=0;je<G;++je)for(let Q=0;Q<q;++Q)for(let bt=0;bt<Z;++bt){let lt=bt-ve,Dt=Math.max(0,Math.ceil(lt/ge)),Mt=Math.min(ae,(W+lt)/ge);for(let Tt=0;Tt<j;++Tt){let st=Tt-De,Vt=Math.max(0,Math.ceil(st/fe)),zn=Math.min(pe,(H+st)/fe);for(let pr=0;pr<X;++pr){let to=pr-Re,Br=Math.max(0,Math.ceil(to/ue)),us=Math.min(oe,(V+to)/ue),sn=0;for(let vr=Dt;vr<Mt;++vr){let lr=vr*ge-lt;for(let Xr=Vt;Xr<zn;++Xr){let Yr=Xr*fe-st;for(let ii=Br;ii<us;++ii){let ps=ii*ue-to,wu=x*je+I*vr+k*Xr+A*ii,um=R*(W-1-lr)+P*(H-1-Yr)+L*(V-1-ps)+O*Q;for(let ls=0;ls<se;++ls){let Or=T[wu+ls],_p=F[um+ls];sn+=Or*_p}}}}d[f*je+h*bt+g*Tt+b*pr+Q]=sn}}}return e.makeTensorInfo(c.shape,c.dtype,c.values)}var g$={kernelName:Am,backendName:"cpu",kernelFunc:ine};var une=Pe(co,r=>Math.cos(r)),b$={kernelName:co,backendName:"cpu",kernelFunc:une};var pne=Pe(fo,r=>Math.cosh(r)),y$={kernelName:fo,backendName:"cpu",kernelFunc:pne};function lne(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:l}=n,[p,m,c,d]=o.shape,f=s.shape[0],[h,g]=i,b=xe([f,h,g,d],"float32"),T=e.data.get(s.dataId).values,x=e.data.get(a.dataId).values,I=e.data.get(o.dataId).values,k=y.computeStrides(o.shape),A=y.computeStrides(b.shape);for(let F=0;F<f;F++){let R=F*4,P=T[R],L=T[R+1],O=T[R+2],G=T[R+3],W=x[F];if(W>=p)continue;let H=h>1?(O-P)*(m-1)/(h-1):0,V=g>1?(G-L)*(c-1)/(g-1):0;for(let q=0;q<h;q++){let Z=h>1?P*(m-1)+q*H:.5*(P+O)*(m-1);if(Z<0||Z>m-1){for(let j=0;j<g;j++)for(let X=0;X<d;X++){let se=X+j*A[2]+q*A[1]+F*A[0];b.values[se]=l}continue}if(u==="bilinear"){let j=Math.floor(Z),X=Math.ceil(Z),se=Z-j;for(let ae=0;ae<g;ae++){let pe=g>1?L*(c-1)+ae*V:.5*(L+G)*(c-1);if(pe<0||pe>c-1){for(let ue=0;ue<d;ue++){let ve=ue+ae*A[2]+q*A[1]+F*A[0];b.values[ve]=l}continue}let oe=Math.floor(pe),ge=Math.ceil(pe),fe=pe-oe;for(let ue=0;ue<d;ue++){let ve=ue+oe*k[2]+j*k[1]+W*k[0],De=I[ve];ve=ue+ge*k[2]+j*k[1]+W*k[0];let Re=I[ve];ve=ue+oe*k[2]+X*k[1]+W*k[0];let je=I[ve];ve=ue+ge*k[2]+X*k[1]+W*k[0];let Q=I[ve],bt=De+(Re-De)*fe,lt=je+(Q-je)*fe;ve=ue+ae*A[2]+q*A[1]+F*A[0],b.values[ve]=bt+(lt-bt)*se}}}else for(let j=0;j<g;++j){let X=g>1?L*(c-1)+j*V:.5*(L+G)*(c-1);if(X<0||X>c-1){for(let pe=0;pe<d;pe++){let oe=pe+j*A[2]+q*A[1]+F*A[0];b.values[oe]=l}continue}let se=Math.round(X),ae=Math.round(Z);for(let pe=0;pe<d;pe++){let oe=pe+se*k[2]+ae*k[1]+W*k[0],ge=pe+j*A[2]+q*A[1]+F*A[0];b.values[ge]=I[oe]}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var T$={kernelName:ca,backendName:"cpu",kernelFunc:lne};function mne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;te(o,"cumprod");let u=C.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Yt({inputs:{x:o},backend:e,attrs:{perm:u}}));let p=C.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let m=Et(l.dtype,"int32"),c=y.makeOnesTypedArray(y.sizeFromShape(l.shape),m),d=e.data.get(l.dataId).values,f=l.shape[l.shape.length-1],h=i?(b,T)=>b+f-T-1:(b,T)=>b+T;for(let b=0;b<d.length;b+=f)for(let T=0;T<f;T++){let x=h(b,T);if(T===0)c[x]=a?1:d[x];else{let I=h(b,T-1);c[x]=a?d[I]*c[I]:d[x]*c[I]}}let g=e.makeTensorInfo(l.shape,m,c);if(u!=null){let b=C.getUndoAxesPermutation(u),T=Yt({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(l),T}return g}var x$={kernelName:ma,backendName:"cpu",kernelFunc:mne};function cne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;te(o,"cumsum");let u=C.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Yt({inputs:{x:o},backend:e,attrs:{perm:u}}));let p=C.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let m=Et(l.dtype,"int32"),c=y.makeZerosTypedArray(y.sizeFromShape(l.shape),m),d=e.data.get(l.dataId).values,f=l.shape[l.shape.length-1],h=i?(b,T)=>b+f-T-1:(b,T)=>b+T;for(let b=0;b<d.length;b+=f)for(let T=0;T<f;T++){let x=h(b,T);if(T===0)c[x]=a?0:d[x];else{let I=h(b,T-1);c[x]=a?d[I]+c[I]:d[x]+c[I]}}let g=e.makeTensorInfo(l.shape,m,c);if(u!=null){let b=C.getUndoAxesPermutation(u),T=Yt({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(l),T}return g}var I$={kernelName:ho,backendName:"cpu",kernelFunc:cne};function dne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,p=rf(u,l,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=e.bufferSync(o),l=e.bufferSync(s),p=mx(u,l,a,i);return e.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var C$={kernelName:wm,backendName:"cpu",kernelFunc:dne};function fne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n;y.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],u=o.shape[1],l=o.shape[2],p=o.shape[3],m=u*s,c=l*s,d=p/(s*s),f=e.data.get(o.dataId).values,h=new Float32Array(i*m*c*d),g=0;for(let b=0;b<i;++b)for(let T=0;T<m;++T){let x=Math.floor(T/s),I=T%s;for(let k=0;k<c;++k){let A=Math.floor(k/s),F=k%s,R=(I*s+F)*d;for(let P=0;P<d;++P){let O=P+R+p*(A+l*(x+u*b));h[g++]=f[O]}}}return e.makeTensorInfo([i,m,c,d],o.dtype,h)}var k$={kernelName:da,backendName:"cpu",kernelFunc:fne};function xN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n;te([o,s],"depthwiseConv2DNative");let p=y.computeStrides(o.shape),m=y.computeStrides(s.shape),c=u;c==null&&(c=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,l,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:b,padInfo:T}=d,x=T.left,I=T.top,k=d.outChannels/d.inChannels,A=new ht(d.outShape,o.dtype),F=e.data.get(o.dataId).values,R=e.data.get(s.dataId).values,P=A.values;for(let L=0;L<d.batchSize;++L){let O=L*p[0],G=L*A.strides[0];for(let W=0;W<d.outHeight;++W){let H=G+W*A.strides[1],V=W*d.strideHeight-I;for(let q=0;q<f;++q){let Z=V+q*g;if(Z<0||Z>=d.inHeight)continue;let j=q*m[0],X=O+Z*p[1];for(let se=0;se<d.outWidth;++se){let ae=H+se*A.strides[2],pe=se*d.strideWidth-x;for(let oe=0;oe<h;++oe){let ge=pe+oe*b;if(ge<0||ge>=d.inWidth)continue;let fe=j+oe*m[1],ue=X+ge*d.inChannels,ve=ae,De=fe;for(let Re=0;Re<d.inChannels;++Re){let je=F[ue+Re];for(let Q=0;Q<k;++Q)P[ve+Q]+=je*R[De+Q];ve+=k,De+=k}}}}}}return e.makeTensorInfo(A.shape,A.dtype,A.values)}var S$={kernelName:go,backendName:"cpu",kernelFunc:xN};function hne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n;te([o,s],"depthwiseConv2dNativeBackpropFilter");let m=C.computeConv2DInfo(o.shape,p,a,i,u,l,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new ht(m.filterShape,"float32"),b=m.padInfo.left,T=m.padInfo.top,x=m.outChannels/m.inChannels,I=e.data.get(o.dataId).values,k=new ht(o.shape,o.dtype,I),A=e.data.get(s.dataId).values,F=new ht(s.shape,s.dtype,A);for(let R=0;R<f;++R){let P=Math.max(0,Math.ceil((T-R)/c)),L=Math.min(m.outHeight,(m.inHeight+T-R)/c);for(let O=0;O<h;++O){let G=Math.max(0,Math.ceil((b-O)/d)),W=Math.min(m.outWidth,(m.inWidth+b-O)/d);for(let H=0;H<m.outChannels;++H){let V=Math.trunc(H/x),q=H%x,Z=0;for(let j=0;j<m.batchSize;++j)for(let X=P;X<L;++X){let se=R+X*c-T;for(let ae=G;ae<W;++ae){let pe=O+ae*d-b;Z+=k.get(j,se,pe,V)*F.get(j,X,ae,H)}}g.set(Z,R,O,V,q)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}var v$={kernelName:Nm,backendName:"cpu",kernelFunc:hne};function gne(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n;te([o,s],"depthwiseConv2DNativeBackpropInput");let m=y.computeStrides(o.shape),c=y.computeStrides(s.shape),d=C.computeConv2DInfo(p,s.shape,a,i,u,l,!0),f=new ht(d.inShape,"float32"),h=f.values,[g,b,T]=f.strides,x=e.data.get(o.dataId).values,[I,k,A]=m,F=e.data.get(s.dataId).values,[R,P,L]=c,{batchSize:O,filterHeight:G,filterWidth:W,inChannels:H,inHeight:V,inWidth:q,outChannels:Z,outHeight:j,outWidth:X,strideHeight:se,strideWidth:ae}=d,pe=G-1-d.padInfo.top,oe=W-1-d.padInfo.left,ge=Z/H;for(let fe=0;fe<O;++fe)for(let ue=0;ue<H;++ue)for(let ve=0;ve<V;++ve){let De=ve-pe,Re=Math.max(0,Math.ceil(De/se)),je=Math.min(j,(G+De)/se);for(let Q=0;Q<q;++Q){let bt=Q-oe,lt=Math.max(0,Math.ceil(bt/ae)),Dt=Math.min(X,(W+bt)/ae),Mt=0;for(let Tt=Re;Tt<je;++Tt){let st=Tt*se-De;for(let Vt=lt;Vt<Dt;++Vt){let zn=Vt*ae-bt,pr=I*fe+k*Tt+A*Vt,to=R*(G-1-st)+P*(W-1-zn)+L*ue;for(let Br=0;Br<ge;++Br){let us=ue*ge+Br,sn=x[pr+us],vr=F[to+Br];Mt+=sn*vr}}}h[g*fe+b*ve+T*Q+ue]=Mt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}var A$={kernelName:Dm,backendName:"cpu",kernelFunc:gne};function bne(r){let{inputs:t,backend:e}=r,{x:n}=t,o=y.sizeFromShape(n.shape),s=e.data.get(n.dataId).values,a=xe([o,o],n.dtype),i=a.values;for(let l=0;l<s.length;l++)i[l*o+l]=s[l];let u=[...n.shape,...n.shape];return e.makeTensorInfo(u,a.dtype,a.values)}var w$={kernelName:Fm,backendName:"cpu",kernelFunc:bne};var N$={kernelName:Lu,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=e,u=t,l=u.data.get(n.dataId).values,p=n.shape.length,m=u.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:b,outWidth:T,padInfo:x,strideHeight:I,strideWidth:k,filterHeight:A,filterWidth:F,dilationHeight:R,dilationWidth:P,outShape:L}=C.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),O=y.sizeFromShape(L),G=L.length,W=y.getArrayFromDType(n.dtype,O);for(let V=0;V<d;++V)for(let q=0;q<b;++q){let Z=q*I-x.top;for(let j=0;j<T;++j){let X=j*k-x.left;for(let se=0;se<g;++se){let ae=Number.MIN_SAFE_INTEGER;for(let oe=0;oe<A;++oe){let ge=Z+oe*R;if(ge>=0&&ge<f)for(let fe=0;fe<F;++fe){let ue=X+fe*P;if(ue>=0&&ue<h){let ve=y.locToIndex([V,ge,ue,se],p,y.computeStrides(n.shape)),De=y.locToIndex([oe,fe,se],c,y.computeStrides(o.shape)),Re=l[ve]+m[De];Re>ae&&(ae=Re)}}}let pe=y.locToIndex([V,q,j,se],G,y.computeStrides(L));W[pe]=ae}}}return{dataId:u.write(y.toTypedArray(W,n.dtype),L,n.dtype),shape:L,dtype:n.dtype}}};var D$={kernelName:Jf,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=e,l=t,p=y.toNestedArray(n.shape,l.data.get(n.dataId).values),m=y.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:A,dilationHeight:F,dilationWidth:R,outShape:P}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);y.assert(s.rank===P.length,()=>`Error in ${Jf}, dy must have the same rank as output ${P.length}, but got ${s.rank}`);let L=y.toNestedArray(P,l.data.get(s.dataId).values),O=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let W=0;W<c;++W)for(let H=0;H<g;++H){let V=H*x-T.top;for(let q=0;q<b;++q){let Z=q*I-T.left;for(let j=0;j<h;++j){let X=Number.MIN_SAFE_INTEGER,se=0,ae=0;for(let pe=0;pe<k;++pe){let oe=V+pe*F;if(oe>=0&&oe<d)for(let ge=0;ge<A;++ge){let fe=Z+ge*R;if(fe>=0&&fe<f){let ue=p[W][oe][fe][j]+m[pe][ge][j];ue>X&&(X=ue,se=pe,ae=ge)}}}O[se][ae][j]+=L[W][H][q][j]}}}return{dataId:l.write(y.toTypedArray(O,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var F$={kernelName:Qf,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=e,l=t,p=y.toNestedArray(n.shape,l.data.get(n.dataId).values),m=y.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:A,dilationHeight:F,dilationWidth:R,outShape:P}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);y.assert(s.rank===P.length,()=>`Error in ${Qf}, dy must have the same rank as output ${P.length}, but got ${s.rank}`);let L=y.toNestedArray(P,l.data.get(s.dataId).values),O=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let W=0;W<c;++W)for(let H=0;H<g;++H){let V=H*x-T.top;for(let q=0;q<b;++q){let Z=q*I-T.left;for(let j=0;j<h;++j){let X=Number.MIN_SAFE_INTEGER,se=V<0?0:V,ae=Z<0?0:Z;for(let pe=0;pe<k;++pe){let oe=V+pe*F;if(oe>=0&&oe<d)for(let ge=0;ge<A;++ge){let fe=Z+ge*R;if(fe>=0&&fe<f){let ue=p[W][oe][fe][j]+m[pe][ge][j];ue>X&&(X=ue,se=oe,ae=fe)}}}O[W][se][ae][j]+=L[W][H][q][j]}}}return{dataId:l.write(y.toTypedArray(O,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function yu(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"sum");let i;o.dtype==="bool"?i=Xs({inputs:{x:o},backend:e,attrs:{dtype:"int32"}}):i=jr({inputs:{x:o},backend:e});let u=i.shape.length,l=y.parseAxisParam(s,i.shape),p=C.getAxesPermutation(l,u),m=l,c=i;p!=null&&(c=Yt({inputs:{x:i},backend:e,attrs:{perm:p}}),m=C.getInnerMostAxes(m.length,u)),C.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=C.computeOutAndReduceShapes(c.shape,m),h=C.upcastType(c.dtype,"int32"),g=ef(e,d,h),b=y.sizeFromShape(f),T=e.data.get(g.dataId).values,x=e.data.get(c.dataId).values;for(let I=0;I<T.length;++I){let k=I*b,A=0;for(let F=0;F<b;++F)A+=x[k+F];T[I]=A}if(a){let I=C.expandShapeToKeepDim(g.shape,l),k=g;g=et({inputs:{x:g},backend:e,attrs:{shape:I}}),e.disposeIntermediateTensorInfo(k)}return e.disposeIntermediateTensorInfo(i),p!=null&&e.disposeIntermediateTensorInfo(c),g}var R$={kernelName:Ho,backendName:"cpu",kernelFunc:yu};function yne(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:b,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(b)?x=s[g]:(x=Yt({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);y.arraysEqual(x.shape,I)||(x=et({inputs:{x},backend:e,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=$l({inputs:{a:x,b:c},backend:e}),f.push(c))}h<m-1&&(l[h]>=0&&(c=yu({inputs:{x:c},backend:e,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeIntermediateTensorInfo(h);return c}var P$={kernelName:_u,backendName:"cpu",kernelFunc:yne};function Tne(r){let{inputs:t,backend:e}=r,{dy:n,y:o}=t;te([n,o],"eluGrad");let s=new Float32Array(y.sizeFromShape(o.shape)),a=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values;for(let u=0;u<a.length;++u){let l=a[u];l>=1?s[u]=i[u]:s[u]=i[u]*(l+1)}return e.makeTensorInfo(o.shape,"float32",s)}var M$={kernelName:Rm,backendName:"cpu",kernelFunc:Tne};var xne=C.ERF_P,Ine=C.ERF_A1,Cne=C.ERF_A2,kne=C.ERF_A3,Sne=C.ERF_A4,vne=C.ERF_A5,Ane=Pe(Gi,r=>{let t=Math.sign(r),e=Math.abs(r),n=1/(1+xne*e);return t*(1-((((vne*n+Sne)*n+kne)*n+Cne)*n+Ine)*n*Math.exp(-e*e))}),E$={kernelName:Gi,backendName:"cpu",kernelFunc:Ane};function pf(r){let{inputs:t,backend:e,attrs:n}=r,{input:o}=t,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),et({inputs:{x:o},backend:e,attrs:{shape:i}})}var L$={kernelName:fs,backendName:"cpu",kernelFunc:pf};var wne=ot((r,t)=>r/t),Qh=ut(bo,wne),Jh={kernelName:bo,backendName:"cpu",kernelFunc:Qh};function Ax(r,t,e){let n=r.shape,o=n[0],s=n[1],a=e.data.get(r.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[o,s],p=y.sizeFromShape(l),m=y.getTypedArrayFromDType("float32",p),c=y.getTypedArrayFromDType("float32",p);for(let g=0;g<o;g++){let b=Qs({inputs:{x:i},backend:e,attrs:{begin:[g,0],size:[1,s]}}),T=Qs({inputs:{x:u},backend:e,attrs:{begin:[g,0],size:[1,s]}}),x=Sr({inputs:{real:b,imag:T},backend:e}),{real:I,imag:k}=Nne(x,t,e),A=C.mergeRealAndImagArrays(I,k);for(let F=0;F<s;F++){let R=C.getComplexWithIndex(A,F);m[g*s+F]=R.real,c[g*s+F]=R.imag}e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(x)}let d=e.makeTensorInfo(l,"float32",m),f=e.makeTensorInfo(l,"float32",c),h=Sr({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),h}function Nne(r,t,e){let n=y.sizeFromShape(r.shape),o=e.data.get(r.dataId),s=e.data.get(o.complexTensorInfos.real.dataId).values,a=e.data.get(o.complexTensorInfos.imag.dataId).values;if(Dne(n)){let i=IN(s,a,n,t,e),u=[r.shape[0],r.shape[1]];if(t){let l=e.makeTensorInfo(u,"float32",i.real),p=e.makeTensorInfo(u,"float32",i.imag),m=e.makeTensorInfo([],"float32",y.createScalarValue(n,"float32")),c=jr({inputs:{x:m},backend:e}),d=Jh.kernelFunc({inputs:{a:l,b:m},backend:e}),f=Jh.kernelFunc({inputs:{a:p,b:c},backend:e}),h=e.data.get(d.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return i}else{let i=C.mergeRealAndImagArrays(s,a),u=Fne(i,n,t);return C.splitRealAndImagArrays(u)}}function Dne(r){return(r&r-1)===0}function IN(r,t,e,n,o){if(e===1)return{real:r,imag:t};let s=C.mergeRealAndImagArrays(r,t),a=e/2,i=C.complexWithEvenIndex(s),u=i.real,l=i.imag,p=[u.length],m=o.makeTensorInfo(p,"float32",u),c=o.makeTensorInfo(p,"float32",l),d=Sr({inputs:{real:m,imag:c},backend:o}),f=C.complexWithOddIndex(s),h=f.real,g=f.imag,b=[h.length],T=o.makeTensorInfo(b,"float32",h),x=o.makeTensorInfo(b,"float32",g),I=Sr({inputs:{real:T,imag:x},backend:o}),k=IN(u,l,a,n,o),A=k.real,F=k.imag,R=[A.length],P=o.makeTensorInfo(R,"float32",A),L=o.makeTensorInfo(R,"float32",F),O=Sr({inputs:{real:P,imag:L},backend:o}),G=IN(h,g,a,n,o),W=G.real,H=G.imag,V=[W.length],q=o.makeTensorInfo(V,"float32",W),Z=o.makeTensorInfo(V,"float32",H),j=Sr({inputs:{real:q,imag:Z},backend:o}),X=C.exponents(e,n),se=[X.real.length],ae=o.makeTensorInfo(se,"float32",X.real),pe=o.makeTensorInfo(se,"float32",X.imag),oe=Sr({inputs:{real:ae,imag:pe},backend:o}),ge=$l({inputs:{a:oe,b:j},backend:o}),fe=Ni({inputs:{a:O,b:ge},backend:o}),ue=Yh({inputs:{a:O,b:ge},backend:o}),ve=js({inputs:{input:fe},backend:o}),De=js({inputs:{input:ue},backend:o}),Re=Di({inputs:{input:fe},backend:o}),je=Di({inputs:{input:ue},backend:o}),Q=wp({inputs:[ve,De],backend:o,attrs:{axis:0}}),bt=wp({inputs:[Re,je],backend:o,attrs:{axis:0}}),lt=o.data.get(Q.dataId).values,Dt=o.data.get(bt.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(L),o.disposeIntermediateTensorInfo(O),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(pe),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(ve),o.disposeIntermediateTensorInfo(Re),o.disposeIntermediateTensorInfo(De),o.disposeIntermediateTensorInfo(je),o.disposeIntermediateTensorInfo(Q),o.disposeIntermediateTensorInfo(bt),{real:lt,imag:Dt}}function Fne(r,t,e){let n=new Float32Array(t*2);for(let o=0;o<t;o++){let s=0,a=0;for(let i=0;i<t;i++){let u=C.exponent(o*i,t,e),l=C.getComplexWithIndex(r,i);s+=l.real*u.real-l.imag*u.imag,a+=l.real*u.imag+l.imag*u.real}e&&(s/=t,a/=t),C.assignToTypedArray(n,s,a,o)}return n}function Rne(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=et({inputs:{x:n},backend:e,attrs:{shape:[a,s]}}),u=Ax(i,!1,e),l=et({inputs:{x:u},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),l}var _$={kernelName:Pm,backendName:"cpu",kernelFunc:Rne};function eg(r){let{backend:t,attrs:e}=r,{shape:n,value:o,dtype:s}=e,a=s||y.inferDtype(o),i=y.getArrayFromDType(a,y.sizeFromShape(n));return Pne(i,o,a),t.makeTensorInfo(n,a,i)}var $$={kernelName:ci,backendName:"cpu",kernelFunc:eg};function Pne(r,t,e){r.fill(t)}var B$={kernelName:ga,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,o=e,s=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[a,i,u,l]=n.shape,p=o.data.get(n.dataId).values;for(let c=0;c<a;c++){let d=c*u*i*l;for(let f=0;f<i;f++){let h=f*(u*l);for(let g=0;g<u;g++){let b=g*l;for(let T=0;T<l;T++){let x=Math.round(u-g-1),I=d+h+b+T,k=p[I];if(x>=0&&x<u){let A=x*l,F=d+h+A+T;k=p[F]}s[I]=k}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Mne=ot((r,t)=>Math.floor(r/t)),Ene=ut(Io,Mne,null,"int32"),O$={kernelName:Io,backendName:"cpu",kernelFunc:Ene};function Lne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=TN({inputs:{x:o,filter:s},backend:e,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(a){let g=h;if(p==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){let b=et({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});h=Ni({inputs:{a:h,b},backend:e}),e.disposeIntermediateTensorInfo(b)}else h=Ni({inputs:{a:h,b:a},backend:e});e.disposeIntermediateTensorInfo(g)}if(d){let g=h;if(p==="NCHW"&&d==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let b=et({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});h=Wl(e,h,d,b,f),e.disposeIntermediateTensorInfo(b)}else h=Wl(e,h,d,i,f);e.disposeIntermediateTensorInfo(g)}return h}var z$={kernelName:Ns,backendName:"cpu",kernelFunc:Lne};function _ne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=xN({inputs:{x:o,filter:s},backend:e,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=Ni({inputs:{a:h,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Wl(e,h,d,i,f),e.disposeIntermediateTensorInfo(g)}return h}var G$={kernelName:Ds,backendName:"cpu",kernelFunc:_ne};function $ne(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=y.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[u,l,p,m]=C.prepareAndValidate(n,o);if(l===0)return e.makeTensorInfo(u,n.dtype,[]);let c=e.data.get(o.dataId).values,d=e.bufferSync(n),f=cx(c,d,n.dtype,l,i,p,m,n.shape,s);return e.makeTensorInfo(u,n.dtype,f.values)}var U$={kernelName:ba,backendName:"cpu",kernelFunc:$ne};function Bne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n;te([o,s],"gatherV2");let u=y.parseAxisParam(a,o.shape)[0],l=e.data.get(s.dataId).values,p=o.shape[u];for(let I=0;I<l.length;++I){let k=l[I];y.assert(k<=p-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${p-1}]`)}let m=i;i==null&&(m=0);let c=y.sizeFromShape(s.shape),d=C.segment_util.collectGatherOpShapeInfo(o,s,u,m),f=et({inputs:{x:o},backend:e,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=et({inputs:{x:s},backend:e,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],b=e.bufferSync(h),T=e.bufferSync(f),x=dx(T,b,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.makeTensorInfo(d.outputShape,x.dtype,x.values)}var W$={kernelName:hs,backendName:"cpu",kernelFunc:Bne};function One(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=et({inputs:{x:n},backend:e,attrs:{shape:[a,s]}}),u=Ax(i,!0,e),l=et({inputs:{x:u},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),l}var K$={kernelName:Mm,backendName:"cpu",kernelFunc:One};var zne=Pe(Ui,r=>Number.isFinite(r)?1:0,"bool"),V$={kernelName:Ui,backendName:"cpu",kernelFunc:zne};var Gne=Pe(Wi,r=>Math.abs(r)===1/0?1:0,"bool"),H$={kernelName:Wi,backendName:"cpu",kernelFunc:Gne};var Une=Pe(Ta,r=>Number.isNaN(r)?1:0,"bool"),q$={kernelName:Ta,backendName:"cpu",kernelFunc:Une};function Wne(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,a=fx(n,o,s);return t.makeTensorInfo([a.length],"float32",a)}var j$={kernelName:Em,backendName:"cpu",kernelFunc:Wne};var Kne=Pe(Ki,r=>Math.log1p(r)),X$={kernelName:Ki,backendName:"cpu",kernelFunc:Kne};var Vne=ot((r,t)=>r&&t),Hne=ut(Ca,Vne,null,"bool"),Y$={kernelName:Ca,backendName:"cpu",kernelFunc:Hne};var qne=Pe(ka,r=>r?0:1,"bool"),Z$={kernelName:ka,backendName:"cpu",kernelFunc:qne};var jne=ot((r,t)=>r||t),Xne=ut(Vi,jne,null,"bool"),Q$={kernelName:Vi,backendName:"cpu",kernelFunc:Xne};function Yne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:u}=n;te(o,"LRN");let l=o.shape[3],p=l-1,m=e.data.get(o.dataId).values,c=y.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%l,b=h-g+Math.max(0,g-s),T=h-g+Math.min(g+s,p),x=0;for(;b<=T;b++){let I=m[b];x+=I*I}return x}for(let h=0;h<c;h++){let g=f(h),b=m[h]*Math.pow(a+i*g,-u);d[h]=b}return e.makeTensorInfo(o.shape,o.dtype,d)}var J$={kernelName:Bu,backendName:"cpu",kernelFunc:Yne};function Zne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:u,alpha:l,beta:p}=n;te(a,"LRNGrad");let m=y.sizeFromShape(a.shape),c=a.shape[3],d=e.data.get(a.dataId).values,f=e.data.get(o.dataId).values,h=e.data.get(s.dataId).values,g=new Float32Array(m),b=m;for(let T=0;T<b;T++){let x=T%c,I=T-x+Math.max(0,x-i),k=T-x+Math.min(c,x+i+1),A=0;for(let F=I;F<k;F++)A+=Math.pow(f[F],2);A=l*A+u;for(let F=I;F<k;F++){let R=-2*l*p*f[F]*h[T]/A;T===F&&(R+=Math.pow(A,-p)),R*=d[T],g[F]+=R}}return e.makeTensorInfo(a.shape,o.dtype,g)}var eB={kernelName:Lm,backendName:"cpu",kernelFunc:Zne};function CN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n,i=e,u=o.shape,l=u.length,p=y.parseAxisParam(s,u),m=p,c=C.getAxesPermutation(m,l),d=i.data.get(o.dataId).values;if(c!=null){let I=new Array(l);for(let k=0;k<I.length;k++)I[k]=u[c[k]];d=nf(d,u,o.dtype,c,I),m=C.getInnerMostAxes(m.length,l),u=I}te(o,"max"),C.assertAxesAreInnerMostDims("max",m,l);let[f,h]=C.computeOutAndReduceShapes(u,m),g=y.sizeFromShape(h),b=hx(d,g,f,o.dtype),T=i.write(b,f,o.dtype),x=f;return a&&(x=C.expandShapeToKeepDim(f,p)),{dataId:T,shape:x,dtype:o.dtype}}var tB={kernelName:Ao,backendName:"cpu",kernelFunc:CN};function Qne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;te(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u),m;if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))m=jr({inputs:{x:o},backend:e});else{let c=e.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=uf(c,o.shape,o.dtype,d,p,"max");m=e.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var rB={kernelName:No,backendName:"cpu",kernelFunc:Qne};function Jne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;te(o,"maxPool3d");let p=C.computePool3DInfo(o.shape,s,a,1,i,u,l),m=e.data.get(o.dataId).values,c=vx(m,o.shape,o.dtype,y.computeStrides(o.shape),p,"max");return e.makeTensorInfo(c.shape,"float32",c.values)}var nB={kernelName:Ou,backendName:"cpu",kernelFunc:Jne};function eoe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;te([o,s],"maxPool3DGrad");let p=C.computePool3DInfo(s.shape,a,i,1,u,l),m=e.bufferSync(s),c=Q_(m,p),d=p.strideDepth,f=p.strideHeight,h=p.strideWidth,g=p.dilationDepth,b=p.dilationHeight,T=p.dilationWidth,x=p.effectiveFilterDepth,I=p.effectiveFilterHeight,k=p.effectiveFilterWidth,A=x-1-p.padInfo.front,F=k-1-p.padInfo.left,R=I-1-p.padInfo.top,P=xe(s.shape,"float32"),L=e.bufferSync(o);for(let O=0;O<p.batchSize;++O)for(let G=0;G<p.inChannels;++G)for(let W=0;W<p.inDepth;++W)for(let H=0;H<p.inHeight;++H)for(let V=0;V<p.inWidth;++V){let q=W-A,Z=H-R,j=V-F,X=0;for(let se=0;se<x;se+=g){let ae=(q+se)/d;if(!(ae<0||ae>=p.outDepth||Math.floor(ae)!==ae))for(let pe=0;pe<I;pe+=b){let oe=(Z+pe)/f;if(!(oe<0||oe>=p.outHeight||Math.floor(oe)!==oe))for(let ge=0;ge<k;ge+=T){let fe=(j+ge)/h;if(fe<0||fe>=p.outWidth||Math.floor(fe)!==fe)continue;let ue=x*I*k-1-c.get(O,ae,oe,fe,G),ve=se*I*k+pe*k+ge,De=ue===ve?1:0;if(De===0)continue;X+=L.get(O,ae,oe,fe,G)*De}}}P.set(X,O,W,H,V,G)}return e.makeTensorInfo(P.shape,P.dtype,P.values)}var oB={kernelName:$m,backendName:"cpu",kernelFunc:eoe};function toe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:a}=t,i=s;te([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,l,1,p,m),d=e.data.get(i.dataId).values,f=xe(c.outShape,i.dtype,Sx(d,i.shape,i.dtype,c).values),h=c.strideHeight,g=c.strideWidth,b=c.dilationHeight,T=c.dilationWidth,x=c.effectiveFilterHeight,I=c.effectiveFilterWidth,k=I-1-c.padInfo.left,A=x-1-c.padInfo.top,F=xe(i.shape,"float32"),R=e.data.get(o.dataId).values,P=xe(o.shape,"float32",R);for(let L=0;L<c.batchSize;++L)for(let O=0;O<c.inChannels;++O)for(let G=0;G<c.inHeight;++G)for(let W=0;W<c.inWidth;++W){let H=G-A,V=W-k,q=0;for(let Z=0;Z<x;Z+=b){let j=(H+Z)/h;if(!(j<0||j>=c.outHeight||Math.floor(j)!==j))for(let X=0;X<I;X+=T){let se=(V+X)/g;if(se<0||se>=c.outWidth||Math.floor(se)!==se)continue;let ae=x*I-1-f.get(L,j,se,O),pe=Z*I+X,oe=ae===pe?1:0;if(oe===0)continue;q+=P.get(L,j,se,O)*oe}}F.set(q,L,G,W,O)}return e.makeTensorInfo(F.shape,F.dtype,F.values)}var sB={kernelName:_m,backendName:"cpu",kernelFunc:toe};function aB(r,t,e,n,o){let s=y.computeStrides(t),a=uf(r,t,e,s,o,"max"),i=Sx(r,t,e,o,!0,n);return[a.values,i.values]}var iB={kernelName:Bm,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=t,u=e;te(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,p=C.computePool2DInfo(n.shape,o,s,[1,1],a),[m,c]=aB(l,n.shape,n.dtype,i,p),d=u.write(m,p.outShape,n.dtype),f=u.write(c,p.outShape,n.dtype);return[{dataId:d,shape:p.outShape,dtype:n.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};function roe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=y.parseAxisParam(s,o.shape),l=C.computeOutAndReduceShapes(o.shape,i)[1],p=y.sizeFromShape(l),m=[],c=e.makeTensorInfo([],"float32",new Float32Array([p]));m.push(c);let d=Xs({inputs:{x:o},backend:e,attrs:{dtype:"float32"}});m.push(d);let f=Qh({inputs:{a:d,b:c},backend:e});m.push(f);let h=yu({inputs:{x:f},backend:e,attrs:{axis:s,keepDims:a}});return m.forEach(g=>e.disposeIntermediateTensorInfo(g)),h}var uB={kernelName:Do,backendName:"cpu",kernelFunc:roe};function noe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"min");let i=y.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Yt({inputs:{x:o},backend:e,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),p.dtype),h=e.data.get(p.dataId).values;for(let b=0;b<f.length;++b){let T=b*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];(Number.isNaN(k)||k<x)&&(x=k)}f[b]=x}l!=null&&e.disposeIntermediateTensorInfo(p);let g=e.makeTensorInfo(m,p.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),T=et({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),T}return g}var pB={kernelName:Fo,backendName:"cpu",kernelFunc:noe};function ooe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,mode:a}=n;te(o,"mirrorPad");let i=s.map((x,I)=>x[0]+o.shape[I]+x[1]),u=s.map(x=>x[0]),l=s.map((x,I)=>x[0]+o.shape[I]),p=a==="reflect"?0:1,m=e.data.get(o.dataId).values,c=o.shape.length,d=y.computeStrides(o.shape),f=y.sizeFromShape(i),h=i.length,g=y.computeStrides(i),b=y.getTypedArrayFromDType(o.dtype,f);for(let x=0;x<f;x++){let I=y.indexToLoc(x,h,g);for(let A=0;A<h;A++)I[A]<u[A]?I[A]=u[A]*2-I[A]-p:I[A]>=l[A]&&(I[A]=(l[A]-1)*2-I[A]+p);I=I.map((A,F)=>A-u[F]);let k=y.locToIndex(I,c,d);b[x]=m[k]}return{dataId:e.write(b,i,o.dtype),shape:i,dtype:o.dtype}}var lB={kernelName:Po,backendName:"cpu",kernelFunc:ooe};var soe=ot((r,t)=>{let e=r%t;return r<0&&t<0||r>=0&&t>=0?e:(e+t)%t}),aoe=ut(Hi,soe),mB={kernelName:Hi,backendName:"cpu",kernelFunc:aoe};var dB=hm(Th());function kN(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let u=y.parseAxisParam([i],o.shape),l=CN({inputs:{x:o},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),p=C.expandShapeToKeepDim(l.shape,u),m=et({inputs:{x:l},backend:e,attrs:{shape:p}}),c=Yh({inputs:{a:o,b:m},backend:e}),d=Xw({inputs:{x:c},backend:e}),f=yu({inputs:{x:d},backend:e,attrs:{axis:u,keepDims:!1}}),h=et({inputs:{x:f},backend:e,attrs:{shape:p}}),g=Qh({inputs:{a:d,b:h},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),g}var cB={kernelName:qo,backendName:"cpu",kernelFunc:kN};function ioe(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n;te(o,"multinomial");let u=i?o:kN({inputs:{logits:o},backend:e,attrs:{dim:-1}}),l=u.shape[0],p=u.shape[1],m=e.data.get(u.dataId).values,c=[l,s],d=y.makeZerosTypedArray(y.sizeFromShape(c),"int32");for(let f=0;f<l;++f){let h=f*p,g=new Float32Array(p-1);g[0]=m[h];for(let x=1;x<g.length;++x)g[x]=g[x-1]+m[h+x];let b=dB.alea(a.toString()),T=f*s;for(let x=0;x<s;++x){let I=b();d[T+x]=g.length;for(let k=0;k<g.length;k++)if(I<g[k]){d[T+x]=k;break}}}return i||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(c,"int32",d)}var fB={kernelName:Om,backendName:"cpu",kernelFunc:ioe};var uoe=xr.nonMaxSuppressionV3Impl;function poe(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n;te(o,"NonMaxSuppression");let l=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,{selectedIndices:m}=uoe(l,p,a,i,u);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var hB={kernelName:va,backendName:"cpu",kernelFunc:poe};var loe=xr.nonMaxSuppressionV4Impl;function moe(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n;te(o,"NonMaxSuppressionPadded");let p=e.data.get(o.dataId).values,m=e.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=loe(p,m,a,i,u,l);return[e.makeTensorInfo([c.length],"int32",new Int32Array(c)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}var gB={kernelName:qi,backendName:"cpu",kernelFunc:moe};var coe=xr.nonMaxSuppressionV5Impl;function doe(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n;te(o,"NonMaxSuppressionWithScore");let p=e.data.get(o.dataId).values,m=e.data.get(s.dataId).values,c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:b}=coe(p,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var bB={kernelName:Aa,backendName:"cpu",kernelFunc:doe};function foe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:u}=n;te(o,"oneHot");let l=y.sizeFromShape(o.shape),p=new Float32Array(l*a);p.fill(u);let m=e.data.get(o.dataId).values;for(let c=0;c<l;++c)m[c]>=0&&m[c]<a&&(p[c*a+m[c]]=i);return e.makeTensorInfo([...o.shape,a],s,p)}var yB={kernelName:wa,backendName:"cpu",kernelFunc:foe};function tg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=js({inputs:{input:n},backend:e}),s=tg({inputs:{x:o},backend:e}),a=Di({inputs:{input:n},backend:e}),i=tg({inputs:{x:a},backend:e}),u=Sr({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return eg({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var TB={kernelName:vs,backendName:"cpu",kernelFunc:tg};function xB(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=js({inputs:{input:n},backend:e}),s=xB({inputs:{x:o},backend:e}),a=Di({inputs:{input:n},backend:e}),i=tg({inputs:{x:a},backend:e}),u=Sr({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return eg({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var IB={kernelName:bs,backendName:"cpu",kernelFunc:xB};function SN(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return pf({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(p=>{let m=pf({inputs:{input:p},backend:e,attrs:{dim:o}});return i.push(m),m}),l=wp({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(p=>e.disposeIntermediateTensorInfo(p)),l}var CB={kernelName:ys,backendName:"cpu",kernelFunc:SN};function hoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;te(o,"pad");let i=s.map((T,x)=>T[0]+o.shape[x]+T[1]),u=s.map(T=>T[0]),l=e.data.get(o.dataId).values,p=y.sizeFromShape(o.shape),m=o.shape.length,c=y.computeStrides(o.shape),d=y.sizeFromShape(i),f=i.length,h=y.computeStrides(i),g=y.getTypedArrayFromDType(o.dtype,d);a!==0&&g.fill(a);for(let T=0;T<p;T++){let I=y.indexToLoc(T,m,c).map((A,F)=>A+u[F]),k=y.locToIndex(I,f,h);g[k]=l[T]}return{dataId:e.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var wx={kernelName:Eo,backendName:"cpu",kernelFunc:hoe};var goe=ot((r,t)=>Math.pow(r,t)),boe=ut(Lo,goe),kB={kernelName:Lo,backendName:"cpu",kernelFunc:boe};function yoe(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=t,{outputRaggedRank:i}=n,u=o.map(b=>e.data.get(b.dataId).values),l=o.map(b=>b.shape),p=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,[c,d,f]=gx(u,l,p,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var SB={kernelName:zm,backendName:"cpu",kernelFunc:yoe};function Toe(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=n,l=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,c=i.map(g=>e.data.get(g.dataId).values),d=i.map(g=>g.shape),[f,h]=bx(l,o.shape,p,s.shape,s.dtype,m,a.shape,c,d,u);return e.makeTensorInfo(f,s.dtype,h)}var vB={kernelName:Gm,backendName:"cpu",kernelFunc:Toe};function xoe(r){let{backend:t,attrs:e}=r,{start:n,stop:o,dtype:s,step:a}=e,i=Bl(n,o,a,s);return t.makeTensorInfo([i.length],s,i)}var AB={kernelName:di,backendName:"cpu",kernelFunc:xoe};var Ioe=Pe(Na,r=>1/r),wB={kernelName:Na,backendName:"cpu",kernelFunc:Ioe};function Coe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n;te(o,"resizeBilinear");let u=y.computeStrides(o.shape),[l,p]=i,[m,c,d,f]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(y.sizeFromShape([m,l,p,f])),b=[s&&l>1?c-1:c,s&&p>1?d-1:d],T=[s&&l>1?l-1:l,s&&p>1?p-1:p],x=0,I=b[0]/T[0],k=b[1]/T[1];for(let A=0;A<m;A++)for(let F=0;F<l;F++){let R;a?R=I*(F+.5)-.5:R=I*F;let P=Math.max(0,Math.floor(R)),L=R-P,O=Math.min(c-1,Math.ceil(R)),G=A*u[0]+P*u[1],W=A*u[0]+O*u[1];for(let H=0;H<p;H++){let V;a?V=k*(H+.5)-.5:V=k*H;let q=Math.max(0,Math.floor(V)),Z=V-q,j=Math.min(d-1,Math.ceil(V)),X=G+q*u[2],se=W+q*u[2],ae=G+j*u[2],pe=W+j*u[2];for(let oe=0;oe<f;oe++){let ge=h[X+oe],fe=h[se+oe],ue=h[ae+oe],ve=h[pe+oe],De=ge+(ue-ge)*Z,Re=fe+(ve-fe)*Z,je=De+(Re-De)*L;g[x++]=je}}}return e.makeTensorInfo([m,l,p,f],"float32",g)}var NB={kernelName:zo,backendName:"cpu",kernelFunc:Coe};function koe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n;te([s,o],"resizeBilinearGrad");let i=y.computeStrides(o.shape),[u,l,p,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(u*l*p*m),h=[a&&c>1?l-1:l,a&&d>1?p-1:p],g=[a&&c>1?c-1:c,a&&d>1?d-1:d],b=h[0]/g[0],T=h[1]/g[1],x=e.data.get(s.dataId).values,I=0;for(let k=0;k<u;k++){let A=k*i[0];for(let F=0;F<c;F++){let R=F*b,P=Math.floor(R),L=Math.min(Math.ceil(R),l-1),O=A+P*i[1],G=A+L*i[1],W=R-P,H=1-W;for(let V=0;V<d;V++){let q=V*T,Z=Math.floor(q),j=Math.min(Math.ceil(q),p-1),X=q-Z,se=1-X,ae=O+Z*i[2],pe=O+j*i[2],oe=G+Z*i[2],ge=G+j*i[2],fe=H*se,ue=H*X,ve=W*se,De=W*X;for(let Re=0;Re<m;Re++){let je=x[I++];f[ae+Re]+=je*fe,f[pe+Re]+=je*ue,f[oe+Re]+=je*ve,f[ge+Re]+=je*De}}}}return e.makeTensorInfo([u,p,l,m],"float32",f)}var DB={kernelName:Wm,backendName:"cpu",kernelFunc:koe};function Soe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n;te(o,"resizeNearestNeighbor");let u=y.computeStrides(o.shape),[l,p]=i,[m,c,d,f]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(m*l*p*f),b=[s&&l>1?c-1:c,s&&p>1?d-1:d],T=[s&&l>1?l-1:l,s&&p>1?p-1:p],x=b[0]/T[0],I=b[1]/T[1],k=0;for(let A=0;A<m;A++){let F=A*u[0];for(let R=0;R<l;R++){let P=a?x*(R+.5):x*R,L=Math.min(c-1,s?Math.round(P):Math.floor(P));a&&(L=Math.max(0,L));let O=F+L*u[1];for(let G=0;G<p;G++){let W=a?I*(G+.5):I*G,H=Math.min(d-1,s?Math.round(W):Math.floor(W));a&&(H=Math.max(0,H));let V=O+H*u[2];for(let q=0;q<f;q++){let Z=h[V+q];g[k++]=Z}}}}return e.makeTensorInfo([m,l,p,f],o.dtype,g)}var FB={kernelName:Oo,backendName:"cpu",kernelFunc:Soe};function voe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n;te([s,o],"resizeNearestNeighborGrad");let i=y.computeStrides(o.shape),u=y.computeStrides(s.shape),[l,p,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(l*p*m*c),g=e.data.get(s.dataId).values,b=[a&&d>1?p-1:p,a&&f>1?m-1:m],T=[a&&d>1?d-1:d,a&&f>1?f-1:f],x=b[0]/T[0],I=b[1]/T[1],k=1/x,A=1/I,F=Math.ceil(k)*2+2,R=Math.ceil(A)*2+2;for(let P=0;P<l;P++){let L=P*i[0];for(let O=0;O<p;O++){let G=L+O*i[1],W=Math.floor(O*k),H=Math.floor(W-F/2);for(let V=0;V<m;V++){let q=G+V*i[2],Z=Math.floor(V*A),j=Math.floor(Z-R/2);for(let X=0;X<c;X++){let se=0;for(let ae=0;ae<F;ae++){let pe=ae+H;if(pe<0||pe>=d)continue;let oe=L+pe*u[1],ge=pe*x,fe=Math.min(p-1,a?Math.round(ge):Math.floor(ge));if(O===fe)for(let ue=0;ue<R;ue++){let ve=ue+j;if(ve<0||ve>=f)continue;let De=oe+ve*u[2],Re=ve*I,je=Math.min(m-1,a?Math.round(Re):Math.floor(Re));V===je&&(se+=g[De+X])}}h[q+X]=se}}}}return e.makeTensorInfo(o.shape,o.dtype,h)}var RB={kernelName:Um,backendName:"cpu",kernelFunc:voe};function Aoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n;te(o,"reverse");let a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return jr({inputs:{x:o},backend:e});let u=new ht(o.shape,o.dtype),l=e.bufferSync(o);for(let p=0;p<u.size;p++){let m=u.indexToLoc(p),c=m.slice();i.forEach(d=>c[d]=o.shape[d]-1-c[d]),u.set(l.get(...c),...m)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}var PB={kernelName:Da,backendName:"cpu",kernelFunc:Aoe};var MB={kernelName:$a,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,u=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[l,p,m,c]=n.shape,[d,f]=C.getImageCenter(a,p,m),h=255,g=Math.sin(o),b=Math.cos(o),T=i.data.get(n.dataId).values;for(let I=0;I<l;I++){let k=I*m*p*c;for(let A=0;A<p;A++){let F=A*(m*c);for(let R=0;R<m;R++){let P=R*c;for(let L=0;L<c;L++){let O=[l,A,R,L],G=O[2],W=O[1],H=(G-d)*b-(W-f)*g,V=(G-d)*g+(W-f)*b;H=Math.round(H+d),V=Math.round(V+f);let q=s;if(typeof s!="number"&&(L===3?q=h:q=s[L]),H>=0&&H<m&&V>=0&&V<p){let j=V*(m*c),X=H*c,se=k+j+X+L;q=T[se]}let Z=k+F+P+L;u[Z]=q}}}}return{dataId:i.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var woe=Pe(Fa,r=>{let t=Math.floor(r);return r-t<.5?Math.floor(r):r-t>.5?Math.ceil(r):t%2===0?t:t+1}),EB={kernelName:Fa,backendName:"cpu",kernelFunc:woe};function Noe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=!0,d=e.bufferSync(o),f=e.bufferSync(s),h=bu(d,f,a,m,l,u,i,p,0,c);return e.makeTensorInfo(a,h.dtype,h.values)}var LB={kernelName:Ra,backendName:"cpu",kernelFunc:Noe};function Doe(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<t?e=o+1:n=o;return n}function Foe(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<=t?e=o+1:n=o;return n}function _B(r,t,e,n,o,s){let a=y.getArrayFromDType("int32",e*o);for(let i=0;i<e;++i){let u=r.slice(i*n,(i+1)*n),l=i*o;for(let p=0;p<o;++p)a[l+p]=s==="left"?Doe(u,t[p+l]):Foe(u,t[p+l])}return a}function Roe(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,l=_B(i,u,o.shape[0],o.shape[1],s.shape[1],a);return e.makeTensorInfo(s.shape,"int32",l)}var $B={kernelName:Km,backendName:"cpu",kernelFunc:Roe};function Poe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t;te([n,o,s],"select");let a=n.shape.length,i=e.data.get(n.dataId).values,u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,p=Et(o.dtype,s.dtype),m=y.makeZerosTypedArray(y.sizeFromShape(o.shape),p),c=0,d=a===0||a>1||o.shape.length===1?1:y.sizeFromShape(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let h=0;h<d;h++)i[f]===1?m[c++]=u[f]:m[c++]=l[f];return e.makeTensorInfo(o.shape,p,m)}var BB={kernelName:xs,backendName:"cpu",kernelFunc:Poe};var Moe=C.SELU_SCALEALPHA,Eoe=C.SELU_SCALE,Loe=Pe(ji,r=>r>=0?Eoe*r:Moe*(Math.exp(r)-1)),OB={kernelName:ji,backendName:"cpu",kernelFunc:Loe};var _oe=Pe(Xi,r=>r<0?-1:r>0?1:0),zB={kernelName:Xi,backendName:"cpu",kernelFunc:_oe};var $oe=Pe(Wo,r=>Math.sin(r)),GB={kernelName:Wo,backendName:"cpu",kernelFunc:$oe};var Boe=Pe(Pa,r=>Math.sinh(r)),UB={kernelName:Pa,backendName:"cpu",kernelFunc:Boe};var Ooe=11920928955078125e-23,WB=Math.log(Ooe)+2,zoe=Pe(Yi,r=>{let t=r>-WB,e=r<WB,n=Math.exp(r),o;return e?o=n:t?o=r:o=Math.log(1+n),o}),KB={kernelName:Yi,backendName:"cpu",kernelFunc:zoe};function Goe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;te([o],"spaceToBatchND");let i=y.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let A=1+s.length;A<o.shape.length;++A)u.push([0,0]);let l=wx.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(l.shape,s,i,!1),m=C.getPermuted(p.length,s.length,!1),c=C.getReshapedPermuted(l.shape,s,i,!1),h=et({inputs:{x:l},backend:e,attrs:{shape:p}}),T=Yt({inputs:{x:h},backend:e,attrs:{perm:m}}),k=et({inputs:{x:T},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(T),k}var VB={kernelName:Cs,backendName:"cpu",kernelFunc:Goe};function Uoe(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=e.data.get(n.dataId).values,u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,p=e.data.get(a.dataId).values[0],[m,c,d,f,h]=yx(i,n.shape,n.dtype,u,o.dtype,l,p);return[e.makeTensorInfo(c,n.dtype,m),e.makeTensorInfo([c[0]],o.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var HB={kernelName:Gu,backendName:"cpu",kernelFunc:Uoe};function Woe(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(e.data.get(o.dataId).values),i=e.data.get(n.dataId).values,u=Array.from(e.data.get(s.dataId).values),[l,p,m]=Tx(i,n.shape,n.dtype,a,u);return[e.makeTensorInfo(p,n.dtype,l),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var qB={kernelName:Zi,backendName:"cpu",kernelFunc:Woe};function Koe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,[l,p]=sf(a,n.shape,n.dtype,i,u,!0);return e.makeTensorInfo(p,n.dtype,l)}var jB={kernelName:Uu,backendName:"cpu",kernelFunc:Koe};function Voe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,[l,p]=sf(a,n.shape,n.dtype,i,u);return e.makeTensorInfo(p,n.dtype,l)}var XB={kernelName:Wu,backendName:"cpu",kernelFunc:Voe};function Hoe(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1,f=e.bufferSync(o),h;switch(s.dtype){case"bool":{let g=e.bufferSync(s),b=Boolean(e.data.get(a.dataId).values[0]);h=bu(f,g,i,c,p,l,u,m,b,d);break}case"float32":{let g=e.bufferSync(s),b=e.data.get(a.dataId).values[0];h=bu(f,g,i,c,p,l,u,m,b,d);break}case"int32":{let g=e.bufferSync(s),b=e.data.get(a.dataId).values[0];h=bu(f,g,i,c,p,l,u,m,b,d);break}case"string":{let g=e.bufferSync(s),b=y.decodeString(e.data.get(a.dataId).values[0]);h=bu(f,g,i,c,p,l,u,m,b,d);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return e.makeTensorInfo(i,h.dtype,h.values)}var YB={kernelName:Ku,backendName:"cpu",kernelFunc:Hoe};function qoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[i]=m;let d=Qs({inputs:{x:o},backend:e,attrs:{begin:l,size:c}});return l[i]+=m,d})}var ZB={kernelName:ks,backendName:"cpu",kernelFunc:qoe};var QB={kernelName:fi,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t;te(e,"square");let o=n.data.get(e.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let u=o[i];s[i]=u*u}return{dataId:n.write(s,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};var joe=Pe(As,(r,t)=>{let e=t;return isNaN(r)?NaN:r>0?1:e.alpha}),JB={kernelName:As,backendName:"cpu",kernelFunc:joe};function Xoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n;te(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=et({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=xt.computeOutShape(T,x,I),F=Qs({inputs:{x:o},backend:e,attrs:{begin:T,size:A}});k=et({inputs:{x:F},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(F)}else{let A=e.bufferSync(o),F=xx(d,A,I,T);k=e.makeTensorInfo(f,F.dtype,F.values)}return k}var eO={kernelName:Ma,backendName:"cpu",kernelFunc:Xoe};function Yoe(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=t,c=e.data.get(p.dataId).values,d=e.data.get(m.dataId).values,[f,h]=zl(c,d,o,s,a,i,u,l);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var tO={kernelName:hi,backendName:"cpu",kernelFunc:Yoe};function Zoe(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values[0],[l,p,m]=Gl(i,u,o),c=p.length;return[e.makeTensorInfo([c,2],"int32",l),e.makeTensorInfo([c],"string",p),e.makeTensorInfo([2],"int32",new Int32Array(m))]}var rO={kernelName:Vu,backendName:"cpu",kernelFunc:Zoe};function Qoe(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=e.data.get(s.dataId).values,i=Ul(a,o);return e.makeTensorInfo(s.shape,"int32",i)}var nO={kernelName:Hu,backendName:"cpu",kernelFunc:Qoe};var Joe=Pe(Ea,r=>Math.tan(r)),oO={kernelName:Ea,backendName:"cpu",kernelFunc:Joe};var ese=Pe(Yo,r=>Math.tanh(r)),sO={kernelName:Yo,backendName:"cpu",kernelFunc:ese};function tse(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;te(o,"tile");let a=Ix(e.bufferSync(o),s);return e.makeTensorInfo(a.shape,a.dtype,a.values)}var aO={kernelName:Dn,backendName:"cpu",kernelFunc:tse};function rse(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n;te(o,"topk");let i=e.data.get(o.dataId).values,[u,l]=Cx(i,o.shape,o.dtype,s,a);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(l.shape,l.dtype,l.values)]}var iO={kernelName:La,backendName:"cpu",kernelFunc:rse};function nse(r){let{inputs:t,attrs:e,backend:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=e,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=y.computeStrides(o.shape),T=b[0],x=b[1],I=b[2],k=y.computeStrides(g),A=k[0],F=k[1],R=k[2],P=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(g));P.fill(u);let L=n.data.get(o.dataId).values,O=n.data.get(s.dataId).values;for(let W=0;W<p;++W){let H=s.shape[0]===1?O:O.subarray(W*8,W*8+8);for(let V=0;V<f;++V)for(let q=0;q<h;++q)for(let Z=0;Z<d;++Z){let j,X=H[6]*q+H[7]*V+1;if(X===0)continue;let se=(H[0]*q+H[1]*V+H[2])/X,ae=(H[3]*q+H[4]*V+H[5])/X,pe=uO(se,c,i),oe=uO(ae,m,i);switch(a){case"nearest":j=use(L,m,c,T,x,I,W,oe,pe,Z,u);break;case"bilinear":j=pse(L,m,c,T,x,I,W,oe,pe,Z,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let ge=W*A+V*F+q*R+Z;P[ge]=j}return n.makeTensorInfo(g,o.dtype,P)}return{dataId:n.write(P,g,o.dtype),shape:o.shape,dtype:o.dtype}}var pO={kernelName:_a,backendName:"cpu",kernelFunc:nse};function uO(r,t,e){switch(e){case"reflect":return ose(r,t);case"wrap":return sse(r,t);case"nearest":return ise(r,t);case"constant":default:return ase(r,t)}}function ose(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{let n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return y.clamp(0,e,t-1)}function sse(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{let n=t-1;e-=t*Math.trunc(e/n)}return y.clamp(0,e,t-1)}function ase(r,t){return r}function ise(r,t){return y.clamp(0,r,t-1)}function rg(r,t,e,n,o,s,a,i,u,l,p){let m=a*n+i*o+u*s+l;return 0<=i&&i<t&&0<=u&&u<e?r[m]:p}function use(r,t,e,n,o,s,a,i,u,l,p){let m=Math.round(i),c=Math.round(u);return rg(r,t,e,n,o,s,a,m,c,l,p)}function pse(r,t,e,n,o,s,a,i,u,l,p){let m=Math.floor(i),c=Math.floor(u),d=m+1,f=c+1,h=(f-u)*rg(r,t,e,n,o,s,a,m,c,l,p)+(u-c)*rg(r,t,e,n,o,s,a,m,f,l,p),g=(f-u)*rg(r,t,e,n,o,s,a,d,c,l,p)+(u-c)*rg(r,t,e,n,o,s,a,d,f,l,p);return(d-i)*h+(i-m)*g}function lse(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;te(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:l}=kx(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var lO={kernelName:Vm,backendName:"cpu",kernelFunc:lse};function mse(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],u=new Array(a-1),l=0;for(let d=0;d<a;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(a).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(i);for(let d=0;d<c.length;d++){p[s]=d;let f=Qs({inputs:{x:o},backend:e,attrs:{begin:p,size:m}});c[d]=et({inputs:{x:f},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(f)}return c}var mO={kernelName:Ss,backendName:"cpu",kernelFunc:mse};function cse(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:a}=n;te(o,"unsortedSegmentSum");let i=o.shape.length,u=s.shape.length,l=[],p=[],m=i-u,c=s;for(let f=0;f<m;++f){let h=pf({inputs:{input:c},backend:e,attrs:{dim:f+1}});c=h,p.push(h)}for(let f=0;f<a;++f){let h=y.createScalarValue(f,"int32"),g=e.makeTensorInfo([],"int32",h),b=qw({inputs:{a:g,b:c},backend:e}),T=Xs({inputs:{x:b},backend:e,attrs:{dtype:"float32"}}),x=$l({inputs:{a:T,b:o},backend:e}),I=yu({inputs:{x},backend:e,attrs:{axis:0,keepDims:!1}});l.push(I),p.push(g),p.push(b),p.push(T),p.push(x),p.push(I)}let d=SN({inputs:l,backend:e,attrs:{axis:0}});return p.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}var cO={kernelName:qu,backendName:"cpu",kernelFunc:cse};var dse=[O_,ZL,z_,G_,r_,U_,W_,K_,V_,H_,q_,j_,X_,Y_,Z_,J_,e$,t$,r$,B_,n$,o$,s$,a$,t_,n_,i$,QL,u$,l$,m$,c$,d$,f$,h$,g$,b$,y$,T$,x$,I$,C$,k$,S$,v$,A$,w$,N$,D$,F$,P$,P_,M$,o_,E$,s_,L$,a_,_$,$$,B$,i_,O$,z$,G$,U$,W$,u_,p_,JL,K$,p$,V$,H$,q$,M_,l_,m_,j$,c_,X$,Y$,Z$,Q$,J$,eB,tB,d_,rB,nB,oB,sB,iB,uB,pB,f_,lB,mB,fB,h_,g_,hB,gB,bB,b_,yB,IB,CB,wx,kB,E_,T_,SB,vB,AB,e_,Jh,wB,L_,__,$_,NB,DB,FB,RB,PB,MB,EB,k_,LB,$B,BB,OB,v_,zB,GB,UB,A_,cB,KB,VB,HB,qB,jB,XB,YB,ZB,N_,QB,D_,JB,eO,tO,rO,nO,F_,R$,oO,sO,aO,iO,pO,y_,lO,mO,cO,TB];for(let r of dse)Qi(r);var cf={};He(cf,{assertNotComplex:()=>ei,bindCanvasToFramebuffer:()=>Cse,bindColorTextureToFramebuffer:()=>ag,bindTextureToProgramUniformSampler:()=>zN,bindTextureUnit:()=>gO,bindVertexBufferToProgramAttribute:()=>Mx,callAndCheck:()=>Ce,canBeRepresented:()=>NN,createFragmentShader:()=>FN,createFramebuffer:()=>$N,createProgram:()=>RN,createStaticIndexBuffer:()=>EN,createStaticVertexBuffer:()=>MN,createTexture:()=>LN,createVertexShader:()=>DN,getBatchDim:()=>xu,getExtensionOrThrow:()=>lf,getFramebufferErrorMessage:()=>bO,getMaxTexturesInShader:()=>WN,getNumChannels:()=>xse,getProgramUniformLocation:()=>ON,getProgramUniformLocationOrThrow:()=>BN,getRowsCols:()=>Iu,getShapeAs3D:()=>ig,getTextureShapeFromLogicalShape:()=>GN,getWebGLDisjointQueryTimerVersion:()=>KN,getWebGLErrorMessage:()=>hO,getWebGLMaxTextureSize:()=>UN,hasExtension:()=>Jn,isCapableOfRenderingToFloatTexture:()=>VN,isDownloadFloatTextureEnabled:()=>HN,isReshapeFree:()=>Np,isWebGLFenceEnabled:()=>qN,isWebGLVersionEnabled:()=>Lx,linkProgram:()=>PN,logShaderSourceAndInfoLog:()=>Px,resetMaxTextureSize:()=>kse,resetMaxTexturesInShader:()=>Sse,unbindColorTextureFromFramebuffer:()=>Ex,unbindTextureUnit:()=>Ise,validateFramebuffer:()=>mf,validateProgram:()=>sg,validateTextureSize:()=>_N});var Kl={},Nx={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function vN(r,t){Kl[r]=t}function Qn(r,t){if(!(r in Kl)||t!=null){let n=hse(r,t);if(n!==null)Kl[r]=n;else return console.log("Could not get context for WebGL version",r),null}let e=Kl[r];return e==null||e.isContextLost()?(delete Kl[r],Qn(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Kl[r])}function fse(r){if(typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function hse(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??fse(r);return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Kl[r]},!1),$().getBool("SOFTWARE_WEBGL_ENABLED")&&(Nx.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",Nx)||e.getContext("experimental-webgl",Nx):e.getContext("webgl2",Nx)}function Vl(r,t){return[t,r]}function dO(r,t){return r*t}function ng(r){let t=y.sizeFromShape(r),e=Math.ceil(t/4);return y.sizeToSquarishShape(e)}function Fi(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function fO(r,t){let[e,n]=Fi(r,t);return e*n*4}function og(r,t){let e=r,n,o,s,a,i,u,l,p,m,c;return $().getNumber("WEBGL_VERSION")===2?(n=e.R32F,o=e.R16F,s=e.RGBA16F,a=e.RGBA32F,i=e.RED,l=4,p=1,m=e.HALF_FLOAT,c=e.FLOAT,u=e.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=e.RGBA,i=r.RGBA,l=4,p=4,m=t!=null?t.HALF_FLOAT_OES:null,c=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:p,textureTypeHalfFloat:m,textureTypeFloat:c}}function Ce(r,t){let e=t();return $().getBool("DEBUG")&&gse(r),e}function gse(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+hO(r,t))}var bse=596e-10,yse=65504;function NN(r){return!!($().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||bse<Math.abs(r)&&Math.abs(r)<yse)}function hO(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function lf(r,t){return Tu(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function DN(r,t){let e=Tu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ce(r,()=>r.shaderSource(e,t)),Ce(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function FN(r,t){let e=Tu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ce(r,()=>r.shaderSource(e,t)),Ce(r,()=>r.compileShader(e)),$().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw Px(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var Tse=/ERROR: [0-9]+:([0-9]+):/g;function Px(r,t){let e=Tse.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let n=+e[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((m,c)=>y.rightPad((c+1).toString(),s)+m),i=0;for(let m=0;m<a.length;m++)i=Math.max(a[m].length,i);let u=a.slice(0,n-1),l=a.slice(n-1,n),p=a.slice(n);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${y.rightPad(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function RN(r){return Tu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function PN(r,t){if(Ce(r,()=>r.linkProgram(t)),!$().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function sg(r,t){if(Ce(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function MN(r,t){let e=Tu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ce(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Ce(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function EN(r,t){let e=Tu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ce(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),Ce(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function xse(){return $().getNumber("WEBGL_VERSION")===2?1:4}function LN(r){return Tu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function _N(r,t){let e=$().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let n=`[${r}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>e||t>e){let n=`[${r}x${t}]`,o=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function $N(r){return Tu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Mx(r,t,e,n,o,s,a){let i=r.getAttribLocation(t,e);return i===-1?!1:(Ce(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),Ce(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),Ce(r,()=>r.enableVertexAttribArray(i)),!0)}function gO(r,t,e){yO(r,e),Ce(r,()=>r.activeTexture(r.TEXTURE0+e)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function Ise(r,t){yO(r,t),Ce(r,()=>r.activeTexture(r.TEXTURE0+t)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function BN(r,t,e){return Tu(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function ON(r,t,e){return r.getUniformLocation(t,e)}function zN(r,t,e,n){Ce(r,()=>gO(r,t,n)),Ce(r,()=>r.uniform1i(e,n))}function Cse(r){Ce(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),Ce(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),Ce(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function ag(r,t,e){Ce(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Ce(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function Ex(r,t){Ce(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Ce(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function mf(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+bO(r,t))}function bO(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Tu(r,t,e){let n=Ce(r,()=>t());if(n==null)throw new Error(e);return n}function yO(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+r.TEXTURE0;if(n<r.TEXTURE0||n>e){let o=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${o}.`)}}function xu(r,t=2){return y.sizeFromShape(r.slice(0,r.length-t))}function Iu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function ig(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[xu(r),...Iu(r)]),t}function GN(r,t=!1){let e=$().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=$().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&$().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,r=r.map((i,u)=>u>=r.length-2?y.nearestLargerEven(r[u]):r[u]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let o=y.sizeFromShape(r),s=null;r.length<=1&&o<=e?s=[1,o]:r.length===2&&r[0]<=e&&r[1]<=e?s=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(s=[r[0],r[1]*r[2]*r[3]]);let a=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||a)if(t){let i=xu(r),u=2,l=2;r.length&&([u,l]=Iu(r)),o=i*(u/2)*(l/2),s=y.sizeToSquarishShape(o).map(p=>p*2)}else s=y.sizeToSquarishShape(o);return s}function Dx(r){return r%2===0}function Np(r,t){if(r=r.slice(-2),t=t.slice(-2),y.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r.slice(-1)[0],n=t.slice(-1)[0];if(e===n||Dx(e)&&Dx(n)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&Dx(r[0])&&Dx(t[0])}var Fx,Rx;function UN(r){if(Fx==null){let t=Qn(r);Fx=t.getParameter(t.MAX_TEXTURE_SIZE)}return Fx}function kse(){Fx=null}function Sse(){Rx=null}function WN(r){if(Rx==null){let t=Qn(r);Rx=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Rx)}function KN(r){if(r===0)return 0;let t,e=Qn(r);return Jn(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:Jn(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Jn(r,t){return r.getExtension(t)!=null}function Lx(r){try{if(Qn(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function VN(r){if(r===0)return!1;let t=Qn(r);if(r===1){if(!Jn(t,"OES_texture_float"))return!1}else if(!Jn(t,"EXT_color_buffer_float"))return!1;return wN(t)}function HN(r){if(r===0)return!1;let t=Qn(r);if(r===1){if(!Jn(t,"OES_texture_float")||!Jn(t,"WEBGL_color_buffer_float"))return!1}else{if(Jn(t,"EXT_color_buffer_float"))return wN(t);let n="EXT_color_buffer_half_float";if(Jn(t,n)){let o=t.getExtension(n);return vse(t,o)}return!1}return wN(t)}function wN(r){let t=og(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,n,o,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(s),a}function vse(r,t){let e=og(r,t),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,o,s,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function qN(r){return r!==2?!1:Qn(r).fenceSync!=null}function ei(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Me=$();Me.registerFlag("HAS_WEBGL",()=>Me.getNumber("WEBGL_VERSION")>0);Me.registerFlag("WEBGL_VERSION",()=>Lx(2)?2:Lx(1)?1:0);Me.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Me.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Me.get("WEBGL_VERSION")===2);Me.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Me.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Me.registerFlag("WEBGL_PACK",()=>Me.getBool("HAS_WEBGL"));Me.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_CLIP",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_REDUCE",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_LAZILY_UNPACK",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_CONV_IM2COL",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>UN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>WN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Me.getNumber("WEBGL_VERSION");return r===0?0:KN(r)});Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Me.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Yu.isMobile());Me.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>VN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Me.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Me.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Me.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>HN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_FENCE_API_ENABLED",()=>qN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Me.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Me.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Me.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Yu.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Me.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Me.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Me.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Me.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Me.registerFlag("WEBGL_EXP_CONV",()=>!1);Me.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Me.getBool("IS_TEST"));Me.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Me.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);function Zt(){let r,t,e,n,o,s,a,i,u,l;return $().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function ti(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let a=`int ${r[s]} = ${e} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Hl(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let a=`int ${r[s]} = ${e} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function Ase(r,t){let e=r.length,n=r.map(s=>`${t}[${s}]`),o=new Array(e-1);o[e-2]=n[e-1];for(let s=e-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function TO(r,t,e="index"){let n=r.map((s,a)=>a),o=Ase(n,t);return o.map((s,a)=>{let i=`int ${r[a]} = ${e} / ${o[a]}`,u=a===o.length-1?`int ${r[a+1]} = ${e} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${u};`}).join("")}function df(r){let t=y.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function ff(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var _x=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:xO}=C;function IO(r,t,e){let n=[];if(r.forEach(d=>{let f=y.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),e.enableShapeUniforms){let{uniformShape:h}=$x(e.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>wse(d,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),a=t.texShape,i=Zt(),u=Fse(i),l,p,m=Mse(i);return t.isPacked?(l=Nse(t.logicalShape,a,e.enableShapeUniforms),p=Pse(i)):(l=Dse(t.logicalShape,a,e.enableShapeUniforms),p=Rse(i)),e.packedInputs&&(m+=$se),[m,u,p,o,l,s,e.userCode].join(`
`)}function gf(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return Xse(r,t);case 1:return Zse(r,t);case 2:return Jse(r,t);case 3:return tae(r,t);case 4:return nae(r,t);case 5:return oae(r);case 6:return sae(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function CO(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return jse(r);case 1:return Yse(r,t);case 2:return Qse(r,t);case 3:return eae(r,t);default:return rae(r,t)}}function wse(r,t,e=!1,n){let o="";e?o+=CO(r,n):o+=gf(r,n);let s=r.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(e?o+=aae(r,t):o+=iae(r,t)),o}function Nse(r,t,e){switch(r.length){case 0:return kO();case 1:return Bse(r,t,e);case 2:return Hse(r,t,e);case 3:return zse(r,t,e);default:return Use(r,t,e)}}function Dse(r,t,e){switch(r.length){case 0:return kO();case 1:return Ose(r,t,e);case 2:return qse(r,t,e);case 3:return Gse(r,t,e);case 4:return Wse(r,t,e);case 5:return Kse(r,t);case 6:return Vse(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function Fse(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function Rse(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function Pse(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function Mse(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Ese}
    ${Lse}
    ${_se}
  `}var Ese=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Lse=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,_se=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,$se=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function kO(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Bse(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Ose(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function zse(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Gse(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Hl(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=ti(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Use(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",u="b, r, c";for(let l=2;l<r.length-1;l++)a*=r[r.length-l-1],i=`
      int b${l} = index / ${a};
      index -= b${l} * ${a};
    `+i,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function Wse(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Hl(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=ti(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Kse(r,t){let e=ti(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Vse(r,t){let e=ti(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Hse(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function qse(r,t,e){return y.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function ql(r){return`offset${r}`}function jse(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=Zt();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function Xse(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=ql(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${a});
      return sampleTexture(${e}, uv);
    }
  `;let[i,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${e}, uv);
    }
  `}function Yse(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=r.shapeInfo.texShape,s=Zt();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${e}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function Zse(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${bf(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let i=ql(e);return a===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${e}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${i});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${e}, uv);
    }
  `}function Qse(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],u=Zt();if(s!=null&&y.arraysEqual(e,s))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(e[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Jse(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(e,s)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=y.squeezeShape(e),u=a;if(u.length<e.length){let c=yf(r,u),d=["row","col"];return`
      ${gf(c,t)}
      float ${o}(int row, int col) {
        return ${o}(${Tf(d,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${bf(r)}
      }
    `;let l=s[0],p=s[1],m=ql(n);return p===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${m};
    vec2 uv = uvFromFlat(${l}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function eae(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(e[0]===1){let c=e.slice(1),d=[1,2],f=yf(r,c),h=["b","row","col"];return`
        ${CO(f,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Tf(h,d)});
        }
      `}let i=Zt();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let u=a[0],l=a[1],p=Math.ceil(e[2]/2),m=p*Math.ceil(e[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${m}, ${p}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function tae(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:i,keptDims:u}=y.squeezeShape(e),l=i;if(l.length<e.length){let h=yf(r,l),g=["row","col","depth"];return`
        ${gf(h,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Tf(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${bf(r)}
      }
    `;let p=r.shapeInfo.texShape,m=p[0],c=p[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===a&&d==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=ql(n);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function rae(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=Zt();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${e}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],p=u[1],m=Math.ceil(s[a-1]/2),c=m*Math.ceil(s[a-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<a-1;h++)d=`int b${h}, `+d,c*=s[a-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${l});
      return ${o.texture2D}(${e}, uv);
    }
  `}function nae(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,i=e[1]*a,{newShape:u,keptDims:l}=y.squeezeShape(e);if(u.length<e.length){let T=yf(r,u),x=["row","col","depth","depth2"];return`
      ${gf(T,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Tf(x,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${bf(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&p==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&p==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let b=ql(n);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${b});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${b});
      return sampleTexture(${n}, uv);
    }
  `}function oae(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[4],s=t[3]*o,a=t[2]*s,i=t[1]*a,{newShape:u,keptDims:l}=y.squeezeShape(t);if(u.length<t.length){let h=yf(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${gf(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Tf(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${bf(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===i&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(d===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${e}, uv);
      }
    `;let f=ql(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${e}, uv);
    }
  `}function sae(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:o,keptDims:s}=y.squeezeShape(t);if(o.length<t.length){let g=yf(r,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${gf(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Tf(b,s)});
      }
    `}let a=t[5],i=t[4]*a,u=t[3]*i,l=t[2]*u,p=t[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${l}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${bf(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===p&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===a&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;let h=ql(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${l} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function bf(r){let t=r.name,e=y.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function aae(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=t.logicalShape.length,i=xO(r.shapeInfo.logicalShape,t.logicalShape),u=Ge(a),l=a-s,p,m=["x","y","z","w","u","v"];s===0?p="":a<2&&i.length>=1?p="coords = 0;":p=i.map(T=>`coords.${m[T+l]} = 0;`).join(`
`);let c="";a<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((T,x)=>`coords.${m[x+l]}`).join(", ");let d="return outputValue;",h=y.sizeFromShape(r.shapeInfo.logicalShape)===1,b=y.sizeFromShape(t.logicalShape)===1;if(s===1&&!h&&!b)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!b)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){let T=s-2,x=s-1;i.indexOf(T)>-1&&i.indexOf(x)>-1?d="return vec4(outputValue.x);":i.indexOf(T)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function iae(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=t.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!r.shapeInfo.isUniform&&i===u&&r.shapeInfo.flatOffset==null&&y.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let l=Ge(u),p=xO(r.shapeInfo.logicalShape,t.logicalShape),m=u-i,c,d=["x","y","z","w","u","v"];i===0?c="":u<2&&p.length>=1?c="coords = 0;":c=p.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function Ge(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function $x(r,t,e){let{newShape:n,keptDims:o}=y.squeezeShape(t),s=t.length,a=r&&s===3&&t[0]===1,i=a?t.slice(1):n,u=!r&&s>1&&!y.arraysEqual(t,e)&&n.length<s||a;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:o}}function yf(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function Tf(r,t){return t.map(e=>r[e]).join(", ")}function vO(r,t,e,n){let o=e.map((p,m)=>{let c={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(c.flatOffset=p.texData.slice.flatOffset),{name:t.variableNames[m],shapeInfo:c}}),s=o.map(p=>p.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=IO(o,a,t),u=FN(r.gl,i),l=r.createProgram(u);return $().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:a,...jN(r,t,l)}}function jN(r,t,e){let n={},o={},s={},a=[],i,u,l,p=null,m=null;m=r.getUniformLocation(e,"NAN",!1),$().getNumber("WEBGL_VERSION")===1&&(p=r.getUniformLocation(e,"INFINITY",!1));let c=!1;for(let d=0;d<t.variableNames.length;d++){let f=t.variableNames[d];n[f]=r.getUniformLocation(e,f,c),n[`offset${f}`]=r.getUniformLocation(e,`offset${f}`,c),t.enableShapeUniforms&&(o[`${f}Shape`]=r.getUniformLocation(e,`${f}Shape`,c),s[`${f}TexShape`]=r.getUniformLocation(e,`${f}TexShape`,c))}return t.enableShapeUniforms&&(i=r.getUniformLocation(e,"outShape",c),l=r.getUniformLocation(e,"outShapeStrides",c),u=r.getUniformLocation(e,"outTexShape",c)),t.customUniforms&&t.customUniforms.forEach((d,f)=>{a[f]=r.getUniformLocation(e,d.name,c)}),{uniformLocations:n,customUniformLocations:a,infLoc:p,nanLoc:m,inShapesLocations:o,inTexShapesLocations:s,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}}function SO(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,n)=>{let o=e.logicalShape,s=t[n],a=s.shape;if(!y.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(e.isUniform&&s.isUniform)return;let i=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function AO(r,t,e,n,o){t.program.enableShapeUniforms||(SO(t.inShapeInfos,e),SO([t.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):r.setOutputMatrixTexture(s.texture,a[0],a[1]),r.setProgram(t.webGLProgram),$().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN),e.forEach((u,l)=>{let p=t.program.variableNames[l],m=t.uniformLocations[p],c=t.uniformLocations[`offset${p}`],d=t.inShapesLocations[`${p}Shape`],f=t.inTexShapesLocations[`${p}TexShape`];if(d){let{uniformShape:h}=$x(t.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(d,new Int32Array(h));break;case 2:r.gl.uniform2iv(d,new Int32Array(h));break;case 3:r.gl.uniform3iv(d,new Int32Array(h));break;case 4:r.gl.uniform4iv(d,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),m!=null){if(u.isUniform){if(y.sizeFromShape(u.shape)<2)r.gl.uniform1f(m,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(m,h)}return}u.texData.slice!=null&&c!=null&&r.gl.uniform1i(c,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,m,l)}});let i=t.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(t.outShapeStridesLocation){let u=y.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break;default:break}}t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&o&&t.program.customUniforms.forEach((u,l)=>{let p=t.customUniformLocations[l],m=o[l];if(u.type==="float")r.gl.uniform1fv(p,m);else if(u.type==="vec2")r.gl.uniform2fv(p,m);else if(u.type==="vec3")r.gl.uniform3fv(p,m);else if(u.type==="vec4")r.gl.uniform4fv(p,m);else if(u.type==="int")r.gl.uniform1iv(p,m);else if(u.type==="ivec2")r.gl.uniform2iv(p,m);else if(u.type==="ivec3")r.gl.uniform3iv(p,m);else if(u.type==="ivec4")r.gl.uniform4iv(p,m);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function wO(r,t,e){let n="";t.concat(e).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let u=a.texData.texShape,{useSqueezeShape:l,uniformShape:p,keptDims:m}=$x(r.packedInputs,a.shape,u),c="",d="",f="";if(p.length===1&&r.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];c=`${k[0]>1}_${k[1]>1}`}else if(p.length===2&&!r.packedInputs)d=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!r.packedInputs){let k=y.computeStrides(p);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let h=a.shape.length,g=p.length===2&&y.arraysEqual(a.shape,u),b=y.sizeFromShape(a.shape)===1,T=C.getBroadcastDims(a.shape,e.shape),x=!r.packedInputs&&h===e.shape.length&&y.arraysEqual(u,e.texData.texShape),I=r.packedInputs||p.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${x}_${l?m:""}_${p.length}_${b}_${T}_${g}_${c}_${d}_${f}_${I}_${i}`}else{let u=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${u}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${$().getNumber("WEBGL_VERSION")}`,s}function Nt(r){return $().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var Bx=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Zt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hl(["r","c","d"],t):ti(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var Ox=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Zt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hl(["r","c","d"],t):ti(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var zx=class{constructor(t){this.variableNames=["A"];this.outTexUsage=3;let e=Zt();this.outputShape=t,this.userCode=`
      ${_x}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var Ux=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=3;let e=Zt();this.outputShape=t,this.userCode=`
      ${_x}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var Wx=class{constructor(t,e=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Zt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let o="result";e&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?ff():df(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var Kx=class{constructor(t,e=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Zt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let o="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let u=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?ff():df(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var mD={};He(mD,{bindVertexProgramAttributeStreams:()=>nD,createBufferFromOutputTexture:()=>aD,createFloat16MatrixTexture:()=>JN,createFloat16PackedMatrixTexture:()=>rD,createFloat32MatrixTexture:()=>QN,createIndexBuffer:()=>ZN,createPackedMatrixTexture:()=>tD,createUnsignedBytesMatrixTexture:()=>eD,createVertexBuffer:()=>YN,createVertexShader:()=>XN,downloadByteEncodedFloatMatrixFromOutputTexture:()=>uD,downloadFloat32MatrixFromBuffer:()=>iD,downloadMatrixFromPackedOutputTexture:()=>lD,downloadPackedMatrixFromBuffer:()=>pD,getInternalFormatForFloat16MatrixTexture:()=>Hx,getInternalFormatForFloat16PackedMatrixTexture:()=>Xx,getInternalFormatForFloat32MatrixTexture:()=>Vx,getInternalFormatForPackedMatrixTexture:()=>jx,getInternalFormatForUnsignedBytesMatrixTexture:()=>qx,uploadDenseMatrixToTexture:()=>oD,uploadPixelDataToTexture:()=>sD});function XN(r){let t=Zt(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return DN(r,e)}function YN(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return MN(r,t)}function ZN(r){let t=new Uint16Array([0,1,2,2,1,3]);return EN(r,t)}function ug(r,t,e,n,o,s){_N(t,e);let a=LN(r),i=r.TEXTURE_2D;return Ce(r,()=>r.bindTexture(i,a)),Ce(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Ce(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Ce(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),Ce(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),$().getNumber("WEBGL_VERSION")===1?Ce(r,()=>r.texImage2D(i,0,n,t,e,0,o,s,null)):Ce(r,()=>r.texStorage2D(i,1,n,t,e)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:a,texShape:[e,t]}}function Vx(r){return r.internalFormatFloat}function QN(r,t,e,n){let[o,s]=Vl(t,e);return ug(r,o,s,Vx(n),n.textureFormatFloat,r.FLOAT)}function Hx(r){return r.internalFormatHalfFloat}function JN(r,t,e,n){let[o,s]=Vl(t,e);return ug(r,o,s,Hx(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function qx(r){return r.downloadTextureFormat}function eD(r,t,e,n){let[o,s]=Vl(t,e);return ug(r,o,s,qx(n),r.RGBA,r.UNSIGNED_BYTE)}function jx(r){return r.internalFormatPackedFloat}function tD(r,t,e,n){let[o,s]=Fi(t,e);return ug(r,o,s,jx(n),r.RGBA,r.FLOAT)}function Xx(r){return r.internalFormatPackedHalfFloat}function rD(r,t,e,n){let[o,s]=Fi(t,e);return ug(r,o,s,Xx(n),r.RGBA,n.textureTypeHalfFloat)}function nD(r,t,e){return Ce(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Mx(r,t,"clipSpacePos",e,3,20,0)&&Mx(r,t,"uv",e,2,20,12)}function oD(r,t,e,n,o,s){Ce(r,()=>r.bindTexture(r.TEXTURE_2D,t));let a,i,u;o instanceof Uint8Array?(a=new Uint8Array(e*n*4),i=r.UNSIGNED_BYTE,u=r.RGBA):(a=new Float32Array(e*n*4),i=r.FLOAT,u=s.internalFormatPackedFloat),a.set(o),$().getNumber("WEBGL_VERSION")===2?Ce(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,n,r.RGBA,i,a)):Ce(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,e,n,0,r.RGBA,i,a)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function sD(r,t,e){Ce(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?$().getNumber("WEBGL_VERSION")===2?Ce(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):Ce(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):$().getNumber("WEBGL_VERSION")===2?Ce(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):Ce(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function aD(r,t,e,n){let o=r.createBuffer();Ce(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*t*e;return Ce(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),Ce(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),Ce(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function iD(r,t,e){let n=r,o=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function uD(r,t,e,n){let[o,s]=Vl(t,e),a=4,i=new Uint8Array(dO(t*e,a));return Ce(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function pD(r,t,e,n,o,s,a,i){let u=r,l=new Float32Array(fO(s,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function lD(r,t,e){let n=new Float32Array(t*e*4);return Ce(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,n)),n}var jl=class{constructor(t){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let e=$().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,vN(e,t)):this.gl=Qn(e);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),$().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=lf(this.gl,s),Jn(this.gl,a))this.textureHalfFloatExtension=lf(this.gl,a);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Jn(this.gl,o))this.colorBufferHalfFloatExtension=lf(this.gl,o);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Jn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Jn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=YN(this.gl),this.indexBuffer=ZN(this.gl),this.framebuffer=$N(this.gl),this.textureConfig=og(this.gl,this.textureHalfFloatExtension)}get debug(){return $().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;Ce(t,()=>t.finish()),Ce(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ce(t,()=>t.deleteFramebuffer(this.framebuffer)),Ce(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ce(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ce(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),QN(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),JN(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),eD(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),sD(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,o){this.throwIfDisposed(),oD(this.gl,t,e,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),rD(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),tD(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Ex(this.gl,this.framebuffer),this.outputTexture=null),Ce(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>uD(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,o,s,a){return pD(this.gl,t,e,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return iD(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);let o=aD(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if($().getBool("WEBGL_FENCE_API_ENABLED")){let o=t,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},e=s}else $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>lD(this.gl,e,n))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=XN(e));let n=RN(e);return Ce(e,()=>e.attachShader(n,this.vertexShader)),Ce(e,()=>e.attachShader(n,t)),PN(e,n),this.debug&&sg(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=nD(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&Ce(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&sg(this.gl,this.program),Ce(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?BN(this.gl,t,e):ON(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ce(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),zN(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();let[o,s]=Fi(e,n);this.setOutputMatrixTextureDriver(t,o,s)}setOutputMatrixWriteRegion(t,e,n,o){this.setOutputMatrixWriteRegionDriver(n,t,o,e)}setOutputPackedMatrixWriteRegion(t,e,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&sg(this.gl,this.program),mf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;this.debug&&this.debugValidate(),Ce(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=lf(this.gl,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){let n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=lae(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),!(this.itemsToPoll.length>1)&&y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),ag(this.gl,t,this.framebuffer),this.debug&&mf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ag(this.gl,this.outputTexture,this.framebuffer),this.debug&&mf(this.gl)):Ex(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();let o=this.gl;ag(o,t,this.framebuffer),this.debug&&mf(o),this.outputTexture=t,Ce(o,()=>o.viewport(0,0,e,n)),Ce(o,()=>o.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,o){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.scissor(t,e,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function lae(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:DO,bincountImpl:Yx,bincountReduceImpl:FO,castImpl:RO,ceilImpl:PO,concatImpl:MO,equalImpl:EO,expImpl:LO,expm1Impl:_O,floorImpl:$O,gatherNdImpl:BO,gatherV2Impl:OO,greaterImpl:zO,greaterEqualImpl:GO,lessImpl:UO,lessEqualImpl:WO,linSpaceImpl:KO,logImpl:VO,maxImpl:HO,maximumImpl:qO,minimumImpl:jO,multiplyImpl:XO,negImpl:YO,notEqualImpl:ZO,prodImpl:QO,raggedGatherImpl:JO,raggedTensorToTensorImpl:ez,rangeImpl:tz,rsqrtImpl:rz,scatterImpl:nz,sigmoidImpl:oz,simpleAbsImpl:Zx,sliceImpl:sz,sparseFillEmptyRowsImpl:az,sparseReshapeImpl:iz,sparseSegmentReductionImpl:Qx,sqrtImpl:uz,stridedSliceImpl:pz,stringNGramsImpl:lz,stringSplitImpl:mz,stringToHashBucketFastImpl:cz,subImpl:dz,tileImpl:fz,topKImpl:hz,transposeImpl:Xl,uniqueImpl:gz}=af;function cD(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function or(r,t){return t===1?[r]:cD(r,t)}function bz(r,t){if(r===1)return"rc";let e="";for(let n=0;n<r;n++)e+=t[n],n<r-1&&(e+=",");return e}var Jx=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Nt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=or("rc",this.rank),n=Ge(this.rank),o=this.getOutOfBoundsCondition(e),s=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${t[t.length-1-a]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var xf=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${mae(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?ff():df(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}};function mae(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?TO(["r","c","d"],"inputShape"):ti(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var eI=class{constructor(t){this.gpgpu=t;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(t,e,n){let o=Tz(e,n),s=xz(t,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=yz(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let i;return o===3?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===4?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===1?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===0?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,o){if(this.freeTextures==null)return;let s=Tz(n,o),a=xz(e,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=yz(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=$().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[a],p=l.indexOf(t);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(p,1),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function cae(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function yz(r,t,e,n,o){let s=dae(t,n),a;if(o){let[u,l]=Fi(r[0],r[1]);a=u*l}else{let[u,l]=Vl(r[0],r[1]);a=u*l}let i=cae(e,s);return a*i}function dae(r,t){switch(r){case 3:return jx(t);case 4:return Xx(t);case 1:return Vx(t);case 0:return Hx(t);case 2:return qx(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function fae(r){return $().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function Tz(r,t){if(r===1)return 3;if(r===0||r==null)return fae(t);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function xz(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var on=class{constructor(t,e){this.variableNames=["A"];this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Ir="if (isnan(x)) return x;",Iz="return x;",dD="return abs(x);";var Cz="return (x >= 0.0) ? x : (exp(x) - 1.0);",kz=Ir+`
  return (x < 0.0) ? 0.0 : x;
`,Sz=Ir+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Yl="return x;",vz="return 1.0 / (1.0 + exp(-1.0 * x));";var wz="return x;",Nz=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Dz=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Fz=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Rz="return 1.0 / (1.0 + exp(-1.0 * x));",os=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var tI=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let e=t.length,n=or("rc",e),o=Ge(e),s=bz(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var gae=xr.whereImpl,bae=1e-7,yae=1e-4,rI={};function Tae(r){return r in rI||(rI[r]={}),rI[r]}var xae=$().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Iae=600;function Cae(){return $().global.screen==null?1024:$().global.screen.height*$().global.screen.width*window.devicePixelRatio*Iae/1024/1024}var fD=class extends no{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!$().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof jl)n=e;else{let o=Qn($().getNumber("WEBGL_VERSION"),e);n=new jl(o)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let o=Qn($().getNumber("WEBGL_VERSION"));n=new jl(o),this.binaryCache=Tae($().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new eI(this.gpgpu),this.numMBBeforeWarning=Cae(),this.texData=new ia(this,Mn())}nextDataId(){return fD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,n,o){if(($().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||$().getBool("DEBUG"))&&this.checkNumericalProblems(e),o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:n,dtype:o,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){let n=this.texData.get(e);n.refCount--}}move(e,n,o,s,a){if($().getBool("DEBUG")&&this.checkNumericalProblems(n),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:o,dtype:s,values:n,usage:1,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let n=this.texData.get(e),{values:o,dtype:s,complexTensorInfos:a,slice:i,shape:u,isPacked:l}=n;if(i!=null){let d;l?d=new os(u,Yl):d=new on(u,Yl);let f=this.runWebGLProgram(d,[{dataId:e,shape:u,dtype:s}],s),h=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),h}if(o!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return o;let p=this.activeTimers!=null,m;p&&(m=y.now());let c;if(s==="complex64"){let d=this.readSync(a.real.dataId),f=this.readSync(a.imag.dataId);c=C.mergeRealAndImagArrays(d,f)}else c=this.getValuesFromTexture(e);return p&&(this.downloadWaitMs+=y.now()-m),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(g=>h.push(g))}let n=this.texData.get(e),{values:o,shape:s,slice:a,dtype:i,complexTensorInfos:u,isPacked:l}=n;if(a!=null){let h;l?h=new os(s,Yl):h=new on(s,Yl);let g=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:i}],i),b=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),b}if(o!=null)return this.convertAndCacheOnCPU(e);if($().getBool("DEBUG")&&!$().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&$().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let p=null,m;if(i!=="complex64"&&$().get("WEBGL_BUFFER_SUPPORTED")){m=this.decode(e);let h=this.texData.get(m.dataId);p=this.gpgpu.createBufferFromTexture(h.texture.texture,...ng(s))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(i==="complex64"){let h=await Promise.all([this.read(u.real.dataId),this.read(u.imag.dataId)]),g=h[0],b=h[1];c=C.mergeRealAndImagArrays(g,b)}else if(p==null)c=this.getValuesFromTexture(e);else{let h=y.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(p,h)}if(m!=null&&this.disposeIntermediateTensorInfo(m),p!=null){let h=this.gpgpu.gl;Ce(h,()=>h.deleteBuffer(p))}let d=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Mn().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){let o=this.texData.get(e),{values:s,shape:a,slice:i,dtype:u,isPacked:l,texture:p}=o;if(u==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;l?f=new os(a,Yl):f=new on(a,Yl);let h=this.runWebGLProgram(f,[{dataId:e,shape:a,dtype:u}],u),g=this.readToGPU(h,n);return this.disposeIntermediateTensorInfo(h),g}if(p==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let m=this.decode(e,n.customTexShape),c=Mn().makeTensorFromTensorInfo(m),d=this.texData.get(m.dataId);return{tensorRef:c,...d.texture}}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return xe(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){let o=e[n];if(!NN(o))throw $().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:n,dtype:o,isPacked:s}=this.texData.get(e),a=y.sizeFromShape(n);if($().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),f=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...ng(n)).subarray(0,a);return this.disposeIntermediateTensorInfo(d),h}let i=$().getBool("WEBGL_PACK")&&s===!0,u=i?ig(n):n,l=i?new Ux(u):new zx(u),p=this.runWebGLProgram(l,[{shape:u,dtype:o,dataId:e}],"float32"),m=this.texData.get(p.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(m.texture.texture,m.texShape[0],m.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(p),c}timerAvailable(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,e();let a=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(a);u.kernelMs=y.sum(l),u.getExtraProfileInfo=()=>l.map((p,m)=>({name:i[m],ms:p})).map(p=>`${p.name}: ${p.ms}`).join(", ")}else u.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,u})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(e){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=y.now(),e)}async getQueryTime(e){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:o}=this.texData.get(e);return o!=null&&(this.disposeData(o.real.dataId,n),this.disposeData(o.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:n,dtype:o,texShape:s,usage:a,isPacked:i,slice:u}=this.texData.get(e),l=u&&u.origDataId||e,p=this.dataRefCount.get(l);p>1?this.dataRefCount.set(l,p-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(s,o),this.textureManager.releaseTexture(n,s,a,i)));let m=this.texData.get(e);m.texture=null,m.texShape=null,m.isPacked=!1,m.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=xae){return $().getBool("WEBGL_CPU_FORWARD")&&e.every(o=>this.texData.get(o.dataId).texture==null&&y.sizeFromShape(o.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let n=e.dataSync();return gae(e.shape,n)}packedUnaryOp(e,n,o){let s=new os(e.shape,n),a=this.compileAndRun(s,[e],o);return Mn().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=Zx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if($().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,dD,e.dtype);let n=new on(e.shape,dD),o=this.compileAndRun(n,[e]);return Mn().makeTensorFromTensorInfo(o)}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let a=o.map(i=>y.encodeString(i));s=this.write(a,e,n)}else s=this.write(o,e,n);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:n}}makeOutput(e,n,o){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,o),this)}unpackTensor(e){let n=new tI(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){let n=new Jx(e.shape),o=!0;return this.runWebGLProgram(n,[e],e.dtype,null,o)}packedReshape(e,n){let o=[xu(e.shape),...Iu(e.shape)],s={dtype:e.dtype,shape:o,dataId:e.dataId},a=[xu(n),...Iu(n)],i=new xf(a,o),u=!0,l=[o],p=this.runWebGLProgram(i,[s],e.dtype,l,u);return{dataId:p.dataId,shape:n,dtype:p.dtype}}decode(e,n){let o=this.texData.get(e),{isPacked:s,shape:a,dtype:i}=o;if(n!=null){let d=y.sizeFromShape(a),f=n[0]*n[1]*4;y.assert(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let u=ig(a),l;s?l=new Ox(u):l=new Bx(u);let p=!0,m=[n??ng(u)],c=this.runWebGLProgram(l,[{shape:u,dtype:i,dataId:e}],i,m,p,n);return{dtype:i,shape:a,dataId:c.dataId}}runWebGLProgram(e,n,o,s,a=!1,i){let u=this.makeTensorInfo(e.outputShape,o),l=this.texData.get(u.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===0){let T=i??ng(e.outputShape);l.texShape=T.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),y.sizeFromShape(u.shape)===0)return l.values=y.getTypedArrayFromDType(u.dtype,0),u;let p=[],m=n.map(T=>{if(T.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(T.dataId);if(x.texture==null){if(!e.packedInputs&&y.sizeFromShape(T.shape)<=$().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:T.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=T.shape)}if(this.uploadToGPU(T.dataId),!!x.isPacked!=!!e.packedInputs)T=x.isPacked?this.unpackTensor(T):this.packTensor(T),p.push(T),x=this.texData.get(T.dataId);else if(x.isPacked&&!Np(x.shape,T.shape)){let I=T,k=T.shape;T.shape=x.shape,T=this.packedReshape(T,k),p.push(T),x=this.texData.get(T.dataId),I.shape=k}return{shape:T.shape,texData:x,isUniform:!1}});this.uploadToGPU(u.dataId);let c={shape:u.shape,texData:l,isUniform:!1},d=wO(e,m,c),f=this.getAndSaveBinary(d,()=>vO(this.gpgpu,e,m,c)),h=this.activeTimers!=null,g;h&&(g=this.startTimer()),$().get("ENGINE_COMPILE_ONLY")||AO(this.gpgpu,f,m,c,s),p.forEach(T=>this.disposeIntermediateTensorInfo(T)),h&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));let b=$().get("WEBGL_FLUSH_THRESHOLD");if(b>0){let T=y.now();T-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=T)}if(!$().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&a===!1){let T=this.unpackTensor(u);return this.disposeIntermediateTensorInfo(u),T}return u}compileAndRun(e,n,o,s,a=!1){return o=o||n[0].dtype,this.runWebGLProgram(e,n,o,s,a)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||($().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!$().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=$().getBool("DEBUG");$().set("DEBUG",!1);let n=this.abs(de(1e-8)).dataSync()[0];if($().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?bae:yae}uploadToGPU(e){let n=this.texData.get(e),{shape:o,dtype:s,values:a,texture:i,usage:u,isPacked:l}=n;if(i!=null)return;let p=this.activeTimers!=null,m;p&&(m=y.now());let c=n.texShape;if(c==null&&(c=GN(o,l),n.texShape=c),a!=null){let d=ig(o),f,h=c[1],g=c[0],b=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(l||!b)&&([h,g]=Fi(c[0],c[1])),l?f=new Kx(d,b):f=new Wx(d,b);let T=b?[g,h]:c,x=this.makeTensorInfo(T,s),I=this.texData.get(x.dataId);b?I.usage=2:I.usage=1,I.texShape=T,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),h,g,a);let k=[[g,h]],A=!0,F=this.runWebGLProgram(f,[x],s,k,A),R=this.texData.get(F.dataId);n.texShape=R.texShape,n.isPacked=R.isPacked,n.usage=R.usage,$().get("ENGINE_COMPILE_ONLY")?this.disposeData(F.dataId):(n.texture=R.texture,n.values=null,this.texData.delete(F.dataId)),this.disposeIntermediateTensorInfo(x),p&&(this.uploadWaitMs+=y.now()-m)}else{let d=this.acquireTexture(c,u,s,l);n.texture=d}}convertAndCacheOnCPU(e,n){let o=this.texData.get(e),{dtype:s}=o;return this.releaseGPUData(e),n!=null&&(o.values=kae(n,s)),o.values}acquireTexture(e,n,o,s){if(this.numBytesInGPU+=this.computeBytes(e,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,s)}computeBytes(e,n){return e[0]*e[1]*y.bytesPerElement(n)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(let[,n]of Object.entries(this.binaryCache)){let o=new Promise(s=>{try{this.checkCompletion_(n),s(!0)}catch(a){throw a}});e.push(o)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Ch(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Px(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:n,customUniformLocations:o,infLoc:s,nanLoc:a,inShapesLocations:i,inTexShapesLocations:u,outShapeLocation:l,outShapeStridesLocation:p,outTexShapeLocation:m}=jN(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=n,e.customUniformLocations=o,e.infLoc=s,e.nanLoc=a,e.inShapesLocations=i,e.inTexShapesLocations=u,e.outShapeLocation=l,e.outShapeStridesLocation=p,e.outTexShapeLocation=m}}},If=fD;If.nextDataId=0;function kae(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<e.length;++n)e[n]=Math.round(r[n]);return e}else throw new Error(`Unknown dtype ${t}`)}var Sae="0.0.0";function Pz(){$().set("WEBGL_FORCE_F16_TEXTURES",!0)}Yu.isBrowser()&&Ju("webgl",()=>new If,2);var d8t={forceHalfFloat:Pz};var nI=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var ss=class{constructor(t,e,n){this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(e,n),this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var Dp=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var Js=class{constructor(t,e,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=C.assertAndGetBroadcastShape(e,n);let s=this.outputShape.length;this.enableShapeUniforms=Nt(s);let a="";if(o)if(s===0||y.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ge(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=or("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function sr(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Mz={kernelName:Vn,backendName:"webgl",kernelFunc:sr};function On(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),a=e.texData.get(s.dataId),i=sr({inputs:{x:n},backend:e}),u=sr({inputs:{x:o},backend:e});return a.complexTensorInfos={real:i,imag:u},s}var Ez={kernelName:Pu,backendName:"webgl",kernelFunc:On};var hD="return (a < 0.) ? b * a : a;",gD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function vae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,a=e.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),i=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Js(gD,o.shape,a.shape):new ss(hD,o.shape,a.shape),u=e.runWebGLProgram(i,[o,a],"float32");return e.disposeIntermediateTensorInfo(a),u}var Lz={kernelName:So,backendName:"webgl",kernelFunc:vae};var bD="return (a < 0.) ? b * a : a;",yD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Aae(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Js(yD,n.shape,o.shape):new ss(bD,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],"float32")}var _z={kernelName:_o,backendName:"webgl",kernelFunc:Aae};var ea="if (isnan(x)) return x;",$z=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Bz=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Se({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,u=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&e!=null){let m=i.texData.get(a.dataId),c=e(m.values,u);return i.makeTensorInfo(a.shape,u,c)}let l=$().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,p;return l?p=new os(a.shape,t):p=new on(a.shape,r),i.runWebGLProgram(p,[a],u)}}function dt({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:u,b:l}=a,p=i;if(n&&u.dtype==="complex64"){let f=p.texData.get(u.dataId),h=p.texData.get(l.dataId),[g,b]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(x=>{let[I,k]=x,A={dataId:I.dataId,dtype:I.dtype,shape:u.shape},F={dataId:k.dataId,dtype:k.dtype,shape:l.shape},R=new ss(r,u.shape,l.shape);return p.runWebGLProgram(R,[A,F],Et(I.dtype,k.dtype))}),T=On({inputs:{real:g,imag:b},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(b),T}let m=s||Et(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||p.shouldExecuteOnCPU([u,l]))&&o!=null){let f=p.texData.get(u.dataId).values,h=p.texData.get(l.dataId).values,g=u.dtype==="string"?C.fromUint8ToStringArray(f):f,b=u.dtype==="string"?C.fromUint8ToStringArray(h):h,[T,x]=o(u.shape,l.shape,g,b,m),I=p.makeTensorInfo(x,m),k=p.texData.get(I.dataId);return k.values=T,I}let c=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,d;return c?d=new Js(t,u.shape,l.shape,e):d=new ss(r,u.shape,l.shape),p.runWebGLProgram(d,[u,l],m)}}function Cu(r,t=!1){if(r==="linear")return t?wz:Iz;if(r==="relu")return t?Dz:kz;if(r==="elu")return t?Nz:Cz;if(r==="relu6")return t?Fz:Sz;if(r==="prelu")return t?yD:bD;if(r==="leakyrelu")return t?gD:hD;if(r==="sigmoid")return t?Rz:vz;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Cf=class{constructor(t,e,n,o=!1,s=!1,a=!1,i=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=Nt(this.outputShape.length);let p=o?t[1]:t[2],m=Math.ceil(p/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",b="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");let T=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",I="rc.x";t[0]<e[0]?x=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(I=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${x};
          int batchB = ${I};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${b}

        setOutput(result);
      }
    `}};var TD={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},pg=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=C.assertAndGetBroadcastShape(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var Oz="return a * b;";function lg(r){let{inputs:t,backend:e}=r,{a:n,b:o}=t,s=C.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=e.texData.get(n.dataId),u=e.texData.get(o.dataId),l=new pg(TD.REAL,n.shape,o.shape),p=new pg(TD.IMAG,n.shape,o.shape),m=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],c=e.runWebGLProgram(l,m,"float32"),d=e.runWebGLProgram(p,m,"float32"),f=On({inputs:{real:c,imag:d},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),f}if(e.shouldExecuteOnCPU([n,o])){let i=e.texData.get(n.dataId),u=e.texData.get(o.dataId),[l,p]=XO(n.shape,o.shape,i.values,u.values,s),m=e.makeTensorInfo(p,s),c=e.texData.get(m.dataId);return c.values=l,m}let a;return $().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Js(Oz,n.shape,o.shape):a=new ss(Oz,n.shape,o.shape),e.runWebGLProgram(a,[n,o],s)}var zz={kernelName:Mo,backendName:"webgl",kernelFunc:lg};function Gz(r,t,e){let n=[xu(r.shape),...Iu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[xu(t),...Iu(t)],a=new xf(s,n),i=!0,u=[n],l=e.runWebGLProgram(a,[o],r.dtype,u,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function ie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,a=e,i=y.sizeFromShape(o.shape),u=y.inferFromImplicitShape(s,i),l=y.sizeFromShape(u);y.assert(i===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let p=a.texData.get(o.dataId);return p.isPacked&&!Np(o.shape,u)&&!(p.texture!==null&&Np(p.shape,u))?Gz(o,u,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var Uz={kernelName:Ts,backendName:"webgl",kernelFunc:ie};var mg=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=t;this.outputShape=[o,a];let i=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(e!=null){let m=1/e;l=`sumValue += dot(values * ${y.isInt(m)?m.toPrecision(2):m}, ones);`}let p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var oI=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=t;this.outputShape=[o,a];let i="0.0",u="";e==="prod"?i="1.0":e==="min"?(i="1.0 / 1e-20",u="min"):e==="max"&&(i="-1.0 / 1e-20",u="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?l="sumValue":e==="prod"?l="prodValue":e==="all"?l="allValue":e==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,m=n%4,c=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";e==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):e==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function Nae(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],n=C.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function eo(r,t,e,n){let o=Nae(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:u,outSize:l}=o[a],p,m;e==="mean"?p=a===0?new mg({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},i):new mg({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l}):p=new oI({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},e),m=s,s=n.runWebGLProgram(p,[s],t),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var sI=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[e[a]];this.outputShape=n,this.rank=n.length;let o=Ge(this.rank),s=Dae(e);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function Dae(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let o=0;o<r.length;o++)n[r[o]]=e[o];return n.join()}var aI=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(t.length);for(let p=0;p<n.length;p++)n[p]=t[e[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Ge(this.rank),s=cD("rc",this.rank),a=new Array(this.rank);for(let p=0;p<e.length;p++)a[e[p]]=s[p];let i=`vec2(${a.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Fp(r,t,e){let n=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aI(r.shape,t):new sI(r.shape,t);return e.runWebGLProgram(n,[r],r.dtype)}function Wz(r,t,e,n){let o=t,s=r.shape.length,a=y.parseAxisParam(o,r.shape),i=a,u=C.getAxesPermutation(i,s),l=u!=null,p=r;l&&(p=Fp(r,u,n),i=C.getInnerMostAxes(i.length,s)),C.assertAxesAreInnerMostDims("sum",i,s);let[m,c]=C.computeOutAndReduceShapes(p.shape,i),d=m;e&&(d=C.expandShapeToKeepDim(m,a));let f=y.sizeFromShape(c),g=y.sizeFromShape(r.shape)/f,b=ie({inputs:{x:p},attrs:{shape:[g,f]},backend:n}),T=tu(r.dtype),x=eo(b,T,"sum",n),I=ie({inputs:{x},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),l&&n.disposeIntermediateTensorInfo(p),I}function Zl(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return Wz(o,s,a,e)}var Kz={kernelName:Ho,backendName:"webgl",kernelFunc:Zl};function Kt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,a=e,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];let l;if(a.shouldExecuteOnCPU([o])){let m=a.texData.get(o.dataId).values,c=Xl(m,o.shape,o.dtype,s,u);l=a.makeTensorInfo(u,o.dtype);let d=a.texData.get(l.dataId);d.values=c}else l=Fp(o,s,a);return l}var Vz={kernelName:Fn,backendName:"webgl",kernelFunc:Kt};var xD=1e3;function Ql({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=t.shape.length,m=e?r.shape[l-2]:r.shape[l-1],c=n?t.shape[p-1]:t.shape[p-2],d=e?r.shape[l-1]:r.shape[l-2],f=n?t.shape[p-2]:t.shape[p-1],h=r.shape.slice(0,-2),g=t.shape.slice(0,-2),b=y.sizeFromShape(h),T=y.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let k=e?[b,m,d]:[b,d,m],A=n?[T,f,c]:[T,c,f],F=ie({inputs:{x:r},backend:o,attrs:{shape:k}}),R=ie({inputs:{x:t},backend:o,attrs:{shape:A}}),P=[F,R],L=Math.max(b,T),O=e?F.shape[1]:F.shape[2],G=s!=null,W=a!=null,H=u==="leakyrelu",V=u!=null?Cu(u,!0):null,q=G||W||H||V!=null,Z;if((d===1||f===1)&&O>xD&&q===!1){let X=F,se=R;e&&(X=Kt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),P.push(X)),n&&(se=Kt({inputs:{x:R},backend:o,attrs:{perm:[0,2,1]}}),P.push(se));let ae=f!==1,pe=f===1,oe=X;ae&&(oe=ie({inputs:{x:X},backend:o,attrs:{shape:[L,O,1]}}),P.push(oe));let ge=f===1?2:1,fe=se;pe&&(fe=ie({inputs:{x:se},backend:o,attrs:{shape:[L,1,O]}}),P.push(fe));let ue=lg({inputs:{a:oe,b:fe},backend:o});Z=Zl({inputs:{x:ue},backend:o,attrs:{axis:ge,keepDims:!0}}),P.push(ue)}else{let X=Et(r.dtype,t.dtype),se=new Cf(k,A,[L,d,f],e,n,G,V,W,H),ae=[F,R];if(s!=null&&ae.push(s),W&&ae.push(a),H){let pe=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));ae.push(pe),P.push(pe)}Z=o.runWebGLProgram(se,ae,X)}let j=ie({inputs:{x:Z},backend:o,attrs:{shape:I}});P.push(Z);for(let X of P)o.disposeIntermediateTensorInfo(X);return j}function Fae(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return Ql({a:o,b:s,transposeA:u,transposeB:l,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:p})}var Hz={kernelName:ws,backendName:"webgl",kernelFunc:Fae};var qz="return abs(x);";function Rae(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=e.texData.get(n.dataId),a=Zx(s.values);return e.makeTensorInfo(n.shape,n.dtype,a)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new os(n.shape,qz):o=new on(n.shape,qz),e.runWebGLProgram(o,[n],n.dtype)}var jz={kernelName:ms,backendName:"webgl",kernelFunc:Rae};var Pae=Ir+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Mae=Se({opSnippet:Pae}),Xz={kernelName:Mi,backendName:"webgl",kernelFunc:Mae};var Eae=Ir+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Lae=Se({opSnippet:Eae}),Yz={kernelName:Ei,backendName:"webgl",kernelFunc:Lae};var Zz="return a + b;",_ae=dt({opSnippet:Zz,packedOpSnippet:Zz,supportsComplex:!0,cpuKernelImpl:DO}),Qz={kernelName:Nn,backendName:"webgl",kernelFunc:_ae};var iI=class{constructor(t,e){this.outputShape=[];this.outputShape=t,this.variableNames=e.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var uI=class{constructor(t,e){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.variableNames=e.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function pI(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return sr({inputs:{x:n[0]},backend:e});if(n.length>$().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=pI({inputs:n.slice(0,u),backend:e}),p=pI({inputs:n.slice(u),backend:e});return pI({inputs:[l,p],backend:e})}let o=n.map(u=>u.dtype).reduce((u,l)=>Et(u,l)),s=n.map(u=>u.shape),i=$().getBool("WEBGL_PACK")?new uI(n[0].shape,s):new iI(n[0].shape,s);return e.runWebGLProgram(i,n,o)}var Jz={kernelName:so,backendName:"webgl",kernelFunc:pI};function $ae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Kt({inputs:{x:o},backend:e,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,i)),C.assertAxesAreInnerMostDims("all",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=y.sizeFromShape(d),h=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"all",e),b;if(a){let T=C.expandShapeToKeepDim(c,u);b=ie({inputs:{x:g},backend:e,attrs:{shape:T}})}else b=ie({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),p!=null&&e.disposeIntermediateTensorInfo(m),b}var eG={kernelName:Li,backendName:"webgl",kernelFunc:$ae};function Bae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Kt({inputs:{x:o},backend:e,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,i)),C.assertAxesAreInnerMostDims("any",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=y.sizeFromShape(d),h=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"any",e),b;if(a){let T=C.expandShapeToKeepDim(c,u);b=ie({inputs:{x:g},backend:e,attrs:{shape:T}})}else b=ie({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),p!=null&&e.disposeIntermediateTensorInfo(m),b}var tG={kernelName:_i,backendName:"webgl",kernelFunc:Bae};var lI=class{constructor(t,e,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=e==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var mI=class{constructor(t,e,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;y.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,u=i.length,l=Ge(u),p=or("coords",u),m,c;if(a===1){c=u+1;let R=Ge(c);m=`
        ${R} sourceLocR = ${R}(${p.join()}, 0);
        ++${p[u-1]};
        ${R} sourceLocG = ${R}(${p.join()}, 0);
        ++${p[u-2]};
        ${R} sourceLocA = ${R}(${p.join()}, 0);
        --${p[u-1]};
        ${R} sourceLocB = ${R}(${p.join()}, 0);
        --${p[u-2]};`}else c=u,m=`
        ${l} sourceLocR = coords;
        ++${p[u-1]};
        ${l} sourceLocG = coords;
        ++${p[u-2]};
        ${l} sourceLocA = coords;
        --${p[u-1]};
        ${l} sourceLocB = coords;
        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(R=>"int "+R),g=or("sourceLocR",c-1).concat("inIdx.r"),b=or("sourceLocG",c-1).concat("inIdx.g"),T=or("sourceLocB",c-1).concat("inIdx.b"),x=or("sourceLocA",c-1).concat("inIdx.a"),I=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${x.join()})));`,A=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,F=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${F}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${p[u-2]} < ${i[u-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${A};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${A};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function rG(r,t,e,n=null){let o=t.shape[0],s=t.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=C.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},u=new lI(i,e,n==null),l=[t];n!=null&&l.push(n);let p=r.runWebGLProgram(u,l,"int32");if(p.shape[1]===1)return p;let m=rG(r,t,e,p);return r.disposeIntermediateTensorInfo(p),m}function nG(r,t,e,n=null){let o=n!=null?n.shape:t.shape,s=o[o.length-1],a=C.computeOptimalWindowSize(s),i=new mI(o,a,e,n==null),u=n==null?[t]:[t,n],l=r.runWebGLProgram(i,u,"int32");if(l.shape.length===t.shape.length){let p=nG(r,t,e,l);return r.disposeIntermediateTensorInfo(l),p}return l}function cI(r,t,e,n){let o=[e];if(C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,t.shape.length),!$().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],a=r.texData.get(t.dataId),i=a!==null&&a.isPacked,u=t;i&&(u=r.unpackTensor(t),s.push(u));let[l,p]=C.computeOutAndReduceShapes(u.shape,o),m=y.sizeFromShape(p),c=ie({inputs:{x:u},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=rG(r,c,n);s.push(d);let f=ie({inputs:{x:d},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return nG(r,t,n)}function Oae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Kt({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=cI(e,u,a[0],"max");return l.forEach(m=>e.disposeIntermediateTensorInfo(m)),p}var oG={kernelName:ao,backendName:"webgl",kernelFunc:Oae};function zae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Kt({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=cI(e,u,a[0],"min");return l.forEach(m=>e.disposeIntermediateTensorInfo(m)),p}var sG={kernelName:mi,backendName:"webgl",kernelFunc:zae};var Gae=Ir+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Uae=Se({opSnippet:Gae}),aG={kernelName:$i,backendName:"webgl",kernelFunc:Uae};var Wae=Ir+"return log(x + sqrt(x * x + 1.0));",Kae=Se({opSnippet:Wae}),iG={kernelName:Bi,backendName:"webgl",kernelFunc:Kae};var Vae=Ir+`
  return atan(x);
`,Hae=Se({opSnippet:Vae}),uG={kernelName:Oi,backendName:"webgl",kernelFunc:Hae};var qae=$z+`
  return atan(a, b);
`,jae=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Bz+`
  return result;
`,Xae=dt({opSnippet:qae,packedOpSnippet:jae}),pG={kernelName:la,backendName:"webgl",kernelFunc:Xae};var Yae=Ir+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Zae=Se({opSnippet:Yae}),lG={kernelName:zi,backendName:"webgl",kernelFunc:Zae};var ri=class{constructor(t,e,n,o=!1,s=!1){this.variableNames=["x"];if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=t.filterWidth,i=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,p=t.dilationWidth,m=t.effectiveFilterHeight,c=t.effectiveFilterWidth,d=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;let h=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,T="0.0";if(h||(T="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${R} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:b:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",I=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(I="avgValue / count");let k=Math.floor(a/4)*4,A=a%4,F=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${F}
          }

          int xC = xCCorner + ${k};
          if (${A===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${F}
          } else if (${A===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${F}
          } else if (${A===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${F}
          }
        }
        setOutput(${I});
      }
    `}},Rp=class{constructor(t,e,n,o=!1,s=!1){this.variableNames=["x"];if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=t.filterWidth,i=t.strideDepth,u=t.strideHeight,l=t.strideWidth,p=t.dilationDepth,m=t.dilationHeight,c=t.dilationWidth,d=t.effectiveFilterDepth,f=t.effectiveFilterHeight,h=t.effectiveFilterWidth,g=t.padInfo.front,b=t.padInfo.top,T=t.padInfo.left;this.outputShape=t.outShape;let x=e==="avg",I="0.0";if(x||(I="-1.0 / 1e-20"),n){let L=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${b}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${L} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",A=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(A="avgValue / count");let F=Math.floor(a/4)*4,R=a%4,P=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${b}, ${T});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${F}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${P}
            }

            int xC = xCCorner + ${F};
            if (${R===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${R===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${R===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${P}
            }
          }
          setOutput(${A});
        }
      }
    `}};function Qae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;ei(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))return sr({inputs:{x:o},backend:e});let m=new ri(p,"avg",!1);return e.runWebGLProgram(m,[o],"float32")}var mG={kernelName:io,backendName:"webgl",kernelFunc:Qae};function Jae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n,p=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,p,i,u,l),c=new Rp(m,"avg",!1);return e.runWebGLProgram(c,[o],"float32")}var cG={kernelName:Ru,backendName:"webgl",kernelFunc:Jae};var dI=class{constructor(t){this.variableNames=["dy"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,p=u-1-t.padInfo.top,m=l-1-t.padInfo.left,c=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},fI=class{constructor(t){this.variableNames=["dy"];this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,p=t.dilationWidth,m=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=m-1-t.padInfo.front,h=c-1-t.padInfo.top,g=d-1-t.padInfo.left,b=1/(e*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function eie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,l,p),d=new fI(c);return e.runWebGLProgram(d,[o],a.dtype)}var dG={kernelName:Im,backendName:"webgl",kernelFunc:eie};function tie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s;ei([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=C.computePool2DInfo(a.shape,i,u,1,l),m=new dI(p);return e.runWebGLProgram(m,[o],a.dtype)}var fG={kernelName:xm,backendName:"webgl",kernelFunc:tie};function rie(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;return Ql({a:o,b:s,transposeA:a,transposeB:i,backend:e})}var hG={kernelName:uo,backendName:"webgl",kernelFunc:rie};var hI=class{constructor(t,e,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(t,e),C.assertAndGetBroadcastShape(t,n);let i="0.0";o!=null&&(C.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";s!=null&&(C.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var gI=class{constructor(t,e,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(t,e),C.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";o!=null&&(C.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(C.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var nie=({inputs:r,backend:t,attrs:e})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;y.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);let l=[n,o,s],p=null;a!=null&&(p=a.shape,l.push(a));let m=null;i!=null&&(m=i.shape,l.push(i));let c=$().getBool("WEBGL_PACK_NORMALIZATION")?new gI(n.shape,o.shape,s.shape,p,m,u):new hI(n.shape,o.shape,s.shape,p,m,u);return t.runWebGLProgram(c,l,l[0].dtype)},gG={kernelName:Co,backendName:"webgl",kernelFunc:nie};var bI=class{constructor(t){this.variableNames=["source"];this.outputShape=t,this.rank=t.length;let e=Ge(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=oie(this.rank),o,s=t.map((a,i)=>`sourceLoc.${ID[i]} = start[${i}] + coords.${ID[i]};`);o=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},ID=["x","y","z","w","u","v"];function oie(r){if(r===1)return"sourceLoc";if(r<=6)return ID.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var yI=class{constructor(t){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Ge(this.rank),n=or("coords",this.rank),o=or("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((p,m)=>`start[${m}]`).join()});`:t.map((p,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}};function sie(r,t,e,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(e,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=e,a.dtype=r.dtype;let i=xt.computeFlatOffset(t,y.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,u+1),s}function ni(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n,[i,u]=xt.parseSliceParams(o,s,a);if(xt.assertParamsValid(o,i,u),y.sizeFromShape(u)===0)return e.makeTensorInfo(u,o.dtype,[]);if(e.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=e.texData.get(o.dataId),c=sz(m.values,i,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,c)}let{isPacked:l}=e.texData.get(o.dataId),p=xt.isSliceContinous(o.shape,i,u);if(l||!p){let m=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yI(u):new bI(u),c=[i];return e.runWebGLProgram(m,[o],o.dtype,c)}return e.uploadToGPU(o.dataId),sie(o,i,u,e)}var bG={kernelName:Is,backendName:"webgl",kernelFunc:ni};var aie=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=[],f=ie({inputs:{x:o},backend:e,attrs:{shape:u}}),h=Kt({inputs:{x:f},backend:e,attrs:{perm:l}}),g=ie({inputs:{x:h},backend:e,attrs:{shape:p}}),b=ni({inputs:{x:g},backend:e,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>e.disposeIntermediateTensorInfo(T)),b},yG={kernelName:cs,backendName:"webgl",kernelFunc:aie};function iie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=e.readSync(o.dataId),u=e.readSync(s.dataId),l=Yx(i,u,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,l)}var TG={kernelName:Cm,backendName:"webgl",kernelFunc:iie};function uie(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.readSync(n.dataId),a=e.readSync(o.dataId),i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var xG={kernelName:km,backendName:"webgl",kernelFunc:uie};var pie="return float(a != b);",CD=dt({opSnippet:pie,cpuKernelImpl:ZO,dtype:"bool"}),IG={kernelName:Sa,backendName:"webgl",kernelFunc:CD};function ku(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.real},backend:e})}var CG={kernelName:zu,backendName:"webgl",kernelFunc:ku};var lie="return float(int(x));";function kG(r,t){let e=new on(r.shape,lie),n=t.runWebGLProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function kD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return sr({inputs:{x:o},backend:e});let a=It(o.shape),i=kD({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),u=On({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=ku({inputs:{input:o},backend:e}),i=kD({inputs:{x:a},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=sr({inputs:{x:o},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let a=e.texData.get(o.dataId).values,[i,u,l]=RO(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,u,l)}if(s==="int32")return kG(o,e);if(s==="bool"){let a=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),u=CD({inputs:{a:o,b:a},backend:e});return e.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var SG={kernelName:Wn,backendName:"webgl",kernelFunc:kD};var vG="return ceil(x);",mie=Se({opSnippet:vG,packedOpSnippet:vG,cpuKernelImpl:PO}),AG={kernelName:po,backendName:"webgl",kernelFunc:mie};var TI=class{constructor(t){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var xI=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function cie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i;$().getBool("WEBGL_PACK_CLIP")?i=new xI(o.shape):i=new TI(o.shape);let u=[[s],[a]];return e.runWebGLProgram(i,[o],o.dtype,u)}var wG={kernelName:Kn,backendName:"webgl",kernelFunc:cie};var II=class{constructor(t){this.variableNames=["real","imag"];this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function NG(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function die(r){let{inputs:t,backend:e}=r,{x:n}=t,o=e.texData.get(n.dataId),s=new II(n.shape),a=[NG(n,o.complexTensorInfos.real),NG(n,o.complexTensorInfos.imag)];return e.runWebGLProgram(s,a,a[0].dtype)}var DG={kernelName:Mu,backendName:"webgl",kernelFunc:die};var CI=class{constructor(t){this.outputShape=[];this.outputShape=C.computeOutShape(t,1),this.variableNames=t.map((a,i)=>`T${i}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];let n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<e.length;a++){let i=e[a-1];n.push(`else if (yC < ${e[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=e.length,s=e[e.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var SI=class{constructor(t,e){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=C.computeOutShape(t,e);let n=this.outputShape,o=n.length,s=Ge(o),a=or("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((h,g)=>`T${g}`);let u=new Array(t.length-1);u[0]=t[0][e];for(let h=1;h<u.length;h++)u[h]=u[h-1]+t[h][e];let l=i[e],p=i.slice(-2),m=i.join(),c=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${m}), vec2(${p.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];c+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${kI(i,l,g)}),
            vec2(${kI(p,l,g)}));
        }`}let d=u.length,f=u[u.length-1];c+=`
        return getChannel(
          getT${d}(${kI(i,l,f)}),
          vec2(${kI(p,l,f)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function kI(r,t,e){let n=r.indexOf(t);return r.map((s,a)=>a===n?`${s} - ${e}`:s).join()}function Jl(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.imag},backend:e})}var FG={kernelName:$u,backendName:"webgl",kernelFunc:Jl};function kf(r,t,e){let n=r[0].dtype;if(n==="complex64"){let m=r.map(g=>ku({inputs:{input:g},backend:e})),c=r.map(g=>Jl({inputs:{input:g},backend:e})),d=kf(m,t,e),f=kf(c,t,e),h=On({inputs:{real:d,imag:f},backend:e});return m.forEach(g=>e.disposeIntermediateTensorInfo(g)),c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),h}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let m=r.map(T=>{let x=y.sizeFromShape(T.shape.slice(t));return ie({inputs:{x:T},backend:e,attrs:{shape:[-1,x]}})}),c=m.map(T=>({vals:e.readSync(T.dataId),shape:T.shape})),d=C.computeOutShape(m.map(T=>T.shape),1),f=m[0].shape[0]===1,h=MO(c,d,n,f),g=C.computeOutShape(r.map(T=>T.shape),t),b=e.makeTensorInfo(g,n,h);return m.forEach(T=>e.disposeIntermediateTensorInfo(T)),b}let s=$().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>s){let m=[];for(let d=0;d<r.length;d+=s){let f=r.slice(d,d+s);m.push(kf(f,t,e))}let c=kf(m,t,e);for(let d of m)e.disposeIntermediateTensorInfo(d);return c}if($().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let m=new SI(r.map(c=>c.shape),t);return e.runWebGLProgram(m,r,n)}let{tensors2D:a,outShape:i}=fie(r,t,e),u=new CI(a.map(m=>m.shape)),l=e.runWebGLProgram(u,a,n);a.forEach(m=>e.disposeIntermediateTensorInfo(m));let p=ie({inputs:{x:l},attrs:{shape:i},backend:e});return e.disposeIntermediateTensorInfo(l),p}function fie(r,t,e){let n=C.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>ie({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(t))]},backend:e})),outShape:n}}function SD(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(l=>l.shape);C.assertParamsConsistent(a,s);let i=C.computeOutShape(t.map(l=>l.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let u=t.filter(l=>y.sizeFromShape(l.shape)>0);return u.length===1?sr({inputs:{x:u[0]},backend:e}):kf(u,s,e)}var RG={kernelName:ds,backendName:"webgl",kernelFunc:SD};var Sf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=t.outShape;let a=t.padInfo.top,i=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,p=t.dilationHeight,m=t.dilationWidth,c=t.filterHeight,d=t.filterWidth,f=Math.floor(t.inChannels/4)*4,h=t.inChannels%4,g=t.dataFormat==="channelsLast",b=g?1:2,T=g?2:3,x=g?3:1,I="",k="";n&&(o?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:I=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let A=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${A}
        ${k}
        setOutput(result);
      }
    `}},vI=class{constructor(t){this.variableNames=["x","W"];this.outputShape=t.outShape;let e=t.padInfo.front,n=t.padInfo.top,o=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,p=t.dilationWidth,m=t.filterDepth,c=t.filterHeight,d=t.filterWidth,f=Math.floor(t.inChannels/4)*4,h=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${e}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var vf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Nt(this.outputShape.length);let a=t.padInfo.left,i=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,p=t.filterWidth,m=p,c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<p;g++)c+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;c+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<p;g++)c+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(m+1)/2;g++){let b=g*2;if(c+=`
           xC = xCCorner + ${b*u};
           `,i===1){if(b<p&&(a%2===1?(c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,u===1&&b>0?c+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<p)){let T=a%2===0?y.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${T};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,u>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:c+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):T===1?c+=`
                     xC${b+1} = xTexelC${b};
                     `:c+=`
                     xCOffset = xC + ${T};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<p&&(a%2===1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<p&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<p&&(c+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<p&&(c+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<p&&(c+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   `,c+=`
     }
   `,c+=`
     }
   `;let d="",f="";n&&(o?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:s?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,f="result = activation(result);");let h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${h}
         ${f}
         setOutput(result);
       }
     `}};var AI=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let{dataFormat:n}=e,o=Zt(),s=n==="channelsLast",a=s?1:2,i=s?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,l="";for(let p=0;p<=1;p++)for(let m=0;m<=1;m++)l+=`
          blockIndex = rc.z + ${m};
          pos = rc.y + ${p};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+m}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+m}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function wI(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function NI({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=r.shape,l=n.texData.get(r.dataId),p=e.inChannels,m=u[0]*u[1]*u[2],c=e.outChannels,d=e.dataFormat==="channelsLast",f=!1,h=!1,g,b=[];if(s!=null){let I=wI(s.shape,d);I!=null&&(s=ie({inputs:{x:s},backend:n,attrs:{shape:I}}),b.push(s))}if(o!=null){let I=wI(o.shape,d);I!=null&&(o=ie({inputs:{x:o},backend:n,attrs:{shape:I}}),b.push(o))}if(!((m===1||c===1)&&p>xD)&&l.isPacked&&d&&l.texture!=null&&u[2]%2!==0&&y.arraysEqual(l.shape.slice(-3),u.slice(-3))){let I=u[0]*u[1]*(u[2]+1),k={dataId:r.dataId,shape:[1,I,e.inChannels],dtype:r.dtype},A=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,y.assert(Np(l.shape,k.shape),()=>`packed reshape ${l.shape} to ${k.shape} isn't free`);let F=ie({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});b.push(F);let R=Ql({a:k,b:F,backend:n,transposeA:f,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),P=n.texData.get(R.dataId);y.assert(P.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=A,P.shape=e.outShape,g=sr({inputs:{x:R},backend:n}),g.shape=e.outShape,b.push(R)}else{let I=e.outHeight*e.outWidth,k=ie({inputs:{x:r},backend:n,attrs:{shape:d?[e.batchSize,I,e.inChannels]:[e.batchSize,e.inChannels,I]}}),A=ie({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),F=Ql({a:d?k:A,b:d?A:k,transposeA:!d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ie({inputs:{x:F},backend:n,attrs:{shape:e.outShape}}),b.push(k),b.push(A),b.push(F)}for(let I of b)n.disposeIntermediateTensorInfo(I);return g}function DI({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:u,filterHeight:l,inChannels:p,outWidth:m,outHeight:c,dataFormat:d}=e,f=d==="channelsLast",h=u*l*p,g=c*m,b=[e.batchSize,h,g],T=!0,x=!1,I=[];if(s!=null){let j=wI(s.shape,f);j!=null&&(s=ie({inputs:{x:s},backend:n,attrs:{shape:j}}),I.push(s))}if(o!=null){let j=wI(o.shape,f);j!=null&&(o=ie({inputs:{x:o},backend:n,attrs:{shape:j}}),I.push(o))}let k=ie({inputs:{x:t},backend:n,attrs:{shape:[1,h,y.sizeFromShape(t.shape)/h]}});I.push(k);let A=new AI(b,e),F=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],R=n.runWebGLProgram(A,[r],"float32",F),P=ie({inputs:{x:R},backend:n,attrs:{shape:b}});I.push(R),I.push(P);let L=o!=null,O=s!=null,G=i==="leakyrelu",W=i?Cu(i,!0):null,H=new Cf(f?P.shape:k.shape,f?k.shape:P.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],T,x,L,W,O,G),V=f?[P,k]:[k,P];if(o&&V.push(o),O&&V.push(s),G){let j=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));V.push(j),I.push(j)}let q=n.runWebGLProgram(H,V,"float32"),Z=ie({inputs:{x:q},backend:n,attrs:{shape:e.outShape}});I.push(q);for(let j of I)n.disposeIntermediateTensorInfo(j);return Z}function hie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=NI({x:o,filter:s,convInfo:c,backend:e});else if(c.strideWidth<=2&&m==="channelsLast"&&$().getBool("WEBGL_EXP_CONV")){let h=new vf(c),g=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];d=e.runWebGLProgram(h,[o,s],"float32",g)}else if($().getBool("WEBGL_CONV_IM2COL"))d=DI({x:o,filter:s,convInfo:c,backend:e});else{let h=new Sf(c);d=e.runWebGLProgram(h,[o,s],"float32")}let f=ie({inputs:{x:d},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(d),f}var PG={kernelName:lo,backendName:"webgl",kernelFunc:hie};var FI=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,a=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},RI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=t.dataFormat==="channelsLast",i=e-1-t.padInfo.top,u=n-1-t.padInfo.left,l=a?1:2,p=a?2:3,m=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},PI=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},MI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=e-1-t.padInfo.front,l=n-1-t.padInfo.top,p=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function gie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,p,a,1,i,l,!1,m),d=new FI(c);return e.runWebGLProgram(d,[o,s],"float32")}var MG={kernelName:Sm,backendName:"webgl",kernelFunc:gie};function bie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(l),c=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,m),d=new RI(c);return e.runWebGLProgram(d,[o,s],"float32")}var EG={kernelName:mo,backendName:"webgl",kernelFunc:bie};function yie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u}=n,l=C.computeConv3DInfo(o.shape,s.shape,a,u,i),p=new vI(l);return e.runWebGLProgram(p,[o,s],"float32")}var LG={kernelName:Eu,backendName:"webgl",kernelFunc:yie};function Tie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:u}=n,l=C.computeConv3DInfo(o.shape,u,a,1,i),p=new PI(l);return e.runWebGLProgram(p,[o,s],"float32")}var _G={kernelName:vm,backendName:"webgl",kernelFunc:Tie};function xie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:a,strides:i,inputShape:u}=n,l=C.computeConv3DInfo(u,s.shape,i,1,a),p=new MI(l);return e.runWebGLProgram(p,[o,s],"float32")}var $G={kernelName:Am,backendName:"webgl",kernelFunc:xie};var Iie=ea+`
  return cos(x);
`,Cie=Se({opSnippet:Iie}),BG={kernelName:co,backendName:"webgl",kernelFunc:Cie};var kie=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Sie=Se({opSnippet:kie}),OG={kernelName:fo,backendName:"webgl",kernelFunc:Sie};var EI=class{constructor(t,e,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,u,l]=t,[p]=e,[m,c]=n;this.outputShape=[p,m,c,l];let d=o==="bilinear"?1:0,[f,h]=[`${i-1}.0`,`${u-1}.0`],[g,b,T]=m>1?[`${(i-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,I,k]=c>1?[`${(u-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${I};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var vie=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:l}=n,p=new EI(o.shape,s.shape,i,u,l);return e.runWebGLProgram(p,[o,s,a],"float32")},zG={kernelName:ca,backendName:"webgl",kernelFunc:vie};var cg=class{constructor(t,e,n,o){this.op=t;this.outputShape=e;this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${GG(s,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1],l="",p="";n?(l=o?`end != ${u-1}`:"end != 0",p=o?"end + 1":"end - 1"):(l=o?`end + pow2 < ${u}`:"end >= pow2",p=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ge(s)} coords = getOutputCoords();
        int end = ${UG(s,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${p};
          ${UG(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${GG(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function GG(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function UG(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function LI(r,t,e,n,o,s){let a=t.shape.length,i=C.getAxesPermutation([n],a),u=t;i!=null&&(u=Kt({inputs:{x:t},backend:e,attrs:{perm:i}}));let l=C.getInnerMostAxes(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let p=u.shape[l],m=sr({inputs:{x:u},backend:e});for(let c=0;c<=Math.ceil(Math.log2(p))-1;c++){let d=new cg(r,u.shape,!1,s),f=[[c]],h=m;m=e.runWebGLProgram(d,[m],m.dtype,f),e.disposeIntermediateTensorInfo(h)}if(o){let c=new cg(r,u.shape,o,s),d=m;m=e.runWebGLProgram(c,[m],m.dtype),e.disposeIntermediateTensorInfo(d)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Kt({inputs:{x:m},backend:e,attrs:{perm:c}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(u),d}return m}function wie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return LI("*",o,e,s,a,i)}var WG={kernelName:ma,backendName:"webgl",kernelFunc:wie};function Nie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return LI("+",o,e,s,a,i)}var KG={kernelName:ho,backendName:"webgl",kernelFunc:Nie};function Die(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=e.readSync(o.dataId),l=e.readSync(s.dataId),p=Yx(u,l,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=e.bufferSync(o),l=e.bufferSync(s),p=FO(u,l,a,i);return e.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var VG={kernelName:wm,backendName:"webgl",kernelFunc:Die};var _I=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Fie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=new _I(f,s,a);return e.runWebGLProgram(h,[o],o.dtype)}var HG={kernelName:da,backendName:"webgl",kernelFunc:Fie};var Af=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Nt(this.outputShape.length);let a=t.filterHeight,i=t.filterWidth,u=t.outChannels/t.inChannels,l="",p="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${p}
        setOutput(result);
      }
    `}};var wf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Nt(this.outputShape.length);let a=t.outChannels/t.inChannels,i=t.padInfo.left,u=t.strideWidth,l=t.dilationWidth,p=t.filterHeight,m=t.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<m;b++)d+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;d+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let b=0;b<m;b++)d+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(c+1)/2;b++){let T=b*2;if(d+=`
          xC = xCCorner + ${T*l};
          `,u===1){if(T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,l===1&&T>0?d+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<m)){let x=i%2===0?y.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,l>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${T+1} = vec4(previous.zw, xTexelC${T+1}.xy);
                    } else {
                     xC${T+1} = vec4(0.0, 0.0, xTexelC${T+1}.xy);
                    }
                    `:d+=`
                    xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                    `):x===1?d+=`
                    xC${T+1} = xTexelC${T};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<m&&(d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<m&&(d+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<m&&(d+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function Rie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let m=C.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!0),c;$().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new wf(m):c=new Af(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return e.runWebGLProgram(c,[o,s],"float32",d)}var qG={kernelName:go,backendName:"webgl",kernelFunc:Rie};var $I=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},BI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Pie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n,m=C.computeConv2DInfo(o.shape,p,a,i,u,l,!0),c=new $I(m);return e.runWebGLProgram(c,[o,s],"float32")}var jG={kernelName:Nm,backendName:"webgl",kernelFunc:Pie};function Mie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n,m=C.computeConv2DInfo(p,s.shape,a,i,u,l,!0),c=new BI(m);return e.runWebGLProgram(c,[o,s],"float32")}var XG={kernelName:Dm,backendName:"webgl",kernelFunc:Mie};var OI=class{constructor(t){this.variableNames=["X"];this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Eie(r){let{inputs:t,backend:e}=r,{x:n}=t,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=ie({inputs:{x:n},backend:e,attrs:{shape:[s]}}),i=new OI(s),u=e.runWebGLProgram(i,[a],a.dtype),l=ie({inputs:{x:u},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),l}var YG={kernelName:Fm,backendName:"webgl",kernelFunc:Eie};var zI=class{constructor(t){this.variableNames=["x","W"];this.outputShape=t.outShape;let{inHeight:e,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:l,dilationWidth:p}=t,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Lie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u}=n,l=C.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",u),p,m=new zI(l);p=e.runWebGLProgram(m,[o,s],"float32");let c=ie({inputs:{x:p},backend:e,attrs:{shape:l.outShape}});return e.disposeIntermediateTensorInfo(p),c}var ZG={kernelName:Lu,backendName:"webgl",kernelFunc:Lie};function _ie(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:b,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(b)?x=s[g]:(x=Kt({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);y.arraysEqual(x.shape,I)||(x=ie({inputs:{x},backend:e,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=lg({inputs:{a:x,b:c},backend:e}),f.push(c))}h<m-1&&(l[h]>=0&&(c=Zl({inputs:{x:c},backend:e,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeIntermediateTensorInfo(h);return c}var QG={kernelName:_u,backendName:"webgl",kernelFunc:_ie};var $ie="return (x >= 0.0) ? x : (exp(x) - 1.0);",Bie=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Oie=Se({opSnippet:$ie,packedOpSnippet:Bie}),JG={kernelName:yo,backendName:"webgl",kernelFunc:Oie};var zie="return (b >= 1.0) ? a : a * (b + 1.0);",Gie=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Uie=r=>{let{inputs:t,backend:e}=r,{dy:n,y:o}=t,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Js(Gie,n.shape,o.shape):new ss(zie,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],n.dtype)},e3={kernelName:Rm,backendName:"webgl",kernelFunc:Uie};var Wie=`
  return vec4(equal(a, b));
`,Kie="return float(a == b);",Vie=dt({opSnippet:Kie,packedOpSnippet:Wie,dtype:"bool",cpuKernelImpl:EO}),t3={kernelName:fa,backendName:"webgl",kernelFunc:Vie};var Hie=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,qie=Se({opSnippet:Hie}),r3={kernelName:Gi,backendName:"webgl",kernelFunc:qie};var jie=ea+`
  return exp(x);
`,Xie=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vD=Se({opSnippet:jie,packedOpSnippet:Xie,cpuKernelImpl:LO,dtype:"float32"}),n3={kernelName:To,backendName:"webgl",kernelFunc:vD};function GI(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),ie({inputs:{x:s},backend:n,attrs:{shape:i}})}var o3={kernelName:fs,backendName:"webgl",kernelFunc:GI};var s3="return exp(x) - 1.0;",Yie=Se({opSnippet:s3,packedOpSnippet:s3,cpuKernelImpl:_O}),a3={kernelName:ha,backendName:"webgl",kernelFunc:Yie};var dg=class{constructor(t,e,n){this.variableNames=["real","imag"];let o=e[1];this.outputShape=e;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(t==="real")i="return real * expR - imag * expI;";else if(t==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function UI(r,t,e){let n=e.texData.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ie({inputs:{x:r},backend:e,attrs:{shape:[a,s]}}),u=i.shape,l=new dg("real",u,t),p=new dg("imag",u,t),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],c=e.runWebGLProgram(l,m,"float32"),d=e.runWebGLProgram(p,m,"float32"),f=On({inputs:{real:c,imag:d},backend:e});e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d);let h=ie({inputs:{x:f},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),h}function Zie(r){let{inputs:t,backend:e}=r,{input:n}=t;return UI(n,!1,e)}var i3={kernelName:Pm,backendName:"webgl",kernelFunc:Zie};var WI=class{constructor(t,e){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Su(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),t.makeTensorInfo(n,s,a)}else{let a=new WI(n,o),i=[[o]];return t.runWebGLProgram(a,[],s,i)}}var u3={kernelName:ci,backendName:"webgl",kernelFunc:Su};var KI=class{constructor(t){this.variableNames=["Image"];this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var p3={kernelName:ga,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new KI(e.shape);return n.runWebGLProgram(o,[e],e.dtype)}};var l3="return floor(x);",Qie=Se({opSnippet:l3,packedOpSnippet:l3,cpuKernelImpl:$O}),m3={kernelName:xo,backendName:"webgl",kernelFunc:Qie};var Jie=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,eue=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,tue=dt({opSnippet:Jie,packedOpSnippet:eue,dtype:"int32"}),c3={kernelName:Io,backendName:"webgl",kernelFunc:tue};var VI=class{constructor(t){this.variableNames=["A"];let e=Zt(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var HI=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let e=Zt(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var d3={kernelName:Kp,backendName:"webgl",kernelFunc:rue},Nf,AD=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function rue(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[u,l]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[l,u],m=[l,u,s];if(i||a){let h=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Nf==null||h!==AD)&&(AD=h,Nf=document.createElement("canvas").getContext("2d",{willReadFrequently:AD})),Nf.canvas.width=u,Nf.canvas.height=l,Nf.drawImage(o,0,0,u,l),o=Nf.canvas}let c=e.makeTensorInfo(p,"int32");e.texData.get(c.dataId).usage=2,e.gpgpu.uploadPixelDataToTexture(e.getTexture(c.dataId),o);let d=$().getBool("WEBGL_PACK")?new HI(m):new VI(m),f=e.runWebGLProgram(d,[c],"int32");return e.disposeData(c.dataId),f}function nue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(p),g=C.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h),b,T=[],x=a!=null,I=i!=null,k=d==="leakyrelu",A=()=>{let R=[o,s],P=(L,O)=>{if(O==="NCHW"&&L.shape.length===1&&L.shape[0]!==1){let G=ie({inputs:{x:L},backend:e,attrs:{shape:[L.shape[0],1,1]}});return T.push(G),G}return L};if(x&&R.push(P(a,p)),I&&R.push(P(i,p)),k){let L=e.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));R.push(L),T.push(L)}return R};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=NI({x:o,filter:s,convInfo:g,backend:e,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&h==="channelsLast"&&$().getBool("WEBGL_EXP_CONV")){let R=d?Cu(d,!0):null,P=new vf(g,x,R,I,k),L=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],O=A();b=e.runWebGLProgram(P,O,"float32",L)}else if($().getBool("WEBGL_CONV_IM2COL"))b=DI({x:o,filter:s,convInfo:g,backend:e,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{let R=d?Cu(d,!1):null,P=new Sf(g,x,R,I,k),L=A();b=e.runWebGLProgram(P,L,"float32")}let F=ie({inputs:{x:b},backend:e,attrs:{shape:g.outShape}});return T.push(b),T.forEach(R=>e.disposeIntermediateTensorInfo(R)),F}var f3={kernelName:Ns,backendName:"webgl",kernelFunc:nue};function oue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=p;h==null&&(h=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=C.computeConv2DInfo(o.shape,s.shape,u,h,l,m,!0),b=$().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,T=c?Cu(c,b):null,x=[o,s],I=a!=null,k=i!=null,A=c==="leakyrelu";if(I&&x.push(a),k&&x.push(i),A){let L=e.makeTensorInfo([],"float32",y.createScalarValue(d,"float32"));x.push(L),f.push(L)}let F;b?F=new wf(g,I,T,k,A):F=new Af(g,I,T,k,A);let R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],P=e.runWebGLProgram(F,x,"float32",R);return f.forEach(L=>e.disposeIntermediateTensorInfo(L)),P}var h3={kernelName:Ds,backendName:"webgl",kernelFunc:oue};var qI=class{constructor(t,e,n,o){this.sliceDim=t;this.strides=e;this.paramsShape=o;this.variableNames=["x","indices"];this.outputShape=n;let s=Ge(e.length),a=Ge(n.length),i=this.sliceDim>1?"strides[j]":"strides",u=Ge(o.length),l=o.length>1?"paramsShape[j]":"paramsShape";this.userCode=`
        ${s} strides = ${s}(${this.strides});
        ${u} paramsShape = ${u}(${this.paramsShape});
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            out_of_bounds = out_of_bounds || index < 0;
            out_of_bounds = out_of_bounds || index >= ${l};
            flattenIndex += index * ${i};
          }
          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function sue(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[u,l,p,m]=C.prepareAndValidate(n,o),c=ie({inputs:{x:o},backend:e,attrs:{shape:[l,a]}}),d=ie({inputs:{x:n},backend:e,attrs:{shape:[y.sizeFromShape(n.shape)/p,p]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let b=e.readSync(o.dataId),T=e.bufferSync(n),x=BO(b,T,n.dtype,l,a,p,m,n.shape,i);return e.makeTensorInfo(u,n.dtype,x.values)}let f=new qI(a,m,[l,p],n.shape),h=e.runWebGLProgram(f,[d,c],d.dtype),g=ie({inputs:{x:h},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),g}var g3={kernelName:ba,backendName:"webgl",kernelFunc:sue};var jI=class{constructor(t,e){this.variableNames=["A","indices"];this.outputShape=e,this.rank=e.length;let n=Ge(this.rank),o=aue(t,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function aue(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${e[o]}`);return n.join()}function wD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0];if($().get("DEBUG")){let T=e.readSync(s.dataId),x=o.shape[u];for(let I=0;I<T.length;++I){let k=T[I];y.assert(k<=x-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${x-1}]`)}}let l=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=y.sizeFromShape(s.shape),m=[],c=ie({inputs:{x:o},backend:e,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=ie({inputs:{x:s},backend:e,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(e.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let T=e.bufferSync(d),x=e.bufferSync(c),I=OO(x,T,f);return m.forEach(k=>e.disposeIntermediateTensorInfo(k)),e.makeTensorInfo(l.outputShape,I.dtype,I.values)}let h=new jI(c.shape,f),g=e.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let b=ie({inputs:{x:g},backend:e,attrs:{shape:l.outputShape}});return m.forEach(T=>e.disposeIntermediateTensorInfo(T)),b}var b3={kernelName:hs,backendName:"webgl",kernelFunc:wD};var iue="return float(a > b);",uue=`
  return vec4(greaterThan(a, b));
`,pue=dt({opSnippet:iue,packedOpSnippet:uue,cpuKernelImpl:zO,dtype:"bool"}),y3={kernelName:ya,backendName:"webgl",kernelFunc:pue};var lue="return float(a >= b);",mue=`
  return vec4(greaterThanEqual(a, b));
`,cue=dt({opSnippet:lue,packedOpSnippet:mue,dtype:"bool",cpuKernelImpl:GO}),T3={kernelName:ko,backendName:"webgl",kernelFunc:cue};function due(r){let{inputs:t,backend:e}=r,{input:n}=t;return UI(n,!0,e)}var x3={kernelName:Mm,backendName:"webgl",kernelFunc:due};var fue="return float(!isnan(x) && !isinf(x));",hue=Se({opSnippet:fue,dtype:"bool"}),I3={kernelName:Ui,backendName:"webgl",kernelFunc:hue};var gue="return float(isinf(x));",bue=Se({opSnippet:gue,dtype:"bool"}),C3={kernelName:Wi,backendName:"webgl",kernelFunc:bue};var yue="return float(isnan(x));",Tue=Se({opSnippet:yue,dtype:"bool"}),k3={kernelName:Ta,backendName:"webgl",kernelFunc:Tue};var xue="return float(a < b);",Iue=`
  return vec4(lessThan(a, b));
`,Cue=dt({opSnippet:xue,packedOpSnippet:Iue,cpuKernelImpl:UO,dtype:"bool"}),S3={kernelName:xa,backendName:"webgl",kernelFunc:Cue};var kue="return float(a <= b);",Sue=`
  return vec4(lessThanEqual(a, b));
`,vue=dt({opSnippet:kue,packedOpSnippet:Sue,cpuKernelImpl:WO,dtype:"bool"}),v3={kernelName:Ia,backendName:"webgl",kernelFunc:vue};function Aue(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,a=KO(n,o,s);return t.makeTensorInfo([a.length],"float32",a)}var A3={kernelName:Em,backendName:"webgl",kernelFunc:Aue};var wue=ea+`
  return x < 0.0 ? 0./0. : log(x);
`,Nue=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Due=Se({opSnippet:wue,packedOpSnippet:Nue,cpuKernelImpl:VO}),w3={kernelName:vo,backendName:"webgl",kernelFunc:Due};var Fue=ea+`
  return log(1.0 + x);
`,Rue=Se({opSnippet:Fue}),N3={kernelName:Ki,backendName:"webgl",kernelFunc:Rue};var Pue="return float(a >= 1.0 && b >= 1.0);",Mue=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Eue=dt({opSnippet:Pue,packedOpSnippet:Mue,dtype:"bool"}),D3={kernelName:Ca,backendName:"webgl",kernelFunc:Eue};var Lue="return float(!(x >= 1.0));",_ue=Se({opSnippet:Lue}),F3={kernelName:ka,backendName:"webgl",kernelFunc:_ue};var $ue="return float(a >= 1.0 || b >= 1.0);",Bue=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Oue=dt({opSnippet:$ue,packedOpSnippet:Bue,dtype:"bool"}),R3={kernelName:Vi,backendName:"webgl",kernelFunc:Oue};var XI=class{constructor(t,e,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=e,i=t[3]-1;this.outputShape=t;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var YI=class{constructor(t,e,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=e,i=t[3]-1;this.outputShape=t;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var zue=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:u}=n,l=$().getBool("WEBGL_PACK_NORMALIZATION")?new YI(o.shape,s,a,i,u):new XI(o.shape,s,a,i,u);return e.runWebGLProgram(l,[o],o.dtype)},P3={kernelName:Bu,backendName:"webgl",kernelFunc:zue};var ZI=class{constructor(t,e,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Gue=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:u,alpha:l,beta:p}=n,m=new ZI(o.shape,i,u,l,p);return e.runWebGLProgram(m,[o,s,a],o.dtype)},M3={kernelName:Lm,backendName:"webgl",kernelFunc:Gue};function E3(r,t,e,n){let o=y.sizeFromShape(t),a=y.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=eo(i,r.dtype,"max",n),l=ie({inputs:{x:u},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}function ND(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=p!=null,c=e.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let x=e.texData.get(d.dataId).values,I=new Array(i);for(let F=0;F<I.length;F++)I[F]=o.shape[p[F]];let k=Xl(x,o.shape,o.dtype,p,I);d=e.makeTensorInfo(I,o.dtype);let A=e.texData.get(d.dataId);A.values=k}else d=Fp(o,p,e);l=C.getInnerMostAxes(l.length,i)}C.assertAxesAreInnerMostDims("max",l,i);let[f,h]=C.computeOutAndReduceShapes(d.shape,l),g=f;a&&(g=C.expandShapeToKeepDim(f,u));let b;if(c){let x=e.texData.get(d.dataId).values,I=HO(x,y.sizeFromShape(h),g,o.dtype);b=e.makeTensorInfo(g,o.dtype);let k=e.texData.get(b.dataId);k.values=I}else b=E3(d,h,g,e);return m&&e.disposeIntermediateTensorInfo(d),b}var L3={kernelName:Ao,backendName:"webgl",kernelFunc:ND};var Uue=nI+`
  return max(a, b);
`,Wue=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Dp+`
  return result;
`,Kue=dt({opSnippet:Uue,packedOpSnippet:Wue,cpuKernelImpl:qO}),_3={kernelName:wo,backendName:"webgl",kernelFunc:Kue};function Vue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;ei(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))return sr({inputs:{x:o},backend:e});let m=new ri(p,"max",!1);return e.runWebGLProgram(m,[o],o.dtype)}var $3={kernelName:No,backendName:"webgl",kernelFunc:Vue};function Hue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=n,p=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,p,i,l,u),c=new Rp(m,"max",!1);return e.runWebGLProgram(c,[o],o.dtype)}var B3={kernelName:Ou,backendName:"webgl",kernelFunc:Hue};var QI=class{constructor(t){this.variableNames=["dy","maxPos"];this.outputShape=t.inShape;let e=t.strideHeight,n=t.strideWidth,o=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,u=a-1-t.padInfo.left,l=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},JI=class{constructor(t){this.variableNames=["dy","maxPos"];this.outputShape=t.inShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,u=t.effectiveFilterDepth,l=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=u-1-t.padInfo.front,c=l-1-t.padInfo.top,d=p-1-t.padInfo.left,f=u*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function que(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,l,p),d=new Rp(c,"max",!0),f=e.runWebGLProgram(d,[a],a.dtype),h=new JI(c),g=e.runWebGLProgram(h,[o,f],a.dtype);return e.disposeIntermediateTensorInfo(f),g}var O3={kernelName:$m,backendName:"webgl",kernelFunc:que};function jue(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:a}=t,i=s;ei([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,l,1,p,m),d=!0,f=new ri(c,"max",d),h=e.runWebGLProgram(f,[i],i.dtype),g=new QI(c),b=e.runWebGLProgram(g,[o,h],i.dtype);return e.disposeIntermediateTensorInfo(h),b}var z3={kernelName:_m,backendName:"webgl",kernelFunc:jue};function G3(r,t,e,n){let o=new ri(e,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new ri(e,"max",!0,!0,t);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var U3={kernelName:Bm,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=t,u=e;y.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];y.assert(C.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let p=C.computePool2DInfo(n.shape,o,s,l,a),[m,c]=G3(n,i,p,u);return[m,c]}};function W3(r,t,e,n){let o=y.sizeFromShape(t),a=y.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=eo(i,"float32","mean",n),l=ie({inputs:{x:u},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}var K3={kernelName:Do,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{keepDims:o,axis:s}=t,a=e,i=n.shape.length,u=y.parseAxisParam(s,n.shape),l=u,p=C.getAxesPermutation(l,i),m=p!=null,c=a.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let I=a.texData.get(f.dataId).values,k=new Array(i);for(let R=0;R<k.length;R++)k[R]=n.shape[p[R]];let A=Xl(I,n.shape,n.dtype,p,k);f=a.makeTensorInfo(k,n.dtype);let F=a.texData.get(f.dataId);F.values=A}else f=Fp(n,p,a);d.push(f),l=C.getInnerMostAxes(l.length,i)}C.assertAxesAreInnerMostDims("sum",l,i);let[h,g]=C.computeOutAndReduceShapes(f.shape,l),b=h;o&&(b=C.expandShapeToKeepDim(h,u));let T=W3(f,g,b,a);for(let x of d)a.disposeIntermediateTensorInfo(x);return T}};function Xue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Kt({inputs:{x:o},backend:e,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=y.sizeFromShape(d),h=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"min",e),b;if(a){let T=C.expandShapeToKeepDim(c,u);b=ie({inputs:{x:g},backend:e,attrs:{shape:T}})}else b=ie({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),p!=null&&e.disposeIntermediateTensorInfo(m),b}var V3={kernelName:Fo,backendName:"webgl",kernelFunc:Xue};var Yue=nI+`
  return min(a, b);
`,Zue=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Dp+`
  return result;
`,Que=dt({opSnippet:Yue,packedOpSnippet:Zue,cpuKernelImpl:jO}),H3={kernelName:Ro,backendName:"webgl",kernelFunc:Que};var eC=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=e.map((p,m)=>p[0]+t[m]+p[1]);let o=t.length,s=Ge(o),a=e.map(p=>p[0]).join(","),i=e.map((p,m)=>p[0]+t[m]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var tC=class{constructor(t,e,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e.map((f,h)=>f[0]+t[h]+f[1]);let o=t.length,s=Ge(o),a=e.map(f=>f[0]).join(","),i=e.map((f,h)=>f[0]+t[h]).join(","),u=or("rc",o),l=or("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${m});
          ${u[o-1]} += 1;
          if(${p}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var Jue=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tC(n.shape,o,s):new eC(n.shape,o,s);return t.runWebGLProgram(a,[n],n.dtype)},q3={kernelName:Po,backendName:"webgl",kernelFunc:Jue};var epe=`if (b == 0.0) return NAN;
  return mod(a, b);`,tpe=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Dp+`
  return result;
`,rpe=dt({opSnippet:epe,packedOpSnippet:tpe}),j3={kernelName:Hi,backendName:"webgl",kernelFunc:rpe};var rC=class{constructor(t,e,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var npe=`
if (a == b) {
  return 1.0;
};
return a / b;`,ope=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,DD=dt({opSnippet:npe,packedOpSnippet:ope,checkOutOfBounds:!0}),X3={kernelName:bo,backendName:"webgl",kernelFunc:DD};var Y3="return a - b;",FD=dt({opSnippet:Y3,packedOpSnippet:Y3,supportsComplex:!0,cpuKernelImpl:dz}),Z3={kernelName:Xo,backendName:"webgl",kernelFunc:FD};function RD(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=ND({inputs:{x:o},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),l=ie({inputs:{x:i},backend:e,attrs:{shape:u}}),p=FD({inputs:{a:o,b:l},backend:e}),m=vD({inputs:{x:p},backend:e}),c=Zl({inputs:{x:m},backend:e,attrs:{axis:a,keepDims:!1}}),d=ie({inputs:{x:c},backend:e,attrs:{shape:u}}),f=DD({inputs:{a:m,b:d},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),f}var Q3={kernelName:qo,backendName:"webgl",kernelFunc:RD};function spe(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n,u=i?o:RD({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),l=u.shape[0],p=u.shape[1],m=new rC(l,p,s),c=[[a]],d=e.runWebGLProgram(m,[u],"int32",c);return i||e.disposeIntermediateTensorInfo(u),d}var J3={kernelName:Om,backendName:"webgl",kernelFunc:spe};var ape=Ir+`
  return -x;
`,ipe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function upe(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId),[a,i]=YO(s.values,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,a)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new os(n.shape,ipe):o=new on(n.shape,ape),e.runWebGLProgram(o,[n],n.dtype)}var eU={kernelName:gs,backendName:"webgl",kernelFunc:upe};var ppe=xr.nonMaxSuppressionV3Impl;function lpe(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=e.readSync(o.dataId),p=e.readSync(s.dataId),{selectedIndices:m}=ppe(l,p,a,i,u);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var tU={kernelName:va,backendName:"webgl",kernelFunc:lpe};var mpe=xr.nonMaxSuppressionV4Impl;function cpe(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n,p=e.readSync(o.dataId),m=e.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=mpe(p,m,a,i,u,l);return[e.makeTensorInfo([c.length],"int32",new Int32Array(c)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}var rU={kernelName:qi,backendName:"webgl",kernelFunc:cpe};var dpe=xr.nonMaxSuppressionV5Impl;function fpe(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=e.readSync(o.dataId),m=e.readSync(s.dataId),c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:b}=dpe(p,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var nU={kernelName:Aa,backendName:"webgl",kernelFunc:fpe};var nC=class{constructor(t,e,n,o){this.variableNames=["indices"];this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var hpe=r=>{let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:u}=n,l=y.sizeFromShape(o.shape),p=new nC(l,a,i,u),m=ie({inputs:{x:o},backend:e,attrs:{shape:[l]}}),c=e.runWebGLProgram(p,[m],s);e.disposeIntermediateTensorInfo(m);let d=[...o.shape,a],f=ie({inputs:{x:c},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),f},oU={kernelName:wa,backendName:"webgl",kernelFunc:hpe};function fg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=ku({inputs:{input:n},backend:e}),s=fg({inputs:{x:o},backend:e}),a=Jl({inputs:{input:n},backend:e}),i=fg({inputs:{x:a},backend:e}),u=On({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return Su({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var sU={kernelName:vs,backendName:"webgl",kernelFunc:fg};function aU(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=ku({inputs:{input:n},backend:e}),s=aU({inputs:{x:o},backend:e}),a=Jl({inputs:{input:n},backend:e}),i=fg({inputs:{x:a},backend:e}),u=On({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return Su({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var iU={kernelName:bs,backendName:"webgl",kernelFunc:aU};function gpe(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return GI({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(p=>{let m=GI({inputs:{input:p},backend:e,attrs:{dim:o}});return i.push(m),m}),l=SD({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(p=>e.disposeIntermediateTensorInfo(p)),l}var uU={kernelName:ys,backendName:"webgl",kernelFunc:gpe};var oC=class{constructor(t,e,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=e.map((l,p)=>l[0]+t[p]+l[1]);let o=t.length,s=Ge(o),a=e.map(l=>l[0]).join(","),i=e.map((l,p)=>l[0]+t[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var sC=class{constructor(t,e,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=e.map((h,g)=>h[0]+t[g]+h[1]);let o=t.length,s=Ge(o),a=e.map(h=>h[0]).join(","),i=e.map((h,g)=>h[0]+t[g]).join(","),u=or("rc",o),l=or("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${p}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${p}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var PD=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;if(y.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return Su({backend:e,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sC(o.shape,s,a):new oC(o.shape,s,a),u=[[a]];return e.runWebGLProgram(i,[o],o.dtype,u)},pU={kernelName:Eo,backendName:"webgl",kernelFunc:PD};var bpe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,ype=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Dp+`
  return result;
`,Tpe=dt({opSnippet:bpe,packedOpSnippet:ype}),lU={kernelName:Lo,backendName:"webgl",kernelFunc:Tpe};function xpe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=[],l=y.parseAxisParam(s,o.shape),p=l,m=C.getAxesPermutation(p,i),c=o;m!=null&&(c=Kt({inputs:{x:o},backend:e,attrs:{perm:m}}),p=C.getInnerMostAxes(p.length,i),u.push(c)),C.assertAxesAreInnerMostDims("prod",p,i);let d;if(e.shouldExecuteOnCPU([c])){let f=e.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:b}=QO(c.shape,c.dtype,f,p);d=e.makeTensorInfo(g,b,h)}else{let[f,h]=C.computeOutAndReduceShapes(c.shape,p),g=y.sizeFromShape(h),b=ie({inputs:{x:c},backend:e,attrs:{shape:[-1,g]}}),T=tu(o.dtype),x=eo(b,T,"prod",e);d=ie({inputs:{x},backend:e,attrs:{shape:f}}),u.push(b),u.push(x)}if(a){u.push(d);let f=C.expandShapeToKeepDim(d.shape,l);d=ie({inputs:{x:d},backend:e,attrs:{shape:f}})}return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}var mU={kernelName:$o,backendName:"webgl",kernelFunc:xpe};function Ipe(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=t,{outputRaggedRank:i}=n,u=o.map(b=>e.readSync(b.dataId)),l=o.map(b=>b.shape),p=e.readSync(s.dataId),m=e.readSync(a.dataId),[c,d,f]=JO(u,l,p,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var cU={kernelName:zm,backendName:"webgl",kernelFunc:Ipe};function Cpe(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=n,l=e.readSync(o.dataId),p=e.readSync(s.dataId),m=e.readSync(a.dataId),c=i.map(g=>e.readSync(g.dataId)),d=i.map(g=>g.shape),[f,h]=ez(l,o.shape,p,s.shape,s.dtype,m,a.shape,c,d,u);return e.makeTensorInfo(f,s.dtype,h)}var dU={kernelName:Gm,backendName:"webgl",kernelFunc:Cpe};var MD=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=tz(n,o,s,a);return t.makeTensorInfo([i.length],a,i)},fU={kernelName:di,backendName:"webgl",kernelFunc:MD};var kpe="return 1.0 / x;",Spe=Se({opSnippet:kpe}),hU={kernelName:Na,backendName:"webgl",kernelFunc:Spe};var vpe=Ir+`
  return (x < 0.0) ? 0.0 : x;
`,Ape=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,wpe=Se({opSnippet:vpe,packedOpSnippet:Ape}),gU={kernelName:Bo,backendName:"webgl",kernelFunc:wpe};var Npe=Ir+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Dpe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Fpe=Se({opSnippet:Npe,packedOpSnippet:Dpe}),bU={kernelName:Go,backendName:"webgl",kernelFunc:Fpe};var aC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=t;this.outputShape=[a,e,n,l];let p=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var iC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=t;this.outputShape=[a,e,n,l];let p=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Rpe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new iC(o.shape,u,l,s,a):new aC(o.shape,u,l,s,a);return e.runWebGLProgram(p,[o],"float32")}var yU={kernelName:zo,backendName:"webgl",kernelFunc:Rpe};var uC=class{constructor(t,e,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=e;let[,o,s]=e,[,a,i]=t,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Ppe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=new uC(s.shape,o.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}var TU={kernelName:Wm,backendName:"webgl",kernelFunc:Ppe};var pC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=t;this.outputShape=[a,e,n,l];let p=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var lC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=t;this.outputShape=[a,e,n,l];let p=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Mpe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lC(o.shape,u,l,s,a):new pC(o.shape,u,l,s,a);return e.runWebGLProgram(p,[o],o.dtype)}var xU={kernelName:Oo,backendName:"webgl",kernelFunc:Mpe};var mC=class{constructor(t,e,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=e;let[,o,s]=e,[,a,i]=t,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Epe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=new mC(s.shape,o.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}var IU={kernelName:Um,backendName:"webgl",kernelFunc:Epe};var cC=class{constructor(t,e){this.variableNames=["x"];let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let o=i=>e.indexOf(i)!==-1&&t[i]!==1?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`,s=t.map((i,u)=>o(u)).join(","),a=Ge(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var dC=class{constructor(t,e){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;let o=or("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ge(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${a}) {
            result.b = ${p(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return c(f)}function l(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function p(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=t.map((T,x)=>d(x,f)),g=h.join(","),b=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function d(f,h){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${h[f]} - 1`:`${h[f]}`}}};function Lpe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return sr({inputs:{x:o},backend:e});let u=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dC(o.shape,i):new cC(o.shape,i);return e.runWebGLProgram(u,[o],o.dtype)}var CU={kernelName:Da,backendName:"webgl",kernelFunc:Lpe};var fC=class{constructor(t,e){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=t[1],o=t[2];this.outputShape=t;let s="";typeof e=="number"?s=`float outputValue = ${e.toFixed(2)};`:s=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var kU={kernelName:$a,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,u=new fC(n.shape,s),[l,p]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[[l,p,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(u,[n],n.dtype,m)}};var _pe=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,$pe=Se({opSnippet:_pe}),SU={kernelName:Fa,backendName:"webgl",kernelFunc:$pe};var Bpe="return inversesqrt(x);",Ope=Se({opSnippet:Bpe,cpuKernelImpl:rz}),vU={kernelName:Uo,backendName:"webgl",kernelFunc:Ope};var Df=class{constructor(t,e,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let u=Ge(s.length),l=Ge(a.length),p="";n===1?p="i":n===2&&(p="i, j");let m=`getIndices(${p})`,c="";o===1?c="i":o===2&&(c="i, coords[1]");let d=`getUpdates(${c})`,f=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function zpe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=[m/l,l];if(m===0)return e.makeTensorInfo(a,o.dtype);let d=ie({inputs:{x:o},backend:e,attrs:{shape:[u,i]}}),f=ie({inputs:{x:s},backend:e,attrs:{shape:[u,l]}}),h=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new Df(u,i,d.shape.length,f.shape.length,p,c),b=e.runWebGLProgram(g,[f,d,h],f.dtype),T=ie({inputs:{x:b},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(h),T}var AU={kernelName:Ra,backendName:"webgl",kernelFunc:zpe};var hC=class{constructor(t,e,n,o){this.variableNames=["sortedSequence","values"];this.customUniforms=[{name:"numInputs",type:"int"}];this.outputShape=[t,n];let s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=$().getNumber("WEBGL_VERSION")===2?s:a,u=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Gpe(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n,i=new hC(o.shape[0],o.shape[1],s.shape[1],a),u=[[o.shape[1]]];return e.runWebGLProgram(i,[o,s],"int32",u)}var wU={kernelName:Km,backendName:"webgl",kernelFunc:Gpe};var gC=class{constructor(t,e,n){this.variableNames=["c","a","b"];this.outputShape=e;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let p=0;p<e.length;p++)l.push(`${i[p]}`),p<t&&u.push(`${i[p]}`);o=u.join(),s=l.join()}let a=Ge(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Upe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=new gC(n.shape.length,o.shape,o.shape.length);return e.runWebGLProgram(a,[n,o,s],Et(o.dtype,s.dtype))}var NU={kernelName:xs,backendName:"webgl",kernelFunc:Upe};var Wpe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Kpe=Se({opSnippet:Wpe}),DU={kernelName:ji,backendName:"webgl",kernelFunc:Kpe};var Vpe=ea+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Hpe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qpe=Se({opSnippet:Vpe,packedOpSnippet:Hpe,cpuKernelImpl:oz}),FU={kernelName:Ko,backendName:"webgl",kernelFunc:qpe};var jpe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Xpe=Se({opSnippet:jpe}),RU={kernelName:Xi,backendName:"webgl",kernelFunc:Xpe};var Ype=ea+`
  return sin(x);
`,Zpe=Se({opSnippet:Ype}),PU={kernelName:Wo,backendName:"webgl",kernelFunc:Zpe};var Qpe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Jpe=Se({opSnippet:Qpe}),MU={kernelName:Pa,backendName:"webgl",kernelFunc:Jpe};var ele=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,tle=Se({opSnippet:ele}),EU={kernelName:Yi,backendName:"webgl",kernelFunc:tle};var rle=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,T)=>b*T),u=[[0,0]];u.push(...a);for(let b=1+s.length;b<o.shape.length;++b)u.push([0,0]);let l=[],p=PD({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(p.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(p.shape,s,i,!1),f=ie({inputs:{x:p},backend:e,attrs:{shape:m}}),h=Kt({inputs:{x:f},backend:e,attrs:{perm:c}}),g=ie({inputs:{x:h},backend:e,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(b=>e.disposeIntermediateTensorInfo(b)),g},LU={kernelName:Cs,backendName:"webgl",kernelFunc:rle};function nle(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=e.readSync(n.dataId),u=e.readSync(o.dataId),l=e.readSync(s.dataId),p=e.readSync(a.dataId)[0],[m,c,d,f,h]=az(i,n.shape,n.dtype,u,o.dtype,l,p);return[e.makeTensorInfo(c,n.dtype,m),e.makeTensorInfo([c[0]],o.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var _U={kernelName:Gu,backendName:"webgl",kernelFunc:nle};function ole(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(e.readSync(o.dataId)),i=e.readSync(n.dataId),u=Array.from(e.readSync(s.dataId)),[l,p,m]=iz(i,n.shape,n.dtype,a,u);return[e.makeTensorInfo(p,n.dtype,l),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var $U={kernelName:Zi,backendName:"webgl",kernelFunc:ole};function sle(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=e.readSync(n.dataId),i=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,p]=Qx(a,n.shape,n.dtype,i,u,!0);return e.makeTensorInfo(p,n.dtype,l)}var BU={kernelName:Uu,backendName:"webgl",kernelFunc:sle};function ale(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=e.readSync(n.dataId),i=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,p]=Qx(a,n.shape,n.dtype,i,u);return e.makeTensorInfo(p,n.dtype,l)}var OU={kernelName:Wu,backendName:"webgl",kernelFunc:ale};function ile(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let b=e.bufferSync(o),T=e.bufferSync(s),x=y.decodeString(e.readSync(a.dataId)[0]),I=nz(b,T,i,c,p,l,u,m,x,d);return e.makeTensorInfo(i,I.dtype,I.values)}let f=new Df(l,u,o.shape.length,s.shape.length,m,[c,1],d),h=e.runWebGLProgram(f,[s,o,a],s.dtype),g=ie({inputs:{x:h},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(h),g}var zU={kernelName:Ku,backendName:"webgl",kernelFunc:ile};function ule(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=ni({inputs:{x:o},backend:e,attrs:{begin:p,size:d}});return p[i]+=c,f})}var GU={kernelName:ks,backendName:"webgl",kernelFunc:ule};var UU="return sqrt(x);",ple=Se({opSnippet:UU,packedOpSnippet:UU,cpuKernelImpl:uz}),WU={kernelName:Vo,backendName:"webgl",kernelFunc:ple};var lle="return x * x;",mle=Se({opSnippet:lle}),KU={kernelName:fi,backendName:"webgl",kernelFunc:mle};var VU="return (a - b) * (a - b);",cle=dt({opSnippet:VU,packedOpSnippet:VU}),HU={kernelName:jo,backendName:"webgl",kernelFunc:cle};function dle({inputs:r,attrs:t,backend:e}){let{x:n}=r,o=Ir+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new on(n.shape,o);return e.runWebGLProgram(s,[n],n.dtype)}var qU={kernelName:As,backendName:"webgl",kernelFunc:dle};var bC=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=Ge(n.length),a=Ge(n.length),i="";if(o===1)i="coords * strides + begin";else{let u=0;i=n.map((l,p)=>(u++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${u-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function fle(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=ie({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let F=xt.computeOutShape(T,x,I),R=ni({inputs:{x:o},backend:e,attrs:{begin:T,size:F}});k=ie({inputs:{x:R},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(R)}else if(e.shouldExecuteOnCPU([o])){let R=e.readSync(o.dataId),P=xe(o.shape,o.dtype,R),L=pz(d,P,I,T);k=e.makeTensorInfo(f,o.dtype,L.values)}else{let R=new bC(T,I,d);k=e.runWebGLProgram(R,[o],o.dtype)}let A=ie({inputs:{x:k},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(k),A}var jU={kernelName:Ma,backendName:"webgl",kernelFunc:fle};function hle(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=t,c=e.readSync(p.dataId),d=e.readSync(m.dataId),[f,h]=lz(c,d,o,s,a,i,u,l);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var XU={kernelName:hi,backendName:"webgl",kernelFunc:hle};function gle(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=e.readSync(s.dataId),u=e.readSync(a.dataId)[0],[l,p,m]=mz(i,u,o),c=p.length;return[e.makeTensorInfo([c,2],"int32",l),e.makeTensorInfo([c],"string",p),e.makeTensorInfo([2],"int32",new Int32Array(m))]}var YU={kernelName:Vu,backendName:"webgl",kernelFunc:gle};function ble(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=e.readSync(s.dataId),i=cz(a,o);return e.makeTensorInfo(s.shape,"int32",i)}var ZU={kernelName:Hu,backendName:"webgl",kernelFunc:ble};var yle="return tan(x);",Tle=Se({opSnippet:yle}),QU={kernelName:Ea,backendName:"webgl",kernelFunc:Tle};var xle=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Ile=Se({opSnippet:xle}),JU={kernelName:Yo,backendName:"webgl",kernelFunc:Ile};var yC=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[a]*e[a];this.outputShape=n,this.rank=n.length;let o=Ge(this.rank),s=Cle(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Cle(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${e[o]}, ${r[o]})`);return n.join()}function ED(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=e.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>y.decodeString(c)):u,p=xe(o.shape,o.dtype,l),m=fz(p,s);return e.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new yC(o.shape,s);return e.runWebGLProgram(a,[o],o.dtype)}var eW={kernelName:Dn,backendName:"webgl",kernelFunc:ED};var TC=class{constructor(t){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},xC=class{constructor(t){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function em(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function tW(r){let t=1;for(;t<r;)t*=2;return t}function kle(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n,i=$().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=$().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,p=l[l.length-1];if(e.shouldExecuteOnCPU([o])||p<i||s>u){let L=e.readSync(o.dataId),[O,G]=hz(L,l,o.dtype,s,a);return[e.makeTensorInfo(O.shape,O.dtype,O.values),e.makeTensorInfo(G.shape,G.dtype,G.values)]}if(s===0)return l[l.length-1]=0,[e.makeTensorInfo(l,o.dtype,[]),e.makeTensorInfo(l,"int32",[])];if(p===1)return[o,Su({attrs:{shape:l,dtype:"int32",value:0},backend:e})];let m=e.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?e.unpackTensor(o):o,h=y.sizeFromShape(l)/p,g=ie({inputs:{x:d},attrs:{shape:[h,p]},backend:e});c&&em(e,d);let b=tW(s),T=tW(p),x=null,I=()=>x===null?[g,g]:[g,x],k=(L,O,G)=>{let W=I(),H=new TC(G),q=[[p],[x===null?1:0],[Number.NEGATIVE_INFINITY],[L],[O]],Z=x;x=e.runWebGLProgram(H,W,"int32",q),em(e,Z)};for(let L=1;L<b;L*=2){let O=L*2;for(let G=L;G>=1;G/=2)k(O,G,[h,T])}for(let L=T;L>b;L/=2){let O=I(),G=new xC([h,L/2]),H=[[p],[x===null?1:0],[b]],V=x;x=e.runWebGLProgram(G,O,"int32",H),em(e,V);let q=b/2,Z=q*2;for(let j=q;j>=1;j/=2)k(Z,j,x.shape)}let A=x;x=ni({inputs:{x},backend:e,attrs:{begin:0,size:[h,s]}}),em(e,A);let F=wD({inputs:{x:g,indices:x},backend:e,attrs:{axis:1,batchDims:1}});em(e,g);let R=l.slice(0,-1);R.push(s),A=x,x=ie({inputs:{x},attrs:{shape:R},backend:e}),em(e,A);let P=F;return F=ie({inputs:{x:F},attrs:{shape:R},backend:e}),em(e,P),[F,x]}var rW={kernelName:La,backendName:"webgl",kernelFunc:kle};var IC=class{constructor(t,e,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Sle(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=new IC(m,c,a,i,u,g);return e.runWebGLProgram(b,[o,s],"float32")}var nW={kernelName:_a,backendName:"webgl",kernelFunc:Sle};function vle(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;ei(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=gz(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var oW={kernelName:Vm,backendName:"webgl",kernelFunc:vle};function Ale(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=ni({inputs:{x:a},backend:e,attrs:{begin:c,size:d}}),b=ie({inputs:{x:g},backend:e,attrs:{shape:l}});f[h]=b,m.push(g)}return m.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var sW={kernelName:Ss,backendName:"webgl",kernelFunc:Ale};var CC=class{constructor(t,e){this.variableNames=["x","segmentIds"];let n=t.windowSize,o=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let u="0.0",l="sumValue",p=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function wle(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:a}=n,i=o.shape.length,u=[],l=0,p=C.getAxesPermutation([l],i),m=o;p!=null&&(m=Kt({inputs:{x:o},backend:e,attrs:{perm:p}}),u.push(m),l=C.getInnerMostAxes(1,i)[0]);let c=C.segment_util.computeOutShape(m.shape,l,a),d=y.sizeFromShape([m.shape[l]]),f=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,d]}});u.push(f);let h=tu(o.dtype),g=(I,k,A,F,R)=>{let P=I.shape[0],L=I.shape[1],O=C.segment_util.segOpComputeOptimalWindowSize(L,R),G={windowSize:O,inSize:L,batchSize:P,numSegments:R},W=new CC(G,k),H=e.compileAndRun(W,[I,A],F);if(u.push(H),H.shape[1]===R)return H;let V=MD({backend:e,attrs:{start:0,stop:R,step:1,dtype:"float32"}}),q=ED({inputs:{x:V},backend:e,attrs:{reps:[L/O]}});return u.push(V),u.push(q),g(H,k,q,F,R)},b=g(f,"unsortedSegmentSum",s,h,a),T=ie({inputs:{x:b},backend:e,attrs:{shape:c}}),x=T;if(p!=null){u.push(T);let I=C.getUndoAxesPermutation(p);x=Kt({inputs:{x},backend:e,attrs:{perm:I}})}return u.forEach(I=>e.disposeIntermediateTensorInfo(I)),x}var aW={kernelName:qu,backendName:"webgl",kernelFunc:wle};var Nle=[Hz,jz,Xz,Yz,Qz,Jz,eG,tG,oG,sG,aG,iG,uG,pG,lG,mG,cG,dG,fG,hG,gG,yG,TG,xG,SG,AG,wG,Ez,DG,RG,PG,MG,EG,LG,_G,$G,BG,OG,zG,WG,KG,VG,HG,qG,jG,XG,YG,ZG,QG,JG,e3,t3,r3,n3,o3,a3,i3,u3,p3,m3,c3,d3,f3,h3,g3,b3,y3,T3,Mz,x3,FG,I3,C3,k3,Lz,S3,v3,A3,w3,N3,D3,F3,R3,P3,M3,L3,_3,$3,B3,O3,z3,U3,K3,V3,H3,q3,j3,J3,zz,eU,tU,rU,nU,IG,oU,iU,uU,pU,lU,_z,mU,cU,dU,fU,CG,X3,hU,gU,bU,Uz,yU,TU,xU,IU,CU,kU,SU,vU,AU,wU,NU,DU,FU,RU,PU,MU,bG,Q3,EU,LU,_U,$U,BU,OU,zU,GU,WU,KU,HU,qU,jU,XU,YU,ZU,Z3,Kz,QU,JU,eW,rW,nW,Vz,oW,sW,aW,sU];for(let r of Nle)Qi(r);var Pp=$();Pp.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Pp.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Pp.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Pp.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Pp.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Pp.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Pp.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Pp.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);var kC=class{constructor(t){this.device=t;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireUploadBuffer(t,e){return this.acquireBuffer(t,e,!0)}acquireBuffer(t,e,n=!1){let o=iW(t,e);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=t,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(a),a}this.numBytesAllocated+=t;let s=this.device.createBuffer({size:t,usage:e,mappedAtCreation:n});return this.usedBuffers.get(o).push(s),s}releaseBuffer(t,e,n){if(this.freeBuffers.size===0)return;let o=iW(e,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(t),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(t);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=e}releaseUploadBuffer(t,e,n){t.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(t,e,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function iW(r,t){return`${r}_${t}`}var SC=class{constructor(t){this.device=t;this.numUsedTextures=0;this.numFreeTextures=0;this.freeTextures=new Map;this.usedTextures=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireTexture(t,e,n,o){let s=pW(n),a=t*e*s,i=uW(t,e,n,o);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let l=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(l),l}this.numBytesAllocated+=a;let u=this.device.createTexture({size:[t,e],format:n,usage:o});return this.usedTextures.get(i).push(u),u}releaseTexture(t,e,n,o,s){if(this.freeTextures.size===0)return;let a=uW(e,n,o,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(t),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),u=i.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(u,1);let l=pW(o),p=e*n*l;this.numBytesUsed-=p}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function uW(r,t,e,n){return`${r}_${t}_${e}_${n}`}function pW(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}function lW(r,t){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let e=r.length,n=r.map(s=>`${t}[${s}]`),o=new Array(e-1);o[e-2]=n[e-1];for(let s=e-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}var dW=(r,t,e,n)=>{let o={dtype:n.dtype,shape:n.shape},s=Dle(e,o,t),a=r.createShaderModule({code:s,label:t.constructor.name});return r.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})};function ar(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ta(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function Ie(...r){let t;switch(r.length){case 0:t=`
        ${Mp()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main();
        }

        fn main()
      `;break;case 1:t=`
        ${Mp()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main(getGlobalIndex());
        }

        fn main(${r[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function Mp(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function Dle(r,t,e){let n=[];if(n.push(`
      const workGroupSizeX = ${e.workGroupSize[0]}u;
      const workGroupSizeY = ${e.workGroupSize[1]}u;
      const workGroupSizeZ = ${e.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${hW(e)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),e.isFromPixels)return n.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${Ff(t.dtype,e.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[mW,n.join(`
`),cW(t.shape),e.getUserCode()].join(`
`);let o="struct Uniforms { NAN : f32, ";e.variableNames.forEach((c,d)=>{let f=ar(r[d].shape.length);o+=`${c.charAt(0).toLowerCase()+c.slice(1)}Shape : ${f}, `}),o+=`outShape : ${ar(t.shape.length)}, `;let a=t.shape.length-1;o+=`
         outShapeStrides: ${ar(a)}, `,e.size&&(o+="size : i32, "),e.uniforms&&(o+=e.uniforms),o+="};",o=_le(o),n.push(o),e.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Ff(t.dtype,e.isVec4)}>;
    `),e.variableNames.forEach((c,d)=>{n.push(`
      @group(0) @binding(${1+d}) var<storage, read> ${c}: array<${e.variableTypes?e.variableTypes[d]:Ff(r[d].dtype,e.isVec4)}>;
        `)}),o!==""&&n.push(`
      @group(0) @binding(${1+e.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let u=Mle(t.shape,e.dispatchLayout),l=[mW,n.join(`
`),cW(t.shape),u,Ele(t.shape.length)];e.atomic||l.push(Lle(t.shape,t.dtype,e.isVec4));let p=r.map((c,d)=>Ple(c,t.shape,e.variableTypes?e.variableTypes[d]==="vec4<f32>":e.isVec4,e.dispatchLayout.x.length===t.shape.length)).join(`
`);return l.push(p),l.push(e.getUserCode()),l.join(`
`)}function fW(r,t,e,n){let o=r.shaderKey;if(r.isFromPixels)return o;let s=e.map(p=>p.dtype).concat(n.dtype),a=e.map(p=>C.getBroadcastDims(p.shape,n.shape)),i=e.map(p=>y.arraysEqual(p.shape,n.shape)).join("_"),u=a.map(p=>p.join("_")).join(";"),l=hW(r)?"flatDispatch":"";return o+="_"+(r.workGroupSize?r.workGroupSize.join(","):"")+t.map(p=>p.length).join(",")+s.join(",")+r.variableNames.join(",")+u+i+l,o}var mW=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function cW(r){let t=r.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let e=y.computeStrides(r),n=ar(t),o=[];for(let a=0;a<t;a++)o.push(`d${a}`);if(e.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s;return s="var index2 = index;"+e.map((a,i)=>{let u=`let ${o[i]} = index2 / uniforms.outShapeStrides.${ta(i)}`,l=i===e.length-1?`let ${o[i+1]} = index2 - ${o[i]} * uniforms.outShapeStrides.${ta(i)}`:`index2 = index2 - ${o[i]} * uniforms.outShapeStrides.${ta(i)}`;return`${u}; ${l};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}function Fle(r,t){let e=r.name,n=r.shape.length,o=ar(n),s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=a.map(p=>`${p} : i32`).join(", ");if(n<1)return t?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${e}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${e}[0]);
      }
    `;let u=`uniforms.${e.charAt(0).toLowerCase()+e.slice(1)}Shape`,l=`${n}D`;return n===0&&(l="1D"),t?`
      fn ${s}(${i}) -> vec4<f32> {
        return vec4<f32>(${e}[getIndexFromCoords${l}(${o}(${a.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${i}) -> f32 {
      return f32(${e}[getIndexFromCoords${l}(${o}(${a.join(",")}),
        ${u})]);
    }
   `}function Rle(r,t,e,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"ByOutput",i=r.shape.length,u=t.length,l=ar(u);if(y.arraysEqual(r.shape,t)&&n)return e?`
      fn ${a}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${o}[globalIndex]);
      }

      fn ${a}Coords(coords : ${l}) -> vec4<f32> {
        return vec4<f32>(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${a}Index(globalIndex : i32) -> f32 {
      return f32(${o}[globalIndex]);
    }

    fn ${a}Coords(coords : ${l}) -> f32 {
      return f32(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let p=C.getBroadcastDims(r.shape,t),m=u-i,c="";if(i===0)return e?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      return get${s}();
    }

    fn ${a}Coords(coords : ${l}) -> vec4<f32> {
      return get${s}();
    }
  `:`
    fn ${a}Index(globalIndex : i32) -> f32{
      return get${s}();
    }

    fn ${a}Coords(coords : ${l}) -> f32{
      return get${s}();
    }
  `;u<2&&p.length>=1?c="coords = 0;":c=p.map(g=>`coords.${ta(g+m)} = 0;`).join(`
`);let d="";if(u<2&&i>0)d="coords";else if(u>1){let g=ar(i),b=r.shape.map((T,x)=>`coords.${ta(x+m)}`).join(", ");d=`${g}(${b})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return e?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }

    fn ${a}Coords(coordsIn : ${l}) -> vec4<f32> {
      var coords = coordsIn;
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }
  `:`
  fn ${a}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }

  fn ${a}Coords(coordsIn : ${l}) -> f32 {
    var coords = coordsIn;
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }
`}function Ple(r,t,e,n){let o=Fle(r,e);return r.shape.length<=t.length&&(o+=Rle(r,t,e,n)),o}function Mle(r,t){let{x:e,y:n=[],z:o=[]}=t,s=r.length,a=e.length+n.length+o.length;if(a!==s)return"";if(e.length===s)return`fn getOutputCoords() -> ${ar(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let i="",u=[e,n,o];for(let c=0;c<u.length;c++){let d=u[c];if(d.length!==0)if(d.length===1)i+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=lW(d,"uniforms.outShape");i+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)i+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?i+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:i+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let l=[];for(let c=0;c<a;c++)l.push(`d${c}`);let p=ar(a),m=`fn getOutputCoords() -> ${p} {
  ${i}
`;return l.length===0?m+=`return ${p}(0); }`:m+=`return ${p}(${l.join(",")}); }`,m}function Ele(r){let t="";switch(r){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:y.assert(!1,()=>`Unsupported ${r}D shape`);break}return t}function hW(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function Ff(r,t){return r==="float32"?t?"vec4<f32>":"f32":r==="int32"||r==="bool"?t?"vec4<i32>":"i32":r}function Lle(r,t,e){let n=r.length,o=Ff(t,e),s;if(e?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${o}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${o}(value);
    }`,n>=2){let a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=ar(n);e?s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function _le(r){let t=/(\w+)\s*:\s*vec(5|6)/g;r=r.replace(t,n=>"@align(16) "+n);let e=/vec(5|6)\s*,\s*(\w+)/g;return r=r.replace(e,(n,o,s)=>`vec${o}, @align(16) ${s}`),r}var OD={};He(OD,{ArrayBufferToTypedArray:()=>$D,GPUBytesPerElement:()=>_D,MatMulProgramType:()=>BD,computeDispatch:()=>ye,computeWorkGroupInfoForMatMul:()=>LD,computeWorkGroupSizeForConv2d:()=>hg,computeWorkPerThreadForConv2d:()=>gg,flatDispatchLayout:()=>ke,isWebGPUSupported:()=>bg,tilesFitEvenlyIntoShape:()=>Ble});var tm=r=>{let t=1;for(let e=0;e<r.length;e++)t*=r[e];return t};function Ble(r,t){if(r.length!==t.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((e,n)=>e%r[n]===0)}function ye(r,t,e=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(tm(r.x.map(i=>t[i]))/(e[0]*n[0])),r.y?Math.ceil(tm(r.y.map(i=>t[i]))/(e[1]*n[1])):1,r.z?Math.ceil(tm(r.z.map(i=>t[i]))/(e[2]*n[2])):1];return[o,s,a]}function LD(r,t,e,n=!1){let o=[8,8,1],s=[4,4,1];return n||(r<=8&&(s[1]=1),t<=16&&e<=16&&(o[0]=4)),{workGroupSize:o,elementsPerThread:s}}function hg(r,t,e=!1){if(e)return[8,8,1];let n=tm(r.x.map(s=>t[s])),o=tm(r.y.map(s=>t[s]));return n<=4?[4,16,1]:o<=4?[16,4,1]:[16,16,1]}function gg(r,t,e=!1){if(e)return[4,4,1];let n=tm(r.x.map(s=>t[s])),o=tm(r.y.map(s=>t[s]));return n<=4?[1,2,1]:o<=4?[2,1,1]:[2,2,1]}function ke(r){return{x:r.map((t,e)=>e)}}function _D(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function $D(r,t){if(t==="float32")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function bg(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}var BD=(s=>(s[s.MatMulReduceProgram=0]="MatMulReduceProgram",s[s.MatMulSplitKProgram=1]="MatMulSplitKProgram",s[s.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",s[s.MatMulPackedProgram=3]="MatMulPackedProgram",s[s.MatMulMax=4]="MatMulMax",s))(BD||{});var Ole=$().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),zle=(r,t)=>{let e=r.limits.maxComputeWorkgroupsPerDimension,n=t.dispatchLayout,o=t.dispatch;if(o.every(a=>a<=e))return o;y.assert(o[0]>e&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(o[0]));return s>e?(s=Math.ceil(Math.cbrt(o[0])),y.assert(s<=e,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},zD=class extends no{constructor(e){super();this.commandQueueOwnedIds=new WeakSet;this.dispatchNumberInEncoder=0;this.disposed=!1;this.downloadWaitMs=0;this.tensorDataPendingDisposal=[];this.stagingPendingDisposal=[];this.uniformPendingDisposal=[];this.uploadWaitMs=0;if(!bg())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query"),this.bufferManager=new kC(this.device),this.textureManager=new SC(this.device),this.tensorMap=new ia(this,Mn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return zD.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,n=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let o=this.tensorMap.get(e);if(this.decRef(e),!n&&o.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:s}=this.tensorMap.get(e);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let n=this.tensorMap.get(e);if(!(!n||!n.resourceInfo)){if("texture"in n.resourceInfo){let o=n.resourceInfo;o.texture instanceof GPUTexture&&this.textureManager.releaseTexture(o.texture,o.width,o.height,o.format,o.usage),o.texture=null}else{let o=n.resourceInfo;this.bufferManager.releaseBuffer(o.buffer,o.size,o.usage),o.buffer=null}n.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let n=this.tensorMap.get(e);n.refCount++}decRef(e){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);n.refCount--}}write(e,n,o){if(o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:o,shape:n,values:e,refCount:1}),s}move(e,n,o,s,a){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:o,values:n,refCount:a})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,n){let o=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,o,0,n),this.submitQueue(),await o.mapAsync(GPUMapMode.READ);let s=o.getMappedRange().slice(0);return o.unmap(),o!=null&&this.bufferManager.releaseBuffer(o,n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(y.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,n){let o=this.tensorMap.get(e);return this.releaseResource(e),o.values=n,o.values}readSync(e){let n=this.tensorMap.get(e),{values:o}=n;if(o==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return o}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let n=this.tensorMap.get(e),{values:o}=n;if(o!=null)return this.convertAndCacheOnCPU(e,o);let s;if(n.dtype==="complex64"){let a=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),i=a[0],u=a[1];s=C.mergeRealAndImagArrays(i,u)}else{let a=n.resourceInfo,i=await this.getBufferData(a.buffer,a.size);s=$D(i,n.dtype)}return this.convertAndCacheOnCPU(e,s),s}readToGPU(e){let n=this.tensorMap.get(e),{values:o,dtype:s,shape:a,resourceInfo:i}=n;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=i.size,l=this.bufferManager.acquireBuffer(u,i.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(i.buffer,0,l,0,u),this.submitQueue();let p=this.makeTensorInfo(a,s),m=Mn().makeTensorFromTensorInfo(p),c=this.tensorMap.get(p.dataId);return c.resourceInfo={size:u,usage:this.defaultGpuBufferUsage(),buffer:l},{tensorRef:m,buffer:l,bufSize:u}}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return xe(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,n)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,e();let a=y.flatten(this.activeTimers.map(p=>p.query)).filter(p=>p!=null),i=y.flatten(this.activeTimers.map(p=>p.name)).filter(p=>p!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(a);return u.kernelMs=y.sum(l),u.getExtraProfileInfo=()=>l.map((p,m)=>({name:i[m],ms:p})).map(p=>`${p.name}: ${p.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,u}makeTensorInfo(e,n,o){return n==="string"&&o!=null&&o.length>0&&y.isString(o[0])&&(o=o.map(a=>y.encodeString(a))),{dataId:this.write(o,e,n),shape:e,dtype:n}}tensorToBinding(e){if(!e)return null;let n=this.tensorMap.get(e.dataId);if("texture"in n.resourceInfo){let s=n.resourceInfo;return s.texture instanceof GPUExternalTexture?s.texture:s.texture.createView()}let o=n.resourceInfo;return{offset:0,size:o.size,buffer:o.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let n=this.tensorMap.get(e);if(n.resourceInfo)return;let o=_D(n.dtype)*y.sizeFromShape(n.shape),s=this.bufferManager.acquireBuffer(o,this.defaultGpuBufferUsage());if(n.resourceInfo={size:o,usage:this.defaultGpuBufferUsage(),buffer:s},n.values){let a=this.bufferManager.acquireUploadBuffer(o,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),i=a.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(i).set(n.values):new Float32Array(i).set(n.values),a.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a,0,s,0,o);let u={size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:a};this.stagingPendingDisposal.push(u)}}makeUniforms(e){let n=0,o=0,s=[];e.forEach(l=>{l.data.length===0&&(l.data=[1]);let p;switch(l.data.length){case 1:p=4;break;case 2:p=8;break;case 3:p=16;break;case 4:p=16;break;case 5:p=16;break;case 6:p=16;break;default:y.assert(!1,()=>`Unsupported ${l.data.length}D shape`)}(o===5||o===6)&&(p=16),n=Math.ceil(n/p)*p,o=l.data.length,s.push(n),n+=l.data.length*4});let a=new ArrayBuffer(n);e.forEach((l,p)=>{let m=s[p];l.type==="int32"?new Int32Array(a,m,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(a,m,l.data.length).set(l.data):new Float32Array(a,m,l.data.length).set(l.data)});let i=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(i,0,a,0,n);let u={size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:i};return this.uniformPendingDisposal.push(u),{offset:0,size:n,buffer:i}}runWebGPUProgram(e,n,o,s,a){if(a||(a=this.makeTensorInfo(e.outputShape,o)),y.sizeFromShape(a.shape)===0)return this.tensorMap.get(a.dataId).values=y.getTypedArrayFromDType(a.dtype,0),a;this.uploadToGPU(a.dataId),e.dispatch=zle(this.device,e);let i=[],u=[];if(!e.isFromPixels){i.push({type:"float32",data:[NaN]}),u=n.concat(a).map(T=>T.shape);let g="int32";u.map(T=>{i.push({type:g,data:T})});let b=y.computeStrides(a.shape);if(i.push({type:g,data:b}),e.size){let T=y.sizeFromShape(e.outputShape);i.push({type:g,data:[e.isVec4?T/4:T]})}}let l=n.map((g,b)=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(g.dataId),{dtype:this.tensorMap.get(g.dataId).dtype,shape:g.shape,name:e.variableNames[b]}}),p=fW(e,u,l,a),m;p in this.pipelineCache?m=this.pipelineCache[p]:(m=dW(this.device,e,l,a),this.pipelineCache[p]=m),s&&(i=[...i,...s]);let c=[this.tensorToBinding(a),...n.map(g=>this.tensorToBinding(g)),this.makeUniforms(i)],d=this.device.createBindGroup({layout:m.getBindGroupLayout(0),entries:c.map((g,b)=>({binding:b,resource:g}))});this.ensureCommandEncoderReady();let f=this.getComputePass(),h=this.activeTimers!=null;return h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,0),f.setPipeline(m),f.setBindGroup(0,d),f.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,n.forEach(g=>{this.commandQueueOwnedIds.add(g.dataId)}),this.commandQueueOwnedIds.add(a.dataId),$().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),h&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}async getTimeFromQuerySet(e){let n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),o=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,n,0),this.currentCommandEncoder.copyBufferToBuffer(n,0,o,0,16),this.submitQueue(),await o.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(o.getMappedRange()),a=Number(s[1]-s[0]);return o.unmap(),this.bufferManager.releaseBuffer(o,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a/1e6}shouldExecuteOnCPU(e,n=Ole){return $().getBool("WEBGPU_CPU_FORWARD")&&e.every(o=>this.tensorMap.get(o.dataId).resourceInfo==null&&y.sizeFromShape(o.shape)<n)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},Rf=zD;Rf.nextDataId=0;bg()&&Ju("webgpu",async()=>{$().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:$().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(r),e=t.limits,n={},o=t.features.has("timestamp-query");n.requiredLimits={maxComputeWorkgroupStorageSize:e.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.maxStorageBufferBindingSize},o&&(n.requiredFeatures=["timestamp-query"]);let s=await t.requestDevice(n);return new Rf(s)},3);var Gle=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,gW=`
  if (isNaN.r) {
    resultTemp.r = valueForNaN;
  }
  if (isNaN.g) {
    resultTemp.g = valueForNaN;
  }
  if (isNaN.b) {
    resultTemp.b = valueForNaN;
  }
  if (isNaN.a) {
    resultTemp.a = valueForNaN;
  }
  `,bW=`
  let isNaN = isnanVec4(a) | isnanVec4(b);
  ${gW}
  `,Ule="return a + b;",Wle="return areal * breal - aimag * bimag;",Kle="return areal * bimag + aimag * breal;",Vle="return a / b;",Hle="return a * b;",qle="return (a - b) * (a - b);",jle="return a - b;",Xle="return f32(a == b);",Yle="return vec4<f32>(a == b);",Zle="return f32(a > b);",Qle="return vec4<f32>(a > b);",Jle="return f32(a >= b);",eme="return vec4<f32>(a >= b);",tme="return f32(a < b);",rme="return vec4<f32>(a < b);",nme="return f32(a <= b);",ome="return vec4<f32>(a <= b);",sme="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",ame=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,ime=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,ume=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,pme=`
  if (isnan(a) || isnan(b)) {
    return 1.0;
  }
  return f32(a != b);
`,lme=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
  ${bW}

  return resultTemp;
`,mme=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,cme=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
  let valueForNaN = uniforms.NAN;
  ${gW}
  return resultTemp;
  `,dme="if (a < 0.0) { return b * a; }  return a;",fme=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function GD(r,t,e="uniforms.NAN"){let n=t?bW:Gle;return t?`
    let valueForNaN = ${e};
    var resultTemp = vec4<f32>(${r}(a, b));
    `+n+`
    return resultTemp;
  `:n+`
    return ${r}(a, b);
  `}function Pf(r,t){switch(r){case 0:return Hle;case 1:return Ule;case 2:return GD("atan2",t);case 3:return jle;case 4:return Vle;case 5:return t?Yle:Xle;case 6:return t?Qle:Zle;case 7:return t?eme:Jle;case 8:return t?rme:tme;case 9:return t?ome:nme;case 10:return t?ame:sme;case 11:return t?lme:pme;case 12:return qle;case 13:return t?ume:ime;case 15:return t?fme:dme;case 16:return GD("max",t);case 17:return GD("min",t);case 14:return t?cme:mme;case 18:return Wle;case 19:return Kle;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var hme="return abs(a);",gme="return ceil(a);",bme="return cos(a);",yme=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Tme="return exp(a) - 1.0;",xme="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Ime=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Cme="return exp(a);",kme="return floor(a);",Sme="return f32(isnan(a));",vme="return a;",Ame=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,wme="return f32(!(a >= 1.0));",Nme="return -a;",Dme="if (a < 0.0) { return uniforms.alpha * a; } return a;",Fme=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Rme="return 1.0 / a;",Pme="return select(a, 0.0, a < 0.0);",Mme="return clamp(a, 0.0, 6.0);",Eme="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Lme=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,_me="return 1.0/sqrt(a);",$me="return 1.0 / (1.0 + exp(-1.0 * a));",Bme="return sin(a);",Ome=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,zme="return sqrt(a);",Gme="return a * a;",Ume=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Wme="return f32(i32((a)));";function vu(r,t){switch(r){case 0:return hme;case 2:return bme;case 3:return yme;case 1:return gme;case 4:return t?Ime:xme;case 5:return Cme;case 6:return Tme;case 7:return kme;case 8:return Sme;case 9:return vme;case 10:return Ame;case 11:return wme;case 12:return Nme;case 15:return t?Fme:Dme;case 16:return Rme;case 13:return t?Lme:Pme;case 14:return t?Eme:Mme;case 17:return _me;case 20:return $me;case 18:return Bme;case 19:return Ome;case 21:return zme;case 22:return Gme;case 23:return Ume;case 24:return Wme;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var tr=r=>{switch(r){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${r}-component is not supported.`)}};function kn(r,t=!1,e=!1,n=3){if(r===null)return"";let o="";if(r==="linear")o=vu(9);else if(r==="relu")o=vu(13,e);else if(r==="elu")o=vu(4,e);else if(r==="relu6")o=vu(14,e);else if(r==="prelu")o=Pf(15,e);else if(r==="sigmoid")o=vu(20,e);else if(r==="leakyrelu")o=vu(15,e);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let a=tr(e?4:1),i="";return t?i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${o}
      }`:i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        ${o}
      }`,i}function ra(r,t){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function UD(r,t,e,n,o=!1,s=!1,a=!1,i=1){y.assert(e&&i===1||!e,()=>`transposeA ${e} is not compatible with component size ${i}`);let u=`
      let batch = ${r?"0":"batchIn"};
      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,l=n?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${tr(i)} {
    var value = ${tr(i)}(0.0);
    let col = colIn * ${i};
    ${o&&a?u:`
    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${u}
    }
    `}
    return value;
  }

  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${tr(i)} {
    let col = colIn * ${i};
    let batch = ${t?"0":"batchIn"};
    var value = ${tr(i)}(0.0);
    ${l}
    return value;
  }
  `}function yg(r,t,e,n,o,s,a=!1,i=!1,u=!1,l=1){return`
  ${UD(e,n,o,s,a,i,u,l)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${tr(l)}) {
    let col = colIn * ${l};
    ${a&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${ra(r,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var Kme=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / InnerElementSize + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / InnerElementSize + inputCol);
        `,Vme=(r,t)=>r?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`;function rm(r,t,e=!1,n=32,o=!1,s=32,a=!1){let i=t[1]*r[1],u=t[0]*r[0],l=e?i:n,p=e?n:i,m=l/t[0],c=n/t[1];return y.assert((e&&m===4&&r[1]===4||!e&&(m===3||m===4))&&l%t[0]===0&&n%t[1]===0&&r[0]===4,()=>`If transposeA ${e} is true, innerElementSize ${m} and workPerThread[1] ${r[1]} must be 4.
          Otherwise, innerElementSize ${m} must be 3 or 4.
      tileAWidth ${l} must be divisible by workGroupSize[0]${t[0]}. tileInner ${n} must be divisible by workGroupSize[1] ${t[1]}. ColPerThread ${r[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${m}<f32>, ${l/m}>, ${p}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/r[0]}>, ${n}>;

  const RowPerThread = ${r[1]};
  const ColPerThread = ${r[0]};
  const InnerElementSize = ${m};
  const TileInner = ${n};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${a?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${a?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let batch = ${o?"0":"i32(globalId.z)"};
    let globalRowStart = i32(workgroupId.y) * ${i};

    let numTiles = ${o?`${Math.ceil(s/n)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

    var acc: array<vec4<f32>, RowPerThread>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${c};
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Kme(e)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            let BCached0 = mm_Bsub[k * InnerElementSize][tileCol];
            let BCached1 = mm_Bsub[k * InnerElementSize + 1][tileCol];
            let BCached2 = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${m===3?"":"let BCached3 = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${Vme(e,m)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var Hme=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,qme=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function nm(r,t,e=!1,n=32,o=!1,s=32){let a=r[1]*t[1],i=r[0]*t[0],u=e?a:n,l=e?n:a;y.assert(l%t[1]===0&&u%t[0]===0&&n%t[1]===0,()=>`tileAHight ${l} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${u} must be divisible by workGroupSize[0]${t[0]}, tileInner ${n} must be divisible by workGroupSize[1]${t[1]}`);let p=l/t[1],m=u/t[0],c=n/t[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${u}>, ${l}>;
    var<workgroup> mm_Bsub : array<array<f32, ${i}>, ${n}>;
    const RowPerThread = ${r[1]};
    const ColPerThread = ${r[0]};
    const TileInner = ${n};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
              @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;
      let batch = ${o?"0":"i32(globalId.z)"};
      let globalRowStart = i32(workgroupId.y) * ${a};

      let numTiles = ${o?`${Math.ceil(s/n)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
      var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${p};
      let tileColA = i32(localId.x) * ${m};
      let tileRowB = i32(localId.y) * ${c};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${m}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${Hme(e)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch,
              kStart + inputRow,
              globalCol + innerCol);
          }
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${qme(e)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(batch, globalRow + innerRow, globalCol + innerCol,
              acc[innerRow][innerCol]);
        }
      }
    }
  `}var jme=r=>r?`
      mm_readA(batch, colA, globalRow),
      mm_readA(batch, colA + 1, globalRow),
      mm_readA(batch, colA + 2, globalRow),
      mm_readA(batch, colA + 3, globalRow)
  `:`
      mm_readA(batch, globalRow, colA),
      mm_readA(batch, globalRow, colA + 1),
      mm_readA(batch, globalRow, colA + 2),
      mm_readA(batch, globalRow, colA + 3)
  `;function Xme(r,t=!1){return y.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`),`
    const TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${Ie()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;
      let batch = i32(globalId.z);
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${jme(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),
                              mm_readB(batch, rowB + 1, globalCol),
                              mm_readB(batch, rowB + 2, globalCol),
                              mm_readB(batch, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var vC=class{constructor(t,e,n,o,s=!1,a=!1,i=null,u=null,l=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0]};let p=s?t[1]:t[2];if(this.isVec4=(p%4===0&&!s||e[1]%4===0&&s)&&e[2]%4===0&&!a,this.isVectorA=e[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workGroupSize=[32,1,1];else{let d=LD(e[1],p,e[2],s);this.workGroupSize=d.workGroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let m=i!=null,c=l!=null;m&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=a,this.addBias=m,this.activation=u,this.hasPreluActivationWeights=c,this.batchAEqualOne=n,this.batchBEqualOne=o,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(e[1],e[2],p),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${a}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(t,e,n){let o=this.workGroupSize[1]*this.elementsPerThread[1],s=this.workGroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workGroupSize[0]*4:this.tileInner=s;let a=t%o===0,i=e%s===0,u=n%this.tileInner===0;return[a,i,u]}getUserCode(){return`
      ${kn(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${yg(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?rm(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner,!1,null,this.isVectorA):this.isVectorA?Xme(this.workGroupSize,this.transposeA):nm(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner)}
    `}};function Yme(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Ie()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var AC=class{constructor(t,e,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[256,1,1];this.outputShape=t,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=a!=null,p=u!=null;l&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=p,this.batchAEqualOne=e,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${kn(this.activation,this.hasPreluActivationWeights)}
      ${yg(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${Yme()}
    `}};function Zme(r){let t=r[1],e=r[0],n=t>e?t:e;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${e}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Ie()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batch, globalRow, globalColA);
    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batch, globalRow, globalColA);
      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var wC=class{constructor(t,e,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[16,8,1];this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];let l=a!=null;l&&this.variableNames.push("bias");let p=u!=null;p&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=p,this.batchAEqualOne=t[0]===1,this.batchBEqualOne=e[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${kn(this.activation,this.hasPreluActivationWeights)}
      ${yg(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${Zme(this.workGroupSize)}
    `}};var NC=class{constructor(t,e,n,o,s=!1,a=!1){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,8,1];this.atomic=!0;this.isVec4=!1;this.splitedDimInner=128;y.assert(t[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.isVec4=(s&&this.outputShape[1]%4===0||!s&&e%4===0)&&this.outputShape[2]%4===0,this.elementsPerThread=[4,4,this.splitedDimInner],this.isVec4||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=ye(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],e],this.workGroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=a,this.batchAEqualOne=n,this.batchBEqualOne=o,this.shaderKey=`matMulSplitK_${s}_${a}_${n}_${o}_${this.elementsPerThread}_${this.isVec4}`}getUserCode(){let t=o=>`
      for (var i = 0; i < ${o}; i = i + 1)
      {
        var oldValue = atomicLoad(&(result[flatIndex + i]));
        var exchanged = false;
        for (; !exchanged;) {
          let newValueF32 = bitcast<f32>(oldValue) + ${o>1?"value[i]":"value"};
          let newValue = bitcast<i32>(newValueF32);
          let res = atomicCompareExchangeWeak(&(result[flatIndex + i]), oldValue, newValue);
          oldValue = res.old_value;
          exchanged = res.exchanged;
        }
      }
      `,e=this.isVec4?4:1;return`
      ${UD(this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, colIn : i32, value : ${tr(e)}) {
        let col = colIn * ${e};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          ${t(e)}
        }
      }
      ${this.isVec4?rm(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner):nm(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},DC=class{constructor(t,e=null,n=null,o=null){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=e!=null,this.hasPreluActivationWeights=o!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${kn(this.activation,this.hasPreluActivationWeights)}
    ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${ra(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var FC=class{constructor(t){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function as(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),t.makeTensorInfo(n,s,a)}else{let a=new FC(n),i=[{type:"float32",data:[o]}];return t.runWebGPUProgram(a,[],s,i)}}var yW={kernelName:ci,backendName:"webgpu",kernelFunc:as};function Ne(r){let{inputs:t,attrs:e}=r,{x:n}=t,{shape:o}=e,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s),i=y.sizeFromShape(a);return y.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var TW={kernelName:Ts,backendName:"webgpu",kernelFunc:Ne};function Mf({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=t.shape.length,m=e?r.shape[l-2]:r.shape[l-1],c=n?t.shape[p-1]:t.shape[p-2],d=e?r.shape[l-1]:r.shape[l-2],f=n?t.shape[p-2]:t.shape[p-1],h=r.shape.slice(0,-2),g=t.shape.slice(0,-2),b=y.sizeFromShape(h),T=y.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let k=e?[b,m,d]:[b,d,m],A=n?[T,f,c]:[T,c,f],F=Ne({inputs:{x:r},backend:o,attrs:{shape:k}}),R=Ne({inputs:{x:t},backend:o,attrs:{shape:A}}),P=[F,R],L=Math.max(b,T),O=b===1,G=T===1,W=[F,R],H=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}],V,q,Z=[L,d,f],j=$().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(j<0&&(d*f<=128?j=0:L===1&&d<=128&&f<=48&&c>=2e3?j=1:d<=16&&(f<=512||c>=2*f)||f<=16&&(d<=512||m>=2*d)?j=2:j=3),j){case 0:V=new AC(Z,O,G,e,n,s,u,a);break;case 1:{if(q=as({backend:o,attrs:{shape:Z,value:0,dtype:r.dtype}}),V=new NC(Z,c,O,G,e,n),s||u){q=o.runWebGPUProgram(V,W,r.dtype,H,q);let se=new DC(q.shape,s,u,a),ae=null,pe=[q];s&&pe.push(s),a&&pe.push(a),u==="leakyrelu"&&(ae=[{type:"float32",data:[i]}],se.uniforms+=" alpha : f32,");let oe=o.runWebGPUProgram(se,pe,q.dtype,ae);P.push(q);let ge=Ne({inputs:{x:oe},backend:o,attrs:{shape:I}});P.push(oe);for(let fe of P)o.disposeData(fe.dataId);return ge}break}case 2:V=new wC(k,A,Z,e,n,s,u,a);break;case 3:V=new vC(k,Z,O,G,e,n,s,u,a);break;default:throw new Error(`Unsupported MatMulProgramType ${j}.`)}s&&W.push(s),a&&W.push(a),u==="leakyrelu"&&(H.push({type:"float32",data:[i]}),V.uniforms+=" alpha : f32,"),q=o.runWebGPUProgram(V,W,r.dtype,H,q);let X=Ne({inputs:{x:q},backend:o,attrs:{shape:I}});P.push(q);for(let se of P)o.disposeData(se.dataId);return X}function Qme(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return Mf({a:o,b:s,transposeA:u,transposeB:l,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:p})}var xW={kernelName:ws,backendName:"webgpu",kernelFunc:Qme};var Tg=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=C.assertAndGetBroadcastShape(e,n),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${t}`,this.op=t}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Pf(this.op,!1)}
      }

      ${Ie("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var om=class{constructor(t,e,n){this.size=!0;this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(e,n),this.dispatchLayout=ke(this.outputShape),this.op=t,this.useSharedMemoryWithA=e.length<=1&&n.length>1&&e[0]<128,this.useSharedMemoryWithB=n.length<=1&&e.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:e[0],this.shaderKey=`binary_${this.type}_${t}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.workPerThread=1):(y.arraysEqual(e,n)&&y.sizeFromShape(e)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${t}`,this.workGroupSize=[128,1,1]),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let t,e=this.isVec4?"vec4<f32>":"f32",n=`
    fn binaryOperation(a : ${e}, b : ${e}) -> ${e} {
      ${Pf(this.op,this.isVec4)}
    };
    `;if(this.type==="shared"){let o=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",s=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${o}];`:`let a = sharedBuf[${o}];
          let b = getBByOutputIndex(index);`;t=`
        ${n}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ie("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${s}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else t=`
       ${n}
       ${Ie("index")} {
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return t}};function fr(r){let{inputs:t}=r,{x:e}=t;return r.backend.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}var IW={kernelName:Vn,backendName:"webgpu",kernelFunc:fr};function oi(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),a=e.tensorMap.get(s.dataId),i=fr({inputs:{x:n},backend:e}),u=fr({inputs:{x:o},backend:e});return a.complexTensorInfos={real:i,imag:u},s}var CW={kernelName:Pu,backendName:"webgpu",kernelFunc:oi};var na=class{constructor(t,e){this.variableNames=["A"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=e,this.shaderKey=`unary_${e}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${vu(this.op,!1)}
      }
      ${Ie("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function it({opType:r,cpuKernelImpl:t,dtype:e}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=e||s.dtype;if(a.shouldExecuteOnCPU([s])&&t!=null){let l=a.tensorMap.get(s.dataId),p=t(l.values,i);return a.makeTensorInfo(s.shape,i,p)}let u=new na(s.shape,r);return a.runWebGPUProgram(u,[s],i)}}function yt({opType:r,cpuKernelImpl:t,supportsComplex:e=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(e&&a.dtype==="complex64"){let m=u.tensorMap.get(a.dataId),c=u.tensorMap.get(i.dataId),d,f;if(r!==0)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[b,T]=g,x={dataId:b.dataId,dtype:b.dtype,shape:a.shape},I={dataId:T.dataId,dtype:T.dtype,shape:i.shape},k=new om(r,a.shape,i.shape);return u.runWebGPUProgram(k,[x,I],Et(b.dtype,T.dtype))});else{let g=new Tg(18,a.shape,i.shape),b=new Tg(19,a.shape,i.shape),T=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}];d=u.runWebGPUProgram(g,T,"float32"),f=u.runWebGPUProgram(b,T,"float32")}let h=oi({inputs:{real:d,imag:f},backend:u});return u.disposeData(d.dataId),u.disposeData(f.dataId),h}let l=n||Et(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||u.shouldExecuteOnCPU([a,i]))&&t!=null){let m=u.tensorMap.get(a.dataId).values,c=u.tensorMap.get(i.dataId).values,d=a.dtype==="string"?C.fromUint8ToStringArray(m):m,f=a.dtype==="string"?C.fromUint8ToStringArray(c):c,[h,g]=t(a.shape,i.shape,d,f,l);return u.makeTensorInfo(g,l,h)}let p=new om(r,a.shape,i.shape);return u.runWebGPUProgram(p,[a,i],l)}}var{addImpl:kW,castImpl:SW,ceilImpl:vW,concatImpl:AW,equalImpl:wW,expImpl:NW,expm1Impl:DW,floorImpl:FW,gatherNdImpl:RW,gatherV2Impl:PW,greaterEqualImpl:MW,greaterImpl:EW,lessEqualImpl:LW,lessImpl:_W,logImpl:$W,maxImpl:BW,maximumImpl:OW,minimumImpl:zW,multiplyImpl:GW,negImpl:UW,notEqualImpl:WW,prodImpl:KW,rangeImpl:VW,rsqrtImpl:HW,scatterImpl:qW,simpleAbsImpl:jW,sliceImpl:XW,stridedSliceImpl:YW,stringNGramsImpl:ZW,subImpl:QW,tileImpl:JW,topKImpl:eK,transposeImpl:tK,uniqueImpl:ewr}=af;var Jme=it({opType:0,cpuKernelImpl:jW}),rK={kernelName:ms,backendName:"webgpu",kernelFunc:Jme};var ece=yt({opType:1,cpuKernelImpl:kW,supportsComplex:!0}),nK={kernelName:Nn,backendName:"webgpu",kernelFunc:ece};var RC=class{constructor(t){this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t[0],this.variableNames=t.map((e,n)=>`T${n}`),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let t=[];this.variableNames.forEach(o=>{t.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let e=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${Ie("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${t.join(`
        `)}
            setOutputAtIndex(flatIndex, ${e});
          }
        }
      }
    `}};function tce(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return fr({inputs:{x:n[0]},backend:e});let o=n.map(i=>i.dtype).reduce((i,u)=>Et(i,u)),s=n.map(i=>i.shape),a=new RC(s);return e.runWebGPUProgram(a,n,o)}var oK={kernelName:so,backendName:"webgpu",kernelFunc:tce};var Ef=class{constructor(t,e,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="infinityValue : f32,";this.size=!0;let o=[e];this.op=n==="min"?"<":">";let[s,a]=C.computeOutAndReduceShapes(t,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=ke(this.outputShape),y.sizeFromShape(a)<32||y.sizeFromShape(s)>1e3?(this.type="plain",this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize)):(this.type="shared",this.dispatch=ye(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=t,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${ta(this.inputShape.length-1)}`,e=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let o=0;o<this.outputShape.length;o++)n+=`outputCoords.${ta(o)},`;return n};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `}

      ${Ie("index")} {
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${e()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${e()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${e()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};var PC=class{constructor(t,e){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Mp()}
      fn _start(@builtin(local_invocation_id) localId : vec3<u32>,
                @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var MC=class{constructor(t,e){this.variableNames=["A"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=e,this.shaderKey=`transpose_${e}`}getUserCode(){let t=ar(this.outputShape.length),e=rce(this.newDim);return`
      ${Ie("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${t}(${e}), uniforms.aShape)]);
          }
        }
      }
    `}};function rce(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=new Array(t);for(let n=0;n<r.length;n++)e[r[n]]=`resRC.${ta(n)}`;return e.join()}function Sn(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,a=e,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];if(e.shouldExecuteOnCPU([o])){let m=a.tensorMap.get(o.dataId).values,c=tK(m,o.shape,o.dtype,s,u);return e.makeTensorInfo(u,o.dtype,c)}if(o.shape.length===2&&y.arraysEqual(s,[1,0])){let p=new PC(o.shape,s);return a.runWebGPUProgram(p,[o],o.dtype)}let l=new MC(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}var sK={kernelName:Fn,backendName:"webgpu",kernelFunc:Sn};function nce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Sn({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=new Ef(u.shape,a[0],"max"),m=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=e.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>e.disposeData(d.dataId)),c}var aK={kernelName:ao,backendName:"webgpu",kernelFunc:nce};function oce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Sn({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=new Ef(u.shape,a[0],"min"),m=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=e.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>e.disposeData(d.dataId)),c}var iK={kernelName:mi,backendName:"webgpu",kernelFunc:oce};var sce=yt({opType:2}),uK={kernelName:la,backendName:"webgpu",kernelFunc:sce};var xg=class{constructor(t,e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${e}`,this.poolType=e}getUserCode(){let t="resultValue = max(value, resultValue);";this.poolType==="avg"&&(t="resultValue = resultValue + value; count = count + 1.0;");let e="resultValue";return this.poolType==="avg"&&(e="resultValue / count"),`
      ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${t}
            }
          }

          setOutputAtIndex(index, ${e});
        }
      }
    `}};var EC=class{constructor(t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>,";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};var LC=class{constructor(t,e){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32,";this.size=!0;this.inputShape=[t.batchSize,t.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=e,this.shaderKey=`reduce_${e}`}getUserCode(){let t="",e="0.0";this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,e="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(t=" bestValue = bestValue * candidate; ",e="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ie("index")} {
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${e};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${t}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${t}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function Ri(r,t,e,n,o){let s=r.shape.length,a=[],i=y.parseAxisParam(t,r.shape),u=i,l=C.getAxesPermutation(u,s),p=r;l!=null&&(p=Sn({inputs:{x:r},attrs:{perm:l},backend:o}),u=C.getInnerMostAxes(u.length,s),a.push(p)),C.assertAxesAreInnerMostDims(n,u,s);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=m;e&&(d=C.expandShapeToKeepDim(m,i));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([p])){let h=o.tensorMap.get(p.dataId).values;switch(n){case"max":let g=BW(h,y.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:b,outShape:T,outDtype:x}=KW(p.shape,p.dtype,h,u);f=o.makeTensorInfo(T,x,b);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=y.sizeFromShape(c),b=y.sizeFromShape(p.shape)/h,T={windowSize:h,inSize:h,batchSize:b,outSize:1},x=n==="mean"?"float32":tu(r.dtype),I=[{type:"int32",data:[h]}],k=new LC(T,n),A=o.runWebGPUProgram(k,[p],x,I);a.push(A),f=Ne({inputs:{x:A},attrs:{shape:d},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),f}function Ig(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n;return Ri(o,s,a,"max",e)}var pK={kernelName:Ao,backendName:"webgpu",kernelFunc:Ig};function WD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{keepDims:s,axis:a}=n;return Ri(o,a,s,"mean",e)}var lK={kernelName:Do,backendName:"webgpu",kernelFunc:WD};function _C(r,t,e,n){if(t.filterWidth===1&&t.filterHeight===1&&y.arraysEqual(t.inShape,t.outShape))return fr({inputs:{x:r},backend:n});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let a=r.shape.length,i=Ne({inputs:{x:r},backend:n,attrs:{shape:[r.shape[a-3]*r.shape[a-2],r.shape[a-1]]}}),u;e==="avg"?u=WD({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}}):(y.assert(e==="max",()=>`Invalid pool type ${e}`),u=Ig({inputs:{x:i},backend:n,attrs:{reductionIndices:0,keepDims:!1}}));let l=Ne({inputs:{x:u},backend:n,attrs:{shape:t.outShape}});return n.disposeData(i.dataId),n.disposeData(u.dataId),l}let o,s=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?o=new EC(t):(e==="avg"?o=new xg(t,"avg"):(y.assert(e==="max",()=>`Invalid pool type ${e}`),o=new xg(t,"max")),s.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),n.runWebGPUProgram(o,[r],r.dtype,s)}function ace(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=C.computePool2DInfo(o.shape,s,a,l,i,u);return _C(o,p,"avg",e)}var mK={kernelName:io,backendName:"webgpu",kernelFunc:ace};function ice(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;return Mf({a:o,b:s,transposeA:a,transposeB:i,backend:e})}var cK={kernelName:uo,backendName:"webgpu",kernelFunc:ice};var $C=class{constructor(t,e){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.rank=e.length,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=t,this.uniforms=`start : ${ar(t.length)}, `,this.shaderKey="slice"}getUserCode(){let t=ar(this.rank),e=uce(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${KD[a]} = uniforms.start.${ta(a)} + coords.${KD[a]};`),`
      ${Ie("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${t};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${e}));
        }
      }
    `}},KD=["x","y","z","w","u","v"];function uce(r){if(r===1)return"sourceLoc";if(r<=6)return KD.slice(0,r).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function si(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n,[i,u]=xt.parseSliceParams(o,s,a);if(xt.assertParamsValid(o,i,u),e.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=e.tensorMap.get(o.dataId),c=XW(m.values,i,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,c)}if(y.sizeFromShape(u)===0)return e.makeTensorInfo(u,o.dtype,[]);let l=new $C(i,u),p=[{type:"int32",data:i}];return e.runWebGPUProgram(l,[o],o.dtype,p)}var dK={kernelName:Is,backendName:"webgpu",kernelFunc:si};var pce=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=[],f=Ne({inputs:{x:o},backend:e,attrs:{shape:u}}),h=Sn({inputs:{x:f},backend:e,attrs:{perm:l}}),g=Ne({inputs:{x:h},backend:e,attrs:{shape:p}}),b=si({inputs:{x:g},backend:e,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>e.disposeData(T.dataId)),b},fK={kernelName:cs,backendName:"webgpu",kernelFunc:pce};var VD=yt({opType:11,dtype:"bool",cpuKernelImpl:WW}),hK={kernelName:Sa,backendName:"webgpu",kernelFunc:VD};function Au(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.tensorMap.get(n.dataId);return fr({inputs:{x:o.complexTensorInfos.real},backend:e})}var gK={kernelName:zu,backendName:"webgpu",kernelFunc:Au};function bK(r,t){let e=new na(r.shape,24),n=t.runWebGPUProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function HD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return fr({inputs:{x:o},backend:e});let a=It(o.shape),i=HD({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),u=oi({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeData(i.dataId),u}if(o.dtype==="complex64"){let a=Au({inputs:{input:o},backend:e}),i=HD({inputs:{x:a},backend:e,attrs:{dtype:s}});return e.disposeData(a.dataId),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=fr({inputs:{x:o},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let a=e.tensorMap.get(o.dataId).values,[i,u,l]=SW(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,u,l)}if(s==="int32")return bK(o,e);if(s==="bool"){let a=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),u=VD({inputs:{a:o,b:a},backend:e});return e.disposeData(a.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var yK={kernelName:Wn,backendName:"webgpu",kernelFunc:HD};var lce=it({opType:1,cpuKernelImpl:vW}),TK={kernelName:po,backendName:"webgpu",kernelFunc:lce};var BC=class{constructor(t){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ie("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var OC=class{constructor(t){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ie("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function mce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i,u=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return y.sizeFromShape(o.shape)%4===0?i=new BC(o.shape):i=new OC(o.shape),e.runWebGPUProgram(i,[o],o.dtype,u)}var xK={kernelName:Kn,backendName:"webgpu",kernelFunc:mce};var zC=class{constructor(t){this.uniforms="";this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=C.computeOutShape(t,1),this.variableNames=t.map((e,n)=>`T${n}`),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=t.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let t=[];if(this.offsetLength>0){t.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)t.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;t.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else t.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ie("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function sm(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.tensorMap.get(n.dataId);return fr({inputs:{x:o.complexTensorInfos.imag},backend:e})}var IK={kernelName:$u,backendName:"webgpu",kernelFunc:sm};function Lf(r,t,e){let n=r[0].dtype;if(n==="complex64"){let f=r.map(x=>Au({inputs:{input:x},backend:e})),h=r.map(x=>sm({inputs:{input:x},backend:e})),g=Lf(f,t,e),b=Lf(h,t,e),T=oi({inputs:{real:g,imag:b},backend:e});return f.forEach(x=>e.disposeData(x.dataId)),h.forEach(x=>e.disposeData(x.dataId)),e.disposeData(g.dataId),e.disposeData(b.dataId),T}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(k=>{let A=y.sizeFromShape(k.shape.slice(t));return Ne({inputs:{x:k},backend:e,attrs:{shape:[-1,A]}})}),h=f.map(k=>({vals:e.readSync(k.dataId),shape:k.shape})),g=C.computeOutShape(f.map(k=>k.shape),1),b=f[0].shape[0]===1,T=AW(h,g,n,b),x=C.computeOutShape(r.map(k=>k.shape),t),I=e.makeTensorInfo(x,n,T);return f.forEach(k=>e.disposeData(k.dataId)),I}let s=e.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>s){let f=[];for(let g=0;g<r.length;g+=s){let b=r.slice(g,g+s);f.push(Lf(b,t,e))}let h=Lf(f,t,e);for(let g of f)e.disposeData(g.dataId);return h}let{tensors2D:a,outShape:i}=cce(r,t,e),u=a.map(f=>f.shape),l=new zC(u),p=[],m=new Array(u.length-1);if(m.length>0){m[0]=u[0][1],p.push({type:"int32",data:[m[0]]});for(let f=1;f<m.length;f++)m[f]=m[f-1]+u[f][1],p.push({type:"int32",data:[m[f]]})}let c=e.runWebGPUProgram(l,a,a[0].dtype,p);a.forEach(f=>e.disposeData(f.dataId));let d=Ne({inputs:{x:c},backend:e,attrs:{shape:i}});return e.disposeData(c.dataId),d}function cce(r,t,e){let n=C.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>Ne({inputs:{x:s},backend:e,attrs:{shape:[y.sizeFromShape(s.shape.slice(0,t)),y.sizeFromShape(s.shape.slice(t))]}})),outShape:n}}function qD(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(l=>l.shape);C.assertParamsConsistent(a,s);let i=C.computeOutShape(t.map(l=>l.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let u=t.filter(l=>y.sizeFromShape(l.shape)>0);return u.length===1?fr({inputs:{x:u[0]},backend:e}):Lf(u,s,e)}var CK={kernelName:ds,backendName:"webgpu",kernelFunc:qD};function dce(r,t,e,n,o=!1,s=null,a=!1,i=4,u=4,l=4){let p=P=>{switch(P){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},m=P=>{switch(P){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},c=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,d=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",h=r?"uniforms.xShape[2]":"uniforms.xShape[3]",g=r?"row":"col",b=r?"col":"row",T=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${b} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${b} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${b} % inChannels;
      var resData = ${tr(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {
        ${c}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${p(i)}
      }
      return resData;`,x=r?t&&n?`
      let col = colIn * ${i};
      ${T}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${T}
      }
      return ${tr(i)}(0.0);`:n&&e?`
      let col = colIn * ${i};
      ${T}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${T}
      }
      return ${tr(i)}(0.0);`,I=`${m(u)}`,k=tr(l),A=r?tr(i):tr(u),F=r?tr(u):tr(i);return`
      ${kn(s,a,l===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${A} {
        ${r?x:I}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${F} {
        ${r?I:x}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {
        let col = colIn * ${l};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${d}
        ${ra(o,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var GC=class{constructor(t,e,n,o,s=!1,a=null,i=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=((t.inChannels%4===0||t.inChannels%3===0)&&this.isChannelsLast||t.outWidth%4===0&&!this.isChannelsLast)&&t.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=hg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=gg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&t.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),s&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.addBias=s,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=e%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=o%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let t=this.isVec4?rm(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner):nm(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),e=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${dce(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,e[0],e[1],e[2])}
    ${t}
  `}};function kK(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function fce({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=e.dataFormat==="channelsLast",l=!u,p=!1,m=u&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",c=[],d,f;if(m){let b=e.inHeight*e.inWidth*e.inChannels;d=Ne({inputs:{x:r},backend:n,attrs:{shape:[1,e.batchSize,b]}}),f=Ne({inputs:{x:t},backend:n,attrs:{shape:[1,b,e.outChannels]}})}else d=Ne({inputs:{x:r},backend:n,attrs:{shape:u?[e.batchSize,e.inHeight*e.inWidth,e.inChannels]:[e.batchSize,e.inChannels,e.inHeight*e.inWidth]}}),f=Ne({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});if(c.push(d),c.push(f),s!=null){let b=kK(s.shape,u);b!=null&&(s=Ne({inputs:{x:s},backend:n,attrs:{shape:b}}),c.push(s))}if(o!=null){let b=kK(o.shape,u);b!=null&&(o=Ne({inputs:{x:o},backend:n,attrs:{shape:b}}),c.push(o))}let h=Mf({a:u?d:f,b:u?f:d,transposeA:l,transposeB:p,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=Ne({inputs:{x:h},backend:n,attrs:{shape:e.outShape}});c.push(h);for(let b of c)n.disposeData(b.dataId);return g}function UC({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=o!=null,l=s!=null,p=e.dataFormat==="channelsLast";if(p&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID"||e.filterHeight===1&&e.filterWidth===1&&e.dilationHeight===1&&e.dilationWidth===1&&e.strideHeight===1&&e.strideWidth===1&&(e.padInfo.type==="SAME"||e.padInfo.type==="VALID"))return fce({x:r,filter:t,convInfo:e,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});let c=p?e.outHeight*e.outWidth:e.outChannels,d=p?e.outChannels:e.outHeight*e.outWidth,f=e.filterHeight*e.filterWidth*e.inChannels,h=[e.padInfo.top,e.padInfo.left],g=[{type:"int32",data:[e.filterHeight,e.filterWidth]},{type:"int32",data:[...h]},{type:"int32",data:[e.strideHeight,e.strideWidth]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[c]},{type:"int32",data:[d]},{type:"int32",data:[f]}],b=new GC(e,c,d,f,u,i,l),T=[],x=[r,t];u&&(!p&&o.shape.length===1&&(o=Ne({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}}),T.push(o)),x.push(o)),l&&(!p&&s.shape.length===1&&(s=Ne({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),T.push(s)),x.push(s)),i==="leakyrelu"&&(g.push({type:"float32",data:[a]}),b.uniforms+=" alpha : f32,");let I=n.runWebGPUProgram(b,x,r.dtype,g);for(let k of T)n.disposeData(k.dataId);return I}function hce(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=e,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m);return UC({x:o,filter:s,convInfo:c,backend:n})}var SK={kernelName:lo,backendName:"webgpu",kernelFunc:hce};function gce(r=4){let t=s=>{switch(s){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${s} is not supported.`)}},n=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${tr(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${tr(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${tr(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${tr(r)} {
    let col = colIn * ${r};
    ${n}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${tr(r)} {
    let col = colIn * ${r};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(r)}
    }
    return ${tr(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${tr(r)}) {
    let col = colIn * ${r};
    if (row < uniforms.dimAOuter && (col + ${r-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var WC=class{constructor(t){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=t.inShape,y.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=t.inChannels%4===0&&t.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=hg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=gg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4&&(this.variableTypes=["vec4<f32>","f32"]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let t=this.isVec4?rm(this.elementsPerThread,this.workGroupSize):nm(this.elementsPerThread,this.workGroupSize);return`
    ${gce(this.isVec4?4:1)}
    ${t}
    `}};var KC=class{constructor(t){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.inShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Ie("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${t}], coords[${e}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function bce(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(l),c=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if($().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||c.filterHeight<=2&&c.filterWidth<=2&&c.outChannels<=16&&c.inChannels===1)f=new KC(c);else{f=new WC(c);let h=c.inHeight*c.inWidth,g=c.inChannels,b=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return e.runWebGPUProgram(f,[o,s],"float32",d)}var vK={kernelName:mo,backendName:"webgpu",kernelFunc:bce};var yce=it({opType:2}),AK={kernelName:co,backendName:"webgpu",kernelFunc:yce};var Tce=it({opType:3}),wK={kernelName:fo,backendName:"webgpu",kernelFunc:Tce};var VC=class{constructor(t,e,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;let[s]=e;this.outputShape=[s,n[0],n[1],t],this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[t,e]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${t} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${t} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${t}`],[a,i,u]=this.cropWidthBiggerThan1?[`(${e} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${e} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${e}`];return`
    ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var xce=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:l}=n,p=new VC(o.shape[3],s.shape,i,u),m=[{type:"float32",data:[l]}];return e.runWebGPUProgram(p,[o,s,a],"float32",m)},NK={kernelName:ca,backendName:"webgpu",kernelFunc:xce};var Cg=class{constructor(t,e,n,o){this.variableNames=["x"];this.uniforms="index : f32,";this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=o,this.op=t,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let t=this.outputShape.length,e=this.op==="*"?"1.0":"0.0",n=this.exclusive?e:`getX(${DK(t,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],s="",a="";return this.exclusive?(s=this.reverse?`end != ${o-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${o}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${Ie("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${FK(t,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${s}) {
           let idx = ${a};
           ${FK(t,"coords",this.op)} = idx;
           val ${this.op}= getX(${DK(t,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function DK(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function FK(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function HC(r,t,e,n,o,s){let a=t.shape.length,i=C.getAxesPermutation([n],a),u=t;i!=null&&(u=Sn({inputs:{x:t},backend:e,attrs:{perm:i}}));let l=C.getInnerMostAxes(1,a)[0];if(l!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let p=u.shape[l],m=fr({inputs:{x:u},backend:e});for(let c=0;c<=Math.ceil(Math.log2(p))-1;c++){let d=new Cg(r,u.shape,!1,s),f=m,h=[{type:"float32",data:[c]}];m=e.runWebGPUProgram(d,[m],m.dtype,h),e.disposeData(f.dataId)}if(o){let c=new Cg(r,u.shape,o,s),d=m,f=[{type:"float32",data:[0]}];m=e.runWebGPUProgram(c,[m],m.dtype,f),e.disposeData(d.dataId)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Sn({inputs:{x:m},backend:e,attrs:{perm:c}});return e.disposeData(m.dataId),e.disposeData(u.dataId),d}return m}function Cce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return HC("*",o,e,s,a,i)}var RK={kernelName:ma,backendName:"webgpu",kernelFunc:Cce};function kce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return HC("+",o,e,s,a,i)}var PK={kernelName:ho,backendName:"webgpu",kernelFunc:kce};var qC=class{constructor(t,e){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32,";this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${e}`,this.dataFormat=e}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Sce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=[{type:"int32",data:[s]}],g=new qC(f,a);return e.runWebGPUProgram(g,[o],o.dtype,h)}var MK={kernelName:da,backendName:"webgpu",kernelFunc:Sce};var jC=class{constructor(t,e,n,o=!1,s=null,a=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=s,this.hasPreluActivation=a,this.filterHeight=e,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let t=this.filterWidth*this.filterHeight,e=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,o=this.workGroupSize[0]+this.filterWidth-1;return`
      ${kn(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${o}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Mp()}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${o}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${t<e?`if (wIndex < ${t})`:`for(; wIndex < ${t}; wIndex = wIndex + ${e})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${ra(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var _f=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[4,4,4];this.workPerThread=4;this.isVec4=!0;this.outputShape=t.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,this.workPerThread,1]),y.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let t=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth;return`
      ${kn(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      const strideHeight = ${this.convInfo.strideHeight};
      const strideWidth = ${this.convInfo.strideWidth};
      ${Mp()}
      fn _start(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * ${this.workPerThread};
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(strideHeight, strideWidth) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${t}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${t}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * strideWidth + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${ra(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var $f=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`;this.workGroupSize=[256,1,1];this.outputShape=t.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${kn(this.activation,this.hasPreluActivation,!1,4)}

      ${Ie()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${t};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${t};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${ra(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function vce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(u),c=l;c==null&&(c=[1,1]);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,p,!0,m),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inHeight,d.inWidth]}],h=d.dataFormat==="channelsLast",g;return!h&&d.inHeight>16&&d.inWidth>16&&d.strideHeight===1&&d.strideWidth===1&&d.dilationWidth===1&&d.dilationHeight===1&&d.inChannels===d.outChannels?g=new jC(d.outShape,d.filterHeight,d.filterWidth):h&&d.inHeight>4&&d.inWidth>4&&d.strideWidth<=2&&d.inChannels===d.outChannels&&d.dilationHeight===1&&d.dilationWidth===1&&d.inChannels%4===0?g=new _f(d):(g=new $f(d),f.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]})),e.runWebGPUProgram(g,[o,s],o.dtype,f)}var EK={kernelName:go,backendName:"webgpu",kernelFunc:vce};var jD=yt({opType:0,cpuKernelImpl:GW,supportsComplex:!0}),LK={kernelName:Mo,backendName:"webgpu",kernelFunc:jD};function kg(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return Ri(o,s,a,"sum",e)}var _K={kernelName:Ho,backendName:"webgpu",kernelFunc:kg};function Ace(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:b,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(b)?x=s[g]:(x=Sn({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);y.arraysEqual(x.shape,I)||(x=Ne({inputs:{x},backend:e,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=jD({inputs:{a:x,b:c},backend:e}),f.push(c))}h<m-1&&(l[h]>=0&&(c=kg({inputs:{x:c},backend:e,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeData(h.dataId);return c}var $K={kernelName:_u,backendName:"webgpu",kernelFunc:Ace};var wce=it({opType:4}),BK={kernelName:yo,backendName:"webgpu",kernelFunc:wce};var Nce=yt({opType:5,dtype:"bool",cpuKernelImpl:wW}),OK={kernelName:fa,backendName:"webgpu",kernelFunc:Nce};var XD=it({opType:5,cpuKernelImpl:NW,dtype:"float32"}),zK={kernelName:To,backendName:"webgpu",kernelFunc:XD};function XC(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),Ne({inputs:{x:s},backend:n,attrs:{shape:i}})}var GK={kernelName:fs,backendName:"webgpu",kernelFunc:XC};var Dce=it({opType:6,cpuKernelImpl:DW}),UK={kernelName:ha,backendName:"webgpu",kernelFunc:Dce};var YC=class{constructor(t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var WK={kernelName:ga,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new YC(e.shape);return n.runWebGPUProgram(o,[e],e.dtype)}};var Fce=it({opType:7,cpuKernelImpl:FW}),KK={kernelName:xo,backendName:"webgpu",kernelFunc:Fce};var Rce=yt({opType:13,dtype:"int32"}),VK={kernelName:Io,backendName:"webgpu",kernelFunc:Rce};var ZC=class{constructor(t,e,n=!1){this.isFromPixels=!0;this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[e,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let t=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${Ie("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${t};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var HK={kernelName:Kp,backendName:"webgpu",kernelFunc:Pce},Bf,YD=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),QC=new Map;function Pce(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,l=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[p,m]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,p,s],d=$().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&a,f=a||i;if(l||u||f){let T;if(d){let L=o;if(!QC.has(L)||QC.get(L).expired){let O={source:L};QC.set(L,e.device.importExternalTexture(O))}T={width:p,height:m,format:null,usage:null,texture:QC.get(L)}}else{if(f){let W=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Bf==null||W!==YD)&&(YD=W,Bf=document.createElement("canvas").getContext("2d",{willReadFrequently:YD})),Bf.canvas.width=p,Bf.canvas.height=m,Bf.drawImage(o,0,0,p,m),o=Bf.canvas}let L=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,O="rgba8unorm",G=e.textureManager.acquireTexture(c[1],c[0],O,L);e.queue.copyExternalImageToTexture({source:o},{texture:G},[c[1],c[0]]),T={width:p,height:m,format:O,usage:L,texture:G}}let x=y.sizeFromShape(c),I=y.computeStrides(c),k=new ZC(c,s,d),A=[{type:"uint32",data:[x]},{type:"uint32",data:[s]},{type:"uint32",data:[...I]}],F=e.makeTensorInfo([m,p],"int32"),R=e.tensorMap.get(F.dataId);R.resourceInfo=T;let P=e.runWebGPUProgram(k,[F],"int32",A);return e.disposeData(F.dataId),P}let h=o.data,g=h;if(s!=null&&s!==4){g=new Uint8Array(o.width*o.height*s);let T=h.length,x=0;for(let I=0;I<T;I++)I%4<s&&(g[x++]=h[I])}let b=e.makeTensorInfo(c,"int32",new Int32Array(g));return e.uploadToGPU(b.dataId),b}var JC=class{constructor(t,e,n,o,s){this.uniforms="varianceEpsilon : f32,";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(t,e),C.assertAndGetBroadcastShape(t,n),this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(C.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset")),s!=null&&(C.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let t="0.0";this.offsetShape!=null&&(t="getOffsetByOutputIndex(index)");let e="1.0";return this.scaleShape!=null&&(e="getScaleByOutputIndex(index)"),`
      ${Ie("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${t};
          let scaleValue = ${e};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var qK={kernelName:Co,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:u}=t,l=e,p=[n,a,i],m=null;s!=null&&(m=s.shape,p.push(s));let c=null;o!=null&&(c=o.shape,p.push(o));let d=new JC(n.shape,a.shape,i.shape,m,c),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(d,p,n.dtype,f)}};function Mce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(p),g=C.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h);return UC({x:o,filter:s,convInfo:g,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:d})}var jK={kernelName:Ns,backendName:"webgpu",kernelFunc:Mce};function Ece(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=p;f==null&&(f=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let h=C.computeConv2DInfo(o.shape,s.shape,u,f,l,m,!0),g=[o,s],b=a!=null,T=i!=null;b&&g.push(a),T&&g.push(i);let x=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],I;return h.inHeight>4&&h.inWidth>4&&h.strideWidth<=2&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?I=new _f(h,b,c,T):(I=new $f(h,b,c,T),x.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),c==="leakyrelu"&&(x.push({type:"float32",data:[d]}),I.uniforms+=" alpha : f32,"),e.runWebGPUProgram(I,g,"float32",x)}var XK={kernelName:Ds,backendName:"webgpu",kernelFunc:Ece};var ek=class{constructor(t,e){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${t}`,this.sliceDim=t,this.uniforms=`sliceDim : i32, strides : ${ar(t)},`}getUserCode(){let t;return this.sliceDim>1?t="uniforms.strides[j]":t="uniforms.strides",`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${t};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Lce(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[u,l,p,m]=C.prepareAndValidate(n,o),c=Ne({inputs:{x:o},backend:e,attrs:{shape:[l,a]}}),d=Ne({inputs:{x:n},backend:e,attrs:{shape:[y.sizeFromShape(n.shape)/p,p]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let T=e.readSync(o.dataId),x=e.bufferSync(n),I=RW(T,x,n.dtype,l,a,p,m,n.shape,i);return e.makeTensorInfo(u,n.dtype,I.values)}let f=new ek(a,[l,p]),h=[{type:"int32",data:[a]},{type:"int32",data:m}],g=e.runWebGPUProgram(f,[d,c],d.dtype,h),b=Ne({inputs:{x:g},backend:e,attrs:{shape:u}});return e.disposeData(c.dataId),e.disposeData(d.dataId),e.disposeData(g.dataId),b}var YK={kernelName:ba,backendName:"webgpu",kernelFunc:Lce};var tk=class{constructor(t,e){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.slice(),this.aShape=t,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let t=_ce(this.aShape);return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${t}));
        }
      }
    `}};function _ce(r){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],e=[];for(let n=0;n<r.length;n++)n===2?e.push("indexZ"):e.push(`${t[n]}`);return e.join()}function ZD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0],l=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=y.sizeFromShape(s.shape),m=[],c=Ne({inputs:{x:o},backend:e,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=Ne({inputs:{x:s},backend:e,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(e.shouldExecuteOnCPU([o,s])){let x=e.tensorMap.get(d.dataId).values,I=xe(d.shape,d.dtype,x),A=e.tensorMap.get(c.dataId).values,F=xe(c.shape,c.dtype,A),R=PW(F,I,f);return m.forEach(P=>e.disposeData(P.dataId)),e.makeTensorInfo(l.outputShape,R.dtype,R.values)}let h=new tk(c.shape,f),g=e.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let b=Ne({inputs:{x:g},backend:e,attrs:{shape:l.outputShape}});return m.forEach(T=>e.disposeData(T.dataId)),b}var ZK={kernelName:hs,backendName:"webgpu",kernelFunc:ZD};var $ce=yt({opType:6,cpuKernelImpl:EW,dtype:"bool"}),QK={kernelName:ya,backendName:"webgpu",kernelFunc:$ce};var Bce=yt({opType:7,dtype:"bool",cpuKernelImpl:MW}),JK={kernelName:ko,backendName:"webgpu",kernelFunc:Bce};var Oce=it({opType:8,dtype:"bool"}),eV={kernelName:Ta,backendName:"webgpu",kernelFunc:Oce};function zce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,a=[{type:"float32",data:[s]}],i=new na(o.shape,15);return i.uniforms="alpha : f32,",e.runWebGPUProgram(i,[o],"float32",a)}var tV={kernelName:So,backendName:"webgpu",kernelFunc:zce};var Gce=yt({opType:8,dtype:"bool",cpuKernelImpl:_W}),rV={kernelName:xa,backendName:"webgpu",kernelFunc:Gce};var Uce=yt({opType:9,dtype:"bool",cpuKernelImpl:LW}),nV={kernelName:Ia,backendName:"webgpu",kernelFunc:Uce};var Wce=it({opType:10,cpuKernelImpl:$W}),oV={kernelName:vo,backendName:"webgpu",kernelFunc:Wce};var Kce=yt({opType:10,dtype:"bool"}),sV={kernelName:Ca,backendName:"webgpu",kernelFunc:Kce};var Vce=it({opType:11}),aV={kernelName:ka,backendName:"webgpu",kernelFunc:Vce};var Hce=yt({opType:16,cpuKernelImpl:OW}),iV={kernelName:wo,backendName:"webgpu",kernelFunc:Hce};function qce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=C.computePool2DInfo(o.shape,s,a,l,i,u);return _C(o,p,"max",e)}var uV={kernelName:No,backendName:"webgpu",kernelFunc:qce};function jce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return Ri(o,s,a,"min",e)}var pV={kernelName:Fo,backendName:"webgpu",kernelFunc:jce};var Xce=yt({opType:17,cpuKernelImpl:zW}),lV={kernelName:Ro,backendName:"webgpu",kernelFunc:Xce};var rk=class{constructor(t,e,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.map((o,s)=>o[0]+t[s]+o[1]),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=t,e.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let t=this.xShape.length,e=this.xShape.map((l,p)=>`uniforms.pad${p}[0]`).join(","),n=this.xShape.map((l,p)=>`uniforms.pad${p}[0] + uniforms.xShape${t>1?`[${p}]`:""}`).join(","),o=t===1?"start":"start[i]",s=t===1?"end":"end[i]",a=t===1?"outC":"outC[i]",i=ar(t),u=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let start = ${i}(${e});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${t}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${u}));
        }
      }
    `}};var mV={kernelName:Po,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=e,i=o.map(p=>({type:"int32",data:[p[0],p[1]]})),u=new rk(n.shape,o,s);return a.runWebGPUProgram(u,[n],n.dtype,i)}};function Yce(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.tensorMap.get(n.dataId),[a,i]=UW(s.values,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,a)}let o=new na(n.shape,12);return e.runWebGPUProgram(o,[n],n.dtype)}var cV={kernelName:gs,backendName:"webgpu",kernelFunc:Yce};function Zce(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=e.readSync(o.dataId),p=e.readSync(s.dataId),{selectedIndices:m}=xr.nonMaxSuppressionV3Impl(l,p,a,i,u);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var dV={kernelName:va,backendName:"webgpu",kernelFunc:Zce};function Qce(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=e.readSync(o.dataId),m=e.readSync(s.dataId),c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:b}=xr.nonMaxSuppressionV5Impl(p,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var fV={kernelName:Aa,backendName:"webgpu",kernelFunc:Qce};function Sg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=Au({inputs:{input:n},backend:e}),s=Sg({inputs:{x:o},backend:e}),a=sm({inputs:{input:n},backend:e}),i=Sg({inputs:{x:a},backend:e}),u=oi({inputs:{real:s,imag:i},backend:e});return e.disposeData(o.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),e.disposeData(i.dataId),u}else return as({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var hV={kernelName:vs,backendName:"webgpu",kernelFunc:Sg};function gV(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Au({inputs:{input:n},backend:e}),s=gV({inputs:{x:o},backend:e}),a=sm({inputs:{input:n},backend:e}),i=Sg({inputs:{x:a},backend:e}),u=oi({inputs:{real:s,imag:i},backend:e});return e.disposeData(o.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),e.disposeData(i.dataId),u}else return as({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var bV={kernelName:bs,backendName:"webgpu",kernelFunc:gV};function Jce(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return XC({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(p=>{let m=XC({inputs:{input:p},backend:e,attrs:{dim:o}});return i.push(m),m}),l=qD({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(p=>e.disposeData(p.dataId)),l}var yV={kernelName:ys,backendName:"webgpu",kernelFunc:Jce};var nk=class{constructor(t,e){this.variableNames=["x"];this.uniforms="constantValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.map((n,o)=>n[0]+t[o]+n[1]),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),e.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.xShape=t,this.shaderKey="pad"}getUserCode(){let t=this.xShape.length,e=ar(t),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${t>1?`[${c}]`:""}`).join(","),s=t>1?`${e}(${n})`:`${n}`,a=t>1?`${e}(${o})`:`${o}`,i=t>1?"any(outC < start)":"outC < start",u=t>1?"any(outC >= end)":"outC >= end",l=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${u}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}};var QD=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;if(s.every(l=>y.arraysEqual(l,[0,0])))return fr({inputs:{x:o},backend:e});if(y.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return as({backend:e,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(l=>i.push({type:"int32",data:[l[0],l[1]]}));let u=new nk(o.shape,s);return e.runWebGPUProgram(u,[o],o.dtype,i)},TV={kernelName:Eo,backendName:"webgpu",kernelFunc:QD};var ede=yt({opType:14}),xV={kernelName:Lo,backendName:"webgpu",kernelFunc:ede};function tde(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=new om(15,n.shape,o.shape);return e.runWebGPUProgram(s,[n,o],"float32")}var IV={kernelName:_o,backendName:"webgpu",kernelFunc:tde};function rde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return Ri(o,s,a,"prod",e)}var CV={kernelName:$o,backendName:"webgpu",kernelFunc:rde};var nde=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=VW(n,o,s,a);return t.makeTensorInfo([i.length],a,i)},kV={kernelName:di,backendName:"webgpu",kernelFunc:nde};var JD=yt({opType:4}),SV={kernelName:bo,backendName:"webgpu",kernelFunc:JD};var ode=it({opType:16}),vV={kernelName:Na,backendName:"webgpu",kernelFunc:ode};var sde=it({opType:13}),AV={kernelName:Bo,backendName:"webgpu",kernelFunc:sde};var ade=it({opType:14}),wV={kernelName:Go,backendName:"webgpu",kernelFunc:ade};var ok=class{constructor(t,e,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[t[0],e,n,t[3]],this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function ide(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,size:a,halfPixelCenters:i}=n,[u,l]=a,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[i?.5:0]}],f=new ok(o.shape,u,l);return e.runWebGPUProgram(f,[o],"float32",d)}var NV={kernelName:zo,backendName:"webgpu",kernelFunc:ide};var sk=class{constructor(t,e,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[t[0],e,n,t[3]],this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let t;return this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function ude(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[s?.5:0]}],f=new sk(o.shape,u,l,a);return e.runWebGPUProgram(f,[o],o.dtype,d)}var DV={kernelName:Oo,backendName:"webgpu",kernelFunc:ude};var ak=class{constructor(t,e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=t,typeof e=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ie("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var FV={kernelName:$a,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,u=new ak(n.shape,s),[l,p]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[{type:"float32",data:[l]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),i.runWebGPUProgram(u,[n],n.dtype,m)}};var pde=it({opType:17,cpuKernelImpl:HW}),RV={kernelName:Uo,backendName:"webgpu",kernelFunc:pde};var Ep=class{constructor(t,e,n,o,s,a,i,u=!0){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.sumDupeIndices=u,this.dispatchLayout=ke(t),this.dispatch=ye(this.dispatchLayout,t,this.workGroupSize),this.sliceDimGreaterThanOne=e>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}_${u}`;let l=ar(s.length);this.uniforms=`sliceDim : i32, strides: ${l}, size: i32,`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let t="";this.indicesRank===1?t="coords[0]":this.indicesRank===2&&(t="coords[0], j");let e=`getIndices(${t})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="";this.dispatchLayout.x.length===1?(o="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(o="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${Array.from({length:this.updatesRank},(p,m)=>`coords[${m}]`).join(", ")})`,u=(p,m)=>{let c=`atomicAdd(${p}, bitcast<i32>(${m}))`;this.type==="float32"&&(c=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${m});
            loop {
              let info = atomicCompareExchangeWeak(${p}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${m});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${p}, bitcast<i32>(${m}));`;return this.sumDupeIndices?c:d};return`
    ${s}

      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${e}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${Ff(this.type,!1)}(${i});
          let flatIndex = getOutputIndexFromCoords(${o});

          ${u("&result[flatIndex]","updateValue")};
        }
      }`}};function lde(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=[m/l,l];if(m===0)return e.makeTensorInfo(a,o.dtype);let d=Ne({inputs:{x:o},backend:e,attrs:{shape:[u,i]}}),f=Ne({inputs:{x:s},backend:e,attrs:{shape:[u,l]}}),h=f.dtype,g=as({backend:e,attrs:{shape:c,value:0,dtype:h}}),b=y.sizeFromShape(f.shape),T=[{type:"int32",data:[i]},{type:"int32",data:p},{type:"int32",data:[b]}],x=new Ep(f.shape,i,d.shape.length,f.shape.length,p,c,h),I=e.runWebGPUProgram(x,[f,d],h,T,g),k=Ne({inputs:{x:I},backend:e,attrs:{shape:a}});return e.disposeData(d.dataId),e.disposeData(f.dataId),e.disposeData(I.dataId),k}var PV={kernelName:Ra,backendName:"webgpu",kernelFunc:lde};var ik=class{constructor(t,e,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=t,this.rank=n,this.shaderKey="select"}getUserCode(){let t,e;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)e="resRC",t="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);t=s.join(),e=a.join()}return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${t});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${e}));
          } else {
            setOutputAtIndex(index, getB(${e}));
          }
        }
      }
    `}};function mde(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=new ik(n.shape.length,o.shape,o.shape.length);return e.runWebGPUProgram(a,[n,o,s],Et(o.dtype,s.dtype))}var MV={kernelName:xs,backendName:"webgpu",kernelFunc:mde};var cde=it({opType:20}),EV={kernelName:Ko,backendName:"webgpu",kernelFunc:cde};var dde=it({opType:18}),LV={kernelName:Wo,backendName:"webgpu",kernelFunc:dde};var fde=it({opType:19}),_V={kernelName:Pa,backendName:"webgpu",kernelFunc:fde};var e0=yt({opType:3,cpuKernelImpl:QW,supportsComplex:!0}),$V={kernelName:Xo,backendName:"webgpu",kernelFunc:e0};function hde(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=Ig({inputs:{x:o},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),l=Ne({inputs:{x:i},backend:e,attrs:{shape:u}}),p=e0({inputs:{a:o,b:l},backend:e}),m=XD({inputs:{x:p},backend:e}),c=kg({inputs:{x:m},backend:e,attrs:{axis:a,keepDims:!1}}),d=Ne({inputs:{x:c},backend:e,attrs:{shape:u}}),f=JD({inputs:{a:m,b:d},backend:e});return e.disposeData(i.dataId),e.disposeData(l.dataId),e.disposeData(p.dataId),e.disposeData(m.dataId),e.disposeData(c.dataId),e.disposeData(d.dataId),f}var BV={kernelName:qo,backendName:"webgpu",kernelFunc:hde};var gde=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((b,T)=>b*T),u=[[0,0]];u.push(...a);for(let b=1+s.length;b<o.shape.length;++b)u.push([0,0]);let l=[],p=QD({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(p.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(p.shape,s,i,!1),f=Ne({inputs:{x:p},backend:e,attrs:{shape:m}}),h=Sn({inputs:{x:f},backend:e,attrs:{perm:c}}),g=Ne({inputs:{x:h},backend:e,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(b=>e.disposeData(b.dataId)),g},OV={kernelName:Cs,backendName:"webgpu",kernelFunc:gde};var uk=class{constructor(t,e){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let t=bde(this.rank,"uniforms.");return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${t}));
        }
      }
    `}};function bde(r,t=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${t}aShape)`;let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${e[o]} % ${t}aShape[${o}])`);return n.join()}function t0(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(e.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=e.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>y.decodeString(c)):u,p=xe(o.shape,o.dtype,l),m=JW(p,s);return e.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new uk(o.shape,s);return e.runWebGPUProgram(a,[o],o.dtype)}var zV={kernelName:Dn,backendName:"webgpu",kernelFunc:t0};function yde(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let R=e.bufferSync(o),P=e.bufferSync(s),L=y.decodeString(e.readSync(a.dataId)[0]),O=qW(R,P,i,c,p,l,u,m,L,d);return e.makeTensorInfo(i,O.dtype,O.values)}let f=[c/p,p],h=Ne({inputs:{x:o},backend:e,attrs:{shape:[l,u]}}),g=s.shape.length?Ne({inputs:{x:s},backend:e,attrs:{shape:[l,p]}}):fr({inputs:{x:s},backend:e}),b=g.dtype,T=e.makeTensorInfo([],b,y.makeZerosTypedArray(1,b)),x=Ne({inputs:{x:a},backend:e,attrs:{shape:Array(f.length).fill(1)}}),I=t0({inputs:{x},backend:e,attrs:{reps:f}}),k=y.sizeFromShape([l,p]),A=[{type:"int32",data:[u]},{type:"int32",data:m},{type:"int32",data:[k]}];switch(l){case 0:break;case 1:{let R=new Ep([l,p],u,h.shape.length,g.shape.length,m,f,b,d);e.runWebGPUProgram(R,[g,h],b,A,I)}break;default:{let R=new Ep([l,p],u,h.shape.length,T.shape.length,m,f,b,d);e.runWebGPUProgram(R,[T,h],b,A,I)}{let R=new Ep([l,p],u,h.shape.length,g.shape.length,m,f,b);e.runWebGPUProgram(R,[g,h],b,A,I)}}let F=Ne({inputs:{x:I},backend:e,attrs:{shape:i}});return e.disposeData(h.dataId),e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(T.dataId),e.disposeData(I.dataId),F}var GV={kernelName:Ku,backendName:"webgpu",kernelFunc:yde};function Tde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=si({inputs:{x:o},backend:e,attrs:{begin:p,size:d}});return p[i]+=c,f})}var UV={kernelName:ks,backendName:"webgpu",kernelFunc:Tde};var xde=it({opType:21}),WV={kernelName:Vo,backendName:"webgpu",kernelFunc:xde};var KV={kernelName:fi,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t,o=new na(e.shape,22);return n.runWebGPUProgram(o,[e],e.dtype)}};var Ide=yt({opType:12}),VV={kernelName:jo,backendName:"webgpu",kernelFunc:Ide};var pk=class{constructor(t){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let e=ar(this.outputShape.length);this.uniforms=`begin : ${e},  strides : ${e}, `,this.shaderKey="stridedSlice"}getUserCode(){let t=this.outputShape.length,e="";if(t===1)e="coords * uniforms.strides + uniforms.begin";else{let o=0;e=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Ie("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${e}));
         }
       }
     `}};function Cde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=Ne({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=xt.computeOutShape(T,x,I),F=si({inputs:{x:o},backend:e,attrs:{begin:T,size:A}});k=Ne({inputs:{x:F},backend:e,attrs:{shape:f}}),e.disposeData(F.dataId)}else if(e.shouldExecuteOnCPU([o])){let F=e.readSync(o.dataId),R=xe(o.shape,o.dtype,F),P=YW(d,R,I,T);k=e.makeTensorInfo(f,o.dtype,P.values)}else{let F=new pk(d),R=[{type:"int32",data:T},{type:"int32",data:I}],P=e.runWebGPUProgram(F,[o],o.dtype,R);k=Ne({inputs:{x:P},backend:e,attrs:{shape:f}}),e.disposeData(P.dataId)}return k}var HV={kernelName:Ma,backendName:"webgpu",kernelFunc:Cde};function kde(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=t,c=e.readSync(p.dataId),d=e.readSync(m.dataId),[f,h]=ZW(c,d,o,s,a,i,u,l);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var qV={kernelName:hi,backendName:"webgpu",kernelFunc:kde};var Sde=it({opType:23}),jV={kernelName:Yo,backendName:"webgpu",kernelFunc:Sde};var lk=class{constructor(t){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Ie("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},mk=class{constructor(t){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Ie("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Of(r,t){t!==null&&r.disposeData(t.dataId)}function XV(r){let t=1;for(;t<r;)t*=2;return t}function vde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n,i=o.shape,u=i[i.length-1];if(e.shouldExecuteOnCPU([o])){let k=e.readSync(o.dataId),[A,F]=eK(k,i,o.dtype,s,a);return[e.makeTensorInfo(A.shape,A.dtype,A.values),e.makeTensorInfo(F.shape,F.dtype,F.values)]}if(s===0)return i[i.length-1]=0,[e.makeTensorInfo(i,o.dtype,[]),e.makeTensorInfo(i,"int32",[])];if(u===1)return[o,as({attrs:{shape:i,dtype:"int32",value:0},backend:e})];let p=y.sizeFromShape(i)/u,m=Ne({inputs:{x:o},attrs:{shape:[p,u]},backend:e}),c=XV(s),d=XV(u),f=null,h=()=>f===null?[m,m]:[m,f],g=(k,A,F)=>{let R=h(),P=new lk(F),O=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[A]}],G=f;f=e.runWebGPUProgram(P,R,"int32",O),Of(e,G)};for(let k=1;k<c;k*=2){let A=k*2;for(let F=k;F>=1;F/=2)g(A,F,[p,d])}for(let k=d;k>c;k/=2){let A=h(),F=new mk([p,k/2]),P=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],L=f;f=e.runWebGPUProgram(F,A,"int32",P),Of(e,L);let O=c/2,G=O*2;for(let W=O;W>=1;W/=2)g(G,W,f.shape)}let b=f;f=si({inputs:{x:f},backend:e,attrs:{begin:0,size:[p,s]}}),Of(e,b);let T=ZD({inputs:{x:m,indices:f},backend:e,attrs:{axis:1,batchDims:1}});Of(e,m);let x=i.slice(0,-1);x.push(s),b=f,f=Ne({inputs:{x:f},attrs:{shape:x},backend:e}),Of(e,b);let I=T;return T=Ne({inputs:{x:T},attrs:{shape:x},backend:e}),Of(e,I),[T,f]}var YV={kernelName:La,backendName:"webgpu",kernelFunc:vde};var ck=class{constructor(t){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ie("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Ade(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=new ck(g),T=a==="nearest"?1:2,x;switch(i){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let I=[{type:"int32",data:[T]},{type:"int32",data:[x]},{type:"float32",data:[u]}];return e.runWebGPUProgram(b,[o,s],"float32",I)}var ZV={kernelName:_a,backendName:"webgpu",kernelFunc:Ade};function wde(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=si({inputs:{x:a},backend:e,attrs:{begin:c,size:d}}),b=Ne({inputs:{x:g},backend:e,attrs:{shape:l}});f[h]=b,m.push(g)}return m.forEach(h=>e.disposeData(h.dataId)),f}var QV={kernelName:Ss,backendName:"webgpu",kernelFunc:wde};var Nde=[xW,rK,nK,oK,aK,iK,uK,mK,cK,fK,yK,TK,xK,CW,CK,SK,vK,AK,wK,NK,RK,PK,MK,EK,$K,BK,OK,zK,GK,UK,yW,WK,HK,KK,VK,qK,jK,XK,YK,ZK,QK,JK,IW,IK,eV,tV,rV,nV,oV,sV,aV,pK,iV,uV,lK,pV,lV,mV,LK,cV,dV,fV,hK,bV,yV,TV,xV,IV,CV,kV,gK,SV,vV,AV,wV,TW,NV,DV,FV,RV,PV,MV,EV,LV,_V,dK,HV,qV,BV,OV,GV,UV,WV,KV,VV,$V,_K,jV,zV,YV,ZV,sK,QV,hV];for(let r of Nde)Qi(r);var Ze=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(Ze||{}),am=(i=>(i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu",i))(am||{});var JV;function Dde(r){JV=r.wasm.cwrap(ws,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Fde(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(s.dataId).id,f=0;if(a!=null){let R=e.dataIdMap.get(a.dataId);if(R.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${R.shape.length}.`);f=R.id}let h=i==null?0:e.dataIdMap.get(i.dataId).id,g=am[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let b=u?o.shape[2]:o.shape[1],T=l?s.shape[1]:s.shape[2],x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),I=e.makeOutput([...x,b,T],o.dtype),k=e.dataIdMap.get(I.dataId).id,A=new Uint8Array(new Int32Array(o.shape).buffer),F=new Uint8Array(new Int32Array(s.shape).buffer);return JV(c,A,o.shape.length,d,F,s.shape.length,u,l,g,f,h,m||0,k),I}var e4={kernelName:ws,backendName:"wasm",setupFunc:Dde,kernelFunc:Fde};function pt(r,t){let e;function n(s){e=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,u=a.dataIdMap.get(i.dataId).id,l=a.makeOutput(i.shape,t||i.dtype),p=a.dataIdMap.get(l.dataId).id;return y.sizeFromShape(l.shape)===0||e(u,Ze[i.dtype],p),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var t4=pt(ms);function ft(r,t,e){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:u}=a,{a:l,b:p}=u,m=i.dataIdMap.get(l.dataId).id,c=i.dataIdMap.get(p.dataId).id,d=e??l.dtype,f=C.assertAndGetBroadcastShape(l.shape,p.shape),h=i.makeOutput(f,d);if(y.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),b=new Uint8Array(new Int32Array(p.shape).buffer),T=i.dataIdMap.get(h.dataId).id;return(()=>n(m,g,l.shape.length,c,b,p.shape.length,Ze[l.dtype],T))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var Rde=!0,r4=ft(Nn,Rde);var n4;function Pde(r){n4=r.wasm.cwrap(so,null,["array","number","number","number"])}function Mde(r){let{inputs:t,backend:e}=r,n=e.makeOutput(t[0].shape,t[0].dtype);if(y.sizeFromShape(n.shape)===0)return n;let o=t.map(i=>e.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=e.dataIdMap.get(n.dataId).id;return n4(s,o.length,Ze[n.dtype],a),n}var o4={kernelName:so,backendName:"wasm",setupFunc:Pde,kernelFunc:Mde};function im(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype),o=e.typedArrayFromHeap(t);return e.typedArrayFromHeap(n).set(o),n}var s4={kernelName:Vn,backendName:"wasm",kernelFunc:im};var a4;function Ede(r){a4=r.wasm.cwrap(Fn,null,["number","array","number","number","number","array","number"])}function is(r){let{inputs:t,backend:e,attrs:n}=r,[o,s]=_de(t.x.shape,n.perm),a=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(a=!1);let i=Lde(t.x.shape,n.perm),u={dataId:t.x.dataId,shape:o,dtype:t.x.dtype};if(a){let f=im({inputs:t,backend:e});return f.shape=i,f}let l=e.makeOutput(i,u.dtype),p=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(l.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(u.shape).buffer);return a4(p,d,u.shape.length,Ze[u.dtype],m,c,s.length),l}function Lde(r,t){let e=new Array(r.length);for(let n=0;n<e.length;n++)e[n]=r[t[n]];return e}function _de(r,t){let e=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&e.push(r[o]),r[t[o]]!==1&&n.push(t[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[e,n]}var i4={kernelName:Fn,backendName:"wasm",kernelFunc:is,setupFunc:Ede};function vn(r,t,e){let n=r.shape,o=r.shape.length,s=y.parseAxisParam(t,n),a=s,i=C.getAxesPermutation(a,o),u=null,l=!1;if(i!=null){let p=new Array(o);for(let d=0;d<p.length;d++)p[d]=n[i[d]];a=C.getInnerMostAxes(a.length,o),u=is({inputs:{x:r},attrs:{perm:i},backend:e});let m=e.dataIdMap.get(r.dataId).id;e.dataIdMap.get(u.dataId).id!==m&&(l=!0)}return{transposed:u,originalAxes:s,axes:a,inputWasTransposed:l}}var u4;function $de(r){u4=r.wasm.cwrap(Li,null,["number, number, number"])}function Bde(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,u=t.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t);if(d){let x=t.dataIdMap.get(p.dataId).id;l=p,u=x}let f=l.shape.length;C.assertAxesAreInnerMostDims("all",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,a.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;u4(u,b,x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var p4={kernelName:Li,backendName:"wasm",setupFunc:$de,kernelFunc:Bde};var l4;function Ode(r){l4=r.wasm.cwrap(_i,null,["number, number, number"])}function zde(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,u=t.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t);if(d){let x=t.dataIdMap.get(p.dataId).id;l=p,u=x}let f=l.shape.length;C.assertAxesAreInnerMostDims("any",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,a.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;l4(u,b,x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var m4={kernelName:_i,backendName:"wasm",setupFunc:Ode,kernelFunc:zde};var c4;function Gde(r){c4=r.wasm.cwrap(ao,null,["number","number","number","number","number"])}function Ude(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o}=n,{x:s}=e,a=t.dataIdMap.get(s.dataId).id,i=a,u=s,{transposed:l,axes:p,inputWasTransposed:m}=vn(s,o,t);if(m){let b=t.dataIdMap.get(l.dataId).id;b!==a&&(u=l,i=b)}let c=u.shape.slice(0,-1),d=t.makeOutput(c,"int32"),f=t.dataIdMap.get(d.dataId).id,h=y.sizeFromShape(d.shape),g=u.shape[p[0]];return c4(i,Ze[u.dtype],h,g,f),m&&t.disposeData(l.dataId),d}var d4={kernelName:ao,backendName:"wasm",kernelFunc:Ude,setupFunc:Gde};var f4;function Wde(r){f4=r.wasm.cwrap(io,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Kde(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=e,p=C.computePool2DInfo(o.shape,a,i,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,b=p.strideHeight,T=p.strideWidth,x=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let I=n.makeOutput(p.outShape,"float32"),k=n.dataIdMap.get(I.dataId).id;return f4(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,T,x,k),I}var h4={kernelName:io,backendName:"wasm",setupFunc:Wde,kernelFunc:Kde};function hr(r){let{inputs:t,attrs:e}=r,{x:n}=t,{shape:o}=e,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s);return y.assert(s===y.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var g4={kernelName:Ts,backendName:"wasm",kernelFunc:hr};var b4;function Vde(r){b4=r.wasm.cwrap(uo,null,["number","array","number","number","array","number","number","number","number"])}function Hde(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[l-1]:s.shape[l-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,p,c]:[g,c,p],k=i?[b,d,m]:[b,m,d],A=hr({inputs:{x:o},backend:e,attrs:{shape:I}}),F=hr({inputs:{x:s},backend:e,attrs:{shape:k}}),R=e.dataIdMap.get(A.dataId).id,P=e.dataIdMap.get(F.dataId).id,L=a?A.shape[2]:A.shape[1],O=i?F.shape[1]:F.shape[2],G=Math.max(g,b),W=e.makeOutput([G,L,O],A.dtype),H=e.dataIdMap.get(W.dataId).id,V=new Uint8Array(new Int32Array(A.shape).buffer),q=new Uint8Array(new Int32Array(F.shape).buffer);return b4(R,V,A.shape.length,P,q,F.shape.length,a,i,H),e.disposeData(A.dataId),e.disposeData(F.dataId),W.shape=x,W}var y4={kernelName:uo,backendName:"wasm",setupFunc:Vde,kernelFunc:Hde};function oa(r){let{inputs:{x:t},attrs:{begin:e,size:n},backend:o}=r,[s,a]=xt.parseSliceParams(t,e,n),i=xt.isSliceContinous(t.shape,s,a),u=o.readSync(t.dataId),l=o.makeOutput(a,t.dtype),p=y.computeStrides(t.shape),m=o.dataIdMap.get(l.dataId);if(i){let f=xt.computeFlatOffset(s,p);return t.dtype==="string"?m.stringBytes=u.slice(f,f+y.sizeFromShape(a)):o.typedArrayFromHeap(l).set(u.subarray(f,f+y.sizeFromShape(a))),l}if(t.dtype==="string"){let f=Ol(u,s,a,t.shape,t.dtype);return m.stringBytes=f,l}let c=o.typedArrayFromHeap(l),d=t.shape.length;if(d===2)qde(u,p[0],c,s,a);else if(d===3)jde(u,p[0],p[1],c,s,a);else if(d===4)Xde(u,p[0],p[1],p[2],c,s,a);else{let f=Ol(u,s,a,t.shape,t.dtype);c.set(f)}return l}function qde(r,t,e,n,o){let s=0,a=n[0],i=n[1],u=a+o[0];for(let l=a;l<u;l++){let p=l*t+i;e.set(r.subarray(p,p+o[1]),s),s+=o[1]}}function jde(r,t,e,n,o,s){let a=0,i=o[0],u=o[1],l=o[2],p=i+s[0],m=u+s[1];for(let c=i;c<p;c++)for(let d=u;d<m;d++){let f=c*t+d*e+l;n.set(r.subarray(f,f+s[2]),a),a+=s[2]}}function Xde(r,t,e,n,o,s,a){let i=0,u=s[0],l=s[1],p=s[2],m=u+a[0],c=l+a[1],d=p+a[2],f=s[3];for(let h=u;h<m;h++)for(let g=l;g<c;g++)for(let b=p;b<d;b++){let T=h*t+g*e+b*n+f;o.set(r.subarray(T,T+a[3]),i),i+=a[3]}}var T4={kernelName:Is,backendName:"wasm",kernelFunc:oa};function Yde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n,i=s.reduce((b,T)=>b*T),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=hr({inputs:{x:o},backend:e,attrs:{shape:u}}),f=is({inputs:{x:d},backend:e,attrs:{perm:l}}),h=hr({inputs:{x:f},backend:e,attrs:{shape:p}}),g=oa({inputs:{x:h},backend:e,attrs:{begin:m,size:c}});return e.disposeData(d.dataId),e.disposeData(f.dataId),e.disposeData(d.dataId),g}var x4={kernelName:cs,backendName:"wasm",kernelFunc:Yde};function ai(r){let{inputs:{x:t},attrs:{dtype:e},backend:n}=r,o=n.makeOutput(t.shape,e),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(o).set(s),o}var I4={kernelName:Wn,backendName:"wasm",kernelFunc:ai};var C4=pt(po);var k4;function Zde(r){k4=r.wasm.cwrap(Kn,null,["number","number","number","number"])}function Qde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i=e.dataIdMap.get(o.dataId).id,u=e.makeOutput(o.shape,o.dtype),l=e.dataIdMap.get(u.dataId).id;return k4(i,s,a,l),u}var S4={kernelName:Kn,backendName:"wasm",setupFunc:Zde,kernelFunc:Qde};function r0(r){let{inputs:t,backend:e}=r,n=y.parseAxisParam(r.attrs.axis,t[0].shape)[0],o=t.map(d=>d.shape);C.assertParamsConsistent(o,n);let s=C.computeOutShape(t.map(d=>d.shape),n),a=t.filter(d=>y.sizeFromShape(d.shape)>0);if(a.length===1)return im({inputs:{x:a[0]},backend:e});let i=e.makeOutput(s,t[0].dtype);if(y.sizeFromShape(s)===0)return i;if(a[0].dtype==="string"){let d=a.map(x=>{let I=y.sizeFromShape(x.shape.slice(n));return hr({inputs:{x},backend:e,attrs:{shape:[-1,I]}})}),f=d.map(x=>({vals:e.readSync(x.dataId),shape:x.shape}));s=C.computeOutShape(d.map(x=>x.shape),1);let h=d[0].shape[0]===1,g=_l(f,s,t[0].dtype,h),b=C.computeOutShape(a.map(x=>x.shape),n);i.shape=b;let T=e.dataIdMap.get(i.dataId);return T.stringBytes=C.fromStringArrayToUint8(g),d.forEach(x=>e.disposeData(x.dataId)),i}let u=y.sizeFromShape(a[0].shape.slice(0,n)),l=0,p=a.map(d=>{let f=y.sizeFromShape(d.shape.slice(n));return l+=f,f}),m=a.map(d=>e.typedArrayFromHeap(d)),c=e.typedArrayFromHeap(i);for(let d=0;d<u;d++){let f=d*l;for(let h=0;h<m.length;h++){let g=p[h],b=d*g,T=m[h].subarray(b,b+g);c.set(T,f),f+=g}}return i}var v4={kernelName:ds,backendName:"wasm",kernelFunc:r0};var A4;function Jde(r){A4=r.wasm.cwrap(lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function efe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m,dataFormat:c}=e,d=C.convertConv2DDataFormat(c),f=C.computeConv2DInfo(o.shape,s.shape,u,l,p,m,!1,d),h=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,T=f.padInfo.right,x=f.padInfo.bottom,I=f.padInfo.left,k=f.dilationHeight,A=f.dilationWidth,F=f.strideHeight,R=f.strideWidth,P=f.inChannels,L=f.outChannels,O=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(f.outShape,"float32"),W=n.dataIdMap.get(G.dataId).id;return A4(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,b,T,x,I,O,k,A,F,R,P,L,W),G}var w4={kernelName:lo,backendName:"wasm",setupFunc:Jde,kernelFunc:efe};var N4;function tfe(r){N4=r.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function rfe(r){let{backend:t,inputs:e,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,inputShape:p}=n,m=1,c=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(p,s.shape,a,m,i,l,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:b,inHeight:T,inWidth:x,outChannels:I,outHeight:k,outWidth:A,strideHeight:F,strideWidth:R}=d,P=h-1-d.padInfo.top,L=g-1-d.padInfo.left,O=d.dataFormat==="channelsLast",G=y.computeStrides(d.inShape),W=y.computeStrides(o.shape),[H,V,q]=y.computeStrides(s.shape),Z=G[0],j=O?G[1]:G[2],X=O?G[2]:1,se=O?1:G[1],ae=W[0],pe=O?W[1]:W[2],oe=O?W[2]:1,ge=O?1:W[1],fe=t.makeOutput(d.inShape,"float32"),ue=t.dataIdMap.get(fe.dataId).id,ve=t.dataIdMap.get(o.dataId).id,De=t.dataIdMap.get(s.dataId).id;return N4(ve,De,f,h,g,T,x,b,k,A,I,F,R,P,L,H,V,q,Z,j,X,se,ae,pe,oe,ge,ue),fe}var D4={kernelName:mo,backendName:"wasm",setupFunc:tfe,kernelFunc:rfe};var F4=pt(co);var R4=pt(fo);var P4=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(P4||{}),M4;function nfe(r){M4=r.wasm.cwrap(ca,null,["number","number","number","number","array","number","number","number","number","number"])}function ofe(r){let{backend:t,inputs:e,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:u,boxInd:l}=e,p=u.shape[0],[m,c]=a,d=[p,m,c,i.shape[3]],f=t.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=ai({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(h.dataId));let g=f.id,b=t.dataIdMap.get(u.dataId).id,T=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(d,"float32"),I=t.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return M4(g,b,T,p,k,m,c,P4[o],s,I),h!=null&&t.disposeData(h.dataId),x}var E4={kernelName:ca,backendName:"wasm",setupFunc:nfe,kernelFunc:ofe};var L4;function sfe(r){L4=r.wasm.cwrap(ma,null,["number","number","number","number","number","number"])}function afe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([s],u),p=o;l!==null&&(p=is({inputs:{x:o},attrs:{perm:l},backend:e}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumprod",[m],u);let c=e.makeOutput(p.shape,p.dtype),d=p.shape[m],f=e.dataIdMap.get(p.dataId).id,h=e.dataIdMap.get(c.dataId).id;L4(f,a?1:0,i?1:0,d,h,Ze[o.dtype]);let g=c;if(l!==null){let b=C.getUndoAxesPermutation(l);g=is({inputs:{x:c},attrs:{perm:b},backend:e}),e.disposeData(p.dataId),e.disposeData(c.dataId)}return g}var _4={kernelName:ma,backendName:"wasm",setupFunc:sfe,kernelFunc:afe};var $4;function ife(r){$4=r.wasm.cwrap(ho,null,["number","number","number","number","number","number"])}function ufe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([s],u),p=o;l!==null&&(p=is({inputs:{x:o},attrs:{perm:l},backend:e}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumsum",[m],u);let c=e.makeOutput(p.shape,p.dtype),d=p.shape[m],f=e.dataIdMap.get(p.dataId).id,h=e.dataIdMap.get(c.dataId).id;$4(f,a?1:0,i?1:0,d,h,Ze[o.dtype]);let g=c;if(l!==null){let b=C.getUndoAxesPermutation(l);g=is({inputs:{x:c},attrs:{perm:b},backend:e}),e.disposeData(p.dataId),e.disposeData(c.dataId)}return g}var B4={kernelName:ho,backendName:"wasm",setupFunc:ife,kernelFunc:ufe};var O4;function pfe(r){O4=r.wasm.cwrap(da,null,["number","number","number","array","number","array","array","number","number"])}function lfe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=t.makeOutput(f,"float32"),b=t.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),I=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer),k=t.dataIdMap.get(h.dataId).id;return O4(b,s,a==="NHWC"?1:0,T,o.shape.length-1,x,I,f.length,k),h}var z4={kernelName:da,backendName:"wasm",setupFunc:pfe,kernelFunc:lfe};var G4;function mfe(r){G4=r.wasm.cwrap(go,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function cfe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m}=e,c=l??[1,1],d=C.computeConv2DInfo(o.shape,s.shape,u,c,p,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,b=d.padInfo.right,T=d.padInfo.bottom,x=d.padInfo.left,I=d.dilationHeight,k=d.dilationWidth,A=d.strideHeight,F=d.strideWidth,R=d.inChannels,P=d.outChannels,L=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let O=n.makeOutput(d.outShape,"float32"),G=n.dataIdMap.get(O.dataId).id;return G4(a,o.shape[0],o.shape[1],o.shape[2],i,f,h,g,b,T,x,L,I,k,A,F,R,P,G),O}var U4={kernelName:go,backendName:"wasm",setupFunc:mfe,kernelFunc:cfe};var W4=pt(yo);var dfe=!1,K4=ft(fa,dfe,"bool");var V4=pt(To,"float32");function dk(r){let{inputs:t,attrs:e,backend:n}=r,{input:o}=t,{dim:s}=e,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),hr({inputs:{x:o},backend:n,attrs:{shape:i}})}var H4={kernelName:fs,backendName:"wasm",kernelFunc:dk};function n0(r){let{attrs:{shape:t,value:e,dtype:n},backend:o}=r,s=o.makeOutput(t,n);return o.typedArrayFromHeap(s).fill(e),s}var q4={kernelName:ci,backendName:"wasm",kernelFunc:n0};var j4;function ffe(r){j4=r.wasm.cwrap(ga,null,["number","number","number","number","number","number"])}function hfe(r){let{inputs:t,backend:e}=r,{image:n}=t,o=e.makeOutput(n.shape,n.dtype),s=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,[i,u,l,p]=n.shape;return j4(s,i,u,l,p,a),o}var X4={kernelName:ga,backendName:"wasm",kernelFunc:hfe,setupFunc:ffe};var Y4=pt(xo);var gfe=!1,Z4=ft(Io,gfe);var Q4;function bfe(r){Q4=r.wasm.cwrap(Co,null,["number","number","number","number","number","number","number"])}function yfe(r){let{backend:t,inputs:e,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:u,scale:l}=e,p=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,d=u!=null?t.dataIdMap.get(u.dataId).id:0,f=l!=null?t.dataIdMap.get(l.dataId).id:0,h=t.makeOutput(s.shape,s.dtype);if(y.sizeFromShape(s.shape)===0)return h;let g=t.dataIdMap.get(h.dataId).id;return Q4(p,m,c,d,f,o,g),h}var J4={kernelName:Co,backendName:"wasm",setupFunc:bfe,kernelFunc:yfe};var eH;function Tfe(r){eH=r.wasm.cwrap(Ns,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function xfe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=e,h=C.computeConv2DInfo(o.shape,s.shape,u,p,l,c),g=am[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let oe=n.dataIdMap.get(a.dataId);if(oe.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${oe.shape.length}.`);if(oe.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${oe.shape}) does not match the number of output channels (${x})`);I=oe.id}let k=h.filterHeight,A=h.filterWidth,F=h.padInfo.top,R=h.padInfo.right,P=h.padInfo.bottom,L=h.padInfo.left,O=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,H=h.strideWidth,V=h.inChannels,q=h.padInfo.type==="SAME"?1:0,Z=h.batchSize,j=h.inHeight,X=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return eH(b,Z,j,X,T,k,A,I,F,R,P,L,q,O,G,W,H,V,x,g,pe,f||0,ae),se}var tH={kernelName:Ns,backendName:"wasm",setupFunc:Tfe,kernelFunc:xfe};var rH;function Ife(r){rH=r.wasm.cwrap(Ds,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Cfe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=e,h=C.computeConv2DInfo(o.shape,s.shape,u,p,l,c,!0),g=am[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let oe=n.dataIdMap.get(a.dataId);if(oe.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${oe.shape.length}.`);if(oe.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${oe.shape}) does not match the number of output channels (${x})`);I=oe.id}let k=h.filterHeight,A=h.filterWidth,F=h.padInfo.top,R=h.padInfo.right,P=h.padInfo.bottom,L=h.padInfo.left,O=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,H=h.strideWidth,V=h.inChannels,q=h.padInfo.type==="SAME"?1:0,Z=h.batchSize,j=h.inHeight,X=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return rH(b,Z,j,X,T,k,A,I,F,R,P,L,q,O,G,W,H,V,x,g,pe,f||0,ae),se}var nH={kernelName:Ds,backendName:"wasm",setupFunc:Ife,kernelFunc:Cfe};var oH;function kfe(r){oH=r.wasm.cwrap(ba,null,["number","number","number","number","number","number","array","number"])}function Sfe(r){let{backend:t,inputs:e}=r,{params:n,indices:o}=e,[s,a,i,u]=Rb.prepareAndValidate(n,o),l=t.makeOutput(s,n.dtype);if(a===0)return l;let p=o.shape,m=p[p.length-1],d=t.dataIdMap.get(n.dataId).id,h=t.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),b=t.dataIdMap.get(l.dataId).id;return oH(d,Ze[n.dtype],h,a,m,i,g,b),l}var sH={kernelName:ba,backendName:"wasm",setupFunc:kfe,kernelFunc:Sfe};var aH;function vfe(r){aH=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Afe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0],l=t.readSync(s.dataId),p=o.shape[u];for(let P=0;P<l.length;++P){let L=l[P];y.assert(L<=p-1&&L>=0,()=>`GatherV2: the index value ${L} is not in [0, ${p-1}]`)}let m=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),c=hr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:t}),d=y.sizeFromShape(s.shape),f=hr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:t}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=t.makeOutput(h,o.dtype);if(y.sizeFromShape(o.shape)===0)return g;let b=c.shape.length-1,x=t.dataIdMap.get(c.dataId).id,k=t.dataIdMap.get(f.dataId).id,A=t.dataIdMap.get(g.dataId).id,F=new Uint8Array(new Int32Array(y.computeStrides(c.shape)).buffer),R=new Uint8Array(new Int32Array(y.computeStrides(h)).buffer);return aH(x,Ze[o.dtype],F,b,k,m.batchSize,R,A),t.disposeData(c.dataId),t.disposeData(f.dataId),g.shape=m.outputShape,g}var iH={kernelName:hs,backendName:"wasm",setupFunc:vfe,kernelFunc:Afe};var wfe=!1,uH=ft(ya,wfe,"bool");var Nfe=!1,pH=ft(ko,Nfe,"bool");var lH;function Dfe(r){lH=r.wasm.cwrap(So,null,["number","number","number","number"])}function Ffe(r){let{inputs:{x:t},attrs:{alpha:e},backend:n}=r,o=n.dataIdMap.get(t.dataId).id,s=n.makeOutput(t.shape,"float32");if(y.sizeFromShape(t.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;lH(o,Ze[t.dtype],e,a)}return s}var mH={kernelName:So,backendName:"wasm",setupFunc:Dfe,kernelFunc:Ffe};var Rfe=!1,cH=ft(xa,Rfe,"bool");var Pfe=!1,dH=ft(Ia,Pfe,"bool");var fH=pt(vo);var Mfe=!1,hH=ft(Ca,Mfe,"bool");var gH=pt(ka);var Efe=!1,bH=ft(Vi,Efe,"bool");var Lfe=!1,yH=ft(Q0,Lfe,"bool");var TH;function _fe(r){TH=r.wasm.cwrap(Ao,null,["number","number","number","number"])}function $fe(r){let{backend:t,inputs:e,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=e,u=t.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t);if(d){let x=t.dataIdMap.get(p.dataId).id;l=p,u=x}let f=l.shape.length;C.assertAxesAreInnerMostDims("max",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,a.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;TH(u,Ze[a.dtype],b,x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var xH={kernelName:Ao,backendName:"wasm",setupFunc:_fe,kernelFunc:$fe};var Bfe=!1,IH=ft(wo,Bfe);var CH;function Ofe(r){CH=r.wasm.cwrap(No,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zfe(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id;y.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=e,p=C.computePool2DInfo(o.shape,a,i,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,b=p.dilationHeight,T=p.dilationWidth,x=p.strideHeight,I=p.strideWidth,k=p.inChannels,A=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let F=n.makeOutput(p.outShape,"float32"),R=n.dataIdMap.get(F.dataId).id;return CH(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,T,x,I,k,A,R),F}var kH={kernelName:No,backendName:"wasm",setupFunc:Ofe,kernelFunc:zfe};var SH;function Gfe(r){SH=r.wasm.cwrap(Do,null,["number, number, number"])}function Ufe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t),f=m;if(d){let I=t.dataIdMap.get(p.dataId).id;I!==i&&(l=p,u=I,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("mean",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),b=y.sizeFromShape(g),T=l;l.dtype!=="float32"&&(T=ai({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(T.dataId).id);let x=t.makeOutput(h,"float32");if(y.sizeFromShape(l.shape)!==0){let I=t.dataIdMap.get(x.dataId).id;SH(u,b,I)}if(d&&t.disposeData(p.dataId),s){let I=C.expandShapeToKeepDim(x.shape,c);x.shape=I}return l.dtype!=="float32"&&t.disposeData(T.dataId),x}var vH={kernelName:Do,backendName:"wasm",setupFunc:Gfe,kernelFunc:Ufe};var AH;function Wfe(r){AH=r.wasm.cwrap(Fo,null,["number","number","number","number"])}function Kfe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t);if(d){let x=t.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x)}let f=l.shape.length;C.assertAxesAreInnerMostDims("min",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;AH(u,Ze[a.dtype],b,x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var wH={kernelName:Fo,backendName:"wasm",setupFunc:Wfe,kernelFunc:Kfe};var Vfe=!1,NH=ft(Ro,Vfe);var DH=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(DH||{}),FH;function Hfe(r){FH=r.wasm.cwrap(Po,null,["number","array","number","number","array","array","number","number"])}function qfe(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+t.shape[h]+f[1]),a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(s,t.dtype),u=e.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),p=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(p).buffer),d=new Uint8Array(new Int32Array(m).buffer);return FH(a,l,t.shape.length,Ze[t.dtype],c,d,DH[o],u),i}var RH={kernelName:Po,backendName:"wasm",kernelFunc:qfe,setupFunc:Hfe};var jfe=!0,PH=ft(Mo,jfe);var MH=pt(gs);function zf(r,t){let e=new Int32Array(r.wasm.HEAPU8.buffer,t,4),n=e[0],o=e[1],s=e[2],a=e[3];return r.wasm._free(t),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var EH;function Xfe(r){EH=r.wasm.cwrap(va,"number",["number","number","number","number","number"])}function Yfe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:u}=e,l=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(u.dataId).id,m=EH(l,p,s,o,a),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=zf(t,m);return t.wasm._free(f),t.wasm._free(h),t.makeOutput([d],"int32",c)}var LH={kernelName:va,backendName:"wasm",setupFunc:Xfe,kernelFunc:Yfe};var _H;function Zfe(r){_H=r.wasm.cwrap(qi,"number",["number","number","number","number","number","bool"])}function Qfe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:u,scores:l}=e,p=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(l.dataId).id,c=_H(p,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=zf(t,c);t.wasm._free(h);let b=t.makeOutput([f],"int32",d),T=t.makeOutput([],"int32",g);return[b,T]}var $H={kernelName:qi,backendName:"wasm",setupFunc:Zfe,kernelFunc:Qfe};var BH;function Jfe(r){BH=r.wasm.cwrap(Aa,"number",["number","number","number","number","number","number"])}function ehe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:u,scores:l}=e,p=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(l.dataId).id,c=BH(p,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=zf(t,c);t.wasm._free(g);let b=t.makeOutput([f],"int32",d),T=t.makeOutput([f],"float32",h);return[b,T]}var OH={kernelName:Aa,backendName:"wasm",setupFunc:Jfe,kernelFunc:ehe};var the=!1,zH=ft(Sa,the,"bool");var GH;function rhe(r){GH=r.wasm.cwrap(wa,null,["number","number","number","number","number"])}function nhe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:u}=n,l=e.makeOutput([...o.shape,a],s),p=e.dataIdMap.get(l.dataId).id,c=e.dataIdMap.get(o.dataId).id;return GH(c,a,i,u,p),l}var UH={kernelName:wa,backendName:"wasm",setupFunc:rhe,kernelFunc:nhe};function ohe(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(1),n}var WH={kernelName:bs,backendName:"wasm",kernelFunc:ohe};function she(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return dk({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(p=>{let m=dk({inputs:{input:p},backend:e,attrs:{dim:o}});return i.push(m),m}),l=r0({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(p=>e.disposeData(p.dataId)),l}var KH={kernelName:ys,backendName:"wasm",kernelFunc:she};var VH;function ahe(r){VH=r.wasm.cwrap(Eo,null,["number","array","number","number","array","array","number","number"])}function ihe(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+t.shape[g]+h[1]);if(y.sizeFromShape(t.shape)===0)return n0({backend:e,attrs:{shape:s,value:o,dtype:t.dtype}});let a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(s,t.dtype),l=e.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return VH(a,p,t.shape.length,Ze[t.dtype],d,f,o,l),i}var fk={kernelName:Eo,backendName:"wasm",kernelFunc:ihe,setupFunc:ahe};var uhe=!1,HH=ft(Lo,uhe);var qH;function phe(r){qH=r.wasm.cwrap(_o,null,["number","number","number"])}function lhe(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,i=s,u=n,l=u;u.dtype!=="float32"&&(l=ai({backend:e,inputs:{x:n},attrs:{dtype:"float32"}}),i=e.dataIdMap.get(l.dataId).id);let p=e.makeOutput(n.shape,"float32"),m=e.dataIdMap.get(p.dataId).id;return qH(i,a,m),u.dtype!=="float32"&&e.disposeData(l.dataId),p}var jH={kernelName:_o,backendName:"wasm",setupFunc:phe,kernelFunc:lhe};var XH;function mhe(r){XH=r.wasm.cwrap($o,null,["number","number","number","number"])}function che(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t),f=m;if(d){let x=t.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("prod",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),b=y.sizeFromShape(g),T=t.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;XH(u,b,Ze[T.dtype],x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var YH={kernelName:$o,backendName:"wasm",setupFunc:mhe,kernelFunc:che};var dhe=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=Bl(n,o,s,a),u=t.makeOutput([i.length],a);return t.typedArrayFromHeap(u).set(i),u},ZH={kernelName:di,backendName:"wasm",kernelFunc:dhe};var fhe=!0,QH=ft(bo,fhe);var JH=pt(Bo);var eq=pt(Go);var tq;function hhe(r){tq=r.wasm.cwrap(zo,null,["number","number","number","number","number","number","number","number","number","number"])}function ghe(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,m,c,d]=o.shape,f=[p,u,l,d],h=t.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=ai({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),h=t.dataIdMap.get(g.dataId));let b=h.id,T=t.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return T;let x=t.dataIdMap.get(T.dataId).id;return tq(b,p,m,c,d,u,l,s?1:0,a?1:0,x),g!=null&&t.disposeData(g.dataId),T}var rq={kernelName:zo,backendName:"wasm",setupFunc:hhe,kernelFunc:ghe};var nq;function bhe(r){nq=r.wasm.cwrap(Oo,null,["number","number","number","number","number","number","number","number","number","number"])}function yhe(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,m,c,d]=o.shape,f=[p,u,l,d],h=t.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return h;let g=t.dataIdMap.get(o.dataId),b;g.dtype!=="float32"&&(b=ai({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(b.dataId));let T=g.id,x=t.dataIdMap.get(h.dataId).id;return nq(T,p,m,c,d,u,l,s?1:0,a?1:0,x),b!=null&&t.disposeData(b.dataId),h}var oq={kernelName:Oo,backendName:"wasm",setupFunc:bhe,kernelFunc:yhe};var sq;function The(r){sq=r.wasm.cwrap(Da,null,["number","array","number","array","number","number"])}function xhe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,a=y.parseAxisParam(s,o.shape);if(o.shape.length===0)return im({inputs:{x:o},backend:e});let i=e.makeOutput(o.shape,o.dtype),u=e.dataIdMap.get(o.dataId).id,l=e.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);sq(u,p,a.length,m,o.shape.length,l);let c=hr({inputs:{x:i},attrs:{shape:o.shape},backend:e});return e.disposeData(i.dataId),c}var aq={kernelName:Da,backendName:"wasm",kernelFunc:xhe,setupFunc:The};var iq;function Ihe(r){iq=r.wasm.cwrap($a,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Che(r){let{inputs:t,backend:e,attrs:n}=r,{image:o}=t,{radians:s,fillValue:a,center:i}=n,u=e.makeOutput(o.shape,o.dtype),l=e.dataIdMap.get(o.dataId).id,p=e.dataIdMap.get(u.dataId).id,[m,c,d,f]=o.shape,[h,g]=C.getImageCenter(i,c,d),b=a===0,T=255,x=typeof a=="number"?[a,a,a,b?0:T]:[...a,T],I=new Uint8Array(new Int32Array(x).buffer);return iq(l,m,c,d,f,s,h,g,I,x.length,p),u}var uq={kernelName:$a,backendName:"wasm",kernelFunc:Che,setupFunc:Ihe};var pq=pt(Fa);var lq=pt(Uo);var mq;function khe(r){mq=r.wasm.cwrap(Ra,null,["number","number","number","number","number","number","array","number","number"])}function She(r){let{backend:t,inputs:e,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,i=t.makeOutput(a,s.dtype);if(y.sizeFromShape(a)===0)return i;let{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=ch.calculateShapes(s,o,a),f=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(s.dataId).id,b=new Uint8Array(new Int32Array(m).buffer),T=t.dataIdMap.get(i.dataId).id;return mq(f,g,Ze[s.dtype],u,l,p,b,c,T),i}var cq={kernelName:Ra,backendName:"wasm",setupFunc:khe,kernelFunc:She};var dq;function vhe(r){dq=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Ahe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(s.dataId).id,l=e.makeOutput(o.shape,o.dtype),p=e.dataIdMap.get(l.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:y.sizeFromShape(o.shape.slice(1));return dq(a,i,u,d,p),l}var fq={kernelName:xs,backendName:"wasm",kernelFunc:Ahe,setupFunc:vhe};var hq;function whe(r){hq=r.wasm.cwrap(Ko,null,["number","number"])}function Nhe(r){let{backend:t,inputs:{x:e}}=r,n=t.dataIdMap.get(e.dataId).id,o=t.makeOutput(e.shape,e.dtype),s=t.dataIdMap.get(o.dataId).id;return y.sizeFromShape(o.shape)===0||hq(n,s),o}var gq={kernelName:"Sigmoid",backendName:"wasm",setupFunc:whe,kernelFunc:Nhe};var bq=pt(Wo);var yq;function Dhe(r){yq=r.wasm.cwrap(qo,null,["number","number","number","number"])}function Fhe(r){let{backend:t,inputs:{logits:e},attrs:{dim:n}}=r,o=t.dataIdMap.get(e.dataId).id,s=t.makeOutput(e.shape,e.dtype),a=t.dataIdMap.get(s.dataId).id,i=e.shape[n],u=y.sizeFromShape(e.shape)/i;return y.sizeFromShape(s.shape)===0||yq(o,a,i,u),s}var Tq={kernelName:qo,backendName:"wasm",setupFunc:Dhe,kernelFunc:Fhe};function Rhe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n,i=y.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let A=1+s.length;A<o.shape.length;++A)u.push([0,0]);let l=fk.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(l.shape,s,i,!1),m=C.getPermuted(p.length,s.length,!1),c=C.getReshapedPermuted(l.shape,s,i,!1),h=hr({inputs:{x:l},backend:e,attrs:{shape:p}}),T=is({inputs:{x:h},backend:e,attrs:{perm:m}}),k=hr({inputs:{x:T},backend:e,attrs:{shape:c}});return e.disposeData(l.dataId),e.disposeData(h.dataId),e.disposeData(T.dataId),k}var xq={kernelName:Cs,backendName:"wasm",kernelFunc:Rhe};var Iq;function Phe(r){Iq=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Mhe(r){let{backend:t,inputs:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e,i=n.shape[0],u=n.shape[1],l=t.readSync(s.dataId)[0],p=[i+l,u],m=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(a.dataId).id,f=t.makeOutput(p,n.dtype),h=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(p.slice(0,1),o.dtype),b=t.dataIdMap.get(g.dataId).id,T=t.makeOutput([l],"bool"),x=t.dataIdMap.get(T.dataId).id,I=t.makeOutput([i],n.dtype),k=t.dataIdMap.get(I.dataId).id,A=t.makeOutput([4],"int32"),F=t.dataIdMap.get(A.dataId).id,R=Iq(m,c,Ze[o.dtype],i,l,u,d,h,b,x,k,F),P=t.readSync(A.dataId),L;switch(P[0]){case 1:{L=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(P[1]);break}case 2:{L=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(P[1],P[2]);break}case 3:L=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(P[1],P[2],P[3]);break;default:L=""}if(t.disposeData(A.dataId),L)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(T.dataId),t.disposeData(I.dataId),new Error(L);let O=f,G=g;return R!==p[0]&&(O=oa({inputs:{x:f},attrs:{begin:0,size:[R,u]},backend:t}),G=oa({inputs:{x:g},attrs:{begin:0,size:R},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[O,G,T,I]}var Cq={kernelName:Gu,backendName:"wasm",setupFunc:Phe,kernelFunc:Mhe};var kq;function Ehe(r){kq=r.wasm.cwrap(Zi,null,["number","number","number","number","number","number","number"])}function Lhe(r){let{backend:t,inputs:e}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=n.shape[0],p=y.sizeFromShape(s.shape),m=t.makeOutput([l,p],n.dtype),c=t.dataIdMap.get(m.dataId).id,d=t.makeOutput([p],s.dtype),f=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([3],"int32"),g=t.dataIdMap.get(h.dataId).id;kq(a,i,u,l,c,f,g);let b=t.readSync(h.dataId),T;switch(b[0]){case 0:{T=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{T=C.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:T=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(o.dataId)),I=Array.from(t.readSync(d.dataId));T=C.getSparseReshapeInputOutputMultipleErrorMessage(x,I);break}case 4:{let x=Array.from(t.readSync(o.dataId)),I=Array.from(t.readSync(d.dataId));T=C.getSparseReshapeInputOutputMismatchErrorMessage(x,I);break}default:T=""}if(t.disposeData(h.dataId),T)throw t.disposeData(m.dataId),t.disposeData(d.dataId),new Error(T);return[m,d]}var Sq={kernelName:Zi,backendName:"wasm",setupFunc:Ehe,kernelFunc:Lhe};var vq;function hk(r){vq=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function gk(r,t){let{backend:e,inputs:n}=r,{data:o,indices:s,segmentIds:a}=n,i=s.shape[0],u=e.readSync(a.dataId,i-1,i)[0],p=i>0?u+1:0;if(p<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=p;let c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(s.dataId).id,f=e.dataIdMap.get(a.dataId).id,h=e.makeOutput(m,o.dtype),g=e.dataIdMap.get(h.dataId).id,b=e.makeOutput([4],"int32"),T=e.dataIdMap.get(b.dataId).id;vq(c,Ze[o.dtype],o.shape[0],d,f,g,T,t,0);let x=e.readSync(b.dataId),I;switch(x[0]){case 0:{I=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{I=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:I=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:I=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:I=""}if(e.disposeData(b.dataId),I)throw e.disposeData(h.dataId),new Error(I);return h}function _he(r){return gk(r,!0)}var Aq={kernelName:Uu,backendName:"wasm",setupFunc:hk,kernelFunc:_he};function $he(r){return gk(r,!1)}var wq={kernelName:Wu,backendName:"wasm",setupFunc:hk,kernelFunc:$he};function Bhe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=e,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[i]=m;let d=oa({inputs:{x:o},attrs:{begin:l,size:c},backend:n});return l[i]+=m,d})}var Nq={kernelName:ks,backendName:"wasm",kernelFunc:Bhe};var Dq=pt(Vo);var Fq=pt(fi);var Ohe=!0,Rq=ft(jo,Ohe);var Pq;function zhe(r){Pq=r.wasm.cwrap(As,null,["number","number","number","number"])}function Ghe(r){let{backend:t,inputs:e,attrs:n}=r,{alpha:o}=n,{x:s}=e,a=t.dataIdMap.get(s.dataId).id,i=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(i.dataId).id;return Pq(a,o,Ze[s.dtype],u),i}var Mq={kernelName:As,backendName:"wasm",setupFunc:zhe,kernelFunc:Ghe};var Eq;function Uhe(r){Eq=r.wasm.cwrap(Ma,null,["number","array","number","array","array","array","array","array","number","number"])}function Whe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=hr({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=xt.computeOutShape(T,x,I),F=oa({inputs:{x:o},backend:t,attrs:{begin:T,size:A}});k=hr({inputs:{x:F},backend:t,attrs:{shape:f}}),t.disposeData(F.dataId)}else{let A=t.makeOutput(d,"float32"),F=t.dataIdMap.get(o.dataId).id,R=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),P=new Uint8Array(new Int32Array(T).buffer),L=new Uint8Array(new Int32Array(x).buffer),O=new Uint8Array(new Int32Array(I).buffer),G=new Uint8Array(new Int32Array(d).buffer),W=new Uint8Array(new Int32Array(y.computeStrides(d)).buffer),H=t.dataIdMap.get(A.dataId).id;Eq(F,R,o.shape.length,P,L,O,G,W,d.length,H),k=hr({inputs:{x:A},backend:t,attrs:{shape:f}}),t.disposeData(A.dataId)}return k}var Lq={kernelName:Ma,backendName:"wasm",setupFunc:Uhe,kernelFunc:Whe};function Khe(r){let{backend:t,inputs:e,attrs:n}=r,{data:o,dataSplits:s}=e,{separator:a,nGramWidths:i,leftPad:u,rightPad:l,padWidth:p,preserveShortSequences:m}=n,c=t.readSync(o.dataId),d=t.readSync(s.dataId),[f,h]=zl(c,d,a,i,u,l,p,m),g=t.makeOutput([f.length],"string"),b=t.dataIdMap.get(g.dataId);b.stringBytes=f;let T=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(T).set(h),[g,T]}var _q={kernelName:hi,backendName:"wasm",kernelFunc:Khe};function Vhe(r){let{backend:t,inputs:e,attrs:n}=r,{input:o,delimiter:s}=e,{skipEmpty:a}=n,i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p,m]=Gl(i,u[0],a),c=p.length,d=t.makeOutput([c,2],"int32");t.typedArrayFromHeap(d).set(l);let h=t.makeOutput([c],"string"),g=t.dataIdMap.get(h.dataId);g.stringBytes=p;let b=t.makeOutput([2],"int32");return t.typedArrayFromHeap(b).set(m),[d,h,b]}var $q={kernelName:Vu,backendName:"wasm",kernelFunc:Vhe};function Hhe(r){let{backend:t,inputs:e,attrs:n}=r,{input:o}=e,{numBuckets:s}=n,a=t.readSync(o.dataId),i=Ul(a,s),u=t.makeOutput(o.shape,"int32");return t.typedArrayFromHeap(u).set(i),u}var Bq={kernelName:Hu,backendName:"wasm",kernelFunc:Hhe};var qhe=!0,Oq=ft(Xo,qhe);var zq;function jhe(r){zq=r.wasm.cwrap(Ho,null,["number","number","number","number"])}function Xhe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t),f=m;if(d){let x=t.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("sum",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),b=y.sizeFromShape(g),T=t.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;zq(u,b,Ze[T.dtype],x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var Gq={kernelName:Ho,backendName:"wasm",setupFunc:jhe,kernelFunc:Xhe};var Uq=pt(Ea);var Wq=pt(Yo);var Kq;function Yhe(r){Kq=r.wasm.cwrap(Dn,null,["number","array","number","array","number","number"])}function Zhe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,s=e.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let c=0;c<i.length;c++)i[c]=o.shape[c]*a[c];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(i).buffer),p=e.makeOutput(i,o.dtype),m=e.dataIdMap.get(p.dataId).id;return Kq(s,u,o.shape.length,l,i.length,Ze[p.dtype],m),p}var Vq={kernelName:Dn,backendName:"wasm",setupFunc:Yhe,kernelFunc:Zhe};var Hq;function Qhe(r){Hq=r.wasm.cwrap(La,null,["number","array","number","number","number","bool","number","number"])}var Jhe=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{k:o,sorted:s}=e,a=t.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=t.makeOutput(u,n.dtype),p=t.dataIdMap.get(l.dataId).id,m=t.makeOutput(u,"int32"),c=t.dataIdMap.get(m.dataId).id;return Hq(a,i,n.shape.length,Ze[n.dtype],o,s,p,c),[l,m]},qq={kernelName:La,backendName:"wasm",setupFunc:Qhe,kernelFunc:Jhe};var jq;function ege(r){jq=r.wasm.cwrap(_a,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function tge(r){let{backend:t,inputs:e,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),T=new Uint8Array(new Int32Array(y.computeStrides(g)).buffer),x=t.makeOutput(g,o.dtype),I=t.dataIdMap.get(x.dataId).id,A=t.dataIdMap.get(o.dataId).id,R=t.dataIdMap.get(s.dataId).id,P=a==="nearest"?1:2,L;switch(i){case"constant":L=1;break;case"reflect":L=2;break;case"wrap":L=3;break;case"nearest":L=4;break;default:L=1;break}return jq(A,R,s.shape[0]>1,p,f,h,d,c,m,b,o.shape.length-1,T,g.length-1,P,L,u,I),x}var Xq={kernelName:_a,backendName:"wasm",setupFunc:ege,kernelFunc:tge};function rge(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,u=new Array(i-1),l=0;for(let d=0;d<i;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(a),m=new Array(i).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<p.length;d++)m[s]=d,p[d]=oa({inputs:{x:o},attrs:{begin:m,size:c},backend:e});return p.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:u}))}var Yq={kernelName:Ss,backendName:"wasm",kernelFunc:rge};function nge(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(0),n}var Zq={kernelName:vs,backendName:"wasm",kernelFunc:nge};var oge=[e4,t4,r4,o4,p4,m4,d4,h4,y4,x4,I4,C4,S4,v4,w4,D4,F4,R4,E4,_4,B4,z4,U4,W4,K4,V4,H4,q4,X4,Y4,Z4,J4,tH,nH,sH,iH,uH,pH,s4,mH,cH,dH,fH,hH,gH,bH,yH,xH,IH,kH,vH,wH,NH,RH,PH,MH,LH,$H,OH,zH,UH,WH,KH,fk,HH,jH,YH,ZH,QH,JH,eq,g4,rq,oq,aq,uq,pq,lq,cq,fq,gq,bq,T4,Tq,xq,Cq,Sq,Aq,wq,Nq,Dq,Fq,Rq,Mq,Lq,_q,$q,Bq,Oq,Gq,Uq,Wq,Vq,qq,Xq,i4,Yq,Zq];for(let r of oge)Qi(r);var o0=$();o0.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});o0.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(o0.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var g0=hm(ej());var Qt={},rj=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";rj&&(u0=s0(),p0=u0.parentPort,p0.on("message",r=>onmessage({data:r})),c0=jh(),Object.assign(global,{self:global,require:K0,Module:Qt,location:{href:__filename},Worker:u0.Worker,importScripts:function(r){(0,eval)(c0.readFileSync(r,"utf8"))},postMessage:function(r){p0.postMessage(r)},performance:global.performance||{now:function(){return Date.now()}}}));var u0,p0,c0,l0=!1,m0=[];function sge(){var r=Array.prototype.slice.call(arguments).join(" ");if(rj){c0.writeSync(2,r+`
`);return}console.error(r)}function age(){var r=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:r,threadId:Qt._pthread_self()})}var tj=sge;self.alert=age;Qt.instantiateWasm=(r,t)=>{var e=new WebAssembly.Instance(Qt.wasmModule,r);return t(e),Qt.wasmModule=null,e.exports};self.onunhandledrejection=r=>{throw r.reason??r};self.onmessage=r=>{try{if(r.data.cmd==="load"){if(Qt.wasmModule=r.data.wasmModule,Qt.wasmMemory=r.data.wasmMemory,Qt.buffer=Qt.wasmMemory.buffer,Qt.ENVIRONMENT_IS_PTHREAD=!0,typeof r.data.urlOrBlob=="string")importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}WasmBackendModuleThreadedSimd(Qt).then(function(e){Qt=e})}else if(r.data.cmd==="run"){Qt.__performance_now_clock_drift=performance.now()-r.data.time,Qt.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),Qt.establishStackSpace(),Qt.PThread.receiveObjectTransfer(r.data),Qt.PThread.threadInitTLS(),l0||(m0.forEach(e=>{Qt.executeNotifiedProxyingQueue(e)}),m0=[],l0=!0);try{Qt.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if(e!="unwind")if(e instanceof Qt.ExitStatus)Qt.keepRuntimeAlive()||Qt.__emscripten_thread_exit(e.status);else throw e}}else r.data.cmd==="cancel"?Qt._pthread_self()&&Qt.__emscripten_thread_exit(-1):r.data.target==="setimmediate"||(r.data.cmd==="processProxyingQueue"?l0?Qt.executeNotifiedProxyingQueue(r.data.queue):m0.push(r.data.queue):(tj("worker.js received unknown command "+r.data.cmd),tj(r.data)))}catch(e){throw Qt.__emscripten_thread_crashed&&Qt.__emscripten_thread_crashed(),e}};var b0=hm(nj());var oj=g0.default||g0,ige=b0.default||b0,Dg=class extends no{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(uj),h0=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new ia(this,Mn())}write(e,n,o){let s={id:this.dataIdNextNumber++};return this.move(s,e,n,o,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let n=y.now();return e(),{kernelMs:y.now()-n}}move(e,n,o,s,a){let i=this.dataIdNextNumber++;if(s==="string"){let m=n;this.dataIdMap.set(e,{id:i,stringBytes:m,shape:o,dtype:s,memoryOffset:null,refCount:a});return}let u=y.sizeFromShape(o),l=u*y.bytesPerElement(s),p=this.wasm._malloc(l);this.dataIdMap.set(e,{id:i,memoryOffset:p,shape:o,dtype:s,refCount:a}),this.wasm.tfjs.registerTensor(i,u,p),n!=null&&this.wasm.HEAPU8.set(new Uint8Array(n.buffer,n.byteOffset,l),p)}async read(e){return this.readSync(e)}readSync(e,n,o){let{memoryOffset:s,dtype:a,shape:i,stringBytes:u}=this.dataIdMap.get(e);if(a==="string")return(n==null||n===0)&&(o==null||o>=u.length)?u:u.slice(n,o);n=n||0,o=o||y.sizeFromShape(i);let l=y.bytesPerElement(a),p=this.wasm.HEAPU8.slice(s+n*l,s+o*l);return pge(p.buffer,a)}disposeData(e,n=!1){if(this.dataIdMap.has(e)){let o=this.dataIdMap.get(e);if(o.refCount--,!n&&o.refCount>0)return!1;this.wasm._free(o.memoryOffset),this.wasm.tfjs.disposeData(o.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let n=this.dataIdMap.get(e);n!=null&&n.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,n,o){let s;if(o==null)s=this.write(null,e,n);else{let a=this.dataIdNextNumber++;s={id:a},this.dataIdMap.set(s,{id:a,memoryOffset:o,shape:e,dtype:n,refCount:1});let i=y.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,i,o)}return{dataId:s,shape:e,dtype:n}}typedArrayFromHeap({shape:e,dtype:n,dataId:o}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(o),i=y.sizeFromShape(e);switch(n){case"float32":return new Float32Array(s,a,i);case"int32":return new Int32Array(s,a,i);case"bool":return new Uint8Array(s,a,i);default:throw new Error(`Unknown dtype ${n}`)}}};function uge(r){return(t,e)=>(y.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||t.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,t).then(s=>{e(s.instance,s.module)})})}),{})}function sj(r,t,e){if(Tk!=null)return Tk;let n="tfjs-backend-wasm.wasm";return r&&t?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),wg!=null&&wg[n]!=null?wg[n]:e+n}async function ij(){let[r,t]=await Promise.all([$().getAsync("WASM_HAS_SIMD_SUPPORT"),$().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((e,n)=>{let o={};o.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){let l=(void 0).replace(/\n/g,"\\n"),p=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(p)}return i.endsWith(".wasm")?sj(r,t,Ag??u):u+i},y0&&(o.instantiateWasm=uge(sj(r,t,Ag??"")));let s=!1;o.onAbort=()=>{if(s||Ng)return;Ng=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;t&&r&&Tk==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+oj.toString()],{type:"text/javascript"}),a=oj(o)):a=ige(o),a.then(i=>{s=!0,Ng=!1;let u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},e({wasm:i})}).catch(n)})}function pge(r,t){switch(t){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${t}`)}}var lge=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Tk=null,Ag=null,wg={},Ng=!1,y0=!1;function mge(r,t=!1){if(Gv("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Ng)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Tk=r,y0=t}function cge(r,t=!1){if(Ng)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")Ag=r;else{wg=r;let e=lge.filter(n=>wg[n]==null);if(e.length>0)throw new Error(`There were no entries found for the following binaries: ${e.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}y0=t}var uj=-1,h0=-1;function dge(r){uj=r}function fge(){if(h0===-1)throw new Error("WASM backend not initialized.");return h0}var hge="0.0.0";var gge=2;Ju("wasm",async()=>{let{wasm:r}=await ij();return new Dg(r)},gge);var Lp="3.20.0-20220919",DJr={tfjs:Lp,"tfjs-core":Lp,"tfjs-data":Lp,"tfjs-layers":Lp,"tfjs-converter":Lp,"tfjs-backend-cpu":Lp,"tfjs-backend-webgl":Lp,"tfjs-backend-wasm":Lp};export{ms as Abs,Mi as Acos,Ei as Acosh,dp as AdadeltaOptimizer,fp as AdagradOptimizer,hp as AdamOptimizer,gp as AdamaxOptimizer,Nn as Add,so as AddN,Li as All,_i as Any,ao as ArgMax,mi as ArgMin,$i as Asin,Bi as Asinh,Oi as Atan,la as Atan2,zi as Atanh,io as AvgPool,Ru as AvgPool3D,Im as AvgPool3DGrad,xm as AvgPoolGrad,Dg as BackendWasm,uo as BatchMatMul,cs as BatchToSpaceND,Cm as Bincount,km as BroadcastArgs,Z0 as BroadcastTo,$T as Callback,Xy as CallbackList,Wn as Cast,po as Ceil,Kn as ClipByValue,Pu as Complex,Mu as ComplexAbs,ds as Concat,lo as Conv2D,Sm as Conv2DBackpropFilter,mo as Conv2DBackpropInput,Eu as Conv3D,vm as Conv3DBackpropFilterV2,Am as Conv3DBackpropInputV2,co as Cos,fo as Cosh,ca as CropAndResize,ma as Cumprod,ho as Cumsum,Zy as CustomCallback,ia as DataStorage,wm as DenseBincount,da as DepthToSpace,go as DepthwiseConv2dNative,Nm as DepthwiseConv2dNativeBackpropFilter,Dm as DepthwiseConv2dNativeBackpropInput,Fm as Diag,Lu as Dilation2D,Jf as Dilation2DBackpropFilter,Qf as Dilation2DBackpropInput,pv as ENV,BT as EarlyStopping,_u as Einsum,yo as Elu,Rm as EluGrad,Yf as Environment,fa as Equal,Gi as Erf,To as Exp,fs as ExpandDims,ha as Expm1,Pm as FFT,ci as Fill,ga as FlipLeftRight,xo as Floor,Io as FloorDiv,Kp as FromPixels,Co as FusedBatchNorm,Ns as FusedConv2D,Ds as FusedDepthwiseConv2D,jl as GPGPUContext,ba as GatherNd,hs as GatherV2,Wh as GraphModel,ya as Greater,ko as GreaterEqual,Yy as History,Mm as IFFT,Vn as Identity,$u as Imag,At as InputSpec,Ui as IsFinite,Wi as IsInf,Ta as IsNan,no as KernelBackend,Bu as LRN,Lm as LRNGrad,wh as LayerVariable,Yn as LayersModel,So as LeakyRelu,xa as Less,Ia as LessEqual,Em as LinSpace,vo as Log,Ki as Log1p,J0 as LogSoftmax,Ca as LogicalAnd,ka as LogicalNot,Vi as LogicalOr,Q0 as LogicalXor,Cge as LowerBound,Jd as MathBackendCPU,If as MathBackendWebGL,Ao as Max,No as MaxPool,Ou as MaxPool3D,$m as MaxPool3DGrad,_m as MaxPoolGrad,Bm as MaxPoolWithArgmax,wo as Maximum,Do as Mean,Fo as Min,Ro as Minimum,Po as MirrorPad,Hi as Mod,bp as MomentumOptimizer,Om as Multinomial,Mo as Multiply,gs as Neg,va as NonMaxSuppressionV3,qi as NonMaxSuppressionV4,Aa as NonMaxSuppressionV5,Sa as NotEqual,Av as OP_SCOPE_SUFFIX,wa as OneHot,bs as OnesLike,Vr as Optimizer,Wa as OptimizerConstructors,ys as Pack,Eo as PadV2,kge as Pool,Lo as Pow,_o as Prelu,$o as Prod,yp as RMSPropOptimizer,ns as RNN,zm as RaggedGather,Gm as RaggedTensorToTensor,di as Range,k1 as Rank,zu as Real,bo as RealDiv,Na as Reciprocal,Ua as Reduction,Bo as Relu,Go as Relu6,Ts as Reshape,zo as ResizeBilinear,Wm as ResizeBilinearGrad,Oo as ResizeNearestNeighbor,Um as ResizeNearestNeighborGrad,Da as Reverse,$a as RotateWithOffset,Fa as Round,Uo as Rsqrt,ki as SGDOptimizer,Ra as ScatterNd,Km as SearchSorted,xs as Select,ji as Selu,vl as Sequential,Ko as Sigmoid,Xi as Sign,Wo as Sin,Pa as Sinh,Is as Slice,qo as Softmax,Yi as Softplus,Cs as SpaceToBatchND,Gu as SparseFillEmptyRows,Zi as SparseReshape,Uu as SparseSegmentMean,Wu as SparseSegmentSum,Ku as SparseToDense,ks as SplitV,Vo as Sqrt,fi as Square,jo as SquaredDifference,As as Step,Ma as StridedSlice,hi as StringNGrams,Vu as StringSplit,Hu as StringToHashBucketFast,Xo as Sub,Ho as Sum,rn as SymbolicTensor,Ea as Tan,Yo as Tanh,Ke as Tensor,ht as TensorBuffer,Dn as Tile,La as TopK,_a as Transform,Fn as Transpose,Vm as Unique,Ss as Unpack,qu as UnsortedSegmentSum,Sge as UpperBound,eu as Variable,Rf as WebGPUBackend,vs as ZerosLike,ws as _FusedMatMul,Gt as abs,A2 as acos,w2 as acosh,Y as add,N2 as addN,Lb as all,fh as any,tp as argMax,D2 as argMin,F2 as asin,R2 as asinh,P2 as atan,M2 as atan2,E2 as atanh,oc as avgPool,$b as avgPool3d,a2 as backend,C as backend_util,$2 as basicLSTMCell,np as batchNorm,Bb as batchNorm2d,Ob as batchNorm3d,zb as batchNorm4d,sc as batchToSpaceND,Gb as bincount,bZ as booleanMaskAsync,O2 as broadcastArgs,op as broadcastTo,wr as broadcast_util,Fb as browser,xe as buffer,Yee as callbacks,re as cast,z2 as ceil,Gr as clipByValue,cn as clone,Rn as complex,mt as concat,Ub as concat1d,Wb as concat2d,Kb as concat3d,Vb as concat4d,bE as constraints,Hb as conv1d,es as conv2d,qb as conv2dTranspose,jb as conv3d,Yb as conv3dTranspose,Rge as copyRegisteredKernels,ic as cos,Zb as cosh,Ih as cosineWindow,hh as cumprod,Qb as cumsum,fn as customGrad,YL as data,G2 as denseBincount,Gv as deprecationWarn,U2 as depthToSpace,sp as depthwiseConv2d,tte as deregisterOp,Yu as device_util,W2 as diag,K2 as dilation2d,kxe as disableDeprecationWarnings,Fe as dispose,Sxe as disposeVariables,ce as div,V2 as divNoNan,H2 as dot,aA as dropout,q2 as einsum,ap as elu,Cxe as enableDebugMode,Ixe as enableProdMode,iA as enclosingPowerOfTwo,Mn as engine,$ as env,Zr as equal,j2 as erf,Z2 as euclideanNorm,br as exp,Lr as expandDims,Q2 as expm1,el as eye,bc as fft,Ms as fill,Fxe as findBackend,Rxe as findBackendFactory,ip as floor,Eb as floorDiv,Pz as forceHalfFloat,mp as fused,up as gather,AZ as gatherND,Rb as gather_util,Nxe as getBackend,cv as getGradient,th as getKernel,mb as getKernelsForBackend,fge as getThreadsCount,mD as gpgpu_util,E8 as grad,L8 as grads,ir as greater,Ls as greaterEqual,al as ifft,ep as imag,cp as image,DZ as inTopKAsync,yE as initializers,EA as input,Pn as io,yy as irfft,J2 as isFinite,eF as isInf,tF as isNaN,zt as keep,xr as kernel_impls,XE as layers,uc as leakyRelu,Jb as less,_s as lessEqual,pA as linalg,rF as linspace,jte as loadGraphModel,Xte as loadGraphModelSync,u9 as loadLayersModel,nF as localResponseNormalization,Ur as log,pc as log1p,oF as logSigmoid,ry as logSoftmax,ny as logSumExp,Jr as logicalAnd,lc as logicalNot,oy as logicalOr,sF as logicalXor,DQ as losses,aF as lowerBound,Ve as matMul,u2 as math,dn as max,mc as maxPool,ay as maxPool3d,iF as maxPoolWithArgmax,ts as maximum,$t as mean,mh as memory,uF as meshgrid,YE as metrics,bh as min,pp as minimum,pF as mirrorPad,lF as mod,a9 as model,ZE as models,tl as moments,TZ as movingAverage,E as mul,mF as multiRNNCell,cF as multinomial,Je as neg,Ch as nextFrame,Jp as norm,au as notEqual,Qu as oneHot,yr as ones,_r as onesLike,w as op,dF as outerProduct,jn as pad,fF as pad1d,hF as pad2d,gF as pad3d,bF as pad4d,yF as pool,qn as pow,dc as prelu,Sb as print,TF as prod,vxe as profile,xF as raggedGather,IF as raggedTensorToTensor,CF as rand,OF as randomGamma,ol as randomNormal,zF as randomStandardNormal,Ii as randomUniform,lp as range,wxe as ready,ou as real,GF as reciprocal,Ju as registerBackend,p9 as registerCallbackConstructor,t1 as registerGradient,Qi as registerKernel,ete as registerOp,QE as regularizers,en as relu,my as relu6,Dxe as removeBackend,_ as reshape,Nr as reverse,UF as reverse1d,WF as reverse2d,KF as reverse3d,VF as reverse4d,yc as rfft,cy as round,dy as rsqrt,de as scalar,IZ as scatterND,ch as scatter_util,yh as searchSorted,fy as selu,hy as separableConv2d,i9 as sequential,ee as serialization,f5 as setBackend,Pxe as setPlatform,dge as setThreadsCount,mge as setWasmPath,cge as setWasmPaths,vN as setWebGLContext,HF as setdiff1dAsync,af as shared,Ln as sigmoid,qF as sign,NQ as signal,gy as sin,by as sinh,Be as slice,fc as slice1d,xh as slice2d,hc as slice3d,sl as slice4d,xt as slice_util,gc as softmax,su as softplus,cc as spaceToBatchND,FQ as sparse,SZ as sparseToDense,wQ as spectral,Dr as split,_t as sqrt,qe as square,Ty as squaredDifference,$s as squeeze,Tr as stack,Ci as step,jF as stridedSlice,RQ as string,le as sub,he as sum,tu as sumOutType,XF as tan,rp as tanh,Ar as tensor,qt as tensor1d,Ga as tensor2d,Db as tensor3d,YF as tensor4d,ZF as tensor5d,QF as tensor6d,Ps as tensor_util,v2 as test_util,z as tidy,Qr as tile,Axe as time,JF as topk,ml as train,ze as transpose,Tc as truncatedNormal,eR as unique,Fge as unregisterGradient,Dge as unregisterKernel,xy as unsortedSegmentSum,Wr as unstack,Et as upcastType,tR as upperBound,y as util,_8 as valueAndGrad,$8 as valueAndGrads,Iy as variable,ey as variableGrads,DJr as version,Zte as version_converter,K5 as version_core,Rre as version_cpu,_h as version_layers,hge as version_wasm,Sae as version_webgl,d8t as webgl,cf as webgl_util,OD as webgpu_util,Ut as where,ky as whereAsync,It as zeros,we as zerosLike};
/**
 * @license
 * Copyright 2009 The Closure Library Authors
 * Copyright 2020 Daniel Wirtz / The long.js Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
