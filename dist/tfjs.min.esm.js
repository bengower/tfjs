var Jj=Object.create;var sb=Object.defineProperty;var eH=Object.getOwnPropertyDescriptor;var tH=Object.getOwnPropertyNames;var rH=Object.getPrototypeOf,nH=Object.prototype.hasOwnProperty;var sD=r=>sb(r,"__esModule",{value:!0});var Ar=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Xe=(r,e)=>{sD(r);for(var t in e)sb(r,t,{get:e[t],enumerable:!0})},oH=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of tH(e))!nH.call(r,n)&&n!=="default"&&sb(r,n,{get:()=>e[n],enumerable:!(t=eH(e,n))||t.enumerable});return r},_l=r=>oH(sD(sb(r!=null?Jj(rH(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var wD=Ar((Hde,SD)=>{SD.exports=Jt;var Ms=null;try{Ms=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Jt(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Jt.prototype.__isLong__;Object.defineProperty(Jt.prototype,"__isLong__",{value:!0});function qn(r){return(r&&r.__isLong__)===!0}Jt.isLong=qn;var gD={},bD={};function Ml(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=bD[r],n)?n:(t=er(r,(r|0)<0?-1:0,!0),o&&(bD[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=gD[r],n)?n:(t=er(r,r<0?-1:0,!1),o&&(gD[r]=t),t))}Jt.fromInt=Ml;function Es(r,e){if(isNaN(r))return e?El:Rs;if(e){if(r<0)return El;if(r>=xD)return vD}else{if(r<=-TD)return Xn;if(r+1>=TD)return CD}return r<0?Es(-r,e).neg():er(r%Em|0,r/Em|0,e)}Jt.fromNumber=Es;function er(r,e,t){return new Jt(r,e,t)}Jt.fromBits=er;var pb=Math.pow;function Vk(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return Rs;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return Vk(r.substring(1),e,t).neg();for(var o=Es(pb(t,8)),s=Rs,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),u=parseInt(r.substring(i,i+a),t);if(a<8){var l=Es(pb(t,a));s=s.mul(l).add(Es(u))}else s=s.mul(o),s=s.add(Es(u))}return s.unsigned=e,s}Jt.fromString=Vk;function Da(r,e){return typeof r=="number"?Es(r,e):typeof r=="string"?Vk(r,e):er(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Jt.fromValue=Da;var yD=1<<16,AH=1<<24,Em=yD*yD,xD=Em*Em,TD=xD/2,kD=Ml(AH),Rs=Ml(0);Jt.ZERO=Rs;var El=Ml(0,!0);Jt.UZERO=El;var Rm=Ml(1);Jt.ONE=Rm;var ID=Ml(1,!0);Jt.UONE=ID;var jk=Ml(-1);Jt.NEG_ONE=jk;var CD=er(4294967295|0,2147483647|0,!1);Jt.MAX_VALUE=CD;var vD=er(4294967295|0,4294967295|0,!0);Jt.MAX_UNSIGNED_VALUE=vD;var Xn=er(0,2147483648|0,!1);Jt.MIN_VALUE=Xn;var ke=Jt.prototype;ke.toInt=function(){return this.unsigned?this.low>>>0:this.low};ke.toNumber=function(){return this.unsigned?(this.high>>>0)*Em+(this.low>>>0):this.high*Em+(this.low>>>0)};ke.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Xn)){var t=Es(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=Es(pb(e,6),this.unsigned),i=this,a="";;){var u=i.div(s),l=i.sub(u.mul(s)).toInt()>>>0,p=l.toString(e);if(i=u,i.isZero())return p+a;for(;p.length<6;)p="0"+p;a=""+p+a}};ke.getHighBits=function(){return this.high};ke.getHighBitsUnsigned=function(){return this.high>>>0};ke.getLowBits=function(){return this.low};ke.getLowBitsUnsigned=function(){return this.low>>>0};ke.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Xn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};ke.isZero=function(){return this.high===0&&this.low===0};ke.eqz=ke.isZero;ke.isNegative=function(){return!this.unsigned&&this.high<0};ke.isPositive=function(){return this.unsigned||this.high>=0};ke.isOdd=function(){return(this.low&1)==1};ke.isEven=function(){return(this.low&1)==0};ke.equals=function(e){return qn(e)||(e=Da(e)),this.unsigned!==e.unsigned&&this.high>>>31==1&&e.high>>>31==1?!1:this.high===e.high&&this.low===e.low};ke.eq=ke.equals;ke.notEquals=function(e){return!this.eq(e)};ke.neq=ke.notEquals;ke.ne=ke.notEquals;ke.lessThan=function(e){return this.comp(e)<0};ke.lt=ke.lessThan;ke.lessThanOrEqual=function(e){return this.comp(e)<=0};ke.lte=ke.lessThanOrEqual;ke.le=ke.lessThanOrEqual;ke.greaterThan=function(e){return this.comp(e)>0};ke.gt=ke.greaterThan;ke.greaterThanOrEqual=function(e){return this.comp(e)>=0};ke.gte=ke.greaterThanOrEqual;ke.ge=ke.greaterThanOrEqual;ke.compare=function(e){if(qn(e)||(e=Da(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ke.comp=ke.compare;ke.negate=function(){return!this.unsigned&&this.eq(Xn)?Xn:this.not().add(Rm)};ke.neg=ke.negate;ke.add=function(e){qn(e)||(e=Da(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,i=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,p=0,m=0,c=0,d=0;return d+=s+l,c+=d>>>16,d&=65535,c+=o+u,m+=c>>>16,c&=65535,m+=n+a,p+=m>>>16,m&=65535,p+=t+i,p&=65535,er(c<<16|d,p<<16|m,this.unsigned)};ke.subtract=function(e){return qn(e)||(e=Da(e)),this.add(e.neg())};ke.sub=ke.subtract;ke.multiply=function(e){if(this.isZero())return Rs;if(qn(e)||(e=Da(e)),Ms){var t=Ms.mul(this.low,this.high,e.low,e.high);return er(t,Ms.get_high(),this.unsigned)}if(e.isZero())return Rs;if(this.eq(Xn))return e.isOdd()?Xn:Rs;if(e.eq(Xn))return this.isOdd()?Xn:Rs;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(kD)&&e.lt(kD))return Es(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,i=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,p=e.low&65535,m=0,c=0,d=0,f=0;return f+=i*p,d+=f>>>16,f&=65535,d+=s*p,c+=d>>>16,d&=65535,d+=i*l,c+=d>>>16,d&=65535,c+=o*p,m+=c>>>16,c&=65535,c+=s*l,m+=c>>>16,c&=65535,c+=i*u,m+=c>>>16,c&=65535,m+=n*p+o*l+s*u+i*a,m&=65535,er(d<<16|f,m<<16|c,this.unsigned)};ke.mul=ke.multiply;ke.divide=function(e){if(qn(e)||(e=Da(e)),e.isZero())throw Error("division by zero");if(Ms){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Ms.div_u:Ms.div_s)(this.low,this.high,e.low,e.high);return er(t,Ms.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?El:Rs;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return El;if(e.gt(this.shru(1)))return ID;s=El}else{if(this.eq(Xn)){if(e.eq(Rm)||e.eq(jk))return Xn;if(e.eq(Xn))return Rm;var i=this.shr(1);return n=i.div(e).shl(1),n.eq(Rs)?e.isNegative()?Rm:jk:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(Xn))return this.unsigned?El:Rs;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=Rs}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),u=a<=48?1:pb(2,a-48),l=Es(n),p=l.mul(e);p.isNegative()||p.gt(o);)n-=u,l=Es(n,this.unsigned),p=l.mul(e);l.isZero()&&(l=Rm),s=s.add(l),o=o.sub(p)}return s};ke.div=ke.divide;ke.modulo=function(e){if(qn(e)||(e=Da(e)),Ms){var t=(this.unsigned?Ms.rem_u:Ms.rem_s)(this.low,this.high,e.low,e.high);return er(t,Ms.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ke.mod=ke.modulo;ke.rem=ke.modulo;ke.not=function(){return er(~this.low,~this.high,this.unsigned)};ke.and=function(e){return qn(e)||(e=Da(e)),er(this.low&e.low,this.high&e.high,this.unsigned)};ke.or=function(e){return qn(e)||(e=Da(e)),er(this.low|e.low,this.high|e.high,this.unsigned)};ke.xor=function(e){return qn(e)||(e=Da(e)),er(this.low^e.low,this.high^e.high,this.unsigned)};ke.shiftLeft=function(e){return qn(e)&&(e=e.toInt()),(e&=63)==0?this:e<32?er(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):er(0,this.low<<e-32,this.unsigned)};ke.shl=ke.shiftLeft;ke.shiftRight=function(e){return qn(e)&&(e=e.toInt()),(e&=63)==0?this:e<32?er(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):er(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ke.shr=ke.shiftRight;ke.shiftRightUnsigned=function(e){if(qn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return er(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?er(t,0,this.unsigned):er(t>>>e-32,0,this.unsigned)};ke.shru=ke.shiftRightUnsigned;ke.shr_u=ke.shiftRightUnsigned;ke.toSigned=function(){return this.unsigned?er(this.low,this.high,!1):this};ke.toUnsigned=function(){return this.unsigned?this:er(this.low,this.high,!0)};ke.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ke.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ke.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Jt.fromBytes=function(e,t,n){return n?Jt.fromBytesLE(e,t):Jt.fromBytesBE(e,t)};Jt.fromBytesLE=function(e,t){return new Jt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Jt.fromBytesBE=function(e,t){return new Jt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var f0=Ar(()=>{});var h0=Ar(()=>{});var Q0=Ar((Y0,lC)=>{(function(r,e,t){function n(a){var u=this,l=i();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(a),u.s0<0&&(u.s0+=1),u.s1-=l(a),u.s1<0&&(u.s1+=1),u.s2-=l(a),u.s2<0&&(u.s2+=1),l=null}function o(a,u){return u.c=a.c,u.s0=a.s0,u.s1=a.s1,u.s2=a.s2,u}function s(a,u){var l=new n(a),p=u&&u.state,m=l.next;return m.int32=function(){return l.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&o(p,l),m.state=function(){return o(l,{})}),m}function i(){var a=4022871197,u=function(l){l=String(l);for(var p=0;p<l.length;p++){a+=l.charCodeAt(p);var m=.02519603282416938*a;a=m>>>0,m-=a,m*=a,a=m>>>0,m-=a,a+=m*4294967296}return(a>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(Y0,typeof lC=="object"&&lC,typeof define=="function"&&define)});var J0=Ar((Z0,pC)=>{(function(r,e,t){function n(i){var a=this,u="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var p=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^p^p>>>8},i===(i|0)?a.x=i:u+=i;for(var l=0;l<u.length+64;l++)a.x^=u.charCodeAt(l)|0,a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(Z0,typeof pC=="object"&&pC,typeof define=="function"&&define)});var t2=Ar((e2,mC)=>{(function(r,e,t){function n(i){var a=this,u="";a.next=function(){var p=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(p^p<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:u+=i;for(var l=0;l<u.length+64;l++)a.x^=u.charCodeAt(l)|0,l==u.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(e2,typeof mC=="object"&&mC,typeof define=="function"&&define)});var n2=Ar((r2,cC)=>{(function(r,e,t){function n(i){var a=this;a.next=function(){var l=a.x,p=a.i,m,c,d;return m=l[p],m^=m>>>7,c=m^m<<24,m=l[p+1&7],c^=m^m>>>10,m=l[p+3&7],c^=m^m>>>3,m=l[p+4&7],c^=m^m<<7,m=l[p+7&7],m=m^m<<13,c^=m^m<<9,l[p]=c,a.i=p+1&7,c};function u(l,p){var m,c,d=[];if(p===(p|0))c=d[0]=p;else for(p=""+p,m=0;m<p.length;++m)d[m&7]=d[m&7]<<15^p.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],l.x=d,l.i=0,m=256;m>0;--m)l.next()}u(a,i)}function o(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.x&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(r2,typeof cC=="object"&&cC,typeof define=="function"&&define)});var s2=Ar((o2,dC)=>{(function(r,e,t){function n(i){var a=this;a.next=function(){var l=a.w,p=a.X,m=a.i,c,d;return a.w=l=l+1640531527|0,d=p[m+34&127],c=p[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=p[m]=d^c,a.i=m,d+(l^l>>>16)|0};function u(l,p){var m,c,d,f,h,g=[],y=128;for(p===(p|0)?(c=p,p=null):(p=p+"\0",c=0,y=Math.max(y,p.length)),d=0,f=-32;f<y;++f)p&&(c^=p.charCodeAt((f+32)%p.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(p&&p.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;l.w=h,l.X=g,l.i=d}u(a,i)}function o(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.X&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(o2,typeof dC=="object"&&dC,typeof define=="function"&&define)});var i2=Ar((a2,fC)=>{(function(r,e,t){function n(i){var a=this,u="";a.next=function(){var p=a.b,m=a.c,c=a.d,d=a.a;return p=p<<25^p>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-p|0,a.b=p=p<<20^p>>>12^m,a.c=m=m-c|0,a.d=c<<16^m>>>16^d,a.a=d-p|0},a.a=0,a.b=0,a.c=2654435769|0,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):u+=i;for(var l=0;l<u.length+20;l++)a.b^=u.charCodeAt(l)|0,a.next()}function o(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(a2,typeof fC=="object"&&fC,typeof define=="function"&&define)});var u2=Ar(()=>{});var p2=Ar((l2,Eb)=>{(function(r,e,t){var n=256,o=6,s=52,i="random",a=t.pow(n,o),u=t.pow(2,s),l=u*2,p=n-1,m;function c(T,k,C){var A=[];k=k==!0?{entropy:!0}:k||{};var M=g(h(k.entropy?[T,x(e)]:T??y(),3),A),D=new d(A),R=function(){for(var B=D.g(o),U=a,W=0;B<u;)B=(B+W)*n,U*=n,W=D.g(1);for(;B>=l;)B/=2,U/=2,W>>>=1;return(B+W)/U};return R.int32=function(){return D.g(4)|0},R.quick=function(){return D.g(4)/4294967296},R.double=R,g(x(D.S),e),(k.pass||C||function(B,U,W,K){return K&&(K.S&&f(K,D),B.state=function(){return f(D,{})}),W?(t[i]=B,U):B})(R,M,"global"in k?k.global:this==t,k.state)}function d(T){var k,C=T.length,A=this,M=0,D=A.i=A.j=0,R=A.S=[];for(C||(T=[C++]);M<n;)R[M]=M++;for(M=0;M<n;M++)R[M]=R[D=p&D+T[M%C]+(k=R[M])],R[D]=k;(A.g=function(B){for(var U,W=0,K=A.i,j=A.j,V=A.S;B--;)U=V[K=p&K+1],W=W*n+V[p&(V[K]=V[j=p&j+U])+(V[j]=U)];return A.i=K,A.j=j,W})(n)}function f(T,k){return k.i=T.i,k.j=T.j,k.S=T.S.slice(),k}function h(T,k){var C=[],A=typeof T,M;if(k&&A=="object")for(M in T)try{C.push(h(T[M],k-1))}catch{}return C.length?C:A=="string"?T:T+"\0"}function g(T,k){for(var C=T+"",A,M=0;M<C.length;)k[p&M]=p&(A^=k[p&M]*19)+C.charCodeAt(M++);return x(k)}function y(){try{var T;return m&&(T=m.randomBytes)?T=T(n):(T=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(T)),x(T)}catch{var k=r.navigator,C=k&&k.plugins;return[+new Date,r,C,r.screen,x(e)]}}function x(T){return String.fromCharCode.apply(0,T)}if(g(t.random(),e),typeof Eb=="object"&&Eb.exports){Eb.exports=c;try{m=u2()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):t["seed"+i]=c})(typeof self!="undefined"?self:l2,[],Math)});var Vd=Ar((lPe,m2)=>{var $8=Q0(),O8=J0(),z8=t2(),G8=n2(),U8=s2(),W8=i2(),Zl=p2();Zl.alea=$8;Zl.xor128=O8;Zl.xorwow=z8;Zl.xorshift7=G8;Zl.xor4096=U8;Zl.tychei=W8;m2.exports=Zl});var hS=Ar(()=>{});var Gh=Ar(()=>{});var Jc=Ar(()=>{});var q4=Ar(()=>{});var X4=Ar(()=>{});var Y4=Ar(()=>{});var Q4=Ar((sT,zN)=>{var ON=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};function t(){return se.buffer!=at&&Gr(se.buffer),Ut}function n(){return se.buffer!=at&&Gr(se.buffer),zn}function o(){return se.buffer!=at&&Gr(se.buffer),zr}function s(){return se.buffer!=at&&Gr(se.buffer),us}function i(){return se.buffer!=at&&Gr(se.buffer),Gn}var a=typeof e!="undefined"?e:{},u,l;a.ready=new Promise(function(w,E){u=w,l=E});var p;typeof process!="undefined"&&process.listeners&&(p={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var m={},c;for(c in a)a.hasOwnProperty(c)&&(m[c]=a[c]);var d=[],f="./this.program",h=function(w,E){throw E},g=!1,y=!1,x=!1,T=!1;g=typeof window=="object",y=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=!g&&!x&&!y;var k=a.ENVIRONMENT_IS_PTHREAD||!1;k&&(at=a.buffer);var C="";function A(w){return a.locateFile?a.locateFile(w,C):C+w}var M,D,R,B,U,W;if(x){y?C=Jc().dirname(C)+"/":C=__dirname+"/",M=function(E,z){return U||(U=Gh()),W||(W=Jc()),E=W.normalize(E),U.readFileSync(E,z?null:"utf8")},R=function(E){var z=M(E,!0);return z.buffer||(z=new Uint8Array(z)),xe(z.buffer),z},process.argv.length>1&&(f=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(w){if(!(w instanceof cd))throw w}),process.on("unhandledRejection",Ai),h=function(w){process.exit(w)},a.inspect=function(){return"[Emscripten Module object]"};var K;try{K=q4()}catch(w){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),w}global.Worker=K.Worker}else T?(typeof read!="undefined"&&(M=function(E){return read(E)}),R=function(E){var z;return typeof readbuffer=="function"?new Uint8Array(readbuffer(E)):(z=read(E,"binary"),xe(typeof z=="object"),z)},typeof scriptArgs!="undefined"?d=scriptArgs:typeof arguments!="undefined"&&(d=arguments),typeof quit=="function"&&(h=function(w){quit(w)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(g||y)&&(y?C=self.location.href:typeof document!="undefined"&&document.currentScript&&(C=document.currentScript.src),typeof r!="undefined"&&r&&(C=r),C.indexOf("blob:")!==0?C=C.substr(0,C.lastIndexOf("/")+1):C="",x?(M=function(E,z){return U||(U=Gh()),W||(W=Jc()),E=W.normalize(E),U.readFileSync(E,z?null:"utf8")},R=function(E){var z=M(E,!0);return z.buffer||(z=new Uint8Array(z)),xe(z.buffer),z}):(M=function(w){var E=new XMLHttpRequest;return E.open("GET",w,!1),E.send(null),E.responseText},y&&(R=function(w){var E=new XMLHttpRequest;return E.open("GET",w,!1),E.responseType="arraybuffer",E.send(null),new Uint8Array(E.response)}),D=function(w,E,z){var H=new XMLHttpRequest;H.open("GET",w,!0),H.responseType="arraybuffer",H.onload=function(){if(H.status==200||H.status==0&&H.response){E(H.response);return}z()},H.onerror=z,H.send(null)}),B=function(w){document.title=w});x&&typeof performance=="undefined"&&(global.performance=X4().performance);var j=a.print||console.log.bind(console),V=a.printErr||console.warn.bind(console);for(c in m)m.hasOwnProperty(c)&&(a[c]=m[c]);m=null,a.arguments&&(d=a.arguments),a.thisProgram&&(f=a.thisProgram),a.quit&&(h=a.quit);function q(w){q.shown||(q.shown={}),q.shown[w]||(q.shown[w]=1,V(w))}var ee=Atomics.load,Z=Atomics.store,te=Atomics.compareExchange,oe;a.wasmBinary&&(oe=a.wasmBinary);var ie=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Ai("no native wasm support detected");var se,ue,ye=!1,fe;function xe(w,E){w||Ai("Assertion failed: "+E)}function we(w){var E=a["_"+w];return xe(E,"Cannot call unknown function "+w+", make sure it is exported"),E}function Fe(w,E,z,H,Te){var ge={string:function(an){var rm=0;if(an!=null&&an!==0){var oD=(an.length<<2)+1;rm=Jp(oD),It(an,rm,oD)}return rm},array:function(an){var rm=Jp(an.length);return Gt(an,rm),rm}};function be(an){return E==="string"?Y(an):E==="boolean"?Boolean(an):an}var Pe=we(w),Dt=[],Er=0;if(H)for(var _r=0;_r<H.length;_r++){var Fu=ge[z[_r]];Fu?(Er===0&&(Er=md()),Dt[_r]=Fu(H[_r])):Dt[_r]=H[_r]}var tm=Pe.apply(null,Dt);return tm=be(tm),Er!==0&&Zp(Er),tm}function Be(w,E,z,H){z=z||[];var Te=z.every(function(be){return be==="number"}),ge=E!=="string";return ge&&Te&&!H?we(w):function(){return Fe(w,E,z,arguments,H)}}function Ue(w,E,z){for(var H=E+z,Te="";!(E>=H);){var ge=w[E++];if(!ge)return Te;if(!(ge&128)){Te+=String.fromCharCode(ge);continue}var be=w[E++]&63;if((ge&224)==192){Te+=String.fromCharCode((ge&31)<<6|be);continue}var Pe=w[E++]&63;if((ge&240)==224?ge=(ge&15)<<12|be<<6|Pe:ge=(ge&7)<<18|be<<12|Pe<<6|w[E++]&63,ge<65536)Te+=String.fromCharCode(ge);else{var Dt=ge-65536;Te+=String.fromCharCode(55296|Dt>>10,56320|Dt&1023)}}return Te}function Y(w,E){return w?Ue(n(),w,E):""}function gt(w,E,z,H){if(!(H>0))return 0;for(var Te=z,ge=z+H-1,be=0;be<w.length;++be){var Pe=w.charCodeAt(be);if(Pe>=55296&&Pe<=57343){var Dt=w.charCodeAt(++be);Pe=65536+((Pe&1023)<<10)|Dt&1023}if(Pe<=127){if(z>=ge)break;E[z++]=Pe}else if(Pe<=2047){if(z+1>=ge)break;E[z++]=192|Pe>>6,E[z++]=128|Pe&63}else if(Pe<=65535){if(z+2>=ge)break;E[z++]=224|Pe>>12,E[z++]=128|Pe>>6&63,E[z++]=128|Pe&63}else{if(z+3>=ge)break;E[z++]=240|Pe>>18,E[z++]=128|Pe>>12&63,E[z++]=128|Pe>>6&63,E[z++]=128|Pe&63}}return E[z]=0,z-Te}function It(w,E,z){return gt(w,n(),E,z)}function Nt(w){for(var E=0,z=0;z<w.length;++z){var H=w.charCodeAt(z);H>=55296&&H<=57343&&(H=65536+((H&1023)<<10)|w.charCodeAt(++z)&1023),H<=127?++E:H<=2047?E+=2:H<=65535?E+=3:E+=4}return E}function Gt(w,E){t().set(w,E)}function ft(w,E){return w%E>0&&(w+=E-w%E),w}var at,Ut,zn,pr,is,zr,us,Sn,Gn;function Gr(w){at=w,a.HEAP8=Ut=new Int8Array(w),a.HEAP16=pr=new Int16Array(w),a.HEAP32=zr=new Int32Array(w),a.HEAPU8=zn=new Uint8Array(w),a.HEAPU16=is=new Uint16Array(w),a.HEAPU32=us=new Uint32Array(w),a.HEAPF32=Sn=new Float32Array(w),a.HEAPF64=Gn=new Float64Array(w)}var so=a.INITIAL_MEMORY||16777216;if(k)se=a.wasmMemory,at=a.buffer;else if(a.wasmMemory)se=a.wasmMemory;else if(se=new WebAssembly.Memory({initial:so/65536,maximum:2147483648/65536,shared:!0}),!(se.buffer instanceof SharedArrayBuffer))throw V("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");se&&(at=se.buffer),so=at.byteLength,Gr(at);var br,ls=[],ps=[],Il=[],ed=[],Un=[],jp=!1,td=!1;k||ps.push({func:function(){Yg()}});function Eg(){if(!k){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)lT(a.preRun.shift());Hp(ls)}}function Rg(){jp=!0,!k&&Hp(ps)}function Fg(){k||Hp(Il)}function wn(){k||(td=!0)}function Lg(){if(!k){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)pT(a.postRun.shift());Hp(Un)}}function lT(w){ls.unshift(w)}function pT(w){Un.unshift(w)}var ms=0,rd=null,Cl=null;function mT(w){xe(!k,"addRunDependency cannot be used in a pthread worker"),ms++,a.monitorRunDependencies&&a.monitorRunDependencies(ms)}function cT(w){if(ms--,a.monitorRunDependencies&&a.monitorRunDependencies(ms),ms==0&&(rd!==null&&(clearInterval(rd),rd=null),Cl)){var E=Cl;Cl=null,E()}}a.preloadedImages={},a.preloadedAudios={};function Ai(w){a.onAbort&&a.onAbort(w),k&&console.error("Pthread aborting at "+new Error().stack),w+="",V(w),ye=!0,fe=1,w="abort("+w+"). Build with -s ASSERTIONS=1 for more info.";var E=new WebAssembly.RuntimeError(w);throw l(E),E}function vl(w,E){return String.prototype.startsWith?w.startsWith(E):w.indexOf(E)===0}var dT="data:application/octet-stream;base64,";function Bg(w){return vl(w,dT)}var fT="file://";function $g(w){return vl(w,fT)}var _n="tfjs-backend-wasm-threaded-simd.wasm";Bg(_n)||(_n=A(_n));function hT(w){try{if(w==_n&&oe)return new Uint8Array(oe);if(R)return R(w);throw"both async and sync fetching of the wasm failed"}catch(E){Ai(E)}}function Og(){if(!oe&&(g||y)){if(typeof fetch=="function"&&!$g(_n))return fetch(_n,{credentials:"same-origin"}).then(function(w){if(!w.ok)throw"failed to load wasm binary file at '"+_n+"'";return w.arrayBuffer()}).catch(function(){return hT(_n)});if(D)return new Promise(function(w,E){D(_n,function(z){w(new Uint8Array(z))},E)})}return Promise.resolve().then(function(){return hT(_n)})}function gT(){var w={a:uk};function E(be,Pe){var Dt=be.exports;if(a.asm=Dt,br=a.asm.nb,ue=Pe,!k){var Er=Me.unusedWorkers.length;Me.unusedWorkers.forEach(function(_r){Me.loadWasmModuleToWorker(_r,function(){--Er||cT("wasm-instantiate")})})}}k||mT("wasm-instantiate");function z(be){E(be.instance,be.module)}function H(be){return Og().then(function(Pe){return WebAssembly.instantiate(Pe,w)}).then(be,function(Pe){V("failed to asynchronously prepare wasm: "+Pe),Ai(Pe)})}function Te(){return!oe&&typeof WebAssembly.instantiateStreaming=="function"&&!Bg(_n)&&!$g(_n)&&typeof fetch=="function"?fetch(_n,{credentials:"same-origin"}).then(function(be){var Pe=WebAssembly.instantiateStreaming(be,w);return Pe.then(z,function(Dt){return V("wasm streaming compile failed: "+Dt),V("falling back to ArrayBuffer instantiation"),H(z)})}):H(z)}if(a.instantiateWasm)try{var ge=a.instantiateWasm(w,E);return ge}catch(be){return V("Module.instantiateWasm callback failed with error: "+be),!1}return Te().catch(l),{}}var zg={10216:function(){throw"Canceled!"},10234:function(w,E){setTimeout(function(){ZN(w,E)},0)}};function bT(){Me.initRuntime()}function Hp(w){for(;w.length>0;){var E=w.shift();if(typeof E=="function"){E(a);continue}var z=E.func;typeof z=="number"?E.arg===void 0?br.get(z)():br.get(z)(E.arg):z(E.arg===void 0?null:E.arg)}}var Du={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function nd(w,E){if(w<=0||w>t().length||w&!0||E<0)return-28;if(E==0)return 0;E>=2147483647&&(E=1/0);var z=Atomics.load(o(),em>>2),H=0;if(z==w){var Te=Atomics.compareExchange(o(),em>>2,z,0);if(Te==z&&(--E,H=1,E<=0))return 1}var ge=Atomics.notify(o(),w>>2,E);if(ge>=0)return ge+H;throw"Atomics.notify returned an unexpected value "+ge}a._emscripten_futex_wake=nd;function yT(w){if(k)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!w)throw"Internal Error! Null pthread_ptr in killThread!";o()[w+12>>2]=0;var E=Me.pthreads[w];E.worker.terminate(),Me.freeThreadData(E),Me.runningWorkers.splice(Me.runningWorkers.indexOf(E.worker),1),E.worker.pthread=void 0}function xT(w){if(k)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!w)throw"Internal Error! Null pthread_ptr in cancelThread!";var E=Me.pthreads[w];E.worker.postMessage({cmd:"cancel"})}function Gg(w){if(k)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!w)throw"Internal Error! Null pthread_ptr in cleanupThread!";var E=Me.pthreads[w];if(E){o()[w+12>>2]=0;var z=E.worker;Me.returnWorkerToPool(z)}}var Me={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var w=8,E=0;E<w;++E)Me.allocateUnusedWorker()},initRuntime:function(){for(var w=wl(228),E=0;E<228/4;++E)s()[w/4+E]=0;o()[w+12>>2]=w;var z=w+152;o()[z>>2]=z;for(var H=wl(512),E=0;E<128;++E)s()[H/4+E]=0;Atomics.store(s(),w+100>>2,H),Atomics.store(s(),w+40>>2,w),Mk(w,!y,1),YN(w)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Me.threadExitHandlers.length>0;)Me.threadExitHandlers.pop()();k&&Ru()&&XN()},runExitHandlersAndDeinitThread:function(w,E){Atomics.store(s(),w+56>>2,1),Atomics.store(s(),w+60>>2,0),Me.runExitHandlers(),Atomics.store(s(),w+4>>2,E),Atomics.store(s(),w+0>>2,1),nd(w+0,2147483647),Mk(0,0,0)},threadExit:function(w){var E=Ru();E&&(Me.runExitHandlersAndDeinitThread(E,w),k&&postMessage({cmd:"exit"}))},threadCancel:function(){Me.runExitHandlersAndDeinitThread(Ru(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var w in Me.pthreads){var E=Me.pthreads[w];E&&E.worker&&Me.returnWorkerToPool(E.worker)}Me.pthreads={};for(var z=0;z<Me.unusedWorkers.length;++z){var H=Me.unusedWorkers[z];H.terminate()}Me.unusedWorkers=[];for(var z=0;z<Me.runningWorkers.length;++z){var H=Me.runningWorkers[z],E=H.pthread;Me.freeThreadData(E),H.terminate()}Me.runningWorkers=[]},freeThreadData:function(w){if(!!w){if(w.threadInfoStruct){var E=o()[w.threadInfoStruct+100>>2];o()[w.threadInfoStruct+100>>2]=0,pd(E),pd(w.threadInfoStruct)}w.threadInfoStruct=0,w.allocatedOwnStack&&w.stackBase&&pd(w.stackBase),w.stackBase=0,w.worker&&(w.worker.pthread=null)}},returnWorkerToPool:function(w){Me.runWithoutMainThreadQueuedCalls(function(){delete Me.pthreads[w.pthread.threadInfoStruct],Me.unusedWorkers.push(w),Me.runningWorkers.splice(Me.runningWorkers.indexOf(w),1),Me.freeThreadData(w.pthread),w.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(w){o()[nD>>2]=0;try{w()}finally{o()[nD>>2]=1}},receiveObjectTransfer:function(w){},loadWasmModuleToWorker:function(w,E){w.onmessage=function(z){var H=z.data,Te=H.cmd;if(w.pthread&&(Me.currentProxiedOperationCallerThread=w.pthread.threadInfoStruct),H.targetThread&&H.targetThread!=Ru()){var ge=Me.pthreads[H.targetThread];ge?ge.worker.postMessage(z.data,H.transferList):console.error('Internal error! Worker sent a message "'+Te+'" to target pthread '+H.targetThread+", but that thread no longer exists!"),Me.currentProxiedOperationCallerThread=void 0;return}if(Te==="processQueuedMainThreadWork")tb();else if(Te==="spawnThread")qg(z.data);else if(Te==="cleanupThread")Gg(H.thread);else if(Te==="killThread")yT(H.thread);else if(Te==="cancelThread")xT(H.thread);else if(Te==="loaded")w.loaded=!0,E&&E(w),w.runPthread&&(w.runPthread(),delete w.runPthread);else if(Te==="print")j("Thread "+H.threadId+": "+H.text);else if(Te==="printErr")V("Thread "+H.threadId+": "+H.text);else if(Te==="alert")alert("Thread "+H.threadId+": "+H.text);else if(Te==="exit"){var be=w.pthread&&Atomics.load(s(),w.pthread.threadInfoStruct+64>>2);be&&Me.returnWorkerToPool(w)}else if(Te==="exitProcess")try{Qj(H.returnCode)}catch(Pe){if(Pe instanceof cd)return;throw Pe}else Te==="cancelDone"?Me.returnWorkerToPool(w):Te==="objectTransfer"?Me.receiveObjectTransfer(z.data):z.data.target==="setimmediate"?w.postMessage(z.data):V("worker sent an unknown command "+Te);Me.currentProxiedOperationCallerThread=void 0},w.onerror=function(z){V("pthread sent an error! "+z.filename+":"+z.lineno+": "+z.message)},x&&(w.on("message",function(z){w.onmessage({data:z})}),w.on("error",function(z){w.onerror(z)}),w.on("exit",function(z){})),w.postMessage({cmd:"load",urlOrBlob:a.mainScriptUrlOrBlob||r,wasmMemory:se,wasmModule:ue})},allocateUnusedWorker:function(){var w=A("tfjs-backend-wasm-threaded-simd.worker.js");Me.unusedWorkers.push(new Worker(w))},getNewWorker:function(){return Me.unusedWorkers.length==0&&(Me.allocateUnusedWorker(),Me.loadWasmModuleToWorker(Me.unusedWorkers[0])),Me.unusedWorkers.length>0?Me.unusedWorkers.pop():null},busySpinWait:function(w){for(var E=performance.now()+w;performance.now()<E;);}};function TT(w,E){tD(w,E),Zp(w)}a.establishStackSpace=TT;function kT(){return ie}a.getNoExitRuntime=kT;function IT(w,E){return br.get(w)(E)}a.invokeEntryPoint=IT;function CT(w,E,z,H){Ai("Assertion failed: "+Y(w)+", at: "+[E?Y(E):"unknown filename",z,H?Y(H):"unknown function"])}function vT(w,E){var z=_main(w,E)}var Sl;x?Sl=function(){var w=process.hrtime();return w[0]*1e3+w[1]/1e6}:k?Sl=function(){return performance.now()-a.__performance_now_clock_drift}:typeof dateNow!="undefined"?Sl=dateNow:Sl=function(){return performance.now()};function ST(w){return o()[HN()>>2]=w,w}function wT(w,E){if(k)return Pu(1,1,w,E)}function _T(w,E){if(w==E)postMessage({cmd:"processQueuedMainThreadWork"});else if(k)postMessage({targetThread:w,cmd:"processThreadQueue"});else{var z=Me.pthreads[w],H=z&&z.worker;if(!H)return;H.postMessage({cmd:"processThreadQueue"})}return 1}function AT(){Ai()}function NT(w,E,z){var H=ET(E,z);return zg[w].apply(null,H)}function DT(w,E){}function Ug(w,E,z){if(w<=0||w>t().length||w&!0)return-28;if(g){if(Atomics.load(o(),w>>2)!=E)return-6;for(var Te=performance.now(),ge=Te+z,be=Atomics.exchange(o(),em>>2,w);;){if(Te=performance.now(),Te>ge)return be=Atomics.exchange(o(),em>>2,0),-73;if(be=Atomics.exchange(o(),em>>2,0),be==0)break;if(tb(),Atomics.load(o(),w>>2)!=E)return-6;be=Atomics.exchange(o(),em>>2,w)}return 0}else{var H=Atomics.wait(o(),w>>2,E,z);if(H==="timed-out")return-73;if(H==="not-equal")return-6;if(H==="ok")return 0;throw"Atomics.wait returned an unexpected value "+H}}function PT(w,E,z){n().copyWithin(w,E,E+z)}function MT(){return x?Y4().cpus().length:navigator.hardwareConcurrency}function Pu(w,E){for(var z=arguments.length-2,H=md(),Te=z,ge=Jp(Te*8),be=ge>>3,Pe=0;Pe<z;Pe++){var Dt=arguments[2+Pe];i()[be+Pe]=Dt}var Er=eD(w,Te,ge,E);return Zp(H),Er}var od=[],sd=[];function ET(w,E){sd.length=0;var z;for(E>>=2;z=n()[w++];){var H=z<105;H&&E&1&&E++,sd.push(H?i()[E++>>1]:o()[E]),++E}return sd}function RT(w,E,z){od.length=E;for(var H=z>>3,Te=0;Te<E;Te++)od[Te]=i()[H+Te];var ge=w<0,be=ge?zg[-w-1]:ik[w];return be.apply(null,od)}function FT(){return n().length}function LT(w){try{return se.grow(w-at.byteLength+65535>>>16),Gr(se.buffer),1}catch{}}function BT(w){var E=FT();if(w<=E)return!1;var z=2147483648;if(w>z)return!1;for(var H=1;H<=4;H*=2){var Te=E*(1+.2/H);Te=Math.min(Te,w+100663296);var ge=Math.min(z,ft(Math.max(w,Te),65536)),be=LT(ge);if(be)return!0}return!1}var rt={inEventHandler:0,removeAllEventListeners:function(){for(var w=rt.eventHandlers.length-1;w>=0;--w)rt._removeHandler(w);rt.eventHandlers=[],rt.deferredCalls=[]},registerRemoveEventListeners:function(){rt.removeEventListenersRegistered||(ed.push(rt.removeAllEventListeners),rt.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(w,E,z){function H(be,Pe){if(be.length!=Pe.length)return!1;for(var Dt in be)if(be[Dt]!=Pe[Dt])return!1;return!0}for(var Te in rt.deferredCalls){var ge=rt.deferredCalls[Te];if(ge.targetFunction==w&&H(ge.argsList,z))return}rt.deferredCalls.push({targetFunction:w,precedence:E,argsList:z}),rt.deferredCalls.sort(function(be,Pe){return be.precedence<Pe.precedence})},removeDeferredCalls:function(w){for(var E=0;E<rt.deferredCalls.length;++E)rt.deferredCalls[E].targetFunction==w&&(rt.deferredCalls.splice(E,1),--E)},canPerformEventHandlerRequests:function(){return rt.inEventHandler&&rt.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!rt.canPerformEventHandlerRequests())for(var w=0;w<rt.deferredCalls.length;++w){var E=rt.deferredCalls[w];rt.deferredCalls.splice(w,1),--w,E.targetFunction.apply(null,E.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(w,E){for(var z=0;z<rt.eventHandlers.length;++z)rt.eventHandlers[z].target==w&&(!E||E==rt.eventHandlers[z].eventTypeString)&&rt._removeHandler(z--)},_removeHandler:function(w){var E=rt.eventHandlers[w];E.target.removeEventListener(E.eventTypeString,E.eventListenerFunc,E.useCapture),rt.eventHandlers.splice(w,1)},registerOrRemoveHandler:function(w){var E=function(Te){++rt.inEventHandler,rt.currentEventHandler=w,rt.runDeferredCalls(),w.handlerFunc(Te),rt.runDeferredCalls(),--rt.inEventHandler};if(w.callbackfunc)w.eventListenerFunc=E,w.target.addEventListener(w.eventTypeString,E,w.useCapture),rt.eventHandlers.push(w),rt.registerRemoveEventListeners();else for(var z=0;z<rt.eventHandlers.length;++z)rt.eventHandlers[z].target==w.target&&rt.eventHandlers[z].eventTypeString==w.eventTypeString&&rt._removeHandler(z--)},queueEventHandlerOnThread_iiii:function(w,E,z,H,Te){var ge=md(),be=Jp(12);o()[be>>2]=z,o()[be+4>>2]=H,o()[be+8>>2]=Te,Pk(0,w,637534208,E,H,be),Zp(ge)},getTargetThreadForEventCallback:function(w){switch(w){case 1:return 0;case 2:return Me.currentProxiedOperationCallerThread;default:return w}},getNodeNameForTarget:function(w){return w?w==window?"#window":w==screen?"#screen":w&&w.nodeName?w.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function $T(w){var E=Nt(w)+1,z=wl(E);return It(w,z,E),z}function OT(w,E,z,H){var Te=md(),ge=Jp(12),be=0;E&&(be=$T(E)),o()[ge>>2]=be,o()[ge+4>>2]=z,o()[ge+8>>2]=H,Pk(0,w,657457152,0,be,ge),Zp(Te)}function zT(w,E,z,H){E=E?Y(E):"",OT(w,E,z,H)}function GT(w){return w>2?Y(w):w}var UT=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function WT(w){w=GT(w);var E=UT[w]||(typeof document!="undefined"?document.querySelector(w):void 0);return E}function ad(w){return WT(w)}function Wg(w,E,z){var H=ad(w);if(!H)return-4;if(H.canvasSharedPtr&&(o()[H.canvasSharedPtr>>2]=E,o()[H.canvasSharedPtr+4>>2]=z),H.offscreenCanvas||!H.controlTransferredOffscreen){H.offscreenCanvas&&(H=H.offscreenCanvas);var Te=!1;if(H.GLctxObject&&H.GLctxObject.GLctx){var ge=H.GLctxObject.GLctx.getParameter(2978);Te=ge[0]===0&&ge[1]===0&&ge[2]===H.width&&ge[3]===H.height}H.width=E,H.height=z,Te&&H.GLctxObject.GLctx.viewport(0,0,E,z)}else if(H.canvasSharedPtr){var be=o()[H.canvasSharedPtr+8>>2];return zT(be,w,E,z),1}else return-4;return 0}function Kg(w,E,z){return k?Pu(2,1,w,E,z):Wg(w,E,z)}function KT(w,E,z){var H=ad(w);return H?Wg(w,E,z):Kg(w,E,z)}function VT(w){}function jT(w,E){}function HT(w){var E=w.getExtension("ANGLE_instanced_arrays");if(E)return w.vertexAttribDivisor=function(z,H){E.vertexAttribDivisorANGLE(z,H)},w.drawArraysInstanced=function(z,H,Te,ge){E.drawArraysInstancedANGLE(z,H,Te,ge)},w.drawElementsInstanced=function(z,H,Te,ge,be){E.drawElementsInstancedANGLE(z,H,Te,ge,be)},1}function qT(w){var E=w.getExtension("OES_vertex_array_object");if(E)return w.createVertexArray=function(){return E.createVertexArrayOES()},w.deleteVertexArray=function(z){E.deleteVertexArrayOES(z)},w.bindVertexArray=function(z){E.bindVertexArrayOES(z)},w.isVertexArray=function(z){return E.isVertexArrayOES(z)},1}function XT(w){var E=w.getExtension("WEBGL_draw_buffers");if(E)return w.drawBuffers=function(z,H){E.drawBuffersWEBGL(z,H)},1}function YT(w){return!!(w.multiDrawWebgl=w.getExtension("WEBGL_multi_draw"))}var Ct={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(E){Ct.lastError||(Ct.lastError=E)},getNewId:function(w){for(var E=Ct.counter++,z=w.length;z<E;z++)w[z]=null;return E},getSource:function(w,E,z,H){for(var Te="",ge=0;ge<E;++ge){var be=H?o()[H+ge*4>>2]:-1;Te+=Y(o()[z+ge*4>>2],be<0?void 0:be)}return Te},createContext:function(w,E){var z=w.getContext("webgl",E);if(!z)return 0;var H=Ct.registerContext(z,E);return H},registerContext:function(w,E){var z=wl(8);o()[z+4>>2]=Ru();var H={handle:z,attributes:E,version:E.majorVersion,GLctx:w};return w.canvas&&(w.canvas.GLctxObject=H),Ct.contexts[z]=H,(typeof E.enableExtensionsByDefault=="undefined"||E.enableExtensionsByDefault)&&Ct.initExtensions(H),z},makeContextCurrent:function(w){return Ct.currentContext=Ct.contexts[w],a.ctx=Mu=Ct.currentContext&&Ct.currentContext.GLctx,!(w&&!Mu)},getContext:function(w){return Ct.contexts[w]},deleteContext:function(w){Ct.currentContext===Ct.contexts[w]&&(Ct.currentContext=null),typeof rt=="object"&&rt.removeAllHandlersOnTarget(Ct.contexts[w].GLctx.canvas),Ct.contexts[w]&&Ct.contexts[w].GLctx.canvas&&(Ct.contexts[w].GLctx.canvas.GLctxObject=void 0),pd(Ct.contexts[w].handle),Ct.contexts[w]=null},initExtensions:function(w){if(w||(w=Ct.currentContext),!w.initExtensionsDone){w.initExtensionsDone=!0;var E=w.GLctx;HT(E),qT(E),XT(E),E.disjointTimerQueryExt=E.getExtension("EXT_disjoint_timer_query"),YT(E);var z=E.getSupportedExtensions()||[];z.forEach(function(H){H.indexOf("lose_context")<0&&H.indexOf("debug")<0&&E.getExtension(H)})}},populateUniformTable:function(w){for(var E=Ct.programs[w],z=Ct.programInfos[w]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},H=z.uniforms,Te=Mu.getProgramParameter(E,35718),ge=0;ge<Te;++ge){var be=Mu.getActiveUniform(E,ge),Pe=be.name;z.maxUniformLength=Math.max(z.maxUniformLength,Pe.length+1),Pe.slice(-1)=="]"&&(Pe=Pe.slice(0,Pe.lastIndexOf("[")));var Dt=Mu.getUniformLocation(E,Pe);if(Dt){var Er=Ct.getNewId(Ct.uniforms);H[Pe]=[be.size,Er],Ct.uniforms[Er]=Dt;for(var _r=1;_r<be.size;++_r){var Fu=Pe+"["+_r+"]";Dt=Mu.getUniformLocation(E,Fu),Er=Ct.getNewId(Ct.uniforms),Ct.uniforms[Er]=Dt}}}}},QT=["default","low-power","high-performance"];function ZT(w,E){var z=E>>2,H=o()[z+(24>>2)],Te={alpha:!!o()[z+(0>>2)],depth:!!o()[z+(4>>2)],stencil:!!o()[z+(8>>2)],antialias:!!o()[z+(12>>2)],premultipliedAlpha:!!o()[z+(16>>2)],preserveDrawingBuffer:!!o()[z+(20>>2)],powerPreference:QT[H],failIfMajorPerformanceCaveat:!!o()[z+(28>>2)],majorVersion:o()[z+(32>>2)],minorVersion:o()[z+(36>>2)],enableExtensionsByDefault:o()[z+(40>>2)],explicitSwapControl:o()[z+(44>>2)],proxyContextToMainThread:o()[z+(48>>2)],renderViaOffscreenBackBuffer:o()[z+(52>>2)]},ge=ad(w);if(!ge||Te.explicitSwapControl)return 0;var be=Ct.createContext(ge,Te);return be}function JT(w,E){return ZT(w,E)}var qp={mappings:{},buffers:[null,[],[]],printChar:function(w,E){var z=qp.buffers[w];E===0||E===10?((w===1?j:V)(Ue(z,0)),z.length=0):z.push(E)},varargs:void 0,get:function(){qp.varargs+=4;var w=o()[qp.varargs-4>>2];return w},getStr:function(w){var E=Y(w);return E},get64:function(w,E){return w}};function Vg(w){return k?Pu(3,1,w):0}function jg(w,E,z,H,Te){if(k)return Pu(4,1,w,E,z,H,Te)}function Hg(w,E,z,H){if(k)return Pu(5,1,w,E,z,H);for(var Te=0,ge=0;ge<z;ge++){for(var be=o()[E+ge*8>>2],Pe=o()[E+(ge*8+4)>>2],Dt=0;Dt<Pe;Dt++)qp.printChar(w,n()[be+Dt]);Te+=Pe}return o()[H>>2]=Te,0}function ek(w){var E=Me.threadExitHandlers.pop();w&&E()}function tk(w,E){Me.threadExitHandlers.push(function(){br.get(w)(E)})}function qg(w){if(k)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var E=Me.getNewWorker();if(E.pthread!==void 0)throw"Internal error!";if(!w.pthread_ptr)throw"Internal error, no pthread ptr!";Me.runningWorkers.push(E);for(var z=wl(128*4),H=0;H<128;++H)o()[z+H*4>>2]=0;var Te=w.stackBase+w.stackSize,ge=Me.pthreads[w.pthread_ptr]={worker:E,stackBase:w.stackBase,stackSize:w.stackSize,allocatedOwnStack:w.allocatedOwnStack,threadInfoStruct:w.pthread_ptr},be=ge.threadInfoStruct>>2;Atomics.store(s(),be+(64>>2),w.detached),Atomics.store(s(),be+(100>>2),z),Atomics.store(s(),be+(40>>2),ge.threadInfoStruct),Atomics.store(s(),be+(80>>2),w.stackSize),Atomics.store(s(),be+(76>>2),Te),Atomics.store(s(),be+(104>>2),w.stackSize),Atomics.store(s(),be+(104+8>>2),Te),Atomics.store(s(),be+(104+12>>2),w.detached);var Pe=qN(),Dt=Pe+40;Atomics.store(s(),be+(172>>2),Dt),E.pthread=ge;var Er={cmd:"run",start_routine:w.startRoutine,arg:w.arg,threadInfoStruct:w.pthread_ptr,stackBase:w.stackBase,stackSize:w.stackSize};E.runPthread=function(){Er.time=performance.now(),E.postMessage(Er,w.transferList)},E.loaded&&(E.runPthread(),delete E.runPthread)}function rk(w,E,z,H){if(typeof SharedArrayBuffer=="undefined")return V("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!w)return V("pthread_create called with a null thread pointer!"),28;var Te=[],ge=0;if(k&&(Te.length===0||ge))return JN(687865856,w,E,z,H);if(ge)return ge;var be=0,Pe=0,Dt=0;E&&E!=-1?(be=o()[E>>2],be+=81920,Pe=o()[E+8>>2],Dt=o()[E+12>>2]!==0):be=2097152;var Er=Pe==0;Er?Pe=rD(16,be):(Pe-=be,xe(Pe>0));for(var _r=wl(228),Fu=0;Fu<228>>2;++Fu)s()[(_r>>2)+Fu]=0;o()[w>>2]=_r,o()[_r+12>>2]=_r;var tm=_r+152;o()[tm>>2]=tm;var an={stackBase:Pe,stackSize:be,allocatedOwnStack:Er,detached:Dt,startRoutine:z,pthread_ptr:_r,arg:H,transferList:Te};return k?(an.cmd="spawnThread",postMessage(an,Te)):qg(an),0}function nk(){if(!!k){var w=Ru();if(!!w){var E=Atomics.load(s(),w+56>>2);if(!E){var z=Atomics.load(s(),w+0>>2);if(z==2)throw"Canceled!"}}}}function ok(){x||y||q("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function sk(w,E,z){if(!w)return V("pthread_join attempted on a null thread pointer!"),Du.ESRCH;if(k&&Ru()==w)return V("PThread "+w+" is attempting to join to itself!"),Du.EDEADLK;if(!k&&QN()==w)return V("Main thread "+w+" is attempting to join to itself!"),Du.EDEADLK;var H=o()[w+12>>2];if(H!==w)return V("pthread_join attempted on thread "+w+", which does not point to a valid thread, or does not exist anymore!"),Du.ESRCH;var Te=Atomics.load(s(),w+64>>2);if(Te)return V("Attempted to join thread "+w+", which was already detached!"),Du.EINVAL;for(z&&ok();;){var ge=Atomics.load(s(),w+0>>2);if(ge==1){var be=Atomics.load(s(),w+4>>2);return E&&(o()[E>>2]=be),Atomics.store(s(),w+64>>2,1),k?postMessage({cmd:"cleanupThread",thread:w}):Gg(w),0}if(!z)return Du.EBUSY;nk(),k||tb(),Ug(w+0,ge,k?100:1)}}function ak(w,E){return sk(w,E,!0)}function Xg(w){if(k)return Pu(6,1,w);switch(w){case 30:return 16384;case 85:var E=2147483648;return E/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return ST(28),-1}k||Me.initMainThreadBlock();var Mu,ik=[null,wT,Kg,Vg,jg,Hg,Xg],uk={e:CT,r:vT,x:_T,b:AT,y:NT,j:DT,d:Ug,c:nd,f:Sl,p:PT,A:MT,u:RT,q:BT,v:KT,i:VT,s:jT,w:JT,l:Vg,n:jg,g:Hg,o:bT,a:se||a.wasmMemory,z:ek,k:tk,h:rk,m:ak,t:Xg},jN=gT(),Yg=a.___wasm_call_ctors=function(){return(Yg=a.___wasm_call_ctors=a.asm.B).apply(null,arguments)},lk=a._init=function(){return(lk=a._init=a.asm.C).apply(null,arguments)},pk=a._init_with_threads_count=function(){return(pk=a._init_with_threads_count=a.asm.D).apply(null,arguments)},mk=a._get_threads_count=function(){return(mk=a._get_threads_count=a.asm.E).apply(null,arguments)},ck=a._register_tensor=function(){return(ck=a._register_tensor=a.asm.F).apply(null,arguments)},dk=a._dispose_data=function(){return(dk=a._dispose_data=a.asm.G).apply(null,arguments)},fk=a._dispose=function(){return(fk=a._dispose=a.asm.H).apply(null,arguments)},hk=a._Abs=function(){return(hk=a._Abs=a.asm.I).apply(null,arguments)},gk=a._Add=function(){return(gk=a._Add=a.asm.J).apply(null,arguments)},bk=a._AddN=function(){return(bk=a._AddN=a.asm.K).apply(null,arguments)},yk=a._All=function(){return(yk=a._All=a.asm.L).apply(null,arguments)},xk=a._Any=function(){return(xk=a._Any=a.asm.M).apply(null,arguments)},Tk=a._ArgMax=function(){return(Tk=a._ArgMax=a.asm.N).apply(null,arguments)},kk=a._AvgPool=function(){return(kk=a._AvgPool=a.asm.O).apply(null,arguments)},Ik=a._BatchMatMul=function(){return(Ik=a._BatchMatMul=a.asm.P).apply(null,arguments)},Ck=a._Ceil=function(){return(Ck=a._Ceil=a.asm.Q).apply(null,arguments)},vk=a._ClipByValue=function(){return(vk=a._ClipByValue=a.asm.R).apply(null,arguments)},Sk=a._Conv2D=function(){return(Sk=a._Conv2D=a.asm.S).apply(null,arguments)},wk=a._Conv2DBackpropInput=function(){return(wk=a._Conv2DBackpropInput=a.asm.T).apply(null,arguments)},_k=a._Cos=function(){return(_k=a._Cos=a.asm.U).apply(null,arguments)},Ak=a._Cosh=function(){return(Ak=a._Cosh=a.asm.V).apply(null,arguments)},Qg=a._CropAndResize=function(){return(Qg=a._CropAndResize=a.asm.W).apply(null,arguments)},Zg=a._Cumsum=function(){return(Zg=a._Cumsum=a.asm.X).apply(null,arguments)},id=a._DepthToSpace=function(){return(id=a._DepthToSpace=a.asm.Y).apply(null,arguments)},Xp=a._DepthwiseConv2dNative=function(){return(Xp=a._DepthwiseConv2dNative=a.asm.Z).apply(null,arguments)},Nk=a._Elu=function(){return(Nk=a._Elu=a.asm._).apply(null,arguments)},ud=a._Equal=function(){return(ud=a._Equal=a.asm.$).apply(null,arguments)},Yp=a._Exp=function(){return(Yp=a._Exp=a.asm.aa).apply(null,arguments)},Qp=a._FlipLeftRight=function(){return(Qp=a._FlipLeftRight=a.asm.ba).apply(null,arguments)},Dk=a._Floor=function(){return(Dk=a._Floor=a.asm.ca).apply(null,arguments)},Q=a._FloorDiv=function(){return(Q=a._FloorDiv=a.asm.da).apply(null,arguments)},ae=a._FusedBatchNorm=function(){return(ae=a._FusedBatchNorm=a.asm.ea).apply(null,arguments)},Ae=a._FusedConv2D=function(){return(Ae=a._FusedConv2D=a.asm.fa).apply(null,arguments)},bt=a._FusedDepthwiseConv2D=function(){return(bt=a._FusedDepthwiseConv2D=a.asm.ga).apply(null,arguments)},mr=a._Gather=function(){return(mr=a._Gather=a.asm.ha).apply(null,arguments)},rr=a._GatherNd=function(){return(rr=a._GatherNd=a.asm.ia).apply(null,arguments)},ut=a._Greater=function(){return(ut=a._Greater=a.asm.ja).apply(null,arguments)},pt=a._GreaterEqual=function(){return(pt=a._GreaterEqual=a.asm.ka).apply(null,arguments)},Ur=a._LeakyRelu=function(){return(Ur=a._LeakyRelu=a.asm.la).apply(null,arguments)},Ni=a._Less=function(){return(Ni=a._Less=a.asm.ma).apply(null,arguments)},Di=a._LessEqual=function(){return(Di=a._LessEqual=a.asm.na).apply(null,arguments)},Jg=a._Log=function(){return(Jg=a._Log=a.asm.oa).apply(null,arguments)},ld=a._LogicalAnd=function(){return(ld=a._LogicalAnd=a.asm.pa).apply(null,arguments)},Wn=a._Max=function(){return(Wn=a._Max=a.asm.qa).apply(null,arguments)},Eu=a._MaxPool=function(){return(Eu=a._MaxPool=a.asm.ra).apply(null,arguments)},eb=a._Maximum=function(){return(eb=a._Maximum=a.asm.sa).apply(null,arguments)},oj=a._Mean=function(){return(oj=a._Mean=a.asm.ta).apply(null,arguments)},sj=a._Min=function(){return(sj=a._Min=a.asm.ua).apply(null,arguments)},aj=a._Minimum=function(){return(aj=a._Minimum=a.asm.va).apply(null,arguments)},ij=a._MirrorPad=function(){return(ij=a._MirrorPad=a.asm.wa).apply(null,arguments)},uj=a._Multiply=function(){return(uj=a._Multiply=a.asm.xa).apply(null,arguments)},lj=a._Neg=function(){return(lj=a._Neg=a.asm.ya).apply(null,arguments)},pj=a._NonMaxSuppressionV3=function(){return(pj=a._NonMaxSuppressionV3=a.asm.za).apply(null,arguments)},mj=a._NonMaxSuppressionV4=function(){return(mj=a._NonMaxSuppressionV4=a.asm.Aa).apply(null,arguments)},cj=a._NonMaxSuppressionV5=function(){return(cj=a._NonMaxSuppressionV5=a.asm.Ba).apply(null,arguments)},dj=a._NotEqual=function(){return(dj=a._NotEqual=a.asm.Ca).apply(null,arguments)},fj=a._OneHot=function(){return(fj=a._OneHot=a.asm.Da).apply(null,arguments)},hj=a._PadV2=function(){return(hj=a._PadV2=a.asm.Ea).apply(null,arguments)},gj=a._Pow=function(){return(gj=a._Pow=a.asm.Fa).apply(null,arguments)},bj=a._Prelu=function(){return(bj=a._Prelu=a.asm.Ga).apply(null,arguments)},yj=a._Prod=function(){return(yj=a._Prod=a.asm.Ha).apply(null,arguments)},xj=a._RealDiv=function(){return(xj=a._RealDiv=a.asm.Ia).apply(null,arguments)},Tj=a._Relu=function(){return(Tj=a._Relu=a.asm.Ja).apply(null,arguments)},kj=a._Relu6=function(){return(kj=a._Relu6=a.asm.Ka).apply(null,arguments)},Ij=a._ResizeBilinear=function(){return(Ij=a._ResizeBilinear=a.asm.La).apply(null,arguments)},Cj=a._Reverse=function(){return(Cj=a._Reverse=a.asm.Ma).apply(null,arguments)},vj=a._RotateWithOffset=function(){return(vj=a._RotateWithOffset=a.asm.Na).apply(null,arguments)},Sj=a._Round=function(){return(Sj=a._Round=a.asm.Oa).apply(null,arguments)},wj=a._Rsqrt=function(){return(wj=a._Rsqrt=a.asm.Pa).apply(null,arguments)},_j=a._ScatterNd=function(){return(_j=a._ScatterNd=a.asm.Qa).apply(null,arguments)},Aj=a._SelectV2=function(){return(Aj=a._SelectV2=a.asm.Ra).apply(null,arguments)},Nj=a._Sigmoid=function(){return(Nj=a._Sigmoid=a.asm.Sa).apply(null,arguments)},Dj=a._Sin=function(){return(Dj=a._Sin=a.asm.Ta).apply(null,arguments)},Pj=a._Softmax=function(){return(Pj=a._Softmax=a.asm.Ua).apply(null,arguments)},Mj=a._SparseFillEmptyRows=function(){return(Mj=a._SparseFillEmptyRows=a.asm.Va).apply(null,arguments)},Ej=a._SparseReshape=function(){return(Ej=a._SparseReshape=a.asm.Wa).apply(null,arguments)},Rj=a._SparseSegmentReduction=function(){return(Rj=a._SparseSegmentReduction=a.asm.Xa).apply(null,arguments)},Fj=a._Sqrt=function(){return(Fj=a._Sqrt=a.asm.Ya).apply(null,arguments)},Lj=a._Square=function(){return(Lj=a._Square=a.asm.Za).apply(null,arguments)},Bj=a._SquaredDifference=function(){return(Bj=a._SquaredDifference=a.asm._a).apply(null,arguments)},$j=a._Step=function(){return($j=a._Step=a.asm.$a).apply(null,arguments)},Oj=a._StridedSlice=function(){return(Oj=a._StridedSlice=a.asm.ab).apply(null,arguments)},zj=a._Sub=function(){return(zj=a._Sub=a.asm.bb).apply(null,arguments)},Gj=a._Sum=function(){return(Gj=a._Sum=a.asm.cb).apply(null,arguments)},Uj=a._Tan=function(){return(Uj=a._Tan=a.asm.db).apply(null,arguments)},Wj=a._Tanh=function(){return(Wj=a._Tanh=a.asm.eb).apply(null,arguments)},Kj=a._Tile=function(){return(Kj=a._Tile=a.asm.fb).apply(null,arguments)},Vj=a._TopK=function(){return(Vj=a._TopK=a.asm.gb).apply(null,arguments)},jj=a._Transform=function(){return(jj=a._Transform=a.asm.hb).apply(null,arguments)},Hj=a._Transpose=function(){return(Hj=a._Transpose=a.asm.ib).apply(null,arguments)},qj=a.__FusedMatMul=function(){return(qj=a.__FusedMatMul=a.asm.jb).apply(null,arguments)},wl=a._malloc=function(){return(wl=a._malloc=a.asm.kb).apply(null,arguments)},pd=a._free=function(){return(pd=a._free=a.asm.lb).apply(null,arguments)},HN=a.___errno_location=function(){return(HN=a.___errno_location=a.asm.mb).apply(null,arguments)},qN=a._emscripten_get_global_libc=function(){return(qN=a._emscripten_get_global_libc=a.asm.ob).apply(null,arguments)},Ru=a._pthread_self=function(){return(Ru=a._pthread_self=a.asm.pb).apply(null,arguments)},XN=a.___pthread_tsd_run_dtors=function(){return(XN=a.___pthread_tsd_run_dtors=a.asm.qb).apply(null,arguments)},tb=a._emscripten_main_thread_process_queued_calls=function(){return(tb=a._emscripten_main_thread_process_queued_calls=a.asm.rb).apply(null,arguments)},Xj=a._emscripten_current_thread_process_queued_calls=function(){return(Xj=a._emscripten_current_thread_process_queued_calls=a.asm.sb).apply(null,arguments)},YN=a._emscripten_register_main_browser_thread_id=function(){return(YN=a._emscripten_register_main_browser_thread_id=a.asm.tb).apply(null,arguments)},QN=a._emscripten_main_browser_thread_id=function(){return(QN=a._emscripten_main_browser_thread_id=a.asm.ub).apply(null,arguments)},ZN=a.__emscripten_do_dispatch_to_thread=function(){return(ZN=a.__emscripten_do_dispatch_to_thread=a.asm.vb).apply(null,arguments)},JN=a._emscripten_sync_run_in_main_thread_4=function(){return(JN=a._emscripten_sync_run_in_main_thread_4=a.asm.wb).apply(null,arguments)},eD=a._emscripten_run_in_main_runtime_thread_js=function(){return(eD=a._emscripten_run_in_main_runtime_thread_js=a.asm.xb).apply(null,arguments)},Pk=a.__emscripten_call_on_thread=function(){return(Pk=a.__emscripten_call_on_thread=a.asm.yb).apply(null,arguments)},Yj=a._emscripten_tls_init=function(){return(Yj=a._emscripten_tls_init=a.asm.zb).apply(null,arguments)},Mk=a.__emscripten_thread_init=function(){return(Mk=a.__emscripten_thread_init=a.asm.Ab).apply(null,arguments)},md=a.stackSave=function(){return(md=a.stackSave=a.asm.Bb).apply(null,arguments)},Zp=a.stackRestore=function(){return(Zp=a.stackRestore=a.asm.Cb).apply(null,arguments)},Jp=a.stackAlloc=function(){return(Jp=a.stackAlloc=a.asm.Db).apply(null,arguments)},tD=a._emscripten_stack_set_limits=function(){return(tD=a._emscripten_stack_set_limits=a.asm.Eb).apply(null,arguments)},rD=a._memalign=function(){return(rD=a._memalign=a.asm.Fb).apply(null,arguments)},nD=a.__emscripten_allow_main_runtime_queued_calls=10208,em=a.__emscripten_main_thread_futex=10412;a.cwrap=Be,a.PThread=Me,a.PThread=Me,a.wasmMemory=se,a.ExitStatus=cd;var rb;function cd(w){this.name="ExitStatus",this.message="Program terminated with exit("+w+")",this.status=w}Cl=function w(){rb||Ek(),rb||(Cl=w)};function Ek(w){if(w=w||d,ms>0)return;if(k){u(a),Rg(),postMessage({cmd:"loaded"});return}if(Eg(),ms>0)return;function E(){rb||(rb=!0,a.calledRun=!0,!ye&&(Rg(),Fg(),u(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Lg()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),E()},1)):E()}a.run=Ek;function Qj(w,E){if(!(E&&ie&&w===0)){if(!E&&k)throw postMessage({cmd:"exitProcess",returnCode:w}),new cd(w);ie||(Me.terminateAllThreads(),fe=w,wn(),a.onExit&&a.onExit(w),ye=!0),h(w,new cd(w))}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();k&&(ie=!1,Me.initWorker()),Ek();var nb;p&&(nb={uncaughtException:process.listeners("uncaughtException").filter(function(w){return!p.uncaughtException.indexOf(w)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(w){return!p.unhandledRejection.indexOf(w)>-1})});var ob;if(typeof WasmBackendModule!="undefined")ob=WasmBackendModule;else if(typeof e!="undefined")ob=e;else throw new Error("Could not find wasm module in post.js");if(nb){var Zj=ob._dispose;ob._dispose=function(){Zj(),nb.uncaughtException.forEach(function(w){process.removeListener("uncaughtException",w)}),nb.unhandledRejection.forEach(function(w){process.removeListener("unhandledRejection",w)})}}return e.ready}}();typeof sT=="object"&&typeof zN=="object"?zN.exports=ON:typeof define=="function"&&define.amd?define([],function(){return ON}):typeof sT=="object"&&(sT.WasmBackendModuleThreadedSimd=ON)});var J4=Ar((aT,UN)=>{var GN=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};var t=typeof e!="undefined"?e:{},n,o;t.ready=new Promise(function(Q,ae){n=Q,o=ae});var s;typeof process!="undefined"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i={},a;for(a in t)t.hasOwnProperty(a)&&(i[a]=t[a]);var u=[],l="./this.program",p=function(Q,ae){throw ae},m=!1,c=!1,d=!1,f=!1;m=typeof window=="object",c=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f=!m&&!d&&!c;var h="";function g(Q){return t.locateFile?t.locateFile(Q,h):h+Q}var y,x,T,k,C,A;d?(c?h=Jc().dirname(h)+"/":h=__dirname+"/",y=function(ae,Ae){return C||(C=Gh()),A||(A=Jc()),ae=A.normalize(ae),C.readFileSync(ae,Ae?null:"utf8")},T=function(ae){var Ae=y(ae,!0);return Ae.buffer||(Ae=new Uint8Array(Ae)),j(Ae.buffer),Ae},process.argv.length>1&&(l=process.argv[1].replace(/\\/g,"/")),u=process.argv.slice(2),process.on("uncaughtException",function(Q){if(!(Q instanceof Nk))throw Q}),process.on("unhandledRejection",Un),p=function(Q){process.exit(Q)},t.inspect=function(){return"[Emscripten Module object]"}):f?(typeof read!="undefined"&&(y=function(ae){return read(ae)}),T=function(ae){var Ae;return typeof readbuffer=="function"?new Uint8Array(readbuffer(ae)):(Ae=read(ae,"binary"),j(typeof Ae=="object"),Ae)},typeof scriptArgs!="undefined"?u=scriptArgs:typeof arguments!="undefined"&&(u=arguments),typeof quit=="function"&&(p=function(Q){quit(Q)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(m||c)&&(c?h=self.location.href:typeof document!="undefined"&&document.currentScript&&(h=document.currentScript.src),r&&(h=r),h.indexOf("blob:")!==0?h=h.substr(0,h.lastIndexOf("/")+1):h="",y=function(Q){var ae=new XMLHttpRequest;return ae.open("GET",Q,!1),ae.send(null),ae.responseText},c&&(T=function(Q){var ae=new XMLHttpRequest;return ae.open("GET",Q,!1),ae.responseType="arraybuffer",ae.send(null),new Uint8Array(ae.response)}),x=function(Q,ae,Ae){var bt=new XMLHttpRequest;bt.open("GET",Q,!0),bt.responseType="arraybuffer",bt.onload=function(){if(bt.status==200||bt.status==0&&bt.response){ae(bt.response);return}Ae()},bt.onerror=Ae,bt.send(null)},k=function(Q){document.title=Q});var M=t.print||console.log.bind(console),D=t.printErr||console.warn.bind(console);for(a in i)i.hasOwnProperty(a)&&(t[a]=i[a]);i=null,t.arguments&&(u=t.arguments),t.thisProgram&&(l=t.thisProgram),t.quit&&(p=t.quit);var R;t.wasmBinary&&(R=t.wasmBinary);var B=t.noExitRuntime||!0;typeof WebAssembly!="object"&&Un("no native wasm support detected");var U,W=!1,K;function j(Q,ae){Q||Un("Assertion failed: "+ae)}function V(Q){var ae=t["_"+Q];return j(ae,"Cannot call unknown function "+Q+", make sure it is exported"),ae}function q(Q,ae,Ae,bt,mr){var rr={string:function(Wn){var Eu=0;if(Wn!=null&&Wn!==0){var eb=(Wn.length<<2)+1;Eu=id(eb),se(Wn,Eu,eb)}return Eu},array:function(Wn){var Eu=id(Wn.length);return ue(Wn,Eu),Eu}};function ut(Wn){return ae==="string"?oe(Wn):ae==="boolean"?Boolean(Wn):Wn}var pt=V(Q),Ur=[],Ni=0;if(bt)for(var Di=0;Di<bt.length;Di++){var Jg=rr[Ae[Di]];Jg?(Ni===0&&(Ni=Qg()),Ur[Di]=Jg(bt[Di])):Ur[Di]=bt[Di]}var ld=pt.apply(null,Ur);return ld=ut(ld),Ni!==0&&Zg(Ni),ld}function ee(Q,ae,Ae,bt){Ae=Ae||[];var mr=Ae.every(function(ut){return ut==="number"}),rr=ae!=="string";return rr&&mr&&!bt?V(Q):function(){return q(Q,ae,Ae,arguments,bt)}}var Z=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function te(Q,ae,Ae){for(var bt=ae+Ae,mr=ae;Q[mr]&&!(mr>=bt);)++mr;if(mr-ae>16&&Q.subarray&&Z)return Z.decode(Q.subarray(ae,mr));for(var rr="";ae<mr;){var ut=Q[ae++];if(!(ut&128)){rr+=String.fromCharCode(ut);continue}var pt=Q[ae++]&63;if((ut&224)==192){rr+=String.fromCharCode((ut&31)<<6|pt);continue}var Ur=Q[ae++]&63;if((ut&240)==224?ut=(ut&15)<<12|pt<<6|Ur:ut=(ut&7)<<18|pt<<12|Ur<<6|Q[ae++]&63,ut<65536)rr+=String.fromCharCode(ut);else{var Ni=ut-65536;rr+=String.fromCharCode(55296|Ni>>10,56320|Ni&1023)}}return rr}function oe(Q,ae){return Q?te(we,Q,ae):""}function ie(Q,ae,Ae,bt){if(!(bt>0))return 0;for(var mr=Ae,rr=Ae+bt-1,ut=0;ut<Q.length;++ut){var pt=Q.charCodeAt(ut);if(pt>=55296&&pt<=57343){var Ur=Q.charCodeAt(++ut);pt=65536+((pt&1023)<<10)|Ur&1023}if(pt<=127){if(Ae>=rr)break;ae[Ae++]=pt}else if(pt<=2047){if(Ae+1>=rr)break;ae[Ae++]=192|pt>>6,ae[Ae++]=128|pt&63}else if(pt<=65535){if(Ae+2>=rr)break;ae[Ae++]=224|pt>>12,ae[Ae++]=128|pt>>6&63,ae[Ae++]=128|pt&63}else{if(Ae+3>=rr)break;ae[Ae++]=240|pt>>18,ae[Ae++]=128|pt>>12&63,ae[Ae++]=128|pt>>6&63,ae[Ae++]=128|pt&63}}return ae[Ae]=0,Ae-mr}function se(Q,ae,Ae){return ie(Q,we,ae,Ae)}function ue(Q,ae){xe.set(Q,ae)}function ye(Q,ae){return Q%ae>0&&(Q+=ae-Q%ae),Q}var fe,xe,we,Fe,Be,Ue,Y,gt,It;function Nt(Q){fe=Q,t.HEAP8=xe=new Int8Array(Q),t.HEAP16=Fe=new Int16Array(Q),t.HEAP32=Ue=new Int32Array(Q),t.HEAPU8=we=new Uint8Array(Q),t.HEAPU16=Be=new Uint16Array(Q),t.HEAPU32=Y=new Uint32Array(Q),t.HEAPF32=gt=new Float32Array(Q),t.HEAPF64=It=new Float64Array(Q)}var Gt=t.INITIAL_MEMORY||16777216,ft,at=[],Ut=[],zn=[],pr=[],is=!1;Ut.push({func:function(){Og()}});function zr(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)Gr(t.preRun.shift());ms(at)}function us(){is=!0,ms(Ut)}function Sn(){ms(zn)}function Gn(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)so(t.postRun.shift());ms(pr)}function Gr(Q){at.unshift(Q)}function so(Q){pr.unshift(Q)}var br=0,ls=null,ps=null;function Il(Q){br++,t.monitorRunDependencies&&t.monitorRunDependencies(br)}function ed(Q){if(br--,t.monitorRunDependencies&&t.monitorRunDependencies(br),br==0&&(ls!==null&&(clearInterval(ls),ls=null),ps)){var ae=ps;ps=null,ae()}}t.preloadedImages={},t.preloadedAudios={};function Un(Q){t.onAbort&&t.onAbort(Q),Q+="",D(Q),W=!0,K=1,Q="abort("+Q+"). Build with -s ASSERTIONS=1 for more info.";var ae=new WebAssembly.RuntimeError(Q);throw o(ae),ae}function jp(Q,ae){return String.prototype.startsWith?Q.startsWith(ae):Q.indexOf(ae)===0}var td="data:application/octet-stream;base64,";function Eg(Q){return jp(Q,td)}var Rg="file://";function Fg(Q){return jp(Q,Rg)}var wn="tfjs-backend-wasm.wasm";Eg(wn)||(wn=g(wn));function Lg(Q){try{if(Q==wn&&R)return new Uint8Array(R);if(T)return T(Q);throw"both async and sync fetching of the wasm failed"}catch(ae){Un(ae)}}function lT(){if(!R&&(m||c)){if(typeof fetch=="function"&&!Fg(wn))return fetch(wn,{credentials:"same-origin"}).then(function(Q){if(!Q.ok)throw"failed to load wasm binary file at '"+wn+"'";return Q.arrayBuffer()}).catch(function(){return Lg(wn)});if(x)return new Promise(function(Q,ae){x(wn,function(Ae){Q(new Uint8Array(Ae))},ae)})}return Promise.resolve().then(function(){return Lg(wn)})}function pT(){var Q={a:_n};function ae(ut,pt){var Ur=ut.exports;t.asm=Ur,U=t.asm.h,Nt(U.buffer),ft=t.asm.Va,ed("wasm-instantiate")}Il("wasm-instantiate");function Ae(ut){ae(ut.instance)}function bt(ut){return lT().then(function(pt){return WebAssembly.instantiate(pt,Q)}).then(ut,function(pt){D("failed to asynchronously prepare wasm: "+pt),Un(pt)})}function mr(){return!R&&typeof WebAssembly.instantiateStreaming=="function"&&!Eg(wn)&&!Fg(wn)&&typeof fetch=="function"?fetch(wn,{credentials:"same-origin"}).then(function(ut){var pt=WebAssembly.instantiateStreaming(ut,Q);return pt.then(Ae,function(Ur){return D("wasm streaming compile failed: "+Ur),D("falling back to ArrayBuffer instantiation"),bt(Ae)})}):bt(Ae)}if(t.instantiateWasm)try{var rr=t.instantiateWasm(Q,ae);return rr}catch(ut){return D("Module.instantiateWasm callback failed with error: "+ut),!1}return mr().catch(o),{}}function ms(Q){for(;Q.length>0;){var ae=Q.shift();if(typeof ae=="function"){ae(t);continue}var Ae=ae.func;typeof Ae=="number"?ae.arg===void 0?ft.get(Ae)():ft.get(Ae)(ae.arg):Ae(ae.arg===void 0?null:ae.arg)}}function rd(){Un()}function Cl(Q,ae,Ae){we.copyWithin(Q,ae,ae+Ae)}function mT(){return we.length}function cT(Q){try{return U.grow(Q-fe.byteLength+65535>>>16),Nt(U.buffer),1}catch{}}function Ai(Q){var ae=mT(),Ae=2147483648;if(Q>Ae)return!1;for(var bt=1;bt<=4;bt*=2){var mr=ae*(1+.2/bt);mr=Math.min(mr,Q+100663296);var rr=Math.min(Ae,ye(Math.max(Q,mr),65536)),ut=cT(rr);if(ut)return!0}return!1}var vl={mappings:{},buffers:[null,[],[]],printChar:function(Q,ae){var Ae=vl.buffers[Q];ae===0||ae===10?((Q===1?M:D)(te(Ae,0)),Ae.length=0):Ae.push(ae)},varargs:void 0,get:function(){vl.varargs+=4;var Q=Ue[vl.varargs-4>>2];return Q},getStr:function(Q){var ae=oe(Q);return ae},get64:function(Q,ae){return Q}};function dT(Q){return 0}function Bg(Q,ae,Ae,bt,mr){}function fT(Q,ae,Ae,bt){for(var mr=0,rr=0;rr<Ae;rr++){for(var ut=Ue[ae+rr*8>>2],pt=Ue[ae+(rr*8+4)>>2],Ur=0;Ur<pt;Ur++)vl.printChar(Q,we[ut+Ur]);mr+=pt}return Ue[bt>>2]=mr,0}function $g(){return 28}var _n={a:rd,d:Cl,e:Ai,f:dT,c:Bg,b:fT,g:$g},hT=pT(),Og=t.___wasm_call_ctors=function(){return(Og=t.___wasm_call_ctors=t.asm.i).apply(null,arguments)},gT=t._init=function(){return(gT=t._init=t.asm.j).apply(null,arguments)},zg=t._init_with_threads_count=function(){return(zg=t._init_with_threads_count=t.asm.k).apply(null,arguments)},bT=t._get_threads_count=function(){return(bT=t._get_threads_count=t.asm.l).apply(null,arguments)},Hp=t._register_tensor=function(){return(Hp=t._register_tensor=t.asm.m).apply(null,arguments)},Du=t._dispose_data=function(){return(Du=t._dispose_data=t.asm.n).apply(null,arguments)},nd=t._dispose=function(){return(nd=t._dispose=t.asm.o).apply(null,arguments)},yT=t._Abs=function(){return(yT=t._Abs=t.asm.p).apply(null,arguments)},xT=t._Add=function(){return(xT=t._Add=t.asm.q).apply(null,arguments)},Gg=t._AddN=function(){return(Gg=t._AddN=t.asm.r).apply(null,arguments)},Me=t._All=function(){return(Me=t._All=t.asm.s).apply(null,arguments)},TT=t._Any=function(){return(TT=t._Any=t.asm.t).apply(null,arguments)},kT=t._ArgMax=function(){return(kT=t._ArgMax=t.asm.u).apply(null,arguments)},IT=t._AvgPool=function(){return(IT=t._AvgPool=t.asm.v).apply(null,arguments)},CT=t._BatchMatMul=function(){return(CT=t._BatchMatMul=t.asm.w).apply(null,arguments)},vT=t._Ceil=function(){return(vT=t._Ceil=t.asm.x).apply(null,arguments)},Sl=t._ClipByValue=function(){return(Sl=t._ClipByValue=t.asm.y).apply(null,arguments)},ST=t._Conv2D=function(){return(ST=t._Conv2D=t.asm.z).apply(null,arguments)},wT=t._Conv2DBackpropInput=function(){return(wT=t._Conv2DBackpropInput=t.asm.A).apply(null,arguments)},_T=t._Cos=function(){return(_T=t._Cos=t.asm.B).apply(null,arguments)},AT=t._Cosh=function(){return(AT=t._Cosh=t.asm.C).apply(null,arguments)},NT=t._CropAndResize=function(){return(NT=t._CropAndResize=t.asm.D).apply(null,arguments)},DT=t._Cumsum=function(){return(DT=t._Cumsum=t.asm.E).apply(null,arguments)},Ug=t._DepthToSpace=function(){return(Ug=t._DepthToSpace=t.asm.F).apply(null,arguments)},PT=t._DepthwiseConv2dNative=function(){return(PT=t._DepthwiseConv2dNative=t.asm.G).apply(null,arguments)},MT=t._Elu=function(){return(MT=t._Elu=t.asm.H).apply(null,arguments)},Pu=t._Equal=function(){return(Pu=t._Equal=t.asm.I).apply(null,arguments)},od=t._Exp=function(){return(od=t._Exp=t.asm.J).apply(null,arguments)},sd=t._FlipLeftRight=function(){return(sd=t._FlipLeftRight=t.asm.K).apply(null,arguments)},ET=t._Floor=function(){return(ET=t._Floor=t.asm.L).apply(null,arguments)},RT=t._FloorDiv=function(){return(RT=t._FloorDiv=t.asm.M).apply(null,arguments)},FT=t._FusedBatchNorm=function(){return(FT=t._FusedBatchNorm=t.asm.N).apply(null,arguments)},LT=t._FusedConv2D=function(){return(LT=t._FusedConv2D=t.asm.O).apply(null,arguments)},BT=t._FusedDepthwiseConv2D=function(){return(BT=t._FusedDepthwiseConv2D=t.asm.P).apply(null,arguments)},rt=t._Gather=function(){return(rt=t._Gather=t.asm.Q).apply(null,arguments)},$T=t._GatherNd=function(){return($T=t._GatherNd=t.asm.R).apply(null,arguments)},OT=t._Greater=function(){return(OT=t._Greater=t.asm.S).apply(null,arguments)},zT=t._GreaterEqual=function(){return(zT=t._GreaterEqual=t.asm.T).apply(null,arguments)},GT=t._LeakyRelu=function(){return(GT=t._LeakyRelu=t.asm.U).apply(null,arguments)},UT=t._Less=function(){return(UT=t._Less=t.asm.V).apply(null,arguments)},WT=t._LessEqual=function(){return(WT=t._LessEqual=t.asm.W).apply(null,arguments)},ad=t._Log=function(){return(ad=t._Log=t.asm.X).apply(null,arguments)},Wg=t._LogicalAnd=function(){return(Wg=t._LogicalAnd=t.asm.Y).apply(null,arguments)},Kg=t._Max=function(){return(Kg=t._Max=t.asm.Z).apply(null,arguments)},KT=t._MaxPool=function(){return(KT=t._MaxPool=t.asm._).apply(null,arguments)},VT=t._Maximum=function(){return(VT=t._Maximum=t.asm.$).apply(null,arguments)},jT=t._Mean=function(){return(jT=t._Mean=t.asm.aa).apply(null,arguments)},HT=t._Min=function(){return(HT=t._Min=t.asm.ba).apply(null,arguments)},qT=t._Minimum=function(){return(qT=t._Minimum=t.asm.ca).apply(null,arguments)},XT=t._MirrorPad=function(){return(XT=t._MirrorPad=t.asm.da).apply(null,arguments)},YT=t._Multiply=function(){return(YT=t._Multiply=t.asm.ea).apply(null,arguments)},Ct=t._Neg=function(){return(Ct=t._Neg=t.asm.fa).apply(null,arguments)},QT=t._NonMaxSuppressionV3=function(){return(QT=t._NonMaxSuppressionV3=t.asm.ga).apply(null,arguments)},ZT=t._NonMaxSuppressionV4=function(){return(ZT=t._NonMaxSuppressionV4=t.asm.ha).apply(null,arguments)},JT=t._NonMaxSuppressionV5=function(){return(JT=t._NonMaxSuppressionV5=t.asm.ia).apply(null,arguments)},qp=t._NotEqual=function(){return(qp=t._NotEqual=t.asm.ja).apply(null,arguments)},Vg=t._OneHot=function(){return(Vg=t._OneHot=t.asm.ka).apply(null,arguments)},jg=t._PadV2=function(){return(jg=t._PadV2=t.asm.la).apply(null,arguments)},Hg=t._Pow=function(){return(Hg=t._Pow=t.asm.ma).apply(null,arguments)},ek=t._Prelu=function(){return(ek=t._Prelu=t.asm.na).apply(null,arguments)},tk=t._Prod=function(){return(tk=t._Prod=t.asm.oa).apply(null,arguments)},qg=t._RealDiv=function(){return(qg=t._RealDiv=t.asm.pa).apply(null,arguments)},rk=t._Relu=function(){return(rk=t._Relu=t.asm.qa).apply(null,arguments)},nk=t._Relu6=function(){return(nk=t._Relu6=t.asm.ra).apply(null,arguments)},ok=t._ResizeBilinear=function(){return(ok=t._ResizeBilinear=t.asm.sa).apply(null,arguments)},sk=t._Reverse=function(){return(sk=t._Reverse=t.asm.ta).apply(null,arguments)},ak=t._RotateWithOffset=function(){return(ak=t._RotateWithOffset=t.asm.ua).apply(null,arguments)},Xg=t._Round=function(){return(Xg=t._Round=t.asm.va).apply(null,arguments)},Mu=t._Rsqrt=function(){return(Mu=t._Rsqrt=t.asm.wa).apply(null,arguments)},ik=t._ScatterNd=function(){return(ik=t._ScatterNd=t.asm.xa).apply(null,arguments)},uk=t._SelectV2=function(){return(uk=t._SelectV2=t.asm.ya).apply(null,arguments)},jN=t._Sigmoid=function(){return(jN=t._Sigmoid=t.asm.za).apply(null,arguments)},Yg=t._Sin=function(){return(Yg=t._Sin=t.asm.Aa).apply(null,arguments)},lk=t._Softmax=function(){return(lk=t._Softmax=t.asm.Ba).apply(null,arguments)},pk=t._SparseFillEmptyRows=function(){return(pk=t._SparseFillEmptyRows=t.asm.Ca).apply(null,arguments)},mk=t._SparseReshape=function(){return(mk=t._SparseReshape=t.asm.Da).apply(null,arguments)},ck=t._SparseSegmentReduction=function(){return(ck=t._SparseSegmentReduction=t.asm.Ea).apply(null,arguments)},dk=t._Sqrt=function(){return(dk=t._Sqrt=t.asm.Fa).apply(null,arguments)},fk=t._Square=function(){return(fk=t._Square=t.asm.Ga).apply(null,arguments)},hk=t._SquaredDifference=function(){return(hk=t._SquaredDifference=t.asm.Ha).apply(null,arguments)},gk=t._Step=function(){return(gk=t._Step=t.asm.Ia).apply(null,arguments)},bk=t._StridedSlice=function(){return(bk=t._StridedSlice=t.asm.Ja).apply(null,arguments)},yk=t._Sub=function(){return(yk=t._Sub=t.asm.Ka).apply(null,arguments)},xk=t._Sum=function(){return(xk=t._Sum=t.asm.La).apply(null,arguments)},Tk=t._Tan=function(){return(Tk=t._Tan=t.asm.Ma).apply(null,arguments)},kk=t._Tanh=function(){return(kk=t._Tanh=t.asm.Na).apply(null,arguments)},Ik=t._Tile=function(){return(Ik=t._Tile=t.asm.Oa).apply(null,arguments)},Ck=t._TopK=function(){return(Ck=t._TopK=t.asm.Pa).apply(null,arguments)},vk=t._Transform=function(){return(vk=t._Transform=t.asm.Qa).apply(null,arguments)},Sk=t._Transpose=function(){return(Sk=t._Transpose=t.asm.Ra).apply(null,arguments)},wk=t.__FusedMatMul=function(){return(wk=t.__FusedMatMul=t.asm.Sa).apply(null,arguments)},_k=t._malloc=function(){return(_k=t._malloc=t.asm.Ta).apply(null,arguments)},Ak=t._free=function(){return(Ak=t._free=t.asm.Ua).apply(null,arguments)},Qg=t.stackSave=function(){return(Qg=t.stackSave=t.asm.Wa).apply(null,arguments)},Zg=t.stackRestore=function(){return(Zg=t.stackRestore=t.asm.Xa).apply(null,arguments)},id=t.stackAlloc=function(){return(id=t.stackAlloc=t.asm.Ya).apply(null,arguments)};t.cwrap=ee;var Xp;function Nk(Q){this.name="ExitStatus",this.message="Program terminated with exit("+Q+")",this.status=Q}ps=function Q(){Xp||ud(),Xp||(ps=Q)};function ud(Q){if(Q=Q||u,br>0||(zr(),br>0))return;function ae(){Xp||(Xp=!0,t.calledRun=!0,!W&&(us(),Sn(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),Gn()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),ae()},1)):ae()}if(t.run=ud,t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();ud();var Yp;s&&(Yp={uncaughtException:process.listeners("uncaughtException").filter(function(Q){return!s.uncaughtException.indexOf(Q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Q){return!s.unhandledRejection.indexOf(Q)>-1})});var Qp;if(typeof e!="undefined")Qp=e;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Qp=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Yp){var Dk=Qp._dispose;Qp._dispose=function(){Dk(),Yp.uncaughtException.forEach(function(Q){process.removeListener("uncaughtException",Q)}),Yp.unhandledRejection.forEach(function(Q){process.removeListener("unhandledRejection",Q)})}}return e.ready}}();typeof aT=="object"&&typeof UN=="object"?UN.exports=GN:typeof define=="function"&&define.amd?define([],function(){return GN}):typeof aT=="object"&&(aT.WasmBackendModule=GN)});var sH=1e-7,aH=1e-4,Za=class{constructor(e,t){this.backend=e;this.dataMover=t;this.data=new WeakMap;this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},cs=class{refCount(e){return ao("refCount")}incRef(e){return ao("incRef")}timerAvailable(){return!0}time(e){return ao("time")}read(e){return ao("read")}readSync(e){return ao("readSync")}readToGPU(e,t){return ao("readToGPU")}numDataIds(){return ao("numDataIds")}disposeData(e,t){return ao("disposeData")}write(e,t,n){return ao("write")}move(e,t,n,o,s){return ao("move")}memory(){return ao("memory")}floatPrecision(){return ao("floatPrecision")}epsilon(){return this.floatPrecision()===32?sH:aH}dispose(){return ao("dispose")}};function ao(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function aD(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,ab(r,e,t)}function iH(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ab(r,t,n),ab(e,t,n)}function nm(r,e,t){return Math.max(r,Math.min(e,t))}function uH(r){return r%2==0?r:r+1}function ab(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function lH(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function pH(r,e){let t=Math.random();return e*t+(1-t)*r}function mH(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function P(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Wt(r,e,t=""){P(Kn(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function io(r){P(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function na(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||Ir(r)&&!t)for(let n=0;n<r.length;++n)na(r[n],e,t);else e.push(r);return e}function nt(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function cH(r){return r.length===0}function Kn(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Pi(r){return r%1==0}function dH(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function fH(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function hH(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return aD(e),e}function Al(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function gH(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,i=()=>{if(r()){n();return}s++;let a=e(s);if(t!=null&&s>=t){o();return}setTimeout(i,a)};i()})}function bH(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function yr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),P(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),P(r.every(n=>Pi(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function Rk(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:yr(e,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(t.push(r[a]),n.push(a)),s[i]<=a&&i++}r[a]!==1&&(t.push(r[a]),n.push(a))}return{newShape:t,keptDims:n}}function Fk(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Lk(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Bk(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function $k(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function yH(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function Ir(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function ib(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function Ok(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function oa(r){return typeof r=="string"||r instanceof String}function iD(r){return typeof r=="boolean"}function uD(r){return typeof r=="number"}function om(r){return Array.isArray(r)?om(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":uD(r)?"float32":oa(r)?"string":iD(r)?"bool":"float32"}function Ja(r){return!!(r&&r.constructor&&r.call&&r.apply)}function sm(r,e){for(let t=e;t<r;++t)if(r%t==0)return t;return r}function ei(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function lD(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let i=0;i<s;i++)o[i]=t[r+i]}else{let s=e[0],i=e.slice(1),a=i.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=lD(r+u*a,i,t,n)}return o}function Nl(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return lD(0,r,e,t)}function dd(r,e){let t=am(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function am(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function xH(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return Nl(r,new Float32Array(t));if(e==="int32")return Nl(r,new Int32Array(t));if(e==="bool")return Nl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function fd(r){r.forEach(e=>{P(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function TH(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function kH(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function hd(r){return r&&r.then&&typeof r.then=="function"}var pD="tfjsflags",ub=class{constructor(e){this.global=e;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=CH;this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&($().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(hd(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);pD in e&&e[pD].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=SH(o,s)})}};function CH(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(vH(e,n[0],n[1]),n.join("="))),e}function vH(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function SH(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function $(){return zk}var zk=null;function mD(r){zk=r}var Gk;function Uk(){if(Gk==null){let r;if(typeof window!="undefined")r=window;else if(typeof global!="undefined")r=global;else if(typeof process!="undefined")r=process;else if(typeof self!="undefined")r=self;else throw new Error("Could not find a global object");Gk=r}return Gk}function wH(){let r=Uk();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function gd(r,e){let t=wH();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var ds="Abs",Mi="Acos",Ei="Acosh",An="Add",uo="AddN",Ri="All",Fi="Any",lo="ArgMax",ti="ArgMin",Li="Asin",Bi="Asinh",$i="Atan",Oi="Atanh",zi="Atan2",po="AvgPool",im="AvgPoolGrad",Lu="AvgPool3D",um="AvgPool3DGrad",mo="BatchMatMul",fs="BatchToSpaceND",lm="Bincount",cD="BroadcastTo",pm="BroadcastArgs",Vn="Cast",co="Ceil",jn="ClipByValue",Bu="Complex",$u="ComplexAbs",hs="Concat",fo="Conv2D",mm="Conv2DBackpropFilter",ho="Conv2DBackpropInput",Ou="Conv3D",cm="Conv3DBackpropFilterV2",dm="Conv3DBackpropInputV2",go="Cos",bo="Cosh",sa="Cumsum",aa="CropAndResize",fm="DenseBincount",ia="DepthToSpace",yo="DepthwiseConv2dNative",hm="DepthwiseConv2dNativeBackpropFilter",gm="DepthwiseConv2dNativeBackpropInput",bm="Diag",zu="Dilation2D",bd="Dilation2DBackpropInput",yd="Dilation2DBackpropFilter",xo="RealDiv",Gu="Einsum",To="Elu",ym="EluGrad",Gi="Erf",ua="Equal",ko="Exp",gs="ExpandDims",la="Expm1",xm="FFT",ri="Fill",pa="FlipLeftRight",Io="Floor",Co="FloorDiv",vo="FusedBatchNorm",bs="GatherV2",ma="GatherNd",ca="Greater",So="GreaterEqual",Hn="Identity",Tm="IFFT",Uu="Imag",Ui="IsFinite",Wi="IsInf",Ki="IsNan",wo="LeakyRelu",da="Less",fa="LessEqual",km="LinSpace",_o="Log",Vi="Log1p",ha="LogicalAnd",ji="LogicalNot",Dl="LogicalOr",dD="LogSoftmax",Wu="LRN",Im="LRNGrad",Ao="Max",No="Maximum",Do="MaxPool",Cm="MaxPoolGrad",Ku="MaxPool3D",vm="MaxPool3DGrad",Sm="MaxPoolWithArgmax",Po="Mean",Mo="Min",Eo="Minimum",Ro="MirrorPad",Hi="Mod",wm="Multinomial",Fo="Multiply",ys="Neg",ga="NotEqual",ba="NonMaxSuppressionV3",qi="NonMaxSuppressionV4",ya="NonMaxSuppressionV5",xs="OnesLike",xa="OneHot",Ts="Pack",Lo="PadV2",$de="Pool",Bo="Pow",$o="Prelu",Ta="Prod",ni="Range",Vu="Real",Xi="Reciprocal",Oo="Relu",ks="Reshape",oi="ResizeNearestNeighbor",_m="ResizeNearestNeighborGrad",zo="ResizeBilinear",Am="ResizeBilinearGrad",Go="Relu6",ka="Reverse",Ia="Round",Uo="Rsqrt",Ca="ScatterNd",Is="Select",Yi="Selu",Cs="Slice",Wo="Sin",va="Sinh",Qi="Sign",Ko="Sigmoid",Zi="Softplus",Vo="Sqrt",jo="Sum",vs="SpaceToBatchND",Ss="SplitV",Ho="Softmax",ju="SparseFillEmptyRows",Ji="SparseReshape",Hu="SparseSegmentMean",qu="SparseSegmentSum",Xu="SparseToDense",qo="SquaredDifference",si="Square",Sa="StridedSlice",Yu="StringNGrams",Nm="StringSplit",Dm="StringToHashBucketFast",Xo="Sub",wa="Tan",Yo="Tanh",Nn="Tile",_a="TopK",Aa="Transform",Qo="Transpose",Pm="Unique",ws="Unpack",Qu="UnsortedSegmentSum",_s="ZerosLike",As="Step",Pl="FromPixels",Na="RotateWithOffset",Ns="_FusedMatMul",Ds="FusedConv2D",Ps="FusedDepthwiseConv2D";function ai(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(...r)}function _H(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.log(...r)}var Mm=gd("kernelRegistry",()=>new Map),xd=gd("gradRegistry",()=>new Map);function Td(r,e){let t=Kk(r,e);return Mm.get(t)}function Wk(r){return xd.get(r)}function lb(r){let e=Mm.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,i]=o,[a]=s.split("_");a===r&&t.push(i)}return t}function eu(r){let{kernelName:e,backendName:t}=r,n=Kk(e,t);Mm.has(n)&&ai(`The kernel '${e}' for backend '${t}' is already registered`),Mm.set(n,r)}function hD(r){let{kernelName:e}=r;xd.has(e)&&$().getBool("DEBUG")&&ai(`Overriding the gradient for '${e}'`),xd.set(e,r)}function Wde(r,e){let t=Kk(r,e);if(!Mm.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);Mm.delete(t)}function Kde(r){if(!xd.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);xd.delete(r)}function Vde(r,e){lb(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});eu(o)})}function Kk(r,e){return`${e}_${r}`}var b={};Xe(b,{arraysEqual:()=>Kn,assert:()=>P,assertNonNegativeIntegerDimensions:()=>fd,assertNonNull:()=>io,assertShapesMatch:()=>Wt,bytesFromStringArray:()=>Ok,bytesPerElement:()=>ib,checkConversionForErrors:()=>Bk,clamp:()=>nm,computeStrides:()=>ei,createScalarValue:()=>RH,createShuffledIndices:()=>hH,decodeString:()=>Lm,distSquared:()=>mH,encodeString:()=>Ju,fetch:()=>LH,fingerPrint64:()=>EH,flatten:()=>na,getArrayFromDType:()=>Lk,getTypedArrayFromDType:()=>Fk,hasEncodingLoss:()=>yH,hexToLong:()=>kd,indexToLoc:()=>kH,inferDtype:()=>om,inferFromImplicitShape:()=>bH,isBoolean:()=>iD,isFunction:()=>Ja,isInt:()=>Pi,isNumber:()=>uD,isPromise:()=>hd,isScalarShape:()=>cH,isString:()=>oa,isTypedArray:()=>Ir,isValidDtype:()=>$k,locToIndex:()=>TH,makeOnesTypedArray:()=>dd,makeZerosNestedTypedArray:()=>xH,makeZerosTypedArray:()=>am,nearestDivisor:()=>sm,nearestLargerEven:()=>uH,now:()=>Ll,parseAxisParam:()=>yr,randUniform:()=>pH,repeatedTry:()=>gH,rightPad:()=>Al,shuffle:()=>aD,shuffleCombo:()=>iH,sizeFromShape:()=>nt,sizeToSquarishShape:()=>fH,squeezeShape:()=>Rk,sum:()=>lH,swap:()=>ab,tanh:()=>dH,toNestedArray:()=>Nl,toTypedArray:()=>Fm});var Hk=_l(wD());var Rl=Hk.default||Hk;function kd(r){return Rl.fromString(r,!0,16)}var _D=kd("c3a5c85c97cb3127"),Fl=kd("b492b66fbe98f273"),un=kd("9ae16a3b2f90404f");function qk(r){return r.xor(r.shru(47))}function AD(r,e,t){let n=r.slice(e,e+t);return Rl.fromBytes(Array.from(n),!0,!0)}function qt(r,e){return AD(r,e,8)}function ND(r,e){return AD(r,e,4)}function Rr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Zu(r,e,t=kd("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function NH(r,e,t,n,o,s){o=o.add(r),s=Rr(s.add(o).add(n),21);let i=o;return o=o.add(e),o=o.add(t),s=s.add(Rr(o,44)),[o.add(n),s.add(i)]}function mb(r,e,t,n){return NH(qt(r,e),qt(r,e+8),qt(r,e+16),qt(r,e+24),t,n)}function DH(r,e=r.length){if(e>=8){let t=un.add(e*2),n=qt(r,0).add(un),o=qt(r,e-8),s=Rr(o,37).mul(t).add(n),i=Rr(n,25).add(o).mul(t);return Zu(s,i,t)}if(e>=4){let t=un.add(e*2),n=ND(r,0);return Zu(n.shl(3).add(e),ND(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),i=e+(o<<2);return qk(un.mul(s).xor(_D.mul(i))).mul(un)}return un}function PH(r,e=r.length){let t=un.add(e*2),n=qt(r,0).mul(Fl),o=qt(r,8),s=qt(r,e-8).mul(t),i=qt(r,e-16).mul(un);return Zu(Rr(n.add(o),43).add(Rr(s,30)).add(i),n.add(Rr(o.add(un),18)).add(s),t)}function MH(r,e=r.length){let t=un.add(e*2),n=qt(r,0).mul(un),o=qt(r,8),s=qt(r,e-8).mul(t),i=qt(r,e-16).mul(un),a=Rr(n.add(o),43).add(Rr(s,30)).add(i),u=Zu(a,n.add(Rr(o.add(un),18)).add(s),t),l=qt(r,16).mul(t),p=qt(r,24),m=a.add(qt(r,e-32)).mul(t),c=u.add(qt(r,e-24)).mul(t);return Zu(Rr(l.add(p),43).add(Rr(m,30)).add(c),l.add(Rr(p.add(n),18)).add(m),t)}function EH(r,e=r.length){let t=Rl.fromNumber(81,!0);if(e<=32)return e<=16?DH(r,e):PH(r,e);if(e<=64)return MH(r,e);let n=t,o=t.mul(Fl).add(113),s=qk(o.mul(un).add(113)).mul(un),i=[Rl.UZERO,Rl.UZERO],a=[Rl.UZERO,Rl.UZERO];n=n.mul(un).add(qt(r,0));let u=0,l=(e-1>>6)*64,p=l+(e-1&63)-63;do n=Rr(n.add(o).add(i[0]).add(qt(r,u+8)),37).mul(Fl),o=Rr(o.add(i[1]).add(qt(r,u+48)),42).mul(Fl),n=n.xor(a[1]),o=o.add(i[0]).add(qt(r,u+40)),s=Rr(s.add(a[0]),33).mul(Fl),i=mb(r,u,i[1].mul(Fl),n.add(a[0])),a=mb(r,u+32,s.add(a[1]),o.add(qt(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let m=Fl.add(s.and(255).shl(1));return u=p,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),n=Rr(n.add(o).add(i[0]).add(qt(r,u+8)),37).mul(m),o=Rr(o.add(i[1]).add(qt(r,u+48)),42).mul(m),n=n.xor(a[1].mul(9)),o=o.add(i[0].mul(9).add(qt(r,u+40))),s=Rr(s.add(a[0]),33).mul(m),i=mb(r,u,i[1].mul(m),n.add(a[0])),a=mb(r,u+32,s.add(a[1]),o.add(qt(r,u+16))),[s,n]=[n,s],Zu(Zu(i[0],a[0],m).add(qk(o).mul(_D)).add(s),Zu(i[1],a[1],m).add(n),m)}function RH(r,e){return e==="string"?Ju(r):Fm([r],e)}function FH(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Fm(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=na(r)),$().getBool("DEBUG")&&Bk(r,e),FH(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Ll(){return $().platform.now()}function LH(r,e){return $().platform.fetch(r,e)}function Ju(r,e="utf-8"){return e=e||"utf-8",$().platform.encode(r,e)}function Lm(r,e="utf-8"){return e=e||"utf-8",$().platform.decode(r,e)}var Xk=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new DD)}profileKernel(e,t,n){let o,s=()=>{o=n()},i,a=Ll();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();i=Promise.resolve({kernelMs:Ll()-a})}if($().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let p=o[l];p.data().then(m=>{BH(m,p.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:i.then(l=>l.kernelMs),extraInfo:i.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:i}=e;n.forEach(a=>{Promise.all([a.data(),o,i]).then(u=>{this.logger.logKernelProfile(t,a,u[0],u[1],s,u[2])})})}};function BH(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var DD=class{logKernelProfile(e,t,n,o,s,i){let a=typeof o=="number"?Al(`${o}ms`,9):o.error,u=Al(e,25),l=t.rank,p=t.size,m=Al(t.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||t.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${a}	%c${l}D ${m}	%c${p}	%c${c}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function PD(r,e,t){let n={},o={};for(let u=0;u<e.length;u++)n[e[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],p=l.inputs;for(let m in p){let c=p[m],d=!1;for(let f=0;f<e.length;f++)if(n[c.id]){l.outputs.forEach(h=>n[h.id]=!0),d=!0,o[l.id]=!0;break}if(d)break}}let s={};s[t.id]=!0;let i={};for(let u=r.length-1;u>=0;u--){let l=r[u],p=l.inputs;for(let m=0;m<l.outputs.length;m++)if(s[l.outputs[m].id]){for(let c in p)s[p[c].id]=!0,i[l.id]=!0;break}}let a=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&i[l.id]){let p={};for(let c in l.inputs){let d=l.inputs[c];n[d.id]&&(p[c]=d)}let m=Object.assign({},l);m.inputs=p,m.outputs=l.outputs,a.push(m)}}return a}function MD(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],i=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?i.push(l):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let u in s.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);let l=t(()=>a[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let p=s.inputs[u];if(!Kn(l.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${p.shape}'`);if(r[p.id]==null)r[p.id]=l;else{let m=r[p.id];r[p.id]=n(m,l),m.dispose()}}}}var ED=20,Id=3,Yk=7;function RD(r,e,t,n){let o=ei(e),s=$H(r,e,t,o),i=e.length,a=cb(r,e,t,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${i}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(a.map(l=>"    "+l).join(`
`)),u.join(`
`)}function $H(r,e,t,n){let o=nt(e),s=n[n.length-1],i=new Array(s).fill(0),a=e.length,u=t==="complex64"?vd(r):r;if(a>1)for(let l=0;l<o/s;l++){let p=l*s;for(let m=0;m<s;m++)i[m]=Math.max(i[m],Cd(u[p+m],0,t).length)}return i}function Cd(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(Yk))} + ${parseFloat(r[1].toFixed(Yk))}j`:oa(r)?n=`'${r}'`:t==="bool"?n=FD(r):n=parseFloat(r.toFixed(Yk)).toString(),Al(n,e)}function FD(r){return r===0?"false":"true"}function cb(r,e,t,n,o,s=!0){let i=t==="complex64"?2:1,a=e[0],u=e.length;if(u===0){if(t==="complex64"){let h=vd(r);return[Cd(h[0],0,t)]}return t==="bool"?[FD(r[0])]:[r[0].toString()]}if(u===1){if(a>ED){let g=Id*i,y=Array.from(r.slice(0,g)),x=Array.from(r.slice((a-Id)*i,a*i));return t==="complex64"&&(y=vd(y),x=vd(x)),["["+y.map((T,k)=>Cd(T,o[k],t)).join(", ")+", ..., "+x.map((T,k)=>Cd(T,o[a-Id+k],t)).join(", ")+"]"]}let h=t==="complex64"?vd(r):Array.from(r);return["["+h.map((g,y)=>Cd(g,o[y],t)).join(", ")+"]"]}let l=e.slice(1),p=n.slice(1),m=n[0]*i,c=[];if(a>ED){for(let h=0;h<Id;h++){let g=h*m,y=g+m;c.push(...cb(r.slice(g,y),l,t,p,o,!1))}c.push("...");for(let h=a-Id;h<a;h++){let g=h*m,y=g+m;c.push(...cb(r.slice(g,y),l,t,p,o,h===a-1))}}else for(let h=0;h<a;h++){let g=h*m,y=g+m;c.push(...cb(r.slice(g,y),l,t,p,o,h===a-1))}let d=u===2?",":"";c[0]="["+c[0]+d;for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<u;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function vd(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var yt=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=nt(e),n!=null){let o=n.length;P(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Lk(t,this.size),this.strides=ei(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Pa().makeTensor(this.values,this.shape,this.dtype)}},Pa=null,Bm=null,OH=null;function LD(r){Pa=r}function BD(r){Bm=r}function $D(r){OH=r}var Ye=class{constructor(e,t,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=e.slice(),this.dtype=t||"float32",this.size=nt(e),this.strides=ei(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Bm.buffer(this.shape,this.dtype,e)}bufferSync(){return Bm.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Nl(this.shape,e,this.dtype==="complex64")}arraySync(){return Nl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Pa().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Lm(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Pa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Pa().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Lm(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Pa().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Pa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Bm.print(this,e)}clone(){return this.throwIfDisposed(),Bm.clone(this)}toString(e=!1){let t=this.dataSync();return RD(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Bm.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Pa().makeVariable(this,e,t,n)}};Object.defineProperty(Ye,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function zH(){return gd("Tensor",()=>Ye)}zH();var el=class extends Ye{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t;this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Kn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Pa().disposeTensor(this),this.dataId=e.dataId,Pa().incRef(this,null)}dispose(){Pa().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(el,Symbol.hasInstance,{value:r=>r instanceof Ye&&r.assign!=null&&r.assign instanceof Function});var Fs={};Xe(Fs,{assertTypesMatch:()=>Qk,getTensorsInContainer:()=>Sd,isTensorInList:()=>UH,makeTypesMatch:()=>Qe});var OD=(a=>(a.R0="R0",a.R1="R1",a.R2="R2",a.R3="R3",a.R4="R4",a.R5="R5",a.R6="R6",a))(OD||{}),zD=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(zD||{}),GD=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(GD||{}),UD=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(UD||{}),WD=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(WD||{}),GH={float32:UD,int32:zD,bool:GD,complex64:WD};function Kt(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return GH[r][e]}function tu(r){return Kt(r,"int32")}function Qe(r,e){if(r.dtype===e.dtype)return[r,e];let t=Kt(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function Qk(r,e){P(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function UH(r,e){return e.some(t=>t.id===r.id)}function Sd(r){let e=[];return KD(r,e,new Set),e}function KD(r,e,t){if(r==null)return;if(r instanceof Ye){e.push(r);return}if(!WH(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),KD(s,e,t))}}function WH(r){return Array.isArray(r)||typeof r=="object"}function Zk(r){return r.kernelName!=null}var Jk=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},fb=class{constructor(e){this.ENV=e;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new Jk}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ai(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Xk(this.backendInstance),!0}setupRegisteredKernels(){lb(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){lb(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof cs)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(i=>o<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,ai(`Initialization of backend ${e} failed`),ai(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return ai(`Initialization of backend ${e} failed`),ai(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),i=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return fb.nextTensorId++}nextVariableId(){return fb.nextVariableId++}clone(e){let t=N.runKernel(Hn,{x:e}),n={x:e},o=i=>({x:()=>{let a="float32",u={x:i},l={dtype:a};return N.runKernel(Vn,u,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Td(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=o-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u,l=Zk(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Zk(e)){let{kernelName:f,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let y=Td(f,this.backendName);P(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{let x=this.backend.numDataIds();u=y.kernelFunc({inputs:h,attrs:g,backend:this.backend});let T=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,T);let k=T.map(C=>{if(C.rank!=null)return C;let{dataId:A,shape:M,dtype:D}=C;return this.makeTensorFromDataId(A,M,D)});if(o){let C=this.getTensorsForGradient(f,h,k);n=this.saveTensorsForBackwardMode(C)}return k}}else{let{forwardFunc:f}=e,h=g=>{!o||(n=g.map(y=>this.keep(this.clone(y))))};a=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,h));let y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,y),y}}let{inputs:p,attrs:m}=e,c=Zk(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(d=this.profiler.profileKernel(l,p,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),o&&this.addTapeNode(l,p,t,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(f=>p[f]!=null?p[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=Wk(e);if(o!=null){let s=o.inputsToSave||[],i=o.outputsToSave||[],a;o.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(l=>t[l])):a=s.map(l=>t[l]);let u=n.filter((l,p)=>i[p]);return a.concat(u)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&oa(e[0])&&(s=e.map(u=>Ju(u)));let i=o.write(s,t,n),a=new Ye(t,n,i,this.nextTensorId());if(this.trackTensor(a,o),n==="string"){let u=this.state.tensorInfo.get(i),l=Ok(s);this.state.numBytes+=l-u.bytes,u.bytes=l}return a}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s=new Ye(t,n,e,this.nextTensorId());return this.trackTensor(s,o),s}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new el(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*ib(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof el||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*ib(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,i){let a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=Wk(e);u!=null&&(o=u.gradFunc),o!=null&&(a.gradient=l=>(l=l.map((p,m)=>{if(p==null){let c=n[m],d=am(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return p}),o(l.length>1?l:l[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Sd(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!n.has(i.id)&&i.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(s instanceof Ye,()=>"The result y returned by f() must be a tensor.");let i=PD(this.state.activeTape,t,s);if(!o&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let a={};a[s.id]=n??KH(s.shape),MD(a,i,l=>this.tidy(l),VH);let u=t.map(l=>a[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let p of l.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return P(Ja(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(a=>a instanceof Ye),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((a,u)=>{o[u]=a});let s=(a,u)=>(n=e(...t,u),P(n.value instanceof Ye,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Ja(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),i=(a,u)=>{let l=n.gradFunc(a,u),p=Array.isArray(l)?l:[l];P(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(p.every(c=>c instanceof Ye),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return p.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Ll(),n=await this.backend.time(e);return n.wallMs=Ll()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Jk;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},db=fb;db.nextTensorId=0,db.nextVariableId=0;function KH(r){let e=dd(nt(r),"float32");return N.makeTensor(e,r,"float32")}function eI(){let r=Uk();if(r._tfengine==null){let e=new ub(r);r._tfengine=new db(e)}return mD(r._tfengine.ENV),LD(()=>r._tfengine),r._tfengine}var N=eI();function VH(r,e){let t={a:r,b:e};return N.runKernel(An,t)}var ii={};Xe(ii,{isBrowser:()=>rI,isMobile:()=>qH,mockIsMobile:()=>HH});function jH(){return typeof navigator!="undefined"&&navigator!=null}var tI;function HH(r){tI=r}function qH(r){if(tI!==void 0)return tI;if(r||jH()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window!="undefined"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function rI(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Ma=$();Ma.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ma.registerFlag("IS_BROWSER",()=>rI());Ma.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Ma.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ma.registerFlag("PROD",()=>!1);Ma.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ma.getBool("DEBUG"));Ma.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ma.registerFlag("IS_TEST",()=>!1);Ma.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ma.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Wr(r,e){let t=r;if(Ir(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||Ir(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&$().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&VD(r,n,[]),n}function VD(r,e,t){if(t=t||[],!Array.isArray(r)&&!Ir(r)){P(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}P(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),P(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)VD(r[o],n,t.concat(o))}function jD(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function v(r,e,t,n="numeric"){if(r instanceof Ye)return jD(n,r.dtype,e,t),r;let o=om(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),jD(n,o,e,t),r==null||!Ir(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}let s=Wr(r,o);!Ir(r)&&!Array.isArray(r)&&(r=[r]);let a=o!=="string"?Fm(r,o):na(r,[],!0);return N.makeTensor(a,s,o)}function ru(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>v(s,`${e}[${i}]`,t,n))}var HD="__op";function _(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+HD;let o=(...s)=>{N.startScope(t);try{let i=n(...s);return hd(i)&&console.error("Cannot return a Promise inside of tidy."),N.endScope(i),i}catch(i){throw N.endScope(null),i}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function XH(r,e){let t=v(r,"real","complex"),n=v(e,"imag","complex");Wt(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return N.runKernel(Bu,o)}var Yn=_({complex_:XH});function ln(r,e,t,n){if(n==null&&(n=om(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ir(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){fd(e);let o=nt(e),s=nt(t);P(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let i=0;i<t.length;++i){let a=t[i],u=i===t.length-1?a!==nt(e.slice(i)):!0;P(t[i]===e[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Ir(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?Fm(r,n):na(r,[],!0),N.makeTensor(r,e,n)}function Fr(r,e,t){let n=Wr(r,t);return ln(r,e,n,t)}var wd={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var hb=4;async function qD(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<o.length;++i){let a=o[i],u=Array.isArray(r)?r[i].tensor:r[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);let l={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let p=new Promise(async m=>{let c=await u.bytes(),d=c.reduce((g,y)=>g+y.length,0)+hb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let y=c[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,h),h+=hb,f.set(y,h),h+=y.length}m(f)});n.push(p)}else n.push(u.data());e!=null&&(l.group=e),t.push(l)}let s=await Promise.all(n);return{data:YH(s),specs:t}}function gb(r,e){let t={},n,o=0;for(let s of e){let i=s.name,a=s.dtype,u=s.shape,l=nt(u),p;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=wd[m.dtype],d=r.slice(o,o+l*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(a==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){p=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=eq()),p=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(a==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);p=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=l*c}else if(a==="string"){let m=nt(s.shape);p=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+hb))[0];o+=hb;let f=new Uint8Array(r.slice(o,o+d));p.push(f),o+=d}}else{let m=wd[a],c=r.slice(o,o+l*m);if(a==="float32")p=new Float32Array(c);else if(a==="int32")p=new Int32Array(c);else if(a==="bool")p=new Uint8Array(c);else if(a==="complex64"){p=new Float32Array(c);let d=new Float32Array(p.length/2),f=new Float32Array(p.length/2);for(let y=0;y<d.length;y++)d[y]=p[y*2],f[y]=p[y*2+1];let h=Fr(d,u,"float32"),g=Fr(f,u,"float32");t[i]=Yn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=l*m}a!=="complex64"&&(t[i]=Fr(p,u,a))}return t}function YH(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var nI=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function XD(r){return nI?Buffer.byteLength(r):new Blob([r]).size}function YD(r){if(nI)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function QD(r){if(nI){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function $m(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function oI(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function bb(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}async function Om(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await e(r.weightsManifest);t.weightSpecs=n,t.weightData=o}return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),t}function ui(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:XD(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:XD(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function QH(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)==0;)o-=8388608,n<<=1;return n&=~8388608,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function ZH(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function JH(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function eq(){let r=QH(),e=ZH(),t=JH();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let i=0;i<n.length;i++){let a=n[i],u=r[t[a>>10]+(a&1023)]+e[a>>10];s[i]=u}return new Float32Array(o)}}var Rt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Rt.instance==null&&(Rt.instance=new Rt),Rt.instance}static registerSaveRouter(e){Rt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Rt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Rt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Rt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Rt.getInstance().loadRouters:Rt.getInstance().saveRouters).forEach(i=>{let a=i(e,n);a!==null&&o.push(a)}),o}},ZD=r=>Rt.registerSaveRouter(r),JD=r=>Rt.registerLoadRouter(r),e0=r=>Rt.getSaveHandlers(r),t0=(r,e)=>Rt.getLoadHandlers(r,e);var sI="tensorflowjs",aI=1,Bl="models_store",tl="model_info_store";function r0(){if(!$().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window=="undefined"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function iI(r){let e=r.result;e.createObjectStore(Bl,{keyPath:"modelPath"}),e.createObjectStore(tl,{keyPath:"modelPath"})}var nu=class{constructor(e){if(this.indexedDB=r0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(sI,aI);s.onupgradeneeded=()=>iI(s),s.onsuccess=()=>{let i=s.result;if(t==null){let a=i.transaction(Bl,"readonly"),l=a.objectStore(Bl).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=p=>(i.close(),o(l.error)),a.oncomplete=()=>i.close()}else{let a=ui(t),u=i.transaction(tl,"readwrite"),l=u.objectStore(tl),p=l.put({modelPath:this.modelPath,modelArtifactsInfo:a}),m;p.onsuccess=()=>{m=i.transaction(Bl,"readwrite");let d=m.objectStore(Bl).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a});d.onsuccess=()=>n({modelArtifactsInfo:a}),d.onerror=f=>{l=u.objectStore(tl);let h=l.delete(this.modelPath);h.onsuccess=()=>(i.close(),o(d.error)),h.onerror=g=>(i.close(),o(d.error))}},p.onerror=c=>(i.close(),o(p.error)),u.oncomplete=()=>{m==null?i.close():m.oncomplete=()=>i.close()}}},s.onerror=i=>o(s.error)})}};nu.URL_SCHEME="indexeddb://";var n0=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(nu.URL_SCHEME)?tq(r.slice(nu.URL_SCHEME.length)):null;Rt.registerSaveRouter(n0);Rt.registerLoadRouter(n0);function tq(r){return new nu(r)}function rq(r){return r.startsWith(nu.URL_SCHEME)?r.slice(nu.URL_SCHEME.length):r}var uI=class{constructor(){this.indexedDB=r0()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(sI,aI);n.onupgradeneeded=()=>iI(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(tl,"readonly"),a=s.objectStore(tl).getAll();a.onsuccess=()=>{let u={};for(let l of a.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},a.onerror=u=>(o.close(),t(a.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=rq(e),new Promise((t,n)=>{let o=this.indexedDB.open(sI,aI);o.onupgradeneeded=()=>iI(o),o.onsuccess=()=>{let s=o.result,i=s.transaction(tl,"readwrite"),a=i.objectStore(tl),u=a.get(e),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=a.delete(e),m=()=>{l=s.transaction(Bl,"readwrite");let d=l.objectStore(Bl).delete(e);d.onsuccess=()=>t(u.result.modelArtifactsInfo),d.onerror=f=>n(u.error)};p.onsuccess=m,p.onerror=c=>(m(),s.close(),n(u.error))}},u.onerror=p=>(s.close(),n(u.error)),i.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var ou="/",zm="tensorflowjs_models",o0="info",nq="model_topology",oq="weight_specs",sq="weight_data",aq="model_metadata";function s0(r){return{info:[zm,r,o0].join(ou),topology:[zm,r,nq].join(ou),weightSpecs:[zm,r,oq].join(ou),weightData:[zm,r,sq].join(ou),modelMetadata:[zm,r,aq].join(ou)}}function a0(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function iq(r){let e=r.split(ou);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(ou)}function uq(r){return r.startsWith(su.URL_SCHEME)?r.slice(su.URL_SCHEME.length):r}var su=class{constructor(e){if(!$().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=s0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=ui(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,YD(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw a0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let a=JSON.parse(s);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=QD(i),t}};su.URL_SCHEME="localstorage://";var i0=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(su.URL_SCHEME)?lq(r.slice(su.URL_SCHEME.length)):null;Rt.registerSaveRouter(i0);Rt.registerLoadRouter(i0);function lq(r){return new su(r)}var lI=class{constructor(){P($().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=zm+ou,n=ou+o0;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let i=iq(s);e[i]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=uq(e);let t=s0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return a0(t),n}};var Gm="://",pn=class{constructor(){this.managers={}}static getInstance(){return pn.instance==null&&(pn.instance=new pn),pn.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Gm)&&(e=e.slice(0,e.indexOf(Gm))),P(e.length>0,()=>"scheme must not be an empty string.");let n=pn.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function yb(r){if(r.indexOf(Gm)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${pn.getSchemes().join(",")}`);return{scheme:r.split(Gm)[0],path:r.split(Gm)[1]}}async function u0(r,e,t=!1){P(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Rt.getLoadHandlers(r);P(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),P(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Rt.getSaveHandlers(e);P(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let i=s[0],a=yb(r).scheme,u=yb(r).path,l=a===yb(r).scheme,p=await o.load();t&&l&&await pn.getManager(a).removeModel(u);let m=await i.save(p);return t&&!l&&await pn.getManager(a).removeModel(u),m.modelArtifactsInfo}async function l0(){let r=pn.getSchemes(),e={};for(let t of r){let n=await pn.getManager(t).listModels();for(let o in n){let s=t+Gm+o;e[s]=n[o]}}return e}async function p0(r){let e=yb(r);return pn.getManager(e.scheme).removeModel(e.path)}async function m0(r,e){return u0(r,e,!1)}async function c0(r,e){return u0(r,e,!0)}var d0=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if($().get("IS_BROWSER")){$().setPlatform("browser",new d0);try{pn.registerManager(su.URL_SCHEME,new lI)}catch{}try{pn.registerManager(nu.URL_SCHEME,new uI)}catch{}}var pq={importFetch:()=>f0()},pI;var g0=class{constructor(){this.util=h0(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return $().global.fetch!=null?$().global.fetch(e,t):(pI==null&&(pI=pq.importFetch()),pI(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};$().get("IS_NODE")&&!$().get("IS_BROWSER")&&$().setPlatform("node",new g0);function Ce(r,e="float32",t){return e=e||"float32",fd(r),new yt(r,e,t)}function mq(r,e){let t=v(r,"x","cast");if(!$k(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return N.runKernel(Vn,n,o)}var J=_({cast_:mq});function cq(r){let t={x:v(r,"x","clone","string_or_numeric")};return N.runKernel(Hn,t)}var Dn=_({clone_:cq});function mI(r,e=!1){console.log(r.toString(e))}eI();var dq={buffer:Ce,cast:J,clone:Dn,print:mI};BD(dq);var Kr={};Xe(Kr,{browserFiles:()=>x0,browserHTTPRequest:()=>I0,concatenateArrayBuffers:()=>$m,copyModel:()=>m0,decodeWeights:()=>gb,encodeWeights:()=>qD,fromMemory:()=>v0,getLoadHandlers:()=>t0,getModelArtifactsForJSON:()=>Om,getModelArtifactsInfoForJSON:()=>ui,getSaveHandlers:()=>e0,http:()=>Ib,isHTTPScheme:()=>kb,listModels:()=>l0,loadWeights:()=>T0,moveModel:()=>c0,registerLoadRouter:()=>JD,registerSaveRouter:()=>ZD,removeModel:()=>p0,weightsLoaderFactory:()=>fI,withSaveHandler:()=>S0});var fq="model",hq=".json",gq=".weights.bin";function b0(r){return new Promise(e=>setTimeout(e)).then(r)}var xb=class{constructor(e){if(!$().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(xb.URL_SCHEME)&&(e=e.slice(xb.URL_SCHEME.length)),(e==null||e.length===0)&&(e=fq),this.modelJsonFileName=e+hq,this.weightDataFileName=e+gq}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=bb(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,await b0(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=t,await b0(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ui(e)}}}},_d=xb;_d.URL_SCHEME="downloads://";var y0=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),i=s.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}let u=Om(s,l=>this.loadWeights(l));e(u)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let i of e)t.push(...i.weights),n.push(...i.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(i=>this.loadWeightsFile(i,o[i]));return Promise.all(s).then(i=>[t,$m(i)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;n(a)},s.onerror=i=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>oI(s.name)),o={};for(let s of e)s.paths.forEach(i=>{let a=oI(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),n.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);o[i]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},bq=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(_d.URL_SCHEME)?yq(r.slice(_d.URL_SCHEME.length)):null;Rt.registerSaveRouter(bq);function yq(r="model"){return new _d(r)}function x0(r){return new y0(r)}function cI(r,e,t,n){i(r),t=t??0,n=n??1,a(t,n);let o=0,s=u=>(u.then(l=>{let p=t+ ++o/r.length*(n-t);return e(p),l}),u);function i(u){P(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,l){P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),P(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function dI(r,e){e==null&&(e={});let t=e.fetchFunc==null?$().platform.fetch:e.fetchFunc,n=r.map(m=>t(m,e.requestInit,{isBinary:!0})),o=0,s=.5,a=(e.onProgress==null?await Promise.all(n):await cI(n,e.onProgress,o,s)).map(m=>m.arrayBuffer()),u=.5,l=1;return e.onProgress==null?await Promise.all(a):await cI(a,e.onProgress,u,l)}async function T0(r,e="",t,n){return fI(i=>dI(i,{requestInit:n}))(r,e,t)}function fI(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],a=[];if(e.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=wd[y]*nt(g.shape),T=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:x})};n!=null?n.forEach((k,C)=>{k===g.name&&(T(),i[C]=!0)}):T(),a.push(g.name),h+=x})}),!i.every(d=>d)){let d=n.filter((f,h)=>!i[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let u=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),l=[];u.forEach(d=>{e[d].paths.forEach(f=>{let h=t+(t.endsWith("/")?"":"/")+f;l.push(h)})});let p=await r(l),m={},c=0;return u.forEach(d=>{let f=e[d].paths.length,h=0;for(let k=0;k<f;k++)h+=p[c+k].byteLength;let g=new ArrayBuffer(h),y=new Uint8Array(g),x=0;for(let k=0;k<f;k++){let C=new Uint8Array(p[c+k]);y.set(C,x),x+=C.byteLength}s[d].forEach(k=>{let C=g.slice(k.groupOffset,k.groupOffset+k.sizeBytes),A=gb(C,[k.manifestEntry]);for(let M in A)m[M]=A[M]}),c+=f}),m}}var xq="application/octet-stream",Tq="application/json",Tb=class{constructor(e,t){this.DEFAULT_METHOD="POST";if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=$().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=bb(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:Tq}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:xq}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:ui(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Om(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=kq(t),s=this.weightPathPrefix||n,i=[];for(let p of e)i.push(...p.weights);let a=[],u=[];for(let p of e)for(let m of p.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(m)):a.push(s+m+o);this.weightUrlConverter&&a.push(...await Promise.all(u));let l=await dI(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,$m(l)]}};Tb.URL_SCHEME_REGEX=/^https?:\/\//;function kq(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function kb(r){return r.match(Tb.URL_SCHEME_REGEX)!=null}var k0=(r,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>kb(n)):t=kb(r),t)return Ib(r,e)}return null};Rt.registerSaveRouter(k0);Rt.registerLoadRouter(k0);function Ib(r,e){return new Tb(r,e)}function I0(r,e){return Ib(r,e)}var Cb=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},C0=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function v0(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Cb(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Cb({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Cb({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function S0(r){return new C0(r)}var _0={};Xe(_0,{confusionMatrix:()=>w0});function Iq(r,e,t=!1,n=!1){let o=v(r,"a","matMul"),s=v(e,"b","matMul");[o,s]=Qe(o,s);let i={a:o,b:s},a={transposeA:t,transposeB:n};return N.runKernel(mo,i,a)}var Ve=_({matMul_:Iq});function Cq(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:v(r,"indices","oneHot","int32")},i={depth:e,onValue:t,offValue:n};return N.runKernel(xa,s,i)}var au=_({oneHot_:Cq});function vq(r,e){let t=v(r,"x","transpose");if(e==null&&(e=t.shape.map((s,i)=>i).reverse()),P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{P(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let n={x:t},o={perm:e};return N.runKernel(Qo,n,o)}var He=_({transpose_:vq});function Sq(r,e,t){let n=v(r,"labels","confusionMatrix"),o=v(e,"predictions","confusionMatrix");P(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),P(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),P(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),P(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),P(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=au(J(n,"int32"),t),i=au(J(o,"int32"),t),a=He(s),u=Ve(a,i);return J(u,"int32")}var w0=_({confusionMatrix_:Sq});var Nr={};Xe(Nr,{assertAndGetBroadcastShape:()=>Ge,getBroadcastDims:()=>A0,getReductionAxes:()=>vt});function A0(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,i=r[s]||1;(e[e.length-1-o]||1)>1&&i===1&&n.unshift(s)}return n}function vt(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,i=e[s];(o==null||o===1&&i>1)&&t.unshift(s)}return t}function Ge(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let i=e[e.length-o-1];if(i==null&&(i=1),s===1)t.unshift(i);else if(i===1)t.unshift(s);else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(a)}else t.unshift(s)}return t}var vb={};Xe(vb,{fromPixels:()=>Mq,fromPixelsAsync:()=>Dq,toPixels:()=>Pq});function hI(r,e,t){if(io(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Wr(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ln(r,e,n,t)}var $l;function N0(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,i=!1,a=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData!="undefined"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o){let f=2;if(o&&r.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(Td(Pl,N.backendName)!=null){let f={pixels:r},h={numChannels:e};return N.runKernel(Pl,f,h)}let[l,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(i)m=r.getContext("2d").getImageData(0,0,l,p).data;else if(n||t)m=r.data;else if(s||o||a){if($l==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")$l=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else $l=document.createElement("canvas").getContext("2d");$l.canvas.width=l,$l.canvas.height=p,$l.drawImage(r,0,0,l,p),m=$l.getImageData(0,0,l,p).data}let c;if(e===4)c=new Int32Array(m);else{let f=l*p;c=new Int32Array(f*e);for(let h=0;h<f;h++)for(let g=0;g<e;++g)c[h*e+g]=m[h*4+g]}return hI(c,[p,l,e],"int32")}function wq(r){return r!=null&&r.data instanceof Uint8Array}function _q(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function Aq(r){return r!=null&&r.width!==0&&r.height!==0}function Nq(r){return _q()&&!(r instanceof ImageBitmap)&&Aq(r)&&!wq(r)}async function Dq(r,e=3){let t=null;if($().getBool("WRAP_TO_IMAGEBITMAP")&&Nq(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return N0(t,e)}async function Pq(r,e){let t=v(r,"img","toPixels");if(!(r instanceof Ye)){let l=t;t=J(l,"int32"),l.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let i=await t.data(),a=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let p=[0,0,0,255];for(let c=0;c<s;c++){let d=i[l*s+c];if(t.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(t.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(p[0]=d*a,p[1]=d*a,p[2]=d*a):p[c]=d*a}let m=l*4;u[m+0]=Math.round(p[0]),u[m+1]=Math.round(p[1]),u[m+2]=Math.round(p[2]),u[m+3]=Math.round(p[3])}if(e!=null){e.width=o,e.height=n;let l=e.getContext("2d"),p=new ImageData(u,o,n);l.putImageData(p,0,0)}return t!==r&&t.dispose(),u}var Mq=_({fromPixels_:N0});var Sb={};Xe(Sb,{prepareAndValidate:()=>D0});function D0(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(nt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],i=1;for(let m=0;m<o.length-1;++m)i*=o[m];let a=r.shape,u=o.slice();u.pop();let l=1;for(let m=s;m<t;++m)l*=a[m],u.push(a[m]);let p=[...ei(r.shape).map(m=>m/l),1].slice(0,s);return[u,i,l,p]}var Ad={};Xe(Ad,{calculateShapes:()=>P0,validateInput:()=>wb,validateUpdateShape:()=>gI});function gI(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let i=0;i<o;++i)if(t.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-o;++i)if(t.shape[i+o]!==r[i+n])throw new Error(s+` updates.shape[${i+o}] (${t.shape[i+o]}) != shape[${i+o}] (${r[i+o]})`)}function wb(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}gI(t,e,r)}function P0(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,i=1;for(let m=o;m<s;++m)i*=t[m];let a=o<1?1:o,u=nt(e.shape)/a,l=[...ei(t.slice(0,o)),1],p=nt(t);return{sliceRank:o,numUpdates:u,sliceSize:i,strides:l,outputSize:p}}var Tt={};Xe(Tt,{assertParamsValid:()=>Rq,computeFlatOffset:()=>Oq,computeOutShape:()=>Lq,getNormalizedAxes:()=>Bq,isSliceContinous:()=>$q,maskToAxes:()=>Fq,parseSliceParams:()=>yI,sliceInfo:()=>zq,startForAxis:()=>$0,startIndicesWithElidedDims:()=>F0,stopForAxis:()=>O0,stopIndicesWithElidedDims:()=>L0,stridesForAxis:()=>B0,stridesWithElidedDims:()=>M0});var bI=-2,Eq=-1;function Rq(r,e,t){let n=r.shape.length;P(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),P(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)P(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function Fq(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function Lq(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function M0(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function E0(r,e,t){return t<=r?t:t-(e-1)}function R0(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function Bq(r,e,t,n,o,s,i,a,u){let l=r.length,p=new Array(l),m=new Array(l),c=new Array(l);if(e.length&&t>0){let d=e[0],f=t+1;p=F0(i,d,f,n,r),m=L0(a,d,f,o,r),c=M0(s,d,f,r)}else for(let d=0;d<l;d++)p[d]=$0(i,n,s,r,d,u),m[d]=O0(a,o,s,r,d,u),c[d]=B0(s,d,u);return{begin:p,end:m,strides:c}}function F0(r,e,t,n,o){let s=[...o],i=R0(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let u=E0(e,t,a),l=n[u];r&1<<u&&(l=0),s[a]=l}return s}function L0(r,e,t,n,o){let s=[...o],i=R0(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let u=E0(e,t,a),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[a]=l}for(let a=0;a<s.length;a++){let u=o[a];s[a]<0&&(s[a]+=u),s[a]=nm(0,s[a],o[a])}return s}function B0(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function $0(r,e,t,n,o,s){let i=e[o],a=t[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),i=nm(0,i,u-1),i}function O0(r,e,t,n,o,s){let i=e[o],a=t[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),a>0?i=nm(0,i,u):i=nm(-1,i,u-1),i}function $q(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function Oq(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function yI(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(i=>{P(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((i,a)=>i>=0?i:(P(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-n[a])),[n,s]}function zq(r,e,t,n,o,s,i,a,u){let l;if(n==null?(l=new Array(e.length),l.fill(1)):l=n,i!=null&&(i&i-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,m={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};for(let T=0;T<m.dims;T++)p&&(1<<T&a)!=0&&m.numAddAxisAfterEllipsis++,1<<T&i&&(p=!0);p||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Gq(m,c);let d=!0,f=!0,h=!0,g=[],y=[];for(let T=0;T<r.length;++T){if(c.strides[T]===0)throw Error(`strides[${T}] must be non-zero`);let k=!!(c.shrinkAxisMask&1<<T),C=r[T];if(C===-1){g.push(k?1:-1);continue}let A=[c.beginMask&1<<T,c.endMask&1<<T],M=[c.strides[T]>0?0:-1,c.strides[T]>0?C:C-1];if(k&&c.strides[T]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[T]===1;let D=!!(c.beginMask&1<<T&&c.endMask&1<<T);if(c.beginValid&&c.endValid){if(k){let W=c.begin[T]<0?C+c.begin[T]:c.begin[T];if(c.begin[T]=W,c.end[T]=c.begin[T]+1,W<0||W>=C)throw Error(`slice index ${c.begin[T]} of dimension ${T} out of bounds.`)}else c.begin[T]=z0(c.begin[T],0,c.strides[T],C,A,M),c.end[T]=z0(c.end[T],1,c.strides[T],C,A,M);let U=c.strides[T]===1&&c.begin[T]===0&&c.end[T]===C;d=d&&U,f=f&&(T===0&&c.strides[T]===1||U)}else d=d&&c.strides[T]===1&&D,f=f&&(T===0&&c.strides[T]===1||D);let R,B=!1;if(c.beginValid&&c.endValid?(R=c.end[T]-c.begin[T],B=!0):k?(R=1,B=!0):D&&C>=0&&(c.strides[T]<0?R=-C:R=C,B=!0),B){let U;R===0||R<0!=c.strides[T]<0?U=0:U=Math.trunc(R/c.strides[T])+(R%c.strides[T]!=0?1:0),g.push(U)}else g.push(-1)}for(let T=0;T<c.finalShapeGatherIndices.length;++T){let k=c.finalShapeGatherIndices[T];k>=0?y.push(g[k]):k===bI&&y.push(1)}return{finalShapeSparse:y.filter((T,k)=>c.finalShapeGatherIndices[k]!==bI),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function Gq(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(bI),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(Eq),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function z0(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let i=r<0?n+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var re={};Xe(re,{Serializable:()=>_b,SerializationMap:()=>iu,registerClass:()=>Pn});var _b=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},iu=class{constructor(){this.classNameMap={}}static getMap(){return iu.instance==null&&(iu.instance=new iu),iu.instance}static register(e){iu.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Pn(r){P(r.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),P(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),iu.register(r)}var K0={};Xe(K0,{TEST_EPSILON_FLOAT16:()=>G0,encodeStrings:()=>W0,expectArrayBuffersEqual:()=>Hq,expectArraysClose:()=>Wq,expectArraysEqual:()=>Vq,expectNumbersClose:()=>U0,expectPromiseToFail:()=>Kq,expectValuesInRange:()=>jq,testEpsilon:()=>Ab});var Uq=.001,G0=.1;function Wq(r,e,t){return t==null&&(t=Ab()),xI(r,e,(n,o)=>TI(n,o,t))}function Ab(){return N.backend.floatPrecision()===32?Uq:G0}function xI(r,e,t){let n=!0;if((Ir(r)||Ir(e))&&(n=!1),Ir(r)&&Ir(e)&&(n=!0),n){let i=r.constructor.name,a=e.constructor.name;if(i!==a)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${a}`)}if(Array.isArray(r)&&Array.isArray(e)){let i=Wr(r),a=Wr(e);if(!Kn(i,a))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${a}]`)}let o=Ir(r)?r:na(r),s=Ir(e)?e:na(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let a=o[i],u=s[i];if(!t(a,u))throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}}function Kq(r,e){r().then(()=>e.fail(),()=>e())}function Vq(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return oa(r)||oa(r[0])||oa(e)||oa(e[0])?xI(r,t,(n,o)=>n==o):xI(r,e,(n,o)=>TI(n,o,0))}function U0(r,e,t){if(t==null&&(t=Ab()),!TI(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function TI(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function jq(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function Hq(r,e){let t=new Float32Array(r),n=new Float32Array(e);if(t.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${t.length}`);for(let o=0;o<n.length;o++)if(t[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${t[o]} instead`)}function W0(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?W0(t):r[e]=Ju(t)}return r}var qq="0.0.0";function vye(){$().set("PROD",!0)}function Sye(){$().set("DEBUG",!0)}function wye(){$().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function kI(r){$().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}$D(kI);function _ye(){N.disposeVariables()}function Qn(){return N}function Nd(){return N.memory()}function Aye(r){return N.profile(r)}function G(r,e){return N.tidy(r,e)}function Ee(r){Sd(r).forEach(t=>t.dispose())}function Vt(r){return N.keep(r)}function Nye(r){return N.time(r)}function Xq(r){return N.setBackend(r)}function Dye(){return N.ready()}function Pye(){return N.backendName}function Mye(r){N.removeBackend(r)}function Eye(r){return N.findBackend(r)}function Rye(r){return N.findBackendFactory(r)}function rl(r,e,t=1){return N.registerBackend(r,e,t)}function V0(){return N.backend}function Fye(r,e){$().setPlatform(r,e)}function Yq(r,e){let t=v(r,"a","add"),n=v(e,"b","add");[t,n]=Qe(t,n);let o={a:t,b:n};return N.runKernel(An,o)}var X=_({add_:Yq});function Qq(r,e){let t=v(r,"a","floorDiv"),n=v(e,"b","floorDiv");[t,n]=Qe(t,n);let o={a:t,b:n};return N.runKernel(Co,o)}var Dd=_({floorDiv_:Qq});function Zq(r,e){let t=v(r,"a","div"),n=v(e,"b","div");if([t,n]=Qe(t,n),t.dtype==="int32"&&n.dtype==="int32")return Dd(t,n);let o={a:t,b:n},s={};return N.runKernel(xo,o,s)}var me=_({div_:Zq});function Jq(r,e){let t=v(r,"a","mul"),n=v(e,"b","mul");[t,n]=Qe(t,n);let o={a:t,b:n};return N.runKernel(Fo,o)}var F=_({mul_:Jq});function e6(r){let e=v(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return N.runKernel($u,t)}else{let t={x:e};return N.runKernel(ds,t)}}var $t=_({abs_:e6});function t6(r){let t={x:v(r,"x","acos")};return N.runKernel(Mi,t)}var II=_({acos_:t6});function r6(r){let t={x:v(r,"x","acosh")};return N.runKernel(Ei,t)}var CI=_({acosh_:r6});function n6(r){P(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),P(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>v(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!Kn(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return N.runKernel(uo,n)}var vI=_({addN_:n6});function o6(r,e=null,t=!1){let o={x:v(r,"x","all","bool")},s={axis:e,keepDims:t};return N.runKernel(Ri,o,s)}var Pd=_({all_:o6});function s6(r,e=null,t=!1){let o={x:v(r,"x","any","bool")},s={axis:e,keepDims:t};return N.runKernel(Fi,o,s)}var Um=_({any_:s6});function a6(r,e=0){let n={x:v(r,"x","argMax")},o={axis:e};return N.runKernel(lo,n,o)}var uu=_({argMax_:a6});function i6(r,e=0){let n={x:v(r,"x","argMin")},o={axis:e};return N.runKernel(ti,n,o)}var SI=_({argMin_:i6});function u6(r){let t={x:v(r,"x","asin")};return N.runKernel(Li,t)}var wI=_({asin_:u6});function l6(r){let t={x:v(r,"x","asinh")};return N.runKernel(Bi,t)}var _I=_({asinh_:l6});function p6(r){let t={x:v(r,"x","atan")};return N.runKernel($i,t)}var AI=_({atan_:p6});function m6(r,e){let t=v(r,"a","atan2"),n=v(e,"b","atan2");[t,n]=Qe(t,n);let o={a:t,b:n};return N.runKernel(zi,o)}var NI=_({atan2_:m6});function c6(r){let t={x:v(r,"x","atanh")};return N.runKernel(Oi,t)}var DI=_({atanh_:c6});function d6(r,e,t,n,o="NHWC",s){let i=r[3],a=[...e,i],u=H0(o);return Ol(r,a,t,s,n,null,null,u)}function PI(r,e,t,n,o,s,i="channelsLast"){let[a,u]=Nb(e),l;if(i==="channelsLast")l=[a,u,r[3],r[3]];else if(i==="channelsFirst")l=[a,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return Ol(r,l,t,n,o,s,!1,i)}function f6(r,e,t,n,o,s,i="NDHWC"){let[a,u,l]=EI(e),p,m;if(i==="NDHWC")m="channelsLast",p=[a,u,l,r[4],r[4]];else if(i==="NCDHW")m="channelsFirst",p=[a,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return j0(r,p,t,n,o,!1,m,s)}function Ol(r,e,t,n,o,s,i=!1,a="channelsLast"){let[u,l,p,m]=[-1,-1,-1,-1];if(a==="channelsLast")[u,l,p,m]=r;else if(a==="channelsFirst")[u,m,l,p]=r;else throw new Error(`Unknown dataFormat ${a}`);let[c,d,,f]=e,[h,g]=Nb(t),[y,x]=Nb(n),T=Wm(c,y),k=Wm(d,x),{padInfo:C,outHeight:A,outWidth:M}=b6(o,l,p,h,g,T,k,s,a),D=i?f*m:f,R;return a==="channelsFirst"?R=[u,D,A,M]:a==="channelsLast"&&(R=[u,A,M,D]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:p,inChannels:m,outHeight:A,outWidth:M,outChannels:D,padInfo:C,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:T,effectiveFilterWidth:k,dilationHeight:y,dilationWidth:x,inShape:r,outShape:R,filterShape:e}}function j0(r,e,t,n,o,s=!1,i="channelsLast",a){let[u,l,p,m,c]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,l,p,m,c]=r;else if(i==="channelsFirst")[u,c,l,p,m]=r;else throw new Error(`Unknown dataFormat ${i}`);let[d,f,h,,g]=e,[y,x,T]=EI(t),[k,C,A]=EI(n),M=Wm(d,k),D=Wm(f,C),R=Wm(h,A),{padInfo:B,outDepth:U,outHeight:W,outWidth:K}=y6(o,l,p,m,y,x,T,M,D,R,a),j=s?g*c:g,V;return i==="channelsFirst"?V=[u,j,U,W,K]:i==="channelsLast"&&(V=[u,U,W,K,j]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:p,inWidth:m,inChannels:c,outDepth:U,outHeight:W,outWidth:K,outChannels:j,padInfo:B,strideDepth:y,strideHeight:x,strideWidth:T,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:M,effectiveFilterHeight:D,effectiveFilterWidth:R,dilationDepth:k,dilationHeight:C,dilationWidth:A,inShape:r,outShape:V,filterShape:e}}function h6(r,e,t,n,o){n==null&&(n=MI(r,e,t));let s=r[0],i=r[1],a=zl((s-e+2*n)/t+1,o),u=zl((i-e+2*n)/t+1,o);return[a,u]}function g6(r,e,t,n,o,s){o==null&&(o=MI(r,e,n));let i=r[0],a=r[1],u=r[2],l=zl((i-e+2*o)/n+1,s),p=zl((a-e+2*o)/n+1,s),m=zl((u-e+2*o)/n+1,s);return[l,p,m,t]}function MI(r,e,t,n=1){let o=Wm(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function Nb(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function EI(r){return typeof r=="number"?[r,r,r]:r}function Wm(r,e){return e<=1?r:r+(r-1)*(e-1)}function b6(r,e,t,n,o,s,i,a,u){let l,p,m;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=h6([e,t],s,n,r,a);p=d[0],m=d[1]}else if(r==="same"){p=Math.ceil(e/n),m=Math.ceil(t/o);let c=Math.max(0,(p-1)*n+s-e),d=Math.max(0,(m-1)*o+i-t),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),y=d-g;l={top:f,bottom:h,left:g,right:y,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-s+1)/n),m=Math.ceil((t-i+1)/o);else if(typeof r=="object"){let c=u==="channelsLast"?r[1][0]:r[2][0],d=u==="channelsLast"?r[1][1]:r[2][1],f=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},p=zl((e-s+c+d)/n+1,a),m=zl((t-i+f+h)/o+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:p,outWidth:m}}function y6(r,e,t,n,o,s,i,a,u,l,p){let m,c,d,f;if(typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=g6([e,t,n,1],a,1,o,r,p);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(e/o),d=Math.ceil(t/s),f=Math.ceil(n/i);let h=(c-1)*o+a-e,g=(d-1)*s+u-t,y=(f-1)*i+l-n,x=Math.floor(h/2),T=h-x,k=Math.floor(g/2),C=g-k,A=Math.floor(y/2),M=y-A;m={top:k,bottom:C,left:A,right:M,front:x,back:T,type:"SAME"}}else if(r==="valid")m={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},c=Math.ceil((e-a+1)/o),d=Math.ceil((t-u+1)/s),f=Math.ceil((n-l+1)/i);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function zl(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Zo(r){let[e,t,n]=Nb(r);return e===1&&t===1&&n===1}function Lr(r,e){return Zo(r)||Zo(e)}function H0(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Pt(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")P(Pi(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(o=>{P(Pi(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function x6(r,e){let n={x:v(r,"x","reshape","string_or_numeric")},o={shape:e};return N.runKernel(ks,n,o)}var L=_({reshape_:x6});function T6(r,e,t,n,o){let s=v(r,"x","avgPool","float32"),i=1;P(Lr(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=s,u=!1;s.rank===3&&(u=!0,a=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Pt("avgPool",n,o);let l={x:a},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=N.runKernel(po,l,p);return m=J(m,s.dtype),u?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Gl=_({avgPool_:T6});function k6(r,e,t,n,o,s="NDHWC"){let i=v(r,"x","avgPool3d","float32"),a=i,u=!1;i.rank===4&&(u=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),P(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Pt("avgPool3d",n,o);let l={x:a},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Lu,l,p);return m=J(m,a.dtype),u?L(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Md=_({avgPool3d_:k6});function I6(r,e=0){P(r.length>=1,()=>"Pass at least one tensor to concat");let t=ru(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Dn(t[0]);let n=t,o={axis:e};return N.runKernel(hs,n,o)}var lt=_({concat_:I6});function C6(r){let t={x:v(r,"x","sigmoid","float32")};return N.runKernel(Ko,t)}var mn=_({sigmoid_:C6});function v6(r,e,t){let n=v(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return N.runKernel(Cs,o,s)}var ze=_({slice_:v6});function S6(r){let t={x:v(r,"x","tanh","float32")};return N.runKernel(Yo,t)}var lu=_({tanh_:S6});function w6(r,e,t,n,o,s){let i=v(r,"forgetBias","basicLSTMCell"),a=v(e,"lstmKernel","basicLSTMCell"),u=v(t,"lstmBias","basicLSTMCell"),l=v(n,"data","basicLSTMCell"),p=v(o,"c","basicLSTMCell"),m=v(s,"h","basicLSTMCell"),c=lt([l,m],1),d=Ve(c,a),f=X(d,u),h=f.shape[0],g=f.shape[1]/4,y=[h,g],x=ze(f,[0,0],y),T=ze(f,[0,g],y),k=ze(f,[0,g*2],y),C=ze(f,[0,g*3],y),A=X(F(mn(x),lu(T)),F(p,mn(X(i,k)))),M=F(lu(A),mn(C));return[A,M]}var _6=_({basicLSTMCell_:w6});function A6(r,e,t){let n=v(r,"x","batchToSpaceND"),o=e.reduce((a,u)=>a*u);P(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),P(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),P(n.shape[0]%o==0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},i={blockShape:e,crops:t};return N.runKernel(fs,s,i)}var Ul=_({batchToSpaceND_:A6});function q0(r){let e;return r.rank===0||r.rank===1?e=L(r,[1,1,1,r.size]):r.rank===2?e=L(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function N6(r,e,t,n,o,s){s==null&&(s=.001);let i=v(r,"x","batchNorm"),a=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;n!=null&&(p=v(n,"offset","batchNorm")),P(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(p==null||a.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:q0(i),scale:l,offset:p,mean:a,variance:u},d={varianceEpsilon:s},f=N.runKernel(vo,c,d);return L(f,i.shape)}var li=_({batchNorm_:N6});function D6(r,e,t,n,o,s){let i=v(r,"x","batchNorm"),a=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),P(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),li(i,a,u,p,l,s)}var RI=_({batchNorm2d_:D6});function P6(r,e,t,n,o,s){let i=v(r,"x","batchNorm"),a=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),P(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),li(i,a,u,p,l,s)}var FI=_({batchNorm3d_:P6});function M6(r,e,t,n,o,s){let i=v(r,"x","batchNorm"),a=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),P(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),li(i,a,u,p,l,s)}var LI=_({batchNorm4d_:M6});function E6(r,e,t){let n=v(r,"x","bincount"),o=v(e,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},i={size:t};return N.runKernel(lm,s,i)}var Ed=_({bincount_:E6});function R6(r,e){let t=v(r,"s0","broadcastArgs","int32"),n=v(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return N.runKernel(pm,o)}var BI=_({broadcastArgs_:R6});function F6(r,e){let t=v(r,"broadcastTo","x"),n=t.shape;if(e.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=L(t,l)}let o=t.shape,s=Array.from(e);for(let l=e.length-1;l>=0;l--)if(o[l]===e[l])s[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return Dn(t);let a={x:t},u={reps:s};return N.runKernel(Nn,a,u)}var Wl=_({broadcastTo_:F6});function L6(r){let t={x:v(r,"x","ceil","float32")};return N.runKernel(co,t)}var $I=_({ceil_:L6});function B6(r,e,t){let n=v(r,"x","clipByValue");P(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return N.runKernel(jn,o,s)}var Br=_({clipByValue_:B6});function $6(r){return lt(r,0)}var OI=_({concat1d_:$6});function O6(r,e){return lt(r,e)}var zI=_({concat2d_:O6});function z6(r,e){return lt(r,e)}var GI=_({concat3d_:z6});function G6(r,e){return lt(r,e)}var UI=_({concat4d_:G6});function U6(r,e,t,n,o="NHWC",s=[1,1],i){let a=v(r,"x","conv2d","float32"),u=v(e,"filter","conv2d","float32"),l=a,p=!1;a.rank===3&&(p=!0,l=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Pt("conv2d",n,i);let m=o==="NHWC"?l.shape[3]:l.shape[1];P(m===u.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${u.shape[2]}.`),P(Lr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let c={x:l,filter:u},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},f=N.runKernel(fo,c,d);return p?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Zn=_({conv2d_:U6});function W6(r,e,t,n,o="NWC",s=1,i){let a=v(r,"x","conv1d"),u=v(e,"filter","conv1d"),l=a,p=!1;a.rank===2&&(p=!0,l=L(a,[1,a.shape[0],a.shape[1]])),P(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),P(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Pt("conv1d",n,i),P(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),P(Lr(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),P(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=L(u,[1,u.shape[0],u.shape[1],u.shape[2]]),c=L(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=Zn(c,m,[1,t],n,"NHWC",[1,s],i);return p?L(g,[g.shape[2],g.shape[3]]):L(g,[g.shape[0],g.shape[2],g.shape[3]])}var Rd=_({conv1d_:W6});function K6(r,e,t,n,o,s="NHWC",i){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let a=r,u=e,l=!1;e.rank===3&&(l=!0,u=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,r[0],r[1],r[2]]),P(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),P(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),P(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let p=s==="NHWC"?a[3]:a[1],m=s==="NHWC"?u.shape[3]:u.shape[1];P(p===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[2]}.`),P(m===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${t.shape[3]}.`),Pt("conv2dDerInput",o,i);let c={dy:u,filter:t},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,inputShape:a},f=N.runKernel(ho,c,d);return l?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Km=_({conv2DBackpropInput_:K6});function V6(r,e,t,n,o,s){let i=v(r,"x","conv2dTranspose"),a=v(e,"filter","conv2dTranspose");return Km(t,i,a,n,o,"NHWC",s)}var Fd=_({conv2dTranspose_:V6});function j6(r,e,t,n,o="NDHWC",s=[1,1,1]){let i=v(r,"x","conv3d"),a=v(e,"filter","conv3d"),u=i,l=!1;i.rank===4&&(l=!0,u=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),P(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),P(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),P(Lr(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let p={x:u,filter:a},m={strides:t,pad:n,dataFormat:o,dilations:s},c=N.runKernel(Ou,p,m);return l?L(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Ld=_({conv3d_:j6});function H6(r,e,t,n,o){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,i=e,a=!1;e.rank===4&&(a=!0,i=L(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=i.shape[4];P(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),P(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),P(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),P(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),P(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);let p={dy:i,filter:t},m={pad:o,strides:n,inputShape:s},c=N.runKernel(dm,p,m);return a?L(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Db=_({conv3DBackpropInput_:H6});function q6(r,e,t,n,o){let s=v(r,"x","conv3dTranspose"),i=v(e,"filter","conv3dTranspose");return Db(t,s,i,n,o)}var WI=_({conv3dTranspose_:q6});function X6(r){let t={x:v(r,"x","cos","float32")};return N.runKernel(go,t)}var Kl=_({cos_:X6});function Y6(r){let t={x:v(r,"x","cosh","float32")};return N.runKernel(bo,t)}var Bd=_({cosh_:Y6});function Q6(r,e=0,t=!1,n=!1){let s={x:v(r,"x","cumsum")},i={axis:e,exclusive:t,reverse:n};return N.runKernel(sa,s,i)}var $d=_({cumsum_:Q6});function Z6(r,e,t,n=!1){let o=v(r,"x","denseBincount"),s=v(e,"weights","denseBincount");P(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),P(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let i={x:o,weights:s},a={size:t,binaryOutput:n};return N.runKernel(fm,i,a)}var KI=_({denseBincount_:Z6});function J6(r,e,t="NHWC"){let n=v(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],i=t==="NHWC"?n.shape[3]:n.shape[1];P(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),P(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),P(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),P(i%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${n.shape}`);let a={x:n},u={blockSize:e,dataFormat:t};return N.runKernel(ia,a,u)}var VI=_({depthToSpace_:J6});function e5(r,e,t,n,o="NHWC",s=[1,1],i){let a=v(r,"x","depthwiseConv2d","float32"),u=v(e,"filter","depthwiseConv2d","float32"),l=a,p=!1;a.rank===3&&(p=!0,l=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),Pt("depthwiseConv2d",n,i);let m={x:l,filter:u},c={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},d=N.runKernel(yo,m,c);return p?L(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var pu=_({depthwiseConv2d_:e5});function t5(r){let t={x:v(r,"x","diag")};return N.runKernel(bm,t)}var r5=_({diag_:t5});function n5(r,e,t,n,o=[1,1],s="NHWC"){let i=v(r,"x","dilation2d"),a=v(e,"filter","dilation2d");P(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),P(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),P(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=i,l=!1;i.rank===3&&(u=L(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);let p={x:u,filter:a},m={strides:t,pad:n,dilations:o},c=N.runKernel(zu,p,m);return l?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var jI=_({dilation2d_:n5});function o5(r,e){let t=v(r,"a","equal","string_or_numeric"),n=v(e,"b","equal","string_or_numeric");[t,n]=Qe(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(ua,o)}var Vr=_({equal_:o5});function s5(r,e,t){let n=v(e,"a","where"),o=v(t,"b","where"),s=v(r,"condition","where","bool"),i=Ge(Ge(s.shape,n.shape),o.shape),a=Wl(s,i),u=Wl(n,i),l=Wl(o,i),p={condition:a,t:u,e:l};return N.runKernel(Is,p)}var Ot=_({where_:s5});function a5(r){let t={x:v(r,"x","zerosLike")};return N.runKernel(_s,t)}var Ne=_({zerosLike_:a5});function i5(r,e){let t=v(r,"a","div"),n=v(e,"b","div");[t,n]=Qe(t,n);let o=me(t,n),s=Ne(o),i=Vr(n,s);return Ot(i,s,o)}var HI=_({divNoNan_:i5});function u5(r,e){let t=v(r,"t1","dot"),n=v(e,"t2","dot");P((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(P(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let i=L(t,[1,-1]),a=L(n,[-1,1]),u=Ve(i,a);return L(u,[])}else if(t.rank===1&&n.rank===2){let i=L(t,[1,-1]),a=L(n,[n.shape[0],n.shape[1]]),u=Ve(i,a);return L(u,[u.size])}else if(t.rank===2&&n.rank===1){let i=L(n,[-1,1]),a=Ve(t,i);return L(a,[a.size])}else{let i=L(n,[n.shape[0],n.shape[1]]);return Ve(t,i)}}var l5=_({dot_:u5});function p5(r,...e){let t=e.map((o,s)=>v(o,`tensors${s}`,"einsum")),n={equation:r};return N.runKernel(Gu,t,n)}var qI=_({einsum_:p5});function m5(r){let t={x:v(r,"x","elu","float32")};return N.runKernel(To,t)}var mu=_({elu_:m5});function c5(r){let e=v(r,"x","erf");P(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=J(e,"float32"));let t={x:e};return N.runKernel(Gi,t)}var XI=_({erf_:c5});function d5(r){let t={x:v(r,"x","exp")};return N.runKernel(ko,t)}var cr=_({exp_:d5});function f5(r,e=0){let t=v(r,"x","expandDims","string_or_numeric");P(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return N.runKernel(gs,n,o)}var Dr=_({expandDims_:f5});function h5(r){let t={x:v(r,"x","expm1")};return N.runKernel(la,t)}var YI=_({expm1_:h5});function g5(r,e){let t=v(r,"x","tile","string_or_numeric");P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return N.runKernel(Nn,n,o)}var jr=_({tile_:g5});function b5(r,e,t,n="float32"){e==null&&(e=r);let o=Ce([r,e],n),s=r<=e?r:e;for(let a=0;a<s;++a)o.set(1,a,a);let i=L(o.toTensor(),[r,e]);if(t==null)return i;if(t.length===1)return jr(Dr(i,0),[t[0],1,1]);if(t.length===2)return jr(Dr(Dr(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return jr(Dr(Dr(Dr(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Vm=_({eye_:b5});function Ea(r,e,t){let n={shape:r,value:e,dtype:t};return N.runKernel(ri,{},n)}function y5(r){let t={x:v(r,"x","floor","float32")};return N.runKernel(Io,t)}var cu=_({floor_:y5});function x5(r,e,t=0,n=0){let o=v(r,"x","gather"),s=v(e,"indices","gather","int32"),i={x:o,indices:s},a={axis:t,batchDims:n};return N.runKernel(bs,i,a)}var pi=_({gather_:x5});function T5(r,e){let t=v(r,"a","greater","string_or_numeric"),n=v(e,"b","greater","string_or_numeric");[t,n]=Qe(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(ca,o)}var nr=_({greater_:T5});function k5(r,e){let t=v(r,"a","greaterEqual","string_or_numeric"),n=v(e,"b","greaterEqual","string_or_numeric");[t,n]=Qe(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(So,o)}var es=_({greaterEqual_:k5});function I5(r){let t={input:v(r,"input","imag")};return N.runKernel(Uu,t)}var Vl=_({imag_:I5});function C5(r){let t={x:v(r,"x","isFinite")};return N.runKernel(Ui,t)}var v5=_({isFinite_:C5});function S5(r){let t={x:v(r,"x","isInf")};return N.runKernel(Wi,t)}var w5=_({isInf_:S5});function _5(r){let t={x:v(r,"x","isNaN")};return N.runKernel(Ki,t)}var QI=_({isNaN_:_5});function A5(r,e=.2){let n={x:v(r,"x","leakyRelu")},o={alpha:e};return N.runKernel(wo,n,o)}var jl=_({leakyRelu_:A5});function N5(r,e){let t=v(r,"a","less","string_or_numeric"),n=v(e,"b","less","string_or_numeric");[t,n]=Qe(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(da,o)}var Od=_({less_:N5});function D5(r,e){let t=v(r,"a","lessEqual","string_or_numeric"),n=v(e,"b","lessEqual","string_or_numeric");[t,n]=Qe(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(fa,o)}var ts=_({lessEqual_:D5});function ZI(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return N.runKernel(km,{},n)}function P5(r,e=5,t=1,n=1,o=.5){let s=v(r,"x","localResponseNormalization");P(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),P(Pi(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=L(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:i},l={depthRadius:e,bias:t,alpha:n,beta:o},p=N.runKernel(Wu,u,l);return a?L(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var JI=_({localResponseNormalization_:P5});function M5(r){let t={x:v(r,"x","log","float32")};return N.runKernel(_o,t)}var $r=_({log_:M5});function E5(r){let t={x:v(r,"x","log1p")};return N.runKernel(Vi,t)}var Hl=_({log1p_:E5});function R5(r){return P(Ja(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=v(e,"x","tf.grad","string_or_numeric"),o=t!=null?v(t,"dy","tf.grad"):null;return N.tidy(()=>{let{value:s,grads:i}=N.gradients(()=>r(n),[n],o);return o!=null&&Wt(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Mb(i),i[0]})}}function F5(r){return P(Ja(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{P(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=ru(e,"args","tf.grads","string_or_numeric"),o=t!=null?v(t,"dy","tf.grads"):null;return N.tidy(()=>{let{value:s,grads:i}=N.gradients(()=>r(...n),n,o);return o!=null&&Wt(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Mb(i),i})}}function L5(r){return P(Ja(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{P(e instanceof Ye,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=N.gradients(()=>r(e),[e],t);return Mb(n),{grad:n[0],value:o}}}function B5(r){return P(Ja(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{P(Array.isArray(e)&&e.every(o=>o instanceof Ye),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=N.gradients(()=>r(...e),e,t);return t!=null&&Wt(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Mb(n.grads),n}}function Pb(r,e){P(Ja(r),()=>"The f passed in variableGrads(f) must be a function"),P(e==null||Array.isArray(e)&&e.every(l=>l instanceof el),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let l in N.registeredVariables)e.push(N.registeredVariables[l])}let n=t?e.filter(l=>!l.trainable):null,o=e.length;e=e.filter(l=>l.trainable),P(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:i,grads:a}=N.gradients(r,e,null,s);P(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return e.forEach((l,p)=>{a[p]!=null&&(u[l.name]=a[p])}),n!=null&&n.forEach(l=>u[l.name]=null),{value:i,grads:u}}function cn(r){return N.customGrad(r)}function Mb(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function $5(r){let t={x:v(r,"x","neg")};return N.runKernel(ys,t)}var Ze=_({neg_:$5});function O5(r){let t={x:v(r,"x","softplus")};return N.runKernel(Zi,t)}var mi=_({softplus_:O5});function z5(r){let e=v(r,"x","logSigmoid");return cn(n=>({value:Ze(mi(Ze(n))),gradFunc:i=>F(i,mn(Ze(n)))}))(e)}var G5=_({logSigmoid_:z5});function U5(r,e=null,t=!1){let o={x:v(r,"x","max")},s={reductionIndices:e,keepDims:t};return N.runKernel(Ao,o,s)}var en=_({max_:U5});function W5(r,e){let t=v(r,"a","sub"),n=v(e,"b","sub");[t,n]=Qe(t,n);let o={a:t,b:n};return N.runKernel(Xo,o)}var pe=_({sub_:W5});function K5(r,e=null,t=!1){let n=v(r,"x","sum");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return N.runKernel(jo,o,s)}var he=_({sum_:K5});function V5(r,e=-1){let t=v(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return cn((o,s)=>{let i=!0,a=en(o,e,!0),u=pe(o,a),l=pe(J(u,"float32"),$r(he(cr(u),e,i)));return s([l]),{value:l,gradFunc:(m,c)=>{let[d]=c,f=!0,h=cr(d);return pe(m,F(he(m,e,f),h))}}})(t)}var zd=_({logSoftmax_:V5});function eC(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function X0(r,e,t){let n=r.length+e.length,o=[],s=0,i=0;for(let a=0;a<n;a++)t.indexOf(a)===-1?o.push(r[s++]):o.push(e[i++]);return o}function tC(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Ls(r,e){let t=e.map(n=>1);return X0(r,t,e)}function j5(r,e,t){P(eC(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function rC(r,e){if(eC(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Gd(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function H5(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function q5(r,e=null,t=!1){let n=v(r,"x","logSumExp"),o=yr(e,n.shape),s=en(n,o,!0),i=pe(n,s),a=cr(i),u=he(a,o),l=$r(u),p=X(L(s,l.shape),l);if(t){let m=Ls(p.shape,o);return L(p,m)}return p}var oC=_({logSumExp_:q5});function X5(r,e){let t=v(r,"a","logicalAnd","bool"),n=v(e,"b","logicalAnd","bool");Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(ha,o)}var Hr=_({logicalAnd_:X5});function Y5(r){let t={x:v(r,"x","logicalNot","bool")};return N.runKernel(ji,t)}var ql=_({logicalNot_:Y5});function Q5(r,e){let t=v(r,"a","logicalOr","bool"),n=v(e,"b","logicalOr","bool");Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(Dl,o)}var Ud=_({logicalOr_:Q5});function Z5(r,e){let t=v(r,"a","logicalXor","bool"),n=v(e,"b","logicalXor","bool");return Ge(t.shape,n.shape),Hr(Ud(r,e),ql(Hr(r,e)))}var J5=_({logicalXor_:Z5});function e8(r,e,t,n,o){let s=v(r,"x","maxPool"),i=1,a=s,u=!1;s.rank===3&&(u=!0,a=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),P(Lr(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Pt("maxPool",n,o);let l={x:a},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=N.runKernel(Do,l,p);return u?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Xl=_({maxPool_:e8});function t8(r,e=[1,1,1],t,n,o,s="NDHWC"){let i=v(r,"x","maxPool3d"),a=i,u=!1;i.rank===4&&(u=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),P(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Pt("maxPool3d",n,o);let l={x:a},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Ku,l,p);return u?L(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Wd=_({maxPool3d_:t8});function r8(r,e,t,n,o=!1){let i={x:v(r,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},u=N.runKernel(Sm,i,a);return{result:u[0],indexes:u[1]}}var sC=_({maxPoolWithArgmax_:r8});function n8(r,e){let t=v(r,"a","maximum"),n=v(e,"b","maximum");[t,n]=Qe(t,n),t.dtype==="bool"&&(t=J(t,"int32"),n=J(n,"int32")),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(No,o)}var Jn=_({maximum_:n8});function o8(r,e=null,t=!1){let o={x:v(r,"x","mean")},s={axis:e,keepDims:t};return N.runKernel(Po,o,s)}var Ft=_({mean_:o8});function xt(r,e="float32"){if(e==="complex64"){let n=xt(r,"float32"),o=xt(r,"float32");return Yn(n,o)}let t=am(nt(r),e);return N.makeTensor(t,r,e)}function dr(r,e="float32"){if(e==="complex64"){let n=dr(r,"float32"),o=xt(r,"float32");return Yn(n,o)}let t=dd(nt(r),e);return N.makeTensor(t,r,e)}function s8(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=v(r,"x","meshgrid",r instanceof Ye?r.dtype:"float32");if(e===void 0)return[n];let o=v(e,"y","meshgrid",e instanceof Ye?e.dtype:"float32"),s=nt(n.shape),i=nt(o.shape);return t==="xy"?(n=L(n,[1,-1]),o=L(o,[-1,1]),[Ve(dr([i,1],n.dtype),n),Ve(o,dr([1,s],o.dtype))]):(n=L(n,[-1,1]),o=L(o,[1,-1]),[Ve(n,dr([1,i],n.dtype)),Ve(dr([s,1],o.dtype),o)])}function a8(r,e=null,t=!1){let o={x:v(r,"x","min")},s={axis:e,keepDims:t};return N.runKernel(Mo,o,s)}var jm=_({min_:a8});function i8(r,e){let t=v(r,"a","minimum"),n=v(e,"b","minimum");[t,n]=Qe(t,n),t.dtype==="bool"&&(t=J(t,"int32"),n=J(n,"int32")),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(Eo,o)}var du=_({minimum_:i8});function u8(r,e,t){P(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=v(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let a=0;a<n.rank;a++)P(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(e[a][0]>=0&&e[a][0]<=n.shape[a]-o&&e[a][1]>=0&&e[a][1]<=n.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},i={x:n};return N.runKernel(Ro,i,s)}var aC=_({mirrorPad_:u8});function l8(r,e){let t=v(r,"a","mod"),n=v(e,"b","mod");[t,n]=Qe(t,n);let o={a:t,b:n};return N.runKernel(Hi,o)}var iC=_({mod_:l8});function p8(r){let e=v(r,"x","square"),t={};return N.runKernel("Square",{x:e},t)}var qe=_({square_:p8});function m8(r,e=null,t=!1){r=v(r,"x","moments");let n=yr(e,r.shape),o=Ft(r,n,t),s=o.shape;t||(s=Ls(o.shape,n));let i=qe(pe(J(r,"float32"),L(o,s))),a=Ft(i,n,t);return{mean:o,variance:a}}var Hm=_({moments_:m8});function c8(r,e,t,n){let o=v(e,"data","multiRNNCell"),s=ru(t,"c","multiRNNCell"),i=ru(n,"h","multiRNNCell"),a=o,u=[];for(let m=0;m<r.length;m++){let c=r[m](a,s[m],i[m]);u.push(c[0]),u.push(c[1]),a=c[1]}let l=[],p=[];for(let m=0;m<u.length;m+=2)l.push(u[m]),p.push(u[m+1]);return[l,p]}var d8=_({multiRNNCell_:c8});function f8(r,e,t,n=!1){let o=v(r,"logits","multinomial"),s=o.size,i=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();let u={logits:i===1?L(o,[1,-1]):o},l={numSamples:e,seed:t,normalized:n},p=N.runKernel(wm,u,l);return i===1?L(p,[p.size]):p}var uC=_({multinomial_:f8});function h8(r,e){let t=v(r,"a","notEqual","string_or_numeric"),n=v(e,"b","notEqual","string_or_numeric");[t,n]=Qe(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(ga,o)}var ci=_({notEqual_:h8});function g8(r){let t={x:v(r,"x","onesLike")};return N.runKernel(xs,t)}var Pr=_({onesLike_:g8});function b8(r,e){let t=v(r,"v1","outerProduct"),n=v(e,"v2","outerProduct");P(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=L(t,[-1,1]),s=L(n,[1,-1]);return Ve(o,s)}var y8=_({outerProduct_:b8});function x8(r,e,t=0){let n=v(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return N.runKernel(Lo,s,o)}var Mn=_({pad_:x8});function T8(r,e,t=0){return P(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Mn(r,[e],t)}var k8=_({pad1d_:T8});function I8(r,e,t=0){return P(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mn(r,e,t)}var C8=_({pad2d_:I8});function v8(r,e,t=0){return P(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mn(r,e,t)}var S8=_({pad3d_:v8});function w8(r,e,t=0){return P(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mn(r,e,t)}var _8=_({pad4d_:w8});function A8(r,e,t){let n=v(r,"x","spaceToBatchND");P(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),P(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),P(n.shape.reduce((i,a,u)=>u>0&&u<=e.length?i&&(a+t[u-1][0]+t[u-1][1])%e[u-1]==0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return N.runKernel(vs,o,s)}var Yl=_({spaceToBatchND_:A8});function N8(r,e,t,n,o,s,i){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=v(r,"x","maxPool"),u=a,l=!1;a.rank===3&&(l=!0,u=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(Lr(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let p=PI(u.shape,e,s,o,n),m=[p.dilationHeight,p.dilationWidth],c;n==="same"?c=P8([p.filterHeight,p.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=D8([p.inHeight,p.inWidth],m,c),g=d?n:"valid",y=d?u:Yl(u,m,f),T=(t==="avg"?()=>Gl(y,e,s,g,i):()=>Xl(y,e,s,g,i))(),k=d?T:Ul(T,m,h);return l?L(k,[k.shape[1],k.shape[2],k.shape[3]]):k}function D8(r,e,t){let n=t.map(p=>p[0]),o=t.map(p=>p[1]),s=r.concat(n,o),i=e.map((p,m)=>(p-s[m]%p)%p),a=o.map((p,m)=>p+i[m]),u=e.map((p,m)=>[n[m],a[m]]),l=e.map((p,m)=>[0,i[m]]);return[u,l]}function P8(r,e){let n=r.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),o=n.map(i=>Math.floor(i/2)),s=n.map((i,a)=>i-o[a]);return n.map((i,a)=>[o[a],s[a]])}var M8=_({pool_:N8});function E8(r,e){let t=v(r,"base","pow"),n=v(e,"exp","pow");[t,n]=Qe(t,n);let o={a:t,b:n};return N.runKernel(Bo,o)}var En=_({pow_:E8});function R8(r,e){let t=v(r,"x","prelu"),n=v(e,"alpha","prelu"),o={x:t,alpha:n};return N.runKernel($o,o)}var Ql=_({prelu_:R8});function F8(r,e=null,t=!1){let n=v(r,"x","prod");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return N.runKernel(Ta,o,s)}var Kd=_({prod_:F8});function L8(r,e,t){let n=nt(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return N.makeTensor(o,r,t)}var B8=_({rand_:L8});var Rb=_l(Vd());var qm=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=Rb.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,i;do o=2*this.random()-1,s=2*this.random()-1,i=o*o+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*o*a,t=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},hC=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=Rb.alea(s.toString()),this.randn=new qm(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,i;for(;;){do o=this.randn.nextValue(),i=1+this.c*o;while(i<=0);if(i*=i*i,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),s=this.randu(),s<t||Math.log(s)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},gC=class{constructor(e=0,t=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Rb.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function K8(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new hC(e,t,n,o),i=Ce(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var V8=_({randomGamma_:K8});function j8(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new qm(e,t,n,!1,o),i=Ce(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Fb=_({randomNormal_:j8});function H8(r,e=0,t=1,n="float32",o){let s=Ce(r,n),i=new gC(e,t,null,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var Ra=_({randomUniform_:H8});function fu(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return N.runKernel(ni,{},o)}function q8(r){let t={input:v(r,"input","real")};return N.runKernel(Vu,t)}var nl=_({real_:q8});function X8(r){let t={x:v(r,"x","reciprocal")};return N.runKernel(Xi,t)}var bC=_({reciprocal_:X8});function Y8(r){let t={x:v(r,"x","relu")};return N.runKernel(Oo,t)}var qr=_({relu_:Y8});function Q8(r){let t={x:v(r,"x","relu6")};return N.runKernel(Go,t)}var jd=_({relu6_:Q8});function Z8(r,e){let n={x:v(r,"x","reverse")},o={dims:e};return N.runKernel(ka,n,o)}var xr=_({reverse_:Z8});function J8(r){let e=v(r,"x","reverse");return P(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),xr(e,0)}var eX=_({reverse1d_:J8});function tX(r,e){let t=v(r,"x","reverse");return P(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),xr(t,e)}var rX=_({reverse2d_:tX});function nX(r,e){let t=v(r,"x","reverse");return P(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),xr(t,e)}var oX=_({reverse3d_:nX});function sX(r,e){let t=v(r,"x","reverse");return P(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),xr(t,e)}var aX=_({reverse4d_:sX});function iX(r){let t={x:v(r,"x","round")};return N.runKernel(Ia,t)}var Hd=_({round_:iX});function uX(r){let t={x:v(r,"x","rsqrt","float32")};return N.runKernel(Uo,t)}var qd=_({rsqrt_:uX});function ce(r,e){if((Ir(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Ir(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ln(r,[],[],e)}function lX(r){let t={x:v(r,"x","selu")};return N.runKernel(Yi,t)}var Xd=_({selu_:lX});function pX(r,e,t,n,o,s=[1,1],i="NHWC"){let a=v(r,"x","separableConv2d"),u=v(e,"depthwiseFilter","separableConv2d"),l=v(t,"pointwiseFilter","separableConv2d"),p=a,m=!1;if(a.rank===3&&(m=!0,p=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),P(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let c=u.shape[2],d=u.shape[3];P(l.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${l.shape[2]}.`);let f=pu(p,u,n,o,i,s),g=Zn(f,l,1,"valid",i);return m?L(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var yC=_({separableConv2d_:pX});async function mX(r,e){let t=v(r,"x","setdiff1d"),n=v(e,"y","setdiff1d");P(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),P(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),P(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),i=new Set(s),a=0;for(let p=0;p<o.length;p++)i.has(o[p])||a++;let u=new yt([a],t.dtype),l=new yt([a],"int32");for(let p=0,m=0;p<o.length;p++)i.has(o[p])||(u.values[m]=o[p],l.values[m]=p,m++);return[u.toTensor(),l.toTensor()]}var xC=mX;function cX(r){let t={x:v(r,"x","sign")};return N.runKernel(Qi,t)}var TC=_({sign_:cX});function dX(r){let t={x:v(r,"x","sin","float32")};return N.runKernel(Wo,t)}var Yd=_({sin_:dX});function fX(r){let t={x:v(r,"x","sinh")};return N.runKernel(va,t)}var Qd=_({sinh_:fX});function hX(r,e,t){let n=v(r,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),ze(n,[e],[t])}var Zd=_({slice1d_:hX});function gX(r,e,t){let n=v(r,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),ze(n,e,t)}var Lb=_({slice2d_:gX});function bX(r,e,t){let n=v(r,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),ze(n,e,t)}var Jd=_({slice3d_:bX});function yX(r,e,t){let n=v(r,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),ze(n,e,t)}var Xm=_({slice4d_:yX});function xX(r,e=-1){let t=v(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return N.runKernel(Ho,n,o)}var Jl=_({softmax_:xX});function TX(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return N.runKernel(xm,e)}var ep=_({fft_:TX});function kX(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return N.runKernel(Tm,e)}var ol=_({ifft_:kX});function IX(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=L(r,[t,e]);n=ol(o)}else{let o=[t,2*(e-1)],s=L(nl(r),[t,e]),i=L(Vl(r),[t,e]),a=xr(ze(s,[0,1],[t,e-2]),1),u=F(xr(ze(i,[0,1],[t,e-2]),1),ce(-1)),l=lt([s,a],1),p=lt([i,u],1),m=L(Yn(l,p),[o[0],o[1]]);n=ol(m)}if(n=nl(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=L(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var ef=_({irfft_:IX});function CX(r,e,t=0){let o={x:v(r,"x","split")},s={numOrSizeSplits:e,axis:t};return N.runKernel(Ss,o,s)}var Cr=_({split_:CX});function vX(r,e){P(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=ze(r,f,h),t=e}else if(e!=null&&e>t){let f=r.shape.map(h=>h);f[r.shape.length-1]=e-t,o=lt([r,xt(f)],r.shape.length-1),t=e}else o=r;let s=Ne(o),i=L(Yn(o,s),[n,t]),a=ep(i),u=Math.floor(t/2)+1,l=nl(a),p=Vl(a),m=Cr(l,[u,t-u],l.shape.length-1),c=Cr(p,[u,t-u],p.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=u,L(Yn(m[0],c[0]),d)}var tp=_({rfft_:vX});function SX(r){let t={x:v(r,"x","sqrt","float32")};return N.runKernel(Vo,t)}var Lt=_({sqrt_:SX});function wX(r,e){let t=v(r,"a","squaredDifference"),n=v(e,"b","squaredDifference");[t,n]=Qe(t,n),Ge(t.shape,n.shape);let o={a:t,b:n},s={};return N.runKernel(qo,o,s)}var tf=_({squaredDifference_:wX});function _X(r,e){let t=v(r,"x","squeeze");return L(t,Rk(t.shape,e).newShape)}var dn=_({squeeze_:_X});function AX(r,e=0){let t=ru(r,"tensors","stack","string_or_numeric");P(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&P(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return N.runKernel(Ts,n,o)}var fr=_({stack_:AX});function NX(r,e=0){let n={x:v(r,"x","step")},o={alpha:e};return N.runKernel(As,n,o)}var hu=_({step_:NX});function DX(r,e,t,n,o=0,s=0,i=0,a=0,u=0){let p={x:v(r,"x","stridedSlice","string_or_numeric")},m={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};return N.runKernel(Sa,p,m)}var kC=_({stridedSlice_:DX});function PX(r){let t={x:v(r,"x","tan","float32")};return N.runKernel(wa,t)}var IC=_({tan_:PX});function zt(r,e){io(r);let t=Wr(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ln(r,null,t,e)}function di(r,e,t){if(io(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Wr(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ln(r,e,n,t)}function MX(r,e,t){if(io(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Wr(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ln(r,e,n,t)}function EX(r,e,t){if(io(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Wr(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ln(r,e,n,t)}function RX(r,e,t){if(io(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Wr(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,ln(r,e,n,t)}function FX(r,e=1,t=!0){let n=v(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},i={k:e,sorted:t},[a,u]=N.runKernel(_a,s,i);return{values:a,indices:u}}var CC=_({topk_:FX});function LX(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new qm(e,t,n,!0,o),i=Ce(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var rp=_({truncatedNormal_:LX});function BX(r,e=0){let t=v(r,"x","unique","string_or_numeric");P(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,i]=N.runKernel(Pm,n,o);return{values:s,indices:i}}var Bb=_({unique_:BX});function $X(r,e,t){let n=v(r,"x","unsortedSegmentSum"),o=v(e,"segmentIds","unsortedSegmentSum","int32");P(Pi(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},i={numSegments:t};return N.runKernel(Qu,s,i)}var vC=_({unsortedSegmentSum_:$X});function OX(r,e=0){let t=v(r,"x","unstack","string_or_numeric");P(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return N.runKernel(ws,n,o)}var Or=_({unstack_:OX});function SC(r,e=!0,t,n){return N.makeVariable(r,e,t,n)}function $b(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Ce(r,"int32"),o=Ce([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let i=n.indexToLoc(t[s]),a=s*r.length;o.values.set(i,a)}return o.toTensor()}async function zX(r){let e=v(r,"condition","whereAsync","bool"),t=await e.data(),n=$b(e.shape,t);return r!==e&&e.dispose(),n}var rf=zX;async function GX(r,e,t){let n=v(r,"tensor","boolMask"),o=v(e,"mask","boolMask","bool"),s=t??0,i=o.rank,a=n.shape;P(i>0,()=>"mask cannot be scalar"),Wt(a.slice(s,s+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+i;h++)u*=a[h];let l=a.slice(0,s).concat([u],a.slice(s+i)),p=L(n,l),m=L(o,[-1]),c=await rf(m),d=dn(c,[1]),f=pi(p,d,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),d.dispose(),p.dispose(),m.dispose(),c.dispose(),f}var ELe=GX;function UX(r,e="euclidean",t=null,n=!1){r=v(r,"x","norm");let o=c2(r,e,t),s=o.shape;if(n){let i=yr(t,r.shape);s=Ls(o.shape,i)}return L(o,s)}function c2(r,e,t=null){if(r.rank===0)return $t(r);if(r.rank!==1&&t===null)return c2(L(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return he($t(r),t);if(e===1/0)return en($t(r),t);if(e===-1/0)return jm($t(r),t);if(e==="euclidean"||e===2)return Lt(he(En($t(r),ce(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return en(he($t(r),t[0]),t[1]-1);if(e===1/0)return en(he($t(r),t[1]),t[0]);if(e===-1/0)return jm(he($t(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Lt(he(qe(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Ob=_({norm_:UX});function WX(r,e,t,n,o=!0){let s=v(r,"v","movingAverage"),i=v(e,"x","movingAverage"),a=v(t,"decay","movingAverage");Qk(s,i),P(Kn(s.shape,i.shape),()=>"Shape mismatch in v and x");let u=ce(1),l=pe(u,a),p=F(pe(i,s),l);if(o){P(n!=null,()=>"When using zeroDebias: true, step is required.");let m=v(n,"step","movingAverage");p=me(p,pe(u,En(a,m)))}return X(s,p)}var nBe=_({movingAverage_:WX});function KX(r,e,t){let n=v(r,"indices","scatterND","int32"),o=v(e,"updates","scatterND");wb(o,n,t);let s={indices:n,updates:o},i={shape:t};return N.runKernel(Ca,s,i)}var d2=_({scatterND_:KX});function f2(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let i=e.size;if(!(e.rank===0||e.rank===1&&i===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function jX(r,e,t,n=0){let o=v(r,"sparseIndices","sparseToDense","int32"),s=v(e,"sparseValues","sparseToDense"),i=v(n,"defaultValue","sparseToDense",s.dtype);f2(o,s,t,i);let a={sparseIndices:o,sparseValues:s,defaultValue:i},u={outputShape:t};return N.runKernel(Xu,a,u)}var zb=_({sparseToDense_:jX});function HX(r,e){let t=v(e,"indices","gatherND","int32"),o={params:v(r,"x","gatherND","string_or_numeric"),indices:t};return N.runKernel(ma,o)}var h2=_({gatherND_:HX});function g2(r,e){if(e==null)return r.shape.slice();if(Kn(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function qX(r,e,t,n){let o=v(r,"x","dropout");if(P(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),P(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Ye?o.clone():o;let s=g2(o,t),i=1-e,a=me(cu(X(Ra(s,0,1,"float32",n),i)),i);return F(o,a)}var b2=_({dropout_:qX});function y2(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Gb(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let i=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(i)}return zt(o,"float32")}async function XX(r,e,t=1){let n=v(r,"predictions","inTopK"),o=v(e,"targets","inTopK");P(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),P(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Wt(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];P(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let i=await n.data(),a=await o.data(),[u,l]=[i.length/s,s],p=Fk("bool",u);for(let m=0;m<u;m++){let c=m*l,d=i.subarray(c,c+l),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),p[m]=0;for(let h=0;h<t;h++)if(f[h].index===a[m]){p[m]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Fr(p,o.shape,"bool")}var GBe=XX;var Bs={};Xe(Bs,{conv2d:()=>x2,depthwiseConv2d:()=>T2,matMul:()=>k2});function YX(r,e,t,n,o,s="NHWC",i){let a=r;r.rank===3&&(a=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=L(e,[1,e.shape[0],e.shape[1],e.shape[2]])),P(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),P(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),P(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let l=s==="NHWC"?a.shape[3]:a.shape[1],p=s==="NHWC"?u.shape[3]:u.shape[1];P(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),P(p===t[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${t[3]}).`),Pt("conv2dDerFilter",o,i);let m={x:a,dy:u},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,filterShape:t};return N.runKernel(mm,m,c)}var Ym=_({conv2DBackpropFilter_:YX});function np(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return F(r,hu(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function op(r,e){let t=e,n=vt(r.shape,e.shape);return n.length>0&&(t=he(t,n)),L(t,r.shape)}function sp(r,e,t,n){if(e==="linear")return r;if(e==="relu")return qr(r);if(e==="elu")return mu(r);if(e==="relu6")return jd(r);if(e==="prelu")return Ql(r,t);if(e==="leakyrelu")return jl(r,n);if(e==="sigmoid")return mn(r);throw new Error(`Unknown fused activation ${e}.`)}var ap=(r,e)=>!(r>0)||e==="linear";function QX({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(u=u||"linear",ap(N.state.gradientDepth,u)===!1){let C=Zn(r,e,t,n,o,s,i);return a!=null&&(C=X(C,a)),sp(C,u,l,p)}let m=v(r,"x","conv2d","float32"),c=v(e,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=L(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Pt("fused conv2d",n,i),P(d.shape[3]===c.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${c.shape[2]}.`),P(Lr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let h=Ol(d.shape,c.shape,t,s,n,i),g;a!=null&&(g=v(a,"bias","fused conv2d"),[g]=Qe(g,m),Ge(h.outShape,g.shape));let y;l!=null&&(y=v(l,"prelu weights","fused conv2d"));let x=(C,A)=>{let[M,D,R,B]=A,U=np(C,R,u);P(Zo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=Km(D.shape,U,M,t,n),K=Ym(D,U,M.shape,t,n),j=[W,K];if(B!=null){let V=op(B,U);j.push(V)}return j},T={x:d,filter:c,bias:g,preluActivationWeights:y},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:p};return a==null?cn((A,M,D)=>{let R=N.runKernel(Ds,T,k);return D([M,A,R]),f&&(R=L(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(d,c):cn((A,M,D,R)=>{let B=N.runKernel(Ds,T,k);return R([M,A,B,D]),f&&(B=L(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:x}})(d,c,g)}var x2=_({fusedConv2d_:QX});function ZX(r,e,t,n,o,s=[1,1],i){let a=r;r.rank===3&&(a=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={x:a,dy:u},p={strides:n,pad:o,dimRoundingMode:i,dilations:s,filterShape:t};return N.runKernel(hm,l,p)}var Ub=_({depthwiseConv2dNativeBackpropFilter_:ZX});function JX(r,e,t,n,o,s=[1,1],i){let a=e,u=!1;e.rank===3&&(u=!0,a=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={dy:a,filter:t},p={strides:n,pad:o,dimRoundingMode:i,dilations:s,inputShape:r},m=N.runKernel(gm,l,p);return u?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Wb=_({depthwiseConv2dNativeBackpropInput_:JX});function eY({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(ap(N.state.gradientDepth,u)===!1){let C=pu(r,e,t,n,o,s,i);return a!=null&&(C=X(C,a)),sp(C,u,l,p)}let m=v(r,"x","depthwiseConv2d","float32"),c=v(e,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=L(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),P(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),P(Lr(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),Pt("fused depthwiseConv2d",n,i);let h=Ol(d.shape,c.shape,t,s,n,i,!0),g;a!=null&&(g=v(a,"bias","fused conv2d"),[g]=Qe(g,m),Ge(h.outShape,g.shape));let y;l!=null&&(y=v(l,"prelu weights","fused depthwiseConv2d"));let x=(C,A)=>{P(Zo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[M,D,R,B]=A,U=np(C,R,u),W=Wb(D.shape,U,M,t,n,s,i),K=Ub(D,U,M.shape,t,n,s,i);if(B!=null){let j=op(g,U);return[W,K,j]}return[W,K]},T={x:d,filter:c,bias:g,preluActivationWeights:y},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:p};return a==null?cn((A,M,D)=>{let R=N.runKernel(Ps,T,k);return D([M,A,R]),f&&(R=L(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(d,c):cn((A,M,D,R)=>{let B=N.runKernel(Ps,T,k);return R([M,A,B,D]),f&&(B=L(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:x}})(d,c,g)}var T2=_({fusedDepthwiseConv2d_:eY});function tY({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a}){if(ap(N.state.gradientDepth,s)===!1){let U=Ve(r,e,t,n);return o!=null&&(U=X(U,o)),sp(U,s,i,a)}let u=v(r,"a","fused matMul"),l=v(e,"b","fused matMul");[u,l]=Qe(u,l);let p=t?u.shape[u.rank-2]:u.shape[u.rank-1],m=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=t?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=nt(f),y=nt(h);P(p===m,()=>`Error in fused matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${t} and transposeB=${n} must match.`);let T=Ge(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([c,d]),k=t?L(u,[g,p,c]):L(u,[g,c,p]),C=n?L(l,[y,d,m]):L(l,[y,m,d]),A;o!=null&&(A=v(o,"bias","fused matMul"),[A]=Qe(A,u),Ge(T,A.shape));let M;i!=null&&(M=v(i,"prelu weights","fused matMul"));let D=(U,W)=>{let[K,j,V,q]=W,ee=np(L(U,V.shape),V,s),Z,te;if(!t&&!n?(Z=Ve(ee,j,!1,!0),te=Ve(K,ee,!0,!1)):!t&&n?(Z=Ve(ee,j,!1,!1),te=Ve(ee,K,!0,!1)):t&&!n?(Z=Ve(j,ee,!1,!0),te=Ve(K,ee,!1,!1)):(Z=Ve(j,ee,!0,!0),te=Ve(ee,K,!0,!0)),o!=null){let oe=op(q,ee);return[Z,te,oe]}else return[Z,te]},R={a:k,b:C,bias:A,preluActivationWeights:M},B={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:a};return o==null?cn((W,K,j)=>{let V=N.runKernel(Ns,R,B);return j([W,K,V]),{value:L(V,T),gradFunc:D}})(k,C):cn((W,K,j,V)=>{let q=N.runKernel(Ns,R,B);return V([W,K,q,j]),{value:L(q,T),gradFunc:D}})(k,C,A)}var k2=_({fusedMatMul_:tY});function rY(r){return Gb(r,.54,.46)}var I2=_({hammingWindow_:rY});function nY(r){return Gb(r,.5,.5)}var Kb=_({hannWindow_:nY});function oY(r,e,t,n=!1,o=0){let s=0,i=[];for(;s+e<=r.size;)i.push(ze(r,s,e)),s+=t;if(n)for(;s<r.size;){let a=s+e-r.size,u=lt([ze(r,s,e-a),Ea([a],o)]);i.push(u),s+=t}return i.length===0?di([],[0,e]):L(lt(i),[i.length,e])}var Vb=_({frame_:oY});function sY(r,e,t,n,o=Kb){n==null&&(n=y2(e));let s=Vb(r,e,t),i=F(s,o(e));return tp(i,n)}var C2=_({stft_:sY});function aY(r,e,t,n,o="bilinear",s=0){let i=v(r,"image","cropAndResize"),a=v(e,"boxes","cropAndResize","float32"),u=v(t,"boxInd","cropAndResize","int32"),l=a.shape[0];P(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),P(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),P(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let p={image:i,boxes:a,boxInd:u},m={method:o,extrapolationValue:s,cropSize:n};return N.runKernel(aa,p,m)}var v2=_({cropAndResize_:aY});function iY(r){let e=v(r,"image","flipLeftRight","float32");P(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return N.runKernel(pa,t,{})}var S2=_({flipLeftRight_:iY});function uY(r){let e=v(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];P(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,jr(e,o)}var w2=_({grayscaleToRGB_:uY});function lY(r,e,t=0,n=.5){let o=v(r,"image","rotateWithOffset","float32");P(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},i={radians:e,fillValue:t,center:n};return N.runKernel(Na,s,i)}var _2=_({rotateWithOffset_:lY});function $s(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return t=Math.min(t,i),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),P(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),P(e.rank===1,()=>"scores must be a 1D tensor"),P(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),P(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function pY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression","float32"),i=v(e,"scores","nonMaxSuppression","float32"),a=$s(s,i,t,n,o);t=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return N.runKernel(ba,{boxes:s,scores:i},u)}var A2=_({nonMaxSuppression_:pY});function N2(r,e,t){let n=mY(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function mY(r,e,t){return dY(r,e,t||cY)}function cY(r,e){return r>e?1:r<e?-1:0}function dY(r,e,t){let n=0,o=r.length,s=0,i=!1;for(;n<o;){s=n+(o-n>>>1);let a=t(e,r[s]);a>0?n=s+1:(o=s,i=!a)}return i?n:-n-1}function jb(r,e,t,n,o){return wC(r,e,t,n,o,0)}function Hb(r,e,t,n,o,s){return wC(r,e,t,n,o,0,!1,s,!0)}function qb(r,e,t,n,o,s){return wC(r,e,t,n,o,s,!0)}function wC(r,e,t,n,o,s,i=!1,a=!1,u=!1){let l=[];for(let g=0;g<e.length;g++)e[g]>o&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(D2);let p=s>0?-.5/s:0,m=[],c=[];for(;m.length<t&&l.length>0;){let g=l.pop(),{score:y,boxIndex:x,suppressBeginIndex:T}=g;if(y<o)break;let k=!1;for(let C=m.length-1;C>=T;--C){let A=fY(r,x,m[C]);if(A>=n){k=!0;break}if(g.score=g.score*hY(n,p,A),g.score<=o)break}g.suppressBeginIndex=m.length,k||(g.score===y?(m.push(x),c.push(g.score)):g.score>o&&N2(l,g,D2))}let d=m.length,f=t-d;a&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return i&&(h.selectedScores=c),u&&(h.validOutputs=d),h}function fY(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),p=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(a-s)*(u-i),f=(m-l)*(c-p);if(d<=0||f<=0)return 0;let h=Math.max(s,l),g=Math.max(i,p),y=Math.min(a,m),x=Math.min(u,c),T=Math.max(y-h,0)*Math.max(x-g,0);return T/(d+f-T)}function hY(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function D2(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function gY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),a=$s(s,i,t,n,o);t=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u=await Promise.all([s.data(),i.data()]),l=u[0],p=u[1],{selectedIndices:m}=jb(l,p,t,n,o);return s!==r&&s.dispose(),i!==e&&i.dispose(),zt(m,"int32")}var P2=gY;function bY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=v(r,"boxes","nonMaxSuppression"),a=v(e,"scores","nonMaxSuppression"),u=$s(i,a,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:i,scores:a},p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=N.runKernel(ya,l,p);return{selectedIndices:m[0],selectedScores:m[1]}}var M2=_({nonMaxSuppressionWithScore_:bY});async function yY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=v(r,"boxes","nonMaxSuppressionAsync"),a=v(e,"scores","nonMaxSuppressionAsync"),u=$s(i,a,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([i.data(),a.data()]),p=l[0],m=l[1],{selectedIndices:c,selectedScores:d}=qb(p,m,t,n,o,s);return i!==r&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:zt(c,"int32"),selectedScores:zt(d)}}var E2=yY;function xY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=v(r,"boxes","nonMaxSuppression"),a=v(e,"scores","nonMaxSuppression"),u=$s(i,a,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,c={boxes:i,scores:a},d={maxOutputSize:l,iouThreshold:p,scoreThreshold:m,padToMaxOutputSize:s},f=N.runKernel(qi,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var R2=_({nonMaxSuppressionPadded_:xY});async function TY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=v(r,"boxes","nonMaxSuppressionAsync"),a=v(e,"scores","nonMaxSuppressionAsync"),u=$s(i,a,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,[c,d]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:h}=Hb(c,d,l,p,m,s);return i!==r&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:zt(f,"int32"),validOutputs:ce(h,"int32")}}var F2=TY;function kY(r,e,t=!1,n=!1){let o=v(r,"images","resizeBilinear");P(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),P(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,a={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=N.runKernel(zo,a,u);return i?L(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var L2=_({resizeBilinear_:kY});function IY(r,e,t=!1,n=!1){let o=v(r,"images","resizeNearestNeighbor");P(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),P(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,a={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=N.runKernel(oi,a,u);return i?L(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var B2=_({resizeNearestNeighbor_:IY});function CY(r,e="binary",t=!1,n=.5){let o=v(r,"image","threshold"),s=.2989,i=.587,a=.114,u=o.shape[0]*o.shape[1],l=F(zt([n]),255),p,m,c,d;if(P(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),P(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),P(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),P(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[p,m,c]=Cr(o,[1,1,1],-1);let g=F(p,s),y=F(m,i),x=F(c,a);d=X(X(g,y),x)}else d=r;if(e==="otsu"){let g=Ed(J(Hd(d),"int32"),Fr([]),256);l=vY(g,u)}let f=t?ts(d,l):nr(d,l);return J(F(f,255),"int32")}function vY(r,e){let t=zt([-1]),n=zt([0]),o=zt([0]),s,i,a,u,l,p;for(let m=0;m<r.size-1;m++){s=ze(r,0,m+1),i=ze(r,m+1),l=me(he(s),e),p=me(he(i),e);let c=he(F(s,fu(0,s.size)));a=me(c,he(s));let d=Ea(i.shape,s.size),f=X(fu(0,i.size),d),h=F(i,f);u=me(he(h),he(i));let g=pe(a,u),y=pe(a,u),x=F(l,p);o=F(F(x,g),y);let T=nr(o,n);n=Ot(T,o,n),t=Ot(T,zt([m]),t)}return t}var $2=_({threshold_:CY});function SY(r,e,t="nearest",n="constant",o=0,s){let i=v(r,"image","transform","float32"),a=v(e,"transforms","transform","float32");P(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),P(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:i,transforms:a},l={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return N.runKernel(Aa,u,l)}var O2=_({transform_:SY});function wY(r,e,t){P(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),P(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=v(r,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,i]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=i))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`);e<0&&(e=s),t<0&&(t=i);let a=L(fu(0,s,1,"int32"),[-1,1]),u=fu(0,i,1,"int32"),l=pe(a,u),p=Hr(ts(l,ce(+e,"int32")),es(l,ce(-t,"int32"))),m=xt([s,i],n.dtype);return L(fr(Or(L(n,[-1,s,i])).map(c=>Ot(p,c,m))),o)}var z2=_({bandPart_:wY});function _Y(r){let e;if(Array.isArray(r)){e=!1,P(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)P(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=Cr(r,r.shape[0],0).map(o=>dn(o,[0]));P(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(N.tidy(()=>{let s=n[o];if(o>0)for(let i=0;i<o;++i){let a=F(he(F(t[i],s)),t[i]);s=pe(s,a)}return me(s,Ob(s,"euclidean"))}));return e?fr(t,0):t}var G2=_({gramSchmidt_:_Y});function AY(r,e=!1){if(P(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return U2(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=Or(L(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,p]=U2(u,e);o.push(l),s.push(p)});let i=L(fr(o,0),r.shape),a=L(fr(s,0),r.shape);return[i,a]}}function U2(r,e=!1){return N.tidy(()=>{P(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=Vm(t),s=Dn(r),i=di([[1]],[1,1]),a=Dn(i),u=t>=n?n:t;for(let l=0;l<u;++l){let p=s,m=a,c=o;[a,s,o]=N.tidy(()=>{let d=ze(s,[l,l],[t-l,1]),f=Ob(d),h=ze(s,[l,l],[1,1]),g=Ot(nr(h,0),di([[-1]]),di([[1]])),y=pe(h,F(g,f)),x=me(d,y);x.shape[0]===1?a=Dn(i):a=lt([i,ze(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let T=Ze(me(Ve(g,y),f)),k=ze(s,[l,0],[t-l,n]),C=F(T,a),A=He(a);if(l===0)s=pe(k,Ve(C,Ve(A,k)));else{let R=pe(k,Ve(C,Ve(A,k)));s=lt([ze(s,[0,0],[l,n]),R],0)}let M=He(C),D=ze(o,[0,l],[t,o.shape[1]-l]);if(l===0)o=pe(D,Ve(Ve(D,a),M));else{let R=pe(D,Ve(Ve(D,a),M));o=lt([ze(o,[0,0],[t,l]),R],1)}return[a,s,o]}),Ee([p,m,c])}return!e&&t>n&&(o=ze(o,[0,0],[t,n]),s=ze(s,[0,0],[n,n])),[o,s]})}var W2=_({qr_:AY});var ir=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))(ir||{});function NY(r,e,t=ir.SUM_BY_NONZERO_WEIGHTS){let n=v(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=v(e,"weights","computeWeightedLoss"));let s=o==null?n:F(n,o);if(t===ir.NONE)return s;if(t===ir.SUM)return he(s);if(t===ir.MEAN){if(o==null)return Ft(s);{let i=n.size/o.size,a=me(he(s),he(o));return i>1?me(a,ce(i)):a}}if(t===ir.SUM_BY_NONZERO_WEIGHTS){if(o==null)return me(he(s),ce(n.size));{let i=F(o,dr(n.shape)),a=J(he(ci(i,ce(0))),"float32");return me(he(s),a)}}throw Error(`Unknown reduction: ${t}`)}var Xr=_({computeWeightedLoss_:NY});function DY(r,e,t,n=ir.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","absoluteDifference"),s=v(e,"predictions","absoluteDifference"),i=null;t!=null&&(i=v(t,"weights","absoluteDifference")),Wt(o.shape,s.shape,"Error in absoluteDifference: ");let a=$t(pe(o,s));return Xr(a,i,n)}var K2=_({absoluteDifference_:DY});function PY(r,e,t,n,o=ir.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","cosineDistance"),i=v(e,"predictions","cosineDistance"),a=null;n!=null&&(a=v(n,"weights","cosineDistance")),Wt(s.shape,i.shape,"Error in cosineDistance: ");let u=ce(1),l=pe(u,he(F(s,i),t,!0));return Xr(l,a,o)}var V2=_({cosineDistance_:PY});function MY(r,e,t,n=ir.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","hingeLoss"),s=v(e,"predictions","hingeLoss"),i=null;t!=null&&(i=v(t,"weights","hingeLoss")),Wt(o.shape,s.shape,"Error in hingeLoss: ");let a=ce(1);o=pe(F(ce(2),o),a);let u=qr(pe(a,F(o,s)));return Xr(u,i,n)}var j2=_({hingeLoss_:MY});function EY(r,e,t,n=1,o=ir.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","huberLoss"),i=v(e,"predictions","huberLoss"),a=null;t!=null&&(a=v(t,"weights","huberLoss")),Wt(s.shape,i.shape,"Error in huberLoss: ");let u=ce(n),l=$t(pe(i,s)),p=du(l,u),m=pe(l,p),c=X(F(ce(.5),qe(p)),F(u,m));return Xr(c,a,o)}var H2=_({huberLoss_:EY});function RY(r,e,t,n=1e-7,o=ir.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","logLoss"),i=v(e,"predictions","logLoss"),a=null;t!=null&&(a=v(t,"weights","logLoss")),Wt(s.shape,i.shape,"Error in logLoss: ");let u=ce(1),l=ce(n),p=Ze(F(s,$r(X(i,l)))),m=F(pe(u,s),$r(X(pe(u,i),l))),c=pe(p,m);return Xr(c,a,o)}var q2=_({logLoss_:RY});function FY(r,e,t,n=ir.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","meanSquaredError"),s=v(e,"predictions","meanSquaredError"),i=null;t!=null&&(i=v(t,"weights","meanSquaredError")),Wt(o.shape,s.shape,"Error in meanSquaredError: ");let a=tf(o,s);return Xr(a,i,n)}var X2=_({meanSquaredError_:FY});function LY(r,e){let t=v(r,"labels","sigmoidCrossEntropyWithLogits"),n=v(e,"logits","sigmoidCrossEntropyWithLogits");Wt(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=qr(n),s=F(n,t),i=Hl(cr(Ze($t(n))));return X(pe(o,s),i)}function BY(r,e,t,n=0,o=ir.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"multiClassLabels","sigmoidCrossEntropy"),i=v(e,"logits","sigmoidCrossEntropy"),a=null;if(t!=null&&(a=v(t,"weights","sigmoidCrossEntropy")),Wt(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=ce(n),p=ce(1),m=ce(.5);s=X(F(s,pe(p,l)),F(m,l))}let u=LY(s,i);return Xr(u,a,o)}var Y2=_({sigmoidCrossEntropy_:BY});function $Y(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return cn((o,s,i)=>{let u=oC(s,[t],!0),l=pe(J(s,"float32"),u);i([o,l]);let p=Ze(F(l,o));return{value:he(p,[t]),gradFunc:(d,f)=>{let[h,g]=f,y=Ls(d.shape,[t]);return[F(L(d,y),pe(J(h,"float32"),cr(g))),F(L(d,y),pe(cr(g),J(h,"float32")))]}}})(r,e)}function OY(r,e,t,n=0,o=ir.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"onehotLabels","softmaxCrossEntropy"),i=v(e,"logits","softmaxCrossEntropy"),a=null;if(t!=null&&(a=v(t,"weights","softmaxCrossEntropy")),Wt(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let l=ce(n),p=ce(1),m=ce(s.shape[1]);s=X(F(s,pe(p,l)),me(l,m))}let u=$Y(s,i);return Xr(u,a,o)}var Q2=_({softmaxCrossEntropy_:OY});function zY(r,e,t,n){let o=v(r,"indices","sparseFillEmptyRows","int32"),s=v(e,"values","sparseFillEmptyRows"),i=v(t,"denseShape","sparseFillEmptyRows","int32"),a=v(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let u={indices:o,values:s,denseShape:i,defaultValue:a},l=N.runKernel(ju,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var Z2=_({sparseFillEmptyRows_:zY});function GY(r,e,t){let n=v(r,"inputIndices","sparseReshape","int32"),o=v(e,"inputShape","sparseReshape","int32"),s=v(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:o,newShape:s},a=N.runKernel(Ji,i);return{outputIndices:a[0],outputShape:a[1]}}var J2=_({sparseReshape_:GY});function UY(r,e,t){let n=v(r,"data","sparseSegmentMean"),o=v(e,"indices","sparseSegmentMean","int32"),s=v(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return N.runKernel(Hu,i)}var e1=_({sparseSegmentMean_:UY});function WY(r,e,t){let n=v(r,"data","sparseSegmentSum"),o=v(e,"indices","sparseSegmentSum","int32"),s=v(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return N.runKernel(qu,i)}var t1=_({sparseSegmentSum_:WY});function KY(r,e,t,n,o,s,i,a){let u=v(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=v(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:i,preserveShortSequences:a},m={data:u,dataSplits:l},c=N.runKernel(Yu,m,p);return{nGrams:c[0],nGramsSplits:c[1]}}var r1=_({stringNGrams_:KY});function VY(r,e,t=!0){let n=v(r,"input","stringSplit","string"),o=v(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},i={input:n,delimiter:o},a=N.runKernel(Nm,i,s);return{indices:a[0],values:a[1],shape:a[2]}}var n1=_({stringSplit_:VY});function jY(r,e){let t=v(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return N.runKernel(Dm,o,n)}var o1=_({stringToHashBucketFast_:jY});var wKe={fft:ep,ifft:ol,rfft:tp,irfft:ef},PKe={hammingWindow:I2,hannWindow:Kb,frame:Vb,stft:C2},Rn={flipLeftRight:S2,grayscaleToRGB:w2,resizeNearestNeighbor:B2,resizeBilinear:L2,rotateWithOffset:_2,cropAndResize:v2,nonMaxSuppression:A2,nonMaxSuppressionAsync:P2,nonMaxSuppressionWithScore:M2,nonMaxSuppressionWithScoreAsync:E2,nonMaxSuppressionPadded:R2,nonMaxSuppressionPaddedAsync:F2,threshold:$2,transform:O2},s1={bandPart:z2,gramSchmidt:G2,qr:W2},oVe={absoluteDifference:K2,computeWeightedLoss:Xr,cosineDistance:V2,hingeLoss:j2,huberLoss:H2,logLoss:q2,meanSquaredError:X2,sigmoidCrossEntropy:Y2,softmaxCrossEntropy:Q2},nf={sparseFillEmptyRows:Z2,sparseReshape:J2,sparseSegmentMean:e1,sparseSegmentSum:t1},Xb={stringNGrams:r1,stringSplit:n1,stringToHashBucketFast:o1};var tn=class extends _b{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let i=n.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return Ee(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Pb(e,t)}dispose(){this.iterations_!=null&&Ee(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(tn,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var ip=class extends tn{constructor(e,t,n=null){super();this.learningRate=e;this.rho=t;this.epsilon=n;this.accumulatedGrads=[];this.accumulatedUpdates=[];n==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=N.registeredVariables[n],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:G(()=>Ne(s).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:G(()=>Ne(s).variable(i))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let u=this.accumulatedGrads[o].variable,l=this.accumulatedUpdates[o].variable;G(()=>{let p=X(F(u,this.rho),F(qe(a),1-this.rho)),m=F(me(Lt(X(l,this.epsilon)),Lt(X(u,this.epsilon))),a),c=X(F(l,this.rho),F(qe(m),1-this.rho));u.assign(p),l.assign(c);let d=X(F(m,-this.learningRate),s);s.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ee(this.accumulatedGrads.map(e=>e.variable)),Ee(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};ip.className="Adadelta";Pn(ip);var up=class extends tn{constructor(e,t=.1){super();this.learningRate=e;this.initialAccumulatorValue=t;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=N.registeredVariables[n];if(this.accumulatedGrads[o]==null){let u=!1;this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:G(()=>Ea(s.shape,this.initialAccumulatorValue).variable(u))}}let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let a=this.accumulatedGrads[o].variable;G(()=>{let u=X(a,qe(i));a.assign(u);let l=X(F(me(i,Lt(X(u,N.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ee(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};up.className="Adagrad";Pn(up);var lp=class extends tn{constructor(e,t,n,o=null){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];G(()=>{this.accBeta1=ce(t).variable(),this.accBeta2=ce(n).variable()}),o==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);G(()=>{let n=pe(1,this.accBeta1),o=pe(1,this.accBeta2);t.forEach((s,i)=>{let a=N.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:G(()=>Ne(a).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:G(()=>Ne(a).variable(u))});let l=Array.isArray(e)?e[i].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[i].variable,m=this.accumulatedSecondMoment[i].variable,c=X(F(p,this.beta1),F(l,1-this.beta1)),d=X(F(m,this.beta2),F(qe(l),1-this.beta2)),f=me(c,n),h=me(d,o);p.assign(c),m.assign(d);let g=X(F(me(f,X(Lt(h),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(F(this.accBeta1,this.beta1)),this.accBeta2.assign(F(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ee(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),G(()=>{this.accBeta1.assign(En(this.beta1,this.iterations_+1)),this.accBeta2.assign(En(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};lp.className="Adam";Pn(lp);var pp=class extends tn{constructor(e,t,n,o=null,s=0){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.decay=s;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];G(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(t).variable()}),o==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);G(()=>{let n=pe(1,this.accBeta1),o=me(-this.learningRate,X(F(this.iteration,this.decay),1));t.forEach((s,i)=>{let a=N.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:Ne(a).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:Ne(a).variable(u)});let l=Array.isArray(e)?e[i].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[i].variable,m=this.accumulatedWeightedInfNorm[i].variable,c=X(F(p,this.beta1),F(l,1-this.beta1)),d=F(m,this.beta2),f=$t(l),h=Jn(d,f);p.assign(c),m.assign(h);let g=X(F(me(o,n),me(c,X(h,this.epsilon))),a);a.assign(g)}),this.iteration.assign(X(this.iteration,1)),this.accBeta1.assign(F(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ee(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};pp.className="Adamax";Pn(pp);var gu=class extends tn{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let i=N.registeredVariables[n];G(()=>{let a=X(F(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Vt(ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};gu.className="SGD";Pn(gu);var mp=class extends gu{constructor(e,t,n=!1){super(e);this.learningRate=e;this.momentum=t;this.useNesterov=n;this.accumulations=[];this.m=ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=N.registeredVariables[n];if(this.accumulations[o]==null){let u=!1;this.accumulations[o]={originalName:`${n}/momentum`,variable:G(()=>Ne(s).variable(u))}}let i=this.accumulations[o].variable,a=Array.isArray(e)?e[o].tensor:e[n];a!=null&&G(()=>{let u,l=X(F(this.m,i),a);this.useNesterov?u=X(F(this.c,X(a,F(l,this.m))),s):u=X(F(this.c,l),s),i.assign(l),s.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ee(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};mp.className="Momentum";Pn(mp);var cp=class extends tn{constructor(e,t=.9,n=0,o=null,s=!1){super();this.learningRate=e;this.decay=t;this.momentum=n;this.epsilon=o;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=s,o==null&&(this.epsilon=N.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=N.registeredVariables[n],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:G(()=>Ne(s).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:G(()=>Ne(s).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:G(()=>Ne(s).variable(i))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let u=this.accumulatedMeanSquares[o].variable,l=this.accumulatedMoments[o].variable;G(()=>{let p=X(F(u,this.decay),F(qe(a),1-this.decay));if(this.centered){let m=this.accumulatedMeanGrads[o].variable,c=X(F(m,this.decay),F(a,1-this.decay)),d=me(F(a,this.learningRate),Lt(pe(p,X(qe(c),this.epsilon)))),f=X(F(l,this.momentum),d);u.assign(p),m.assign(c),l.assign(f);let h=pe(s,f);s.assign(h)}else{let m=X(F(u,this.decay),F(qe(a),1-this.decay)),c=X(F(l,this.momentum),me(F(a,this.learningRate),Lt(X(m,this.epsilon))));u.assign(m),l.assign(c);let d=pe(s,c);s.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ee(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ee(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ee(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};cp.className="RMSProp";Pn(cp);var fi=class{static sgd(e){return new gu(e)}static momentum(e,t,n=!1){return new mp(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new cp(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new lp(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new ip(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new pp(e,t,n,o,s)}static adagrad(e,t=.1){return new up(e,t)}};var dp={sgd:fi.sgd,momentum:fi.momentum,adadelta:fi.adadelta,adagrad:fi.adagrad,rmsprop:fi.rmsprop,adamax:fi.adamax,adam:fi.adam};var HY=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:r=>r())();function _C(){return new Promise(r=>HY(()=>r()))}var I={};Xe(I,{ERF_A1:()=>oQ,ERF_A2:()=>sQ,ERF_A3:()=>aQ,ERF_A4:()=>iQ,ERF_A5:()=>uQ,ERF_P:()=>nQ,PARALLELIZE_THRESHOLD:()=>Yb,SELU_SCALE:()=>NC,SELU_SCALEALPHA:()=>AC,applyActivation:()=>sp,assertAndGetBroadcastShape:()=>Ge,assertAxesAreInnerMostDims:()=>j5,assertParamsConsistent:()=>qY,assignToTypedArray:()=>fQ,axesAreInnerMostDims:()=>eC,calculateShapes:()=>P0,checkEinsumDimSizes:()=>TQ,checkPadOnDimRoundingMode:()=>Pt,combineLocations:()=>X0,complexWithEvenIndex:()=>mQ,complexWithOddIndex:()=>cQ,computeConv2DInfo:()=>Ol,computeConv3DInfo:()=>j0,computeDefaultPad:()=>MI,computeDilation2DInfo:()=>d6,computeOptimalWindowSize:()=>YY,computeOutAndReduceShapes:()=>tC,computeOutShape:()=>XY,computePool2DInfo:()=>PI,computePool3DInfo:()=>f6,convertConv2DDataFormat:()=>H0,decodeEinsumEquation:()=>yQ,eitherStridesOrDilationsAreOne:()=>Lr,expandShapeToKeepDim:()=>Ls,exponent:()=>gQ,exponents:()=>hQ,fromStringArrayToUint8:()=>GQ,fromUint8ToStringArray:()=>zQ,getAxesPermutation:()=>rC,getBroadcastDims:()=>A0,getComplexWithIndex:()=>dQ,getEinsumComputePath:()=>kQ,getEinsumPermutation:()=>xQ,getFusedBiasGradient:()=>op,getFusedDyActivation:()=>np,getImageCenter:()=>QY,getInnerMostAxes:()=>H5,getPermuted:()=>JY,getReductionAxes:()=>vt,getReshaped:()=>ZY,getReshapedPermuted:()=>eQ,getSliceBeginCoords:()=>tQ,getSliceSize:()=>rQ,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>SQ,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>wQ,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>_Q,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>DQ,getSparseReshapeInputOutputMismatchErrorMessage:()=>MQ,getSparseReshapeInputOutputMultipleErrorMessage:()=>PQ,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>AQ,getSparseReshapeNegativeOutputDimErrorMessage:()=>NQ,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>LQ,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>EQ,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>RQ,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>FQ,getUndoAxesPermutation:()=>Gd,isIdentityPermutation:()=>IQ,log:()=>_H,mergeRealAndImagArrays:()=>lQ,prepareAndValidate:()=>D0,prepareSplitSize:()=>vQ,segment_util:()=>PC,shouldFuse:()=>ap,slice_util:()=>Tt,splitRealAndImagArrays:()=>pQ,tupleValuesAreOne:()=>Zo,upcastType:()=>Kt,validateInput:()=>wb,validateUpdateShape:()=>gI,warn:()=>ai});function qY(r,e){let t=r[0].length;r.forEach((o,s)=>{P(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),P(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let i=0;i<t;i++)P(i===e||o[i]===n[i],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function XY(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var Yb=30;function YY(r){return r<=Yb?r:sm(r,Math.floor(Math.sqrt(r)))}function QY(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function ZY(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let i=0;i<s;++i)o=o.concat([r[i+1]/e[i],e[i]]);o=o.concat(r.slice(s+1))}return o}function JY(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let i=1;i<r;++i)i>=e*2+1||i%2==1?s.push(i):o.push(i);n.push(...o),n.push(0),n.push(...s)}return n}function eQ(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function tQ(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function rQ(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var AC=1.7580993408473768,NC=1.0507009873554805;var nQ=.3275911,oQ=.254829592,sQ=-.284496736,aQ=1.421413741,iQ=-1.453152027,uQ=1.061405429;function lQ(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function pQ(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function mQ(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function cQ(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function dQ(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function fQ(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function hQ(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function gQ(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var DC="->",bQ=/->/g,a1=",",i1="...";function yQ(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(bQ,"").length)/DC.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${DC}").`);let[n,o]=r.split(DC);P(n.indexOf(i1)===-1,()=>`The ellipsis notation ("${i1}") is not supported yet.`);let s=n.split(a1),i=s.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);a.indexOf(d)===-1&&a.push(d)}for(let c=0;c<n.length;++c){let d=n[c];a.indexOf(d)===-1&&d!==a1&&a.push(d)}let u=new Array(s.length);for(let c=0;c<i;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);u[c]=[];for(let d=0;d<s[c].length;++d)u[c].push(a.indexOf(s[c][d]))}let l=a.length,p=o.length,m=[];for(let c=p;c<l;++c)m.push(c);return{allDims:a,summedDims:m,idDims:u}}function xQ(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function TQ(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let i=0;i<e[o].length;++i)n[e[o][i]]===void 0?n[e[o][i]]=s[i]:P(n[e[o][i]]===s[i],()=>`Expected dimension ${n[e[o][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function kQ(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let i=0;i<o;++i)n.push([]);let s=[];for(let i=0;i<t.length;++i){let a=t[i],u=CQ(e,a);for(let l of u)s.indexOf(l)===-1&&(n[i].push(l),s.push(l))}return{path:t,steps:n}}function IQ(r){return r.every((e,t)=>e===t)}function CQ(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function vQ(r,e,t=0){let n=[];if(typeof e=="number")P(r.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);P(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let i=e.reduce((a,u)=>u>0?a+u:a);e[s]=r.shape[t]-i}P(r.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}function SQ(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function wQ(r,e){return`indices(${r}, 0) is invalid: ${e} < 0`}function _Q(r,e,t){return`indices(${r}, 0) is invalid: ${e} >= ${t}`}function AQ(r,e){return`only one output dimension may be -1, not both ${r} and ${e}`}function NQ(r,e){return`size ${r} must be non-negative, not ${e}`}function DQ(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function PQ(r,e){let t=nt(r),n=nt(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${e}`}function MQ(r,e){let t=nt(r),n=nt(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${e}`}function EQ(){return"segment ids must be >= 0"}function RQ(){return"segment ids are not increasing"}function FQ(r,e){return`Segment id ${r} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function LQ(r,e,t){return`Bad: indices[${r}] == ${e} out of range [0, ${t})`}var PC={};Xe(PC,{collectGatherOpShapeInfo:()=>OQ,computeOutShape:()=>$Q,segOpComputeOptimalWindowSize:()=>BQ});function BQ(r,e){let t=!1,n;for(r<=Yb?(n=r,t=!0):n=sm(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=sm(r,n+1);return n}function $Q(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function OQ(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let m=0;m<n;++m)if(r.shape[m]!==e.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${e.shape[m]}.`);let i=r.shape[t],a=[],u=1,l=1,p=1;for(let m=0;m<n;++m)a.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<t;m++)a.push(r.shape[m]),l*=r.shape[m];for(let m=n;m<o;m++)a.push(e.shape[m]);for(let m=t+1;m<s;m++)a.push(r.shape[m]),p*=r.shape[m];return{batchSize:u,sliceSize:p,outerSize:l,dimSize:i,outputShape:a}}function zQ(r){try{return r.map(e=>Lm(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function GQ(r){return r.map(e=>Ju(e))}var Tr={};Xe(Tr,{nonMaxSuppressionV3Impl:()=>jb,nonMaxSuppressionV4Impl:()=>Hb,nonMaxSuppressionV5Impl:()=>qb,whereImpl:()=>$b});var Qb={kernelName:ds,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(r,hu(J(t,"float32"),-1))}}};var u1={kernelName:Mi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=qe(J(t,"float32")),o=Lt(pe(ce(1),n));return Ze(me(r,o))}}}};var l1={kernelName:Ei,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Lt(pe(qe(J(t,"float32")),1));return me(r,n)}}}};var p1={kernelName:An,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=r,u=vt(t.shape,o);return u.length>0&&(a=he(a,u)),L(a,t.shape)},b:()=>{let a=r,u=vt(n.shape,o);return u.length>0&&(a=he(a,u)),L(a,n.shape)}}}};var m1={kernelName:uo,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var c1={kernelName:lo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ne(t)}}};var d1={kernelName:ti,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ne(t)}}};var f1={kernelName:Li,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Lt(pe(ce(1),qe(J(t,"float32")))))}}};var h1={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Lt(X(ce(1),qe(J(t,"float32"))));return me(r,n)}}}};var g1={kernelName:zi,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=X(qe(t),qe(n)),u=F(r,me(n,a)),l=vt(t.shape,o);return l.length>0&&(u=he(u,l)),L(u,t.shape)},b:()=>{let a=X(qe(t),qe(n)),u=Ze(F(r,me(t,a))),l=vt(n.shape,o);return l.length>0&&(u=he(u,l)),L(u,n.shape)}}}};var b1={kernelName:$i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,X(qe(J(t,"float32")),1))}}};var y1={kernelName:Oi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,pe(ce(1),qe(J(t,"float32"))))}}};function UQ(r,e,t,n,o,s){let i=v(r,"dy","avgPool3dGrad"),a=v(e,"input","avgPool3dGrad"),u=i,l=a,p=!1;a.rank===4&&(p=!0,u=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Pt("avgPool3dGrad",o,s);let m={dy:u,input:l},c={filterSize:t,strides:n,pad:o,dimRoundingMode:s},d=N.runKernel(um,m,c);return p?L(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var x1=_({avgPool3dGrad_:UQ});var T1={kernelName:Lu,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:i,dimRoundingMode:a}=t;return{x:()=>x1(r,n,o,s,i,a)}}};function WQ(r,e,t,n,o){let s=v(r,"dy","avgPoolGrad"),i=v(e,"input","avgPoolGrad");P(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,u=s,l=!1;i.rank===3&&(l=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),P(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let p={dy:u,input:a},m={filterSize:t,strides:n,pad:o},c=N.runKernel(im,p,m);return l?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var k1=_({avgPoolGrad_:WQ});var I1={kernelName:po,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:i}=t;return{x:()=>k1(r,n,o,s,i)}}};var C1={kernelName:mo,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:i}=t;return!s&&!i?{a:()=>Ve(r,o,!1,!0),b:()=>Ve(n,r,!0,!1)}:!s&&i?{a:()=>Ve(r,o,!1,!1),b:()=>Ve(r,n,!0,!1)}:s&&!i?{a:()=>Ve(o,r,!1,!0),b:()=>Ve(n,r,!1,!1)}:{a:()=>Ve(o,r,!0,!0),b:()=>Ve(r,n,!0,!0)}}};var v1={kernelName:fs,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Yl(r,n,o)}}};var S1={kernelName:cD,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,i=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])i[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let a=[];for(let u=0;u<i.length;u++)i[u]>1&&a.push(u);return{x:()=>he(r,a,!0)}}};var w1={kernelName:Vn,gradFunc:r=>({x:()=>r.clone()})};var _1={kernelName:co,gradFunc:r=>({x:()=>Ne(r)})};var A1={kernelName:jn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Ot(Hr(es(n,o),ts(n,s)),r,Ne(r))}}};var N1={kernelName:$u,inputsToSave:["x"],gradFunc:Qb.gradFunc};var D1={kernelName:hs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(u=>u.shape),{axis:o}=t,s=yr(o,e[0].shape)[0],i=n.map(u=>u[s]);return Cr(r,i,s).map(u=>()=>u)}};var P1={kernelName:fo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:i,pad:a,dataFormat:u}=t;return P(Zo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Km(n.shape,r,o,i,a,u),filter:()=>Ym(n,r,o.shape,i,a,u)}}};var M1={kernelName:ho,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:i,dataFormat:a,dimRoundingMode:u}=t;return{dy:()=>Zn(r,o,s,i,a,1,u),filter:()=>Ym(r,n,o.shape,s,i,a,u)}}};function KQ(r,e,t,n,o){let s=r;r.rank===4&&(s=L(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=e;i.rank===4&&(i=L(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),P(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),P(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),P(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),P(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),P(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);let a={x:s,dy:i},u={strides:n,pad:o,filterShape:t};return N.runKernel(cm,a,u)}var E1=_({conv3DBackpropFilter_:KQ});var R1={kernelName:Ou,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;P(Zo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,a]=e;return{x:()=>Db(i.shape,r,a,o,s),filter:()=>E1(i,r,a.shape,o,s)}}};var F1={kernelName:go,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(Ze(Yd(J(t,"float32"))),r)}}};var L1={kernelName:bo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(Qd(J(t,"float32")),r)}}};var B1={kernelName:sa,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:i}=t;return{x:()=>{let a=rC([o],n.rank),u=$d(r,o,s,!i);return a!=null&&(u=He(u,a)),u}}}};var $1={kernelName:yo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:i}=t,a=n??[1,1];P(Zo(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[u,l]=e;return P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),P(Lr(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),Pt("depthwiseConv2d",s,i),{x:()=>Wb(u.shape,r,l,o,s,a,i),filter:()=>Ub(u,r,l.shape,o,s,a,i)}}};var O1={kernelName:zu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},i={x:n,filter:o,dy:r};return{x:()=>N.runKernel(bd,s,t),filter:()=>N.runKernel(yd,i,t)}}};var z1={kernelName:To,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>N.runKernel(ym,n)}}};var G1={kernelName:Gi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=F(cr(Ze(qe(t))),2/Math.sqrt(Math.PI));return{x:()=>F(r,n)}}};var U1={kernelName:ko,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(r,t)}}};var W1={kernelName:gs,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>L(r,t.shape)}}};var K1={kernelName:la,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(r,cr(t))}}};var V1={kernelName:Io,gradFunc:r=>({x:()=>Ne(r)})};var j1={kernelName:Co,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=me(r,J(n,"float32")),u=vt(t.shape,o);return u.length>0?L(he(a,u),t.shape):a},b:()=>{let a=F(r,J(t,"float32")),u=vt(n.shape,o);u.length>0&&(a=L(he(a,u),n.shape));let l=qe(n);return Ze(me(a,J(l,"float32")))}}}};var H1={kernelName:vo,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,i,a]=e,u=a??ce(1),l=vt(s.shape,o.shape),p=[];if(s.rank===1){for(let k=0;k<o.shape.length-1;++k)p.push(o.shape[k]);p.push(1)}let m=pe(o,s),c=F(r,u),d=qd(X(i,ce(n))),f=F(F(F(d,d),d),ce(-.5));return{x:()=>s.rank===1?L(F(F(r,jr(L(d,[1,1,1,s.shape[0]]),p)),u),o.shape):L(F(F(r,d),u),o.shape),mean:()=>{let k=F(F(d,ce(-1)),c);return s.rank===1&&(k=he(k,l)),L(k,s.shape)},variance:()=>{let k=F(F(f,m),c);return s.rank===1&&(k=he(k,l)),L(k,s.shape)},scale:()=>{let k=F(m,d),C=F(r,k);return s.rank===1&&(C=he(C,l)),L(C,s.shape)},offset:()=>{let k=r;return s.rank===1&&(k=he(k,l)),L(k,s.shape)}}}};var q1={kernelName:bs,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,i=yr(s,n.shape)[0];return{x:()=>{let u=n.shape,l=o.size,p=u.slice(0,i),m=p.length,c=u.slice(s,u.length).slice(1),d=c.length,f=X1(0,m),h=X1(m+1,m+1+d),g=Y1([p,[l],c]),y=L(r,g),x=L(o,[l]),T=Y1([[m],f,h]),k=He(y,T),C=vC(k,x,n.shape[i]),A=Gd(T);return C=He(C,A),C},indices:()=>o}}};function X1(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function Y1(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var Q1={kernelName:So,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>Ne(t),b:()=>Ne(n)}}};var Z1={kernelName:Hn,gradFunc:r=>({x:()=>J(r,"float32")})};var J1={kernelName:Ui,gradFunc:r=>({x:()=>Ne(r)})};var eP={kernelName:Wi,gradFunc:r=>({x:()=>Ne(r)})};var tP={kernelName:Ki,gradFunc:r=>({x:()=>Ne(r)})};var rP={kernelName:wo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=nr(n,0);return{x:()=>Ot(s,r,F(r,o))}}};var nP={kernelName:Vi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,X(t,1))}}};var oP={kernelName:_o,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,J(t,"float32"))}}};var sP={kernelName:dD,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let s=!0,i=cr(n);return pe(r,F(he(r,o,s),i))}}}};function VQ(r,e,t,n=5,o=1,s=1,i=.5){let a={x:r,y:e,dy:t},u={depthRadius:n,bias:o,alpha:s,beta:i};return N.runKernel(Im,a,u)}var aP=_({localResponseNormalizationBackprop_:VQ});var iP={kernelName:Wu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:i,alpha:a,beta:u}=t;return{x:()=>aP(n,o,r,s,i,a,u)}}};function Zb(r,e,t,n){return e.rank<t.rank&&(e=L(e,Ls(e.shape,n))),r.rank<t.rank&&(r=L(r,Ls(r.shape,n))),{x:()=>F(r,J(Vr(t,e),r.dtype))}}var MC={kernelName:Ao,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],i=e[1],a=yr(o,s.shape),u=Zb(r,i,s,a);return{x:()=>u.x()}}};var uP={kernelName:No,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>F(r,J(es(t,n),"float32")),b:()=>F(r,J(Od(t,n),"float32"))}}};function jQ(r,e,t,n,o,s,i){let a=v(r,"dy","maxPool3dGrad"),u=v(e,"input","maxPool3dGrad"),l=v(t,"output","maxPool3dGrad"),p=a,m=u,c=l,d=!1;u.rank===4&&(d=!0,p=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),m=L(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),c=L(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),P(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),P(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Pt("maxPool3dGrad",s,i);let f={dy:p,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:i},g=N.runKernel(vm,f,h);return d?L(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var lP=_({maxPool3dGrad_:jQ});var pP={kernelName:Ku,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=t;return{x:()=>lP(r,n,o,s,i,a,u)}}};function HQ(r,e,t,n,o,s,i){let a=v(r,"dy","maxPoolGrad"),u=v(e,"input","maxPoolGrad"),l=v(t,"output","maxPoolGrad");P(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),P(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),P(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Pt("maxPoolGrad",s,i);let p={dy:a,input:u,output:l},m={filterSize:n,strides:o,pad:s,dimRoundingMode:i};return N.runKernel(Cm,p,m)}var mP=_({maxPoolGrad_:HQ});var cP={kernelName:Do,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:i,pad:a}=t;return{x:()=>mP(r,n,o,s,i,a)}}};var dP={kernelName:Po,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=yr(o,n.shape),a=tC(n.shape,s)[1],u=nt(a);return{x:()=>{let p=n.shape.slice();s.forEach(d=>{p[d]=1});let m=L(r,p);return me(F(m,dr(n.shape,"float32")),u)}}}};var fP={kernelName:Mo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,i]=e,a=yr(o,s.shape),u=Zb(r,i,s,a);return{x:()=>u.x()}}};var hP={kernelName:Eo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>F(r,J(ts(t,n),"float32")),b:()=>F(r,J(nr(t,n),"float32"))}}};var gP={kernelName:Ro,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(i=>i[0]);return{x:()=>ze(r,s,n.shape)}}};var bP={kernelName:Hi,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=vt(t.shape,o);return a.length>0?L(he(r,a),t.shape):r},b:()=>{let a=F(r,Ze(cu(me(t,n)))),u=vt(n.shape,o);return u.length>0?L(he(a,u),n.shape):a}}}};var yP={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=F(r,J(n,"float32")),u=vt(t.shape,o);return u.length>0?L(he(a,u),t.shape):a},b:()=>{let a=F(r,J(t,"float32")),u=vt(n.shape,o);return u.length>0?L(he(a,u),n.shape):a}}}};var xP={kernelName:ys,gradFunc:r=>({x:()=>Ze(r)})};var TP={kernelName:xa,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>xt(t.shape,"float32")}}};var kP={kernelName:xs,gradFunc:r=>({x:()=>Ne(r)})};var IP={kernelName:Ts,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return Or(r,n).map(s=>()=>s)}};var EC={kernelName:Lo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(i=>i[0]);return{x:()=>ze(r,s,n.shape)}}};var CP={kernelName:Bo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,i=n,a=Ge(s.shape,i.shape);return{a:()=>{let p=J(i,"float32"),m=F(r,F(p,En(s,pe(p,ce(1))))),c=vt(s.shape,a);return c.length>0&&(m=he(m,c)),L(m,s.shape)},b:()=>{let p=nr(s,0),m=Ot(p,$r(s),Ne(s)),c=F(r,F(o,m)),d=vt(i.shape,a);return d.length>0&&(c=he(c,d)),L(c,i.shape)}}}};var vP={kernelName:$o,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=nr(t,0);return{x:()=>Ot(o,r,F(r,n)),alpha:()=>{let s=Ot(o,Ne(r),F(r,t)),i=vt(n.shape,r.shape);return i.length>0&&(s=he(s,i)),L(s,n.shape)}}}};var SP={kernelName:xo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=me(r,J(n,"float32")),u=vt(t.shape,o);return u.length>0?L(he(a,u),t.shape):a},b:()=>{let a=F(r,J(t,"float32")),u=vt(n.shape,o);u.length>0&&(a=L(he(a,u),n.shape));let l=qe(n);return Ze(me(a,J(l,"float32")))}}}};var wP={kernelName:Xi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Ze(qe(t)))}}};var _P={kernelName:Go,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=F(ts(t,6),hu(t));return{x:()=>F(r,J(n,"float32"))}}};var AP={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(r,J(hu(t),"float32"))}}};var NP={kernelName:ks,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,t.shape)}}};var DP={kernelName:zo,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>N.runKernel(Am,o,t)}}};var PP={kernelName:oi,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>N.runKernel(_m,o,t)}}};var MP={kernelName:ka,gradFunc:(r,e,t)=>{let{dims:n}=t,o=yr(n,r.shape);return{x:()=>xr(r,o)}}};var EP={kernelName:Ia,gradFunc:r=>({x:()=>Ne(r)})};var RP={kernelName:Uo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ze(me(r,F(En(t,1.5),2)))}}};var FP={kernelName:Is,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>J(Ne(t),"float32"),t:()=>F(r,J(t,r.dtype)),e:()=>F(r,J(ql(t),r.dtype))}}};var LP={kernelName:Yi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=nr(t,ce(0)),o=ce(AC),s=ce(NC),i=F(r,s),a=F(F(r,o),cr(J(t,"float32")));return Ot(n,i,a)}}}};var BP={kernelName:Ko,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(r,F(t,pe(ce(1),t)))}}};var $P={kernelName:Qi,gradFunc:r=>({x:()=>Ne(r)})};var OP={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(Kl(J(t,"float32")),r)}}};var zP={kernelName:va,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(Bd(J(t,"float32")),r)}}};var GP={kernelName:Cs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,i=n.shape,[a,u]=yI(n,o,s),l=[];for(let p=0;p<r.rank;p++)l.push([a[p],i[p]-a[p]-u[p]]);return{x:()=>Mn(r,l)}}};var UP={kernelName:Ho,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,i=F(r,n);return{logits:()=>pe(i,F(he(i,[o],s),n))}}};var WP={kernelName:Zi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(r,mn(t))}}};var RC={kernelName:vs,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Ul(r,n,o)}}};var FC={kernelName:Ss,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>lt(r,n)}}};var KP={kernelName:Vo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,F(Lt(J(t,"float32")),2))}}};var VP={kernelName:si,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(r,F(J(t,"float32"),2))}}};var jP={kernelName:qo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ce(2);return{a:()=>F(r,F(o,pe(t,n))),b:()=>F(r,F(o,pe(n,t)))}}};var HP={kernelName:As,gradFunc:r=>({x:()=>Ne(r)})};var qP={kernelName:Xo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=r,u=vt(t.shape,o);return u.length>0&&(a=he(a,u)),L(a,t.shape)},b:()=>{let a=r,u=vt(n.shape,o);return u.length>0&&(a=he(a,u)),L(Ze(a),n.shape)}}}};var XP={kernelName:jo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;yr(s,n.shape).forEach(l=>{o[l]=1});let a=L(r,o),u=F(a,dr(n.shape,"float32"));return{x:()=>u}}};var YP={kernelName:wa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,qe(Kl(t)))}}};var QP={kernelName:Yo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>F(pe(ce(1),qe(t)),r)}}};var ZP={kernelName:Nn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let i=Ne(n);if(n.rank===1)for(let a=0;a<o[0];++a)i=X(i,ze(r,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)i=X(i,ze(r,[a*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)i=X(i,ze(r,[a*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let p=0;p<o[3];++p)i=X(i,ze(r,[a*n.shape[0],u*n.shape[1],l*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return i}}}};var JP={kernelName:Qo,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Gd(o);return{x:()=>He(r,s)}}};var eM={kernelName:ws,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>fr(r,o)}}};var tM={kernelName:Qu,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>qQ(r,t)}}};function qQ(r,e){let t=Jn(e,Ne(e)),n=pi(r,t),o=es(e,ce(0,"int32")),s=n.rank-o.rank;for(let a=0;a<s;++a)o=Dr(o,a+1);o=Hr(o,dr(n.shape,"bool"));let i=Ne(n);return Ot(o,n,i)}var rM={kernelName:_s,gradFunc:r=>({x:()=>Ne(r)})};var XQ=[Qb,u1,l1,p1,m1,c1,d1,f1,h1,g1,b1,y1,T1,I1,C1,v1,S1,w1,_1,A1,N1,D1,M1,P1,R1,F1,L1,B1,$1,O1,SP,z1,G1,U1,W1,K1,j1,V1,H1,q1,Q1,Z1,J1,eP,tP,rP,nP,oP,sP,iP,MC,MC,uP,pP,cP,dP,fP,hP,gP,bP,yP,xP,TP,kP,IP,EC,EC,CP,vP,wP,_P,AP,NP,DP,PP,MP,EP,RP,FP,LP,BP,$P,OP,zP,GP,UP,WP,RC,RC,FC,FC,KP,jP,VP,HP,qP,XP,YP,QP,ZP,JP,eM,tM,rM];for(let r of XQ)hD(r);var uM={};Xe(uM,{maxNorm:()=>QQ,minMaxNorm:()=>e7,nonNeg:()=>JQ,unitNorm:()=>ZQ});var LC;function hr(){return LC==null&&(LC=V0().epsilon()),LC}function fn(){return"channelsLast"}var eo=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,eo.prototype)}},rn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,rn.prototype)}},O=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,O.prototype)}},De=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,De.prototype)}},of=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,of.prototype)}};function Os(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function rs(r,e){if(!r)throw new of(e)}function BC(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Mr(r){return r.length===1?r[0]:r}function St(r){return Array.isArray(r)?r:[r]}function zs(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function bu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Gs={};function Qm(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function $C(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>$C(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:$C(n))}}}function hi(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,i;if(s in t)i=t[s];else if(s in Gs)i=Gs[s];else if(i=e[s],i==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,u;if(i in t?[a,u]=t[i]:i in Gs?[a,u]=Gs.className:i in e&&([a,u]=e[i]),a==null)throw new O(`Unknown ${n}: ${i}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let d of Object.keys(Gs))l[d]=Gs[d];for(let d of Object.keys(t))l[d]=t[d];let p=s.config;p.customObjects=l;let m={...Gs};for(let d of Object.keys(t))Gs[d]=t[d];$C(s.config);let c=u(a,s.config,t,o);return Gs={...m},c}else{let l={...Gs};for(let m of Object.keys(t))Gs[m]=t[m];let p=new a(s.config);return Gs={...l},p}}}function YQ(r,e){return r<e?-1:r>e?1:0}function sf(r,e){return-1*YQ(r,e)}function Us(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function nM(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function gi(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new O(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function Jb(r,e,t=0,n=1/0){return rs(t>=0),rs(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function or(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>or(t,`element ${n+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${oM(r)}.`)}function oM(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>oM(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function sM(r,e,t){let n=t!=null?t():b.now(),o;return(...i)=>{let a=t!=null?t():b.now();return a-n<e||(n=a,o=r(...i)),o}}function ey(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}function OC(r,e){return G(()=>Lt(he(F(r,r),e,!0)))}var Zm=class extends re.Serializable{getConfig(){return{}}},af=class extends Zm{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{let t=OC(e,this.axis),n=Br(t,0,this.maxValue);return F(e,me(n,X(hr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};af.className="MaxNorm";re.registerClass(af);var uf=class extends Zm{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>me(e,X(hr(),OC(e,this.axis))))}getConfig(){return{axis:this.axis}}};uf.className="UnitNorm";re.registerClass(uf);var lf=class extends Zm{apply(e){return qr(e)}};lf.className="NonNeg";re.registerClass(lf);var pf=class extends Zm{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{let t=OC(e,this.axis),n=X(F(this.rate,Br(t,this.minValue,this.maxValue)),F(1-this.rate,t));return F(e,me(n,X(hr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};pf.className="MinMaxNorm";re.registerClass(pf);var aM={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Xt(r){return Qm(r)}function iM(r,e={}){return hi(r,re.SerializationMap.getMap().classNameMap,e,"constraint")}function Yt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in aM?aM[r]:r,config:{}};return iM(t)}else return r instanceof Zm?r:iM(r)}function QQ(r){return new af(r)}function ZQ(r){return new uf(r)}function JQ(){return new lf}function e7(r){return new pf(r)}var AM={};Xe(AM,{constant:()=>u7,glorotNormal:()=>h7,glorotUniform:()=>f7,heNormal:()=>g7,heUniform:()=>b7,identity:()=>c7,leCunNormal:()=>y7,leCunUniform:()=>x7,ones:()=>i7,orthogonal:()=>T7,randomNormal:()=>p7,randomUniform:()=>l7,truncatedNormal:()=>m7,varianceScaling:()=>d7,zeros:()=>a7});var lM=["channelsFirst","channelsLast"],pM=["nearest","bilinear"],mM=["valid","same","causal"],cM=["max","avg"],dM=["sum","mul","concat","ave"];var Jm=new Map;function jt(r){gi(lM,"DataFormat",r)}function fM(r){gi(pM,"InterpolationFormat",r)}function hn(r){gi(mM,"PaddingMode",r)}function zC(r){gi(cM,"PoolMode",r)}var mf=[],hM="/";function La(r,e){mf.push(r);try{let t=e();return mf.pop(),t}catch(t){throw mf.pop(),t}}function t7(){return mf.length===0?"":mf.join(hM)+hM}function ty(r){if(!gM(r))throw new Error("Not a valid tensor name: '"+r+"'");return t7()+r}function ry(r){if(!gM(r))throw new Error("Not a valid tensor name: '"+r+"'");Jm.has(r)||Jm.set(r,0);let e=Jm.get(r);if(Jm.set(r,Jm.get(r)+1),e>0){let t=`${r}_${e}`;return Jm.set(t,1),t}else return r}var r7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function gM(r){return!!r.match(r7)}function bM(r){return r===parseInt(r.toString(),10)}function Ws(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function fp(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function Ba(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function nn(r,e){if(e<r)throw new O(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}function hp(r,e){return J(r,e)}function yu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),L(r,t)}function yM(r,e){return G(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=yu(r,1);return oy(t,[1,e,1])})}function xM(r){let e=[Ws(r.shape)];return L(r,e)}function TM(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],Ws(r.shape,1)];return L(r,e)}function xu(r,e,t){return G(()=>{switch(r.rank){case 1:return Zd(r,e,t);case 2:return Lb(r,[e,0],[t,r.shape[1]]);case 3:return Jd(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Xm(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return ze(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return ze(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function GC(r,e,t){return G(()=>{switch(r.rank){case 1:return Zd(r,e,t);case 2:return Lb(r,[0,e],[r.shape[0],t]);case 3:return Jd(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Xm(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function cf(r,e,t,n){return G(()=>{switch(r.rank){case 1:return Zd(r,e,t);case 2:switch(n){case 1:return xu(r,e,t);case 2:return GC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return xu(r,e,t);case 2:return Jd(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return GC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return xu(r,e,t);case 2:return Xm(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Xm(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return GC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function ec(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),lt(r,e)}function UC(r,e){switch(r.rank){case 1:return OI([r,e]);case 2:return zI([r,e],0);case 3:return GI([r,e],0);case 4:return UI([r,e],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function oy(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new O(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return jr(r,e)}function tc(r,e=0,t=1,n,o){return Fb(r,e,t,n,o)}function Ks(r,e,t,n){if(r.rank<2||e.rank<2)throw new De(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new De(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2){let o=!1,s=!1;return Bs.matMul({a:r,b:e,transposeA:o,transposeB:s,bias:n?WC(r.rank,n,fn()):null,activation:t})}else{let o=r.shape.slice(),s=o.pop();r=L(r,[-1,s]);let i=e.shape.slice(),a=i.pop(),u=i.pop(),l=[...i,a],p=Array.from({length:e.rank},(f,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=L(He(e,p),[u,-1]);let m=[...o,...l],c=!1,d=!1;return L(Bs.matMul({a:r,b:e,transposeA:c,transposeB:d,bias:n?WC(r.rank,n,fn()):null,activation:t}),m)}}function sy(r,e,t){return G(()=>(Array.isArray(e)?e=zt(e,"int32"):e=J(e,"int32"),pi(r,e,t)))}function gp(r){return F(r,r)}function WC(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new O(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?L(e,[1,n[0],1,1,1]):L(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?L(e,[1,1,1,1,n[0]]):L(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?L(e,[1,n[0],1,1]):L(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?L(e,[1,1,1,n[0]]):L(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?L(e,[1,n[0],1]):L(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?L(e,[1,1,n[0]]):L(e,[1].concat(n))}else if(r<3)return e;throw new O(`Unsupported input rank by biasAdd: ${e.rank}`)}function gn(r,e,t){return G(()=>(t==null&&(t=fn()),jt(t),X(r,WC(r.rank,e,t))))}function kM(r,e=1){if(e!==1)throw new De(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return mu(r)}function IM(r){return G(()=>me(r,X($t(r),1)))}function ay(r,e,t,n){return G(()=>b2(r,e,t,n))}function CM(r){return G(()=>{let e=X(.5,F(.2,r));return Br(e,0,1)})}function sl(r,e,t=!1){return t?r():e()}var vM=["fanIn","fanOut","fanAvg"],SM=["normal","uniform","truncatedNormal"];function n7(r){gi(vM,"FanMode",r)}function o7(r){gi(SM,"Distribution",r)}var Fn=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},df=class extends Fn{apply(e,t){return xt(e,t)}};df.className="Zeros";re.registerClass(df);var bp=class extends Fn{apply(e,t){return dr(e,t)}};bp.className="Ones";re.registerClass(bp);var ff=class extends Fn{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return G(()=>F(ce(this.value),dr(e,t)))}getConfig(){return{value:this.value}}};ff.className="Constant";re.registerClass(ff);var hf=class extends Fn{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ra(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};hf.className="RandomUniform";re.registerClass(hf);var gf=class extends Fn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new De(`randomNormal does not support dType ${t}.`);return tc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};gf.className="RandomNormal";re.registerClass(gf);var bf=class extends Fn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new De(`truncatedNormal does not support dType ${t}.`);return rp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};bf.className="TruncatedNormal";re.registerClass(bf);var yf=class extends Fn{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return G(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return F(this.gain,Vm(e[0]))})}getConfig(){return{gain:this.gain}}};yf.className="Identity";re.registerClass(yf);function s7(r,e="channelsLast"){let t,n;if(jt(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=Ws(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=Ws(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=Ws(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var on=class extends Fn{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,n7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,o7(this.distribution),this.seed=e.seed}apply(e,t){let n=s7(e),o=n[0],s=n[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,s):i/=Math.max(1,(o+s)/2),this.distribution==="normal"){let a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new De(`${this.getClassName()} does not support dType ${t}.`);return rp(e,0,a,t,this.seed)}else{let a=Math.sqrt(3*i);return Ra(e,-a,a,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};on.className="VarianceScaling";re.registerClass(on);var rc=class extends on{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return on.className}};rc.className="GlorotUniform";re.registerClass(rc);var nc=class extends on{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return on.className}};nc.className="GlorotNormal";re.registerClass(nc);var oc=class extends on{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return on.className}};oc.className="HeNormal";re.registerClass(oc);var sc=class extends on{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return on.className}};sc.className="HeUniform";re.registerClass(sc);var ac=class extends on{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return on.className}};ac.className="LeCunNormal";re.registerClass(ac);var ic=class extends on{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return on.className}};ic.className="LeCunNormal";re.registerClass(ic);var xf=class extends Fn{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new De("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return G(()=>{if(e.length<2)throw new De("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=tc(n,0,1,"float32"),s=s1.gramSchmidt(o);return e[0]>e[1]&&(s=He(s)),F(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};xf.className="Orthogonal";re.registerClass(xf);var wM={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function _M(r,e={}){return hi(r,re.SerializationMap.getMap().classNameMap,e,"initializer")}function Mt(r){return Qm(r)}function kt(r){if(typeof r=="string"){let e=r in wM?wM[r]:r;if(e==="GlorotNormal")return new nc;if(e==="GlorotUniform")return new rc;if(e==="HeNormal")return new oc;if(e==="HeUniform")return new sc;if(e==="LeCunNormal")return new ac;if(e==="LeCunUniform")return new ic;{let t={};return t.className=e,t.config={},_M(t)}}else return r instanceof Fn?r:_M(r)}function a7(){return new df}function i7(){return new bp}function u7(r){return new ff(r)}function l7(r){return new hf(r)}function p7(r){return new gf(r)}function m7(r){return new bf(r)}function c7(r){return new yf(r)}function d7(r){return new on(r)}function f7(r){return new rc(r)}function h7(r){return new nc(r)}function g7(r){return new oc(r)}function b7(r){return new sc(r)}function y7(r){return new ac(r)}function x7(r){return new ic(r)}function T7(r){return new xf(r)}var mE={};Xe(mE,{Layer:()=>We,RNN:()=>js,RNNCell:()=>ml,activation:()=>VZ,add:()=>e9,alphaDropout:()=>B9,average:()=>t9,averagePooling1d:()=>Rv,averagePooling2d:()=>Fv,averagePooling3d:()=>Lv,avgPool1d:()=>p9,avgPool2d:()=>c9,avgPool3d:()=>f9,avgPooling1d:()=>m9,avgPooling2d:()=>d9,avgPooling3d:()=>h9,batchNormalization:()=>i9,bidirectional:()=>N9,concatenate:()=>r9,conv1d:()=>LZ,conv2d:()=>BZ,conv2dTranspose:()=>$Z,conv3d:()=>OZ,conv3dTranspose:()=>zZ,convLstm2d:()=>S9,convLstm2dCell:()=>w9,cropping2D:()=>UZ,dense:()=>jZ,depthwiseConv2d:()=>KZ,dot:()=>a9,dropout:()=>HZ,elu:()=>DZ,embedding:()=>JZ,flatten:()=>XZ,gaussianDropout:()=>L9,gaussianNoise:()=>F9,globalAveragePooling1d:()=>g9,globalAveragePooling2d:()=>b9,globalMaxPool1d:()=>P9,globalMaxPool2d:()=>M9,globalMaxPooling1d:()=>iE,globalMaxPooling2d:()=>uE,gru:()=>x9,gruCell:()=>T9,input:()=>rv,inputLayer:()=>NZ,layerNormalization:()=>u9,leakyReLU:()=>MZ,lstm:()=>k9,lstmCell:()=>I9,masking:()=>$9,maxPool1d:()=>E9,maxPool2d:()=>R9,maxPooling1d:()=>lE,maxPooling2d:()=>pE,maxPooling3d:()=>y9,maximum:()=>n9,minimum:()=>o9,multiply:()=>s9,permute:()=>ZZ,prelu:()=>EZ,reLU:()=>PZ,repeatVector:()=>YZ,reshape:()=>QZ,rnn:()=>_9,separableConv2d:()=>GZ,simpleRNN:()=>C9,simpleRNNCell:()=>v9,softmax:()=>RZ,spatialDropout1d:()=>qZ,stackedRNNCells:()=>A9,thresholdedReLU:()=>FZ,timeDistributed:()=>D9,upSampling2d:()=>WZ,zeroPadding2d:()=>l9});var k7=0;function iy(){return k7++}var uy={};function al(r=""){return r in uy||(uy[r]=0),uy[r]+=1,r+uy[r].toString()}function ly(r){return Array.isArray(r)&&Array.isArray(r[0])}function uc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Oe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function Je(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function lc(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var DM="Variable",py=class{constructor(e,t="float32",n=DM,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=iy(),n=n??DM,this.originalName=ty(n),this.name=ry(this.originalName),this.trainable_=o,this.constraint=s,this.val=SC(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),C7(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function C7(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function Tf(r){return r.map(e=>e.read())}function pc(r){r.forEach(e=>{e[0].write(e[1])})}var Et=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},yn=class{constructor(e,t,n,o,s,i,a){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=a;this.id=iy(),i!=null&&(this.originalName=ty(i),this.name=ry(this.originalName)),this.rank=t.length}},v7=0,il=class{constructor(e,t){this.callArgs=t;this.id=v7++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},S7=0,We=class extends re.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=S7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=zs(n)+"_"+al(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new rn(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Mr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Mr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new eo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new eo(`Layer ${this.name} is not connected, no input to return.`);return Mr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new eo(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new eo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Mr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=St(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=St(this.inputSpec);if(e.length!==t.length)throw new O(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let i=o.rank;if(s.ndim!=null&&i!==s.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(s.maxNDim!=null&&i>s.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(s.minNDim!=null&&i<s.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let a=o.shape;for(let u in s.axes){let l=Number(u),p=s.axes[u],m=l>=0?a[l]:a[a.length+l];if(p!=null&&[p,null].indexOf(m)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${p} but got shape ${a}.`)}}if(s.shape!=null)for(let a=0;a<s.shape.length;++a){let u=s.shape[a],l=o.shape[a];if(u!=null&&l!=null&&u!==l)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=St(e),o=!0;for(let i of n)if(!(i instanceof yn)){o=!1;break}let s=!0;for(let i of n)if(i instanceof yn){s=!1;break}if(o===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return La(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let i=[];for(let a of St(e))i.push(a.shape);this.build(Mr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let i=this.call(e,t),a=St(i),u=[];for(let l of a)n.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(i=Mr(u),this.activityRegularizer!=null)throw new De("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=w7(e),a=this.computeOutputShape(i),u,l=_7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?u=a.map((p,m)=>new yn(l,p,this,St(e),t,this.name,m)):u=new yn(l,a,this,St(e),t,this.name),this.addInboundNode(e,u,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new De("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new eo(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new eo(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new rn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return lc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Tf(e?this.trainableWeights:this.weights)}setWeights(e){G(()=>{let t=this.weights;if(t.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=Tf(t);for(let s=0;s<o.length;++s){let i=o[s],a=t[s],u=e[s];if(!b.arraysEqual(i.shape,u.shape))throw new O(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);n.push([a,u])}pc(n)})}addWeight(e,t,n,o,s,i,a,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=u!=null?u():kt("zeros"));let l=o.apply(t,n),p=new py(l,n,e,i,a);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(p.read())),i==null&&(i=!0),i?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=St(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,i,a=null){let u=St(e);t=St(t),n=St(n),o=St(o),s=uc(s),i=uc(i);let l=[],p=[],m=[];for(let c of u)l.push(c.sourceLayer),p.push(c.nodeIndex),m.push(c.tensorIndex);new il({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:m,inputTensors:u,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:i},a);for(let c=0;c<t.length;c++)t[c].sourceLayer=this,t[c].nodeIndex=this.inboundNodes.length-1,t[c].tensorIndex=c}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function w7(r){r=St(r);let e=[];for(let t of r)e.push(t.shape);return Mr(e)}function _7(r){return"float32"}function KC(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let i=n.inputTensors[s],a=n.inboundLayers[s],u=n.nodeIndices[s],l=KC(i,a,u);for(let p of l)o.indexOf(p)===-1&&o.push(p)}return o}}}var bi=class extends We{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:al("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new yn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new il({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};bi.className="InputLayer";re.registerClass(bi);function my(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new bi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function yi(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let i=s;e.push(i.data()),t.push(o),n.push(i)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Ee(n)}}function cy(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var A7=125,ul=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},VC=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},PM=class extends ul{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;let a=G(()=>X(this.totals[o],F(s,n)));this.totals[o]=a,i!=null&&i.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:G(()=>{let o=F(me(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Vt(t[n])}))}},jC=class extends ul{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let u=i[a];e.push(u.data()),t.push(s),n.push(a)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},HC=class extends ul{constructor(e,t){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_C,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=A7),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=sM(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await yi(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await yi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await yi(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await yi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await yi(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await yi(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await yi(e),await this.trainEnd(e))}};function dy(r,e){return r==null&&(r={}),r instanceof ul?[r]:Array.isArray(r)&&r[0]instanceof ul?r:St(r).map(n=>new HC(n,e))}var $a=class{constructor(){}static registerCallbackConstructor(e,t){b.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),$a.checkForDuplicate(t),$a.constructors[e]==null&&($a.constructors[e]=[]),$a.constructors[e].push(t)}static checkForDuplicate(e){for(let t in $a.constructors)$a.constructors[+t].forEach(o=>{if(o===e)throw new O("Duplicate callback constructor.")})}static clear(){$a.constructors={}}static createCallbacks(e){let t=[];for(let n in $a.constructors){let o=+n;e>=o&&t.push(...$a.constructors[o])}return t.map(n=>new n)}},kf=$a;kf.constructors={};function fy(r,e,t,n,o,s,i,a,u){let l=new jC,p=[new PM,...kf.createCallbacks(e)];r!=null&&p.push(...r),p.push(l);let m=new VC(p);return m.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:i,verbose:e,doValidation:a,metrics:u}),{callbackList:m,history:l}}function xn(r,e={},t=!1){return hi(r,re.SerializationMap.getMap().classNameMap,e,"layer",t)}function If(r,e){return G(()=>{r.dtype!=="float32"&&(r=J(r,"float32"));let t=he(gp(r),e,!0),n=Ea(t.shape,hr()),o=Lt(Jn(t,n));return me(r,o)})}function xi(r,e){return G(()=>Ft(gp(pe(e,r)),-1))}function mc(r,e){return G(()=>Ft($t(pe(e,r)),-1))}function ll(r,e){return G(()=>{let t=pe(r,e),n=Br($t(r),hr(),Number.MAX_VALUE),o=$t(me(t,n));return F(100,Ft(o,-1))})}function N7(r,e){return G(()=>{let t=Br(e,hr(),Number.MAX_VALUE),n=$r(X(1,t)),o=Br(r,hr(),Number.MAX_VALUE),s=$r(X(1,o));return Ft(gp(pe(n,s)),-1)})}function D7(r,e){return G(()=>{let t=Jn(0,pe(1,F(r,e)));return Ft(gp(t),-1)})}function P7(r,e){return G(()=>{let t=Jn(0,pe(1,F(r,e)));return Ft(t,-1)})}function M7(r,e){return G(()=>{let t=he(F(r,e),-1),n=en(F(pe(1,r),e),-1);return Jn(0,X(1,pe(n,t)))})}function E7(r,e){return G(()=>{let t=Math.log(2),n=pe(e,r),o=pe(X(n,mi(F(-2,n))),t);return Ft(o,-1)})}function yp(r,e,t=!1){return G(()=>{if(t)e=Jl(e);else{let n=he(e,e.shape.length-1,!0);e=me(e,n)}return e=Br(e,hr(),1-hr()),Ze(he(F(J(r,"float32"),$r(e)),e.shape.length-1))})}function cc(r,e,t=!1){return G(()=>{let n=J(cu(xM(r)),"int32");e=Br(e,hr(),1-hr());let o=e.shape,s=L(au(n,o[o.length-1]),o);return yp(s,e,t)})}function R7(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return G(()=>{let t=qr(e),n=Ze($t(e));return X(pe(t,F(e,r)),Hl(cr(n)))})}function dc(r,e){return G(()=>{let t;return t=Br(e,hr(),1-hr()),t=$r(me(t,pe(1,t))),Ft(R7(r,t),-1)})}function F7(r,e){return G(()=>{let t=Br(r,hr(),1),n=Br(e,hr(),1);return he(F(r,$r(me(t,n))),-1)})}function L7(r,e){return G(()=>{let t=$r(X(hr(),e));return Ft(pe(e,F(r,t)),-1)})}function Cf(r,e){return G(()=>{let t=If(r,-1),n=If(e,-1),o=F(t,n);return Ze(he(o,-1))})}var vf={meanSquaredError:xi,meanAbsoluteError:mc,meanAbsolutePercentageError:ll,meanSquaredLogarithmicError:N7,squaredHinge:D7,hinge:P7,categoricalHinge:M7,logcosh:E7,categoricalCrossentropy:yp,sparseCategoricalCrossentropy:cc,binaryCrossentropy:dc,kullbackLeiblerDivergence:F7,poisson:L7,cosineProximity:Cf};function hy(r){if(typeof r=="string"){if(r in vf)return vf[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(e)}else return r}function Sf(r,e){return G(()=>{let t=F(.5,Pr(e)),n=hp(nr(e,t),r.dtype);return Ft(Vr(r,n),-1)})}function wf(r,e){return G(()=>hp(Vr(uu(r,-1),uu(e,-1)),"float32"))}function EM(r,e){return G(()=>J(he(Hr(Vr(r,1),Vr(e,1))),"float32"))}function B7(r,e){return G(()=>J(he(Hr(Vr(r,1),Vr(e,0))),"float32"))}function $7(r,e){return G(()=>J(he(Hr(Vr(r,0),Vr(e,1))),"float32"))}function qC(r,e){return G(()=>{let t=EM(r,e),n=$7(r,e),o=X(t,n);return J(Ot(nr(o,0),me(t,o),0),"float32")})}function RM(r,e){return G(()=>{let t=EM(r,e),n=B7(r,e),o=X(t,n);return J(Ot(nr(o,0),me(t,o),0),"float32")})}function gy(r,e){return dc(r,e)}function by(r,e){return r.rank===e.rank&&(r=dn(r,[r.rank-1])),e=uu(e,-1),e.dtype!==r.dtype&&(e=J(e,r.dtype)),J(Vr(r,e),"float32")}var O7=xi,z7=xi,G7=mc,U7=mc,W7=ll,K7=ll,_f=yp,V7=Cf,XC=cc,yy={binaryAccuracy:Sf,categoricalAccuracy:wf,precision:qC,categoricalCrossentropy:_f,sparseCategoricalCrossentropy:XC,mse:O7,MSE:z7,mae:G7,MAE:U7,mape:W7,MAPE:K7,cosine:V7};function FM(r){if(typeof r=="string"&&r in yy)return yy[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function Af(r){if(rs(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(vf))if(vf[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(yy))if(yy[t]===r){e=t;break}return e!==void 0?e:r.name}}function BM(r){let e={Adagrad:()=>dp.adagrad(.01),Adadelta:()=>dp.adadelta(1,.95,hr()),Adam:()=>dp.adam(.001,.9,.999,hr()),Adamax:()=>dp.adamax(.002,.9,.999,hr(),0),RMSProp:()=>dp.rmsprop(.001,.9,0,hr()),SGD:()=>dp.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new O(`Unknown Optimizer ${r}`)}var $M=1*1024*1024;function YC(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!QC(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>$M&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${$M}.`)}}function QC(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!QC(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!QC(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function OM(r,e,t,n=console.log){let o=q7(r),s=["Layer (type)","Output shape","Param #"];o?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(p=>Math.floor(e*p)));let i;if(!o){s.push("Receives inputs"),i=[];for(let p in r.nodesByDepth)i.push(...r.nodesByDepth[p])}n("_".repeat(e)),xy(s,t,n),n("=".repeat(e));let a=r.layers;for(let p=0;p<a.length;++p)o?X7(a[p],t,n):Y7(a[p],t,i,n),n((p===a.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let u=H7(r),l=lc(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(e))}function H7(r){let e;return r.collectedTrainableWeights!=null?e=lc(r.collectedTrainableWeights):e=lc(r.trainableWeights),e}function q7(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let i of o.inboundNodes)if(n.indexOf(i)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function xy(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function X7(r,e,t){let n;try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let o=r.name,s=r.getClassName(),i=[`${o} (${s})`,n,r.countParams().toString()];xy(i,e,t)}function Y7(r,e,t,n){let o;try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let s=[];for(let p of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){let c=p.inboundLayers[m].name,d=p.nodeIndices[m],f=p.tensorIndices[m];s.push(`${c}[${d}][${f}]`)}let i=r.name,a=r.getClassName(),u=s.length===0?"":s[0],l=[`${i} (${a})`,o,r.countParams().toString(),u];xy(l,e,n);for(let p=1;p<s.length;++p)xy(["","","",s[p]],e,n)}function zM(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function xp(r,e){if(r===null)return null;if(typeof r=="string")return bu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];zM(e,o,s)?t.push(s):t.push(xp(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=bu(n);t[s]=xp(o,s)}}return t}}function Ty(r,e){if(r==null)return null;if(typeof r=="string")return zs(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];zM(e,o,s)?t.push(s):t.push(Ty(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=zs(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=Ty(o,n)}return t}}var Nf="0.0.0";function Q7(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return J(e,r.dtype)}catch{throw new O(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Oa=class{constructor(e){this.id2Value={};this.id2Mask={};this.name2Id={};if(e instanceof Oa)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=Q7(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new O(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof yn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof yn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ee(this.id2Mask)}},ZC={},GM={};function Tp(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),i=s?r:[r],a=i.map(f=>f.name),u=[],l=e.names();for(let f of a)l.indexOf(f)!==-1?u.push(e.getValue(f)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let p=a.join(",")+"|"+e.names().join(","),m,c;if(ZC[p]==null){let f=Z7(i,e);m=f.sorted,c=f.recipientCounts,ZC[p]=m,GM[p]=c}m=ZC[p],c={},o||Object.assign(c,GM[p]);let d=new Oa(e);for(let f=0;f<m.length;++f){if(n!=null){let R=Nd().numTensors;R>n.maxNumTensors&&(n.maxNumTensors=R),R<n.minNumTensors&&(n.minNumTensors=R)}let h=m[f],g=h.sourceLayer;if(g instanceof bi)continue;let y=[],x=[],T=[],k=!1;for(let R of h.inputs){let B=d.getValue(R),U=d.getMask(R);y.push(B),x.push(U),U!=null&&(k=!0),o||(c[R.name]--,c[R.name]===0&&!e.hasKey(R)&&a.indexOf(R.name)===-1&&!B.isDisposed&&R.sourceLayer.stateful!==!0&&T.push(B))}k&&(t=t||{},t.mask=x[0]);let C=St(g.apply(y,t)),A=null;g.supportsMasking&&(A=g.computeMask(y,x));let M=eZ(h),D=Array.isArray(M)?M:[M];for(let R=0;R<D.length;++R){d.hasKey(D[R])||d.add(D[R],C[R],Array.isArray(A)?A[0]:A);let B=a.indexOf(D[R].name);B!==-1&&(u[B]=C[R])}o||Ee(T)}return d.disposeMasks(),s?u:u[0]}function Z7(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=UM(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:i,recipientMap:a}=UM(s,e);for(let u of i)o.has(u.name)||(t.push(u),o.add(u.name));for(let u in a)n[u]==null&&(n[u]=new Set),a[u].forEach(l=>n[u].add(l))}}return{sorted:t,recipientCounts:J7(n)}}function J7(r){let e={};for(let t in r)e[t]=r[t].size;return e}function UM(r,e){let t=new Set,n=[],o={};for(let a of e.names())t.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(t.has(a.name)){s.pop();continue}let u=i[i.length-1]===s.length-1;if(a.inputs.length===0||u)s.pop(),n.push(a),t.add(a.name),u&&i.pop();else{i.push(s.length-1);for(let l of a.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(a.name),!t.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function eZ(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var ns=class extends We{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let x=this.getClassName().toLowerCase();this.name=al(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Us(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Us(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let x of this.outputs){let T=x.sourceLayer,k=x.nodeIndex,C=x.tensorIndex;this.outputLayers.push(T),this.outputLayersNodeIndices.push(k),this.outputLayersTensorIndices.push(C)}for(let x of this.inputs){let T=x.sourceLayer,k=x.nodeIndex,C=x.tensorIndex;rs(k===0,"input layer has >1 nodes"),rs(C===0,"input layer has >1 tensors"),this.inputLayers.push(T),this.inputLayersNodeIndices.push(k),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){let T=this.inputLayers[x];if(!(T instanceof bi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${T.getClassName()}.`);this.inputNames.push(T.name),this.feedInputShapes.push(T.batchInputShape),this.feedInputNames.push(T.name)}for(let x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);let t={},n={},o={},s={},i={},a=[],u=(x,T,k,C,A,M)=>{(C==null||A==null||M==null)&&(C=x.sourceLayer,A=x.nodeIndex,M=x.tensorIndex);let D=C.inboundNodes[A];if(k.indexOf(D)!==-1)throw new rn(`The tensor ${x.name} at layer "${C.name}" is part of a cycle.`);if(T.indexOf(D)!==-1)return;this.containerNodes.add(ns.nodeKey(C,A)),C.id in i||(i[C.id]=Object.keys(i).length),k.indexOf(D)===-1&&k.push(D);let R=D.inboundLayers.length;for(let B=0;B<R;B++){let U=D.inputTensors[B],W=D.inboundLayers[B],K=D.nodeIndices[B],j=D.tensorIndices[B];u(U,T,k,W,K,j)}for(T.push(D);k.indexOf(D)>=0;)k.splice(k.indexOf(D),1);a.push(D)},l=[],p=[];for(let x of this.outputs)u(x,l,p);let m=a.slice().reverse();for(let x of m){n[x.id]=x,x.id in t||(t[x.id]=0);let T=t[x.id],k=o[x.outboundLayer.id]==null?0:o[x.outboundLayer.id];T=Math.max(T,k),o[x.outboundLayer.id]=T,s[x.outboundLayer.id]=x.outboundLayer,t[x.id]=T;for(let C=0;C<x.inboundLayers.length;C++){let A=x.inboundLayers[C],M=x.nodeIndices[C],D=A.inboundNodes[M],R=t[D.id]==null?0:t[D.id];t[D.id]=Math.max(T+1,R),n[D.id]=D}}let c={};for(let x in t){let T=t[x];T in c||(c[T]=[]),c[T].push(n[x])}let d={};for(let x in o){let T=o[x];T in d||(d[T]=[]),d[T].push(s[x])}let f=Object.keys(d).map(x=>parseInt(x,10)).sort(sf);this.layers=[];for(let x of f){let T=d[x];T.sort((k,C)=>{let A=i[k.id],M=i[C.id];return A<M?-1:A>M?1:0});for(let k of T)k instanceof ns&&this.internalContainerRefs.push(k),this.layers.push(k)}this.layersByDepth=d,f=Object.keys(c).map(x=>parseInt(x,10)).sort(sf);let h=this.inputs.slice(),g=[];for(let x of f)for(let T of c[x]){let k=T.outboundLayer;if(k!=null){for(let C of T.inputTensors)if(h.indexOf(C)===-1)throw new rn(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${k.name}". The following previous layers were accessed without issue: ${g}`);for(let C of T.outputTensors)h.push(C);g.push(k.name)}}this.nodesByDepth=c;let y=this.layers.map(x=>x.name);for(let x of y){let T=y.filter(k=>k===x).length;if(T!==1)throw new rn(`The name "${x}" is used ${T} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new il({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let i of this.layers)for(let a of i.weights){if(n[a.originalName]!=null)throw new O(`Duplicate weight name: ${a.originalName}`);n[a.originalName]=a,o++}let s=[];for(let i in e){let a=i;if(n[i]==null){let u=i.split("/");a=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(n[a]!=null)s.push([n[a],e[i]]);else if(t)throw new O(`Provided weight data has no target variable: ${i}`);delete n[a]}if(t){let i=[];for(let a in n)i.push(a);if(i.length>0)throw new O(`${i.length} of ${o} weights are not set: ${i}`)}pc(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Nf}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Ty(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return G(()=>{e=St(e);let n=new Oa;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return Tp(this.outputs,n,t)})}computeMask(e,t){return G(()=>{e=St(e);let n;return t==null?n=Os(null,e.length):n=St(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=uc(e);if(t.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let a=0;a<t.length;a++){let u=this.inputLayers[a],l=t[a],p=u.name+"_0_0";n[p]=l}let o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(sf);if(o.length>1)for(let a of o){let u=this.nodesByDepth[a];for(let l of u){let p=l.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(p.id)!==-1)continue;let m=[];for(let h=0;h<l.inboundLayers.length;h++){let g=l.inboundLayers[h],y=l.nodeIndices[h],x=l.tensorIndices[h],T=`${g.name}_${y}_${x}`,k=n[T];m.push(k)}let c=p.computeOutputShape(Mr(m)),d=uc(c),f=p.inboundNodes.indexOf(l);for(let h=0;h<d.length;h++){let g=`${p.name}_${f}_${h}`;n[g]=d[h]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let u=this.outputLayers[a],l=this.outputLayersNodeIndices[a],p=this.outputLayersTensorIndices[a],m=`${u.name}_${l}_${p}`;i.push(m)}for(let a=0;a<i.length;a++){let u=i[a];rs(u in n),s.push(n[u])}return Mr(s)}runInternalGraph(e,t){t==null&&(t=Os(null,e.length));let n={};for(let u=0;u<this.inputs.length;++u){let l=this.inputs[u],p=e[u],m=t[u];n[l.id]=[p,m]}let o=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(sf);for(let u of o){let l=this.nodesByDepth[u];for(let p of l){let m=p.outboundLayer,c=p.inputTensors,d=p.outputTensors,f=new Array;for(let h of c)h.id in n&&f.push(n[h.id]);if(f.length===c.length){let h={},g,y,x,T;if(p.callArgs!=null&&(h=p.callArgs),f.length===1){let[k,C]=f[0];h.mask==null&&(h.mask=C),x=St(m.call(k,h)),T=St(m.computeMask(k,C)),g=[k],y=[C]}else g=f.map(k=>k[0]),y=f.map(k=>k[1]),h.mask==null&&(h.mask=y),x=St(m.call(g,h)),T=St(m.computeMask(g,y));if(m.activityRegularizer)throw new De("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let k=0;k<d.length;++k){let C=d[k],A=x[k],M=T[k];n[C.id]=[A,M]}}}}let s=[],i=[],a=[];for(let u of this.outputs){rs(u.id in n,`Could not compute output ${u.name} : ${u.id}`);let[l,p]=n[u.id];a.push(l.shape),s.push(l),i.push(p)}return[s,i,a]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof ns?1:0;for(let s=0;s<o.inboundNodes.length;s++){let i=ns.nodeKey(o,s);this.containerNodes.has(i)&&(t[i]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new O("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new O(`No such layer: ${e}`)}calculateLosses(){return G(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=ns.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let i of this.layers){let a=i.getClassName(),u=i.getConfig(),l=[];for(let m=0;m<i.inboundNodes.length;m++){let c=i.inboundNodes[m],d=ns.nodeKey(i,m),f={};if(this.containerNodes.has(d)){if(c.callArgs)try{JSON.stringify(c.callArgs),f=c.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${c.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(c.inboundLayers.length>0){let h=[];for(let g=0;g<c.inboundLayers.length;g++){let y=c.inboundLayers[g],x=c.nodeIndices[g],T=c.tensorIndices[g],k=ns.nodeKey(y,x),C=t[k];C==null&&(C=0),h.push([y.name,C,T,f])}l.push(h)}}}let p={};p.name=i.name,p.className=a,p.config=u,p.inboundNodes=l,n.push(p)}e.layers=n;let o=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],u=this.inputLayersNodeIndices[i],l=ns.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let m=this.inputLayersTensorIndices[i];o.push([a.name,p,m])}e.inputLayers=o;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=ns.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let m=this.outputLayersTensorIndices[i];s.push([a.name,p,m])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},i={};function a(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function u(g,y){let x=[],T;for(let k of y){let C=k[0],A=k[1],M=k[2];if(T=k[3]==null?{}:k[3],!(C in s)){a(g,y);return}let D=s[C];if(D.inboundNodes.length<=A){a(g,y);return}let R=D.inboundNodes[A];x.push(R.outputTensors[M])}x.length>0&&g.apply(Mr(x),T)}function l(g){let y=g.name,x=xn(g,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(o),s[y]=x,g.inboundNodes.forEach(k=>{if(!(k instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${k}`);a(x,k)})}let p=t.name,m=t.layers;for(let g of m)l(g);for(;!nM(i);)for(let g of m){let y=s[g.name];if(y.name in i){let x=i[y.name];delete i[y.name];for(let T of x)u(y,T)}}let c=[],d=[],f=t.inputLayers;for(let g of f){let y=g[0],x=g[1],T=g[2];rs(y in s);let C=s[y].inboundNodes[x].outputTensors;c.push(C[T])}let h=t.outputLayers;for(let g of h){let y=g[0],x=g[1],T=g[2];rs(y in s);let C=s[y].inboundNodes[x].outputTensors;d.push(C[T])}return new e({inputs:c,outputs:d,name:p})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){G(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function tZ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function ky(r,e){return tZ(r,e,"classWeight")}async function Iy(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=G(()=>{if(r.shape.length===1)return Dn(r);if(r.shape.length===2){if(r.shape[1]>1)return uu(r,1);if(r.shape[1]===1)return L(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Ee(o);let i=[];return s.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),zt(i,"float32")}else return null}function WM(r,e){return F(r,e)}var rZ=32;function KM(r,e){let t,n,o=e;t=o.xs,n=o.ys,b.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=VM("input",r.inputNames,t),i=VM("output",r.outputNames,n),a=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)b.assert(s[u].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let u=0;u<i.length;u++)b.assert(i[u].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function VM(r,e,t){if(t instanceof Ye)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function nZ(r){if(r.length===3)throw new De("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function jM(r,e,t){let n=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,i;if(o)if(HM(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=nZ(t.validationData);s=g.xs,i=g.ys}let a=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let p=dy(t.callbacks,t.yieldEvery),m=t.verbose==null?1:t.verbose,{callbackList:c,history:d}=fy(p,m,t.epochs,null,null,oZ(e,t),null,o,l);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;f<t.epochs;){let g={};await c.onEpochBegin(f);let y=0,x=0;for(n||(h=await e.iterator());n?y<t.batchesPerEpoch:!0;){let T=await h.next();if(n&&T.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(T.value!=null){let{xs:k,ys:C}=KM(r,T.value),A={};A.batch=x,A.size=k[0].shape[0],await c.onBatchBegin(x,A);let M=[];if(t.classWeight!=null){let B=ky(t.classWeight,r.outputNames);for(let U=0;U<B.length;++U)M.push(await Iy(C[U],null,B[U]))}let D=k.concat(C).concat(M),R=a(D);Ee(D);for(let B=0;B<u.length;++B){let U=u[B],W=R[B];A[U]=W,Vt(W)}await c.onBatchEnd(x,A),cy(A),x++,y++}if(n?y>=t.batchesPerEpoch:T.done){if(o){let k;HM(t.validationData)?k=St(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):k=St(r.evaluate(s,i,{batchSize:t.validationBatchSize==null?rZ:t.validationBatchSize,verbose:0}));for(let C=0;C<r.metricsNames.length;++C)g[`val_${r.metricsNames[C]}`]=k[C]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function oZ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function HM(r){return typeof r.iterator=="function"}function sZ(r){return typeof r.next=="function"}async function qM(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new De("Verbose mode is not implemented yet.");b.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let i=sZ(e)?e:await e.iterator(),a=0,u=0;for(;n?u<t.batches:!0;){let l=await i.next();if(s=G(()=>{if(l.value){let{xs:p,ys:m}=KM(r,l.value),c=p.concat(m),d=G(()=>o(c));if(Ee(c),u===0)for(let h=0;h<d.length;++h)s.push(ce(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],y=s[h];s[h]=G(()=>X(s[h],F(f,g))),u>0&&Ee(y)}Ee(d),a+=f,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let p=s[l];s[l]=me(s[l],a),Ee(p)}return Mr(s)}function Cy(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function fc(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>xu(n,e,t-e)):xu(r,e,t-e)}function vy(r,e){return G(()=>r==null?null:Array.isArray(r)?r.map(t=>vy(t,e)):sy(r,e.dtype==="int32"?e:J(e,"int32")))}function Sy(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function aZ(r,e,t,n,o,s,i,a,u,l,p,m,c,d,f){o==null&&(o=32),s==null&&(s=1),p==null&&(p=!0),c==null&&(c=0);let h=!1;if(u!=null&&l!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,d,"steps_per_epoch"),y;g!=null&&(y=nn(0,g)),i==null&&(i=1);let{callbackList:x,history:T}=fy(a,i,s,c,g,d,o,h,m);x.setModel(r),r.history=T,await x.onTrainBegin(),r.stopTraining_=!1;for(let k=c;k<s;++k){await x.onEpochBegin(k);let C={};if(d!=null)throw new De("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new De("batch shuffling is not implemneted yet");p&&b.shuffle(y);let A=zt(y),M=Sy(g,o);for(let D=0;D<M.length;++D){let R={};if(await x.onBatchBegin(D,R),G(()=>{let B=M[D][0],U=M[D][1],W=xu(A,B,U-B);R.batch=D,R.size=U-B;let K=vy(t,W),j=e(K);for(let V=0;V<n.length;++V){let q=n[V],ee=j[V];R[q]=ee,Vt(ee)}if(D===M.length-1&&h){let V=r.testLoop(u,l,o);for(let q=0;q<n.length;++q){let ee=n[q],Z=V[q];Vt(Z),C["val_"+ee]=Z}}}),await x.onBatchEnd(D,R),cy(R),r.stopTraining_)break}A.dispose()}if(await x.onEpochEnd(k,C),r.stopTraining_)break}return await x.onTrainEnd(),await r.history.syncData(),r.history}async function XM(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,i,a,u,l,p,m,c;try{let d=n.batchSize==null?32:n.batchSize;Cy(d);let f=!1,h=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,y;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)u=n.validationData[0],l=n.validationData[1];else throw n.validationData.length===3?new De("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let R=!0,B=await r.standardizeUserData(u,l,null,null,R,d);p=B[0],m=B[1],y=p.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let R=Math.floor(o[0].shape[0]*(1-n.validationSplit)),B=o[0].shape[0];p=fc(o,R,B),i=o,o=fc(o,0,R),m=fc(s,R,B),a=s,s=fc(s,0,R),y=p.concat(m)}else n.validationSteps!=null&&(g=!0);let x=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let T=r.makeTrainFunction(),k=r.getDedupedMetricsNames(),C,A;g?(r.makeTestFunction(),C=r.testFunction,A=k.slice().concat(k.map(R=>"val_"+R))):(C=null,y=[],A=k.slice());let M=dy(n.callbacks,n.yieldEvery);return await aZ(r,T,x,k,d,n.epochs,n.verbose,M,C,y,n.shuffle,A,n.initialEpoch,null,null)}finally{r.isTraining=!1,Vs(o,e),Vs(s,t),Vs(i,e),Vs(a,t),Vs(p,u),Vs(m,l),c!=null&&Ee(c)}}function JC(r){let e=[];r instanceof Ye&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(yu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Vs(r,e){if(r==null)return;let t=[];if(e instanceof Ye)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Ye)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function iZ(r){return r instanceof Ye}function ev(r){return Array.isArray(r)}function YM(r){return!iZ(r)&&!ev(r)}function QM(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let i=!1;if(ev(r)&&r.length>0)i=!0;else if(YM(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(i=>null);let s;if(YM(r)){r=r,s=[];for(let i of e){if(r[i]==null)throw new O(`No data provided for "${i}". Need data for each key in: ${e}`);s.push(r[i])}}else if(ev(r)){if(r=r,r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new O(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=JC(s),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new O(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let u=0;u<t[i].length;++u){if(u===0&&!n)continue;let l=a.shape[u],p=t[i][u];if(p!=null&&p>=0&&l!==p)throw new O(`${o} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function uZ(r,e,t){let n=Us(r.map(s=>s.shape[0]));n.sort();let o=Us(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function lZ(r,e,t){let n=[xi,dc,yp];for(let o=0;o<r.length;++o){let s=r[o],i=e[o],a=t[o];if(i!=null){if(i===yp&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(i)!==-1){let u=s.shape.slice(1),l=a.slice(1);for(let p=0;p<u.length;++p){let m=u[p],c=l[p];if(c!=null&&m!==c)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function ZM(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new O(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new O(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let u=0;u<t[i].length;++u){if(u===0&&!n)continue;let l=a.shape[u],p=t[i][u];if(p!=null&&p!==l)throw new O(`Error when checking ${o}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function pZ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var mZ="layers-model",os=class extends ns{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");OM(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=BM(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof tn))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new O(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(hy(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>hy(a))}else{let i=hy(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let a=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],La("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(n.indexOf(i)!==-1)continue;let a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let o=pZ(e.metrics,this.outputNames),s=(i,a,u)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([u,i])};La("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(n.indexOf(i)!==-1)continue;let a=o[i];(l=>{let p="",m,c,d;for(let f of l){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){let g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===dc?["accuracy","acc"].indexOf(f)!==-1?c=Sf:["crossentropy","ce"].indexOf(f)!==-1&&(c=gy):this.lossFunctions[i]===cc?["accuracy","acc"].indexOf(f)!==-1?c=by:["crossentropy","ce"].indexOf(f)!==-1&&(c=XC):["accuracy","acc"].indexOf(f)!==-1?c=wf:["crossentropy","ce"].indexOf(f)!==-1&&(c=_f);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),d=c,m=p+y}else d=FM(f),m=p+Af(f);let h;La(m,()=>{h=d}),s(i,m,h)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;Cy(o);let s=!0,i=this.standardizeUserDataXY(e,t,s,o);try{let a=i[0].concat(i[1]);this.makeTestFunction();let u=this.testFunction,l=this.testLoop(u,a,o,n.verbose,n.steps);return Mr(l)}finally{Vs(i[0],e),Vs(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),qM(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new O(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),i=new Oa;if(e instanceof Ye&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],e[u])}else for(let u of this.inputs){let l=e[u.name];if(l==null)throw new O(`No value is provided for the model's input ${u.name}`);i.add(u,l)}let a=Tp(s,i);return n?a:a[0]}retrieveSymbolicTensors(e){let t=Os(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],i=s.map(a=>a.name);for(let a=0;a<e.length;++a){let u=i.indexOf(e[a]);if(u!==-1&&(t[a]=s[u],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,i)=>{s==null&&o.push(e[i])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return G(()=>{let o=this.checkNumSamples(e);if(n)throw new De("Verbose predictLoop() is not implemented yet.");let s=Sy(o,t),i=this.outputs.map(a=>[]);for(let a=0;a<s.length;++a)G(()=>{let l=s[a][0],p=s[a][1],m=fc(e,l,p),c=[];if(Array.isArray(m))for(let f=0;f<m.length;++f)c.push({key:this.inputs[f],value:m[f]});else c.push({key:this.inputs[0],value:m});let d=new Oa(c);return Tp(this.outputs,d)}).forEach((l,p)=>i[p].push(l));return Mr(i.map(a=>lt(a,0)))})}predict(e,t={}){let n=JC(e);ZM(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return Cy(o),this.predictLoop(n,o)}finally{Vs(n,e)}}predictOnBatch(e){ZM(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new rn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let i=0;i<this.feedOutputShapes.length;++i){let a=this.feedOutputShapes[i];this.feedLossFns[i]===cc?s.push(a.slice(0,a.length-1).concat([1])):s.push(a)}if(e=QM(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=QM(t,this.feedOutputNames,s,!1,"target"),uZ(e,t,null),lZ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!=0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,i){let[a,u]=this.standardizeUserDataXY(e,t,s,i);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(o!=null){let p=ky(o,this.outputNames);l=[];for(let m=0;m<p.length;++m)l.push(await Iy(u[m],null,p[m]))}return[a,u,l]}testLoop(e,t,n,o=0,s){return G(()=>{let i=this.checkNumSamples(t,n,s,"steps"),a=[];if(o>0)throw new De("Verbose mode is not implemented yet.");if(s!=null)throw new De("steps mode in testLoop() is not implemented yet");{let u=Sy(i,n),l=zt(nn(0,i));for(let p=0;p<u.length;++p){let m=u[p][0],c=u[p][1],d=xu(l,m,c-m),f=vy(t,d),h=e(f);if(p===0)for(let g=0;g<h.length;++g)a.push(ce(0));for(let g=0;g<h.length;++g){let y=h[g];a[g]=X(a[g],F(c-m,y))}}for(let p=0;p<a.length;++p)a[p]=me(a[p],i)}return a})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;BC(e,o)>1&&(s+=`_${BC(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{let m=[];for(let h=0;h<this.inputs.length;++h)m.push({key:this.inputs[h],value:n[h]});let c=new Oa(m),d=Tp(this.outputs,c,{training:!0}),f;for(let h=0;h<this.lossFunctions.length;++h){let y=this.lossFunctions[h](o[h],d[h]);s[h]!=null&&(y=WM(y,s[h]));let x=Ft(y);t.push(x),h===0?f=y:f=X(f,y)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let y=this.metricsTensors[h][0],x=this.metricsTensors[h][1];g=Ft(y(o[x],d[x]))}Vt(g),i.push(g)}return f=Ft(f),this.calculateLosses().forEach(h=>{f=X(f,h)}),f},u=this.collectedTrainableWeights.map(m=>m.read()),l=!0;return[this.optimizer_.minimize(a,l,u)].concat(i)}}makeTestFunction(){this.testFunction=e=>G(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let l=0;l<this.inputs.length;++l)i.push({key:this.inputs[l],value:o[l]});let a=new Oa(i),u=Tp(this.outputs,a);for(let l=0;l<this.lossFunctions.length;++l){let p=this.lossFunctions[l],m=Ft(p(s[l],u[l]));l===0?n=m:n=X(n,m),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let p=this.metricsTensors[l][0],m=this.metricsTensors[l][1],c=Ft(p(s[m],u[m]));t.push(c)}return t})}async fit(e,t,n={}){return XM(this,e,t,n)}async fitDataset(e,t){return jM(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],a=this.makeTrainFunction()(o.concat(s)),u=[];for(let l of a){let p=await l.data();u.push(p[0])}return Ee(a),Vs(n[0],e),Vs(n[1],t),Mr(u)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<o.length;++i)n&&!o[i].trainable||t.push({name:o[i].originalName,tensor:s[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Nd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Nd().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=zs(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>zs(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=zs(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[zs(Af(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>zs(Af(e)));{let e={};for(let t in this.metrics)e[t]=zs(Af(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=xp(e.optimizer_config),n=xn(t),o;if(typeof e.loss=="string")o=bu(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(i=>bu(i));else if(e.loss!=null){o={};for(let i in e.loss)o[i]=bu(e.loss[i])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(i=>bu(i));else if(e.metrics!=null){s={};for(let i in e.metrics)s[i]=bu(e.metrics[i])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=Kr.getSaveHandlers(e);if(l.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new O(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Kr.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,a={modelTopology:this.toJSON(s,o),format:mZ,generatedBy:`TensorFlow.js tfjs-layers v${Nf}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:p,specs:m}=await Kr.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...m),n.data=Kr.concatenateArrayBuffers([n.data,p])}if(this.userDefinedMetadata!=null){let l=!0;YC(this.userDefinedMetadata,this.name,l),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){YC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};os.className="Model";re.registerClass(os);var tv=class extends os{};tv.className="Functional";re.registerClass(tv);async function JM(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=xp(t),o=xn(n,e);if(r.weightsManifest!=null){let s=await Kr.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(a=>a.originalName)),i={};for(let a of o.weights)i[a.originalName]=s[a.originalName];o.loadWeights(i),Ee(s)}return o}async function eE(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Kr.getLoadHandlers(r,e);if(t.length===0)t.push(Kr.browserHTTPRequest(r,e));else if(t.length>1)throw new O(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return cZ(r,void 0,e)}async function cZ(r,e,t){if(t==null&&(t={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,i=n.weightData!=null&&n.weightSpecs!=null&&s,a=xn(xp(o),e,i),u=n.trainingConfig;if(u!=null&&a.loadTrainingConfig(u),n.userDefinedMetadata!=null&&a.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:p}=dZ(n.weightData,n.weightSpecs);a.loadWeights(l,s),a.optimizer!=null&&p.length>0&&await a.optimizer.setWeights(p),Ee(l),Ee(p.map(m=>m.tensor))}return a}function dZ(r,e){let t=Kr.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var wy=class extends os{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:al("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof wy||e instanceof os,n;if(t){if(n=e,n.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=my({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=KC(this.outputs[0])}this.inboundNodes=[],new il({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Os(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Je(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new os({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new rn("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new rn("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new rn("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new rn("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=t}else b.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,i=t;let a=new e(i);if(!(a instanceof wy))throw new De(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(let u of s){let p=xn(u,void 0,o);o&&p.setFastWeightInitDuringBuild(!0),a.add(p)}return a}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},hc=wy;hc.className="Sequential";re.registerClass(hc);function fZ(r){return new os(r)}function hZ(r){return new hc(r)}function gZ(r,e){return e==null&&(e={}),eE(r,e)}function rv(r){return my(r)}function bZ(r,e){kf.registerCallbackConstructor(r,e)}var Tn=class extends re.Serializable{getConfig(){return{}}},nv=class extends Tn{apply(e,t=1){return kM(e,t)}};nv.className="elu";re.registerClass(nv);var ov=class extends Tn{apply(e){return Xd(e)}};ov.className="selu";re.registerClass(ov);var sv=class extends Tn{apply(e){return qr(e)}};sv.className="relu";re.registerClass(sv);var av=class extends Tn{apply(e){return G(()=>du(6,qr(e)))}};av.className="relu6";re.registerClass(av);var iv=class extends Tn{apply(e){return e}};iv.className="linear";re.registerClass(iv);var uv=class extends Tn{apply(e){return mn(e)}};uv.className="sigmoid";re.registerClass(uv);var lv=class extends Tn{apply(e){return CM(e)}};lv.className="hardSigmoid";re.registerClass(lv);var pv=class extends Tn{apply(e){return mi(e)}};pv.className="softplus";re.registerClass(pv);var mv=class extends Tn{apply(e){return IM(e)}};mv.className="softsign";re.registerClass(mv);var cv=class extends Tn{apply(e){return lu(e)}};cv.className="tanh";re.registerClass(cv);var Df=class extends Tn{apply(e,t=-1){return Jl(e,t)}};Df.className="softmax";re.registerClass(Df);var dv=class extends Tn{apply(e,t=-1){return zd(e,t)}};dv.className="logSoftmax";re.registerClass(dv);var fv=class extends Tn{apply(e,t=1){return G(()=>F(mn(F(e,t)),e))}};fv.className="swish";re.registerClass(fv);var hv=class extends Tn{apply(e){return G(()=>F(e,lu(mi(e))))}};hv.className="mish";re.registerClass(hv);function za(r){return r.getClassName()}function gv(r,e={}){return hi(r,re.SerializationMap.getMap().classNameMap,e,"activation")}function Ga(r){if(r==null){let e={};return e.className="linear",e.config={},gv(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},gv(e)}else return r instanceof Tn?r:gv(r)}function bv(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var yv=class extends re.Serializable{},kp=class extends yv{constructor(e){super();bv(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return G(()=>{let t=xt([1]);return this.hasL1&&(t=X(t,he(F(this.l1,$t(e))))),this.hasL2&&(t=X(t,he(F(this.l2,gp(e))))),L(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};kp.className="L1L2";re.registerClass(kp);function tE(r){return bv(r),new kp({l1:r!=null?r.l1:null,l2:0})}function rE(r){return bv(r),new kp({l2:r!=null?r.l2:null,l1:0})}var nE={l1l2:"L1L2"};function ht(r){return Qm(r)}function oE(r,e={}){return hi(r,re.SerializationMap.getMap().classNameMap,e,"regularizer")}function wt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in nE?nE[r]:r,config:{}};return oE(t)}else return r instanceof yv?r:oE(r)}var Pf=class extends We{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=qr(e);return this.maxValue!=null&&(n=Br(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Pf.className="ReLU";re.registerClass(Pf);var Mf=class extends We{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return jl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Mf.className="LeakyReLU";re.registerClass(Mf);var Ef=class extends We{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=kt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=wt(e.alphaRegularizer),this.alphaConstraint=Yt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Je(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Et({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),Ql(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Mt(this.alphaInitializer),alphaRegularizer:ht(this.alphaRegularizer),alphaConstraint:Xt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Ef.className="PReLU";re.registerClass(Ef);var Rf=class extends We{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new De(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return mu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Rf.className="ELU";re.registerClass(Rf);var Ff=class extends We{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return F(n,J(nr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Ff.className="ThresholdedReLU";re.registerClass(Ff);var Lf=class extends We{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new Df().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Lf.className="Softmax";re.registerClass(Lf);function pl(r,e,t){if(typeof r=="number")return Os(r,e);if(r.length!==e)throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!bM(o))throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Ln(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),i;return t==="same"?i=r:i=r-s+1,Math.floor((i+n-1)/n)}function Ua(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+Ba([t-e,0]);else if(n==="same")r=r*e;else throw new O(`Unsupport padding mode: ${n}.`);return r}function Bf(r,e){return G(()=>(jt(e),e==="channelsFirst"?He(r,[0,2,3,1]):r))}function xv(r,e){return G(()=>(jt(e),e==="channelsFirst"?He(r,[0,2,3,4,1]):r))}function xZ(r,e,t,n=1,o="valid",s,i=1){return G(()=>{if(s==null&&(s=fn()),jt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=He(r,[0,2,1])),o==="causal")throw new De("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=Rd(r,e,n,o==="same"?"same":"valid","NWC",i);return t!=null&&(a=gn(a,t)),a})}function sE(r,e,t,n=[1,1],o="valid",s,i,a=null){return G(()=>{if(s==null&&(s=fn()),jt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=Bf(r,s);if(o==="causal")throw new De("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Bs.conv2d({x:u,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),s==="channelsFirst"&&(u=He(u,[0,3,1,2])),u})}function TZ(r,e,t,n=[1,1,1],o="valid",s,i){return G(()=>{if(s==null&&(s=fn()),jt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=xv(r,s);if(o==="causal")throw new De("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=Ld(a,e,n,o==="same"?"same":"valid","NDHWC",i),t!=null&&(a=gn(a,t)),s==="channelsFirst"&&(a=He(a,[0,4,1,2,3])),a})}var gc=class extends We{constructor(e,t){super(t);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(gc.verifyArgs(t),this.rank=e,or(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new De(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=pl(t.kernelSize,e,"kernelSize"),this.strides=pl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,hn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,jt(this.dataFormat),this.activation=Ga(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=kt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Yt(t.biasConstraint),this.biasRegularizer=wt(t.biasRegularizer),this.activityRegularizer=wt(t.activityRegularizer),this.dilationRate=pl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(rs("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Jb(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:za(this.activation),useBias:this.useBias,biasInitializer:Mt(this.biasInitializer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),biasConstraint:Xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Ip=class extends gc{constructor(e,t){super(e,t);this.kernel=null;Ip.verifyArgs(t),this.filters=t.filters,or(this.filters,"filters"),this.kernelInitializer=kt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Yt(t.kernelConstraint),this.kernelRegularizer=wt(t.kernelRegularizer)}build(e){e=Je(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return G(()=>{e=Oe(e);let n,o=this.bias==null?null:this.bias.read(),s=ey(this.activation.getClassName());if(s!=null&&this.rank===2)n=sE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=xZ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=sE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=TZ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new De("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=Je(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let i=Ln(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(i)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Mt(this.kernelInitializer),kernelRegularizer:ht(this.kernelRegularizer),kernelConstraint:Xt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},kv=class extends Ip{constructor(e){super(2,e);kv.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Jb(e.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},bc=kv;bc.className="Conv2D";re.registerClass(bc);var Iv=class extends Ip{constructor(e){super(3,e);Iv.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},yc=Iv;yc.className="Conv3D";re.registerClass(yc);var $f=class extends bc{constructor(e){super(e);if(this.inputSpec=[new Et({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Je(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Et({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{let n=Oe(e);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);let u=o[i],l=o[a],p=this.kernelSize[0],m=this.kernelSize[1],c=this.strides[0],d=this.strides[1],f=Ua(u,c,p,this.padding),h=Ua(l,d,m,this.padding),g=[s,f,h,this.filters];this.dataFormat!=="channelsLast"&&(n=He(n,[0,2,3,1]));let y=Fd(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=He(y,[0,3,1,2])),this.bias!=null&&(y=gn(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=Je(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let i=this.kernelSize[0],a=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[o]=Ua(t[o],u,i,this.padding),t[s]=Ua(t[s],l,a,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};$f.className="Conv2DTranspose";re.registerClass($f);var Of=class extends yc{constructor(e){super(e);if(this.inputSpec=[new Et({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Je(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Et({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{let n=Oe(e);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],i,a,u;this.dataFormat==="channelsFirst"?(u=2,i=3,a=4):(u=1,i=2,a=3);let l=o[u],p=o[i],m=o[a],c=this.kernelSize[0],d=this.kernelSize[1],f=this.kernelSize[2],h=this.strides[0],g=this.strides[1],y=this.strides[2],x=Ua(l,h,c,this.padding),T=Ua(p,g,d,this.padding),k=Ua(m,y,f,this.padding),C=[s,x,T,k,this.filters];this.dataFormat!=="channelsLast"&&(n=He(n,[0,2,3,4,1]));let A=WI(n,this.kernel.read(),C,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(A=He(A,[0,4,1,2,3])),this.bias!==null&&(A=gn(A,this.bias.read(),this.dataFormat)),this.activation!==null&&(A=this.activation.apply(A)),A})}computeOutputShape(e){e=Je(e);let t=e.slice(),n,o,s,i;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,i=4):(n=4,o=1,s=2,i=3);let a=this.kernelSize[0],u=this.kernelSize[1],l=this.kernelSize[2],p=this.strides[0],m=this.strides[1],c=this.strides[2];return t[n]=this.filters,t[o]=Ua(t[o],p,a,this.padding),t[s]=Ua(t[s],m,u,this.padding),t[i]=Ua(t[i],c,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Of.className="Conv3DTranspose";re.registerClass(Of);var Tv=class extends Ip{constructor(e,t){super(e,t);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(t.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=kt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=wt(t.depthwiseRegularizer),this.depthwiseConstraint=Yt(t.depthwiseConstraint),this.pointwiseInitializer=kt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=wt(t.pointwiseRegularizer),this.pointwiseConstraint=Yt(t.pointwiseConstraint)}build(e){if(e=Je(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Et({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{e=Oe(e);let n;if(this.rank===1)throw new De("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=He(e,[0,2,3,1])),n=yC(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=gn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=He(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Mt(this.depthwiseInitializer),e.pointwiseInitializer=Mt(this.pointwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.pointwiseRegularizer=ht(this.pointwiseRegularizer),e.depthwiseConstraint=Xt(this.depthwiseConstraint),e.pointwiseConstraint=Xt(this.pointwiseConstraint),e}};Tv.className="SeparableConv";var zf=class extends Tv{constructor(e){super(2,e)}};zf.className="SeparableConv2D";re.registerClass(zf);var Cv=class extends Ip{constructor(e){super(1,e);Cv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Jb(e.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Gf=Cv;Gf.className="Conv1D";re.registerClass(Gf);var Uf=class extends We{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return G(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=cf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return cf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=cf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return cf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Uf.className="Cropping2D";re.registerClass(Uf);var Wf=class extends We{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,fM(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return G(()=>{let n=Oe(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=He(n,[0,2,3,1]);let s=this.size[0]*o[2],i=this.size[1]*o[3],a=this.interpolation==="nearest"?Rn.resizeNearestNeighbor(n,[s,i]):Rn.resizeBilinear(n,[s,i]);return He(a,[0,3,1,2])}else{let s=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?Rn.resizeNearestNeighbor(n,[s,i]):Rn.resizeBilinear(n,[s,i])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Wf.className="UpSampling2D";re.registerClass(Wf);function kZ(r,e,t=[1,1],n="valid",o,s){return G(()=>{o==null&&(o=fn()),jt(o);let i=Bf(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=pu(i,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(i=He(i,[0,3,1,2])),i})}var Kf=class extends gc{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=kt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Yt(e.depthwiseConstraint),this.depthwiseRegularizer=wt(e.depthwiseRegularizer)}build(e){if(e=Je(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{e=Oe(e);let n=kZ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=gn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=Je(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Ln(t,this.kernelSize[0],this.padding,this.strides[0]),i=Ln(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,i]:[e[0],s,i,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Mt(this.depthwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.depthwiseConstraint=Xt(this.depthwiseRegularizer),e}};Kf.className="DepthwiseConv2D";re.registerClass(Kf);function vv(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function Sv(r,e,t,n=!1,o,s,i=!1,a=!1){return G(()=>{let u=e.shape.length;if(u<3)throw new O(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(nn(2,u));if(e=He(e,l),s!=null)throw new De("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=J(J(o,"bool"),"float32"),o.rank===u-1&&(o=Dr(o,-1)),o=He(o,l)),n&&(e=xr(e,0),o!=null&&(o=xr(o,0)));let p=[],m,c=t,d=e.shape[0],f=Or(e),h;o!=null&&(h=Or(o));for(let y=0;y<d;++y){let x=f[y],T=G(()=>r(x,c));if(o==null)m=T[0],c=T[1];else{let k=G(()=>{let C=h[y],A=pe(Pr(C),C),M=X(F(T[0],C),F(c[0],A)),D=c.map((R,B)=>X(F(T[1][B],C),F(R,A)));return{output:M,newStates:D}});m=k.output,c=k.newStates}a&&p.push(m)}let g;return a&&(g=fr(p,1)),[m,g,c]})}var wv=class extends We{constructor(e){super(e);let t;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new kc({cells:e.cell}):t=e.cell,t.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Et({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return nn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){ly(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let i of t)s.push([e[0],i]);return[o].concat(s)}else return o}computeMask(e,t){return G(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new De("Constants support is not implemented in RNN yet.");ly(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Et({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new De("Constants support is not implemented in RNN yet.");this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new Et({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new eo("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>xt([n,o])):this.states_=[xt([n,this.cell.stateSize])];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>xt([n,o])):this.states_[0]=xt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,a=[n,i];if(!b.arraysEqual(s.shape,a))throw new O(`State ${o} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Vt(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=vv(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let i=[],a=[];if(n!=null){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Et({shape:l.shape}));a=a.concat(this.stateSpec)}if(o!=null&&(t.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof yn){let l=[e].concat(i),p=this.inputSpec.concat(a),m=this.inputSpec;this.inputSpec=p;let c=super.apply(l,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return G(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Oe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new O(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let a={training:o},l=Sv((f,h)=>{let g=this.cell.call([f].concat(h),a);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),p=l[0],m=l[1],c=l[2];this.stateful&&this.resetStates(c,o);let d=this.returnSequences?m:p;return this.returnState?[d].concat(c):d})}getInitialState(e){return G(()=>{let t=xt(e.shape);return t=he(t,[1,2]),t=yu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?oy(t,[1,n]):t):this.cell.stateSize>1?[oy(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===wv.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=xn(o,n);return new e(Object.assign(t,{cell:s}))}},js=wv;js.className="RNN";re.registerClass(js);var ml=class extends We{},xc=class extends ml{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,or(this.units,"units"),this.activation=Ga(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=kt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=kt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=kt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=fp([1,Ba([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=fp([1,Ba([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Je(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tu({ones:()=>Pr(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tu({ones:()=>Pr(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?s=Ks(F(e,i),this.kernel.read()):s=Ks(e,this.kernel.read()),this.bias!=null&&(s=gn(s,this.bias.read())),a!=null&&(n=F(n,a));let u=X(s,Ks(n,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:za(this.activation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),recurrentInitializer:Mt(this.recurrentInitializer),biasInitializer:Mt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};xc.className="SimpleRNNCell";re.registerClass(xc);var Vf=class extends js{constructor(e){e.cell=new xc(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};Vf.className="SimpleRNN";re.registerClass(Vf);var Tc=class extends ml{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,or(this.units,"units"),this.activation=Ga(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ga(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=kt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=kt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=kt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=fp([1,Ba([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=fp([1,Ba([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Je(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tu({ones:()=>Pr(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tu({ones:()=>Pr(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,a,u,l;0<this.dropout&&this.dropout<1&&(e=F(e,s[0]));let p=Ks(e,this.kernel.read());this.useBias&&(p=gn(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=F(o,i[0]));let m=this.recurrentKernel.read(),[c,d]=Cr(m,[2*this.units,this.units],m.rank-1),f=Ks(o,c),[h,g,y]=Cr(p,3,p.rank-1),[x,T]=Cr(f,2,f.rank-1);a=this.recurrentActivation.apply(X(h,x)),u=this.recurrentActivation.apply(X(g,T));let k=Ks(F(u,o),d);l=this.activation.apply(X(y,k));let C=X(F(a,o),F(X(1,Ze(a)),l));return[C,C]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:za(this.activation),recurrentActivation:za(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),recurrentInitializer:Mt(this.recurrentInitializer),biasInitializer:Mt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Tc.className="GRUCell";re.registerClass(Tc);var jf=class extends js{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Tc(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};jf.className="GRU";re.registerClass(jf);var cl=class extends ml{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,or(this.units,"units"),this.activation=Ga(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ga(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=kt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=kt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=kt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=fp([1,Ba([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=fp([1,Ba([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var o;e=Je(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;n=new(o=class extends Fn{apply(u,l){let p=s.apply([i]),m=new bp().apply([i]),c=s.apply([i*2]);return UC(UC(p,m),c)}},o.className="CustomInit",o)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return G(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tu({ones:()=>Pr(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tu({ones:()=>Pr(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,u,l,p,m;0<this.dropout&&this.dropout<1&&(e=F(e,i[0]));let c=Ks(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=F(o,a[0])),c=X(c,Ks(o,this.recurrentKernel.read())),this.useBias&&(c=gn(c,this.bias.read()));let[d,f,h,g]=Cr(c,4,c.rank-1);u=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(f),p=X(F(l,s),F(u,this.activation.apply(h))),m=this.recurrentActivation.apply(g);let y=F(m,this.activation.apply(p));return[y,y,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:za(this.activation),recurrentActivation:za(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),recurrentInitializer:Mt(this.recurrentInitializer),biasInitializer:Mt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};cl.className="LSTMCell";re.registerClass(cl);var Hf=class extends js{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cl(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Hf.className="LSTM";re.registerClass(Hf);var kc=class extends ml{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return G(()=>{e=e;let n=e.slice(1),o=[];for(let a of this.cells.slice().reverse())Array.isArray(a.stateSize)?o.push(n.splice(0,a.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],i;for(let a=0;a<this.cells.length;++a){let u=this.cells[a];n=o[a],a===0?i=[e[0]].concat(n):i=[i[0]].concat(n),i=u.call(i,t),s.push(i.slice(1))}n=[];for(let a of s.slice().reverse())n.push(...a);return[i[0]].concat(n)})}build(e){ly(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{La(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(xn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Tf(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let i=0;i<n.weights.length;++i)t.push([n.weights[i],s[i]])}pc(t)}};kc.className="StackedRNNCells";re.registerClass(kc);function Tu(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,i=()=>s!=null?s(e(),t):ay(e(),t),a=()=>sl(i,e,n);return!o||o<=1?Vt(a().clone()):Array(o).fill(void 0).map(a).map(l=>Vt(l.clone()))}var _v=class extends js{constructor(e){if(e.unroll)throw new De("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new De("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Et({ndim:5})]}call(e,t){return G(()=>{if(this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new O("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return G(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],i=xt(s);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new eo("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xt(s)):this.states_=[xt(s)];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xt(s)):this.states_[0]=xt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let a=0;a<this.states_.length;++a){let u=e[a],l=s;if(!b.arraysEqual(u.shape,l))throw new O(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${u.shape}`);this.states_[a]=u}}this.states_=this.states_.map(a=>Vt(a.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:i,dilationRate:a}=this.cell,u=t==="channelsFirst",l=e[u?3:2],p=e[u?4:3],m=Ln(l,o[0],s,i[0],a[0]),c=Ln(p,o[1],s,i[1],a[1]);return[...e.slice(0,2),...u?[n,m,c]:[m,c,n]]}};_v.className="ConvRNN2D";var Ic=class extends cl{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:i,dilationRate:a}=e;super({...e,units:t});this.filters=t,or(this.filters,"filters"),this.kernelSize=pl(n,2,"kernelSize"),this.kernelSize.forEach(u=>or(u,"kernelSize")),this.strides=pl(o||1,2,"strides"),this.strides.forEach(u=>or(u,"strides")),this.padding=s||"valid",hn(this.padding),this.dataFormat=i||"channelsLast",jt(this.dataFormat),this.dilationRate=pl(a||1,2,"dilationRate"),this.dilationRate.forEach(u=>or(u,"dilationRate"))}build(e){var a;e=Je(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let l=this.biasInitializer,p=this.filters;u=new(a=class extends Fn{apply(c,d){let f=l.apply([p]),h=dr([p]),g=l.apply([p*2]);return ec([f,h,g])}},a.className="CustomInit",a)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return G(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tu({ones:()=>Pr(o),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,l=(oe,ie,se)=>!ie||!ie[se]?oe:F(ie[se],oe),p=l(o,u,0),m=l(o,u,1),c=l(o,u,2),d=l(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tu({ones:()=>Pr(s),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));let f=this.recurrentDropoutMask,h=l(s,f,0),g=l(s,f,1),y=l(s,f,2),x=l(s,f,3),T=3,[k,C,A,M]=Cr(this.kernel.read(),a,T),[D,R,B,U]=this.useBias?Cr(this.bias.read(),a):[null,null,null,null];p=this.inputConv(p,k,D,this.padding),m=this.inputConv(m,C,R,this.padding),c=this.inputConv(c,A,B,this.padding),d=this.inputConv(d,M,U,this.padding);let[W,K,j,V]=Cr(this.recurrentKernel.read(),a,T);h=this.recurrentConv(h,W),g=this.recurrentConv(g,K),y=this.recurrentConv(y,j),x=this.recurrentConv(x,V);let q=this.recurrentActivation.apply(X(p,h)),ee=this.recurrentActivation.apply(X(m,g)),Z=X(F(ee,i),F(q,this.activation.apply(X(c,y)))),te=F(this.recurrentActivation.apply(X(d,x)),this.activation.apply(Z));return[te,te,Z]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=Zn(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?gn(s,n,this.dataFormat):s}recurrentConv(e,t){return Zn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Ic.className="ConvLSTM2DCell";re.registerClass(Ic);var qf=class extends _v{constructor(e){let t=new Ic(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};qf.className="ConvLSTM2D";re.registerClass(qf);var Cc=class extends We{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return sl(()=>ay(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Cc.className="Dropout";re.registerClass(Cc);var Xf=class extends Cc{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Xf.className="SpatialDropout1D";re.registerClass(Xf);var Yf=class extends We{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,or(this.units,"units"),this.activation=Ga(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=kt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=kt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Yt(e.kernelConstraint),this.biasConstraint=Yt(e.biasConstraint),this.kernelRegularizer=wt(e.kernelRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Je(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Je(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=ey(this.activation.getClassName()),s;return o!=null?s=Ks(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=Ks(n,this.kernel.read()),this.bias!=null&&(s=gn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:za(this.activation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),biasInitializer:Mt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),biasConstraint:Xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Yf.className="Dense";re.registerClass(Yf);var Qf=class extends We{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Je(e);for(let t of e.slice(1))if(t==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ws(e,1)]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=He(n,o)}return TM(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Qf.className="Flatten";re.registerClass(Qf);var Zf=class extends We{constructor(e){super(e);this.supportsMasking=!0,this.activation=Ga(e.activation)}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:za(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Zf.className="Activation";re.registerClass(Zf);var Jf=class extends We{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return G(()=>(e=Oe(e),yM(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Jf.className="RepeatVector";re.registerClass(Jf);var eh=class extends We{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,i=null;for(let u=0;u<o.length;++u){let l=o[u];if(this.isUnknown(l))if(i===null)i=u;else throw new O("Can only specifiy one unknown dimension.");else s*=l}let a=Ws(e);if(i!==null){if(s===0||a%s!=0)throw new O(n);o[i]=a/s}else if(a!==s)throw new O(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return L(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};eh.className="Reshape";re.registerClass(eh);var th=class extends We{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=nn(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Et({ndim:this.dims.length+1})]}computeOutputShape(e){e=Je(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return He(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};th.className="Permute";re.registerClass(th);var rh=class extends We{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),o=-1;return Um(ci(n,this.maskValue),o)}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=-1,s=!0,i=Um(ci(n,this.maskValue),o,s);return F(n,J(i,n.dtype))})}};rh.className="Masking";re.registerClass(rh);var nh=class extends We{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(St(e.inputLength))}this.inputDim=e.inputDim,or(this.inputDim,"inputDim"),this.outputDim=e.outputDim,or(this.outputDim,"outputDim"),this.embeddingsInitializer=kt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=wt(e.embeddingsRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.embeddingsConstraint=Yt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return G(()=>this.maskZero?(e=Oe(e),ci(e,Ne(e))):null)}computeOutputShape(e){if(e=Je(e),this.inputLength==null)return[...e,this.outputDim];let t=St(this.inputLength);if(t.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],i=e[o+1];if(s!=null&&i!=null&&s!==i)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);n.dtype!=="int32"&&(n=hp(n,"int32"));let o=sy(this.embeddings.read(),L(n,[n.size]));return L(o,Je(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Mt(this.embeddingsInitializer),embeddingsRegularizer:ht(this.embeddingsRegularizer),activityRegularizer:ht(this.activityRegularizer),embeddingsConstraint:Xt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};nh.className="Embedding";re.registerClass(nh);var dl=class extends We{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new De}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],i=t[o];if(s==null||i==null||s<0||i<0)n.push(null);else if(s===1)n.push(i);else if(i===1)n.push(s);else{if(s!==i)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Je(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Us(t),t.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let i=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,i)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&Us(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return G(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=Ba(o);for(let i of e){let a=i.rank;for(let u=0;u<s-a;++u)i=yu(i,1);n.push(i)}return this.mergeFunction(n)}else{let s=!1;for(let u of e){let l=u.rank;if(l==null){let p=u.shape,m=p[0],c=p.slice(1).concat([m]),d=L(u,[m].concat(Ws(p.slice(1))));d=He(d,[1,0]),d=L(d,c),n.push(d),s=!0}else if(l>1){let p=nn(1,l).concat([0]);n.push(He(u,p)),s=!0}else n.push(u)}let i=this.mergeFunction(n),a=i.rank;if(s){if(a==null){let u=i.shape,l=u.length,p=u[l-1],m=[p].concat(u.slice(0,u.length-1));i=L(He(L(i,[-1,p]),[1,0]),m)}else if(a>1){let u=[a-1].concat(nn(0,a-1));i=He(i,u)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Us(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return G(()=>{if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(t.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:Dr(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=Hr(n,t[o]);return n})}},oh=class extends dl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return t})}};oh.className="Add";re.registerClass(oh);var sh=class extends dl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=F(t,e[n]);return t})}};sh.className="Multiply";re.registerClass(sh);var ah=class extends dl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return F(1/e.length,t)})}};ah.className="Average";re.registerClass(ah);var ih=class extends dl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Jn(t,e[n]);return t})}};ih.className="Maximum";re.registerClass(ih);var uh=class extends dl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=du(t,e[n]);return t})}};uh.className="Minimum";re.registerClass(uh);var lh=class extends dl{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let i=!1;for(let a of n)if(b.arraysEqual(a,s)){i=!0;break}i||n.push(s)}if(n.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return G(()=>ec(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new O(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return G(()=>{let n=!0;if(t.forEach(i=>{if(i!=null){n=!1;return}}),n)return null;let o=[];for(let i=0;i<e.length;++i)t[i]==null?o.push(J(Pr(e[i]),"bool")):t[i].rank<e[i].rank?o.push(Dr(t[i],-1)):o.push(t[i]);let s=lt(o,this.axis);return Pd(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};lh.className="Concatenate";re.registerClass(lh);function ph(r,e){for(;r<0;)r+=e;return r}function IZ(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new De("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new De("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return G(()=>{let i;if(n>o){i=n-o;let u=[];for(let l=0;l<i;++l)u.push(1);e=L(e,e.shape.concat(u))}else if(o>n){i=o-n;let u=[];for(let l=0;l<i;++l)u.push(1);r=L(r,r.shape.concat(u))}else i=0;let a;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?a=he(F(r,e),s[0]):a=he(F(He(r,[1,0]),e),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===e.shape.length-1;a=Ve(r,e,u,l)}if(i>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let p=u;p<u+i;++p)l.push(p);a=dn(a,l)}return a.shape.length===1&&(a=Dr(a,1)),a})}var mh=class extends dl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new De("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new O(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,i)=>ph(s,e[i].shape.length)):o=[ph(this.axes,t.shape.length),ph(this.axes,n.shape.length)],this.normalize&&(t=If(t,o[0]),n=If(n,o[1])),IZ(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[ph(this.axes,e.length),ph(this.axes,t.length)],n}computeOutputShape(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new De("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};mh.className="Dot";re.registerClass(mh);var ch=class extends We{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);return sl(()=>X(tc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};ch.className="GaussianNoise";re.registerClass(ch);var dh=class extends We{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?sl(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return F(n,tc(n.shape,1,s))},()=>n,t.training||!1):n})}};dh.className="GaussianDropout";re.registerClass(dh);var fh=class extends We{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return sl(()=>{let s=Oe(e),i=1.6732632423543772,a=1.0507009873554805,u=-i*a,l=es(Ra(n),this.rate);l=hp(l,"float32");let p=((1-this.rate)*(1+this.rate*u**2))**-.5,m=-p*u*this.rate,c=X(F(s,l),F(X(l,-1),u));return X(F(c,p),m)},()=>Oe(e),t.training||!1)}return e})}};fh.className="AlphaDropout";re.registerClass(fh);function hh(r,e,t,n,o,s=.001){let i;if(r.rank===2)i=RI(r,e,t,n,o,s);else if(r.rank===3)i=FI(r,e,t,n,o,s);else if(r.rank===4)i=LI(r,e,t,n,o,s);else throw new De(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function CZ(r,e,t,n,o=.001){return G(()=>{let s=Hm(r,n),i=s.mean,a=s.variance;return[hh(r,i,a,t,e,o),i,a]})}function vZ(r,e,t,n,o=.001){return G(()=>{let s=Hm(r,n),i=s.mean,a=s.variance,u=[];for(let f of nn(0,r.rank))n.indexOf(f)!==-1?u.push(1):u.push(r.shape[f]);let l=L(i,u),p=L(a,u),m=e==null?null:L(e,u),c=t==null?null:L(t,u);return[hh(r,l,p,c,m,o),i,a]})}function SZ(r,e,t,n,o=.001){return b.arraysEqual(n.slice().sort(),nn(0,r.rank-1))?CZ(r,e,t,n,o):vZ(r,e,t,n,o)}var gh=class extends We{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=kt(e.betaInitializer||"zeros"),this.gammaInitializer=kt(e.gammaInitializer||"ones"),this.movingMeanInitializer=kt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=kt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Yt(e.betaConstraint),this.gammaConstraint=Yt(e.gammaConstraint),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer)}build(e){e=Je(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new O(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Et({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return G(()=>{let n=t.training==null?!1:t.training,o=Oe(e),s=o.shape,i=s.length,a=nn(0,i),u=this.axis>=0?this.axis:this.axis+i;a.splice(u,1);let l=Os(1,i);l[u]=s[u];let p=a.slice();p.sort();let m=!b.arraysEqual(p,nn(0,i).slice(0,i-1)),c=()=>{if(m){let x=L(this.movingMean.read(),l),T=L(this.movingVariance.read(),l),k=this.center?L(this.beta.read(),l):null,C=this.scale?L(this.gamma.read(),l):null;return hh(o,x,T,k,C,this.epsilon)}else return hh(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return c();let[d,f,h]=SZ(o,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(x,T,k)=>{G(()=>{let C=1-k,A=x.read(),M=F(pe(A,T),C);x.write(pe(A,M))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,h,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Mt(this.betaInitializer),gammaInitializer:Mt(this.gammaInitializer),movingMeanInitializer:Mt(this.movingMeanInitializer),movingVarianceInitializer:Mt(this.movingVarianceInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer),betaConstraint:Xt(this.betaConstraint),gammaConstraint:Xt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};gh.className="BatchNormalization";re.registerClass(gh);var bh=class extends We{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=kt(e.betaInitializer||"zeros"),this.gammaInitializer=kt(e.gammaInitializer||"ones"),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Je(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Us(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),o=n.shape,s=o.length;return G(()=>{let i=!0,{mean:a,variance:u}=Hm(n,this.axis,i),l=Os(1,s);for(let h of this.axis)l[h]=o[h];let p=h=>h!=null&&h.shape.length!==s?L(h,l):h,m=p(this.gamma.read()),c=p(this.beta.read()),d=[],f=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(d.push(o[h]),f.push(1)):(d.push(1),f.push(o[h]));return a=jr(a,d),u=jr(u,d),m=jr(m,f),c=jr(c,f),hh(n,a,u,c,m,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Mt(this.betaInitializer),gammaInitializer:Mt(this.gammaInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};bh.className="LayerNormalization";re.registerClass(bh);function wZ(r,e,t){return G(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=fn()),t!=="channelsLast"&&t!=="channelsFirst")throw new O(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],Mn(r,n)})}var yh=class extends We{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?fn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){e=Je(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return G(()=>wZ(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};yh.className="ZeroPadding2D";re.registerClass(yh);function _y(r,e,t,n,o,s){return G(()=>{jt(o),zC(s),hn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=fn()),s==null&&(s="max"),r=Bf(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=Xl(r,e,t,a):i=Gl(r,e,t,a),o==="channelsFirst"&&(i=He(i,[0,3,1,2])),i})}function aE(r,e,t,n,o,s){return G(()=>{jt(o),zC(s),hn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=fn()),s==null&&(s="max"),r=xv(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=Wd(r,e,t,a):i=Md(r,e,t,a),o==="channelsFirst"&&(i=He(i,[0,4,1,2,3])),i})}var Av=class extends We{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(or(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);or(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,hn(this.padding),this.inputSpec=[new Et({ndim:3})]}computeOutputShape(e){e=Je(e);let t=Ln(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return G(()=>{this.invokeCallHook(e,t),e=yu(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return dn(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},xh=class extends Av{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),hn(o),_y(e,t,n,o,s,"max")}};xh.className="MaxPooling1D";re.registerClass(xh);var Th=class extends Av{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),hn(o),_y(e,t,n,o,s,"avg")}};Th.className="AveragePooling1D";re.registerClass(Th);var Nv=class extends We{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];or(this.poolSize,"poolSize"),or(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),hn(this.padding),this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){e=Je(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Ln(t,this.poolSize[0],this.padding,this.strides[0]),n=Ln(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},kh=class extends Nv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),hn(o),_y(e,t,n,o,s,"max")}};kh.className="MaxPooling2D";re.registerClass(kh);var Ih=class extends Nv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),hn(o),_y(e,t,n,o,s,"avg")}};Ih.className="AveragePooling2D";re.registerClass(Ih);var Dv=class extends We{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];or(this.poolSize,"poolSize"),or(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),hn(this.padding),this.inputSpec=[new Et({ndim:5})]}computeOutputShape(e){e=Je(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Ln(t,this.poolSize[0],this.padding,this.strides[0]),n=Ln(n,this.poolSize[1],this.padding,this.strides[1]),o=Ln(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ch=class extends Dv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),hn(o),aE(e,t,n,o,s,"max")}};Ch.className="MaxPooling3D";re.registerClass(Ch);var vh=class extends Dv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),hn(o),aE(e,t,n,o,s,"avg")}};vh.className="AveragePooling3D";re.registerClass(vh);var Pv=class extends We{constructor(e){super(e);this.inputSpec=[new Et({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new De}},Sh=class extends Pv{constructor(e){super(e||{})}call(e,t){return G(()=>{let n=Oe(e);return Ft(n,1)})}};Sh.className="GlobalAveragePooling1D";re.registerClass(Sh);var wh=class extends Pv{constructor(e){super(e||{})}call(e,t){return G(()=>{let n=Oe(e);return en(n,1)})}};wh.className="GlobalMaxPooling1D";re.registerClass(wh);var Mv=class extends We{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new De}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},_h=class extends Mv{call(e,t){return G(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Ft(n,[1,2]):Ft(n,[2,3])})}};_h.className="GlobalAveragePooling2D";re.registerClass(_h);var Ah=class extends Mv{call(e,t){return G(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?en(n,[1,2]):en(n,[2,3])})}};Ah.className="GlobalMaxPooling2D";re.registerClass(Ah);var Ev=class extends We{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=xn(o,n);delete t.layer;let i={layer:s};return Object.assign(i,t),new e(i)}},Nh=class extends Ev{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=Je(e),e.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Je(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return G(()=>(e=Oe(e),Sv((i,a)=>[Oe(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Nh.className="TimeDistributed";re.registerClass(Nh);function _Z(r){gi(dM,"BidirectionalMergeMode",r)}var AZ="concat",Dh=class extends Ev{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=xn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?AZ:e.mergeMode,_Z(this.mergeMode),e.weights)throw new De("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Mr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=vv(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let i=[],a=[];if(n!=null){let l=n.length;if(l%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);let p=n.map(m=>new Et({shape:m.shape}));this.forwardLayer.stateSpec=p.slice(0,l/2),this.backwardLayer.stateSpec=p.slice(l/2),a.push(...p)}if(o!=null)throw new De("Support for constants in Bidirectional layers is not implemented yet.");let u=i[0]instanceof yn;for(let l of i)if(l instanceof yn!==u)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let l=[e].concat(i),p=this.inputSpec.concat(a),m=this.inputSpec;this.inputSpec=p;let c=super.apply(l,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return G(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let u=n.slice(0,n.length/2),l=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=xr(s,1));let a;return this.mergeMode==="concat"?a=ec([o,s]):this.mergeMode==="sum"?a=X(o,s):this.mergeMode==="ave"?a=F(.5,X(o,s)):this.mergeMode==="mul"?a=F(o,s):this.mergeMode==null&&(a=[o,s]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){La(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),La(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(i=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=xn(t.layer);if(delete t.layer,t.numConstants!=null)throw new De("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};Dh.className="Bidirectional";re.registerClass(Dh);function NZ(r){return new bi(r)}function DZ(r){return new Rf(r)}function PZ(r){return new Pf(r)}function MZ(r){return new Mf(r)}function EZ(r){return new Ef(r)}function RZ(r){return new Lf(r)}function FZ(r){return new Ff(r)}function LZ(r){return new Gf(r)}function BZ(r){return new bc(r)}function $Z(r){return new $f(r)}function OZ(r){return new yc(r)}function zZ(r){return new Of(r)}function GZ(r){return new zf(r)}function UZ(r){return new Uf(r)}function WZ(r){return new Wf(r)}function KZ(r){return new Kf(r)}function VZ(r){return new Zf(r)}function jZ(r){return new Yf(r)}function HZ(r){return new Cc(r)}function qZ(r){return new Xf(r)}function XZ(r){return new Qf(r)}function YZ(r){return new Jf(r)}function QZ(r){return new eh(r)}function ZZ(r){return new th(r)}function JZ(r){return new nh(r)}function e9(r){return new oh(r)}function t9(r){return new ah(r)}function r9(r){return new lh(r)}function n9(r){return new ih(r)}function o9(r){return new uh(r)}function s9(r){return new sh(r)}function a9(r){return new mh(r)}function i9(r){return new gh(r)}function u9(r){return new bh(r)}function l9(r){return new yh(r)}function Rv(r){return new Th(r)}function p9(r){return Rv(r)}function m9(r){return Rv(r)}function Fv(r){return new Ih(r)}function c9(r){return Fv(r)}function d9(r){return Fv(r)}function Lv(r){return new vh(r)}function f9(r){return Lv(r)}function h9(r){return Lv(r)}function g9(r){return new Sh(r)}function b9(r){return new _h(r)}function iE(r){return new wh(r)}function uE(r){return new Ah(r)}function lE(r){return new xh(r)}function pE(r){return new kh(r)}function y9(r){return new Ch(r)}function x9(r){return new jf(r)}function T9(r){return new Tc(r)}function k9(r){return new Hf(r)}function I9(r){return new cl(r)}function C9(r){return new Vf(r)}function v9(r){return new xc(r)}function S9(r){return new qf(r)}function w9(r){return new Ic(r)}function _9(r){return new js(r)}function A9(r){return new kc(r)}function N9(r){return new Dh(r)}function D9(r){return new Nh(r)}var P9=iE,M9=uE,E9=lE,R9=pE;function F9(r){return new ch(r)}function L9(r){return new dh(r)}function B9(r){return new fh(r)}function $9(r){return new rh(r)}var cE={};Xe(cE,{MAPE:()=>X9,MSE:()=>Z9,binaryAccuracy:()=>O9,binaryCrossentropy:()=>z9,categoricalAccuracy:()=>U9,categoricalCrossentropy:()=>W9,cosineProximity:()=>j9,mape:()=>Y9,meanAbsoluteError:()=>H9,meanAbsolutePercentageError:()=>q9,meanSquaredError:()=>Q9,mse:()=>J9,precision:()=>K9,recall:()=>V9,sparseCategoricalAccuracy:()=>G9});function O9(r,e){return Sf(r,e)}function z9(r,e){return gy(r,e)}function G9(r,e){return by(r,e)}function U9(r,e){return wf(r,e)}function W9(r,e){return _f(r,e)}function K9(r,e){return qC(r,e)}function V9(r,e){return RM(r,e)}function j9(r,e){return Cf(r,e)}function H9(r,e){return mc(r,e)}function q9(r,e){return ll(r,e)}function X9(r,e){return ll(r,e)}function Y9(r,e){return ll(r,e)}function Q9(r,e){return xi(r,e)}function Z9(r,e){return xi(r,e)}function J9(r,e){return xi(r,e)}var dE={};Xe(dE,{modelFromJSON:()=>JM});var fE={};Xe(fE,{l1:()=>tJ,l1l2:()=>eJ,l2:()=>rJ});function eJ(r){return new kp(r)}function tJ(r){return tE(r)}function rJ(r){return rE(r)}var Bv=class extends ul{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof os))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Ay(r,e){return r<e}function hE(r,e){return r>e}var $v=class extends Bv{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new De("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Ay:this.mode==="max"?this.monitorFunc=hE:this.monitor.indexOf("acc")!==-1?this.monitorFunc=hE:this.monitorFunc=Ay,this.monitorFunc===Ay&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Ay?1/0:-1/0}async onEpochEnd(e,t){await yi(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function nJ(r){return new $v(r)}var oJ={earlyStopping:nJ};var sJ=$();sJ.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Hs=(Y=>(Y[Y.DT_INVALID=0]="DT_INVALID",Y[Y.DT_FLOAT=1]="DT_FLOAT",Y[Y.DT_DOUBLE=2]="DT_DOUBLE",Y[Y.DT_INT32=3]="DT_INT32",Y[Y.DT_UINT8=4]="DT_UINT8",Y[Y.DT_INT16=5]="DT_INT16",Y[Y.DT_INT8=6]="DT_INT8",Y[Y.DT_STRING=7]="DT_STRING",Y[Y.DT_COMPLEX64=8]="DT_COMPLEX64",Y[Y.DT_INT64=9]="DT_INT64",Y[Y.DT_BOOL=10]="DT_BOOL",Y[Y.DT_QINT8=11]="DT_QINT8",Y[Y.DT_QUINT8=12]="DT_QUINT8",Y[Y.DT_QINT32=13]="DT_QINT32",Y[Y.DT_BFLOAT16=14]="DT_BFLOAT16",Y[Y.DT_QINT16=15]="DT_QINT16",Y[Y.DT_QUINT16=16]="DT_QUINT16",Y[Y.DT_UINT16=17]="DT_UINT16",Y[Y.DT_COMPLEX128=18]="DT_COMPLEX128",Y[Y.DT_HALF=19]="DT_HALF",Y[Y.DT_RESOURCE=20]="DT_RESOURCE",Y[Y.DT_VARIANT=21]="DT_VARIANT",Y[Y.DT_UINT32=22]="DT_UINT32",Y[Y.DT_UINT64=23]="DT_UINT64",Y[Y.DT_FLOAT_REF=101]="DT_FLOAT_REF",Y[Y.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",Y[Y.DT_INT32_REF=103]="DT_INT32_REF",Y[Y.DT_UINT8_REF=104]="DT_UINT8_REF",Y[Y.DT_INT16_REF=105]="DT_INT16_REF",Y[Y.DT_INT8_REF=106]="DT_INT8_REF",Y[Y.DT_STRING_REF=107]="DT_STRING_REF",Y[Y.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",Y[Y.DT_INT64_REF=109]="DT_INT64_REF",Y[Y.DT_BOOL_REF=110]="DT_BOOL_REF",Y[Y.DT_QINT8_REF=111]="DT_QINT8_REF",Y[Y.DT_QUINT8_REF=112]="DT_QUINT8_REF",Y[Y.DT_QINT32_REF=113]="DT_QINT32_REF",Y[Y.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",Y[Y.DT_QINT16_REF=115]="DT_QINT16_REF",Y[Y.DT_QUINT16_REF=116]="DT_QUINT16_REF",Y[Y.DT_UINT16_REF=117]="DT_UINT16_REF",Y[Y.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",Y[Y.DT_HALF_REF=119]="DT_HALF_REF",Y[Y.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",Y[Y.DT_VARIANT_REF=121]="DT_VARIANT_REF",Y[Y.DT_UINT32_REF=122]="DT_UINT32_REF",Y[Y.DT_UINT64_REF=123]="DT_UINT64_REF",Y))(Hs||{}),gE;(e=>{let r;(s=>{s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"})(r=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(gE||(gE={}));var Ov={};function iJ(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};Ov[r]=t}function Ny(r){return Ov[r]}function uJ(r){delete Ov[r]}function S(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let a=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?a+1:s.inputIndexEnd;if(s.type==="tensor")return vr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(a,u).map(c=>vr(c,t,n,o));let l=vr(e.inputNames.slice(a)[0],t,n,o),p=l.dataSync();return s.type==="number"?p[0]:b.toNestedArray(l.shape,p)}let i=e.attrParams[r];return i&&i.value}function vr(r,e,t,n){let[o,s]=kn(r);if(n!=null){let a=n.getHashTableHandleByName(o);if(a!=null)return a}let i=t.currentContextIds.find(a=>!!e[Dy(o,a)]);return i!==void 0?e[Dy(o,i)][s]:void 0}function bE(r,e,t){return e[Dy(r,t.currentContextId)]}function qs(r,e){let[t,n,o]=kn(r);return[Dy(t,e&&e.currentContextId),n,o]}function Dy(r,e){return e?`${r}-${e}`:r}function kn(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],n=e.length===3?e[1]:void 0,o=Number(e[e.length-1]);return[t,o,n]}function Ph(r,e,t){let n=S("pad",r,e,t);if(n==="explicit"){n=S("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Wa(r){return r.kept?r:Dn(r)}var zv={};Xe(zv,{json:()=>lJ});var lJ=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Gv={};Xe(Gv,{json:()=>pJ});var pJ=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Uv={};Xe(Uv,{json:()=>mJ});var mJ=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var Wv={};Xe(Wv,{json:()=>cJ});var cJ=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var Kv={};Xe(Kv,{json:()=>dJ});var dJ=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var Vv={};Xe(Vv,{json:()=>fJ});var fJ=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var jv={};Xe(jv,{json:()=>hJ});var hJ=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var Hv={};Xe(Hv,{json:()=>gJ});var gJ=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var qv={};Xe(qv,{json:()=>bJ});var bJ=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var Xv={};Xe(Xv,{json:()=>yJ});var yJ=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var Yv={};Xe(Yv,{json:()=>xJ});var xJ=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Qv={};Xe(Qv,{json:()=>TJ});var TJ=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var Zv={};Xe(Zv,{json:()=>kJ});var kJ=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var Jv={};Xe(Jv,{json:()=>IJ});var IJ=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var eS={};Xe(eS,{json:()=>CJ});var CJ=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var tS={};Xe(tS,{json:()=>vJ});var vJ=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var rS={};Xe(rS,{json:()=>SJ});var SJ=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var nS={};Xe(nS,{json:()=>wJ});var wJ=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var oS={};Xe(oS,{json:()=>_J});var _J=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Py=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[zv,Gv,Uv,Wv,Kv,Vv,jv,Hv,qv,Xv,Yv,Qv,Zv,Jv,eS,tS,rS,nS,oS],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],i=[],a=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&i.push(h[g.name]),h),{}),u=[],l=[],p={},m={};t!=null&&(p=this.mapSignatureEntries(t.inputs),m=this.mapSignatureEntries(t.outputs));let c=Object.keys(a);c.forEach(h=>{let g=a[h];g.inputNames.forEach((y,x)=>{let[T,,k]=qs(y),C=a[T];if(C.outputs!=null){let A=C.outputs.indexOf(k);if(A!==-1){let M=`${T}:${A}`;g.inputNames[x]=M}}g.inputs.push(C),C.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=a[h];g.children.length===0&&l.push(g)}):Object.keys(m).forEach(h=>{let[g]=qs(h),y=a[g];y!=null&&(y.signatureKey=m[h],l.push(y))}),Object.keys(p).length>0?Object.keys(p).forEach(h=>{let[g]=qs(h),y=a[g];y&&(y.signatureKey=p[h],u.push(y))}):u=o;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:a,inputs:u,outputs:l,weights:s,placeholders:o,signature:t,functions:d};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=Ny(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let i=s.type,a;switch(s.type){case"string":a=My(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=My(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":a=Oy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Oy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":a=Ry(e.attr,s.tfName,s.defaultValue||0),a===void 0&&!!s.tfDeprecatedName&&(a=Ry(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":a=$y(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=$y(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":a=Ey(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Ey(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":a=Gy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Gy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":a=By(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=By(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":a=zy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=zy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":a=Fy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Fy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":a=Ly(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Ly(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":a=xE(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=xE(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:a,type:i},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let i=[],a=[];e.signature.inputArg.forEach(m=>{let[c]=qs(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:sS(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,i.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=qs(d),y=s[h];if(y.outputs!=null){let x=y.outputs.indexOf(g);if(x!==-1){let T=`${h}:${x}`;c.inputNames[f]=T}}c.inputs.push(y),y.children.push(c)})});let l=e.ret;e.signature.outputArg.forEach(m=>{let[c,d]=qs(l[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,a.push(f))});let p=this.mapArgsToSignature(e);return{nodes:s,inputs:i,outputs:a,weights:o,placeholders:n,signature:p}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function AJ(r){let e=$().global;if(typeof e.atob!="undefined")return e.atob(r);if(typeof Buffer!="undefined")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function yE(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):AJ(r);return e?t:t.toLowerCase()}function My(r,e,t,n=!1){let o=r[e];return o!=null?yE(o.s,n):t}function Ey(r,e,t){let n=r[e];return n?n.b:t}function Ry(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function sS(r){switch(typeof r=="string"&&(r=Hs[r]),r){case Hs.DT_FLOAT:case Hs.DT_HALF:return"float32";case Hs.DT_INT32:case Hs.DT_INT64:case Hs.DT_INT8:case Hs.DT_UINT8:return"int32";case Hs.DT_BOOL:return"bool";case Hs.DT_DOUBLE:return"float32";case Hs.DT_STRING:return"string";default:return null}}function xE(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function Fy(r,e,t){let n=r[e];return n&&n.type?sS(n.type):t}function Ly(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>sS(o)):t}function TE(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function By(r,e,t){let n=r[e];return n&&n.shape?TE(n.shape):t}function $y(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function Oy(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>yE(s,n)):t}function zy(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>TE(o)):t}function Gy(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var aS=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=[];this.attrs={};this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return vr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return vr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Ry(this.node.rawAttrs,e,t);if(n.s!=null)return My(this.node.rawAttrs,e,t);if(n.b!=null)return Ey(this.node.rawAttrs,e,t);if(n.shape!=null)return By(this.node.rawAttrs,e,t);if(n.type!=null)return Fy(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return $y(this.node.rawAttrs,e,t);if(n.list.s!=null)return Oy(this.node.rawAttrs,e,t);if(n.list.shape!=null)return zy(this.node.rawAttrs,e,t);if(n.list.b!=null)return Gy(this.node.rawAttrs,e,t);if(n.list.type!=null)return Ly(this.node.rawAttrs,e,t)}return t}};var kE=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[X(S("a",r,e,t),S("b",r,e,t))];case"AddN":return[vI(S("tensors",r,e,t))];case"FloorMod":case"Mod":return[iC(S("a",r,e,t),S("b",r,e,t))];case"Mul":return[F(S("a",r,e,t),S("b",r,e,t))];case"RealDiv":case"Div":return[me(S("a",r,e,t),S("b",r,e,t))];case"DivNoNan":return[HI(S("a",r,e,t),S("b",r,e,t))];case"FloorDiv":return[Dd(S("a",r,e,t),S("b",r,e,t))];case"Sub":return[pe(S("a",r,e,t),S("b",r,e,t))];case"Minimum":return[du(S("a",r,e,t),S("b",r,e,t))];case"Maximum":return[Jn(S("a",r,e,t),S("b",r,e,t))];case"Pow":return[En(S("a",r,e,t),S("b",r,e,t))];case"SquaredDifference":return[tf(S("a",r,e,t),S("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var IE=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[$t(S("x",r,e,t))];case"Acos":return[II(S("x",r,e,t))];case"Acosh":return[CI(S("x",r,e,t))];case"Asin":return[wI(S("x",r,e,t))];case"Asinh":return[_I(S("x",r,e,t))];case"Atan":return[AI(S("x",r,e,t))];case"Atan2":return[NI(S("x",r,e,t),S("y",r,e,t))];case"Atanh":return[DI(S("x",r,e,t))];case"Ceil":return[$I(S("x",r,e,t))];case"Complex":return[Yn(S("real",r,e,t),S("imag",r,e,t))];case"Cos":return[Kl(S("x",r,e,t))];case"Cosh":return[Bd(S("x",r,e,t))];case"Elu":return[mu(S("x",r,e,t))];case"Erf":return[XI(S("x",r,e,t))];case"Exp":return[cr(S("x",r,e,t))];case"Expm1":return[YI(S("x",r,e,t))];case"Floor":return[cu(S("x",r,e,t))];case"Log":return[$r(S("x",r,e,t))];case"Log1p":return[Hl(S("x",r,e,t))];case"Imag":return[Vl(S("x",r,e,t))];case"Neg":return[Ze(S("x",r,e,t))];case"Reciprocal":return[bC(S("x",r,e,t))];case"Real":return[nl(S("x",r,e,t))];case"Relu":return[qr(S("x",r,e,t))];case"Round":return[Hd(S("x",r,e,t))];case"Selu":return[Xd(S("x",r,e,t))];case"Sigmoid":return[mn(S("x",r,e,t))];case"Sin":return[Yd(S("x",r,e,t))];case"Sign":return[TC(S("x",r,e,t))];case"Sinh":return[Qd(S("x",r,e,t))];case"Softplus":return[mi(S("x",r,e,t))];case"Sqrt":return[Lt(S("x",r,e,t))];case"Square":return[qe(S("x",r,e,t))];case"Tanh":return[lu(S("x",r,e,t))];case"Tan":return[IC(S("x",r,e,t))];case"ClipByValue":return[Br(S("x",r,e,t),S("clipValueMin",r,e,t),S("clipValueMax",r,e,t))];case"Relu6":return[jd(S("x",r,e,t))];case"Rsqrt":return[qd(vr(r.inputNames[0],e,t))];case"Prod":return[Kd(S("x",r,e,t),S("axes",r,e,t))];case"LeakyRelu":return[jl(S("x",r,e,t),S("alpha",r,e,t))];case"Prelu":return[Ql(S("x",r,e,t),S("alpha",r,e,t))];case"IsNan":return[QI(vr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function to(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){b.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];b.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function CE(r){return!(typeof r=="number"||r.some(e=>e<0))}function vc(r,e,t){let n=Uy(r,t),o=!CE(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=Uy(s.shape,n)}),!CE(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Uy(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var iS=class{constructor(e,t,n,o,s,i,a){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=i;this.clearAfterRead=a;this.tensors=[];this.closed_=!1;this.idTensor=ce(0),Vt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),to(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Vt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Fr([],[0].concat(this.elementShape));let n=this.readMany(e);return to(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),fr(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Fr([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return to(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),lt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Or(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(u=>(n+=u,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,i=[];G(()=>{t=L(t,[1,n,s]);for(let u=0;u<e.length;++u){let l=u===0?0:o[u-1],p=[0,l,0],m=[1,e[u],s];i[u]=L(ze(t,p,m),this.elementShape)}return i});let a=[];for(let u=0;u<e.length;u++)a[u]=u;this.writeMany(a,i)}};var Cp=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);to(t,s.shape,"TensorList shape mismatch: "),Vt(s)}),this.idTensor=ce(0),this.maxNumElements=o,Vt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Cp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);to(e,this.elementShape,"TensorList shape mismatch: ");let o=vc(this.elementShape,this.tensors,e);return G(()=>{let s=this.tensors.map(i=>L(i,o));return fr(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=vc(this.elementShape,this.tensors,e),o=this.tensors.pop();return to(o.shape,e,"TensorList shape mismatch: "),L(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(to(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Vt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);to(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=vc(this.elementShape,this.tensors,t);return L(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);to(this.elementShape,t.shape,"TensorList shape mismatch: "),Vt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);to(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=vc(this.elementShape,this.tensors,n);return e.length===0?Fr([],[0].concat(o)):G(()=>{let s=e.map(i=>L(this.tensors[i],o));return fr(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);to(this.elementShape,t,"TensorList shape mismatch: ");let n=vc(this.elementShape,this.tensors,t);return this.size()===0?Fr([],[0].concat(n)):G(()=>{let o=this.tensors.map(s=>L(s,n));return lt(o,0)})}};function vE(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);to(o,e,"TensorList shape mismatch: ");let s=Or(r);return new Cp(s,e,n)}function SE(r,e,t){return new Cp([],r,e,t)}function wE(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new Cp([],t,r.dtype,n),i=Or(r,0);return e.forEach((a,u)=>{s.setItem(a,i[u])}),s}function _E(r,e,t){let n=0,o=e.map(p=>(n+=p,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),i=Uy(s,t),a=n===0?0:r.size/n,u=G(()=>{let p=[];r=L(r,[1,n,a]);for(let m=0;m<e.length;++m){let c=m===0?0:o[m-1],d=[0,c,0],f=[1,e[m],a];p[m]=L(ze(r,d,f),i)}return r.dispose(),p}),l=new Cp([],t,r.dtype,e.length);for(let p=0;p<u.length;p++)l.setItem(p,u[p]);return l}var AE=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=S("thenBranch",r,e,t),o=S("elseBranch",r,e,t),s=S("cond",r,e,t),i=S("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=S("body",r,e,t),o=S("cond",r,e,t),s=S("args",r,e,t),i=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),a=s.map(p=>p.id),u=await i[0].data();i.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&p.dispose()});let l=s;for(;u[0];){let p=l;l=await t.functionMap[n].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);let m=l.map(d=>d.id);p.forEach(d=>{!d.kept&&a.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await t.functionMap[o].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);u=await c[0].data(),c.forEach(d=>{!d.kept&&a.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return l}case"LoopCond":{let n=S("pred",r,e,t);return[Wa(n)]}case"Switch":{let n=S("pred",r,e,t),o=S("data",r,e,t);return o.kept||(o=Wa(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>vr(o,e,t)!==void 0);if(n){let o=vr(n,e,t);return[Wa(o)]}return}case"Enter":{let n=S("frameName",r,e,t),o=S("tensor",r,e,t);return t.enterFrame(n),[Wa(o)]}case"Exit":{let n=S("tensor",r,e,t);return t.exitFrame(),[Wa(n)]}case"NextIteration":{let n=S("tensor",r,e,t);return t.nextIteration(),[Wa(n)]}case"TensorArrayV3":{let n=S("size",r,e,t),o=S("dtype",r,e,t),s=S("elementShape",r,e,t),i=S("dynamicSize",r,e,t),a=S("clearAfterRead",r,e,t),u=S("identicalElementShapes",r,e,t),l=S("name",r,e,t),p=new iS(l,o,n,s,u,i,a);return t.addTensorArray(p),[p.idTensor,ce(1)]}case"TensorArrayWriteV3":{let n=S("tensorArrayId",r,e,t),o=S("index",r,e,t),s=S("tensor",r,e,t),i=t.getTensorArray(n.id);return i.write(o,s),[i.idTensor]}case"TensorArrayReadV3":{let n=S("tensorArrayId",r,e,t),o=S("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=S("tensorArrayId",r,e,t),o=S("indices",r,e,t),s=S("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=S("tensorArrayId",r,e,t),o=S("indices",r,e,t),s=S("tensor",r,e,t),i=t.getTensorArray(n.id);return i.scatter(o,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=S("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=S("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=S("tensorArrayId",r,e,t),o=S("tensor",r,e,t),s=S("lengths",r,e,t),i=t.getTensorArray(n.id);return i.split(s,o),[i.idTensor]}case"TensorArraySizeV3":{let n=S("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ce(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=S("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=S("tensorListId",r,e,t),o=S("index",r,e,t),s=S("tensor",r,e,t),i=t.getTensorList(n.id);return i.setItem(o,s),[i.idTensor]}case"TensorListGetItem":{let n=S("tensorListId",r,e,t),o=S("index",r,e,t),s=S("elementShape",r,e,t),i=S("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=S("indices",r,e,t),o=S("tensor",r,e,t),s=S("elementShape",r,e,t),i=S("numElements",r,e,t),a=wE(o,n,s,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=S("elementShape",r,e,t),o=S("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=S(s,r,e,t),a=SE(n,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListGather":{let n=S("tensorListId",r,e,t),o=S("indices",r,e,t),s=S("elementShape",r,e,t),i=S("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,i,s)]}case"TensorListStack":{let n=S("tensorListId",r,e,t),o=S("elementShape",r,e,t),s=S("elementDType",r,e,t),i=S("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,i)]}case"TensorListFromTensor":{let n=S("tensor",r,e,t),o=S("elementShape",r,e,t),s=S("elementDType",r,e,t),i=vE(n,o,s);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":{let n=S("tensorListId",r,e,t),o=t.getTensorList(n.id),s=S("dtype",r,e,t),i=S("elementShape",r,e,t);return[o.concat(s,i)]}case"TensorListPushBack":{let n=S("tensorListId",r,e,t),o=S("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=S("tensorListId",r,e,t),o=S("elementShape",r,e,t),s=S("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=S("tensor",r,e,t),o=S("elementShape",r,e,t),s=S("lengths",r,e,t),i=_E(n,s,o);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function NE(r,e,t){let[n,o]=S("fusedOps",r,e,t),s=n==="biasadd",i=!s,a=o==="prelu",u=n==="fusedbatchnorm",l=S("numArgs",r,e,t);if(s){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=S("strides",r,e,t),m=Ph(r,e,t),c=S("dataFormat",r,e,t).toUpperCase(),d=S("dilations",r,e,t),[f,h]=S("args",r,e,t);i&&(h=f,f=void 0);let g=S("leakyreluAlpha",r,e,t);return{stride:p,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var DE=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=S("stride",r,e,t),o=S("pad",r,e,t),s=S("dataFormat",r,e,t).toUpperCase(),i=S("dilation",r,e,t);return[Rd(S("x",r,e,t),S("filter",r,e,t),n,o,s,i)]}case"Conv2D":{let n=S("strides",r,e,t),o=Ph(r,e,t),s=S("dataFormat",r,e,t).toUpperCase(),i=S("dilations",r,e,t);return[Zn(S("x",r,e,t),S("filter",r,e,t),[n[1],n[2]],o,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:i,biasArg:a,preluArg:u,activationFunc:l,leakyreluAlpha:p}=NE(r,e,t);return[Bs.conv2d({x:S("x",r,e,t),filter:S("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:a,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:i,biasArg:a,preluArg:u,activationFunc:l,leakyreluAlpha:p}=NE(r,e,t);return[Bs.depthwiseConv2d({x:S("x",r,e,t),filter:S("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:a,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=S("outputShape",r,e,t),o=S("strides",r,e,t),s=Ph(r,e,t);return[Fd(S("x",r,e,t),S("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=S("strides",r,e,t),o=Ph(r,e,t),s=S("dilations",r,e,t),i=S("dataFormat",r,e,t).toUpperCase();return[pu(S("input",r,e,t),S("filter",r,e,t),[n[1],n[2]],o,i,[s[1],s[2]])]}case"Conv3D":{let n=S("strides",r,e,t),o=S("pad",r,e,t),s=S("dataFormat",r,e,t).toUpperCase(),i=S("dilations",r,e,t);return[Ld(S("x",r,e,t),S("filter",r,e,t),[n[1],n[2],n[3]],o,s,[i[1],i[2],i[3]])]}case"AvgPool":{let n=S("strides",r,e,t),o=S("pad",r,e,t),s=S("kernelSize",r,e,t);return[Gl(S("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=S("strides",r,e,t),o=S("pad",r,e,t),s=S("kernelSize",r,e,t);return[Xl(S("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=S("strides",r,e,t),o=S("pad",r,e,t),s=S("kernelSize",r,e,t),i=S("includeBatchInIndex",r,e,t),{result:a,indexes:u}=sC(S("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,i);return[a,u]}case"AvgPool3D":{let n=S("strides",r,e,t),o=S("pad",r,e,t),s=S("kernelSize",r,e,t);return[Md(S("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=S("strides",r,e,t),o=S("pad",r,e,t),s=S("kernelSize",r,e,t);return[Wd(S("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=S("strides",r,e,t),o=S("pad",r,e,t),s=S("dilations",r,e,t),i=n[1],a=n[2],u=s[1],l=s[2];return[jI(S("x",r,e,t),S("filter",r,e,t),[i,a],o,[u,l],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var PE=(r,e,t)=>{switch(r.op){case"Fill":{let n=S("shape",r,e,t),o=S("dtype",r,e,t),s=S("value",r,e,t);return[Ea(n,s,o)]}case"LinSpace":{let n=S("start",r,e,t),o=S("stop",r,e,t),s=S("num",r,e,t);return[ZI(n,o,s)]}case"Multinomial":{let n=S("logits",r,e,t),o=S("numSamples",r,e,t),s=S("seed",r,e,t);return[uC(n,o,s)]}case"OneHot":{let n=S("indices",r,e,t),o=S("depth",r,e,t),s=S("onValue",r,e,t),i=S("offValue",r,e,t);return[au(n,o,s,i)]}case"Ones":return[dr(S("shape",r,e,t),S("dtype",r,e,t))];case"OnesLike":return[Pr(S("x",r,e,t))];case"RandomUniform":return[Ra(S("shape",r,e,t),S("minval",r,e,t),S("maxval",r,e,t),S("dtype",r,e,t))];case"Range":{let n=S("start",r,e,t),o=S("stop",r,e,t),s=S("step",r,e,t);return[fu(n,o,s,S("dtype",r,e,t))]}case"TruncatedNormal":{let n=S("shape",r,e,t),o=S("mean",r,e,t),s=S("stdDev",r,e,t),i=S("seed",r,e,t);return[rp(n,o,s,S("dtype",r,e,t),i)]}case"Zeros":return[xt(S("shape",r,e,t),S("dtype",r,e,t))];case"ZerosLike":return[Ne(S("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function uS(r,e,t){let n=S("boxes",r,e,t),o=S("scores",r,e,t),s=S("maxOutputSize",r,e,t),i=S("iouThreshold",r,e,t),a=S("scoreThreshold",r,e,t),u=S("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}}var ME=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}=uS(r,e,t),l=await Rn.nonMaxSuppressionWithScoreAsync(n,o,s,i,a,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a}=uS(r,e,t),u=S("padToMaxOutputSize",r,e,t),l=await Rn.nonMaxSuppressionPaddedAsync(n,o,s,i,a,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a}=uS(r,e,t);return[await Rn.nonMaxSuppressionAsync(n,o,s,i,a)]}case"Where":{let n=J(S("condition",r,e,t),"bool"),o=[await rf(n)];return n.dispose(),o}case"ListDiff":return xC(S("x",r,e,t),S("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var EE=(r,e,t)=>{switch(r.op){case"TopKV2":{let n=S("x",r,e,t),o=S("k",r,e,t),s=S("sorted",r,e,t),i=CC(n,o,s);return[i.values,i.indices]}case"Unique":{let n=S("x",r,e,t),o=Bb(n);return[o.values,o.indices]}case"UniqueV2":{let n=S("x",r,e,t),o=S("axis",r,e,t),s=Bb(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var RE=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=S("default",r,e,t);return[vr(r.name,e,t)||n];case"Placeholder":return[vr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=S("x",r,e,t);return[Wa(l)]}case"IdentityN":return S("x",r,e,t).map(l=>Wa(l));case"Snapshot":let o=S("x",r,e,t);return[Wa(o)];case"Shape":return[zt(S("x",r,e,t).shape,"int32")];case"ShapeN":return S("x",r,e,t).map(l=>zt(l.shape));case"Size":return[ce(S("x",r,e,t).size,"int32")];case"Rank":return[ce(S("x",r,e,t).rank,"int32")];case"NoOp":return[ce(1)];case"Print":let s=S("x",r,e,t),i=S("data",r,e,t),a=S("message",r,e,t),u=S("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lS=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=ce(0),this.tensorMap=new Map,Vt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),G(()=>{let o=Or(t),s=n.length,i=o.length;b.assert(s===i,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${i} elements.`);for(let a=0;a<s;a++){let u=n[a],l=o[a];Vt(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return G(()=>{let o=[];for(let s=0;s<n.length;s++){let i=n[s],a=this.findWithDefault(i,t);o.push(a)}return fr(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var FE=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=S("keyDType",r,e,t),s=S("valueDType",r,e,t),i=new lS(o,s);return n.addHashTable(r.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=S("tableHandle",r,e,t,n),s=S("keys",r,e,t),i=S("values",r,e,t);return[await n.getHashTableById(o.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let o=S("tableHandle",r,e,t,n),s=S("keys",r,e,t),i=S("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=S("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var LE=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=S("images",r,e,t),o=S("size",r,e,t),s=S("alignCorners",r,e,t),i=S("halfPixelCenters",r,e,t);return[Rn.resizeBilinear(n,[o[0],o[1]],s,i)]}case"ResizeNearestNeighbor":{let n=S("images",r,e,t),o=S("size",r,e,t),s=S("alignCorners",r,e,t),i=S("halfPixelCenters",r,e,t);return[Rn.resizeNearestNeighbor(n,[o[0],o[1]],s,i)]}case"CropAndResize":{let n=S("image",r,e,t),o=S("boxes",r,e,t),s=S("boxInd",r,e,t),i=S("cropSize",r,e,t),a=S("method",r,e,t),u=S("extrapolationValue",r,e,t);return[Rn.cropAndResize(n,o,s,i,a,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var BE=(r,e,t)=>{switch(r.op){case"Equal":return[Vr(S("a",r,e,t),S("b",r,e,t))];case"NotEqual":return[ci(S("a",r,e,t),S("b",r,e,t))];case"Greater":return[nr(S("a",r,e,t),S("b",r,e,t))];case"GreaterEqual":return[es(S("a",r,e,t),S("b",r,e,t))];case"Less":return[Od(S("a",r,e,t),S("b",r,e,t))];case"LessEqual":return[ts(S("a",r,e,t),S("b",r,e,t))];case"LogicalAnd":return[Hr(S("a",r,e,t),S("b",r,e,t))];case"LogicalNot":return[ql(S("a",r,e,t))];case"LogicalOr":return[Ud(S("a",r,e,t),S("b",r,e,t))];case"Select":case"SelectV2":return[Ot(S("condition",r,e,t),S("a",r,e,t),S("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var $E=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ve(S("a",r,e,t),S("b",r,e,t),S("transposeA",r,e,t),S("transposeB",r,e,t))];case"Einsum":return[qI(S("equation",r,e,t),...S("tensors",r,e,t))];case"Transpose":return[He(S("x",r,e,t),S("perm",r,e,t))];case"_FusedMatMul":let[n,o]=S("fusedOps",r,e,t),s=n==="biasadd",i=o==="prelu",a=S("numArgs",r,e,t),u=S("leakyreluAlpha",r,e,t);if(s){if(i&&a!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,p]=S("args",r,e,t);return[Bs.matMul({a:S("a",r,e,t),b:S("b",r,e,t),transposeA:S("transposeA",r,e,t),transposeB:S("transposeB",r,e,t),bias:l,activation:o,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var OE=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[li(S("x",r,e,t),S("mean",r,e,t),S("variance",r,e,t),S("offset",r,e,t),S("scale",r,e,t),S("epsilon",r,e,t))];case"FusedBatchNormV3":return[li(S("x",r,e,t),S("mean",r,e,t),S("variance",r,e,t),S("offset",r,e,t),S("scale",r,e,t),S("epsilon",r,e,t))];case"LRN":return[JI(S("x",r,e,t),S("radius",r,e,t),S("bias",r,e,t),S("alpha",r,e,t),S("beta",r,e,t))];case"Softmax":return[Jl(S("x",r,e,t))];case"LogSoftmax":return[zd(S("x",r,e,t))];case"SparseToDense":return[zb(S("sparseIndices",r,e,t),S("outputShape",r,e,t),S("sparseValues",r,e,t),S("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var zE=(r,e,t)=>{switch(r.op){case"Max":{let i=S("axis",r,e,t),a=S("keepDims",r,e,t);return[en(S("x",r,e,t),i,a)]}case"Mean":{let i=S("axis",r,e,t),a=S("keepDims",r,e,t);return[Ft(S("x",r,e,t),i,a)]}case"Min":{let i=S("axis",r,e,t),a=S("keepDims",r,e,t);return[jm(S("x",r,e,t),i,a)]}case"Sum":{let i=S("axis",r,e,t),a=S("keepDims",r,e,t);return[he(S("x",r,e,t),i,a)]}case"All":{let i=S("axis",r,e,t),a=S("keepDims",r,e,t);return[Pd(S("x",r,e,t),i,a)]}case"Any":{let i=S("axis",r,e,t),a=S("keepDims",r,e,t);return[Um(S("x",r,e,t),i,a)]}case"ArgMax":{let i=S("axis",r,e,t);return[uu(S("x",r,e,t),i)]}case"ArgMin":{let i=S("axis",r,e,t);return[SI(S("x",r,e,t),i)]}case"Prod":{let i=S("axis",r,e,t),a=S("keepDims",r,e,t);return[Kd(S("x",r,e,t),i,a)]}case"Cumsum":{let i=S("axis",r,e,t),a=S("exclusive",r,e,t),u=S("reverse",r,e,t);return[$d(S("x",r,e,t),i,a,u)]}case"Bincount":let n=S("x",r,e,t),o=S("weights",r,e,t),s=S("size",r,e,t);return[Ed(n,o,s)];case"DenseBincount":{let i=S("x",r,e,t),a=S("weights",r,e,t),u=S("size",r,e,t),l=S("binaryOutput",r,e,t);return[KI(i,a,u,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var GE=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=S("n",r,e,t),o=S("axis",r,e,t),s=S("tensors",r,e,t);return s=s.slice(0,n),[lt(s,o)]}case"Gather":{let n=S("x",r,e,t),o=S("indices",r,e,t);return[pi(n,J(o,"int32"),0)]}case"GatherV2":{let n=S("axis",r,e,t),o=S("batchDims",r,e,t),s=S("x",r,e,t),i=S("indices",r,e,t);return[pi(s,J(i,"int32"),n,o)]}case"Reverse":{let n=S("dims",r,e,t),o=[];for(let i=0;i<n.length;i++)n[i]&&o.push(i);let s=S("x",r,e,t);return[xr(s,o)]}case"ReverseV2":{let n=S("axis",r,e,t),o=S("x",r,e,t);return[xr(o,n)]}case"Slice":{let n=S("begin",r,e,t),o=S("size",r,e,t);return[ze(S("x",r,e,t),n,o)]}case"StridedSlice":{let n=S("begin",r,e,t),o=S("end",r,e,t),s=S("strides",r,e,t),i=S("beginMask",r,e,t),a=S("endMask",r,e,t),u=S("ellipsisMask",r,e,t),l=S("newAxisMask",r,e,t),p=S("shrinkAxisMask",r,e,t),m=S("x",r,e,t);return[kC(m,n,o,s,i,a,u,l,p)]}case"Pack":return G(()=>{let n=S("axis",r,e,t),o=S("tensors",r,e,t),s=o[0].shape,i=dn(o[0]).shape,a=o.map(u=>{let l=b.arraysEqual(u.shape,s);if(!l&&!b.arraysEqual(dn(u).shape,i))throw new Error("the input tensors shape does not match");return l?u:L(u,s)});return[fr(a,n)]});case"Unpack":{let n=S("axis",r,e,t),o=S("tensor",r,e,t);return Or(o,n)}case"Tile":{let n=S("reps",r,e,t);return[jr(S("x",r,e,t),n)]}case"Split":case"SplitV":{let n=S("axis",r,e,t),o=S("numOrSizeSplits",r,e,t),s=S("x",r,e,t);return Cr(s,o,n)}case"ScatterNd":{let n=S("indices",r,e,t),o=S("values",r,e,t),s=S("shape",r,e,t);return[d2(n,o,s)]}case"GatherNd":{let n=S("x",r,e,t),o=S("indices",r,e,t);return[h2(n,o)]}case"SparseToDense":{let n=S("sparseIndices",r,e,t),o=S("outputShape",r,e,t),s=S("sparseValues",r,e,t),i=S("defaultValue",r,e,t);return[zb(n,s,o,s.dtype===i.dtype?i:J(i,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var UE=(r,e,t)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:o,emptyRowIndicator:s,reverseIndexMap:i}=nf.sparseFillEmptyRows(S("indices",r,e,t),S("values",r,e,t),S("denseShape",r,e,t),S("defaultValue",r,e,t));return[n,o,s,i]}case"SparseReshape":{let{outputIndices:n,outputShape:o}=nf.sparseReshape(S("inputIndices",r,e,t),S("inputShape",r,e,t),S("newShape",r,e,t));return[n,o]}case"SparseSegmentMean":return[nf.sparseSegmentMean(S("data",r,e,t),S("indices",r,e,t),S("segmentIds",r,e,t))];case"SparseSegmentSum":return[nf.sparseSegmentSum(S("data",r,e,t),S("indices",r,e,t),S("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var WE=(r,e,t)=>{switch(r.op){case"FFT":return[ep(S("x",r,e,t))];case"IFFT":return[ol(S("x",r,e,t))];case"RFFT":return[tp(S("x",r,e,t))];case"IRFFT":return[ef(S("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var KE=(r,e,t)=>{switch(r.op){case"StringNGrams":{let{nGrams:n,nGramsSplits:o}=Xb.stringNGrams(S("data",r,e,t),S("dataSplits",r,e,t),S("separator",r,e,t),S("nGramWidths",r,e,t),S("leftPad",r,e,t),S("rightPad",r,e,t),S("padWidth",r,e,t),S("preserveShortSequences",r,e,t));return[n,o]}case"StringSplit":{let{indices:n,values:o,shape:s}=Xb.stringSplit(S("input",r,e,t),S("delimiter",r,e,t),S("skipEmpty",r,e,t));return[n,o,s]}case"StringToHashBucketFast":return[Xb.stringToHashBucketFast(S("input",r,e,t),S("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var VE=(r,e,t)=>{switch(r.op){case"Cast":return[J(S("x",r,e,t),S("dtype",r,e,t))];case"ExpandDims":{let n=S("axis",r,e,t);return[Dr(S("x",r,e,t),n)]}case"Squeeze":{let n=S("axis",r,e,t);return[dn(S("x",r,e,t),n)]}case"Reshape":return[L(S("x",r,e,t),S("shape",r,e,t))];case"MirrorPad":return[aC(S("x",r,e,t),S("padding",r,e,t),S("mode",r,e,t))];case"PadV2":case"Pad":return[Mn(S("x",r,e,t),S("padding",r,e,t),S("constantValue",r,e,t))];case"SpaceToBatchND":{let n=S("blockShape",r,e,t),o=S("paddings",r,e,t);return[Yl(S("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=S("blockShape",r,e,t),o=S("crops",r,e,t);return[Ul(S("x",r,e,t),n,o)]}case"DepthToSpace":{let n=S("blockSize",r,e,t),o=S("dataFormat",r,e,t).toUpperCase();return[VI(S("x",r,e,t),n,o)]}case"BroadcastTo":return[Wl(S("x",r,e,t),S("shape",r,e,t))];case"BroadcastArgs":return[BI(S("s0",r,e,t),S("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function pS(r,e,t,n){let o=((s,i,a)=>{switch(s.category){case"arithmetic":return G(()=>kE(s,i,a));case"basic_math":return G(()=>IE(s,i,a));case"control":return AE(s,i,a);case"convolution":return G(()=>DE(s,i,a));case"creation":return G(()=>PE(s,i,a));case"dynamic":return ME(s,i,a);case"evaluation":return G(()=>EE(s,i,a));case"image":return G(()=>LE(s,i,a));case"graph":return G(()=>RE(s,i,a));case"logical":return G(()=>BE(s,i,a));case"matrices":return G(()=>$E(s,i,a));case"normalization":return G(()=>OE(s,i,a));case"reduction":return G(()=>zE(s,i,a));case"slice_join":return G(()=>GE(s,i,a));case"sparse":return G(()=>UE(s,i,a));case"spectral":return G(()=>WE(s,i,a));case"string":return G(()=>KE(s,i,a));case"transformation":return G(()=>VE(s,i,a));case"hash_table":return FE(s,i,a,n);case"custom":let u=Ny(s.op);if(u&&u.customExecutor)return u.customExecutor(new aS(s,i,a));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return b.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var Wy=class{constructor(e={},t={},n={},o={}){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function mS(r,e,t,n){let o=new Set,s=[],i=null,a=null,u=new Set,l=Object.keys(r).map(c=>kn(c)[0]),p=[];n!=null&&(p=n.map(c=>kn(c.name)[0]));let m=[...e];for(;m.length>0;){let c=m.pop();if((cS(c)||QJ(c)||ZJ(c))&&i==null&&(i=c,a=i.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),t[c.name]==null&&l.indexOf(c.name)===-1&&p.indexOf(c.name)===-1){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{u.has(d.name)||(u.add(d.name),m.push(d))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:i,syncInputs:a}}function jE(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],i=Object.keys(o).map(p=>kn(p)[0]).map(p=>r.nodes[p]),a=r.initNodes;i.forEach(p=>{n.has(p.name)&&s.push(p)}),r.weights.forEach(p=>{n.has(p.name)&&s.push(p)}),a!=null&&a.forEach(p=>{n.has(p.name)&&s.push(p)});let u=new Set,l=[];for(;s.length>0;){let p=s.pop();u.add(p.name),e[p.name]||l.push(p),p.children.forEach(m=>{!u.has(m.name)&&n.has(m.name)&&m.inputs.every(c=>u.has(c.name))&&s.push(m)})}return l}var qJ=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],XJ=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],YJ=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function cS(r){return qJ.indexOf(r.op)>=0}function QJ(r){return XJ.indexOf(r.op)>=0}function ZJ(r){return YJ.indexOf(r.op)>=0}var Sc=class{constructor(e,t){this.graph=e;this.parent=t;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Sc(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=mS(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:i}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(o.length>0){let a=t.map(l=>l.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return jE(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(m=>this.graph.nodes[kn(m)[0]]),s=t.map(m=>kn(m)[0]),i=s.map(m=>this.graph.nodes[m]);this.resetIntermediateTensors(),i.length===0&&(i=this._outputs);let a=this.getCompilationKey(o,i),u=this.compiledMap.get(a);u==null&&(u=this.compile(e,i),this.compiledMap.set(a,u));let l={},p={};return G(()=>{let m=new Wy(this.weightMap,l,p,this.functionExecutorMap),c={...this.weightMap};Object.keys(e).forEach(h=>{let[g,y]=kn(h),x=[];x[y]=e[h],c[g]=x});let d=this.getFrozenTensorIds(c),f={};for(let h=0;h<u.length;h++){let g=u[h];if(!c[g.name]){let y=pS(g,c,m,this._resourceManager);if(b.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);c[g.name]=y,this.checkTensorForDisposal(g.name,g,c,m,d,s,f)}}return this.parent==null&&m.dispose(d),t.map(h=>vr(h,c,m))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,i,a){t.category==="control"||i.indexOf(e)!==-1||(n[e].forEach(u=>{u!=null&&(a[u.id]=(a[u.id]||0)+t.children.length)}),t.inputs.forEach(u=>{if(u.category!=="control"){let l=bE(u.name,n,o);l!=null&&l.forEach(p=>{if(p&&!p.kept&&!s.has(p.id)){let m=a[p.id];if(m===1){if(!this.keepTensorForDebug)p.dispose();else{let[c,d]=qs(t.name,o);this.intermediateTensors[c]?this.intermediateTensors[c][d]=p:(this.intermediateTensors[c]=[],this.intermediateTensors[c][d]=p)}delete a[p.id]}else m!=null&&a[p.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=$().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){console.warn(p.message)}this.resetIntermediateTensors();let i=new Wy(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,i,t,n);let a=t.map(p=>vr(p,this.tensorsMap,i)),u=a.map(p=>p.id),l=Object.keys(e).map(p=>e[p].id);return this.keepIds=new Set([...u,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&i.dispose(this.keepIds),a}async executeFunctionAsync(e,t,n){let o=e.reduce((s,i,a)=>(s[this.inputs[a].name]=i,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),i=s.map(T=>this.graph.nodes[kn(T)[0]]),a=n.map(T=>kn(T)[0]),u=a.map(T=>this.graph.nodes[T]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:m,syncInputs:c}=mS(e,u,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map(T=>({node:T,contexts:t.currentContext})),f={...this.weightMap};Object.keys(e).forEach(T=>{let[k,C]=kn(T),A=[];A[C]=e[T],f[k]=A});let h={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){let T=this.processStack(i,d,t,f,y,g,a,h,l);await Promise.all(T)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=u.filter(T=>!cS(T)&&!vr(T.name,f,t)).map(T=>T.name);if(x.length>0){let T="";throw m!=null&&(T=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${T}`)}return f}processStack(e,t,n,o,s,i,a,u,l){let p=[];for(;t.length>0;){let m=t.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&S("isConstant",m.node,o,n)&&([c]=qs(m.node.name,n)),o[m.node.name]==null){let d=pS(m.node,o,n,this._resourceManager);c||([c]=qs(m.node.name,n));let f=n.currentContext;b.isPromise(d)?p.push(d.then(h=>(o[c]=h,n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,i,a,u),this.processChildNodes(m.node,t,n,o,s,l),h))):(o[c]=d,this.checkTensorForDisposal(c,m.node,o,n,i,a,u),this.processChildNodes(m.node,t,n,o,s,l))}else this.processChildNodes(m.node,t,n,o,s,l)}return p}processChildNodes(e,t,n,o,s,i){e.children.forEach(a=>{let[u]=qs(a.name,n);s[u]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(l=>!!vr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:a})):a.inputNames.every(l=>!!vr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=kn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,a=i.length===n.shape.length&&n.shape.every((u,l)=>i[l]===-1||i[l]===u);b.assert(a,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=kn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=kn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var dS=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var JJ="?tfjs-format=file",eee="model.json",fS=class{constructor(e,t={}){this.modelUrl=e;this.loadOptions=t;this.version="n/a";t==null&&(this.loadOptions={}),this.resourceManager=new dS}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Kr.browserHTTPRequest(e,this.loadOptions);else{let t=Kr.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Kr.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Kr.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Sc(Py.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=Py.Instance.transformGraph(e.modelInitializer);this.initializer=new Sc(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Kr.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ye)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function tee(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${eee}${JJ}`);let t=new fS(r,e);return await t.load(),t}var ree="0.0.0";var NR={};Xe(NR,{CSVDataset:()=>Lh,Dataset:()=>Ti,FileDataSource:()=>Uh,TextLineDataset:()=>Rh,URLDataSource:()=>Wh,array:()=>fR,csv:()=>CR,func:()=>vR,generator:()=>SR,microphone:()=>_R,version_data:()=>AR,webcam:()=>wR,zip:()=>hR});var dR=_l(Vd());var ZE=_l(Vd());function HE(r,e){return Ky(r,e)}function Ky(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(fl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let a=r[i],u=Ky(a,e,t,n);s[i]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function qE(r,e=gS){return XE(r,e)}function XE(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(fl(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let i in n){let a=r.map(l=>l[i]),u=XE(a,e,t);s[i]=u}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function gS(r){return r===null?null:fl(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function Vy(r,e){let t=new Map;Ky(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(b.isPromise(s)){let i=await s;t.set(o,i)}}return Ky(r,e,t)}function fl(r){let e=!1;if($().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=hS();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Ye)&&!(r instanceof Promise)&&!e)}function YE(r){return r==null||nee(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Ye||b.isTypedArray(r)}function nee(r){return r===null||typeof r!="object"&&typeof r!="function"}function QE(r){return HE(r,oee)}function oee(r){return r instanceof Ye?{value:r.clone(),recurse:!1}:fl(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Mh=class{constructor(e){this.capacity=e;this.begin=0;this.end=0;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var bS=class extends Mh{constructor(){super(bS.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},jy=bS;jy.INITIAL_CAPACITY=32;function yS(r){return new tR(r)}function Eh(r){return new rR(r)}function JE(r,e){return new TS(r,e)}function eR(r,e=Hy.FAIL){return new mR(r,e)}var ur=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new lR(this,e)}filter(e){return new iR(this,e)}map(e){return new uR(this,e)}mapAsync(e){return new xS(this,e)}serialMapAsync(e){return new xS(this,e).serial()}flatmap(e){return new pR(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new aR(this,e,t)}columnMajorBatch(e,t=!0,n=gS){return this.rowMajorBatch(e,t).map(s=>qE(s,n))}concatenate(e,t){return new TS(yS([this,e]),t)}take(e){return e<0||e==null?this:new sR(this,e)}skip(e){return e<0||e==null?this:new oR(this,e)}prefetch(e){return new kS(this,e)}shuffle(e,t){return new cR(this,e,t)}serial(){return new nR(this)}},tR=class extends ur{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:QE(e),done:!1}}},rR=class extends ur{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},nR=class extends ur{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},oR=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ee(e.value)}return this.upstream.next()}},sR=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},aR=class extends ur{constructor(e,t,n=!0){super();this.upstream=e;this.batchSize=t;this.enableSmallLastBatch=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},iR=class extends ur{constructor(e,t){super();this.upstream=e;this.predicate=t;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ee(e.value)}}},uR=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Fs.getTensorsInContainer(e.value),n=this.transform(e.value),o=Fs.getTensorsInContainer(n);for(let s of t)Fs.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},lR=class extends ur{constructor(e,t){super();this.upstream=e;this.handler=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},xS=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Fs.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Fs.getTensorsInContainer(n);for(let s of t)Fs.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},wc=class extends ur{constructor(){super();this.outputQueue=new jy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},pR=class extends wc{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Fs.getTensorsInContainer(e.value),n=this.transform(e.value),o=Fs.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Fs.isTensorInList(s,o)||s.dispose();return!0}},TS=class extends ur{constructor(e,t){super();this.baseErrorHandler=t;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Hy=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))(Hy||{}),mR=class extends ur{constructor(e,t=0){super();this.iterators=e;this.mismatchMode=t;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(i){return i instanceof ur?{value:i.next().then(u=>(t++,u.done&&n++,u.value)),recurse:!1}:{value:null,recurse:!0}}let s=await Vy(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},kS=class extends ur{constructor(e,t){super();this.upstream=e;this.bufferSize=t;this.buffer=new Mh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},cR=class extends kS{constructor(e,t,n){super(e,t);this.upstream=e;this.windowSize=t;this.upstreamExhausted=!1;this.random=ZE.alea(n||b.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var Ti=class{constructor(){this.size=null}batch(e,t=!0){let n=this;b.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),Bn(async()=>(await n.iterator()).columnMajorBatch(e,t,see),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Bn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Bn(async()=>(await t.iterator()).filter(o=>G(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Bn(async()=>(await t.iterator()).map(n=>G(()=>e(n))),this.size)}mapAsync(e){let t=this;return Bn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Bn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Bn(async()=>{let o=Eh(async()=>({value:await t.iterator(),done:!1}));return JE(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Bn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=dR.alea(t||b.now().toString());return Bn(async()=>{let i=s.int32();return n&&(i+=s.int32()),(await o.iterator()).shuffle(e,i.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Bn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ti.MAX_BUFFER_SIZE=1e4;function Bn(r,e=null){return new class extends Ti{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function fR(r){return Bn(async()=>yS(r),r.length)}function hR(r){if(!fl(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return Bn(async()=>{let t=await Vy(r,n=>{if(n instanceof Ti)return{value:n.iterator(),recurse:!1};if(fl(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return eR(t,Hy.SHORTEST)},e)}function see(r){if(r===null)return null;let e=r[0];return YE(e)?{value:aee(r),recurse:!1}:{value:null,recurse:!0}}function aee(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Ye?fr(r):Fr(r)}var Rh=class extends Ti{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var qy='"',Fh=Symbol("out"),gR=Symbol("field"),Xy=Symbol("quote"),IS=Symbol("quoteafterquote"),bR=Symbol("quoteinquote"),Lh=class extends Ti{constructor(e,t){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new Rh(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(b.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&b.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(b.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let i=this.fullColumnNames[s],a=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!a)){let u=t[s],l=null;if(u==="")if(a&&a.default!==void 0)l=a.default;else{if(a&&(a.required||a.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);l=void 0}else{let p=Number(u);if(isNaN(p))a&&a.dtype==="bool"?l=this.getBoolean(u):l=u;else if(!a||!a.dtype)l=p;else switch(a.dtype){case"float32":l=p;break;case"int32":l=Math.floor(p);break;case"bool":l=this.getBoolean(u);break;default:l=p}}a&&a.isLabel?o[i]=l:n[i]=l}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,i=Fh;for(let a=0;a<s;a++)switch(i){case Fh:switch(e.charAt(a)){case qy:o=a+1,i=Xy;break;case this.delimiter:if(o=a+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),i=Fh;break;default:i=gR,o=a;break}break;case gR:switch(e.charAt(a)){case this.delimiter:n.push(e.substring(o,a)),i=Fh,o=a+1;break;default:}break;case Xy:switch(e.charAt(a)){case qy:i=IS;break;default:}break;case IS:switch(e.charAt(a)){case this.delimiter:n.push(e.substring(o,a-1)),i=Fh,o=a+1;break;case qy:i=Xy;break;default:i=bR;break}break;case bR:switch(e.charAt(a)){case qy:i=Xy;break;default:}break;default:}if(i===IS?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var Bh=class extends ur{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if($().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new Bh(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(b.sizeFromShape(t));return n.set(e,n.length-e.length),Fr(n,t)}};var $h=class extends ur{constructor(e,t){super();this.webcamVideoElement=e;this.webcamConfig=t;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=zt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,i=(1-o)/2,a=s+n,u=o+i;this.cropBox=di([i,s,u,a],[1,4])}else this.cropBox=di([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if($().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new $h(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&b.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=vb.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return G(()=>{let t=Dr(J(e,"float32"),0),n;n=Rn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return L(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Oh=class{};var Yy=class extends ur{split(e){return new yR(this,e)}},yR=class extends Yy{constructor(e,t){super();this.upstream=e;this.impl=new xR(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},xR=class extends wc{constructor(e,t){super();this.upstream=e;this.separator=t;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var CS=class extends ur{decodeUTF8(){return new TR(this)}},TR=class extends Yy{constructor(e){super();this.upstream=e;this.impl=new kR(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},kR=class extends wc{constructor(e){super();this.upstream=e;if($().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=hS();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return $().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var zh=class extends CS{constructor(e,t={}){super();this.file=e;this.options=t;b.assert(e instanceof Uint8Array||($().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=a=>{let u=s.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(u)},s.onabort=a=>n(new Error("Aborted")),s.onerror=a=>n(new Error(a.type));let i=this.file.slice(this.offset,o);s.readAsArrayBuffer(i)}this.offset=o}),done:!1}}};async function IR(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=iee(r));let s=await(t||b.fetch)(n,o);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new zh(i,e)}else throw new Error(s.statusText)}var iee=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function Qy(r){return typeof r=="string"&&r.substr(0,7)==="file://"}var Uh=class extends Oh{constructor(e,t={}){super();this.input=e;this.options=t}async iterator(){if(Qy(this.input)&&$().get("IS_NODE")){let e=Gh();this.input=e.readFileSync(this.input.substr(7))}return new zh(this.input,this.options)}};var Wh=class extends Oh{constructor(e,t={}){super();this.url=e;this.fileOptions=t}async iterator(){return Qy(this.url)?new Uh(this.url,this.fileOptions).iterator():IR(this.url,this.fileOptions)}};function CR(r,e={}){return new Lh(new Wh(r),e)}function vR(r){let e=Eh(r);return Bn(async()=>e)}function SR(r){return Bn(async()=>{let e=await r();return Eh(()=>e.next())})}async function wR(r,e){return $h.create(r,e)}async function _R(r){return Bh.create(r)}var AR="0.0.0";function ne(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var uee=Tr.whereImpl,vS=class extends cs{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new Za(this,Qn())}nextDataId(){return vS.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,$().get("IS_NODE")&&I.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(i=>b.encodeString(i));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return I.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}makeOutput(e,t,n){let o=this.write(e,t,n);return Qn().makeTensorFromDataId(o,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ne([e],"where");let t=this.readSync(e.dataId);return uee(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Kh=vS;Kh.nextDataId=0;var Mc={};Xe(Mc,{addImpl:()=>wS,bincountImpl:()=>Nc,bincountReduceImpl:()=>Zy,ceilImpl:()=>_S,concatImpl:()=>vp,equalImpl:()=>AS,expImpl:()=>DS,expm1Impl:()=>MS,floorImpl:()=>ES,gatherNdImpl:()=>Jy,gatherV2Impl:()=>ex,greaterEqualImpl:()=>FS,greaterImpl:()=>RS,lessEqualImpl:()=>BS,lessImpl:()=>LS,linSpaceImpl:()=>tx,logImpl:()=>$S,maxImpl:()=>rx,maximumImpl:()=>OS,minimumImpl:()=>zS,multiplyImpl:()=>Vh,negImpl:()=>GS,notEqualImpl:()=>US,prodImpl:()=>WS,rangeImpl:()=>wp,rsqrtImpl:()=>KS,sigmoidImpl:()=>eF,simpleAbsImpl:()=>SS,sliceImpl:()=>_p,sparseFillEmptyRowsImpl:()=>nx,sparseReshapeImpl:()=>ox,sparseSegmentReductionImpl:()=>Pc,sqrtImpl:()=>nF,squaredDifferenceImpl:()=>jS,stridedSliceImpl:()=>sx,stringNGramsImpl:()=>ax,stringSplitImpl:()=>ix,stringToHashBucketFastImpl:()=>ux,subImpl:()=>HS,tileImpl:()=>lx,topKImpl:()=>px,transposeImpl:()=>Dc,uniqueImpl:()=>mx});function SS(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var lee=r=>{let{x:e}=r.inputs,t=r.backend;ne(e,"abs");let n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=SS(o),t.makeOutput(n,e.shape,e.dtype)},DR={kernelName:ds,backendName:"cpu",kernelFunc:lee};function tt(r){return(e,t,n,o,s)=>{let i=I.assertAndGetBroadcastShape(e,t),a=i.length,u=b.computeStrides(i),l=b.sizeFromShape(i),p=b.getTypedArrayFromDType(s,l),m=e.length,c=t.length,d=b.computeStrides(e),f=b.computeStrides(t),h=I.getBroadcastDims(e,i),g=I.getBroadcastDims(t,i);if(h.length+g.length===0)for(let y=0;y<p.length;++y)p[y]=r(n[y%n.length],o[y%o.length]);else for(let y=0;y<p.length;++y){let x=b.indexToLoc(y,a,u),T=x.slice(-m);h.forEach(M=>T[M]=0);let k=b.locToIndex(T,m,d),C=x.slice(-c);g.forEach(M=>C[M]=0);let A=b.locToIndex(C,c,f);p[y]=r(n[k],o[A])}return[p,i]}}function Sr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,a=t.makeTensorInfo(n.shape,"complex64"),u=t.data.get(a.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",i)},a}var PR={kernelName:Bu,backendName:"cpu",kernelFunc:Sr};function _c(r,e,t="float32"){if(t==="complex64"){let o=_c(r,e,"float32"),s=_c(r,e,"float32");return Sr({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Qr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var MR={kernelName:Hn,backendName:"cpu",kernelFunc:Qr};function Xs(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var ER={kernelName:Vu,backendName:"cpu",kernelFunc:Xs};function Ys(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Qr({inputs:{x:o},backend:t});let i=_c(t,o.shape,o.dtype),a=Ys({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Sr({inputs:{real:a,imag:i},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}if(o.dtype==="complex64"){let i=Xs({inputs:{input:o},backend:t}),a=Ys({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(i),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=Qr({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32"){let i=t.data.get(o.dataId).values,a=Int32Array.from(i);return t.makeTensorInfo(o.shape,"int32",a)}if(s==="bool"){let i=t.data.get(o.dataId).values,a=b.toTypedArray([0],o.dtype),[u,l]=tt((p,m)=>p!==m?1:0)(o.shape,[],i,a,"bool");return t.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var RR={kernelName:Vn,backendName:"cpu",kernelFunc:Ys};function it(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;ne([i,a],r);let l=u.data.get(i.dataId).values,p=u.data.get(a.dataId).values,m=i.dtype==="string"?I.fromUint8ToStringArray(l):l,c=i.dtype==="string"?I.fromUint8ToStringArray(p):p,d=n||i.dtype,[f,h]=e(i.shape,a.shape,m,c,d);return u.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let l=Ys({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(l.dataId),m=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,d=u.data.get(m.dataId).values,f=u.data.get(c.dataId).values,h=Ys({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,T=u.data.get(y.dataId).values,k=u.data.get(x.dataId).values,[C,A,M]=t(i.shape,a.shape,d,f,T,k),D=u.makeTensorInfo(M,"float32",C),R=u.makeTensorInfo(M,"float32",A),B=Sr({inputs:{real:D,imag:R},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(D),u.disposeIntermediateTensorInfo(R),B}else{let l=u.data.get(i.dataId).values,p=u.data.get(a.dataId).values,m=n||i.dtype,[c,d]=e(i.shape,a.shape,l,p,m);return u.makeTensorInfo(d,m,c)}}}function Ac(r){return(e,t,n,o,s,i)=>{let a=I.assertAndGetBroadcastShape(e,t),u=b.sizeFromShape(a),l=a.length,p=b.computeStrides(a),m=b.getTypedArrayFromDType("float32",u),c=b.getTypedArrayFromDType("float32",u),d=I.getBroadcastDims(e,a),f=I.getBroadcastDims(t,a),h=I.mergeRealAndImagArrays(n,o),g=I.mergeRealAndImagArrays(s,i),y=e.length,x=b.computeStrides(e),T=t.length,k=b.computeStrides(t);if(d.length+f.length===0)for(let C=0;C<m.length;C++){let A=C%h.length,M=C%g.length,D=r(h[A*2],h[A*2+1],g[M*2],g[M*2+1]);m[C]=D.real,c[C]=D.imag}else for(let C=0;C<m.length;C++){let A=b.indexToLoc(C,l,p),M=A.slice(-y);d.forEach(W=>M[W]=0);let D=b.locToIndex(M,y,x),R=A.slice(-T);f.forEach(W=>R[W]=0);let B=b.locToIndex(R,T,k),U=r(h[D*2],h[D*2+1],g[B*2],g[B*2+1]);m[C]=U.real,c[C]=U.imag}return[m,c,a]}}var wS=tt((r,e)=>r+e),pee=Ac((r,e,t,n)=>({real:r+t,imag:e+n})),ku=it(An,wS,pee),FR={kernelName:An,backendName:"cpu",kernelFunc:ku};function Nc(r,e,t,n,o){let s=b.sizeFromShape(n),i=b.makeZerosTypedArray(o,t);for(let a=0;a<r.length;a++){let u=r[a];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?i[u]+=e[a]:i[u]+=1)}return i}function Zy(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],i=Ce([o,t],e.dtype);for(let a=0;a<o;a++)for(let u=0;u<s;u++){let l=r.get(a,u);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(n?i.set(1,a,l):e.size>0?i.set(i.get(a,l)+e.get(a,u),a,l):i.set(i.get(a,l)+1,a,l))}return i}function In(r){return(e,t,n)=>{let o=b.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Re(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;if(ne(i,r),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,u=a.data.get(i.dataId).values,l=b.sizeFromShape(i.shape),p=t||i.dtype,m=b.getArrayFromDType(p,l);for(let c=0;c<l;++c)m[c]=e(u[c],o);return a.makeTensorInfo(i.shape,p,m)}}function Qs(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;if(ne(i,r),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,u=a.data.get(i.dataId).values,l=t||i.dtype,p=e(u,l,o);return a.makeTensorInfo(i.shape,l,p)}}var _S=In(r=>Math.ceil(r)),mee=Qs(co,_S),LR={kernelName:co,backendName:"cpu",kernelFunc:mee};function vp(r,e,t,n){let o=b.getArrayFromDType(t,b.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(i=>{let a=b.sizeFromShape(i.shape);o.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=t==="string"?I.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let l=0;l<i.shape[0];++l){let p=l*e[1]+s;for(let m=0;m<i.shape[1];++m)o[p+m]=a[u++]}s+=i.shape[1]})}return o}var AS=tt((r,e)=>r===e?1:0),NS=it(ua,AS,null,"bool"),BR={kernelName:ua,backendName:"cpu",kernelFunc:NS};var DS=In(r=>Math.exp(r)),PS=Qs(ko,DS,"float32"),$R={kernelName:ko,backendName:"cpu",kernelFunc:PS};var MS=In(r=>Math.expm1(r)),cee=Qs(la,MS),OR={kernelName:la,backendName:"cpu",kernelFunc:cee};var ES=In(r=>Math.floor(r)),dee=Qs(Io,ES),zR={kernelName:Io,backendName:"cpu",kernelFunc:dee};function Jy(r,e,t,n,o,s,i,a,u){let l=Ce([n,s],t);for(let p=0;p<n;p++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[p*o+d];c+=f*i[d],m.push(f)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${m} does not index into ${a}`);for(let d=0;d<s;d++)l.values[p*s+d]=e.get(...e.indexToLoc(c*s+d))}return l}function ex(r,e,t){let n=Ce(t,r.dtype);for(let o=0;o<n.size;++o){let i=n.indexToLoc(o).slice(),a=i[0],u=i[2],l=e.locToIndex([a,u]);i[2]=e.values[l];let p=r.locToIndex(i);0<=p&&p<r.values.length&&(n.values[o]=r.values[p])}return n}var RS=tt((r,e)=>r>e?1:0),fee=it(ca,RS,null,"bool"),GR={kernelName:ca,backendName:"cpu",kernelFunc:fee};var FS=tt((r,e)=>r>=e?1:0),hee=it(So,FS,null,"bool"),UR={kernelName:So,backendName:"cpu",kernelFunc:hee};var LS=tt((r,e)=>r<e?1:0),gee=it(da,LS,null,"bool"),WR={kernelName:da,backendName:"cpu",kernelFunc:gee};var BS=tt((r,e)=>r<=e?1:0),bee=it(fa,BS,null,"bool"),KR={kernelName:fa,backendName:"cpu",kernelFunc:bee};function tx(r,e,t){let n=(e-r)/(t-1),o=b.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var $S=In(r=>Math.log(r)),yee=Qs(_o,$S),VR={kernelName:_o,backendName:"cpu",kernelFunc:yee};function rx(r,e,t,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(t));for(let s=0;s<o.length;++s){let i=s*e,a=r[i];for(let u=0;u<e;++u){let l=r[i+u];(Number.isNaN(l)||l>a)&&(a=l)}o[s]=a}return o}var OS=tt((r,e)=>Math.max(r,e)),xee=it(No,OS),jR={kernelName:No,backendName:"cpu",kernelFunc:xee};var zS=tt((r,e)=>Math.min(r,e)),Tee=it(Eo,zS),HR={kernelName:Eo,backendName:"cpu",kernelFunc:Tee};var Vh=tt((r,e)=>r*e),kee=Ac((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),Sp=it(Fo,Vh,kee),qR={kernelName:Fo,backendName:"cpu",kernelFunc:Sp};function GS(r,e,t){let n=b.createScalarValue(-1,t);return Vh([],e,n,r,t)}function Iee(r){let{inputs:e,backend:t}=r,{x:n}=e;ne(n,"neg");let o=t.data.get(n.dataId).values,[s,i]=GS(o,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,s)}var XR={kernelName:ys,backendName:"cpu",kernelFunc:Iee};var US=tt((r,e)=>r!==e?1:0),Cee=it(ga,US,null,"bool"),YR={kernelName:ga,backendName:"cpu",kernelFunc:Cee};function Dc(r,e,t,n,o){let s=e.length,i=b.sizeFromShape(e),a=b.computeStrides(e),u=b.computeStrides(o),l=b.getTypedArrayFromDType(t,b.sizeFromShape(o));for(let p=0;p<i;++p){let m=b.indexToLoc(p,s,a),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=b.locToIndex(c,s,u);l[d]=r[p]}return l}function lr(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;ne(o,"transpose");let i=o.shape.length,a=new Array(i);for(let m=0;m<a.length;m++)a[m]=o.shape[s[m]];let u=n.data.get(o.dataId).values,l=Dc(u,o.shape,o.dtype,s,a);return{dataId:n.write(l,a,o.dtype),shape:a,dtype:o.dtype}}var QR={kernelName:Qo,backendName:"cpu",kernelFunc:lr};function WS(r,e,t,n){let[o,s]=I.computeOutAndReduceShapes(r,n),i=Kt(e,"int32"),a=b.makeZerosTypedArray(b.sizeFromShape(o),i),u=b.sizeFromShape(s);for(let l=0;l<a.length;++l){let p=l*u,m=1;for(let c=0;c<u;++c)m*=t[p+c];a[l]=m}return{outVals:a,outShape:o,outDtype:i}}function vee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"prod");let a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=I.getAxesPermutation(u,a),p=u,m=o,c=[];l!=null&&(m=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),c.push(m),p=I.getInnerMostAxes(p.length,a));let d=t.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=WS(m.shape,m.dtype,d,p),y=h;return i&&(y=I.expandShapeToKeepDim(h,u)),c.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(y,g,f)}var ZR={kernelName:Ta,backendName:"cpu",kernelFunc:vee};function wp(r,e,t,n){let o=r===e,s=r<e&&t<0,i=e<r&&t>1;if(o||s||i)return b.makeZerosTypedArray(0,n);let a=Math.abs(Math.ceil((e-r)/t)),u=b.makeZerosTypedArray(a,n);e<r&&t===1&&(t=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+t;return u}var KS=In(r=>1/Math.sqrt(r)),See=Qs(Uo,KS),JR={kernelName:Uo,backendName:"cpu",kernelFunc:See};var eF=In(r=>1/(1+Math.exp(-r))),VS=Re(Ko,r=>1/(1+Math.exp(-r))),tF={kernelName:Ko,backendName:"cpu",kernelFunc:VS};function _p(r,e,t,n,o){let s=Tt.isSliceContinous(n,e,t),i=b.sizeFromShape(t),a=b.computeStrides(n);if(s){let m=Tt.computeFlatOffset(e,a);return o==="string"?r.slice(m,m+i):r.subarray(m,m+i)}let u=o==="string"?I.fromUint8ToStringArray(r):r,l=Ce(n,o,u),p=Ce(t,o);for(let m=0;m<p.size;++m){let c=p.indexToLoc(m),d=c.map((f,h)=>f+e[h]);p.set(l.get(...d),...c)}return o==="string"?I.fromStringArrayToUint8(p.values):p.values}function Zs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n;ne(o,"slice");let[a,u]=Tt.parseSliceParams(o,s,i);Tt.assertParamsValid(o,a,u);let l=t.data.get(o.dataId).values,p=_p(l,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,p)}var rF={kernelName:Cs,backendName:"cpu",kernelFunc:Zs};function nx(r,e,t,n,o,s,i){let a=e[0],u=s[0],l=new Array(u),p=new Array(a),m=e[1];if(u===0){if(a!==0)throw new Error(I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let g=b.getArrayFromDType(t,0),y=b.getArrayFromDType(o,0);return[g,[0,m],y,l,p]}let c=!0,d=0,f=new Array(u).fill(0);for(let g=0;g<a;++g){let y=r[g*m];if(y<0)throw new Error(I.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=u)throw new Error(I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,u));++f[y],c=c&&y>=d,d=y}let h=!0;for(let g=0;g<u;++g){let y=f[g]===0;l[g]=y,h=h&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,y=n;for(let x=0;x<a;++x)p[x]=x;return[g,[a,m],y,l,p]}else{let g=f[u-1],y=b.getArrayFromDType(t,g*m),x=b.getArrayFromDType(o,g),T=new Array(u).fill(0);for(let k=0;k<a;++k){let C=r[k*m],A=T[C],M=(C===0?0:f[C-1])+A;T[C]++;for(let D=0;D<m;++D)y[M*m+D]=r[k*m+D];x[M]=n[k],p[k]=M}for(let k=0;k<u;++k)if(T[k]===0){let A=k===0?0:f[k-1];y[A*m+0]=k;for(let M=1;M<m;++M)y[A*m+M]=0;x[A]=i}return[y,[g,m],x,l,p]}}function ox(r,e,t,n,o){let s=b.sizeFromShape(n),i=e[0],a=o.length,u=[],l=1,p=-1;for(let g=0;g<a;++g){let y=o[g];if(y===-1){if(p!==-1)throw new Error(I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,g));p=g,u.push(1)}else{if(y<0)throw new Error(I.getSparseReshapeNegativeOutputDimErrorMessage(g,y));l*=y,u.push(y)}}if(p!==-1){if(l<=0)throw new Error(I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/l);if(l*g!==s)throw new Error(I.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[p]=g}if(b.sizeFromShape(u)!==s)throw new Error(I.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let h=b.getArrayFromDType(t,i*a);for(let g=0;g<i;++g){let y=0;for(let x=0;x<c;++x)y+=r[g*c+x]*d[x];for(let x=0;x<a;++x)h[g*a+x]=Math.trunc(y/f[x]),y%=f[x]}return[h,[i,a],u]}function Pc(r,e,t,n,o,s=!1,i=0){let a=n.length,u=[e[0],r.length/e[0]],l=u[1],m=a>0?o[a-1]+1:0;if(m<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=e.slice();c[0]=m;let d=c.reduce((T,k)=>T*k,1),f=b.getArrayFromDType(t,d);if(a===0)return m>0&&f.fill(i),[f,c];if(m<=0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,y=0,x=o[h];for(;;){let T=0;if(g<a){if(T=o[g],x===T){++g;continue}if(x>=T)throw new Error(I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=m)throw new Error(I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,m));x>y&&f.fill(i,y*l,x*l);for(let k=h;k<g;++k){let C=n[k];if(C<0||C>=u[0])throw new Error(I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(k,n[k],u[0]));for(let A=0;A<l;A++)f[x*l+A]+=r[C*l+A]}if(s)for(let k=0;k<l;k++)f[x*l+k]/=g-h;if(h=g,++g,y=x+1,x=T,g>a)break}return y<m&&f.fill(i,y*l,m*l),[f,c]}var nF=In(r=>Math.sqrt(r)),wee=Re(Vo,r=>Math.sqrt(r)),oF={kernelName:Vo,backendName:"cpu",kernelFunc:wee};var jS=tt((r,e)=>{let t=r-e;return t*t}),_ee=it(qo,jS),sF={kernelName:qo,backendName:"cpu",kernelFunc:_ee};function sx(r,e,t,n){let o=Ce(r,e.dtype);for(let s=0;s<o.size;s++){let i=o.indexToLoc(s),a=new Array(i.length);for(let u=0;u<a.length;u++)a[u]=i[u]*t[u]+n[u];o.set(e.get(...a),...i)}return o}var aF=class{constructor(e,t,n,o,s,i){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,i){for(let a=0;a<s;++a){let u=this.getPadWidth(i),l=Math.max(0,u-a),p=Math.max(0,u-(s-(a+1))),m=i-(l+p),c=t+(l>0?0:a-u),d=0;d+=l*this.leftPad.length;for(let x=0;x<m;++x)d+=e[c+x].length;d+=p*this.rightPad.length,d+=(l+p+m-1)*this.separator.length,n[o+a]=new Uint8Array(d);let h=n[o+a],g=0,y=x=>x.forEach(T=>h[g++]=T);for(let x=0;x<l;++x)y(this.leftPad),y(this.separator);for(let x=0;x<m-1;++x)y(e[c+x]),y(this.separator);if(m>0){y(e[c+m-1]);for(let x=0;x<p;++x)y(this.separator),y(this.rightPad)}else{for(let x=0;x<p-1;++x)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let p=t[l]>=u;if(p=p&&t[l]<=n,!p)throw new Error(`Invalid split value ${t[l]}, must be in [${u}, ${n}]`);u=t[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,i=b.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)i[l]=0;return[u,i]}i[0]=0;for(let u=1;u<=s;++u){let l=t[u]-t[u-1],p=0;this.nGramWidths.forEach(m=>{p+=this.getNumNGrams(l,m)}),this.preserveShort&&l>0&&p===0&&(p=1),i[u]=i[u-1]+p}let a=new Array(i[s]);for(let u=0;u<s;++u){let l=t[u],p=i[u];if(this.nGramWidths.forEach(m=>{let c=t[u+1]-t[u],d=this.getNumNGrams(c,m);this.createNGrams(e,l,a,p,d,m),p+=d}),this.preserveShort&&p===i[u]){let m=t[u+1]-t[u];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(e,l,a,p,d,c)}}return[a,i]}};function ax(r,e,t,n,o,s,i,a){return new aF(t,n,o,s,i,a).compute(r,e)}function Aee(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!t||a.length!==0)&&n.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let i=r.subarray(o,s);(!t||i.length!==0)&&n.push(i),o=s+1}}function ix(r,e,t){let n=r.length,o=[],s=0,i=0,a=new Array(n);for(let c=0;c<n;++c){let d=o.length;Aee(r[c],e,t,o);let f=o.length-d;a[c]=f,s+=f,i=Math.max(i,f)}let u=b.getArrayFromDType("int32",s*2),l=new Array(s),p=[n,i],m=0;for(let c=0;c<n;++c)for(let d=0;d<a[c];++d)u[m*2]=c,u[m*2+1]=d,l[m]=o[m],++m;return[u,l,p]}function ux(r,e){let t=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=b.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var HS=tt((r,e)=>r-e),Nee=Ac((r,e,t,n)=>({real:r-t,imag:e-n})),jh=it(Xo,HS,Nee),iF={kernelName:Xo,backendName:"cpu",kernelFunc:jh};function lx(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Ce(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),i=new Array(r.rank);for(let u=0;u<i.length;u++)i[u]=s[u]%r.shape[u];let a=r.locToIndex(i);n.values[o]=r.values[a]}return n}var Hh=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function uF(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let a=n-t+1,u=e-t+1,l=Math.log(a),p=.5*Math.exp(2*l/3),m=.5*Math.sqrt(l*p*(a-p)/a)*Math.sign(u-a/2),c=Math.max(t,Math.floor(e-u*p/a+m)),d=Math.min(n,Math.floor(e+(a-u)*p/a+m));uF(r,e,c,d)}let o=r[e],s=t,i=n;for(b.swap(r,t,e),Hh(r[n],o)>0&&b.swap(r,t,n);s<i;){for(b.swap(r,s,i),s++,i--;Hh(r[s],o)<0;)s=s+1;for(;Hh(r[i],o)>0;)i=i-1}Hh(r[t],o)===0?b.swap(r,t,i):(i=i+1,b.swap(r,i,n)),i<=e&&(t=i+1),e<=i&&(n=i-1)}}function px(r,e,t,n,o){let s=e[e.length-1],[i,a]=[r.length/s,s],u=b.getTypedArrayFromDType(t,i*n),l=b.getTypedArrayFromDType("int32",i*n);for(let m=0;m<i;m++){let c=m*a,d=r.subarray(c,c+a),f=new Array(d.length);d.forEach((x,T)=>f[T]={value:x,index:T}),n<f.length&&(uF(f,n),f=f.slice(0,n)),o&&f.sort(Hh);let h=m*n,g=u.subarray(h,h+n),y=l.subarray(h,h+n);for(let x=0;x<n;x++)g[x]=f[x].value,y[x]=f[x].index}let p=e.slice();return p[p.length-1]=n,[Ce(p,t,u),Ce(p,"int32",l)]}function mx(r,e,t,n){let o=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let f=0;f<o;f++)s[0]*=t[f];s[1]=t[o];for(let f=o+1;f<t.length;f++)s[2]*=t[f];let i={},a=new Int32Array(t[o]),u=new yt(s,n,r),l=[],p=s[0]===1&&s[2]===1;for(let f=0;f<t[o];f++){let h;if(p)h=r[f].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let x=0;x<s[2];x++)g.push(u.get(y,f,x));h=g.join(",")}if(i[h]!==void 0)a[f]=i[h];else{let g=Object.keys(i).length;i[h]=g,a[f]=g,l.push(f)}}let m=s.slice();m[1]=Object.keys(i).length;let c=new yt(m,n);l.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)c.set(u.get(g,f,y),g,h,y)});let d=t.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:a}}var Dee="0.0.0";rl("cpu",()=>new Kh,1);var qS=Re(To,r=>r>=0?r:Math.exp(r)-1),lF={kernelName:To,backendName:"cpu",kernelFunc:qS};function XS(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;ne([o],"leakyRelu");let i=b.sizeFromShape(o.shape),a=t.data.get(o.dataId).values,u=b.getTypedArrayFromDType("float32",i);for(let l=0;l<a.length;l++)u[l]=a[l]<0?s*a[l]:a[l];return t.makeTensorInfo(o.shape,"float32",u)}var pF={kernelName:wo,backendName:"cpu",kernelFunc:XS};var Pee=tt((r,e)=>r<0?e*r:r);function YS(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;ne([n,o],"prelu");let s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,[a,u]=Pee(n.shape,o.shape,s,i,"float32");return t.makeTensorInfo(u,"float32",a)}var mF={kernelName:$o,backendName:"cpu",kernelFunc:YS};var QS=Re(Oo,r=>Math.max(0,r)),cF={kernelName:Oo,backendName:"cpu",kernelFunc:QS};var ZS=Re(Go,r=>Math.min(Math.max(0,r),6)),dF={kernelName:Go,backendName:"cpu",kernelFunc:ZS};function Ec(r,e,t,n,o){if(t==="linear")return Qr({inputs:{x:e},backend:r});if(t==="relu")return QS({inputs:{x:e},backend:r});if(t==="elu")return qS({inputs:{x:e},backend:r});if(t==="relu6")return ZS({inputs:{x:e},backend:r});if(t==="prelu")return YS({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return XS({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return VS({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function ot(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,i=b.sizeFromShape(o.shape),a=b.inferFromImplicitShape(s,i),u=b.sizeFromShape(a);b.assert(i===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let l=t.data.get(o.dataId);if(l.complexTensorInfos!=null){let p=l.complexTensorInfos.real,m=l.complexTensorInfos.imag;p.shape=a,m.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}var fF={kernelName:ks,backendName:"cpu",kernelFunc:ot};function JS(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;ne([o,s],"matMul");let u=o.shape.length,l=s.shape.length,p=i?o.shape[u-2]:o.shape[u-1],m=a?s.shape[l-1]:s.shape[l-2],c=i?o.shape[u-1]:o.shape[u-2],d=a?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),T=Nr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let k=i?[g,p,c]:[g,c,p],C=a?[y,d,m]:[y,m,d],A=ot({inputs:{x:o},backend:t,attrs:{shape:k}}),M=ot({inputs:{x:s},backend:t,attrs:{shape:C}}),D=i?A.shape[1]:A.shape[2],R=i?A.shape[2]:A.shape[1],B=a?M.shape[1]:M.shape[2],U=Math.max(g,y),W=t.data.get(A.dataId).values,K=t.data.get(M.dataId).values,j=b.computeStrides(A.shape),V=b.computeStrides(M.shape),[q,ee,Z]=i?[j[0],1,j[1]]:[j[0],j[1],1],[te,oe,ie]=a?[1,V[1],V[0]]:[V[1],1,V[0]],se=R*B,ue=Ce([U,R,B],A.dtype),ye=ue.values,fe=t.blockSize;for(let xe=0;xe<U;xe++)for(let we=0;we<R;we+=fe)for(let Fe=0;Fe<B;Fe+=fe)for(let Be=0;Be<D;Be+=fe){let Ue=Math.min(we+fe,R),Y=Math.min(Fe+fe,B),gt=Math.min(Be+fe,D);for(let It=we;It<Ue;It++)for(let Nt=Fe;Nt<Y;Nt++){let Gt=0;for(let ft=Be;ft<gt;ft++){let at=Math.min(xe,g-1)*q,Ut=Math.min(xe,y-1)*ie,zn=W[at+It*ee+ft*Z],pr=K[ft*te+Nt*oe+Ut];Gt+=zn*pr}ye[xe*se+(It*B+Nt)]+=Gt}}return t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(M),t.makeTensorInfo(T,ue.dtype,ue.values)}var hF={kernelName:mo,backendName:"cpu",kernelFunc:JS};function Mee(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c,d,f,h=[];c=JS({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:t}),i&&(d=ku({inputs:{a:c,b:i},backend:t}),h.push(c),c=d),p&&(f=Ec(t,c,p,a,m),h.push(c),c=f);for(let y of h)t.disposeIntermediateTensorInfo(y);return c}var gF={kernelName:Ns,backendName:"cpu",kernelFunc:Mee};var Eee=Re(Mi,r=>Math.acos(r)),bF={kernelName:Mi,backendName:"cpu",kernelFunc:Eee};var Ree=Re(Ei,r=>Math.acosh(r)),yF={kernelName:Ei,backendName:"cpu",kernelFunc:Ree};function Fee(r){let{inputs:e,backend:t}=r,n=e;ne(e,"addN");let o=n.map(a=>t.data.get(a.dataId).values),s=Ce(n[0].shape,n[0].dtype),i=s.values;for(let a=0;a<n.length;a++){let u=o[a];for(let l=0;l<i.length;l++)i[l]+=u[l]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var xF={kernelName:uo,backendName:"cpu",kernelFunc:Fee};function Lee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"all");let a=b.parseAxisParam(s,o.shape),u=a,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("all",u,p.shape.length);let[m,c]=I.computeOutAndReduceShapes(p.shape,u),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let x=y*d,T=h[x];for(let k=0;k<d;++k){let C=h[x+k];T=T&&C}f[y]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(m,p.dtype,f);if(i){let y=I.expandShapeToKeepDim(m,a),x=ot({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x}return g}var TF={kernelName:Ri,backendName:"cpu",kernelFunc:Lee};function Bee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"any");let a=b.parseAxisParam(s,o.shape),u=a,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("any",u,p.shape.length);let[m,c]=I.computeOutAndReduceShapes(p.shape,u),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let x=y*d,T=h[x];for(let k=0;k<d;++k){let C=h[x+k];T=T||C}f[y]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(m,p.dtype,f);if(i){let y=I.expandShapeToKeepDim(m,a),x=ot({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x}return g}var kF={kernelName:Fi,backendName:"cpu",kernelFunc:Bee};function $ee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMax");let i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=lr({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[p,m]=I.computeOutAndReduceShapes(u.shape,i),c=b.sizeFromShape(p),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,x=h[y],T=0;for(let k=0;k<f;++k){let C=h[y+k];C>x&&(x=C,T=k)}d[g]=T}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",d)}var IF={kernelName:lo,backendName:"cpu",kernelFunc:$ee};function Oee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMin");let i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=lr({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[p,m]=I.computeOutAndReduceShapes(u.shape,i),c=b.sizeFromShape(p),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,x=h[y],T=0;for(let k=0;k<f;++k){let C=h[y+k];C<x&&(x=C,T=k)}d[g]=T}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",d)}var CF={kernelName:ti,backendName:"cpu",kernelFunc:Oee};var zee=Re(Li,r=>Math.asin(r)),vF={kernelName:Li,backendName:"cpu",kernelFunc:zee};var Gee=Re(Bi,r=>Math.asinh(r)),SF={kernelName:Bi,backendName:"cpu",kernelFunc:Gee};var Uee=Re($i,r=>Math.atan(r)),wF={kernelName:$i,backendName:"cpu",kernelFunc:Uee};var Wee=tt((r,e)=>Math.atan2(r,e)),Kee=it(zi,Wee),_F={kernelName:zi,backendName:"cpu",kernelFunc:Kee};var Vee=Re(Oi,r=>Math.atanh(r)),AF={kernelName:Oi,backendName:"cpu",kernelFunc:Vee};function Rc(r,e,t,n,o,s){let i=o.strideHeight,a=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ce(o.outShape,t),g=h.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],x=o.outShape[2]*o.outShape[3],T=o.outShape[3];for(let k=0;k<o.batchSize;++k){let C=k*y,A=k*n[0];for(let M=0;M<o.inChannels;++M)for(let D=0;D<o.outHeight;++D){let R=D*i-c,B=Math.max(0,R),U=Math.min(o.inHeight,p+R),W=C+D*x;for(let K=0;K<o.outWidth;++K){let j=K*a-d,V=Math.max(0,j),q=Math.min(o.inWidth,m+j),ee=f,Z=0,te=0;for(let ie=B;ie<U;ie+=u){let se=A+ie*n[1];for(let ue=V;ue<q;ue+=l){let ye=se+ue*n[2],fe=r[ye+M];s==="max"&&fe>ee?ee=fe:s==="avg"&&(Z+=fe,te++)}if(isNaN(ee))break}let oe=W+K*T+M;g[oe]=s==="avg"?Z/te:ee}}}return h}function cx(r,e,t,n,o=!1,s=!1){let i=Ce(n.outShape,"int32"),a=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=Ce(e,t,r);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let x=0;x<n.outHeight;++x){let T=x*a-d,k=T;for(;k<0;)k+=l;let C=Math.min(n.inHeight,m+T);for(let A=0;A<n.outWidth;++A){let M=A*u-f,D=M;for(;D<0;)D+=p;let R=Math.min(n.inWidth,c+M),B=Number.NEGATIVE_INFINITY,U=-1;for(let W=k;W<C;W+=l){let K=W-T;for(let j=D;j<R;j+=p){let V=j-M,q=h.get(g,W,j,y);q>B&&(B=q,o?U=s?((g*n.inHeight+W)*n.inWidth+j)*n.inChannels+y:(W*n.inWidth+j)*n.inChannels+y:U=K*c+V)}}i.set(U,g,x,A,y)}}return i}function dx(r,e,t,n,o,s){let i=o.strideDepth,a=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,p=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,x=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,T=Ce(o.outShape,t),k=T.values,C=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[2]*o.outShape[3]*o.outShape[4],M=o.outShape[3]*o.outShape[4],D=o.outShape[4];for(let R=0;R<o.batchSize;++R){let B=R*C,U=R*n[0];for(let W=0;W<o.inChannels;++W)for(let K=0;K<o.outDepth;++K){let j=K*i-h,V=j;for(;V<0;)V+=l;let q=Math.min(o.inDepth,c+j),ee=B+K*A;for(let Z=0;Z<o.outHeight;++Z){let te=Z*a-g,oe=te;for(;oe<0;)oe+=p;let ie=Math.min(o.inHeight,d+te),se=ee+Z*M;for(let ue=0;ue<o.outWidth;++ue){let ye=ue*u-y,fe=ye;for(;fe<0;)fe+=m;let xe=Math.min(o.inWidth,f+ye),we=se+ue*D,Fe=x,Be=0,Ue=0;for(let gt=V;gt<q;gt+=l){let It=U+gt*n[1];for(let Nt=oe;Nt<ie;Nt+=p){let Gt=It+Nt*n[2];for(let ft=fe;ft<xe;ft+=m){let at=Gt+ft*n[3],Ut=r[at+W];if(s==="max"&&Ut>Fe?Fe=Ut:s==="avg"&&(Be+=Ut,Ue++),isNaN(Fe))break}if(isNaN(Fe))break}if(isNaN(Fe))break}let Y=we+W;k[Y]=s==="avg"?Be/Ue:Fe}}}}return T}function NF(r,e){let t=Ce(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,c=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){let x=y*n-c,T=x;for(;T<0;)T+=i;let k=Math.min(e.inDepth,l+x);for(let C=0;C<e.outHeight;++C){let A=C*o-d,M=A;for(;M<0;)M+=a;let D=Math.min(e.inHeight,p+A);for(let R=0;R<e.outWidth;++R){let B=R*s-f,U=B;for(;U<0;)U+=u;let W=Math.min(e.inWidth,m+B),K=Number.NEGATIVE_INFINITY,j=-1;for(let V=T;V<k;V+=i){let q=V-x;for(let ee=M;ee<D;ee+=a){let Z=ee-A;for(let te=U;te<W;te+=u){let oe=te-B,ie=r.get(h,V,ee,te,g);ie>=K&&(K=ie,j=q*p*m+Z*p+oe)}}}t.set(j,h,y,C,R,g)}}}return t}function jee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,i,l,a,u),m;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))m=Qr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Rc(c,o.shape,o.dtype,d,p,"avg");m=t.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var DF={kernelName:po,backendName:"cpu",kernelFunc:jee};function Hee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n;ne(o,"avgPool3d");let p=I.computePool3DInfo(o.shape,s,i,1,a,u,l),m=t.data.get(o.dataId).values,c=dx(m,o.shape,o.dtype,b.computeStrides(o.shape),p,"avg");return t.makeTensorInfo(c.shape,"float32",c.values)}var PF={kernelName:Lu,backendName:"cpu",kernelFunc:Hee};function qee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n;ne([o,s],"avgPool3DGrad");let p=I.computePool3DInfo(s.shape,i,a,1,u,l),m=p.strideDepth,c=p.strideHeight,d=p.strideWidth,f=p.filterDepth,h=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,x=p.dilationHeight,T=p.dilationWidth,k=p.effectiveFilterDepth,C=p.effectiveFilterHeight,A=p.effectiveFilterWidth,M=k-1-p.padInfo.front,D=A-1-p.padInfo.left,R=C-1-p.padInfo.top,B=Ce(s.shape,"float32"),U=1/(f*h*g),W=t.bufferSync(o);for(let K=0;K<p.batchSize;++K)for(let j=0;j<p.inChannels;++j)for(let V=0;V<p.inDepth;++V)for(let q=0;q<p.inHeight;++q)for(let ee=0;ee<p.inWidth;++ee){let Z=V-M,te=q-R,oe=ee-D,ie=0;for(let se=0;se<k;se+=y){let ue=(Z+se)/m;if(!(ue<0||ue>=p.outDepth||Math.floor(ue)!==ue))for(let ye=0;ye<C;ye+=x){let fe=(te+ye)/c;if(!(fe<0||fe>=p.outHeight||Math.floor(fe)!==fe))for(let xe=0;xe<A;xe+=T){let we=(oe+xe)/d;if(we<0||we>=p.outWidth||Math.floor(we)!==we)continue;ie+=W.get(K,ue,fe,we,j)}}}B.set(ie*U,K,V,q,ee,j)}return t.makeTensorInfo(B.shape,B.dtype,B.values)}var MF={kernelName:um,backendName:"cpu",kernelFunc:qee};function Xee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s;ne([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:l}=n,p=I.computePool2DInfo(i.shape,a,u,1,l),m=p.strideHeight,c=p.strideWidth,d=p.filterHeight,f=p.filterWidth,h=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,x=p.effectiveFilterWidth,T=x-1-p.padInfo.left,k=y-1-p.padInfo.top,C=Ce(i.shape,"float32"),A=1/(d*f),M=t.data.get(o.dataId).values,D=Ce(o.shape,"float32",M);for(let R=0;R<p.batchSize;++R)for(let B=0;B<p.inChannels;++B)for(let U=0;U<p.inHeight;++U)for(let W=0;W<p.inWidth;++W){let K=U-k,j=W-T,V=0;for(let q=0;q<y;q+=h){let ee=(K+q)/m;if(!(ee<0||ee>=p.outHeight||Math.floor(ee)!==ee))for(let Z=0;Z<x;Z+=g){let te=(j+Z)/c;if(te<0||te>=p.outWidth||Math.floor(te)!==te)continue;V+=D.get(R,ee,te,B)}}C.set(V*A,R,U,W,B)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}var EF={kernelName:im,backendName:"cpu",kernelFunc:Xee};function Yee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:i,mean:a,variance:u}=e;b.assert(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ne([o,a,u,s,i],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=t.data.get(o.dataId).values,m=t.data.get(a.dataId).values,c=t.data.get(u.dataId).values,d=s?t.data.get(s.dataId).values:new Float32Array([1]),f=i?t.data.get(i.dataId).values:new Float32Array([0]),h=new Float32Array(p.length),g=f.length,y=d.length,x=c.length,T=m.length,k=0,C=0,A=0,M=0;for(let D=0;D<p.length;++D)h[D]=f[k++]+(p[D]-m[C++])*d[A++]/Math.sqrt(c[M++]+l),k>=g&&(k=0),C>=T&&(C=0),A>=y&&(A=0),M>=x&&(M=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var RF={kernelName:vo,backendName:"cpu",kernelFunc:Yee};function Qee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;ne([o],"batchToSpaceND");let a=s.reduce((y,x)=>y*x),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,a),m=I.getSliceBeginCoords(i,s.length),c=I.getSliceSize(p,i,s.length),d=ot({inputs:{x:o},backend:t,attrs:{shape:u}}),f=lr({inputs:{x:d},backend:t,attrs:{perm:l}}),h=ot({inputs:{x:f},backend:t,attrs:{shape:p}}),g=Zs({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var FF={kernelName:fs,backendName:"cpu",kernelFunc:Qee};function Zee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i}=n,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Nc(a,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,l)}var LF={kernelName:lm,backendName:"cpu",kernelFunc:Zee};function Jee(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,a=I.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var BF={kernelName:pm,backendName:"cpu",kernelFunc:Jee};var ete=Re(jn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),$F={kernelName:jn,backendName:"cpu",kernelFunc:ete};var tte=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,a=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values;for(let l=0;l<a.length;l++){let p=a[l],m=u[l];n[l]=Math.hypot(p,m)}return t.makeOutput(n,e.shape,"float32")},OF={kernelName:$u,backendName:"cpu",kernelFunc:tte};function ki(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var zF={kernelName:Uu,backendName:"cpu",kernelFunc:ki};function hl(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=I.computeOutShape(e.map(h=>h.shape),s);if(b.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let a=e.filter(h=>b.sizeFromShape(h.shape)>0);if(a.length===1)return Qr({inputs:{x:a[0]},backend:t});let u=a.map(h=>h.shape);if(I.assertParamsConsistent(u,s),a[0].dtype==="complex64"){let h=a.map(k=>Xs({inputs:{input:k},backend:t})),g=a.map(k=>ki({inputs:{input:k},backend:t})),y=hl({inputs:h,backend:t,attrs:{axis:s}}),x=hl({inputs:g,backend:t,attrs:{axis:s}}),T=Sr({inputs:{real:y,imag:x},backend:t});return h.forEach(k=>t.disposeIntermediateTensorInfo(k)),g.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),T}let l=a.map(h=>{let g=b.sizeFromShape(h.shape.slice(s));return ot({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),p=l.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));i=I.computeOutShape(l.map(h=>h.shape),1);let m=l[0].shape[0]===1,c=vp(p,i,e[0].dtype,m),d=I.computeOutShape(a.map(h=>h.shape),s),f=t.makeTensorInfo(d,e[0].dtype,c);return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var GF={kernelName:hs,backendName:"cpu",kernelFunc:hl};function ew(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:p}=n;ne([o,s],"conv2d");let m=I.convertConv2DDataFormat(u),c=I.computeConv2DInfo(o.shape,s.shape,i,l,a,p,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,y=c.padInfo.left,x=c.padInfo.top,T=c.dataFormat==="channelsLast",k=new yt(c.outShape,o.dtype),C=b.computeStrides(o.shape),A=b.computeStrides(s.shape),M=C[0],D=T?C[1]:C[2],R=T?C[2]:1,B=T?1:C[1],U=k.strides[0],W=T?k.strides[1]:k.strides[2],K=T?k.strides[2]:1,j=T?1:k.strides[1],V=t.data.get(o.dataId).values,q=t.data.get(s.dataId).values,ee=k.values;for(let Z=0;Z<c.batchSize;++Z){let te=Z*M,oe=Z*U;for(let ie=0;ie<c.outHeight;++ie){let se=oe+ie*W,ue=ie*c.strideHeight-x;for(let ye=0;ye<d;++ye){let fe=ue+ye*h;if(fe<0||fe>=c.inHeight)continue;let xe=ye*A[0],we=te+fe*D;for(let Fe=0;Fe<c.outWidth;++Fe){let Be=se+Fe*K,Ue=Fe*c.strideWidth-y;for(let Y=0;Y<f;++Y){let gt=Ue+Y*g;if(gt<0||gt>=c.inWidth)continue;let It=xe+Y*A[1],Nt=we+gt*R,Gt=It;for(let ft=0;ft<c.inChannels;++ft){let at=V[Nt+ft*B];for(let Ut=0;Ut<c.outChannels;++Ut)ee[Be+Ut*j]+=at*q[Gt+Ut];Gt+=c.outChannels}}}}}}return t.makeTensorInfo(k.shape,k.dtype,ee)}var UF={kernelName:fo,backendName:"cpu",kernelFunc:ew};function rte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:p}=n;ne([o,s],"conv2dBackpropFilter");let m=I.convertConv2DDataFormat(u),c=I.computeConv2DInfo(o.shape,p,i,1,a,l,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,y=c.dataFormat==="channelsLast",x=new yt(c.filterShape,"float32"),T=c.padInfo.left,k=c.padInfo.top,C=t.data.get(o.dataId).values,A=t.data.get(s.dataId).values,M=new yt(o.shape,o.dtype,C),D=new yt(s.shape,s.dtype,A);for(let R=0;R<h;++R){let B=Math.max(0,Math.ceil((k-R)/d)),U=Math.min(c.outHeight,(c.inHeight+k-R)/d);for(let W=0;W<g;++W){let K=Math.max(0,Math.ceil((T-W)/f)),j=Math.min(c.outWidth,(c.inWidth+T-W)/f);for(let V=0;V<c.inChannels;++V)for(let q=0;q<c.outChannels;++q){let ee=0;for(let Z=0;Z<c.batchSize;++Z)for(let te=B;te<U;++te){let oe=R+te*d-k;for(let ie=K;ie<j;++ie){let se=W+ie*f-T;y?ee+=M.get(Z,oe,se,V)*D.get(Z,te,ie,q):ee+=M.get(Z,V,oe,se)*D.get(Z,q,te,ie)}}x.set(ee,R,W,V,q)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var WF={kernelName:mm,backendName:"cpu",kernelFunc:rte};function nte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:p}=n;ne([o,s],"conv2dBackpropInput");let m=b.computeStrides(s.shape),c=b.computeStrides(o.shape),d=I.convertConv2DDataFormat(l),f=I.computeConv2DInfo(i,s.shape,a,1,u,p,!1,d),h=new yt(f.inShape,"float32"),g=h.values,y=t.data.get(o.dataId).values,x=t.data.get(s.dataId).values,[T,k,C]=m,{batchSize:A,filterHeight:M,filterWidth:D,inChannels:R,inHeight:B,inWidth:U,outChannels:W,outHeight:K,outWidth:j,strideHeight:V,strideWidth:q}=f;d=f.dataFormat;let ee=M-1-f.padInfo.top,Z=D-1-f.padInfo.left,te=d==="channelsLast",oe=h.strides[0],ie=te?h.strides[1]:h.strides[2],se=te?h.strides[2]:1,ue=te?1:h.strides[1],ye=c[0],fe=te?c[1]:c[2],xe=te?c[2]:1,we=te?1:c[1];for(let Fe=0;Fe<A;++Fe)for(let Be=0;Be<R;++Be)for(let Ue=0;Ue<B;++Ue){let Y=Ue-ee,gt=Math.max(0,Math.ceil(Y/V)),It=Math.min(K,(M+Y)/V);for(let Nt=0;Nt<U;++Nt){let Gt=Nt-Z,ft=Math.max(0,Math.ceil(Gt/q)),at=Math.min(j,(D+Gt)/q),Ut=0;for(let pr=gt;pr<It;++pr){let is=pr*V-Y;for(let zr=ft;zr<at;++zr){let us=zr*q-Gt,Sn=ye*Fe+fe*pr+xe*zr,Gn=T*(M-1-is)+k*(D-1-us)+C*Be;for(let Gr=0;Gr<W;++Gr){let so=y[Sn+we*Gr],br=x[Gn+Gr];Ut+=so*br}}}let zn=oe*Fe+ie*Ue+se*Nt+ue*Be;g[zn]=Ut}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var KF={kernelName:ho,backendName:"cpu",kernelFunc:nte};function ote(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n;ne([o,s],"conv3d");let l=I.computeConv3DInfo(o.shape,s.shape,i,u,a),{filterDepth:p,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=l,y=g.front,x=g.left,T=g.top,k=new yt(l.outShape,o.dtype),C=t.data.get(o.dataId).values,A=t.data.get(s.dataId).values,M=k.values,D=b.computeStrides(o.shape),R=b.computeStrides(s.shape);for(let B=0;B<l.batchSize;++B){let U=B*D[0],W=B*k.strides[0];for(let K=0;K<l.outDepth;++K){let j=W+K*k.strides[1],V=K*l.strideDepth-y;for(let q=0;q<p;++q){let ee=V+q*d;if(ee<0||ee>=l.inDepth)continue;let Z=q*R[0],te=U+ee*D[1];for(let oe=0;oe<l.outHeight;++oe){let ie=j+oe*k.strides[2],se=oe*l.strideHeight-T;for(let ue=0;ue<m;++ue){let ye=se+ue*f;if(ye<0||ye>=l.inHeight)continue;let fe=Z+ue*R[1],xe=te+ye*D[2];for(let we=0;we<l.outWidth;++we){let Fe=ie+we*l.outChannels,Be=we*l.strideWidth-x;for(let Ue=0;Ue<c;++Ue){let Y=Be+Ue*h;if(Y<0||Y>=l.inWidth)continue;let gt=fe+Ue*R[2],It=xe+Y*l.inChannels,Nt=gt;for(let Gt=0;Gt<l.inChannels;++Gt){let ft=C[It+Gt];for(let at=0;at<l.outChannels;++at)M[Fe+at]+=ft*A[Nt+at];Nt+=l.outChannels}}}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var VF={kernelName:Ou,backendName:"cpu",kernelFunc:ote};function ste(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,filterShape:u}=n;ne([o,s],"conv3dBackpropFilterV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),m=I.computeConv3DInfo(o.shape,u,i,1,a),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,y=m.filterWidth,x=new yt(m.filterShape,"float32"),T=x.values,[k,C,A,M]=x.strides,D=t.data.get(s.dataId).values,[R,B,U,W]=p,K=t.data.get(o.dataId).values,[j,V,q,ee]=l,Z=m.padInfo.front,te=m.padInfo.left,oe=m.padInfo.top;for(let ie=0;ie<h;++ie){let se=Math.max(0,Math.ceil((Z-ie)/c)),ue=Math.min(m.outDepth,(m.inDepth+Z-ie)/c),ye=ie*k;for(let fe=0;fe<g;++fe){let xe=Math.max(0,Math.ceil((oe-fe)/d)),we=Math.min(m.outHeight,(m.inHeight+oe-fe)/d),Fe=fe*C+ye;for(let Be=0;Be<y;++Be){let Ue=Math.max(0,Math.ceil((te-Be)/f)),Y=Math.min(m.outWidth,(m.inWidth+te-Be)/f),gt=Be*A+Fe;for(let It=0;It<m.inChannels;++It){let Nt=It*M+gt;for(let Gt=0;Gt<m.outChannels;++Gt){let ft=0;for(let at=0;at<m.batchSize;++at){let Ut=at*j,zn=at*R;for(let pr=se;pr<ue;++pr){let zr=(ie+pr*c-Z)*V+Ut,us=pr*B+zn;for(let Sn=xe;Sn<we;++Sn){let Gr=(fe+Sn*d-oe)*q+zr,so=Sn*U+us;for(let br=Ue;br<Y;++br){let ps=(Be+br*f-te)*ee+Gr,Il=br*W+so;ft+=K[ps+It]*D[Il+Gt]}}}}T[Nt+Gt]=ft}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var jF={kernelName:cm,backendName:"cpu",kernelFunc:ste};function ate(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:i,strides:a,inputShape:u}=n;ne([o],"conv3dBackpropInputV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),m=I.computeConv3DInfo(u,s.shape,a,1,i),c=new yt(m.inShape,"float32"),d=c.values,[f,h,g,y]=c.strides,x=t.data.get(o.dataId).values,[T,k,C,A]=l,M=t.data.get(s.dataId).values,[D,R,B,U]=p,{batchSize:W,filterDepth:K,filterHeight:j,filterWidth:V,inChannels:q,inDepth:ee,inHeight:Z,inWidth:te,outChannels:oe,outDepth:ie,outHeight:se,outWidth:ue,strideDepth:ye,strideHeight:fe,strideWidth:xe}=m,we=K-1-m.padInfo.front,Fe=j-1-m.padInfo.top,Be=V-1-m.padInfo.left;for(let Ue=0;Ue<W;++Ue)for(let Y=0;Y<q;++Y)for(let gt=0;gt<ee;++gt){let It=gt-we,Nt=Math.max(0,Math.ceil(It/ye)),Gt=Math.min(ie,(K+It)/ye);for(let ft=0;ft<Z;++ft){let at=ft-Fe,Ut=Math.max(0,Math.ceil(at/fe)),zn=Math.min(se,(j+at)/fe);for(let pr=0;pr<te;++pr){let is=pr-Be,zr=Math.max(0,Math.ceil(is/xe)),us=Math.min(ue,(V+is)/xe),Sn=0;for(let Gn=Nt;Gn<Gt;++Gn){let Gr=Gn*ye-It;for(let so=Ut;so<zn;++so){let br=so*fe-at;for(let ls=zr;ls<us;++ls){let ps=ls*xe-is,Il=T*Ue+k*Gn+C*so+A*ls,ed=D*(K-1-Gr)+R*(j-1-br)+B*(V-1-ps)+U*Y;for(let Un=0;Un<oe;++Un){let jp=x[Il+Un],td=M[ed+Un];Sn+=jp*td}}}}d[f*Ue+h*gt+g*ft+y*pr+Y]=Sn}}}return t.makeTensorInfo(c.shape,c.dtype,c.values)}var HF={kernelName:dm,backendName:"cpu",kernelFunc:ate};var ite=Re(go,r=>Math.cos(r)),qF={kernelName:go,backendName:"cpu",kernelFunc:ite};var ute=Re(bo,r=>Math.cosh(r)),XF={kernelName:bo,backendName:"cpu",kernelFunc:ute};function lte(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=n,[p,m,c,d]=o.shape,f=s.shape[0],[h,g]=a,y=Ce([f,h,g,d],"float32"),x=t.data.get(s.dataId).values,T=t.data.get(i.dataId).values,k=t.data.get(o.dataId).values,C=b.computeStrides(o.shape),A=b.computeStrides(y.shape);for(let M=0;M<f;M++){let D=M*4,R=x[D],B=x[D+1],U=x[D+2],W=x[D+3],K=T[M];if(K>=p)continue;let j=h>1?(U-R)*(m-1)/(h-1):0,V=g>1?(W-B)*(c-1)/(g-1):0;for(let q=0;q<h;q++){let ee=h>1?R*(m-1)+q*j:.5*(R+U)*(m-1);if(ee<0||ee>m-1){for(let Z=0;Z<g;Z++)for(let te=0;te<d;te++){let oe=te+Z*A[2]+q*A[1]+M*A[0];y.values[oe]=l}continue}if(u==="bilinear"){let Z=Math.floor(ee),te=Math.ceil(ee),oe=ee-Z;for(let ie=0;ie<g;ie++){let se=g>1?B*(c-1)+ie*V:.5*(B+W)*(c-1);if(se<0||se>c-1){for(let xe=0;xe<d;xe++){let we=xe+ie*A[2]+q*A[1]+M*A[0];y.values[we]=l}continue}let ue=Math.floor(se),ye=Math.ceil(se),fe=se-ue;for(let xe=0;xe<d;xe++){let we=xe+ue*C[2]+Z*C[1]+K*C[0],Fe=k[we];we=xe+ye*C[2]+Z*C[1]+K*C[0];let Be=k[we];we=xe+ue*C[2]+te*C[1]+K*C[0];let Ue=k[we];we=xe+ye*C[2]+te*C[1]+K*C[0];let Y=k[we],gt=Fe+(Be-Fe)*fe,It=Ue+(Y-Ue)*fe;we=xe+ie*A[2]+q*A[1]+M*A[0],y.values[we]=gt+(It-gt)*oe}}}else for(let Z=0;Z<g;++Z){let te=g>1?B*(c-1)+Z*V:.5*(B+W)*(c-1);if(te<0||te>c-1){for(let se=0;se<d;se++){let ue=se+Z*A[2]+q*A[1]+M*A[0];y.values[ue]=l}continue}let oe=Math.round(te),ie=Math.round(ee);for(let se=0;se<d;se++){let ue=se+oe*C[2]+ie*C[1]+K*C[0],ye=se+Z*A[2]+q*A[1]+M*A[0];y.values[ye]=k[ue]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var YF={kernelName:aa,backendName:"cpu",kernelFunc:lte};function pte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n;ne(o,"cumsum");let u=I.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=lr({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=I.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let m=Kt(l.dtype,"int32"),c=b.makeZerosTypedArray(b.sizeFromShape(l.shape),m),d=t.data.get(l.dataId).values,f=l.shape[l.shape.length-1],h=a?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<d.length;y+=f)for(let x=0;x<f;x++){let T=h(y,x);if(x===0)c[T]=i?0:d[T];else{let k=h(y,x-1);c[T]=i?d[k]+c[k]:d[T]+c[k]}}let g=t.makeTensorInfo(l.shape,m,c);if(u!=null){let y=I.getUndoAxesPermutation(u),x=lr({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),x}return g}var QF={kernelName:sa,backendName:"cpu",kernelFunc:pte};function mte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Nc(u,l,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=Zy(u,l,i,a);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var ZF={kernelName:fm,backendName:"cpu",kernelFunc:mte};function cte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n;b.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=o.shape[0],u=o.shape[1],l=o.shape[2],p=o.shape[3],m=u*s,c=l*s,d=p/(s*s),f=t.data.get(o.dataId).values,h=new Float32Array(a*m*c*d),g=0;for(let y=0;y<a;++y)for(let x=0;x<m;++x){let T=Math.floor(x/s),k=x%s;for(let C=0;C<c;++C){let A=Math.floor(C/s),M=C%s,D=(k*s+M)*d;for(let R=0;R<d;++R){let U=R+D+p*(A+l*(T+u*y));h[g++]=f[U]}}}return t.makeTensorInfo([a,m,c,d],o.dtype,h)}var JF={kernelName:ia,backendName:"cpu",kernelFunc:cte};function tw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n;ne([o,s],"depthwiseConv2DNative");let p=b.computeStrides(o.shape),m=b.computeStrides(s.shape),c=u;c==null&&(c=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let d=I.computeConv2DInfo(o.shape,s.shape,i,c,a,l,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:y,padInfo:x}=d,T=x.left,k=x.top,C=d.outChannels/d.inChannels,A=new yt(d.outShape,o.dtype),M=t.data.get(o.dataId).values,D=t.data.get(s.dataId).values,R=A.values;for(let B=0;B<d.batchSize;++B){let U=B*p[0],W=B*A.strides[0];for(let K=0;K<d.outHeight;++K){let j=W+K*A.strides[1],V=K*d.strideHeight-k;for(let q=0;q<f;++q){let ee=V+q*g;if(ee<0||ee>=d.inHeight)continue;let Z=q*m[0],te=U+ee*p[1];for(let oe=0;oe<d.outWidth;++oe){let ie=j+oe*A.strides[2],se=oe*d.strideWidth-T;for(let ue=0;ue<h;++ue){let ye=se+ue*y;if(ye<0||ye>=d.inWidth)continue;let fe=Z+ue*m[1],xe=te+ye*d.inChannels,we=ie,Fe=fe;for(let Be=0;Be<d.inChannels;++Be){let Ue=M[xe+Be];for(let Y=0;Y<C;++Y)R[we+Y]+=Ue*D[Fe+Y];we+=C,Fe+=C}}}}}}return t.makeTensorInfo(A.shape,A.dtype,A.values)}var eL={kernelName:yo,backendName:"cpu",kernelFunc:tw};function dte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:p}=n;ne([o,s],"depthwiseConv2dNativeBackpropFilter");let m=I.computeConv2DInfo(o.shape,p,i,a,u,l,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new yt(m.filterShape,"float32"),y=m.padInfo.left,x=m.padInfo.top,T=m.outChannels/m.inChannels,k=t.data.get(o.dataId).values,C=new yt(o.shape,o.dtype,k),A=t.data.get(s.dataId).values,M=new yt(s.shape,s.dtype,A);for(let D=0;D<f;++D){let R=Math.max(0,Math.ceil((x-D)/c)),B=Math.min(m.outHeight,(m.inHeight+x-D)/c);for(let U=0;U<h;++U){let W=Math.max(0,Math.ceil((y-U)/d)),K=Math.min(m.outWidth,(m.inWidth+y-U)/d);for(let j=0;j<m.outChannels;++j){let V=Math.trunc(j/T),q=j%T,ee=0;for(let Z=0;Z<m.batchSize;++Z)for(let te=R;te<B;++te){let oe=D+te*c-x;for(let ie=W;ie<K;++ie){let se=U+ie*d-y;ee+=C.get(Z,oe,se,V)*M.get(Z,te,ie,j)}}g.set(ee,D,U,V,q)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var tL={kernelName:hm,backendName:"cpu",kernelFunc:dte};function fte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:p}=n;ne([o,s],"depthwiseConv2DNativeBackpropInput");let m=b.computeStrides(o.shape),c=b.computeStrides(s.shape),d=I.computeConv2DInfo(p,s.shape,i,a,u,l,!0),f=new yt(d.inShape,"float32"),h=f.values,[g,y,x]=f.strides,T=t.data.get(o.dataId).values,[k,C,A]=m,M=t.data.get(s.dataId).values,[D,R,B]=c,{batchSize:U,filterHeight:W,filterWidth:K,inChannels:j,inHeight:V,inWidth:q,outChannels:ee,outHeight:Z,outWidth:te,strideHeight:oe,strideWidth:ie}=d,se=W-1-d.padInfo.top,ue=K-1-d.padInfo.left,ye=ee/j;for(let fe=0;fe<U;++fe)for(let xe=0;xe<j;++xe)for(let we=0;we<V;++we){let Fe=we-se,Be=Math.max(0,Math.ceil(Fe/oe)),Ue=Math.min(Z,(W+Fe)/oe);for(let Y=0;Y<q;++Y){let gt=Y-ue,It=Math.max(0,Math.ceil(gt/ie)),Nt=Math.min(te,(K+gt)/ie),Gt=0;for(let ft=Be;ft<Ue;++ft){let at=ft*oe-Fe;for(let Ut=It;Ut<Nt;++Ut){let zn=Ut*ie-gt,pr=k*fe+C*ft+A*Ut,is=D*(W-1-at)+R*(K-1-zn)+B*xe;for(let zr=0;zr<ye;++zr){let us=xe*ye+zr,Sn=T[pr+us],Gn=M[is+zr];Gt+=Sn*Gn}}}h[g*fe+y*we+x*Y+xe]=Gt}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}var rL={kernelName:gm,backendName:"cpu",kernelFunc:fte};function hte(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,i=Ce([o,o],n.dtype),a=i.values;for(let l=0;l<s.length;l++)a[l*o+l]=s[l];let u=[...n.shape,...n.shape];return t.makeTensorInfo(u,i.dtype,i.values)}var nL={kernelName:bm,backendName:"cpu",kernelFunc:hte};var oL={kernelName:zu,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:i,dilations:a}=t,u=e,l=u.data.get(n.dataId).values,p=n.shape.length,m=u.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:y,outWidth:x,padInfo:T,strideHeight:k,strideWidth:C,filterHeight:A,filterWidth:M,dilationHeight:D,dilationWidth:R,outShape:B}=I.computeDilation2DInfo(n.shape,o.shape,s,i,"NHWC",a),U=b.sizeFromShape(B),W=B.length,K=b.getArrayFromDType(n.dtype,U);for(let V=0;V<d;++V)for(let q=0;q<y;++q){let ee=q*k-T.top;for(let Z=0;Z<x;++Z){let te=Z*C-T.left;for(let oe=0;oe<g;++oe){let ie=Number.MIN_SAFE_INTEGER;for(let ue=0;ue<A;++ue){let ye=ee+ue*D;if(ye>=0&&ye<f)for(let fe=0;fe<M;++fe){let xe=te+fe*R;if(xe>=0&&xe<h){let we=b.locToIndex([V,ye,xe,oe],p,b.computeStrides(n.shape)),Fe=b.locToIndex([ue,fe,oe],c,b.computeStrides(o.shape)),Be=l[we]+m[Fe];Be>ie&&(ie=Be)}}}let se=b.locToIndex([V,q,Z,oe],W,b.computeStrides(B));K[se]=ie}}}return{dataId:u.write(b.toTypedArray(K,n.dtype),B,n.dtype),shape:B,dtype:n.dtype}}};var sL={kernelName:yd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),m=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:x,strideHeight:T,strideWidth:k,filterHeight:C,filterWidth:A,dilationHeight:M,dilationWidth:D,outShape:R}=I.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);b.assert(s.rank===R.length,()=>`Error in ${yd}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let B=b.toNestedArray(R,l.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let K=0;K<c;++K)for(let j=0;j<g;++j){let V=j*T-x.top;for(let q=0;q<y;++q){let ee=q*k-x.left;for(let Z=0;Z<h;++Z){let te=Number.MIN_SAFE_INTEGER,oe=0,ie=0;for(let se=0;se<C;++se){let ue=V+se*M;if(ue>=0&&ue<d)for(let ye=0;ye<A;++ye){let fe=ee+ye*D;if(fe>=0&&fe<f){let xe=p[K][ue][fe][Z]+m[se][ye][Z];xe>te&&(te=xe,oe=se,ie=ye)}}}U[oe][ie][Z]+=B[K][j][q][Z]}}}return{dataId:l.write(b.toTypedArray(U,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var aL={kernelName:bd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),m=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:x,strideHeight:T,strideWidth:k,filterHeight:C,filterWidth:A,dilationHeight:M,dilationWidth:D,outShape:R}=I.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);b.assert(s.rank===R.length,()=>`Error in ${bd}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let B=b.toNestedArray(R,l.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let K=0;K<c;++K)for(let j=0;j<g;++j){let V=j*T-x.top;for(let q=0;q<y;++q){let ee=q*k-x.left;for(let Z=0;Z<h;++Z){let te=Number.MIN_SAFE_INTEGER,oe=V<0?0:V,ie=ee<0?0:ee;for(let se=0;se<C;++se){let ue=V+se*M;if(ue>=0&&ue<d)for(let ye=0;ye<A;++ye){let fe=ee+ye*D;if(fe>=0&&fe<f){let xe=p[K][ue][fe][Z]+m[se][ye][Z];xe>te&&(te=xe,oe=ue,ie=fe)}}}U[K][oe][ie][Z]+=B[K][j][q][Z]}}}return{dataId:l.write(b.toTypedArray(U,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Iu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"sum");let a;o.dtype==="bool"?a=Ys({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):a=Qr({inputs:{x:o},backend:t});let u=a.shape.length,l=b.parseAxisParam(s,a.shape),p=I.getAxesPermutation(l,u),m=l,c=a;p!=null&&(c=lr({inputs:{x:a},backend:t,attrs:{perm:p}}),m=I.getInnerMostAxes(m.length,u)),I.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=I.computeOutAndReduceShapes(c.shape,m),h=I.upcastType(c.dtype,"int32"),g=_c(t,d,h),y=b.sizeFromShape(f),x=t.data.get(g.dataId).values,T=t.data.get(c.dataId).values;for(let k=0;k<x.length;++k){let C=k*y,A=0;for(let M=0;M<y;++M)A+=T[C+M];x[k]=A}if(i){let k=I.expandShapeToKeepDim(g.shape,l),C=g;g=ot({inputs:{x:g},backend:t,attrs:{shape:k}}),t.disposeIntermediateTensorInfo(C)}return t.disposeIntermediateTensorInfo(a),p!=null&&t.disposeIntermediateTensorInfo(c),g}var iL={kernelName:jo,backendName:"cpu",kernelFunc:Iu};function gte(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(a,u),m=p.length,c=null,d=i.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:x}=I.getEinsumPermutation(d,u[g]),T;I.isIdentityPermutation(y)?T=s[g]:(T=lr({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(T));let k=T.shape.slice();for(let C=0;C<x.length;++C)k.splice(x[C],0,1);b.arraysEqual(T.shape,k)||(T=ot({inputs:{x:T},backend:t,attrs:{shape:k}}),f.push(T)),c===null?c=T:(c=Sp({inputs:{a:T,b:c},backend:t}),f.push(c))}h<m-1&&(l[h]>=0&&(c=Iu({inputs:{x:c},backend:t,attrs:{axis:l[h]-(i.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var uL={kernelName:Gu,backendName:"cpu",kernelFunc:gte};function bte(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;ne([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),i=t.data.get(o.dataId).values,a=t.data.get(n.dataId).values;for(let u=0;u<i.length;++u){let l=i[u];l>=1?s[u]=a[u]:s[u]=a[u]*(l+1)}return t.makeTensorInfo(o.shape,"float32",s)}var lL={kernelName:ym,backendName:"cpu",kernelFunc:bte};var yte=I.ERF_P,xte=I.ERF_A1,Tte=I.ERF_A2,kte=I.ERF_A3,Ite=I.ERF_A4,Cte=I.ERF_A5,vte=Re(Gi,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+yte*t);return e*(1-((((Cte*n+Ite)*n+kte)*n+Tte)*n+xte)*n*Math.exp(-t*t))}),pL={kernelName:Gi,backendName:"cpu",kernelFunc:vte};function Fc(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),ot({inputs:{x:o},backend:t,attrs:{shape:a}})}var mL={kernelName:gs,backendName:"cpu",kernelFunc:Fc};var Ste=tt((r,e)=>r/e),qh=it(xo,Ste),Xh={kernelName:xo,backendName:"cpu",kernelFunc:qh};function fx(r,e,t){let n=r.shape,o=n[0],s=n[1],i=t.data.get(r.dataId),a=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[o,s],p=b.sizeFromShape(l),m=b.getTypedArrayFromDType("float32",p),c=b.getTypedArrayFromDType("float32",p);for(let g=0;g<o;g++){let y=Zs({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,s]}}),x=Zs({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=Sr({inputs:{real:y,imag:x},backend:t}),{real:k,imag:C}=wte(T,e,t),A=I.mergeRealAndImagArrays(k,C);for(let M=0;M<s;M++){let D=I.getComplexWithIndex(A,M);m[g*s+M]=D.real,c[g*s+M]=D.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(T)}let d=t.makeTensorInfo(l,"float32",m),f=t.makeTensorInfo(l,"float32",c),h=Sr({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),h}function wte(r,e,t){let n=b.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,i=t.data.get(o.complexTensorInfos.imag.dataId).values;if(_te(n)){let a=rw(s,i,n,e,t),u=[r.shape[0],r.shape[1]];if(e){let l=t.makeTensorInfo(u,"float32",a.real),p=t.makeTensorInfo(u,"float32",a.imag),m=t.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),c=Qr({inputs:{x:m},backend:t}),d=Xh.kernelFunc({inputs:{a:l,b:m},backend:t}),f=Xh.kernelFunc({inputs:{a:p,b:c},backend:t}),h=t.data.get(d.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return a}else{let a=I.mergeRealAndImagArrays(s,i),u=Ate(a,n,e);return I.splitRealAndImagArrays(u)}}function _te(r){return(r&r-1)==0}function rw(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=I.mergeRealAndImagArrays(r,e),i=t/2,a=I.complexWithEvenIndex(s),u=a.real,l=a.imag,p=[u.length],m=o.makeTensorInfo(p,"float32",u),c=o.makeTensorInfo(p,"float32",l),d=Sr({inputs:{real:m,imag:c},backend:o}),f=I.complexWithOddIndex(s),h=f.real,g=f.imag,y=[h.length],x=o.makeTensorInfo(y,"float32",h),T=o.makeTensorInfo(y,"float32",g),k=Sr({inputs:{real:x,imag:T},backend:o}),C=rw(u,l,i,n,o),A=C.real,M=C.imag,D=[A.length],R=o.makeTensorInfo(D,"float32",A),B=o.makeTensorInfo(D,"float32",M),U=Sr({inputs:{real:R,imag:B},backend:o}),W=rw(h,g,i,n,o),K=W.real,j=W.imag,V=[K.length],q=o.makeTensorInfo(V,"float32",K),ee=o.makeTensorInfo(V,"float32",j),Z=Sr({inputs:{real:q,imag:ee},backend:o}),te=I.exponents(t,n),oe=[te.real.length],ie=o.makeTensorInfo(oe,"float32",te.real),se=o.makeTensorInfo(oe,"float32",te.imag),ue=Sr({inputs:{real:ie,imag:se},backend:o}),ye=Sp({inputs:{a:ue,b:Z},backend:o}),fe=ku({inputs:{a:U,b:ye},backend:o}),xe=jh({inputs:{a:U,b:ye},backend:o}),we=Xs({inputs:{input:fe},backend:o}),Fe=Xs({inputs:{input:xe},backend:o}),Be=ki({inputs:{input:fe},backend:o}),Ue=ki({inputs:{input:xe},backend:o}),Y=hl({inputs:[we,Fe],backend:o,attrs:{axis:0}}),gt=hl({inputs:[Be,Ue],backend:o,attrs:{axis:0}}),It=o.data.get(Y.dataId).values,Nt=o.data.get(gt.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(k),o.disposeIntermediateTensorInfo(R),o.disposeIntermediateTensorInfo(B),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(se),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(ye),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(xe),o.disposeIntermediateTensorInfo(we),o.disposeIntermediateTensorInfo(Be),o.disposeIntermediateTensorInfo(Fe),o.disposeIntermediateTensorInfo(Ue),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(gt),{real:It,imag:Nt}}function Ate(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,i=0;for(let a=0;a<e;a++){let u=I.exponent(o*a,e,t),l=I.getComplexWithIndex(r,a);s+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}t&&(s/=e,i/=e),I.assignToTypedArray(n,s,i,o)}return n}function Nte(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=ot({inputs:{x:n},backend:t,attrs:{shape:[i,s]}}),u=fx(a,!1,t),l=ot({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var cL={kernelName:xm,backendName:"cpu",kernelFunc:Nte};function Yh(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,i=s||b.inferDtype(o),a=b.getArrayFromDType(i,b.sizeFromShape(n));return Dte(a,o,i),e.makeTensorInfo(n,i,a)}var dL={kernelName:ri,backendName:"cpu",kernelFunc:Yh};function Dte(r,e,t){r.fill(e)}var fL={kernelName:pa,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[i,a,u,l]=n.shape,p=o.data.get(n.dataId).values;for(let c=0;c<i;c++){let d=c*u*a*l;for(let f=0;f<a;f++){let h=f*(u*l);for(let g=0;g<u;g++){let y=g*l;for(let x=0;x<l;x++){let T=Math.round(u-g-1),k=d+h+y+x,C=p[k];if(T>=0&&T<u){let A=T*l,M=d+h+A+x;C=p[M]}s[k]=C}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Pte=tt((r,e)=>Math.floor(r/e)),Mte=it(Co,Pte,null,"int32"),hL={kernelName:Co,backendName:"cpu",kernelFunc:Mte};function Ete(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=ew({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(i){let g=h;h=ku({inputs:{a:h,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Ec(t,h,d,a,f),t.disposeIntermediateTensorInfo(g)}return h}var gL={kernelName:Ds,backendName:"cpu",kernelFunc:Ete};function Rte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=tw({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(i){let g=h;h=ku({inputs:{a:h,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Ec(t,h,d,a,f),t.disposeIntermediateTensorInfo(g)}return h}var bL={kernelName:Ps,backendName:"cpu",kernelFunc:Rte};function Fte(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=b.sizeFromShape(n.shape),i=o.shape,a=i[i.length-1],[u,l,p,m]=I.prepareAndValidate(n,o);if(l===0)return t.makeTensorInfo(u,n.dtype,[]);let c=t.data.get(o.dataId).values,d=t.bufferSync(n),f=Jy(c,d,n.dtype,l,a,p,m,n.shape,s);return t.makeTensorInfo(u,n.dtype,f.values)}var yL={kernelName:ma,backendName:"cpu",kernelFunc:Fte};function Lte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n;ne([o,s],"gatherV2");let u=b.parseAxisParam(i,o.shape)[0],l=t.data.get(s.dataId).values,p=o.shape[u];for(let k=0;k<l.length;++k){let C=l[k];b.assert(C<=p-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${p-1}]`)}let m=a;a==null&&(m=0);let c=b.sizeFromShape(s.shape),d=I.segment_util.collectGatherOpShapeInfo(o,s,u,m),f=ot({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=ot({inputs:{x:s},backend:t,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],y=t.bufferSync(h),x=t.bufferSync(f),T=ex(x,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(d.outputShape,T.dtype,T.values)}var xL={kernelName:bs,backendName:"cpu",kernelFunc:Lte};function Bte(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=ot({inputs:{x:n},backend:t,attrs:{shape:[i,s]}}),u=fx(a,!0,t),l=ot({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var TL={kernelName:Tm,backendName:"cpu",kernelFunc:Bte};var $te=Re(Ui,r=>Number.isFinite(r)?1:0,"bool"),kL={kernelName:Ui,backendName:"cpu",kernelFunc:$te};var Ote=Re(Wi,r=>Math.abs(r)===1/0?1:0,"bool"),IL={kernelName:Wi,backendName:"cpu",kernelFunc:Ote};var zte=Re(Ki,r=>Number.isNaN(r)?1:0,"bool"),CL={kernelName:Ki,backendName:"cpu",kernelFunc:zte};function Gte(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,i=tx(n,o,s);return e.makeTensorInfo([i.length],"float32",i)}var vL={kernelName:km,backendName:"cpu",kernelFunc:Gte};var Ute=Re(Vi,r=>Math.log1p(r)),SL={kernelName:Vi,backendName:"cpu",kernelFunc:Ute};var Wte=tt((r,e)=>r&&e),Kte=it(ha,Wte,null,"bool"),wL={kernelName:ha,backendName:"cpu",kernelFunc:Kte};var Vte=Re(ji,r=>r?0:1,"bool"),_L={kernelName:ji,backendName:"cpu",kernelFunc:Vte};var jte=tt((r,e)=>r||e),Hte=it(Dl,jte,null,"bool"),AL={kernelName:Dl,backendName:"cpu",kernelFunc:Hte};function qte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:i,alpha:a,beta:u}=n;ne(o,"LRN");let l=o.shape[3],p=l-1,m=t.data.get(o.dataId).values,c=b.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%l,y=h-g+Math.max(0,g-s),x=h-g+Math.min(g+s,p),T=0;for(;y<=x;y++){let k=m[y];T+=k*k}return T}for(let h=0;h<c;h++){let g=f(h),y=m[h]*Math.pow(i+a*g,-u);d[h]=y}return t.makeTensorInfo(o.shape,o.dtype,d)}var NL={kernelName:Wu,backendName:"cpu",kernelFunc:qte};function Xte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:i}=e,{depthRadius:a,bias:u,alpha:l,beta:p}=n;ne(i,"LRNGrad");let m=b.sizeFromShape(i.shape),c=i.shape[3],d=t.data.get(i.dataId).values,f=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(m),y=m;for(let x=0;x<y;x++){let T=x%c,k=x-T+Math.max(0,T-a),C=x-T+Math.min(c,T+a+1),A=0;for(let M=k;M<C;M++)A+=Math.pow(f[M],2);A=l*A+u;for(let M=k;M<C;M++){let D=-2*l*p*f[M]*h[x]/A;x===M&&(D+=Math.pow(A,-p)),D*=d[x],g[M]+=D}}return t.makeTensorInfo(i.shape,o.dtype,g)}var DL={kernelName:Im,backendName:"cpu",kernelFunc:Xte};function nw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n,a=t,u=o.shape,l=u.length,p=b.parseAxisParam(s,u),m=p,c=I.getAxesPermutation(m,l),d=a.data.get(o.dataId).values;if(c!=null){let k=new Array(l);for(let C=0;C<k.length;C++)k[C]=u[c[C]];d=Dc(d,u,o.dtype,c,k),m=I.getInnerMostAxes(m.length,l),u=k}ne(o,"max"),I.assertAxesAreInnerMostDims("max",m,l);let[f,h]=I.computeOutAndReduceShapes(u,m),g=b.sizeFromShape(h),y=rx(d,g,f,o.dtype),x=a.write(y,f,o.dtype),T=f;return i&&(T=I.expandShapeToKeepDim(f,p)),{dataId:x,shape:T,dtype:o.dtype}}var PL={kernelName:Ao,backendName:"cpu",kernelFunc:nw};function Yte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,i,l,a,u),m;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))m=Qr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Rc(c,o.shape,o.dtype,d,p,"max");m=t.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var ML={kernelName:Do,backendName:"cpu",kernelFunc:Yte};function Qte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n;ne(o,"maxPool3d");let p=I.computePool3DInfo(o.shape,s,i,1,a,u,l),m=t.data.get(o.dataId).values,c=dx(m,o.shape,o.dtype,b.computeStrides(o.shape),p,"max");return t.makeTensorInfo(c.shape,"float32",c.values)}var EL={kernelName:Ku,backendName:"cpu",kernelFunc:Qte};function Zte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n;ne([o,s],"maxPool3DGrad");let p=I.computePool3DInfo(s.shape,i,a,1,u,l),m=t.bufferSync(s),c=NF(m,p),d=p.strideDepth,f=p.strideHeight,h=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,x=p.dilationWidth,T=p.effectiveFilterDepth,k=p.effectiveFilterHeight,C=p.effectiveFilterWidth,A=T-1-p.padInfo.front,M=C-1-p.padInfo.left,D=k-1-p.padInfo.top,R=Ce(s.shape,"float32"),B=t.bufferSync(o);for(let U=0;U<p.batchSize;++U)for(let W=0;W<p.inChannels;++W)for(let K=0;K<p.inDepth;++K)for(let j=0;j<p.inHeight;++j)for(let V=0;V<p.inWidth;++V){let q=K-A,ee=j-D,Z=V-M,te=0;for(let oe=0;oe<T;oe+=g){let ie=(q+oe)/d;if(!(ie<0||ie>=p.outDepth||Math.floor(ie)!==ie))for(let se=0;se<k;se+=y){let ue=(ee+se)/f;if(!(ue<0||ue>=p.outHeight||Math.floor(ue)!==ue))for(let ye=0;ye<C;ye+=x){let fe=(Z+ye)/h;if(fe<0||fe>=p.outWidth||Math.floor(fe)!==fe)continue;let xe=T*k*C-1-c.get(U,ie,ue,fe,W),we=oe*k*C+se*C+ye,Fe=xe===we?1:0;if(Fe===0)continue;te+=B.get(U,ie,ue,fe,W)*Fe}}}R.set(te,U,K,j,V,W)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}var RL={kernelName:vm,backendName:"cpu",kernelFunc:Zte};function Jte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:i}=e,a=s;ne([s,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=I.computePool2DInfo(a.shape,u,l,1,p,m),d=t.data.get(a.dataId).values,f=Ce(c.outShape,a.dtype,cx(d,a.shape,a.dtype,c).values),h=c.strideHeight,g=c.strideWidth,y=c.dilationHeight,x=c.dilationWidth,T=c.effectiveFilterHeight,k=c.effectiveFilterWidth,C=k-1-c.padInfo.left,A=T-1-c.padInfo.top,M=Ce(a.shape,"float32"),D=t.data.get(o.dataId).values,R=Ce(o.shape,"float32",D);for(let B=0;B<c.batchSize;++B)for(let U=0;U<c.inChannels;++U)for(let W=0;W<c.inHeight;++W)for(let K=0;K<c.inWidth;++K){let j=W-A,V=K-C,q=0;for(let ee=0;ee<T;ee+=y){let Z=(j+ee)/h;if(!(Z<0||Z>=c.outHeight||Math.floor(Z)!==Z))for(let te=0;te<k;te+=x){let oe=(V+te)/g;if(oe<0||oe>=c.outWidth||Math.floor(oe)!==oe)continue;let ie=T*k-1-f.get(B,Z,oe,U),se=ee*k+te,ue=ie===se?1:0;if(ue===0)continue;q+=R.get(B,Z,oe,U)*ue}}M.set(q,B,W,K,U)}return t.makeTensorInfo(M.shape,M.dtype,M.values)}var FL={kernelName:Cm,backendName:"cpu",kernelFunc:Jte};function LL(r,e,t,n,o){let s=b.computeStrides(e),i=Rc(r,e,t,s,o,"max"),a=cx(r,e,t,o,!0,n);return[i.values,a.values]}var BL={kernelName:Sm,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=e,u=t;ne(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,p=I.computePool2DInfo(n.shape,o,s,[1,1],i),[m,c]=LL(l,n.shape,n.dtype,a,p),d=u.write(m,p.outShape,n.dtype),f=u.write(c,p.outShape,n.dtype);return[{dataId:d,shape:p.outShape,dtype:n.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};function ere(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=b.parseAxisParam(s,o.shape),l=I.computeOutAndReduceShapes(o.shape,a)[1],p=b.sizeFromShape(l),m=[],c=t.makeTensorInfo([],"float32",new Float32Array([p]));m.push(c);let d=Ys({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});m.push(d);let f=qh({inputs:{a:d,b:c},backend:t});m.push(f);let h=Iu({inputs:{x:f},backend:t,attrs:{axis:s,keepDims:i}});return m.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var $L={kernelName:Po,backendName:"cpu",kernelFunc:ere};function tre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"min");let a=b.parseAxisParam(s,o.shape),u=a,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",u,p.shape.length);let[m,c]=I.computeOutAndReduceShapes(p.shape,u),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let x=y*d,T=h[x];for(let k=0;k<d;++k){let C=h[x+k];(Number.isNaN(C)||C<T)&&(T=C)}f[y]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(m,p.dtype,f);if(i){let y=I.expandShapeToKeepDim(m,a),x=ot({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x}return g}var OL={kernelName:Mo,backendName:"cpu",kernelFunc:tre};function rre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:i}=n;ne(o,"mirrorPad");let a=s.map((T,k)=>T[0]+o.shape[k]+T[1]),u=s.map(T=>T[0]),l=s.map((T,k)=>T[0]+o.shape[k]),p=i==="reflect"?0:1,m=t.data.get(o.dataId).values,c=o.shape.length,d=b.computeStrides(o.shape),f=b.sizeFromShape(a),h=a.length,g=b.computeStrides(a),y=b.getTypedArrayFromDType(o.dtype,f);for(let T=0;T<f;T++){let k=b.indexToLoc(T,h,g);for(let A=0;A<h;A++)k[A]<u[A]?k[A]=u[A]*2-k[A]-p:k[A]>=l[A]&&(k[A]=(l[A]-1)*2-k[A]+p);k=k.map((A,M)=>A-u[M]);let C=b.locToIndex(k,c,d);y[T]=m[C]}return{dataId:t.write(y,a,o.dtype),shape:a,dtype:o.dtype}}var zL={kernelName:Ro,backendName:"cpu",kernelFunc:rre};var nre=tt((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),ore=it(Hi,nre),GL={kernelName:Hi,backendName:"cpu",kernelFunc:ore};var WL=_l(Vd());function ow(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=o.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let u=b.parseAxisParam([a],o.shape),l=nw({inputs:{x:o},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),p=I.expandShapeToKeepDim(l.shape,u),m=ot({inputs:{x:l},backend:t,attrs:{shape:p}}),c=jh({inputs:{a:o,b:m},backend:t}),d=PS({inputs:{x:c},backend:t}),f=Iu({inputs:{x:d},backend:t,attrs:{axis:u,keepDims:!1}}),h=ot({inputs:{x:f},backend:t,attrs:{shape:p}}),g=qh({inputs:{a:d,b:h},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var UL={kernelName:Ho,backendName:"cpu",kernelFunc:ow};function sre(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:i,normalized:a}=n;ne(o,"multinomial");let u=a?o:ow({inputs:{logits:o},backend:t,attrs:{dim:-1}}),l=u.shape[0],p=u.shape[1],m=t.data.get(u.dataId).values,c=[l,s],d=b.makeZerosTypedArray(b.sizeFromShape(c),"int32");for(let f=0;f<l;++f){let h=f*p,g=new Float32Array(p-1);g[0]=m[h];for(let T=1;T<g.length;++T)g[T]=g[T-1]+m[h+T];let y=WL.alea(i.toString()),x=f*s;for(let T=0;T<s;++T){let k=y();d[x+T]=g.length;for(let C=0;C<g.length;C++)if(k<g[C]){d[x+T]=C;break}}}return a||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(c,"int32",d)}var KL={kernelName:wm,backendName:"cpu",kernelFunc:sre};var are=Tr.nonMaxSuppressionV3Impl;function ire(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n;ne(o,"NonMaxSuppression");let l=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:m}=are(l,p,i,a,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var VL={kernelName:ba,backendName:"cpu",kernelFunc:ire};var ure=Tr.nonMaxSuppressionV4Impl;function lre(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=n;ne(o,"NonMaxSuppressionPadded");let p=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=ure(p,m,i,a,u,l);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var jL={kernelName:qi,backendName:"cpu",kernelFunc:lre};var pre=Tr.nonMaxSuppressionV5Impl;function mre(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n;ne(o,"NonMaxSuppressionWithScore");let p=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,c=i,d=a,f=u,h=l,{selectedIndices:g,selectedScores:y}=pre(p,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var HL={kernelName:ya,backendName:"cpu",kernelFunc:mre};function cre(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:i,offValue:a}=n;ne(o,"oneHot");let u=b.sizeFromShape(o.shape),l=new Float32Array(u*s);l.fill(a);let p=t.data.get(o.dataId).values;for(let m=0;m<u;++m)p[m]>=0&&p[m]<s&&(l[m*s+p[m]]=i);return t.makeTensorInfo([...o.shape,s],"int32",l)}var qL={kernelName:xa,backendName:"cpu",kernelFunc:cre};function Qh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Xs({inputs:{input:n},backend:t}),s=Qh({inputs:{x:o},backend:t}),i=ki({inputs:{input:n},backend:t}),a=Qh({inputs:{x:i},backend:t}),u=Sr({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return Yh({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var XL={kernelName:_s,backendName:"cpu",kernelFunc:Qh};function YL(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Xs({inputs:{input:n},backend:t}),s=YL({inputs:{x:o},backend:t}),i=ki({inputs:{input:n},backend:t}),a=Qh({inputs:{x:i},backend:t}),u=Sr({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return Yh({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var QL={kernelName:xs,backendName:"cpu",kernelFunc:YL};function sw(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Fc({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(p=>{let m=Fc({inputs:{input:p},backend:t,attrs:{dim:o}});return a.push(m),m}),l=hl({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var ZL={kernelName:Ts,backendName:"cpu",kernelFunc:sw};function dre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;ne(o,"pad");let a=s.map((x,T)=>x[0]+o.shape[T]+x[1]),u=s.map(x=>x[0]),l=t.data.get(o.dataId).values,p=b.sizeFromShape(o.shape),m=o.shape.length,c=b.computeStrides(o.shape),d=b.sizeFromShape(a),f=a.length,h=b.computeStrides(a),g=b.getTypedArrayFromDType(o.dtype,d);i!==0&&g.fill(i);for(let x=0;x<p;x++){let k=b.indexToLoc(x,m,c).map((A,M)=>A+u[M]),C=b.locToIndex(k,f,h);g[C]=l[x]}return{dataId:t.write(g,a,o.dtype),shape:a,dtype:o.dtype}}var hx={kernelName:Lo,backendName:"cpu",kernelFunc:dre};var fre=tt((r,e)=>Math.pow(r,e)),hre=it(Bo,fre),JL={kernelName:Bo,backendName:"cpu",kernelFunc:hre};function gre(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:i}=t,a=wp(n,o,i,s);return e.makeTensorInfo([a.length],s,a)}var eB={kernelName:ni,backendName:"cpu",kernelFunc:gre};var bre=Re(Xi,r=>1/r),tB={kernelName:Xi,backendName:"cpu",kernelFunc:bre};function yre(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n;ne(o,"resizeBilinear");let u=b.computeStrides(o.shape),[l,p]=a,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(b.sizeFromShape([m,l,p,f])),y=[s&&l>1?c-1:c,s&&p>1?d-1:d],x=[s&&l>1?l-1:l,s&&p>1?p-1:p],T=0,k=y[0]/x[0],C=y[1]/x[1];for(let A=0;A<m;A++)for(let M=0;M<l;M++){let D;i?D=k*(M+.5)-.5:D=k*M;let R=Math.max(0,Math.floor(D)),B=D-R,U=Math.min(c-1,Math.ceil(D)),W=A*u[0]+R*u[1],K=A*u[0]+U*u[1];for(let j=0;j<p;j++){let V;i?V=C*(j+.5)-.5:V=C*j;let q=Math.max(0,Math.floor(V)),ee=V-q,Z=Math.min(d-1,Math.ceil(V)),te=W+q*u[2],oe=K+q*u[2],ie=W+Z*u[2],se=K+Z*u[2];for(let ue=0;ue<f;ue++){let ye=h[te+ue],fe=h[oe+ue],xe=h[ie+ue],we=h[se+ue],Fe=ye+(xe-ye)*ee,Be=fe+(we-fe)*ee,Ue=Fe+(Be-Fe)*B;g[T++]=Ue}}}return t.makeTensorInfo([m,l,p,f],"float32",g)}var rB={kernelName:zo,backendName:"cpu",kernelFunc:yre};function xre(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n;ne([s,o],"resizeBilinearGrad");let a=b.computeStrides(o.shape),[u,l,p,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(u*l*p*m),h=[i&&c>1?l-1:l,i&&d>1?p-1:p],g=[i&&c>1?c-1:c,i&&d>1?d-1:d],y=h[0]/g[0],x=h[1]/g[1],T=t.data.get(s.dataId).values,k=0;for(let C=0;C<u;C++){let A=C*a[0];for(let M=0;M<c;M++){let D=M*y,R=Math.floor(D),B=Math.min(Math.ceil(D),l-1),U=A+R*a[1],W=A+B*a[1],K=D-R,j=1-K;for(let V=0;V<d;V++){let q=V*x,ee=Math.floor(q),Z=Math.min(Math.ceil(q),p-1),te=q-ee,oe=1-te,ie=U+ee*a[2],se=U+Z*a[2],ue=W+ee*a[2],ye=W+Z*a[2],fe=j*oe,xe=j*te,we=K*oe,Fe=K*te;for(let Be=0;Be<m;Be++){let Ue=T[k++];f[ie+Be]+=Ue*fe,f[se+Be]+=Ue*xe,f[ue+Be]+=Ue*we,f[ye+Be]+=Ue*Fe}}}}return t.makeTensorInfo([u,p,l,m],"float32",f)}var nB={kernelName:Am,backendName:"cpu",kernelFunc:xre};function Tre(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n;ne(o,"resizeNearestNeighbor");let u=b.computeStrides(o.shape),[l,p]=a,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(m*l*p*f),y=[s&&l>1?c-1:c,s&&p>1?d-1:d],x=[s&&l>1?l-1:l,s&&p>1?p-1:p],T=y[0]/x[0],k=y[1]/x[1],C=0;for(let A=0;A<m;A++){let M=A*u[0];for(let D=0;D<l;D++){let R=i?T*(D+.5):T*D,B=Math.min(c-1,s?Math.round(R):Math.floor(R));i&&(B=Math.max(0,B));let U=M+B*u[1];for(let W=0;W<p;W++){let K=i?k*(W+.5):k*W,j=Math.min(d-1,s?Math.round(K):Math.floor(K));i&&(j=Math.max(0,j));let V=U+j*u[2];for(let q=0;q<f;q++){let ee=h[V+q];g[C++]=ee}}}}return t.makeTensorInfo([m,l,p,f],o.dtype,g)}var oB={kernelName:oi,backendName:"cpu",kernelFunc:Tre};function kre(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n;ne([s,o],"resizeNearestNeighborGrad");let a=b.computeStrides(o.shape),u=b.computeStrides(s.shape),[l,p,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(l*p*m*c),g=t.data.get(s.dataId).values,y=[i&&d>1?p-1:p,i&&f>1?m-1:m],x=[i&&d>1?d-1:d,i&&f>1?f-1:f],T=y[0]/x[0],k=y[1]/x[1],C=1/T,A=1/k,M=Math.ceil(C)*2+2,D=Math.ceil(A)*2+2;for(let R=0;R<l;R++){let B=R*a[0];for(let U=0;U<p;U++){let W=B+U*a[1],K=Math.floor(U*C),j=Math.floor(K-M/2);for(let V=0;V<m;V++){let q=W+V*a[2],ee=Math.floor(V*A),Z=Math.floor(ee-D/2);for(let te=0;te<c;te++){let oe=0;for(let ie=0;ie<M;ie++){let se=ie+j;if(se<0||se>=d)continue;let ue=B+se*u[1],ye=se*T,fe=Math.min(p-1,i?Math.round(ye):Math.floor(ye));if(U===fe)for(let xe=0;xe<D;xe++){let we=xe+Z;if(we<0||we>=f)continue;let Fe=ue+we*u[2],Be=we*k,Ue=Math.min(m-1,i?Math.round(Be):Math.floor(Be));V===Ue&&(oe+=g[Fe+te])}}h[q+te]=oe}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var sB={kernelName:_m,backendName:"cpu",kernelFunc:kre};function Ire(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;ne(o,"reverse");let i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return Qr({inputs:{x:o},backend:t});let u=new yt(o.shape,o.dtype),l=t.bufferSync(o);for(let p=0;p<u.size;p++){let m=u.indexToLoc(p),c=m.slice();a.forEach(d=>c[d]=o.shape[d]-1-c[d]),u.set(l.get(...c),...m)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}var aB={kernelName:ka,backendName:"cpu",kernelFunc:Ire};var iB={kernelName:Na,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[l,p,m,c]=n.shape,[d,f]=I.getImageCenter(i,p,m),h=255,g=Math.sin(o),y=Math.cos(o),x=a.data.get(n.dataId).values;for(let k=0;k<l;k++){let C=k*m*p*c;for(let A=0;A<p;A++){let M=A*(m*c);for(let D=0;D<m;D++){let R=D*c;for(let B=0;B<c;B++){let U=[l,A,D,B],W=U[2],K=U[1],j=(W-d)*y-(K-f)*g,V=(W-d)*g+(K-f)*y;j=Math.round(j+d),V=Math.round(V+f);let q=s;if(typeof s!="number"&&(B===3?q=h:q=s[B]),j>=0&&j<m&&V>=0&&V<p){let Z=V*(m*c),te=j*c,oe=C+Z+te+B;q=x[oe]}let ee=C+M+R+B;u[ee]=q}}}}return{dataId:a.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Cre=Re(Ia,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2==0?e:e+1}),uB={kernelName:Ia,backendName:"cpu",kernelFunc:Cre};function gx(r,e,t,n,o,s,i,a,u,l){let p=[n/o,o],m=r.values,c=e.values;if(n===0)return Ce(t,e.dtype);let d=Ce(p,e.dtype);d.values.fill(u);for(let f=0;f<s;f++){let h=[],g=0;for(let y=0;y<i;y++){let x=m[f*i+y];h.push(x),g+=x*a[y]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let y=0;y<o;y++)l?d.values[g*o+y]+=c[f*o+y]:d.values[g*o+y]=e.rank===0?c[0]:c[f*o+y]}return d}function vre(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=I.calculateShapes(s,o,i),c=!0,d=t.bufferSync(o),f=t.bufferSync(s),h=gx(d,f,i,m,l,u,a,p,0,c);return t.makeTensorInfo(i,h.dtype,h.values)}var lB={kernelName:Ca,backendName:"cpu",kernelFunc:vre};function Sre(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;ne([n,o,s],"select");let i=n.shape.length,a=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Kt(o.dtype,s.dtype),m=b.makeZerosTypedArray(b.sizeFromShape(o.shape),p),c=0,d=i===0||i>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let f=0;f<a.length;f++)for(let h=0;h<d;h++)a[f]===1?m[c++]=u[f]:m[c++]=l[f];return t.makeTensorInfo(o.shape,p,m)}var pB={kernelName:Is,backendName:"cpu",kernelFunc:Sre};var wre=I.SELU_SCALEALPHA,_re=I.SELU_SCALE,Are=Re(Yi,r=>r>=0?_re*r:wre*(Math.exp(r)-1)),mB={kernelName:Yi,backendName:"cpu",kernelFunc:Are};var Nre=Re(Qi,r=>r<0?-1:r>0?1:0),cB={kernelName:Qi,backendName:"cpu",kernelFunc:Nre};var Dre=Re(Wo,r=>Math.sin(r)),dB={kernelName:Wo,backendName:"cpu",kernelFunc:Dre};var Pre=Re(va,r=>Math.sinh(r)),fB={kernelName:va,backendName:"cpu",kernelFunc:Pre};var Mre=11920928955078125e-23,hB=Math.log(Mre)+2,Ere=Re(Zi,r=>{let e=r>-hB,t=r<hB,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),gB={kernelName:Zi,backendName:"cpu",kernelFunc:Ere};function Rre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;ne([o],"spaceToBatchND");let a=b.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let A=1+s.length;A<o.shape.length;++A)u.push([0,0]);let l=hx.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(l.shape,s,a,!1),m=I.getPermuted(p.length,s.length,!1),c=I.getReshapedPermuted(l.shape,s,a,!1),h=ot({inputs:{x:l},backend:t,attrs:{shape:p}}),x=lr({inputs:{x:h},backend:t,attrs:{perm:m}}),C=ot({inputs:{x},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(x),C}var bB={kernelName:vs,backendName:"cpu",kernelFunc:Rre};function Fre(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=t.data.get(i.dataId).values[0],[m,c,d,f,h]=nx(a,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var yB={kernelName:ju,backendName:"cpu",kernelFunc:Fre};function Lre(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.data.get(o.dataId).values),a=t.data.get(n.dataId).values,u=Array.from(t.data.get(s.dataId).values),[l,p,m]=ox(a,n.shape,n.dtype,i,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var xB={kernelName:Ji,backendName:"cpu",kernelFunc:Lre};function Bre(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=Pc(i,n.shape,n.dtype,a,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var TB={kernelName:Hu,backendName:"cpu",kernelFunc:Bre};function $re(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=Pc(i,n.shape,n.dtype,a,u);return t.makeTensorInfo(p,n.dtype,l)}var kB={kernelName:qu,backendName:"cpu",kernelFunc:$re};function Ore(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=I.calculateShapes(s,o,a),d=!1,f=t.bufferSync(o),h=t.bufferSync(s),g=t.data.get(i.dataId).values[0],y=gx(f,h,a,c,p,l,u,m,g,d);return t.makeTensorInfo(a,y.dtype,y.values)}var IB={kernelName:Xu,backendName:"cpu",kernelFunc:Ore};function zre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[a]=m;let d=Zs({inputs:{x:o},backend:t,attrs:{begin:l,size:c}});return l[a]+=m,d})}var CB={kernelName:Ss,backendName:"cpu",kernelFunc:zre};var vB={kernelName:si,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;ne(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let a=0;a<o.length;++a){let u=o[a];s[a]=u*u}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var Gre=Re(As,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),SB={kernelName:As,backendName:"cpu",kernelFunc:Gre};function Ure(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n;ne(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:x,end:T,strides:k}=Tt.sliceInfo(o.shape,s,i,a,u,l,p,m,c),C;if(h)C=ot({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=Tt.computeOutShape(x,T,k),M=Zs({inputs:{x:o},backend:t,attrs:{begin:x,size:A}});C=ot({inputs:{x:M},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(M)}else{let A=t.bufferSync(o),M=sx(d,A,k,x);C=t.makeTensorInfo(f,M.dtype,M.values)}return C}var wB={kernelName:Sa,backendName:"cpu",kernelFunc:Ure};function Wre(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=e,c=t.data.get(p.dataId).values,d=t.data.get(m.dataId).values,[f,h]=ax(c,d,o,s,i,a,u,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var _B={kernelName:Yu,backendName:"cpu",kernelFunc:Wre};function Kre(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values[0],[l,p,m]=ix(a,u,o),c=p.length;return[t.makeTensorInfo([c,2],"int32",l),t.makeTensorInfo([c],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var AB={kernelName:Nm,backendName:"cpu",kernelFunc:Kre};function Vre(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=t.data.get(s.dataId).values,a=ux(i,o);return t.makeTensorInfo(s.shape,"int32",a)}var NB={kernelName:Dm,backendName:"cpu",kernelFunc:Vre};var jre=Re(wa,r=>Math.tan(r)),DB={kernelName:wa,backendName:"cpu",kernelFunc:jre};var Hre=Re(Yo,r=>Math.tanh(r)),PB={kernelName:Yo,backendName:"cpu",kernelFunc:Hre};function qre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;ne(o,"tile");let i=lx(t.bufferSync(o),s);return t.makeTensorInfo(i.shape,i.dtype,i.values)}var MB={kernelName:Nn,backendName:"cpu",kernelFunc:qre};function Xre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n;ne(o,"topk");let a=t.data.get(o.dataId).values,[u,l]=px(a,o.shape,o.dtype,s,i);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}var EB={kernelName:_a,backendName:"cpu",kernelFunc:Xre};function Yre(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=t,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],y=b.computeStrides(o.shape),x=y[0],T=y[1],k=y[2],C=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(g));C.fill(u);let A=n.data.get(o.dataId).values,M=n.data.get(s.dataId).values;for(let R=0;R<p;++R){let B=s.shape[0]===1?M:M.subarray(R*8,R*8+8);for(let U=0;U<f;++U)for(let W=0;W<h;++W)for(let K=0;K<d;++K){let j,V=B[6]*W+B[7]*U+1;if(V===0)continue;let q=(B[0]*W+B[1]*U+B[2])/V,ee=(B[3]*W+B[4]*U+B[5])/V,Z=FB(q,c,a),te=FB(ee,m,a);switch(i){case"nearest":j=tne(A,m,c,x,T,k,R,te,Z,K,u);break;case"bilinear":j=rne(A,m,c,x,T,k,R,te,Z,K,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let oe=R*x+U*T+W*k+K;C[oe]=j}return n.makeTensorInfo(g,o.dtype,C)}return{dataId:n.write(C,g,o.dtype),shape:o.shape,dtype:o.dtype}}var RB={kernelName:Aa,backendName:"cpu",kernelFunc:Yre};function FB(r,e,t){switch(t){case"reflect":return Qre(r,e);case"wrap":return Zre(r,e);case"nearest":return ene(r,e);case"constant":default:return Jre(r,e)}}function Qre(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return b.clamp(0,t,e-1)}function Zre(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return b.clamp(0,t,e-1)}function Jre(r,e){return r}function ene(r,e){return b.clamp(0,r,e-1)}function Zh(r,e,t,n,o,s,i,a,u,l,p){let m=i*n+a*o+u*s+l;return 0<=a&&a<e&&0<=u&&u<t?r[m]:p}function tne(r,e,t,n,o,s,i,a,u,l,p){let m=Math.round(a),c=Math.round(u);return Zh(r,e,t,n,o,s,i,m,c,l,p)}function rne(r,e,t,n,o,s,i,a,u,l,p){let m=Math.floor(a),c=Math.floor(u),d=m+1,f=c+1,h=(f-u)*Zh(r,e,t,n,o,s,i,m,c,l,p)+(u-c)*Zh(r,e,t,n,o,s,i,m,f,l,p),g=(f-u)*Zh(r,e,t,n,o,s,i,d,c,l,p)+(u-c)*Zh(r,e,t,n,o,s,i,d,f,l,p);return(d-a)*h+(a-m)*g}function nne(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;ne(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:a,outputShape:u,indices:l}=mx(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([l.length],"int32",l)]}var LB={kernelName:Pm,backendName:"cpu",kernelFunc:nne};function one(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape.length,a=o.shape[s],u=new Array(i-1),l=0;for(let d=0;d<i;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(i).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(a);for(let d=0;d<c.length;d++){p[s]=d;let f=Zs({inputs:{x:o},backend:t,attrs:{begin:p,size:m}});c[d]=ot({inputs:{x:f},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(f)}return c}var BB={kernelName:ws,backendName:"cpu",kernelFunc:one};function sne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:i}=n;ne(o,"unsortedSegmentSum");let a=o.shape.length,u=s.shape.length,l=[],p=[],m=a-u,c=s;for(let f=0;f<m;++f){let h=Fc({inputs:{input:c},backend:t,attrs:{dim:f+1}});c=h,p.push(h)}for(let f=0;f<i;++f){let h=b.createScalarValue(f,"int32"),g=t.makeTensorInfo([],"int32",h),y=NS({inputs:{a:g,b:c},backend:t}),x=Ys({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),T=Sp({inputs:{a:x,b:o},backend:t}),k=Iu({inputs:{x:T},backend:t,attrs:{axis:0,keepDims:!1}});l.push(k),p.push(g),p.push(y),p.push(x),p.push(T),p.push(k)}let d=sw({inputs:l,backend:t,attrs:{axis:0}});return p.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var $B={kernelName:Qu,backendName:"cpu",kernelFunc:sne};var ane=[gF,DR,bF,yF,FR,xF,TF,kF,IF,CF,vF,SF,wF,_F,AF,DF,PF,MF,EF,hF,RF,FF,LF,BF,RR,LR,$F,PR,OF,GF,UF,WF,KF,VF,jF,HF,qF,XF,YF,QF,ZF,JF,eL,tL,rL,nL,oL,sL,aL,uL,lF,lL,BR,pL,$R,mL,OR,cL,dL,fL,zR,hL,gL,bL,yL,xL,GR,UR,MR,TL,zF,kL,IL,CL,pF,WR,KR,vL,VR,SL,wL,_L,AL,NL,DL,PL,jR,ML,EL,RL,FL,BL,$L,OL,HR,zL,GL,KL,qR,XR,VL,jL,HL,YR,qL,QL,ZL,hx,JL,mF,ZR,eB,ER,Xh,tB,cF,dF,fF,rB,nB,oB,sB,aB,iB,uB,JR,lB,pB,mB,tF,cB,dB,fB,rF,UL,gB,bB,yB,xB,TB,kB,IB,CB,oF,vB,sF,SB,wB,_B,AB,NB,iF,iL,DB,PB,MB,EB,RB,QR,LB,BB,$B,XL];for(let r of ane)eu(r);var $c={};Xe($c,{assertNotComplex:()=>Ka,bindCanvasToFramebuffer:()=>gne,bindColorTextureToFramebuffer:()=>rg,bindTextureToProgramUniformSampler:()=>kw,bindTextureUnit:()=>UB,bindVertexBufferToProgramAttribute:()=>bx,callAndCheck:()=>Se,canBeRepresented:()=>lw,createFragmentShader:()=>mw,createFramebuffer:()=>yw,createProgram:()=>cw,createStaticIndexBuffer:()=>hw,createStaticVertexBuffer:()=>fw,createTexture:()=>gw,createVertexShader:()=>pw,getBatchDim:()=>vu,getExtensionOrThrow:()=>Lc,getFramebufferErrorMessage:()=>WB,getMaxTexturesInShader:()=>vw,getNumChannels:()=>fne,getProgramUniformLocation:()=>Tw,getProgramUniformLocationOrThrow:()=>xw,getRowsCols:()=>Su,getShapeAs3D:()=>ng,getTextureShapeFromLogicalShape:()=>Iw,getWebGLDisjointQueryTimerVersion:()=>Sw,getWebGLErrorMessage:()=>GB,getWebGLMaxTextureSize:()=>Cw,hasExtension:()=>no,isCapableOfRenderingToFloatTexture:()=>ww,isDownloadFloatTextureEnabled:()=>_w,isReshapeFree:()=>gl,isWebGLFenceEnabled:()=>Nw,isWebGLVersionEnabled:()=>Ix,linkProgram:()=>dw,resetMaxTextureSize:()=>bne,resetMaxTexturesInShader:()=>yne,unbindColorTextureFromFramebuffer:()=>yx,unbindTextureUnit:()=>hne,validateFramebuffer:()=>Bc,validateProgram:()=>tg,validateTextureSize:()=>bw});var Ap={},aw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function iw(r,e){Ap[r]=e}function ro(r,e){if(!(r in Ap)){let n=une(r,e);if(n!==null)Ap[r]=n;else return console.log("Could not get context for WebGL version",r),null}let t=Ap[r];return t==null||t.isContextLost()?(delete Ap[r],ro(r)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ap[r])}function ine(r){if(typeof OffscreenCanvas!="undefined"&&r===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function une(r,e){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=e??ine(r);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Ap[r]},!1),r===1?t.getContext("webgl",aw)||t.getContext("experimental-webgl",aw):t.getContext("webgl2",aw)}var Np=(t=>(t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH",t))(Np||{}),sn=(o=>(o[o.RENDER=0]="RENDER",o[o.UPLOAD=1]="UPLOAD",o[o.PIXELS=2]="PIXELS",o[o.DOWNLOAD=3]="DOWNLOAD",o))(sn||{}),Zr=(s=>(s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",s))(Zr||{});function Dp(r,e){return[e,r]}function OB(r,e){return r*e}function Jh(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function Ii(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function zB(r,e){let[t,n]=Ii(r,e);return t*n*4}function eg(r,e){let t=r,n,o,s,i,a,u,l,p,m,c;return $().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,i=t.RGBA32F,a=t.RED,l=4,p=1,m=t.HALF_FLOAT,c=t.FLOAT,u=t.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,i=t.RGBA,a=r.RGBA,l=4,p=4,m=e!=null?e.HALF_FLOAT_OES:null,c=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:p,textureTypeHalfFloat:m,textureTypeFloat:c}}function Se(r,e){let t=e();return $().getBool("DEBUG")&&lne(r),t}function lne(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+GB(r,e))}var pne=596e-10,mne=65504;function lw(r){return!!($().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||pne<Math.abs(r)&&Math.abs(r)<mne)}function GB(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Lc(r,e){return Cu(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function pw(r,e){let t=Cu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Se(r,()=>r.shaderSource(t,e)),Se(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function mw(r,e){let t=Cu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Se(r,()=>r.shaderSource(t,e)),Se(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw dne(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var cne=/ERROR: [0-9]+:([0-9]+):/g;function dne(r,e){let t=cne.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,i=o.map((m,c)=>b.rightPad((c+1).toString(),s)+m),a=0;for(let m=0;m<i.length;m++)a=Math.max(i[m].length,a);let u=i.slice(0,n-1),l=i.slice(n-1,n),p=i.slice(n);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(l[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function cw(r){return Cu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function dw(r,e){if(Se(r,()=>r.linkProgram(e)),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function tg(r,e){if(Se(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function fw(r,e){let t=Cu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Se(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),Se(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function hw(r,e){let t=Cu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Se(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),Se(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function fne(){return $().getNumber("WEBGL_VERSION")===2?1:4}function gw(r){return Cu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function bw(r,e){let t=$().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function yw(r){return Cu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function bx(r,e,t,n,o,s,i){let a=r.getAttribLocation(e,t);return a===-1?!1:(Se(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),Se(r,()=>r.vertexAttribPointer(a,o,r.FLOAT,!1,s,i)),Se(r,()=>r.enableVertexAttribArray(a)),!0)}function UB(r,e,t){KB(r,t),Se(r,()=>r.activeTexture(r.TEXTURE0+t)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function hne(r,e){KB(r,e),Se(r,()=>r.activeTexture(r.TEXTURE0+e)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function xw(r,e,t){return Cu(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function Tw(r,e,t){return r.getUniformLocation(e,t)}function kw(r,e,t,n){Se(r,()=>UB(r,e,n)),Se(r,()=>r.uniform1i(t,n))}function gne(r){Se(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),Se(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),Se(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function rg(r,e,t){Se(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Se(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function yx(r,e){Se(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Se(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Bc(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+WB(r,e))}function WB(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Cu(r,e,t){let n=Se(r,()=>e());if(n==null)throw new Error(t);return n}function KB(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function vu(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function Su(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function ng(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[vu(r),...Su(r)]),e}function Iw(r,e=!1){let t=$().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?b.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let n=b.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=vu(r),s=2,i=2;return r.length&&([s,i]=Su(r)),n=o*(s/2)*(i/2),b.sizeToSquarishShape(n).map(a=>a*2)}return b.sizeToSquarishShape(n)}function xx(r){return r%2==0}function gl(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||xx(t)&&xx(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&xx(r[0])&&xx(e[0])}var Tx,kx;function Cw(r){if(Tx==null){let e=ro(r);Tx=e.getParameter(e.MAX_TEXTURE_SIZE)}return Tx}function bne(){Tx=null}function yne(){kx=null}function vw(r){if(kx==null){let e=ro(r);kx=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,kx)}function Sw(r){if(r===0)return 0;let e,t=ro(r);return no(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:no(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function no(r,e){return r.getExtension(e)!=null}function Ix(r){try{if(ro(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ww(r){if(r===0)return!1;let e=ro(r);if(r===1){if(!no(e,"OES_texture_float"))return!1}else if(!no(e,"EXT_color_buffer_float"))return!1;return Aw(e)}function _w(r){if(r===0)return!1;let e=ro(r);if(r===1){if(!no(e,"OES_texture_float")||!no(e,"WEBGL_color_buffer_float"))return!1}else{if(no(e,"EXT_color_buffer_float"))return Aw(e);let n="EXT_color_buffer_half_float";if(no(e,n)){let o=e.getExtension(n);return xne(e,o)}return!1}return Aw(e)}function Aw(r){let e=eg(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),i}function xne(r,e){let t=eg(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(i),a}function Nw(r){return r!==2?!1:ro(r).fenceSync!=null}function Ka(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var $e=$();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>Ix(2)?2:Ix(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Cw($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>vw($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=$e.getNumber("WEBGL_VERSION");return r===0?0:Sw(r)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ii.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>ww($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>_w($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Nw($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ii.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Qt(){let r,e,t,n,o,s,i,a,u,l;return $().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",i="out vec4 outputColor;",a=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}function Va(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let i=`int ${r[s]} = ${t} / ${o}`,a=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${i}; ${a};`}).join("")}function Pp(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let i=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,a=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function Tne(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function VB(r,e,t="index"){let n=r.map((s,i)=>i),o=Tne(n,e);return o.map((s,i)=>{let a=`int ${r[i]} = ${t} / ${o[i]}`,u=i===o.length-1?`int ${r[i+1]} = ${t} - ${r[i]} * ${o[i]}`:`index -= ${r[i]} * ${o[i]}`;return`${a}; ${u};`}).join("")}function Oc(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function zc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var Cx=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:jB}=I;function HB(r,e,t){let n=[];if(r.forEach(d=>{let f=b.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),t.enableShapeUniforms){let{uniformShape:h}=vx(t.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>kne(d,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=Qt(),u=vne(a),l,p,m=_ne(a);return e.isPacked?(l=Ine(e.logicalShape,i,t.enableShapeUniforms),p=wne(a)):(l=Cne(e.logicalShape,i,t.enableShapeUniforms),p=Sne(a)),t.packedInputs&&(m+=Pne),[m,u,p,o,l,s,t.userCode].join(`
`)}function Uc(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return Wne(r,e);case 1:return Vne(r,e);case 2:return Hne(r,e);case 3:return Xne(r,e);case 4:return Qne(r,e);case 5:return Zne(r);case 6:return Jne(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function qB(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return Une(r);case 1:return Kne(r,e);case 2:return jne(r,e);case 3:return qne(r,e);default:return Yne(r,e)}}function kne(r,e,t=!1,n){let o="";t?o+=qB(r,n):o+=Uc(r,n);let s=r.shapeInfo.logicalShape,i=e.logicalShape;return s.length<=i.length&&(t?o+=eoe(r,e):o+=toe(r,e)),o}function Ine(r,e,t){switch(r.length){case 0:return XB();case 1:return Mne(r,e,t);case 2:return zne(r,e,t);case 3:return Rne(r,e,t);default:return Lne(r,e,t)}}function Cne(r,e,t){switch(r.length){case 0:return XB();case 1:return Ene(r,e,t);case 2:return Gne(r,e,t);case 3:return Fne(r,e,t);case 4:return Bne(r,e,t);case 5:return $ne(r,e);case 6:return One(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function vne(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function Sne(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function wne(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function _ne(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Ane}
    ${Nne}
    ${Dne}
  `}var Ane=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Nne=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Dne=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Pne=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function XB(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Mne(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Ene(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Rne(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Fne(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Pp(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Va(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Lne(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),i=s,a="",u="b, r, c";for(let l=2;l<r.length-1;l++)i*=r[r.length-l-1],a=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+a,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function Bne(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Pp(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Va(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function $ne(r,e){let t=Va(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function One(r,e){let t=Va(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function zne(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Gne(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Mp(r){return`offset${r}`}function Une(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Qt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function Wne(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Mp(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;let[a,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Kne(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Qt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function Vne(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Wc(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],i=o[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=Mp(t);return i===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function jne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],u=Qt();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Hne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:a}=b.squeezeShape(t),u=i;if(u.length<t.length){let c=Kc(r,u),d=["row","col"];return`
      ${Uc(c,e)}
      float ${o}(int row, int col) {
        return ${o}(${Vc(d,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Wc(r)}
      }
    `;let l=s[0],p=s[1],m=Mp(n);return p===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${m};
    vec2 uv = uvFromFlat(${l}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function qne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let c=t.slice(1),d=[1,2],f=Kc(r,c),h=["b","row","col"];return`
        ${qB(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Vc(h,d)});
        }
      `}let a=Qt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;let u=i[0],l=i[1],p=Math.ceil(t[2]/2),m=p*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${m}, ${p}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function Xne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],i=t[2],{newShape:a,keptDims:u}=b.squeezeShape(t),l=a;if(l.length<t.length){let h=Kc(r,l),g=["row","col","depth"];return`
        ${Uc(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Vc(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Wc(r)}
      }
    `;let p=r.shapeInfo.texShape,m=p[0],c=p[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===i&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Mp(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${i} + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Yne(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Qt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],p=u[1],m=Math.ceil(s[i-1]/2),c=m*Math.ceil(s[i-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<i-1;h++)d=`int b${h}, `+d,c*=s[i-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${l});
      return ${o.texture2D}(${t}, uv);
    }
  `}function Qne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],i=t[2]*s,a=t[1]*i,{newShape:u,keptDims:l}=b.squeezeShape(t);if(u.length<t.length){let x=Kc(r,u),T=["row","col","depth","depth2"];return`
      ${Uc(x,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Vc(T,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${Wc(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===a&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=Mp(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function Zne(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,i=e[2]*s,a=e[1]*i,{newShape:u,keptDims:l}=b.squeezeShape(e);if(u.length<e.length){let h=Kc(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${Uc(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Vc(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${o})) +
          depth3;
        ${Wc(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===a&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Mp(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Jne(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(e);if(o.length<e.length){let g=Kc(r,o),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Uc(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Vc(y,s)});
      }
    `}let i=e[5],a=e[4]*i,u=e[3]*a,l=e[2]*u,p=e[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${l}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Wc(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===p&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Mp(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${l} + depth * ${u} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Wc(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function eoe(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=jB(r.shapeInfo.logicalShape,e.logicalShape),u=je(i),l=i-s,p,m=["x","y","z","w","u","v"];s===0?p="":i<2&&a.length>=1?p="coords = 0;":p=a.map(x=>`coords.${m[x+l]} = 0;`).join(`
`);let c="";i<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((x,T)=>`coords.${m[T+l]}`).join(", ");let d="return outputValue;",h=b.sizeFromShape(r.shapeInfo.logicalShape)===1,y=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!y)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!y)i===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(a.length){let x=s-2,T=s-1;a.indexOf(x)>-1&&a.indexOf(T)>-1?d="return vec4(outputValue.x);":a.indexOf(x)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(T)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function toe(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!r.shapeInfo.isUniform&&a===u&&r.shapeInfo.flatOffset==null&&b.arraysEqual(i,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let l=je(u),p=jB(r.shapeInfo.logicalShape,e.logicalShape),m=u-a,c,d=["x","y","z","w","u","v"];a===0?c="":u<2&&p.length>=1?c="coords = 0;":c=p.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return u<2&&a>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function je(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function vx(r,e,t){let{newShape:n,keptDims:o}=b.squeezeShape(e),s=e.length,i=r&&s===3&&e[0]===1,a=i?e.slice(1):n,u=!r&&s>1&&!b.arraysEqual(e,t)&&n.length<s||i;return{useSqueezeShape:u,uniformShape:u?a:e,keptDims:o}}function Kc(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function Vc(r,e){return e.map(t=>r[t]).join(", ")}function YB(r,e,t,n){let o=t.map((k,C)=>{let A={logicalShape:k.shape,texShape:k.isUniform?null:k.texData.texShape,isUniform:k.isUniform,isPacked:k.isUniform?!1:k.texData.isPacked,flatOffset:null};return k.texData!=null&&k.texData.slice!=null&&k.texData.slice.flatOffset>0&&(A.flatOffset=k.texData.slice.flatOffset),{name:e.variableNames[C],shapeInfo:A}}),s=o.map(k=>k.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=HB(o,i,e),u=mw(r.gl,a),l=r.createProgram(u),p=null,m=r.getUniformLocation(l,"NAN",!1);$().getNumber("WEBGL_VERSION")===1&&(p=r.getUniformLocation(l,"INFINITY",!1));let c=!1,d={},f={},h={};for(let k=0;k<e.variableNames.length;k++){let C=e.variableNames[k];d[C]=r.getUniformLocation(l,C,c),d[`offset${C}`]=r.getUniformLocation(l,`offset${C}`,c),e.enableShapeUniforms&&(f[`${C}Shape`]=r.getUniformLocation(l,`${C}Shape`,c),h[`${C}TexShape`]=r.getUniformLocation(l,`${C}TexShape`,c))}let g,y,x;e.enableShapeUniforms&&(g=r.getUniformLocation(l,"outShape",c),x=r.getUniformLocation(l,"outShapeStrides",c),y=r.getUniformLocation(l,"outTexShape",c));let T=[];return e.customUniforms&&e.customUniforms.forEach((k,C)=>{T[C]=r.getUniformLocation(l,k.name,c)}),{program:e,fragmentShader:u,source:a,webGLProgram:l,uniformLocations:d,customUniformLocations:T,inShapeInfos:s,outShapeInfo:i,infLoc:p,nanLoc:m,inShapesLocations:f,inTexShapesLocations:h,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:y}}function QB(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],i=s.shape;if(!b.arraysEqual(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(t.isUniform&&s.isUniform)return;let a=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function ZB(r,e,t,n,o){e.program.enableShapeUniforms||(QB(e.inShapeInfos,t),QB([e.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):r.setOutputMatrixTexture(s.texture,i[0],i[1]),r.setProgram(e.webGLProgram),$().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((u,l)=>{let p=e.program.variableNames[l],m=e.uniformLocations[p],c=e.uniformLocations[`offset${p}`],d=e.inShapesLocations[`${p}Shape`],f=e.inTexShapesLocations[`${p}TexShape`];if(d){let{uniformShape:h}=vx(e.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(d,new Int32Array(h));break;case 2:r.gl.uniform2iv(d,new Int32Array(h));break;case 3:r.gl.uniform3iv(d,new Int32Array(h));break;case 4:r.gl.uniform4iv(d,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),m!=null){if(u.isUniform){if(b.sizeFromShape(u.shape)<2)r.gl.uniform1f(m,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(m,h)}return}u.texData.slice!=null&&c!=null&&r.gl.uniform1i(c,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,m,l)}});let a=e.outShapeLocation;if(a)switch(n.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let u=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break;default:break}}e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((u,l)=>{let p=e.customUniformLocations[l],m=o[l];if(u.type==="float")r.gl.uniform1fv(p,m);else if(u.type==="vec2")r.gl.uniform2fv(p,m);else if(u.type==="vec3")r.gl.uniform3fv(p,m);else if(u.type==="vec4")r.gl.uniform4fv(p,m);else if(u.type==="int")r.gl.uniform1iv(p,m);else if(u.type==="ivec2")r.gl.uniform2iv(p,m);else if(u.type==="ivec3")r.gl.uniform3iv(p,m);else if(u.type==="ivec4")r.gl.uniform4iv(p,m);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function JB(r,e,t){let n="";e.concat(t).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:l,uniformShape:p,keptDims:m}=vx(r.packedInputs,i.shape,u),c="",d="",f="";if(p.length===1&&r.packedInputs){let C=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];c=`${C[0]>1}_${C[1]>1}`}else if(p.length===2&&!r.packedInputs)d=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!r.packedInputs){let C=b.computeStrides(p);f=`${C[0]===u[1]}_${C[C.length-1]===u[1]}`}let h=i.shape.length,g=p.length===2&&b.arraysEqual(i.shape,u),y=b.sizeFromShape(i.shape)===1,x=I.getBroadcastDims(i.shape,t.shape),T=!r.packedInputs&&h===t.shape.length&&b.arraysEqual(u,t.texData.texShape),k=r.packedInputs||p.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${T}_${l?m:""}_${p.length}_${y}_${x}_${g}_${c}_${d}_${f}_${k}_${a}`}else{let u=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${u}_${a}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${$().getNumber("WEBGL_VERSION")}`,s}function Bt(r){return $().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var Dw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=Np.DENSE;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Qt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Pp(["r","c","d"],e):Va(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var Pw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=Np.DENSE;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Qt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Pp(["r","c","d"],e):Va(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var Mw=class{constructor(e){this.variableNames=["A"];this.outTexUsage=sn.DOWNLOAD;let t=Qt();this.outputShape=e,this.userCode=`
      ${Cx}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var Ew=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=sn.DOWNLOAD;let t=Qt();this.outputShape=e,this.userCode=`
      ${Cx}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var Rw=class{constructor(e,t=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Qt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?zc():Oc(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var Fw=class{constructor(e,t=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Qt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let u=i*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?zc():Oc(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var Zw={};Xe(Zw,{bindVertexProgramAttributeStreams:()=>Kw,createBufferFromOutputTexture:()=>Hw,createFloat16MatrixTexture:()=>zw,createFloat16PackedMatrixTexture:()=>Ww,createFloat32MatrixTexture:()=>Ow,createIndexBuffer:()=>$w,createPackedMatrixTexture:()=>Uw,createUnsignedBytesMatrixTexture:()=>Gw,createVertexBuffer:()=>Bw,createVertexShader:()=>Lw,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Xw,downloadFloat32MatrixFromBuffer:()=>qw,downloadMatrixFromPackedOutputTexture:()=>Qw,downloadPackedMatrixFromBuffer:()=>Yw,getInternalFormatForFloat16MatrixTexture:()=>wx,getInternalFormatForFloat16PackedMatrixTexture:()=>Nx,getInternalFormatForFloat32MatrixTexture:()=>Sx,getInternalFormatForPackedMatrixTexture:()=>Ax,getInternalFormatForUnsignedBytesMatrixTexture:()=>_x,uploadDenseMatrixToTexture:()=>Vw,uploadPixelDataToTexture:()=>jw});function Lw(r){let e=Qt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return pw(r,t)}function Bw(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return fw(r,e)}function $w(r){let e=new Uint16Array([0,1,2,2,1,3]);return hw(r,e)}function og(r,e,t,n,o,s){bw(e,t);let i=gw(r),a=r.TEXTURE_2D;return Se(r,()=>r.bindTexture(a,i)),Se(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Se(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Se(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),Se(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),$().getNumber("WEBGL_VERSION")===1?Se(r,()=>r.texImage2D(a,0,n,e,t,0,o,s,null)):Se(r,()=>r.texStorage2D(a,1,n,e,t)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function Sx(r){return r.internalFormatFloat}function Ow(r,e,t,n){let[o,s]=Dp(e,t);return og(r,o,s,Sx(n),n.textureFormatFloat,r.FLOAT)}function wx(r){return r.internalFormatHalfFloat}function zw(r,e,t,n){let[o,s]=Dp(e,t);return og(r,o,s,wx(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function _x(r){return r.downloadTextureFormat}function Gw(r,e,t,n){let[o,s]=Dp(e,t);return og(r,o,s,_x(n),r.RGBA,r.UNSIGNED_BYTE)}function Ax(r){return r.internalFormatPackedFloat}function Uw(r,e,t,n){let[o,s]=Ii(e,t);return og(r,o,s,Ax(n),r.RGBA,r.FLOAT)}function Nx(r){return r.internalFormatPackedHalfFloat}function Ww(r,e,t,n){let[o,s]=Ii(e,t);return og(r,o,s,Nx(n),r.RGBA,n.textureTypeHalfFloat)}function Kw(r,e,t){let n=0,o=3*4,s=3*4+2*4;return Se(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),bx(r,e,"clipSpacePos",t,3,s,n)&&bx(r,e,"uv",t,2,s,o)}function Vw(r,e,t,n,o,s){Se(r,()=>r.bindTexture(r.TEXTURE_2D,e));let i,a,u;o instanceof Uint8Array?(i=new Uint8Array(t*n*4),a=r.UNSIGNED_BYTE,u=r.RGBA):(i=new Float32Array(t*n*4),a=r.FLOAT,u=s.internalFormatPackedFloat),i.set(o),$().getNumber("WEBGL_VERSION")===2?Se(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,a,i)):Se(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,t,n,0,r.RGBA,a,i)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function jw(r,e,t){Se(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?$().getNumber("WEBGL_VERSION")===2?Se(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):Se(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):$().getNumber("WEBGL_VERSION")===2?Se(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):Se(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function Hw(r,e,t,n){let o=r.createBuffer();Se(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let a=4*4*e*t;return Se(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),Se(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),Se(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function qw(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function Xw(r,e,t,n){let[o,s]=Dp(e,t),i=4,a=new Uint8Array(OB(e*t,i));return Se(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function Yw(r,e,t,n,o,s,i,a){let u=r,l=new Float32Array(zB(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function Qw(r,e,t){let n=new Float32Array(e*t*4);return Se(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var jc=class{constructor(e){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let t=$().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,iw(t,e)):this.gl=ro(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if($().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Lc(this.gl,s),no(this.gl,i))this.textureHalfFloatExtension=Lc(this.gl,i);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),no(this.gl,o))this.colorBufferHalfFloatExtension=Lc(this.gl,o);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",no(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(no(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Bw(this.gl),this.indexBuffer=$w(this.gl),this.framebuffer=yw(this.gl),this.textureConfig=eg(this.gl,this.textureHalfFloatExtension)}get debug(){return $().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Se(e,()=>e.finish()),Se(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Se(e,()=>e.deleteFramebuffer(this.framebuffer)),Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Se(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Se(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Ow(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),zw(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Gw(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jw(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),Vw(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Ww(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Uw(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(yx(this.gl,this.framebuffer),this.outputTexture=null),Se(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Xw(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,i){return Yw(this.gl,e,t,n,o,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return qw(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=Hw(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if($().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let i=o.clientWaitSync(s,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},t=s}else $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Qw(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=Lw(t));let n=cw(t);return Se(t,()=>t.attachShader(n,this.vertexShader)),Se(t,()=>t.attachShader(n,e)),dw(t,n),this.debug&&tg(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=Kw(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Se(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&tg(this.gl,this.program),Se(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?xw(this.gl,e,t):Tw(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Se(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),kw(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=Ii(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&tg(this.gl,this.program),Bc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Se(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Se(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Lc(this.gl,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=ooe(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),rg(this.gl,e,this.framebuffer),this.debug&&Bc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(rg(this.gl,this.outputTexture,this.framebuffer),this.debug&&Bc(this.gl)):yx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;rg(o,e,this.framebuffer),this.debug&&Bc(o),this.outputTexture=e,Se(o,()=>o.viewport(0,0,t,n)),Se(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),Se(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function ooe(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:e$,bincountImpl:Dx,bincountReduceImpl:t$,ceilImpl:r$,concatImpl:n$,equalImpl:o$,expImpl:s$,expm1Impl:a$,floorImpl:i$,gatherNdImpl:u$,gatherV2Impl:l$,greaterImpl:p$,greaterEqualImpl:m$,lessImpl:c$,lessEqualImpl:d$,linSpaceImpl:f$,logImpl:h$,maxImpl:g$,maximumImpl:b$,minimumImpl:y$,multiplyImpl:x$,negImpl:T$,notEqualImpl:k$,prodImpl:I$,rangeImpl:C$,rsqrtImpl:v$,sigmoidImpl:S$,simpleAbsImpl:Px,sliceImpl:w$,sparseFillEmptyRowsImpl:_$,sparseReshapeImpl:A$,sparseSegmentReductionImpl:Mx,sqrtImpl:N$,stridedSliceImpl:D$,stringNGramsImpl:P$,stringSplitImpl:M$,stringToHashBucketFastImpl:E$,subImpl:R$,tileImpl:F$,topKImpl:L$,transposeImpl:Ep,uniqueImpl:B$}=Mc;function Jw(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function sr(r,e){return e===1?[r]:Jw(r,e)}function $$(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var e_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Bt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=sr("rc",this.rank),n=je(this.rank),o=this.getOutOfBoundsCondition(t),s=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${e[e.length-1-i]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var sg=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2==1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${soe(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?zc():Oc(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function soe(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?VB(["r","c","d"],"inputShape"):Va(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var t_=class{constructor(e){this.gpgpu=e;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(e,t,n){let o=z$(t,n),s=G$(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=O$(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let a;return o===Zr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===Zr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===Zr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===Zr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===Zr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=z$(n,o),i=G$(t,s,o);i in this.freeTextures||(this.freeTextures[i]=[]);let a=O$(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=$().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let l=this.usedTextures[i],p=l.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(p,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function aoe(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function O$(r,e,t,n,o){let s=ioe(e,n),i;if(o){let[u,l]=Ii(r[0],r[1]);i=u*l}else{let[u,l]=Dp(r[0],r[1]);i=u*l}let a=aoe(t,s);return i*a}function ioe(r,e){switch(r){case Zr.PACKED_2X2_FLOAT32:return Ax(e);case Zr.PACKED_2X2_FLOAT16:return Nx(e);case Zr.UNPACKED_FLOAT32:return Sx(e);case Zr.UNPACKED_FLOAT16:return wx(e);case Zr.PACKED_4X1_UNSIGNED_BYTE:return _x(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function uoe(r){return $().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?Zr.PACKED_2X2_FLOAT32:Zr.UNPACKED_FLOAT32:r?Zr.PACKED_2X2_FLOAT16:Zr.UNPACKED_FLOAT16}function z$(r,e){if(r===sn.UPLOAD)return Zr.PACKED_2X2_FLOAT32;if(r===sn.RENDER||r==null)return uoe(e);if(r===sn.DOWNLOAD||r===sn.PIXELS)return Zr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function G$(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var Cn=class{constructor(e,t){this.variableNames=["A"];this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},kr="if (isnan(x)) return x;",U$="return x;",r_="return abs(x);";var W$="return (x >= 0.0) ? x : (exp(x) - 1.0);",K$=kr+`
  return (x < 0.0) ? 0.0 : x;
`,V$=kr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Rp="return x;",j$="return 1.0 / (1.0 + exp(-1.0 * x));";var q$="return x;",X$=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Y$=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Q$=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Z$="return 1.0 / (1.0 + exp(-1.0 * x));",Js=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var n_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let t=e.length,n=sr("rc",t),o=je(t),s=$$(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var poe=Tr.whereImpl,moe=1e-7,coe=1e-4,Ex={};function doe(r){return r in Ex||(Ex[r]={}),Ex[r]}var foe=$().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),hoe=600;function goe(){return $().global.screen==null?1024:$().global.screen.height*$().global.screen.width*window.devicePixelRatio*hoe/1024/1024}var o_=class extends cs{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!$().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof jc)t=e;else{let n=ro($().getNumber("WEBGL_VERSION"),e);t=new jc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=ro($().getNumber("WEBGL_VERSION"));t=new jc(n),this.binaryCache=doe($().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new t_(this.gpgpu),this.numMBBeforeWarning=goe(),this.texData=new Za(this,Qn())}nextDataId(){return o_.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(($().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||$().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:sn.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if($().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:sn.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:i,shape:a,isPacked:u}=t;if(i!=null){let c;u?c=new Js(a,Rp):c=new Cn(a,Rp);let d=this.runWebGLProgram(c,[{dataId:e,shape:a,dtype:o}],o),f=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let l=this.activeTimers!=null,p;l&&(p=b.now());let m;if(o==="complex64"){let c=this.readSync(s.real.dataId),d=this.readSync(s.imag.dataId);m=I.mergeRealAndImagArrays(c,d)}else m=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=b.now()-p),this.convertAndCacheOnCPU(e,m)}async read(e){if(this.pendingRead.has(e)){let f=this.pendingRead.get(e);return new Promise(h=>f.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:i,complexTensorInfos:a,isPacked:u}=t;if(s!=null){let f;u?f=new Js(o,Rp):f=new Cn(o,Rp);let h=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:i}],i),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if($().getBool("DEBUG")&&!$().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&$().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,p;if(i!=="complex64"&&$().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let f=this.texData.get(p.dataId);l=this.gpgpu.createBufferFromTexture(f.texture.texture,...Jh(o))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let m;if(i==="complex64"){let f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),h=f[0],g=f[1];m=I.mergeRealAndImagArrays(h,g)}else if(l==null)m=this.getValuesFromTexture(e);else{let f=b.sizeFromShape(o);m=this.gpgpu.downloadFloat32MatrixFromBuffer(l,f)}if(p!=null&&this.disposeIntermediateTensorInfo(p),l!=null){let f=this.gpgpu.gl;Se(f,()=>f.deleteBuffer(l))}let c=this.convertAndCacheOnCPU(e,m),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(f=>f(c)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Qn().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,t={}){let n=this.texData.get(e),{values:o,shape:s,slice:i,dtype:a,isPacked:u,texture:l}=n;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let d;u?d=new Js(s,Rp):d=new Cn(s,Rp);let f=this.runWebGLProgram(d,[{dataId:e,shape:s,dtype:a}],a),h=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),h}if(l==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,t.customTexShape),m=Qn().makeTensorFromDataId(p.dataId,p.shape,p.dtype),c=this.texData.get(p.dataId);return{tensorRef:m,...c.texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!lw(n))throw $().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=b.sizeFromShape(t);if($().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(e),d=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Jh(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(c),f}let i=$().getBool("WEBGL_PACK")&&o===!0,a=i?ng(t):t,u=i?new Ew(a):new Mw(a),l=this.runWebGLProgram(u,[{shape:a,dtype:n,dataId:e}],"float32"),p=this.texData.get(l.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),m}timerAvailable(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(s);a.kernelMs=b.sum(u),a.getExtraProfileInfo=()=>u.map((l,p)=>({name:i[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}async getQueryTime(e){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:i,slice:a}=this.texData.get(e),u=a&&a.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,i)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=foe){return $().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&b.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return poe(e.shape,t)}packedUnaryOp(e,t,n){let o=new Js(e.shape,t),s=this.compileAndRun(o,[e],n);return Qn().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=Px(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if($().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,r_,e.dtype);let t=new Cn(e.shape,r_),n=this.compileAndRun(t,[e]);return Qn().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(i=>b.encodeString(i));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:o}=this.makeTensorInfo(e,t,n);return Qn().makeTensorFromDataId(o,e,t,this)}unpackTensor(e){let t=new n_(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new e_(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[vu(e.shape),...Su(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[vu(t),...Su(t)],i=new sg(s,n),a=!0,u=[n],l=this.runWebGLProgram(i,[o],e.dtype,u,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:o,shape:s,dtype:i}=n;if(t!=null){let c=b.sizeFromShape(s),d=t[0]*t[1]*4;b.assert(c<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let a=ng(s),u;o?u=new Pw(a):u=new Dw(a);let l=!0,p=[t??Jh(a)],m=this.runWebGLProgram(u,[{shape:a,dtype:i,dataId:e}],i,p,l,t);return{dtype:i,shape:s,dataId:m.dataId}}runWebGLProgram(e,t,n,o,s=!1,i){let a=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(a.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Np.DENSE){let y=i??Jh(e.outputShape);u.texShape=y.map(x=>x*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),b.sizeFromShape(a.shape)===0)return u.values=b.getTypedArrayFromDType(a.dtype,0),a;let l=[],p=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(y.dataId);if(x.texture==null){if(!e.packedInputs&&b.sizeFromShape(y.shape)<=$().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!x.isPacked!=!!e.packedInputs)y=x.isPacked?this.unpackTensor(y):this.packTensor(y),l.push(y),x=this.texData.get(y.dataId);else if(x.isPacked&&!gl(x.shape,y.shape)){let T=y,k=y.shape;y.shape=x.shape,y=this.packedReshape(y,k),l.push(y),x=this.texData.get(y.dataId),T.shape=k}return{shape:y.shape,texData:x,isUniform:!1}});this.uploadToGPU(a.dataId);let m={shape:a.shape,texData:u,isUniform:!1},c=JB(e,p,m),d=this.getAndSaveBinary(c,()=>YB(this.gpgpu,e,p,m)),f=this.activeTimers!=null,h;f&&(h=this.startTimer()),ZB(this.gpgpu,d,p,m,o),l.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let g=$().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let y=b.now();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!$().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let y=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),y}return a}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||($().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=G(()=>{if(!$().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=$().getBool("DEBUG");$().set("DEBUG",!1);let t=this.abs(ce(1e-8)).dataSync()[0];if($().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?moe:coe}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:i,usage:a,isPacked:u}=t;if(i!=null)return;let l=this.activeTimers!=null,p;l&&(p=b.now());let m=t.texShape;if(m==null&&(m=Iw(n,u),t.texShape=m),s!=null){let c=ng(n),d,f=m[1],h=m[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!g)&&([f,h]=Ii(m[0],m[1])),u?d=new Fw(c,g):d=new Rw(c,g);let y=g?[h,f]:m,x=this.makeTensorInfo(y,o),T=this.texData.get(x.dataId);g?T.usage=sn.PIXELS:T.usage=sn.UPLOAD,T.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,h,s);let k=[[h,f]],C=!0,A=this.runWebGLProgram(d,[x],o,k,C),M=this.texData.get(A.dataId);t.texture=M.texture,t.texShape=M.texShape,t.isPacked=M.isPacked,t.usage=M.usage,this.disposeIntermediateTensorInfo(x),this.texData.delete(A.dataId),t.values=null,l&&(this.uploadWaitMs+=b.now()-p)}else{let c=this.acquireTexture(m,a,o,u);t.texture=c}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=boe(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*b.bytesPerElement(t)}},ag=o_;ag.nextDataId=0;function boe(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var yoe="0.0.0";function J$(){$().set("WEBGL_FORCE_F16_TEXTURES",!0)}ii.isBrowser()&&rl("webgl",()=>new ag,2);var iHt={forceHalfFloat:J$};var Rx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var ea=class{constructor(e,t,n){this.variableNames=["A","B"];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var bl=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var ja=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=I.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=Bt(s);let i="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${je(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=sr("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function ar(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var eO={kernelName:Hn,backendName:"webgl",kernelFunc:ar};function $n(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),i=t.texData.get(s.dataId),a=ar({inputs:{x:n},backend:t}),u=ar({inputs:{x:o},backend:t});return i.complexTensorInfos={real:a,imag:u},s}var tO={kernelName:Bu,backendName:"webgl",kernelFunc:$n};var s_="return (a < 0.) ? b * a : a;",a_=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function xoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,i=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),a=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ja(a_,o.shape,i.shape):new ea(s_,o.shape,i.shape),u=t.runWebGLProgram(a,[o,i],"float32");return t.disposeIntermediateTensorInfo(i),u}var rO={kernelName:wo,backendName:"webgl",kernelFunc:xoe};var i_="return (a < 0.) ? b * a : a;",u_=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Toe(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ja(u_,n.shape,o.shape):new ea(i_,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var nO={kernelName:$o,backendName:"webgl",kernelFunc:Toe};var ta="if (isnan(x)) return x;",oO=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,sO=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function _e({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:i}=o,a=s,u=n||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){let m=a.texData.get(i.dataId),c=t(m.values,u);return a.makeTensorInfo(i.shape,u,c)}let l=$().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,p;return l?p=new Js(i.shape,e):p=new Cn(i.shape,r),a.runWebGLProgram(p,[i],u)}}function mt({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:i,backend:a})=>{let{a:u,b:l}=i,p=a;if(n&&u.dtype==="complex64"){let f=p.texData.get(u.dataId),h=p.texData.get(l.dataId),[g,y]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(T=>{let[k,C]=T,A={dataId:k.dataId,dtype:k.dtype,shape:u.shape},M={dataId:C.dataId,dtype:C.dtype,shape:l.shape},D=new ea(r,u.shape,l.shape);return p.runWebGLProgram(D,[A,M],Kt(k.dtype,C.dtype))}),x=$n({inputs:{real:g,imag:y},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(y),x}let m=s||Kt(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||p.shouldExecuteOnCPU([u,l]))&&o!=null){let f=p.texData.get(u.dataId).values,h=p.texData.get(l.dataId).values,g=u.dtype==="string"?I.fromUint8ToStringArray(f):f,y=u.dtype==="string"?I.fromUint8ToStringArray(h):h,[x,T]=o(u.shape,l.shape,g,y,m),k=p.makeTensorInfo(T,m),C=p.texData.get(k.dataId);return C.values=x,k}let c=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,d;return c?d=new ja(e,u.shape,l.shape,t):d=new ea(r,u.shape,l.shape),p.runWebGLProgram(d,[u,l],m)}}function yl(r,e=!1){if(r==="linear")return e?q$:U$;if(r==="relu")return e?Y$:K$;if(r==="elu")return e?X$:W$;if(r==="relu6")return e?Q$:V$;if(r==="prelu")return e?u_:i_;if(r==="leakyrelu")return e?a_:s_;if(r==="sigmoid")return e?Z$:j$;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var ig=class{constructor(e,t,n,o=!1,s=!1,i=!1,a=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=Bt(this.outputShape.length);let p=o?e[1]:e[2],m=Math.ceil(p/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";a&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");let x=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let T="rc.x",k="rc.x";e[0]<t[0]?T=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(k=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${T};
          int batchB = ${k};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${y}

        setOutput(result);
      }
    `}};var l_={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Fx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var aO="return a * b;";function ug(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=I.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let a=t.texData.get(n.dataId),u=t.texData.get(o.dataId),l=new Fx(l_.REAL,n.shape,o.shape),p=new Fx(l_.IMAG,n.shape,o.shape),m=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],c=t.runWebGLProgram(l,m,"float32"),d=t.runWebGLProgram(p,m,"float32"),f=$n({inputs:{real:c,imag:d},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}if(t.shouldExecuteOnCPU([n,o])){let a=t.texData.get(n.dataId),u=t.texData.get(o.dataId),[l,p]=x$(n.shape,o.shape,a.values,u.values,s),m=t.makeTensorInfo(p,s),c=t.texData.get(m.dataId);return c.values=l,m}let i;return $().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new ja(aO,n.shape,o.shape):i=new ea(aO,n.shape,o.shape),t.runWebGLProgram(i,[n,o],s)}var iO={kernelName:Fo,backendName:"webgl",kernelFunc:ug};function uO(r,e,t){let n=[vu(r.shape),...Su(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[vu(e),...Su(e)],i=new sg(s,n),a=!0,u=[n],l=t.runWebGLProgram(i,[o],r.dtype,u,a);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function le(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,i=t,a=b.sizeFromShape(o.shape),u=b.inferFromImplicitShape(s,a),l=b.sizeFromShape(u);b.assert(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let p=i.texData.get(o.dataId);return p.isPacked&&!gl(o.shape,u)&&!(p.texture!==null&&gl(p.shape,u))?uO(o,u,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var lO={kernelName:ks,backendName:"webgl",kernelFunc:le};var Lx=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=e;this.outputShape=[o,i];let a=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(t!=null){let m=1/t;l=`sumValue += dot(values * ${b.isInt(m)?m.toPrecision(2):m}, ones);`}let p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var p_=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=e;this.outputShape=[o,i];let a="0.0",u="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",u="min"):t==="max"&&(a="-1.0 / 1e-20",u="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,m=n%4,c=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(a="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(a="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function Ioe(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=I.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function oo(r,e,t,n){let o=Ioe(r.shape),s=r;for(let i=0;i<o.length;i++){let{inSize:a,windowSize:u,outSize:l}=o[i],p,m;t==="mean"?p=i===0?new Lx({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l},a):new Lx({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l}):p=new p_({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l},t),m=s,s=n.runWebGLProgram(p,[s],e),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var m_=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;let o=je(this.rank),s=Coe(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function Coe(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var c_=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=je(this.rank),s=Jw("rc",this.rank),i=new Array(this.rank);for(let p=0;p<t.length;p++)i[t[p]]=s[p];let a=`vec2(${i.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function xl(r,e,t){let n=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new c_(r.shape,e):new m_(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function pO(r,e,t,n){let o=e,s=r.shape.length,i=b.parseAxisParam(o,r.shape),a=i,u=I.getAxesPermutation(a,s),l=u!=null,p=r;l&&(p=xl(r,u,n),a=I.getInnerMostAxes(a.length,s)),I.assertAxesAreInnerMostDims("sum",a,s);let[m,c]=I.computeOutAndReduceShapes(p.shape,a),d=m;t&&(d=I.expandShapeToKeepDim(m,i));let f=b.sizeFromShape(c),g=b.sizeFromShape(r.shape)/f,y=le({inputs:{x:p},attrs:{shape:[g,f]},backend:n}),x=tu(r.dtype),T=oo(y,x,"sum",n),k=le({inputs:{x:T},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(T),l&&n.disposeIntermediateTensorInfo(p),k}function Fp(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return pO(o,s,i,t)}var mO={kernelName:jo,backendName:"webgl",kernelFunc:Fp};function Ht(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,i=t,a=o.shape.length,u=new Array(a);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];let l;if(i.shouldExecuteOnCPU([o])){let m=i.texData.get(o.dataId).values,c=Ep(m,o.shape,o.dtype,s,u);l=i.makeTensorInfo(u,o.dtype);let d=i.texData.get(l.dataId);d.values=c}else l=xl(o,s,i);return l}var cO={kernelName:Qo,backendName:"webgl",kernelFunc:Ht};var d_=1e3;function Lp({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,m=t?r.shape[l-2]:r.shape[l-1],c=n?e.shape[p-1]:e.shape[p-2],d=t?r.shape[l-1]:r.shape[l-2],f=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),x=b.sizeFromShape(g),k=Nr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let C=t?[y,m,d]:[y,d,m],A=n?[x,f,c]:[x,c,f],M=le({inputs:{x:r},backend:o,attrs:{shape:C}}),D=le({inputs:{x:e},backend:o,attrs:{shape:A}}),R=[M,D],B=Math.max(y,x),U=t?M.shape[1]:M.shape[2],W=s!=null,K=i!=null,j=u==="leakyrelu",V=u!=null?yl(u,!0):null,q=W||K||j||V!=null,ee;if((d===1||f===1)&&U>d_&&q===!1){let te=M,oe=D;t&&(te=Ht({inputs:{x:M},backend:o,attrs:{perm:[0,2,1]}}),R.push(te)),n&&(oe=Ht({inputs:{x:D},backend:o,attrs:{perm:[0,2,1]}}),R.push(oe));let ie=f!==1,se=f===1,ue=te;ie&&(ue=le({inputs:{x:te},backend:o,attrs:{shape:[B,U,1]}}),R.push(ue));let ye=f===1?2:1,fe=oe;se&&(fe=le({inputs:{x:oe},backend:o,attrs:{shape:[B,1,U]}}),R.push(fe));let xe=ug({inputs:{a:ue,b:fe},backend:o});ee=Fp({inputs:{x:xe},backend:o,attrs:{axis:ye,keepDims:!0}}),R.push(xe)}else{let te=Kt(r.dtype,e.dtype),oe=new ig(C,A,[B,d,f],t,n,W,V,K,j),ie=[M,D];if(s!=null&&ie.push(s),K&&ie.push(i),j){let se=o.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));ie.push(se),R.push(se)}ee=o.runWebGLProgram(oe,ie,te)}let Z=le({inputs:{x:ee},backend:o,attrs:{shape:k}});R.push(ee);for(let te of R)o.disposeIntermediateTensorInfo(te);return Z}function voe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return Lp({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:m,activation:p})}var dO={kernelName:Ns,backendName:"webgl",kernelFunc:voe};var fO="return abs(x);";function Soe(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),i=Px(s.values);return t.makeTensorInfo(n.shape,n.dtype,i)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Js(n.shape,fO):o=new Cn(n.shape,fO),t.runWebGLProgram(o,[n],n.dtype)}var hO={kernelName:ds,backendName:"webgl",kernelFunc:Soe};var woe=kr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,_oe=_e({opSnippet:woe}),gO={kernelName:Mi,backendName:"webgl",kernelFunc:_oe};var Aoe=kr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Noe=_e({opSnippet:Aoe}),bO={kernelName:Ei,backendName:"webgl",kernelFunc:Noe};var yO="return a + b;",Doe=mt({opSnippet:yO,packedOpSnippet:yO,supportsComplex:!0,cpuKernelImpl:e$}),xO={kernelName:An,backendName:"webgl",kernelFunc:Doe};var f_=class{constructor(e,t){this.outputShape=[];this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var h_=class{constructor(e,t){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function Bx(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return ar({inputs:{x:n[0]},backend:t});if(n.length>$().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=Bx({inputs:n.slice(0,u),backend:t}),p=Bx({inputs:n.slice(u),backend:t});return Bx({inputs:[l,p],backend:t})}let o=n.map(u=>u.dtype).reduce((u,l)=>Kt(u,l)),s=n.map(u=>u.shape),a=$().getBool("WEBGL_PACK")?new h_(n[0].shape,s):new f_(n[0].shape,s);return t.runWebGLProgram(a,n,o)}var TO={kernelName:uo,backendName:"webgl",kernelFunc:Bx};function Poe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,a),m=o;p!=null&&(m=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,a)),I.assertAxesAreInnerMostDims("all",l,a);let[c,d]=I.computeOutAndReduceShapes(m.shape,l),f=b.sizeFromShape(d),h=le({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=oo(h,h.dtype,"all",t),y;if(i){let x=I.expandShapeToKeepDim(c,u);y=le({inputs:{x:g},backend:t,attrs:{shape:x}})}else y=le({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(m),y}var kO={kernelName:Ri,backendName:"webgl",kernelFunc:Poe};function Moe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,a),m=o;p!=null&&(m=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,a)),I.assertAxesAreInnerMostDims("any",l,a);let[c,d]=I.computeOutAndReduceShapes(m.shape,l),f=b.sizeFromShape(d),h=le({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=oo(h,h.dtype,"any",t),y;if(i){let x=I.expandShapeToKeepDim(c,u);y=le({inputs:{x:g},backend:t,attrs:{shape:x}})}else y=le({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(m),y}var IO={kernelName:Fi,backendName:"webgl",kernelFunc:Moe};var g_=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=t==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var b_=class{constructor(e,t,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;b.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");let a=this.outputShape,u=a.length,l=je(u),p=sr("coords",u),m,c;if(i===1){c=u+1;let D=je(c);m=`
        ${D} sourceLocR = ${D}(${p.join()}, 0);
        ++${p[u-1]};
        ${D} sourceLocG = ${D}(${p.join()}, 0);
        ++${p[u-2]};
        ${D} sourceLocA = ${D}(${p.join()}, 0);
        --${p[u-1]};
        ${D} sourceLocB = ${D}(${p.join()}, 0);
        --${p[u-2]};`}else c=u,m=`
        ${l} sourceLocR = coords;
        ++${p[u-1]};
        ${l} sourceLocG = coords;
        ++${p[u-2]};
        ${l} sourceLocA = coords;
        --${p[u-1]};
        ${l} sourceLocB = coords;
        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(D=>"int "+D),g=sr("sourceLocR",c-1).concat("inIdx.r"),y=sr("sourceLocG",c-1).concat("inIdx.g"),x=sr("sourceLocB",c-1).concat("inIdx.b"),T=sr("sourceLocA",c-1).concat("inIdx.a"),k=n==="max"?"greaterThan":"lessThan",C=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${T.join()})));`,A=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,M=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${M}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${p[u-2]} < ${a[u-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${A};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${A};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function CO(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let i=I.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:o,outSize:Math.ceil(s/i)},u=new g_(a,t,n==null),l=[e];n!=null&&l.push(n);let p=r.runWebGLProgram(u,l,"int32");if(p.shape[1]===1)return p;let m=CO(r,e,t,p);return r.disposeIntermediateTensorInfo(p),m}function vO(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],i=I.computeOptimalWindowSize(s),a=new b_(o,i,t,n==null),u=n==null?[e]:[e,n],l=r.runWebGLProgram(a,u,"int32");if(l.shape.length===e.shape.length){let p=vO(r,e,t,l);return r.disposeIntermediateTensorInfo(l),p}return l}function $x(r,e,t,n){let o=[t];if(I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!$().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],i=r.texData.get(e.dataId),a=i!==null&&i.isPacked,u=e;a&&(u=r.unpackTensor(e),s.push(u));let[l,p]=I.computeOutAndReduceShapes(u.shape,o),m=b.sizeFromShape(p),c=le({inputs:{x:u},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=CO(r,c,n);s.push(d);let f=le({inputs:{x:d},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return vO(r,e,n)}function Eoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Ht({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let p=$x(t,u,i[0],"max");return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}var SO={kernelName:lo,backendName:"webgl",kernelFunc:Eoe};function Roe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Ht({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let p=$x(t,u,i[0],"min");return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}var wO={kernelName:ti,backendName:"webgl",kernelFunc:Roe};var Foe=kr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Loe=_e({opSnippet:Foe}),_O={kernelName:Li,backendName:"webgl",kernelFunc:Loe};var Boe=kr+"return log(x + sqrt(x * x + 1.0));",$oe=_e({opSnippet:Boe}),AO={kernelName:Bi,backendName:"webgl",kernelFunc:$oe};var Ooe=kr+`
  return atan(x);
`,zoe=_e({opSnippet:Ooe}),NO={kernelName:$i,backendName:"webgl",kernelFunc:zoe};var Goe=oO+`
  return atan(a, b);
`,Uoe=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+sO+`
  return result;
`,Woe=mt({opSnippet:Goe,packedOpSnippet:Uoe}),DO={kernelName:zi,backendName:"webgl",kernelFunc:Woe};var Koe=kr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Voe=_e({opSnippet:Koe}),PO={kernelName:Oi,backendName:"webgl",kernelFunc:Voe};var Ci=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,p=e.dilationWidth,m=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,x="0.0";if(h||(x="-1.0 / 1e-20"),n){let D=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${D} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:y:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let T="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let C=Math.floor(i/4)*4,A=i%4,M=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${M}
          }

          int xC = xCCorner + ${C};
          if (${A===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${M}
          } else if (${A===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${M}
          } else if (${A===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${M}
          }
        }
        setOutput(${k});
      }
    `}},Bp=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideDepth,u=e.strideHeight,l=e.strideWidth,p=e.dilationDepth,m=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;let T=t==="avg",k="0.0";if(T||(k="-1.0 / 1e-20"),n){let B=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${y}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${B} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let C="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");let M=Math.floor(i/4)*4,D=i%4,R=`
      if (${T}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${y}, ${x});
      const float initializationValue = ${k};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${k});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${M}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${M};
            if (${D===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${D===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${D===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${R}
            }
          }
          setOutput(${A});
        }
      }
    `}};function joe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ka(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,i,l,a,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return ar({inputs:{x:o},backend:t});let m=new Ci(p,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var MO={kernelName:po,backendName:"webgl",kernelFunc:joe};function Hoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n,p=[1,1,1],m=I.computePool3DInfo(o.shape,s,i,p,a,u,l),c=new Bp(m,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var EO={kernelName:Lu,backendName:"webgl",kernelFunc:Hoe};var y_=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,p=u-1-e.padInfo.top,m=l-1-e.padInfo.left,c=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},x_=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,m=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=m-1-e.padInfo.front,h=c-1-e.padInfo.top,g=d-1-e.padInfo.left,y=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function qoe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s,{filterSize:a,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=I.computePool3DInfo(i.shape,a,u,m,l,p),d=new x_(c);return t.runWebGLProgram(d,[o],i.dtype)}var RO={kernelName:um,backendName:"webgl",kernelFunc:qoe};function Xoe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s;Ka([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:l}=n,p=I.computePool2DInfo(i.shape,a,u,1,l),m=new y_(p);return t.runWebGLProgram(m,[o],i.dtype)}var FO={kernelName:im,backendName:"webgl",kernelFunc:Xoe};function Yoe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;return Lp({a:o,b:s,transposeA:i,transposeB:a,backend:t})}var LO={kernelName:mo,backendName:"webgl",kernelFunc:Yoe};var T_=class{constructor(e,t,n,o,s,i){this.outputShape=[];this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let a="0.0";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var k_=class{constructor(e,t,n,o,s,i){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let a="vec4(0.0)";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Qoe=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:i,scale:a}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);let l=[n,o,s],p=null;i!=null&&(p=i.shape,l.push(i));let m=null;a!=null&&(m=a.shape,l.push(a));let c=$().getBool("WEBGL_PACK_NORMALIZATION")?new k_(n.shape,o.shape,s.shape,p,m,u):new T_(n.shape,o.shape,s.shape,p,m,u);return e.runWebGLProgram(c,l,l[0].dtype)},BO={kernelName:vo,backendName:"webgl",kernelFunc:Qoe};var I_=class{constructor(e){this.variableNames=["source"];this.outputShape=e,this.rank=e.length;let t=je(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Zoe(this.rank),o,s=e.map((i,a)=>`sourceLoc.${C_[a]} = start[${a}] + coords.${C_[a]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},C_=["x","y","z","w","u","v"];function Zoe(r){if(r===1)return"sourceLoc";if(r<=6)return C_.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var v_=class{constructor(e){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=je(this.rank),n=sr("coords",this.rank),o=sr("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,m)=>`start[${m}]`).join()});`:e.map((p,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}};function Joe(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),i=n.texData.get(s.dataId);Object.assign(i,o),i.refCount=1,i.shape=t,i.dtype=r.dtype;let a=Tt.computeFlatOffset(e,b.computeStrides(r.shape));o.slice&&(a+=o.slice.flatOffset),i.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,u+1),s}function Ha(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n,[a,u]=Tt.parseSliceParams(o,s,i);if(Tt.assertParamsValid(o,a,u),b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.texData.get(o.dataId),c=w$(m.values,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,c)}let{isPacked:l}=t.texData.get(o.dataId),p=Tt.isSliceContinous(o.shape,a,u);if(l||!p){let m=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new v_(u):new I_(u),c=[a];return t.runWebGLProgram(m,[o],o.dtype,c)}return t.uploadToGPU(o.dataId),Joe(o,a,u,t)}var $O={kernelName:Cs,backendName:"webgl",kernelFunc:Ha};var ese=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((x,T)=>x*T),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,a),m=I.getSliceBeginCoords(i,s.length),c=I.getSliceSize(p,i,s.length),d=[],f=le({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Ht({inputs:{x:f},backend:t,attrs:{perm:l}}),g=le({inputs:{x:h},backend:t,attrs:{shape:p}}),y=Ha({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(x=>t.disposeIntermediateTensorInfo(x)),y},OO={kernelName:fs,backendName:"webgl",kernelFunc:ese};function tse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i}=n,a=t.readSync(o.dataId),u=t.readSync(s.dataId),l=Dx(a,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,l)}var zO={kernelName:lm,backendName:"webgl",kernelFunc:tse};function rse(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),i=t.readSync(o.dataId),a=I.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var GO={kernelName:pm,backendName:"webgl",kernelFunc:rse};var nse="return float(a != b);",S_=mt({opSnippet:nse,cpuKernelImpl:k$,dtype:"bool"}),UO={kernelName:ga,backendName:"webgl",kernelFunc:S_};function wu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return ar({inputs:{x:o.complexTensorInfos.real},backend:t})}var WO={kernelName:Vu,backendName:"webgl",kernelFunc:wu};var ose="return float(int(x));";function KO(r,e){let t=new Cn(r.shape,ose),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function w_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return ar({inputs:{x:o},backend:t});let i=xt(o.shape),a=w_({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=$n({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),u}if(o.dtype==="complex64"){let i=wu({inputs:{input:o},backend:t}),a=w_({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(i),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=ar({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return KO(o,t);if(s==="bool"){let i=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=S_({inputs:{a:o,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var VO={kernelName:Vn,backendName:"webgl",kernelFunc:w_};var jO="return ceil(x);",sse=_e({opSnippet:jO,packedOpSnippet:jO,cpuKernelImpl:r$}),HO={kernelName:co,backendName:"webgl",kernelFunc:sse};var __=class{constructor(e){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var A_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function ase(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a;$().getBool("WEBGL_PACK_CLIP")?a=new A_(o.shape):a=new __(o.shape);let u=[[s],[i]];return t.runWebGLProgram(a,[o],o.dtype,u)}var qO={kernelName:jn,backendName:"webgl",kernelFunc:ase};var N_=class{constructor(e){this.variableNames=["real","imag"];this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function XO(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function ise(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new N_(n.shape),i=[XO(n,o.complexTensorInfos.real),XO(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,i,i[0].dtype)}var YO={kernelName:$u,backendName:"webgl",kernelFunc:ise};var D_=class{constructor(e){this.outputShape=[];this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((i,a)=>`T${a}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){let a=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var P_=class{constructor(e,t){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=I.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=je(o),i=sr("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let u=new Array(e.length-1);u[0]=e[0][t];for(let h=1;h<u.length;h++)u[h]=u[h-1]+e[h][t];let l=a[t],p=a.slice(-2),m=a.join(),c=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${m}), vec2(${p.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];c+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${Ox(a,l,g)}),
            vec2(${Ox(p,l,g)}));
        }`}let d=u.length,f=u[u.length-1];c+=`
        return getChannel(
          getT${d}(${Ox(a,l,f)}),
          vec2(${Ox(p,l,f)}));`,this.userCode=`
      float getValue(${a.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${n[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${n[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${n[o-2]} &&
            ${i[o-1]} < ${n[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function Ox(r,e,t){let n=r.indexOf(e);return r.map((s,i)=>i===n?`${s} - ${t}`:s).join()}function $p(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return ar({inputs:{x:o.complexTensorInfos.imag},backend:t})}var QO={kernelName:Uu,backendName:"webgl",kernelFunc:$p};function Op(r,e,t){let n=r[0].dtype;if(n==="complex64"){let p=r.map(h=>wu({inputs:{input:h},backend:t})),m=r.map(h=>$p({inputs:{input:h},backend:t})),c=Op(p,e,t),d=Op(m,e,t),f=$n({inputs:{real:c,imag:d},backend:t});return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),m.forEach(h=>t.disposeIntermediateTensorInfo(h)),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let p=r.map(y=>{let x=b.sizeFromShape(y.shape.slice(e));return le({inputs:{x:y},backend:t,attrs:{shape:[-1,x]}})}),m=p.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),c=I.computeOutShape(p.map(y=>y.shape),1),d=p[0].shape[0]===1,f=n$(m,c,n,d),h=I.computeOutShape(r.map(y=>y.shape),e),g=t.makeTensorInfo(h,n,f);return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}if(r.length>$().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let p=Math.floor(r.length/2),m=Op(r.slice(0,p),e,t),c=Op(r.slice(p),e,t),d=Op([m,c],e,t);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),d}if($().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let p=new P_(r.map(m=>m.shape),e);return t.runWebGLProgram(p,r,n)}let{tensors2D:s,outShape:i}=use(r,e,t),a=new D_(s.map(p=>p.shape)),u=t.runWebGLProgram(a,s,n);s.forEach(p=>t.disposeIntermediateTensorInfo(p));let l=le({inputs:{x:u},attrs:{shape:i},backend:t});return t.disposeIntermediateTensorInfo(u),l}function use(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>le({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function M_(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=I.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let a=e.filter(l=>b.sizeFromShape(l.shape)>0);if(a.length===1)return ar({inputs:{x:a[0]},backend:t});let u=a.map(l=>l.shape);return I.assertParamsConsistent(u,s),Op(a,s,t)}var ZO={kernelName:hs,backendName:"webgl",kernelFunc:M_};var lg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=e.outShape;let i=e.padInfo.top,a=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,p=e.dilationHeight,m=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,x=g?2:3,T=g?3:1,k="",C="";n&&(o?k=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?k=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:k=`
          float activation(float x) {
            ${n}
          }
        `,C="result = activation(result);");let A=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${k}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${T}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${A}
        ${C}
        setOutput(result);
      }
    `}},E_=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,m=e.filterDepth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var R_=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let{dataFormat:n}=t,o=Qt(),s=n==="channelsLast",i=s?0:1,a=s?1:2,u=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let p=0;p<=1;p++)for(let m=0;m<=1;m++)l+=`
          blockIndex = rc.y + ${m};
          pos = rc.x + ${p};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+m}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+m}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function zx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=r.shape,l=n.texData.get(r.dataId),p=t.inChannels,m=u[0]*u[1]*u[2],c=t.outChannels,d=t.dataFormat==="channelsLast",f=!1,h=!1,g,y=[];if(!((m===1||c===1)&&p>d_)&&l.isPacked&&d&&l.texture!=null&&u[2]%2!=0&&b.arraysEqual(l.shape.slice(-3),u.slice(-3))){let k=u[0]*u[1]*(u[2]+1),C={dataId:r.dataId,shape:[1,k,t.inChannels],dtype:r.dtype},A=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,b.assert(gl(l.shape,C.shape),()=>`packed reshape ${l.shape} to ${C.shape} isn't free`);let M=le({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(M);let D=Lp({a:C,b:M,backend:n,transposeA:f,transposeB:h,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),R=n.texData.get(D.dataId);b.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=A,R.shape=t.outShape,g=ar({inputs:{x:D},backend:n}),g.shape=t.outShape,y.push(D)}else{let k=d?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],C=le({inputs:{x:r},backend:n,attrs:{shape:[1,k,t.inChannels]}}),A=le({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),M=Lp({a:C,b:A,transposeA:f,transposeB:h,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i});g=le({inputs:{x:M},backend:n,attrs:{shape:t.outShape}}),y.push(C),y.push(A),y.push(M)}for(let k of y)n.disposeIntermediateTensorInfo(k);return g}function Gx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:u,filterHeight:l,inChannels:p,outWidth:m,outHeight:c,dataFormat:d}=t,f=d==="channelsLast",h=u*l*p,g=c*m,y=[h,g],x=!0,T=!1,k=[],C=le({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),A=le({inputs:{x:e},backend:n,attrs:{shape:[1,h,b.sizeFromShape(e.shape)/h]}});k.push(C),k.push(A);let M=new R_(y,t),D=[C.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],R=n.runWebGLProgram(M,[C],"float32",D),B=le({inputs:{x:R},backend:n,attrs:{shape:[1,y[0],y[1]]}});k.push(R),k.push(B);let U=o!=null,W=s!=null,K=a==="leakyrelu",j=a?yl(a,!0):null,V=new ig(B.shape,A.shape,[1,g,t.outChannels],x,T,U,j,W,K),q=[B,A];if(o&&q.push(o),W&&q.push(s),K){let oe=n.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));q.push(oe),k.push(oe)}let ee=n.runWebGLProgram(V,q,"float32"),Z=f?[1,c,m,t.outChannels]:[1,t.outChannels,c,m],te=le({inputs:{x:ee},backend:n,attrs:{shape:Z}});k.push(ee);for(let oe of k)n.disposeIntermediateTensorInfo(oe);return te}function lse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:p}=n,m=I.convertConv2DDataFormat(u),c=I.computeConv2DInfo(o.shape,s.shape,i,l,a,p,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=zx({x:o,filter:s,convInfo:c,backend:t});else if($().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)d=Gx({x:o,filter:s,convInfo:c,backend:t});else{let h=new lg(c);d=t.runWebGLProgram(h,[o,s],"float32")}let f=le({inputs:{x:d},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(d),f}var JO={kernelName:fo,backendName:"webgl",kernelFunc:lse};var F_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},L_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,u=n-1-e.padInfo.left,l=i?1:2,p=i?2:3,m=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},B_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},$_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=t-1-e.padInfo.front,l=n-1-e.padInfo.top,p=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function pse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:p}=n,m=I.convertConv2DDataFormat(u),c=I.computeConv2DInfo(o.shape,p,i,1,a,l,!1,m),d=new F_(c);return t.runWebGLProgram(d,[o,s],"float32")}var ez={kernelName:mm,backendName:"webgl",kernelFunc:pse};function mse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=I.convertConv2DDataFormat(l),c=I.computeConv2DInfo(i,s.shape,a,1,u,p,!1,m),d=new L_(c);return t.runWebGLProgram(d,[o,s],"float32")}var tz={kernelName:ho,backendName:"webgl",kernelFunc:mse};function cse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n,l=I.computeConv3DInfo(o.shape,s.shape,i,u,a),p=new E_(l);return t.runWebGLProgram(p,[o,s],"float32")}var rz={kernelName:Ou,backendName:"webgl",kernelFunc:cse};function dse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,filterShape:u}=n,l=I.computeConv3DInfo(o.shape,u,i,1,a),p=new B_(l);return t.runWebGLProgram(p,[o,s],"float32")}var nz={kernelName:cm,backendName:"webgl",kernelFunc:dse};function fse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:i,strides:a,inputShape:u}=n,l=I.computeConv3DInfo(u,s.shape,a,1,i),p=new $_(l);return t.runWebGLProgram(p,[o,s],"float32")}var oz={kernelName:dm,backendName:"webgl",kernelFunc:fse};var hse=ta+`
  return cos(x);
`,gse=_e({opSnippet:hse}),sz={kernelName:go,backendName:"webgl",kernelFunc:gse};var bse=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,yse=_e({opSnippet:bse}),az={kernelName:bo,backendName:"webgl",kernelFunc:yse};var O_=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[i,a,u,l]=e,[p]=t,[m,c]=n;this.outputShape=[p,m,c,l];let d=o==="bilinear"?1:0,[f,h]=[`${a-1}.0`,`${u-1}.0`],[g,y,x]=m>1?[`${(a-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[T,k,C]=c>1?[`${(u-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${T});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${k};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var xse=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=n,p=new O_(o.shape,s.shape,a,u,l);return t.runWebGLProgram(p,[o,s,i],"float32")},iz={kernelName:aa,backendName:"webgl",kernelFunc:xse};var Ux=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];this.outputShape=e;let o=e.length,s=t?"0.0":`getX(${uz(o,"coords")})`,i=e[e.length-1],a="",u="";t?(a=n?`end != ${i-1}`:"end != 0",u=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${i}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${je(o)} coords = getOutputCoords();
        int end = ${lz(o,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${a}) {
          int idx = ${u};
          ${lz(o,"coords")} = idx;
          val += getX(${uz(o,"coords")});
        }
        setOutput(val);
      }
    `}};function uz(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function lz(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function Tse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length,l=I.getAxesPermutation([s],u),p=o;l!=null&&(p=Ht({inputs:{x:o},backend:t,attrs:{perm:l}}));let m=I.getInnerMostAxes(1,u)[0];if(m!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${s}`);let c=p.shape[m],d=ar({inputs:{x:p},backend:t});for(let f=0;f<=Math.ceil(Math.log2(c))-1;f++){let h=new Ux(p.shape,!1,a),g=[[f]],y=d;d=t.runWebGLProgram(h,[d],d.dtype,g),t.disposeIntermediateTensorInfo(y)}if(i){let f=new Ux(p.shape,i,a),h=d;d=t.runWebGLProgram(f,[d],d.dtype),t.disposeIntermediateTensorInfo(h)}if(l!=null){let f=I.getUndoAxesPermutation(l),h=Ht({inputs:{x:d},backend:t,attrs:{perm:f}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),h}return d}var pz={kernelName:sa,backendName:"webgl",kernelFunc:Tse};function kse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=Dx(u,l,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=t$(u,l,i,a);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var mz={kernelName:fm,backendName:"webgl",kernelFunc:kse};var z_=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Ise(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],p=i==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=i==="NHWC"?[a,m,c,d]:[a,d,m,c],h=new z_(f,s,i);return t.runWebGLProgram(h,[o],o.dtype)}var cz={kernelName:ia,backendName:"webgl",kernelFunc:Ise};var pg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=Bt(this.outputShape.length);let i=e.filterHeight,a=e.filterWidth,u=e.outChannels/e.inChannels,l="",p="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${p}
        setOutput(result);
      }
    `}};var mg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=Bt(this.outputShape.length);let i=e.outChannels/e.inChannels,a=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,p=e.filterHeight,m=e.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<m;y++)d+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;d+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let y=0;y<m;y++)d+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(c+1)/2;y++){let x=y*2;if(d+=`
          xC = xCCorner + ${x*l};
          `,u===1){if(x<m&&(a%2==1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,l===1&&x>0?d+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<m)){let T=a%2==0?b.nearestLargerEven(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${T};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,l>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                      xTexelC${x} = getX(batch, xR, xCOffset, d1);
                      xTexelC${x}Ready = 1;
                    }
                    `),d+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                  `):T===1?d+=`
                    xC${x+1} = xTexelC${x};
                    `:d+=`
                    xCOffset = xC + ${T};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<m&&(a%2==1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<m&&(d+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<m&&(d+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<m&&(d+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function Cse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let m=I.computeConv2DInfo(o.shape,s.shape,i,p,a,l,!0),c;$().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1?c=new mg(m):c=new pg(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return t.runWebGLProgram(c,[o,s],"float32",d)}var dz={kernelName:yo,backendName:"webgl",kernelFunc:Cse};var G_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},U_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function vse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:p}=n,m=I.computeConv2DInfo(o.shape,p,i,a,u,l,!0),c=new G_(m);return t.runWebGLProgram(c,[o,s],"float32")}var fz={kernelName:hm,backendName:"webgl",kernelFunc:vse};function Sse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:p}=n,m=I.computeConv2DInfo(p,s.shape,i,a,u,l,!0),c=new U_(m);return t.runWebGLProgram(c,[o,s],"float32")}var hz={kernelName:gm,backendName:"webgl",kernelFunc:Sse};var W_=class{constructor(e){this.variableNames=["X"];this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function wse(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),i=le({inputs:{x:n},backend:t,attrs:{shape:[s]}}),a=new W_(s),u=t.runWebGLProgram(a,[i],i.dtype),l=le({inputs:{x:u},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var gz={kernelName:bm,backendName:"webgl",kernelFunc:wse};var K_=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:u,dilationHeight:l,dilationWidth:p}=e,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function _se(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n,l=I.computeDilation2DInfo(o.shape,s.shape,i,a,"NHWC",u),p,m=new K_(l);p=t.runWebGLProgram(m,[o,s],"float32");let c=le({inputs:{x:p},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(p),c}var bz={kernelName:zu,backendName:"webgl",kernelFunc:_se};function Ase(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(a,u),m=p.length,c=null,d=i.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:x}=I.getEinsumPermutation(d,u[g]),T;I.isIdentityPermutation(y)?T=s[g]:(T=Ht({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(T));let k=T.shape.slice();for(let C=0;C<x.length;++C)k.splice(x[C],0,1);b.arraysEqual(T.shape,k)||(T=le({inputs:{x:T},backend:t,attrs:{shape:k}}),f.push(T)),c===null?c=T:(c=ug({inputs:{a:T,b:c},backend:t}),f.push(c))}h<m-1&&(l[h]>=0&&(c=Fp({inputs:{x:c},backend:t,attrs:{axis:l[h]-(i.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var yz={kernelName:Gu,backendName:"webgl",kernelFunc:Ase};var Nse="return (x >= 0.0) ? x : (exp(x) - 1.0);",Dse=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Pse=_e({opSnippet:Nse,packedOpSnippet:Dse}),xz={kernelName:To,backendName:"webgl",kernelFunc:Pse};var Mse="return (b >= 1.0) ? a : a * (b + 1.0);",Ese=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Rse=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ja(Ese,n.shape,o.shape):new ea(Mse,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},Tz={kernelName:ym,backendName:"webgl",kernelFunc:Rse};var Fse=`
  return vec4(equal(a, b));
`,Lse="return float(a == b);",Bse=mt({opSnippet:Lse,packedOpSnippet:Fse,dtype:"bool",cpuKernelImpl:o$}),kz={kernelName:ua,backendName:"webgl",kernelFunc:Bse};var $se=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Ose=_e({opSnippet:$se}),Iz={kernelName:Gi,backendName:"webgl",kernelFunc:Ose};var zse=ta+`
  return exp(x);
`,Gse=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,V_=_e({opSnippet:zse,packedOpSnippet:Gse,cpuKernelImpl:s$,dtype:"float32"}),Cz={kernelName:ko,backendName:"webgl",kernelFunc:V_};function Wx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,i=s.shape.length,a=s.shape.slice(),u=o;return o<0&&(b.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),a.splice(u,0,1),le({inputs:{x:s},backend:n,attrs:{shape:a}})}var vz={kernelName:gs,backendName:"webgl",kernelFunc:Wx};var Sz="return exp(x) - 1.0;",Use=_e({opSnippet:Sz,packedOpSnippet:Sz,cpuKernelImpl:a$}),wz={kernelName:la,backendName:"webgl",kernelFunc:Use};var Kx=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${o}.0`:"1.0",a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function Vx(r,e,t){let n=t.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=o/s,a=le({inputs:{x:r},backend:t,attrs:{shape:[i,s]}}),u=a.shape,l=new Kx("real",u,e),p=new Kx("imag",u,e),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],c=t.runWebGLProgram(l,m,"float32"),d=t.runWebGLProgram(p,m,"float32"),f=$n({inputs:{real:c,imag:d},backend:t});t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d);let h=le({inputs:{x:f},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),h}function Wse(r){let{inputs:e,backend:t}=r,{input:n}=e;return Vx(n,!1,t)}var _z={kernelName:xm,backendName:"webgl",kernelFunc:Wse};var j_=class{constructor(e,t){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function _u(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let i=b.getArrayFromDType(s,b.sizeFromShape(n));return i.fill(o),e.makeTensorInfo(n,s,i)}else{let i=new j_(n,o),a=[[o]];return e.runWebGLProgram(i,[],s,a)}}var Az={kernelName:ri,backendName:"webgl",kernelFunc:_u};var H_=class{constructor(e){this.variableNames=["Image"];this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var Nz={kernelName:pa,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new H_(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var Dz="return floor(x);",Kse=_e({opSnippet:Dz,packedOpSnippet:Dz,cpuKernelImpl:i$}),Pz={kernelName:Io,backendName:"webgl",kernelFunc:Kse};var Vse=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,jse=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Hse=mt({opSnippet:Vse,packedOpSnippet:jse,dtype:"int32"}),Mz={kernelName:Co,backendName:"webgl",kernelFunc:Hse};var q_=class{constructor(e){this.variableNames=["A"];let t=Qt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var X_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let t=Qt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var Ez={kernelName:Pl,backendName:"webgl",kernelFunc:qse},Hc;function qse(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,i=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,[u,l]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[l,u],m=[l,u,s];(a||i)&&(Hc==null&&(Hc=document.createElement("canvas").getContext("2d")),Hc.canvas.width=u,Hc.canvas.height=l,Hc.drawImage(o,0,0,u,l),o=Hc.canvas);let c=t.makeTensorInfo(p,"int32");t.texData.get(c.dataId).usage=sn.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(c.dataId),o);let d=$().getBool("WEBGL_PACK")?new X_(m):new q_(m),f=t.runWebGLProgram(d,[c],"int32");return t.disposeData(c.dataId),f}function Xse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=I.convertConv2DDataFormat(p),g=I.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h),y,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=zx({x:o,filter:s,convInfo:g,backend:t,bias:i,activation:d,preluActivationWeights:a,leakyreluAlpha:f});else if($().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)y=Gx({x:o,filter:s,convInfo:g,backend:t,bias:i,activation:d,preluActivationWeights:a,leakyreluAlpha:f});else{let k=i!=null,C=a!=null,A=d==="leakyrelu",M=d?yl(d,!1):null,D=new lg(g,k,M,C,A),R=[o,s];if(i&&R.push(i),a&&R.push(a),A){let B=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));R.push(B),x.push(B)}y=t.runWebGLProgram(D,R,"float32")}let T=le({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return x.push(y),x.forEach(k=>t.disposeIntermediateTensorInfo(k)),T}var Rz={kernelName:Ds,backendName:"webgl",kernelFunc:Xse};function Yse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=p;h==null&&(h=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=I.computeConv2DInfo(o.shape,s.shape,u,h,l,m,!0),y=$().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=c?yl(c,y):null,T=[o,s],k=i!=null,C=a!=null,A=c==="leakyrelu";if(k&&T.push(i),C&&T.push(a),A){let B=t.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));T.push(B),f.push(B)}let M;y?M=new mg(g,k,x,C,A):M=new pg(g,k,x,C,A);let D=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=t.runWebGLProgram(M,T,"float32",D);return f.forEach(B=>t.disposeIntermediateTensorInfo(B)),R}var Fz={kernelName:Ps,backendName:"webgl",kernelFunc:Yse};var Y_=class{constructor(e,t,n){this.sliceDim=e;this.strides=t;this.variableNames=["x","indices"];this.outputShape=n;let o=je(t.length),s=je(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${i};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Qse(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,i=s[s.length-1],a=b.sizeFromShape(n.shape),[u,l,p,m]=I.prepareAndValidate(n,o),c=le({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),d=le({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let y=t.readSync(o.dataId),x=t.bufferSync(n),T=u$(y,x,n.dtype,l,i,p,m,n.shape,a);return t.makeTensorInfo(u,n.dtype,T.values)}let f=new Y_(i,m,[l,p]),h=t.runWebGLProgram(f,[d,c],d.dtype),g=le({inputs:{x:h},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var Lz={kernelName:ma,backendName:"webgl",kernelFunc:Qse};var Q_=class{constructor(e,t){this.variableNames=["A","indices"];this.outputShape=t,this.rank=t.length;let n=je(this.rank),o=Zse(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function Zse(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${t[o]}`);return n.join()}function Z_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0];if($().get("DEBUG")){let x=t.readSync(s.dataId),T=o.shape[u];for(let k=0;k<x.length;++k){let C=x[k];b.assert(C<=T-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${T-1}]`)}}let l=I.segment_util.collectGatherOpShapeInfo(o,s,u,a),p=b.sizeFromShape(s.shape),m=[],c=le({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=le({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let x=t.bufferSync(d),T=t.bufferSync(c),k=l$(T,x,f);return m.forEach(C=>t.disposeIntermediateTensorInfo(C)),t.makeTensorInfo(l.outputShape,k.dtype,k.values)}let h=new Q_(c.shape,f),g=t.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let y=le({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return m.forEach(x=>t.disposeIntermediateTensorInfo(x)),y}var Bz={kernelName:bs,backendName:"webgl",kernelFunc:Z_};var Jse="return float(a > b);",eae=`
  return vec4(greaterThan(a, b));
`,tae=mt({opSnippet:Jse,packedOpSnippet:eae,cpuKernelImpl:p$,dtype:"bool"}),$z={kernelName:ca,backendName:"webgl",kernelFunc:tae};var rae="return float(a >= b);",nae=`
  return vec4(greaterThanEqual(a, b));
`,oae=mt({opSnippet:rae,packedOpSnippet:nae,dtype:"bool",cpuKernelImpl:m$}),Oz={kernelName:So,backendName:"webgl",kernelFunc:oae};function sae(r){let{inputs:e,backend:t}=r,{input:n}=e;return Vx(n,!0,t)}var zz={kernelName:Tm,backendName:"webgl",kernelFunc:sae};var aae="return float(!isnan(x) && !isinf(x));",iae=_e({opSnippet:aae,dtype:"bool"}),Gz={kernelName:Ui,backendName:"webgl",kernelFunc:iae};var uae="return float(isinf(x));",lae=_e({opSnippet:uae,dtype:"bool"}),Uz={kernelName:Wi,backendName:"webgl",kernelFunc:lae};var pae="return float(isnan(x));",mae=_e({opSnippet:pae,dtype:"bool"}),Wz={kernelName:Ki,backendName:"webgl",kernelFunc:mae};var cae="return float(a < b);",dae=`
  return vec4(lessThan(a, b));
`,fae=mt({opSnippet:cae,packedOpSnippet:dae,cpuKernelImpl:c$,dtype:"bool"}),Kz={kernelName:da,backendName:"webgl",kernelFunc:fae};var hae="return float(a <= b);",gae=`
  return vec4(lessThanEqual(a, b));
`,bae=mt({opSnippet:hae,packedOpSnippet:gae,cpuKernelImpl:d$,dtype:"bool"}),Vz={kernelName:fa,backendName:"webgl",kernelFunc:bae};function yae(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,i=f$(n,o,s);return e.makeTensorInfo([i.length],"float32",i)}var jz={kernelName:km,backendName:"webgl",kernelFunc:yae};var xae=ta+`
  return x < 0.0 ? 0./0. : log(x);
`,Tae=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,kae=_e({opSnippet:xae,packedOpSnippet:Tae,cpuKernelImpl:h$}),Hz={kernelName:_o,backendName:"webgl",kernelFunc:kae};var Iae=ta+`
  return log(1.0 + x);
`,Cae=_e({opSnippet:Iae}),qz={kernelName:Vi,backendName:"webgl",kernelFunc:Cae};var vae="return float(a >= 1.0 && b >= 1.0);",Sae=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,wae=mt({opSnippet:vae,packedOpSnippet:Sae,dtype:"bool"}),Xz={kernelName:ha,backendName:"webgl",kernelFunc:wae};var _ae="return float(!(x >= 1.0));",Aae=_e({opSnippet:_ae}),Yz={kernelName:ji,backendName:"webgl",kernelFunc:Aae};var Nae="return float(a >= 1.0 || b >= 1.0);",Dae=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Pae=mt({opSnippet:Nae,packedOpSnippet:Dae,dtype:"bool"}),Qz={kernelName:Dl,backendName:"webgl",kernelFunc:Pae};var J_=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];let i=t,a=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var eA=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let i=t,a=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var Mae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:i,alpha:a,beta:u}=n,l=$().getBool("WEBGL_PACK_NORMALIZATION")?new eA(o.shape,s,i,a,u):new J_(o.shape,s,i,a,u);return t.runWebGLProgram(l,[o],o.dtype)},Zz={kernelName:Wu,backendName:"webgl",kernelFunc:Mae};var tA=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Eae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:i}=e,{depthRadius:a,bias:u,alpha:l,beta:p}=n,m=new tA(o.shape,a,u,l,p);return t.runWebGLProgram(m,[o,s,i],o.dtype)},Jz={kernelName:Im,backendName:"webgl",kernelFunc:Eae};function e3(r,e,t,n){let o=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/o,a=le({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=oo(a,r.dtype,"max",n),l=le({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}function rA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,a),m=p!=null,c=t.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let T=t.texData.get(d.dataId).values,k=new Array(a);for(let M=0;M<k.length;M++)k[M]=o.shape[p[M]];let C=Ep(T,o.shape,o.dtype,p,k);d=t.makeTensorInfo(k,o.dtype);let A=t.texData.get(d.dataId);A.values=C}else d=xl(o,p,t);l=I.getInnerMostAxes(l.length,a)}I.assertAxesAreInnerMostDims("max",l,a);let[f,h]=I.computeOutAndReduceShapes(d.shape,l),g=f;i&&(g=I.expandShapeToKeepDim(f,u));let y;if(c){let T=t.texData.get(d.dataId).values,k=g$(T,b.sizeFromShape(h),g,o.dtype);y=t.makeTensorInfo(g,o.dtype);let C=t.texData.get(y.dataId);C.values=k}else y=e3(d,h,g,t);return m&&t.disposeIntermediateTensorInfo(d),y}var t3={kernelName:Ao,backendName:"webgl",kernelFunc:rA};var Rae=Rx+`
  return max(a, b);
`,Fae=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+bl+`
  return result;
`,Lae=mt({opSnippet:Rae,packedOpSnippet:Fae,cpuKernelImpl:b$}),r3={kernelName:No,backendName:"webgl",kernelFunc:Lae};function Bae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ka(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,i,l,a,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return ar({inputs:{x:o},backend:t});let m=new Ci(p,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var n3={kernelName:Do,backendName:"webgl",kernelFunc:Bae};function $ae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dataFormat:u,dimRoundingMode:l}=n,p=[1,1,1],m=I.computePool3DInfo(o.shape,s,i,p,a,l,u),c=new Bp(m,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var o3={kernelName:Ku,backendName:"webgl",kernelFunc:$ae};var nA=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,u=i-1-e.padInfo.left,l=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},oA=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=u-1-e.padInfo.front,c=l-1-e.padInfo.top,d=p-1-e.padInfo.left,f=u*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Oae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s,{filterSize:a,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=I.computePool3DInfo(i.shape,a,u,m,l,p),d=new Bp(c,"max",!0),f=t.runWebGLProgram(d,[i],i.dtype),h=new oA(c),g=t.runWebGLProgram(h,[o,f],i.dtype);return t.disposeIntermediateTensorInfo(f),g}var s3={kernelName:vm,backendName:"webgl",kernelFunc:Oae};function zae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:i}=e,a=s;Ka([s,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=I.computePool2DInfo(a.shape,u,l,1,p,m),d=!0,f=new Ci(c,"max",d),h=t.runWebGLProgram(f,[a],a.dtype),g=new nA(c),y=t.runWebGLProgram(g,[o,h],a.dtype);return t.disposeIntermediateTensorInfo(h),y}var a3={kernelName:Cm,backendName:"webgl",kernelFunc:zae};function i3(r,e,t,n){let o=new Ci(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new Ci(t,"max",!0,!0,e);let i=n.runWebGLProgram(o,[r],"float32");return[s,i]}var u3={kernelName:Sm,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=e,u=t;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];b.assert(I.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let p=I.computePool2DInfo(n.shape,o,s,l,i),[m,c]=i3(n,a,p,u);return[m,c]}};function l3(r,e,t,n){let o=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/o,a=le({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=oo(a,"float32","mean",n),l=le({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}var p3={kernelName:Po,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,i=t,a=n.shape.length,u=b.parseAxisParam(s,n.shape),l=u,p=I.getAxesPermutation(l,a),m=p!=null,c=i.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let k=i.texData.get(f.dataId).values,C=new Array(a);for(let D=0;D<C.length;D++)C[D]=n.shape[p[D]];let A=Ep(k,n.shape,n.dtype,p,C);f=i.makeTensorInfo(C,n.dtype);let M=i.texData.get(f.dataId);M.values=A}else f=xl(n,p,i);d.push(f),l=I.getInnerMostAxes(l.length,a)}I.assertAxesAreInnerMostDims("sum",l,a);let[h,g]=I.computeOutAndReduceShapes(f.shape,l),y=h;o&&(y=I.expandShapeToKeepDim(h,u));let x=l3(f,g,y,i);for(let T of d)i.disposeIntermediateTensorInfo(T);return x}};function Gae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,a),m=o;p!=null&&(m=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",l,a);let[c,d]=I.computeOutAndReduceShapes(m.shape,l),f=b.sizeFromShape(d),h=le({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=oo(h,h.dtype,"min",t),y;if(i){let x=I.expandShapeToKeepDim(c,u);y=le({inputs:{x:g},backend:t,attrs:{shape:x}})}else y=le({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(m),y}var m3={kernelName:Mo,backendName:"webgl",kernelFunc:Gae};var Uae=Rx+`
  return min(a, b);
`,Wae=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+bl+`
  return result;
`,Kae=mt({opSnippet:Uae,packedOpSnippet:Wae,cpuKernelImpl:y$}),c3={kernelName:Eo,backendName:"webgl",kernelFunc:Kae};var sA=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=t.map((p,m)=>p[0]+e[m]+p[1]);let o=e.length,s=je(o),i=t.map(p=>p[0]).join(","),a=t.map((p,m)=>p[0]+e[m]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var aA=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t.map((f,h)=>f[0]+e[h]+f[1]);let o=e.length,s=je(o),i=t.map(f=>f[0]).join(","),a=t.map((f,h)=>f[0]+e[h]).join(","),u=sr("rc",o),l=sr("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${m});
          ${u[o-1]} += 1;
          if(${p}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var Vae=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,i=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aA(n.shape,o,s):new sA(n.shape,o,s);return e.runWebGLProgram(i,[n],n.dtype)},d3={kernelName:Ro,backendName:"webgl",kernelFunc:Vae};var jae=`if (b == 0.0) return NAN;
  return mod(a, b);`,Hae=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+bl+`
  return result;
`,qae=mt({opSnippet:jae,packedOpSnippet:Hae}),f3={kernelName:Hi,backendName:"webgl",kernelFunc:qae};var iA=class{constructor(e,t,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var Xae=`
if (a == b) {
  return 1.0;
};
return a / b;`,Yae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,uA=mt({opSnippet:Xae,packedOpSnippet:Yae,checkOutOfBounds:!0}),h3={kernelName:xo,backendName:"webgl",kernelFunc:uA};var g3="return a - b;",lA=mt({opSnippet:g3,packedOpSnippet:g3,supportsComplex:!0,cpuKernelImpl:R$}),b3={kernelName:Xo,backendName:"webgl",kernelFunc:lA};function pA(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=b.parseAxisParam([s],o.shape),a=rA({inputs:{x:o},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),u=I.expandShapeToKeepDim(a.shape,i),l=le({inputs:{x:a},backend:t,attrs:{shape:u}}),p=lA({inputs:{a:o,b:l},backend:t}),m=V_({inputs:{x:p},backend:t}),c=Fp({inputs:{x:m},backend:t,attrs:{axis:i,keepDims:!1}}),d=le({inputs:{x:c},backend:t,attrs:{shape:u}}),f=uA({inputs:{a:m,b:d},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}var y3={kernelName:Ho,backendName:"webgl",kernelFunc:pA};function Qae(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:i,normalized:a}=n,u=a?o:pA({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),l=u.shape[0],p=u.shape[1],m=new iA(l,p,s),c=[[i]],d=t.runWebGLProgram(m,[u],"int32",c);return a||t.disposeIntermediateTensorInfo(u),d}var x3={kernelName:wm,backendName:"webgl",kernelFunc:Qae};var Zae=kr+`
  return -x;
`,Jae=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function eie(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[i,a]=T$(s.values,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,i)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Js(n.shape,Jae):o=new Cn(n.shape,Zae),t.runWebGLProgram(o,[n],n.dtype)}var T3={kernelName:ys,backendName:"webgl",kernelFunc:eie};var tie=Tr.nonMaxSuppressionV3Impl;function rie(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m}=tie(l,p,i,a,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var k3={kernelName:ba,backendName:"webgl",kernelFunc:rie};var nie=Tr.nonMaxSuppressionV4Impl;function oie(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=n,p=t.readSync(o.dataId),m=t.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=nie(p,m,i,a,u,l);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var I3={kernelName:qi,backendName:"webgl",kernelFunc:oie};var sie=Tr.nonMaxSuppressionV5Impl;function aie(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),m=t.readSync(s.dataId),c=i,d=a,f=u,h=l,{selectedIndices:g,selectedScores:y}=sie(p,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var C3={kernelName:ya,backendName:"webgl",kernelFunc:aie};var mA=class{constructor(e,t,n,o){this.variableNames=["indices"];this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var iie=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:i,offValue:a}=n,u=b.sizeFromShape(o.shape),l=new mA(u,s,i,a),p=le({inputs:{x:o},backend:t,attrs:{shape:[u]}}),m=t.runWebGLProgram(l,[p],o.dtype);t.disposeIntermediateTensorInfo(p);let c=[...o.shape,s],d=le({inputs:{x:m},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(m),d},v3={kernelName:xa,backendName:"webgl",kernelFunc:iie};function cg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=wu({inputs:{input:n},backend:t}),s=cg({inputs:{x:o},backend:t}),i=$p({inputs:{input:n},backend:t}),a=cg({inputs:{x:i},backend:t}),u=$n({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return _u({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var S3={kernelName:_s,backendName:"webgl",kernelFunc:cg};function w3(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=wu({inputs:{input:n},backend:t}),s=w3({inputs:{x:o},backend:t}),i=$p({inputs:{input:n},backend:t}),a=cg({inputs:{x:i},backend:t}),u=$n({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return _u({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var _3={kernelName:xs,backendName:"webgl",kernelFunc:w3};function uie(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Wx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(p=>{let m=Wx({inputs:{input:p},backend:t,attrs:{dim:o}});return a.push(m),m}),l=M_({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var A3={kernelName:Ts,backendName:"webgl",kernelFunc:uie};var cA=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((l,p)=>l[0]+e[p]+l[1]);let o=e.length,s=je(o),i=t.map(l=>l[0]).join(","),a=t.map((l,p)=>l[0]+e[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var dA=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=je(o),i=t.map(h=>h[0]).join(","),a=t.map((h,g)=>h[0]+e[g]).join(","),u=sr("rc",o),l=sr("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${p}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${p}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var fA=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;if(b.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return _u({backend:t,attrs:{shape:l,value:i,dtype:o.dtype}})}let a=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dA(o.shape,s,i):new cA(o.shape,s,i),u=[[i]];return t.runWebGLProgram(a,[o],o.dtype,u)},N3={kernelName:Lo,backendName:"webgl",kernelFunc:fA};var lie=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,pie=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+bl+`
  return result;
`,mie=mt({opSnippet:lie,packedOpSnippet:pie}),D3={kernelName:Bo,backendName:"webgl",kernelFunc:mie};function cie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=[],l=b.parseAxisParam(s,o.shape),p=l,m=I.getAxesPermutation(p,a),c=o;m!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:m}}),p=I.getInnerMostAxes(p.length,a),u.push(c)),I.assertAxesAreInnerMostDims("prod",p,a);let d;if(t.shouldExecuteOnCPU([c])){let f=t.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:y}=I$(c.shape,c.dtype,f,p);d=t.makeTensorInfo(g,y,h)}else{let[f,h]=I.computeOutAndReduceShapes(c.shape,p),g=b.sizeFromShape(h),y=le({inputs:{x:c},backend:t,attrs:{shape:[-1,g]}}),x=tu(o.dtype),T=oo(y,x,"prod",t);d=le({inputs:{x:T},backend:t,attrs:{shape:f}}),u.push(y),u.push(T)}if(i){u.push(d);let f=I.expandShapeToKeepDim(d.shape,l);d=le({inputs:{x:d},backend:t,attrs:{shape:f}})}return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var P3={kernelName:Ta,backendName:"webgl",kernelFunc:cie};var hA=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=C$(n,o,s,i);return e.makeTensorInfo([a.length],i,a)},M3={kernelName:ni,backendName:"webgl",kernelFunc:hA};var die="return 1.0 / x;",fie=_e({opSnippet:die}),E3={kernelName:Xi,backendName:"webgl",kernelFunc:fie};var hie=kr+`
  return (x < 0.0) ? 0.0 : x;
`,gie=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bie=_e({opSnippet:hie,packedOpSnippet:gie}),R3={kernelName:Oo,backendName:"webgl",kernelFunc:bie};var yie=kr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,xie=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Tie=_e({opSnippet:yie,packedOpSnippet:xie}),F3={kernelName:Go,backendName:"webgl",kernelFunc:Tie};var gA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let p=[o&&t>1?a-1:a,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var bA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let p=[o&&t>1?a-1:a,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function kie(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,p=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bA(o.shape,u,l,s,i):new gA(o.shape,u,l,s,i);return t.runWebGLProgram(p,[o],"float32")}var L3={kernelName:zo,backendName:"webgl",kernelFunc:kie};var yA=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,i,a]=e,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Iie(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=new yA(s.shape,o.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var B3={kernelName:Am,backendName:"webgl",kernelFunc:Iie};var xA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let p=[o&&t>1?a-1:a,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var TA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let p=[o&&t>1?a-1:a,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Cie(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,p=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TA(o.shape,u,l,s,i):new xA(o.shape,u,l,s,i);return t.runWebGLProgram(p,[o],o.dtype)}var $3={kernelName:oi,backendName:"webgl",kernelFunc:Cie};var kA=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,i,a]=e,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function vie(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=new kA(s.shape,o.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var O3={kernelName:_m,backendName:"webgl",kernelFunc:vie};var IA=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,s=e.map((a,u)=>o(u)).join(","),i=je(n);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var CA=class{constructor(e,t){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=sr("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,a=je(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${i}) {
            result.b = ${p(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return c(f)}function l(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function p(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=e.map((x,T)=>d(T,f)),g=h.join(","),y=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function d(f,h){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${h[f]} - 1`:`${h[f]}`}}};function Sie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return ar({inputs:{x:o},backend:t});let u=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CA(o.shape,a):new IA(o.shape,a);return t.runWebGLProgram(u,[o],o.dtype)}var z3={kernelName:ka,backendName:"webgl",kernelFunc:Sie};var vA=class{constructor(e,t){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var G3={kernelName:Na,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=new vA(n.shape,s),[l,p]=I.getImageCenter(i,n.shape[1],n.shape[2]),m=[[l,p,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(u,[n],n.dtype,m)}};var wie=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,_ie=_e({opSnippet:wie}),U3={kernelName:Ia,backendName:"webgl",kernelFunc:_ie};var Aie="return inversesqrt(x);",Nie=_e({opSnippet:Aie,cpuKernelImpl:v$}),W3={kernelName:Uo,backendName:"webgl",kernelFunc:Nie};var dg=class{constructor(e,t,n,o,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=i;let u=je(s.length),l=je(i.length),p="";n===1?p="i":n===2&&(p="i, j");let m=`getIndices(${p})`,c="";o===1?c="i":o===2&&(c="i, coords[1]");let d=`getUpdates(${c})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Die(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=I.calculateShapes(s,o,i),c=[m/l,l];if(m===0)return t.makeTensorInfo(i,o.dtype);let d=le({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),f=le({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new dg(u,a,d.shape.length,f.shape.length,p,c),y=t.runWebGLProgram(g,[f,d,h],f.dtype),x=le({inputs:{x:y},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),x}var K3={kernelName:Ca,backendName:"webgl",kernelFunc:Die};var SA=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let p=0;p<t.length;p++)l.push(`${a[p]}`),p<e&&u.push(`${a[p]}`);o=u.join(),s=l.join()}let i=je(n);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Pie(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=new SA(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(i,[n,o,s],Kt(o.dtype,s.dtype))}var V3={kernelName:Is,backendName:"webgl",kernelFunc:Pie};var Mie=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Eie=_e({opSnippet:Mie}),j3={kernelName:Yi,backendName:"webgl",kernelFunc:Eie};var Rie=ta+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Fie=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Lie=_e({opSnippet:Rie,packedOpSnippet:Fie,cpuKernelImpl:S$}),H3={kernelName:Ko,backendName:"webgl",kernelFunc:Lie};var Bie=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,$ie=_e({opSnippet:Bie}),q3={kernelName:Qi,backendName:"webgl",kernelFunc:$ie};var Oie=ta+`
  return sin(x);
`,zie=_e({opSnippet:Oie}),X3={kernelName:Wo,backendName:"webgl",kernelFunc:zie};var Gie=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Uie=_e({opSnippet:Gie}),Y3={kernelName:va,backendName:"webgl",kernelFunc:Uie};var Wie=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Kie=_e({opSnippet:Wie}),Q3={kernelName:Zi,backendName:"webgl",kernelFunc:Kie};var Vie=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((y,x)=>y*x),u=[[0,0]];u.push(...i);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let l=[],p=fA({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),m=I.getReshaped(p.shape,s,a,!1),c=I.getPermuted(m.length,s.length,!1),d=I.getReshapedPermuted(p.shape,s,a,!1),f=le({inputs:{x:p},backend:t,attrs:{shape:m}}),h=Ht({inputs:{x:f},backend:t,attrs:{perm:c}}),g=le({inputs:{x:h},backend:t,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},Z3={kernelName:vs,backendName:"webgl",kernelFunc:Vie};function jie(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.readSync(n.dataId),u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=t.readSync(i.dataId)[0],[m,c,d,f,h]=_$(a,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var J3={kernelName:ju,backendName:"webgl",kernelFunc:jie};function Hie(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.readSync(o.dataId)),a=t.readSync(n.dataId),u=Array.from(t.readSync(s.dataId)),[l,p,m]=A$(a,n.shape,n.dtype,i,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var eG={kernelName:Ji,backendName:"webgl",kernelFunc:Hie};function qie(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=t.readSync(n.dataId),a=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=Mx(i,n.shape,n.dtype,a,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var tG={kernelName:Hu,backendName:"webgl",kernelFunc:qie};function Xie(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=t.readSync(n.dataId),a=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=Mx(i,n.shape,n.dtype,a,u);return t.makeTensorInfo(p,n.dtype,l)}var rG={kernelName:qu,backendName:"webgl",kernelFunc:Xie};function Yie(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:l,strides:p,outputSize:m}=I.calculateShapes(s,o,a),c=!1,d=new dg(l,u,o.shape.length,s.shape.length,p,[m,1],c),f=t.runWebGLProgram(d,[s,o,i],s.dtype),h=le({inputs:{x:f},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),h}var nG={kernelName:Xu,backendName:"webgl",kernelFunc:Yie};function Qie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[a]=c;let f=Ha({inputs:{x:o},backend:t,attrs:{begin:p,size:d}});return p[a]+=c,f})}var oG={kernelName:Ss,backendName:"webgl",kernelFunc:Qie};var sG="return sqrt(x);",Zie=_e({opSnippet:sG,packedOpSnippet:sG,cpuKernelImpl:N$}),aG={kernelName:Vo,backendName:"webgl",kernelFunc:Zie};var Jie="return x * x;",eue=_e({opSnippet:Jie}),iG={kernelName:si,backendName:"webgl",kernelFunc:eue};var uG="return (a - b) * (a - b);",tue=mt({opSnippet:uG,packedOpSnippet:uG}),lG={kernelName:qo,backendName:"webgl",kernelFunc:tue};function rue({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=kr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new Cn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var pG={kernelName:As,backendName:"webgl",kernelFunc:rue};var wA=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=je(n.length),i=je(n.length),a="";if(o===1)a="coords * strides + begin";else{let u=0;a=n.map((l,p)=>(u++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${u-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function nue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:x,end:T,strides:k}=Tt.sliceInfo(o.shape,s,i,a,u,l,p,m,c),C;if(h)C=le({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let M=Tt.computeOutShape(x,T,k),D=Ha({inputs:{x:o},backend:t,attrs:{begin:x,size:M}});C=le({inputs:{x:D},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(D)}else if(t.shouldExecuteOnCPU([o])){let D=t.readSync(o.dataId),R=Ce(o.shape,o.dtype,D),B=D$(d,R,k,x);C=t.makeTensorInfo(f,o.dtype,B.values)}else{let D=new wA(x,k,d);C=t.runWebGLProgram(D,[o],o.dtype)}let A=le({inputs:{x:C},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(C),A}var mG={kernelName:Sa,backendName:"webgl",kernelFunc:nue};function oue(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=e,c=t.readSync(p.dataId),d=t.readSync(m.dataId),[f,h]=P$(c,d,o,s,i,a,u,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var cG={kernelName:Yu,backendName:"webgl",kernelFunc:oue};function sue(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.readSync(s.dataId),u=t.readSync(i.dataId)[0],[l,p,m]=M$(a,u,o),c=p.length;return[t.makeTensorInfo([c,2],"int32",l),t.makeTensorInfo([c],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var dG={kernelName:Nm,backendName:"webgl",kernelFunc:sue};function aue(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=t.readSync(s.dataId),a=E$(i,o);return t.makeTensorInfo(s.shape,"int32",a)}var fG={kernelName:Dm,backendName:"webgl",kernelFunc:aue};var iue="return tan(x);",uue=_e({opSnippet:iue}),hG={kernelName:wa,backendName:"webgl",kernelFunc:uue};var lue=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,pue=_e({opSnippet:lue}),gG={kernelName:Yo,backendName:"webgl",kernelFunc:pue};var _A=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;let o=je(this.rank),s=mue(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function mue(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function AA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>b.decodeString(c)):u,p=Ce(o.shape,o.dtype,l),m=F$(p,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let i=new _A(o.shape,s);return t.runWebGLProgram(i,[o],o.dtype)}var bG={kernelName:Nn,backendName:"webgl",kernelFunc:AA};var NA=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},DA=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function zp(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function yG(r){let e=1;for(;e<r;)e*=2;return e}function cue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n,a=$().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=$().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,p=l[l.length-1];if(t.shouldExecuteOnCPU([o])||p<a||s>u){let B=t.readSync(o.dataId),[U,W]=L$(B,l,o.dtype,s,i);return[t.makeTensorInfo(U.shape,U.dtype,U.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(s===0)return l[l.length-1]=0,[t.makeTensorInfo(l,o.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(p===1)return[o,_u({attrs:{shape:l,dtype:"int32",value:0},backend:t})];let m=t.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?t.unpackTensor(o):o,h=b.sizeFromShape(l)/p,g=le({inputs:{x:d},attrs:{shape:[h,p]},backend:t});c&&zp(t,d);let y=yG(s),x=yG(p),T=null,k=()=>T===null?[g,g]:[g,T],C=(B,U,W)=>{let K=k(),j=new NA(W),q=[[p],[T===null?1:0],[Number.NEGATIVE_INFINITY],[B],[U]],ee=T;T=t.runWebGLProgram(j,K,"int32",q),zp(t,ee)};for(let B=1;B<y;B*=2){let U=B*2;for(let W=B;W>=1;W/=2)C(U,W,[h,x])}for(let B=x;B>y;B/=2){let U=k(),W=new DA([h,B/2]),j=[[p],[T===null?1:0],[y]],V=T;T=t.runWebGLProgram(W,U,"int32",j),zp(t,V);let q=y/2,ee=q*2;for(let Z=q;Z>=1;Z/=2)C(ee,Z,T.shape)}let A=T;T=Ha({inputs:{x:T},backend:t,attrs:{begin:0,size:[h,s]}}),zp(t,A);let M=Z_({inputs:{x:g,indices:T},backend:t,attrs:{axis:1,batchDims:1}});zp(t,g);let D=l.slice(0,-1);D.push(s),A=T,T=le({inputs:{x:T},attrs:{shape:D},backend:t}),zp(t,A);let R=M;return M=le({inputs:{x:M},attrs:{shape:D},backend:t}),zp(t,R),[M,T]}var xG={kernelName:_a,backendName:"webgl",kernelFunc:cue};var PA=class{constructor(e,t,n,o,s,i){this.variableNames=["Image","Transforms"];this.outputShape=i;let a=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function due(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],y=new PA(m,c,i,a,u,g);return t.runWebGLProgram(y,[o,s],"float32")}var TG={kernelName:Aa,backendName:"webgl",kernelFunc:due};function fue(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Ka(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:a,outputShape:u,indices:l}=B$(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([l.length],"int32",l)]}var kG={kernelName:Pm,backendName:"webgl",kernelFunc:fue};function hue(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o,a=i.shape.length,u=o.shape[s],l=new Array(a-1),p=0;for(let h=0;h<a;h++)h!==s&&(l[p++]=i.shape[h]);let m=[],c=new Array(a).fill(0),d=i.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=Ha({inputs:{x:i},backend:t,attrs:{begin:c,size:d}}),y=le({inputs:{x:g},backend:t,attrs:{shape:l}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var IG={kernelName:ws,backendName:"webgl",kernelFunc:hue};var MA=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[o,a];let u="0.0",l="sumValue",p=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function gue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:i}=n,a=o.shape.length,u=[],l=0,p=I.getAxesPermutation([l],a),m=o;p!=null&&(m=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),u.push(m),l=I.getInnerMostAxes(1,a)[0]);let c=I.segment_util.computeOutShape(m.shape,l,i),d=b.sizeFromShape([m.shape[l]]),f=le({inputs:{x:m},backend:t,attrs:{shape:[-1,d]}});u.push(f);let h=tu(o.dtype),g=(k,C,A,M,D)=>{let R=k.shape[0],B=k.shape[1],U=I.segment_util.segOpComputeOptimalWindowSize(B,D),W={windowSize:U,inSize:B,batchSize:R,numSegments:D},K=new MA(W,C),j=t.compileAndRun(K,[k,A],M);if(u.push(j),j.shape[1]===D)return j;let V=hA({backend:t,attrs:{start:0,stop:D,step:1,dtype:"float32"}}),q=AA({inputs:{x:V},backend:t,attrs:{reps:[B/U]}});return u.push(V),u.push(q),g(j,C,q,M,D)},y=g(f,"unsortedSegmentSum",s,h,i),x=le({inputs:{x:y},backend:t,attrs:{shape:c}}),T=x;if(p!=null){u.push(x);let k=I.getUndoAxesPermutation(p);T=Ht({inputs:{x:T},backend:t,attrs:{perm:k}})}return u.forEach(k=>t.disposeIntermediateTensorInfo(k)),T}var CG={kernelName:Qu,backendName:"webgl",kernelFunc:gue};var bue=[dO,hO,gO,bO,xO,TO,kO,IO,SO,wO,_O,AO,NO,DO,PO,MO,EO,RO,FO,LO,BO,OO,zO,GO,VO,HO,qO,tO,YO,ZO,JO,ez,tz,rz,nz,oz,sz,az,iz,pz,mz,cz,dz,fz,hz,gz,bz,yz,xz,Tz,kz,Iz,Cz,vz,wz,_z,Az,Nz,Pz,Mz,Ez,Rz,Fz,Lz,Bz,$z,Oz,eO,zz,QO,Gz,Uz,Wz,rO,Kz,Vz,jz,Hz,qz,Xz,Yz,Qz,Zz,Jz,t3,r3,n3,o3,s3,a3,u3,p3,m3,c3,d3,f3,x3,iO,T3,k3,I3,C3,UO,v3,_3,A3,N3,D3,nO,P3,M3,WO,h3,E3,R3,F3,lO,L3,B3,$3,O3,z3,G3,U3,W3,K3,V3,j3,H3,q3,X3,Y3,$O,y3,Q3,Z3,J3,eG,tG,rG,nG,oG,aG,iG,lG,pG,mG,cG,dG,fG,b3,mO,hG,gG,bG,xG,TG,cO,kG,IG,CG,S3];for(let r of bue)eu(r);var vi=$();vi.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);vi.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);vi.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);vi.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);vi.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);vi.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);vi.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);vi.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);vi.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);vi.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function vG(r,e){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function Zt(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";throw Error(`GPU for rank ${r} is not yet supported`)}function jx(r,e){return r==="float32"?e?"vec4<f32>":"f32":r==="int32"||r==="bool"?e?"vec4<i32>":"i32":r}function fg(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
`}function On(){return`
  ${fg()}
  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,
          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,
          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function ve(){return`
    ${On()}
      let index = getGlobalIndex();
`}function SG(r,e,t,n=!1){let o=[];if(o.push(`
    let workGroupSizeX = ${t.workGroupSize[0]}u;
    let workGroupSizeY = ${t.workGroupSize[1]}u;
    let workGroupSizeZ = ${t.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),n===!0)return o.push(`
      struct Matrix0 {
        numbers: array<${jx(e.dtype,t.isVec4)}>;
      };
      struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `),[wG,o.join(`
`),_G(e.shape),t.getUserCode()].join(`
`);let s="struct Uniforms { NAN : f32; ";t.variableNames.forEach((m,c)=>{s+=`${m.charAt(0).toLowerCase()+m.slice(1)}Shape : ${Zt(r[c].shape.length)}; `}),s+=`outShape : ${Zt(e.shape.length)} ; `;let i=e.shape.length-1;s+=`
       outShapeStrides: ${Zt(i)}; `,t.size&&(s+="size : i32; "),t.uniforms&&(s+=t.uniforms),s+="};",o.push(s),t.atomic?o.push(`
    struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):o.push(`
    struct Matrix0 {
        numbers: array<${jx(e.dtype,t.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),t.variableNames.forEach((m,c)=>{o.push(`
    struct Matrix${1+c} {
      numbers: array<${jx(r[c].dtype,t.isVec4)}>;
    };
    [[group(0), binding(${1+c})]] var<storage, read> ${m} : Matrix${1+c};
    `)}),s!==""&&o.push(`
    [[group(0), binding(${1+t.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `);let[a,u]=Cue(e.shape,t.dispatchLayout),l=[wG,o.join(`
`),_G(e.shape),a,yue(e.shape.length)];if(t.atomic||l.push(xue(e.shape,e.dtype,t.isVec4)),u===e.shape.length){let m=r.map(c=>Tue(c,e.shape,t.isVec4,t.dispatchLayout.x.length===e.shape.length)).join(`
`);l.push(m)}return l.push(t.getUserCode()),l.join(`
`)}var wG=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }
  fn isNanCustomVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isNanCustom(val[0]), isNanCustom(val[1]), isNanCustom(val[2]), isNanCustom(val[3]));
  }
`;function yue(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:b.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function xue(r,e,t){let n=r.length,o=jx(e,t),s;if(t?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${o}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${o}(value);
    }`,n>=2){let i=["d0","d1","d2","d3"].slice(0,n),a=Zt(n);t?s+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function Tue(r,e,t,n){let o=kue(r,t);return r.shape.length<=e.length&&(o+=Iue(r,e,t,n)),o}function kue(r,e){let t=r.name,n=r.shape.length,o=Zt(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),i=["d0","d1","d2","d3"].slice(0,n),a=i.map(p=>`${p} : i32`).join(", ");if(n<1)return e?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${t}.numbers[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${t}.numbers[0]);
      }
    `;let u=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,l=`${n}D`;return n===0&&(l="1D"),e?`
      fn ${s}(${a}) -> vec4<f32> {
        return vec4<f32>(${t}.numbers[getIndexFromCoords${l}(${o}(${i.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${a}) -> f32 {
      return f32(${t}.numbers[getIndexFromCoords${l}(${o}(${i.join(",")}),
        ${u})]);
    }
   `}function Iue(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),i="get"+s+"ByOutput",a=r.shape.length,u=e.length,l=Zt(u);if(b.arraysEqual(r.shape,e)&&n)return t?`
        fn ${i}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[globalIndex]);
        }

        fn ${i}Coords(coords : ${l}) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${i}Index(globalIndex : i32) -> f32 {
        return f32(${o}.numbers[globalIndex]);
      }

      fn ${i}Coords(coords : ${l}) -> f32 {
        return f32(${o}.numbers[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let p=I.getBroadcastDims(r.shape,e),m=u-a,c="";if(a===0)return t?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${i}Coords(coords : ${l}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${i}Index(globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${i}Coords(coords : ${l}) -> f32{
        return get${s}();
      }
    `;u<2&&p.length>=1?c="coords = 0;":c=p.map(g=>`coords[${g+m}] = 0;`).join(`
`);let d="";if(u<2&&a>0)d="coords";else if(u>1){let g=Zt(a),y=r.shape.map((x,T)=>`coords[${T+m}]`).join(", ");d=`${g}(${y})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${a}D`;return t?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${c}
        return ${o}.numbers[getIndexFromCoords${h}(${d}, ${f}) / 4];
      }

      fn ${i}Coords(coordsIn : ${l}) -> vec4<f32> {
        var coords = coordsIn;
        ${c}
        return ${o}.numbers[getIndexFromCoords${h}(${d}, ${f}) / 4];
      }
    `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${c}
      return f32(${o}.numbers[getIndexFromCoords${h}(${d}, ${f})]);
    }

    fn ${i}Coords(coordsIn : ${l}) -> f32 {
      var coords = coordsIn;
      ${c}
      return f32(${o}.numbers[getIndexFromCoords${h}(${d}, ${f})]);
    }
  `}function Cue(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length;if(t.length===s)return[`fn getOutputCoords() -> ${Zt(s)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,s];let i="",a=[t,n,o],u=0;for(let c=0;c<a.length;c++){let d=a[c];if(d.length!==0)if(u+=d.length,d.length===1)i+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=vG(d,"uniforms.outShape");i+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)i+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?i+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:i+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let l=[];for(let c=0;c<u;c++)l.push(`d${c}`);let p=Zt(u),m=`fn getOutputCoords() -> ${p} {
    ${i}
  `;return l.length===0?m+=`return ${p}(0); }`:m+=`return ${p}(${l.join(",")}); }`,[m,u]}function _G(r){let e=r.length;if(e<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let t=b.computeStrides(r),n=Zt(e),o=[];for(let i=0;i<e;i++)o.push(`d${i}`);if(t.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s="var index2 = index;"+t.map((i,a)=>{let u=`let ${o[a]} = index2 / uniforms.outShapeStrides[${a}]`,l=a===t.length-1?`let ${o[a+1]} = index2 - ${o[a]} * uniforms.outShapeStrides[${a}]`:`index2 = index2 - ${o[a]} * uniforms.outShapeStrides[${a}]`;return`${u}; ${l};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}var qx={};Xe(qx,{ArrayBufferToTypedArray:()=>EA,GPUBytesPerElement:()=>Hx,computeDispatch:()=>de,computeWorkGroupSizeForConv2d:()=>hg,computeWorkGroupSizeForMatMul:()=>gg,computeWorkPerThreadForConv2d:()=>bg,flatDispatchLayout:()=>Ie,isWebGPUSupported:()=>yg,tilesFitEvenlyIntoShape:()=>ss});var Gp=65535;var Up=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function ss(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]==0)}function de(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,i]=[Math.ceil(Up(r.x.map(u=>e[u]))/(t[0]*n[0])),r.y?Math.ceil(Up(r.y.map(u=>e[u]))/(t[1]*n[1])):1,r.z?Math.ceil(Up(r.z.map(u=>e[u]))/(t[2]*n[2])):1];if(o<=Gp&&s<=Gp&&i<=Gp)return[o,s,i];b.assert(o>Gp&&r.y===void 0&&r.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(o));return a>Gp?(a=Math.ceil(Math.cbrt(o)),b.assert(a<=Gp,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]}function hg(r,e){let t=Up(r.x.map(o=>e[o])),n=Up(r.y.map(o=>e[o]));return t<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function gg(r,e,t){return r===1?[32,1,1]:t===1?[1,32,1]:[8,8,1]}function bg(r,e){let t=Up(r.x.map(o=>e[o])),n=Up(r.y.map(o=>e[o]));return t<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function Ie(r){return{x:r.map((e,t)=>t)}}function Hx(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function EA(r,e){if(e==="float32")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${e}`)}function yg(){return!!navigator.gpu}var st=(T=>(T[T.MUL=0]="MUL",T[T.ADD=1]="ADD",T[T.SUB=2]="SUB",T[T.DIV=3]="DIV",T[T.EQUAL=4]="EQUAL",T[T.GREATER=5]="GREATER",T[T.GREATER_EQUAL=6]="GREATER_EQUAL",T[T.LESS=7]="LESS",T[T.LESS_EQUAL=8]="LESS_EQUAL",T[T.LOGICAL_AND=9]="LOGICAL_AND",T[T.NOT_EQUAL=10]="NOT_EQUAL",T[T.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",T[T.INT_DIV=12]="INT_DIV",T[T.POW=13]="POW",T[T.PRELU=14]="PRELU",T[T.MAX=15]="MAX",T[T.MIN=16]="MIN",T[T.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",T[T.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG",T))(st||{}),Sue="return a + b;",wue="return areal * breal - aimag * bimag;",_ue="return areal * bimag + aimag * breal;",Aue="return a / b;",Nue="return a * b;",Due="return (a - b) * (a - b);",Pue="return a - b;",Mue="return f32(a == b);",Eue="return vec4<f32>(a == b);",Rue="return f32(a > b);",Fue="return vec4<f32>(a > b);",Lue="return f32(a >= b);",Bue="return vec4<f32>(a >= b);",$ue="return f32(a < b);",Oue="return vec4<f32>(a < b);",zue="return f32(a <= b);",Gue="return vec4<f32>(a <= b);",Uue="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Wue=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Kue=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,AG=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Vue=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,jue=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Hue="return f32(a != b);",que="return vec4<f32>(a != b);",Xue=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Yue=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${AG}
  return resultTemp;
  `,Que="if (a < 0.0) { return b * a; }  return a;",Zue=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function NG(r,e){let t=e?AG:Kue;return e?`
    var resultTemp = vec4<f32>(${r}(a, b));
    let isNaN = isNanCustomVec4(a) | isNanCustomVec4(b);
    `+t+`
    return resultTemp;
  `:t+`
    return ${r}(a, b);
  `}function Si(r,e){switch(r){case 0:return Nue;case 1:return Sue;case 2:return Pue;case 3:return Aue;case 4:return e?Eue:Mue;case 5:return e?Fue:Rue;case 6:return e?Bue:Lue;case 7:return e?Oue:$ue;case 8:return e?Gue:zue;case 9:return e?Wue:Uue;case 10:return e?que:Hue;case 11:return Due;case 12:return e?jue:Vue;case 14:return e?Zue:Que;case 15:return NG("max",e);case 16:return NG("min",e);case 13:return e?Yue:Xue;case 17:return wue;case 18:return _ue;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var Ke=(D=>(D[D.ABS=0]="ABS",D[D.CEIL=1]="CEIL",D[D.COS=2]="COS",D[D.COSH=3]="COSH",D[D.ELU=4]="ELU",D[D.EXP=5]="EXP",D[D.EXPM1=6]="EXPM1",D[D.FLOOR=7]="FLOOR",D[D.LINEAR=8]="LINEAR",D[D.LOG=9]="LOG",D[D.LOGICAL_NOT=10]="LOGICAL_NOT",D[D.NEG=11]="NEG",D[D.PRELU=12]="PRELU",D[D.RELU=13]="RELU",D[D.RELU6=14]="RELU6",D[D.LEAKYRELU=15]="LEAKYRELU",D[D.RSQRT=16]="RSQRT",D[D.SIN=17]="SIN",D[D.SINH=18]="SINH",D[D.SIGMOID=19]="SIGMOID",D[D.SQRT=20]="SQRT",D[D.SQUARE=21]="SQUARE",D[D.TANH=22]="TANH",D[D.TO_INT=23]="TO_INT",D))(Ke||{}),Jue="return abs(a);",ele="return ceil(a);",tle="return cos(a);",rle=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,nle="return exp(a) - 1.0;",ole="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",sle=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,ale="return exp(a);",ile="return floor(a);",ule="return a;",lle=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,ple="return f32(!(a >= 1.0));",mle="return -a;",cle="return (a < 0.0) ? b * a : a;",dle="if (a < 0.0) { return uniforms.alpha * a; } return a;",fle="if(a < 0.0) { return 0.0; } return a;",hle="return clamp(a, 0.0, 6.0);",gle="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",ble=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNanCustomVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,yle="return 1.0/sqrt(a);",xle="return 1.0 / (1.0 + exp(-1.0 * a));",Tle="return sin(a);",kle=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Ile="return sqrt(a);",Cle="return a * a;",vle=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Sle="return f32(i32((a)));";function Tl(r,e){switch(r){case 0:return Jue;case 2:return tle;case 3:return rle;case 1:return ele;case 4:return e?sle:ole;case 5:return ale;case 6:return nle;case 7:return ile;case 8:return ule;case 9:return lle;case 10:return ple;case 11:return mle;case 12:return cle;case 15:return dle;case 13:return e?ble:fle;case 14:return e?gle:hle;case 16:return yle;case 19:return xle;case 17:return Tle;case 18:return kle;case 20:return Ile;case 21:return Cle;case 22:return vle;case 23:return Sle;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function Jr(r,e=!1){if(r===null)return null;if(r==="linear")return Tl(Ke.LINEAR);if(r==="relu")return Tl(Ke.RELU,e);if(r==="elu")return Tl(Ke.ELU,e);if(r==="relu6")return Tl(Ke.RELU6,e);if(r==="prelu")return Si(st.PRELU,e);if(r==="sigmoid")return Tl(Ke.SIGMOID);throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`)}function RA(r,e){let t={RowPerThread:r[1],ColPerThread:r[0],TileAOuter:e[1]*r[1],TileBOuter:e[0]*r[0],TileInner:e[0]*r[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${t.TileInner/t.ColPerThread}>, ${t.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${t.TileBOuter/t.ColPerThread}>, ${t.TileInner}>;

  let RowPerThread = ${t.RowPerThread};
  let ColPerThread = ${t.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${t.TileAOuter};
  let TileBOuter = ${t.TileBOuter};
  let TileInner = ${t.TileInner};

  ${On()}

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${t.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${e[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}function wle(r){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;
  let tileSize = ${r[0]*4};
  ${On()}
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var FA=class{constructor(e,t,n,o=null,s=null,i=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[16,16,1];this.isVec4=!0;this.vecSize=4;this.outputShape=t,this.workGroupSize=gg(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let a=o!=null,u=i!=null;a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=a,this.activation=s,this.hasPreluActivationWeights=u,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],o=this.workGroupSize[1]*this.workPerThread,s=this.workGroupSize[0]*this.vecSize,i=s,a=[o,i],u=[i,s];return[ss(a,this.aShape.slice(1)),ss(u,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",o="";if(this.activation){let a=Jr(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${a}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${a}
            }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${s}
          ${o}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?RA([this.vecSize,this.workPerThread,1],this.workGroupSize):wle(this.workGroupSize)}

    `}};function xg(r,e){let t=e[1]*r[1],n=e[0]*r[0],o=t>n?t:n;return`
    var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
    var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${o}>;
    ${On()}
      let tileRow = i32(localId.y) * ${r[1]};
      let tileCol = i32(localId.x) * ${r[0]};

      let globalRow = i32(globalId.y) * ${r[1]};
      let globalCol = i32(globalId.x) * ${r[0]};

      let numTiles = (uniforms.dimInner - 1) / ${o} + 1;

      var acc : array<array<f32, ${r[0]}>, ${r[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${r[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${o} / ${e[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${o} / ${e[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${o} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${o} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${o}; k = k + 1) {
          for (var inner = 0; inner < ${r[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function _le(r){return`
    let TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${On()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var Tg=class{constructor(e,t,n,o=!1,s=!1,i=null,a=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=o?e[1]:e[2];this.workGroupSize=gg(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),b.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let p=i!=null,m=u!=null;p&&this.variableNames.push("bias"),m&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=o,this.transposeB=s,this.addBias=p,this.activation=a,this.hasPreluActivationWeights=m;let c=this.outputShape[2],d=this.transposeB?[this.outputShape[0],c,l]:[this.outputShape[0],l,c];[this.fitA,this.fitB]=this.getShapeFit(d),this.shaderKey=`matMulPacked_${this.workPerThread}_${o}_${s}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,o=t>n?t:n;this.outputShape[1]===1&&(o*=4),b.assert(o%this.workGroupSize[0]==0&&o%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[t,o],i=[o,n];return[ss(s,this.aShape.slice(1)),ss(i,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",o="";if(this.activation){let a=Jr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${a}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${a}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?xg([this.workPerThread,this.workPerThread,1],this.workGroupSize):_le(this.workGroupSize)}
    `}};function Ale(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${On()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var LA=class{constructor(e,t=!1,n=!1,o=null,s=null,i=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize);let a=o!=null,u=i!=null;a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=a,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",o="";if(this.activation){let a=Jr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${a}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${a}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutputAtCoords(batch, row, col, value);
      }
      ${Ale()}
    `}};function Nle(r){let e=r[1]/2,t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${t}>, ${n}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${On()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        }
      } else {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${e};
    if (tileRow >= ${e} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var BA=class{constructor(e,t,n,o=null,s=null,i=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[8,16,1];b.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let a=o!=null;a&&this.variableNames.push("bias");let u=i!=null;u&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",o="";if(this.activation){let a=Jr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${a}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${a}
        }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${s}
          ${o}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${Nle(this.workGroupSize)}
    `}};function Le(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),i=b.inferFromImplicitShape(o,s),a=b.sizeFromShape(i);return b.assert(s===a,()=>`The new shape (${i}) has ${a} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var DG={kernelName:ks,backendName:"webgpu",kernelFunc:Le};function qc({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,m=t?r.shape[l-2]:r.shape[l-1],c=n?e.shape[p-1]:e.shape[p-2],d=t?r.shape[l-1]:r.shape[l-2],f=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),x=b.sizeFromShape(g),k=Nr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let C=t?[y,m,d]:[y,d,m],A=n?[x,f,c]:[x,c,f],M=Le({inputs:{x:r},backend:o,attrs:{shape:C}}),D=Le({inputs:{x:e},backend:o,attrs:{shape:A}}),R=[M,D],B=Math.max(y,x),U=m%4==0&&f%4==0&&!t&&!n&&f>=32,W;d*f<=32?W=new LA([B,d,f],t,n,s,u,i):!t&&!n&&(d<=16&&(f<=512||c>=2*f)||f<=16&&(d<=512||m>=2*d))?W=new BA(C,A,[B,d,f],s,u,i):U?W=new FA(C,[B,d,f],$().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,u,i):W=new Tg(C,[B,d,f],$().get("WEBGPU_MATMUL_WORK_PER_THREAD"),t,n,s,u,i);let K=[M,D];s&&K.push(s),i&&K.push(i);let j=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}],V=o.runWebGPUProgram(W,K,r.dtype,j),q=Le({inputs:{x:V},backend:o,attrs:{shape:k}});R.push(V);for(let ee of R)o.disposeData(ee.dataId);return q}function Dle(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return qc({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:m,activation:p})}var PG={kernelName:Ns,backendName:"webgpu",kernelFunc:Dle};var Xx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Si(this.op,!1)}
      }

      ${ve()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var $A=class{constructor(e,t,n,o){this.variableNames=["A","B"];this.size=!0;let s=256;this.workGroupSize=[s,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.lastDimensionSize=o?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=o,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Si(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ve()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}};var OA=class{constructor(e,t,n){this.variableNames=["A","B"];this.workPerThread=4;this.isVec4=!0;this.size=!0;let o=128;this.workGroupSize=[o,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Si(this.op,this.isVec4)}
      }
      ${ve()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}};var kg=class{constructor(e,t,n){this.variableNames=["A","B"];this.size=!0;let o=128;this.workGroupSize=[o,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Si(this.op,!1)}
      }
      ${ve()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function zA(r,e,t){if(b.arraysEqual(e,t)&&b.sizeFromShape(e)%4==0)return new OA(r,e,t);let o=e.length===1&&t.length>1&&e[0]<1024,s=t.length===1&&e.length>1&&t[0]<1024;return o||s?new $A(r,e,t,s):new kg(r,e,t)}function wr(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var MG={kernelName:Hn,backendName:"webgpu",kernelFunc:wr};function qa(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),i=t.tensorMap.get(s.dataId),a=wr({inputs:{x:n},backend:t}),u=wr({inputs:{x:o},backend:t});return i.complexTensorInfos={real:a,imag:u},s}var EG={kernelName:Bu,backendName:"webgpu",kernelFunc:qa};var Xa=class{constructor(e,t){this.variableNames=["A"];this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Tl(this.op,!1)}
      }
      ${ve()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ct({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,i=o,a=t||s.dtype;if(i.shouldExecuteOnCPU([s])&&e!=null){let l=i.tensorMap.get(s.dataId),p=e(l.values,a);return i.makeTensorInfo(s.shape,a,p)}let u=new Xa(s.shape,r);return i.runWebGPUProgram(u,[s],a)}}function _t({opSnippet:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;if(t&&i.dtype==="complex64"){let m=u.tensorMap.get(i.dataId),c=u.tensorMap.get(a.dataId),d,f;if(r!==st.MUL)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[y,x]=g,T={dataId:y.dataId,dtype:y.dtype,shape:i.shape},k={dataId:x.dataId,dtype:x.dtype,shape:a.shape},C=zA(r,i.shape,a.shape);return u.runWebGPUProgram(C,[T,k],Kt(y.dtype,x.dtype))});else{let g=new Xx(st.COMPLEX_MULTIPLY_REAL,i.shape,a.shape),y=new Xx(st.COMPLEX_MULTIPLY_IMAG,i.shape,a.shape),x=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:i.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:a.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:a.shape}];d=u.runWebGPUProgram(g,x,"float32"),f=u.runWebGPUProgram(y,x,"float32")}let h=qa({inputs:{real:d,imag:f},backend:u});return u.disposeData(d.dataId),u.disposeData(f.dataId),h}let l=n||Kt(i.dtype,a.dtype);if((i.dtype==="string"||a.dtype==="string"||u.shouldExecuteOnCPU([i,a]))&&e!=null){let m=u.tensorMap.get(i.dataId).values,c=u.tensorMap.get(a.dataId).values,d=i.dtype==="string"?I.fromUint8ToStringArray(m):m,f=i.dtype==="string"?I.fromUint8ToStringArray(c):c,[h,g]=e(i.shape,a.shape,d,f,l);return u.makeTensorInfo(g,l,h)}let p=zA(r,i.shape,a.shape);return u.runWebGPUProgram(p,[i,a],l)}}var{addImpl:RG,ceilImpl:FG,concatImpl:LG,equalImpl:BG,expImpl:$G,expm1Impl:OG,floorImpl:zG,gatherNdImpl:GG,gatherV2Impl:UG,greaterEqualImpl:WG,greaterImpl:KG,lessEqualImpl:VG,lessImpl:jG,logImpl:HG,maxImpl:qG,maximumImpl:XG,minimumImpl:YG,multiplyImpl:QG,negImpl:ZG,notEqualImpl:JG,prodImpl:eU,rangeImpl:tU,rsqrtImpl:rU,simpleAbsImpl:nU,sliceImpl:oU,stridedSliceImpl:sU,stringNGramsImpl:aU,subImpl:iU,tileImpl:uU,topKImpl:lU,transposeImpl:pU,uniqueImpl:dTr}=Mc;var Ple=ct({opType:Ke.ABS,cpuKernelImpl:nU}),mU={kernelName:ds,backendName:"webgpu",kernelFunc:Ple};var Mle=_t({opSnippet:st.ADD,cpuKernelImpl:RG,supportsComplex:!0}),cU={kernelName:An,backendName:"webgpu",kernelFunc:Mle};var GA=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${ve()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Ele(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return wr({inputs:{x:n[0]},backend:t});let o=n.map(a=>a.dtype).reduce((a,u)=>Kt(a,u)),s=n.map(a=>a.shape),i=new GA(s);return t.runWebGPUProgram(i,n,o)}var dU={kernelName:uo,backendName:"webgpu",kernelFunc:Ele};var Ig=class{constructor(e,t,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="axis : i32; infinityValue : f32;";this.size=!0;let o=[t];I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.length),this.op=n==="min"?"<":">";let[s]=I.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(s,i)=>this.outputShape.length===1?s:`${s}[${i}]`,n=s=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${s}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${ve()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}};var UA=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${fg()}
      fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
              [[builtin(workgroup_id)]] workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var WA=class{constructor(e,t){this.variableNames=["A"];this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Zt(this.outputShape.length),t=Rle(this.newDim);return`
      ${ve()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A.numbers[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function Rle(r){let e=r.length;if(e>4)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC[${n}]`;return t.join()}function as(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,i=t,a=o.shape.length,u=new Array(a);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];if(t.shouldExecuteOnCPU([o])){let m=i.tensorMap.get(o.dataId).values,c=pU(m,o.shape,o.dtype,s,u);return t.makeTensorInfo(u,o.dtype,c)}if(o.shape.length===2&&b.arraysEqual(s,[1,0])){let p=new UA(o.shape,s);return i.runWebGPUProgram(p,[o],o.dtype)}let l=new WA(o.shape,s);return i.runWebGPUProgram(l,[o],o.dtype)}var fU={kernelName:Qo,backendName:"webgpu",kernelFunc:as};function Fle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=as({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let p=new Ig(u.shape,i[0],"max"),m=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=t.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>t.disposeData(d.dataId)),c}var hU={kernelName:lo,backendName:"webgpu",kernelFunc:Fle};function Lle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=as({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let p=new Ig(u.shape,i[0],"min"),m=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=t.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>t.disposeData(d.dataId)),c}var gU={kernelName:ti,backendName:"webgpu",kernelFunc:Lle};var Cg=class{constructor(e,t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${ve()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}};var vg=class{constructor(e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>;";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Ble(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1,p=I.computePool2DInfo(o.shape,s,i,l,a,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return wr({inputs:{x:o},backend:t});let m,c=[{type:"int32",data:[p.strideHeight,p.strideWidth]}];return p.filterHeight===1&&p.filterWidth===1?m=new vg(p):(m=new Cg(p,"avg"),c.push({type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]})),t.runWebGPUProgram(m,[o],o.dtype,c)}var bU={kernelName:po,backendName:"webgpu",kernelFunc:Ble};function $le(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;return qc({a:o,b:s,transposeA:i,transposeB:a,backend:t})}var yU={kernelName:mo,backendName:"webgpu",kernelFunc:$le};var KA=class{constructor(e,t){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Zt(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=Zt(this.rank),t=Ole(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,i)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,i)=>`sourceLoc.${VA[i]} = uniforms.start[${i}] + coords.${VA[i]};`),`
      ${ve()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},VA=["x","y","z","w","u","v"];function Ole(r){if(r===1)return"sourceLoc";if(r<=6)return VA.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Ya(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n,[a,u]=Tt.parseSliceParams(o,s,i);if(Tt.assertParamsValid(o,a,u),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.tensorMap.get(o.dataId),c=oU(m.values,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,c)}if(b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);let l=new KA(a,u),p=[{type:"int32",data:a}];return t.runWebGPUProgram(l,[o],o.dtype,p)}var xU={kernelName:Cs,backendName:"webgpu",kernelFunc:Ya};var zle=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let a=s.reduce((x,T)=>x*T),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,a),m=I.getSliceBeginCoords(i,s.length),c=I.getSliceSize(p,i,s.length),d=[],f=Le({inputs:{x:o},backend:t,attrs:{shape:u}}),h=as({inputs:{x:f},backend:t,attrs:{perm:l}}),g=Le({inputs:{x:h},backend:t,attrs:{shape:p}}),y=Ya({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(x=>t.disposeData(x.dataId)),y},TU={kernelName:fs,backendName:"webgpu",kernelFunc:zle};var jA=_t({opSnippet:st.NOT_EQUAL,dtype:"bool",cpuKernelImpl:JG}),kU={kernelName:ga,backendName:"webgpu",kernelFunc:jA};function Au(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return wr({inputs:{x:o.complexTensorInfos.real},backend:t})}var IU={kernelName:Vu,backendName:"webgpu",kernelFunc:Au};function CU(r,e){let t=new Xa(r.shape,Ke.TO_INT),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function HA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return wr({inputs:{x:o},backend:t});let i=xt(o.shape),a=HA({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=qa({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeData(a.dataId),u}if(o.dtype==="complex64"){let i=Au({inputs:{input:o},backend:t}),a=HA({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeData(i.dataId),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=wr({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return CU(o,t);if(s==="bool"){let i=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=jA({inputs:{a:o,b:i},backend:t});return t.disposeData(i.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var vU={kernelName:Vn,backendName:"webgpu",kernelFunc:HA};var Gle=ct({opType:Ke.CEIL,cpuKernelImpl:FG}),SU={kernelName:co,backendName:"webgpu",kernelFunc:Gle};var qA=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ve()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var XA=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ve()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isNanCustom(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Ule(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a,u=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return b.sizeFromShape(o.shape)%4==0?a=new qA(o.shape):a=new XA(o.shape),t.runWebGPUProgram(a,[o],o.dtype,u)}var wU={kernelName:jn,backendName:"webgpu",kernelFunc:Ule};var YA=class{constructor(e){this.uniforms="";this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)e.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ve()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Wp(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return wr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var _U={kernelName:Uu,backendName:"webgpu",kernelFunc:Wp};function Yx(r,e,t){let n=r[0].dtype;if(n==="complex64"){let d=r.map(x=>Au({inputs:{input:x},backend:t})),f=r.map(x=>Wp({inputs:{input:x},backend:t})),h=Yx(d,e,t),g=Yx(f,e,t),y=qa({inputs:{real:h,imag:g},backend:t});return d.forEach(x=>t.disposeData(x.dataId)),f.forEach(x=>t.disposeData(x.dataId)),t.disposeData(h.dataId),t.disposeData(g.dataId),y}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let d=r.map(k=>{let C=b.sizeFromShape(k.shape.slice(e));return Le({inputs:{x:k},backend:t,attrs:{shape:[-1,C]}})}),f=d.map(k=>({vals:t.readSync(k.dataId),shape:k.shape})),h=I.computeOutShape(d.map(k=>k.shape),1),g=d[0].shape[0]===1,y=LG(f,h,n,g),x=I.computeOutShape(r.map(k=>k.shape),e),T=t.makeTensorInfo(x,n,y);return d.forEach(k=>t.disposeData(k.dataId)),T}let{tensors2D:s,outShape:i}=Wle(r,e,t),a=s.map(d=>d.shape),u=new YA(a),l=[],p=new Array(a.length-1);if(p.length>0){p[0]=a[0][1],l.push({type:"int32",data:[p[0]]});for(let d=1;d<p.length;d++)p[d]=p[d-1]+a[d][1],l.push({type:"int32",data:[p[d]]})}let m=t.runWebGPUProgram(u,s,s[0].dtype,l);s.forEach(d=>t.disposeData(d.dataId));let c=Le({inputs:{x:m},backend:t,attrs:{shape:i}});return t.disposeData(m.dataId),c}function Wle(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>Le({inputs:{x:s},backend:t,attrs:{shape:[b.sizeFromShape(s.shape.slice(0,e)),b.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function QA(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=I.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let a=e.filter(l=>b.sizeFromShape(l.shape)>0);if(a.length===1)return wr({inputs:{x:a[0]},backend:t});let u=a.map(l=>l.shape);return I.assertParamsConsistent(u,s),Yx(a,s,t)}var AU={kernelName:hs,backendName:"webgpu",kernelFunc:QA};var ZA=class{constructor(e,t){this.variableNames=["A"];this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`;this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${ve()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}};var JA=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`;this.isVec4=!0;this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let i=[4,4,1];this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,i),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.hasLeakyreluAlpha=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(i),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],o=n,s=[t,o],i=[o,n],a=this.outputShape[1]*this.outputShape[2],u=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ss(s,[a,l]),ss(i,[l,u])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=RA([4,4,1],this.workGroupSize),s=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,i=this.fitA?`${s}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${s}
         }
         return vec4<f32>(0.0);
        `,a=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,u="",l="";if(this.activation){let c=Jr(this.activation,this.isVec4);if(this.hasPreluActivationWeights)u=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${c}
        }`;else{if(this.hasLeakyreluAlpha)throw u=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${c}
        }`,new Error("Leakyrelu is not supported.");u=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${c}
        }`}l="value = activation(value, outCoord);"}let p=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${u}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${i}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${a}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${p}
            ${l}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}};var eN=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=hg(this.dispatchLayout,this.outputShape),this.elementsPerThread=bg(this.dispatchLayout,this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;b.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let o=[e,n],s=[n,t],i=this.outputShape[1]*this.outputShape[2],a=this.outputShape[3],u=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ss(o,[i,u]),ss(s,[u,a])]}getUserCode(){let e=xg(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,s="",i="";if(this.activation){let l=Jr(this.activation,!1);this.hasPreluActivationWeights?s=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${l}
                }`:s=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,i="value = activation(value, outCoord);"}let a=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${s}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${o}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${a}
      ${i}
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}};var tN=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;";this.workGroupSize=[128,1,1];this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=Jr(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${s}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${s}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${On()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function Kle({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=r.shape,l=t.dataFormat==="channelsLast",p=!1,m=!1,c=t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d,f;if(c){let y=t.inHeight*t.inWidth*t.inChannels;d=Le({inputs:{x:r},backend:n,attrs:{shape:[1,t.batchSize,y]}}),f=Le({inputs:{x:e},backend:n,attrs:{shape:[1,y,t.outChannels]}})}else{let y=l?u[0]*u[1]*u[2]:u[0]*u[2]*u[3];d=Le({inputs:{x:r},backend:n,attrs:{shape:[1,y,t.inChannels]}}),f=Le({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}})}let h=qc({a:d,b:f,transposeA:p,transposeB:m,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),g=Le({inputs:{x:h},backend:n,attrs:{shape:t.outShape}});return n.disposeData(d.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}function Vle({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:u,filterHeight:l,inChannels:p,strideWidth:m,strideHeight:c,padInfo:d,outWidth:f,outHeight:h,dilationWidth:g,dilationHeight:y,dataFormat:x}=t,T=x==="channelsLast",k=u*l*p,C=h*f,A=[C,k],M=!1,D=!1,R=[],B=Le({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),U=Le({inputs:{x:e},backend:n,attrs:{shape:[1,k,-1]}});R.push(B),R.push(U);let W=new ZA(A,T),K=[{type:"int32",data:[d.left,d.top]},{type:"int32",data:[m,c]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[p*u]},{type:"int32",data:[p]}],j=n.runWebGPUProgram(W,[B],B.dtype,K),V=Le({inputs:{x:j},backend:n,attrs:{shape:[1,A[0],A[1]]}});R.push(j),R.push(V);let q=[1,A[0],A[1]],ee=new Tg(q,[1,C,t.outChannels],$().get("WEBGPU_MATMUL_WORK_PER_THREAD"),M,D,o,a,s),Z=q[1],te=q[2],oe=t.outChannels,ie=[{type:"int32",data:[Z]},{type:"int32",data:[oe]},{type:"int32",data:[te]}],se=[V,U];o&&se.push(o),s&&se.push(s);let ue=n.runWebGPUProgram(ee,se,V.dtype,ie),ye=T?[1,h,f,t.outChannels]:[1,t.outChannels,h,f],fe=Le({inputs:{x:ue},backend:n,attrs:{shape:ye}});R.push(ue);for(let xe of R)n.disposeData(xe.dataId);return fe}function Qx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=o!=null,l=s!=null,p;if(t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID"||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID"))return Kle({x:r,filter:e,convInfo:t,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i});if($().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&r.shape[0]===1)return Vle({x:r,filter:e,convInfo:t,backend:n,bias:o,preluActivationWeights:s,leakyreluAlpha:i,activation:a});let c=$().getBool("WEBGPU_USE_NAIVE_CONV2D"),d=(t.inChannels%4==0||t.inChannels===3&&t.padInfo.type==="VALID")&&t.outChannels%4==0&&t.outChannels>=32,f=[t.padInfo.top,t.padInfo.left],h=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(c)p=new tN(t,u,a,l);else{d?p=new JA(t,u,a,l):p=new eN(t,u,a,l);let y=t.outShape[1]*t.outShape[2],x=t.outShape[3],T=t.filterHeight*t.filterWidth*t.inShape[3];h.push({type:"int32",data:[y]},{type:"int32",data:[x]},{type:"int32",data:[T]})}let g=[r,e];return u&&g.push(o),l&&g.push(s),n.runWebGPUProgram(p,g,r.dtype,h)}function jle(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:p}=t,m=I.convertConv2DDataFormat(u),c=I.computeConv2DInfo(o.shape,s.shape,i,l,a,p,!1,m);return Qx({x:o,filter:s,convInfo:c,backend:n})}var NU={kernelName:fo,backendName:"webgpu",kernelFunc:jle};var rN=class{constructor(e){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.inShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=hg(this.dispatchLayout,this.outputShape),this.elementsPerThread=bg(this.dispatchLayout,this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${xg(this.elementsPerThread,this.workGroupSize)}
  `}};var nN=class{constructor(e){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.inShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${ve()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Hle(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=I.convertConv2DDataFormat(l),c=I.computeConv2DInfo(i,s.shape,a,1,u,p,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if($().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new nN(c);else{f=new rN(c);let h=c.inShape[1]*c.inShape[2],g=c.inShape[3],y=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(f,[o,s],"float32",d)}var DU={kernelName:ho,backendName:"webgpu",kernelFunc:Hle};var qle=ct({opType:Ke.COS}),PU={kernelName:go,backendName:"webgpu",kernelFunc:qle};var Xle=ct({opType:Ke.COSH}),MU={kernelName:bo,backendName:"webgpu",kernelFunc:Xle};var oN=class{constructor(e,t,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32;";this.workGroupSize=[64,1,1];this.size=!0;let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,a,u]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${ve()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${a};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var Yle=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=n,p=new oN(o.shape[3],s.shape,a,u),m=[{type:"float32",data:[l]}];return t.runWebGPUProgram(p,[o,s,i],"float32",m)},EU={kernelName:aa,backendName:"webgpu",kernelFunc:Yle};var sN=class{constructor(e,t){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32;";this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Qle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],p=i==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=i==="NHWC"?[a,m,c,d]:[a,d,m,c],h=[{type:"int32",data:[s]}],g=new sN(f,i);return t.runWebGPUProgram(g,[o],o.dtype,h)}var RU={kernelName:ia,backendName:"webgpu",kernelFunc:Qle};var Sg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;";this.workGroupSize=[4,4,4];this.isVec4=!0;this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let s=Jr(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${s}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${fg()}
      fn main([[builtin(global_invocation_id)]] globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}};var wg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;
      channelMul : i32;`;this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=Jr(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${s}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${On()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Zle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]);let m=I.computeConv2DInfo(o.shape,s.shape,i,p,a,l,!0),c=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}],d;return m.batchSize===1&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&m.strideHeight===1&&m.strideWidth===1&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&m.filterHeight===3&&m.inChannels%4==0?d=new Sg(m):(d=new wg(m),c.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),t.runWebGPUProgram(d,[o,s],o.dtype,c)}var FU={kernelName:yo,backendName:"webgpu",kernelFunc:Zle};var aN=_t({opSnippet:st.MUL,cpuKernelImpl:QG,supportsComplex:!0}),LU={kernelName:Fo,backendName:"webgpu",kernelFunc:aN};var iN=class{constructor(e,t){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32;";this.size=!0;this.inputShape=[e.batchSize,e.inSize];let[n]=I.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ve()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function wi(r,e,t,n,o){let s=r.shape.length,i=[],a=b.parseAxisParam(e,r.shape),u=a,l=I.getAxesPermutation(u,s),p=r;l!=null&&(p=as({inputs:{x:r},attrs:{perm:l},backend:o}),u=I.getInnerMostAxes(u.length,s),i.push(p)),I.assertAxesAreInnerMostDims(n,u,s);let[m,c]=I.computeOutAndReduceShapes(p.shape,u),d=m;t&&(d=I.expandShapeToKeepDim(m,a));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([p])){let h=o.tensorMap.get(p.dataId).values;switch(n){case"max":let g=qG(h,b.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:T}=eU(p.shape,p.dtype,h,u);f=o.makeTensorInfo(x,T,y);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=b.sizeFromShape(c),y=b.sizeFromShape(p.shape)/h,x={windowSize:h,inSize:h,batchSize:y,outSize:1},T=n==="mean"?"float32":tu(r.dtype),k=[{type:"int32",data:[h]}],C=new iN(x,n),A=o.runWebGPUProgram(C,[p],T,k);i.push(A),f=Le({inputs:{x:A},attrs:{shape:d},backend:o})}return i.forEach(h=>o.disposeData(h.dataId)),f}function _g(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return wi(o,s,i,"sum",t)}var BU={kernelName:jo,backendName:"webgpu",kernelFunc:_g};function Jle(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(a,u),m=p.length,c=null,d=i.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:x}=I.getEinsumPermutation(d,u[g]),T;I.isIdentityPermutation(y)?T=s[g]:(T=as({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(T));let k=T.shape.slice();for(let C=0;C<x.length;++C)k.splice(x[C],0,1);b.arraysEqual(T.shape,k)||(T=Le({inputs:{x:T},backend:t,attrs:{shape:k}}),f.push(T)),c===null?c=T:(c=aN({inputs:{a:T,b:c},backend:t}),f.push(c))}h<m-1&&(l[h]>=0&&(c=_g({inputs:{x:c},backend:t,attrs:{axis:l[h]-(i.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeData(h.dataId);return c}var $U={kernelName:Gu,backendName:"webgpu",kernelFunc:Jle};var epe=ct({opType:Ke.ELU}),OU={kernelName:To,backendName:"webgpu",kernelFunc:epe};var tpe=_t({opSnippet:st.EQUAL,dtype:"bool",cpuKernelImpl:BG}),zU={kernelName:ua,backendName:"webgpu",kernelFunc:tpe};var uN=ct({opType:Ke.EXP,cpuKernelImpl:$G,dtype:"float32"}),GU={kernelName:ko,backendName:"webgpu",kernelFunc:uN};function Zx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,i=s.shape.length,a=s.shape.slice(),u=o;return o<0&&(b.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),a.splice(u,0,1),Le({inputs:{x:s},backend:n,attrs:{shape:a}})}var UU={kernelName:gs,backendName:"webgpu",kernelFunc:Zx};var rpe=ct({opType:Ke.EXPM1,cpuKernelImpl:OG}),WU={kernelName:la,backendName:"webgpu",kernelFunc:rpe};var lN=class{constructor(e){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ve()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Qa(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let i=b.getArrayFromDType(s,b.sizeFromShape(n));return i.fill(o),e.makeTensorInfo(n,s,i)}else{let i=new lN(n),a=[{type:"float32",data:[o]}];return e.runWebGPUProgram(i,[],s,a)}}var KU={kernelName:ri,backendName:"webgpu",kernelFunc:Qa};var pN=class{constructor(e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var VU={kernelName:pa,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new pN(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var npe=ct({opType:Ke.FLOOR,cpuKernelImpl:zG}),jU={kernelName:Io,backendName:"webgpu",kernelFunc:npe};var ope=_t({opSnippet:st.INT_DIV,dtype:"int32"}),HU={kernelName:Co,backendName:"webgpu",kernelFunc:ope};var qU=(r,e,t,n,o)=>{let s=[n,...t];return o&&s.push(o),r.createBindGroup({layout:e,entries:s.map((i,a)=>({binding:a,resource:i}))})},Jx=(r,e,t,n,o,s=!1)=>{let i={dtype:o.dtype,shape:o.shape},a=SG(n,i,e,s),u=r.createShaderModule({code:a,label:e.constructor.name});return r.createComputePipeline({layout:t,compute:{module:u,entryPoint:"main"},label:e.constructor.name})};function eT(r,e,t,n="",o=""){return r.shaderKey+"_"+(r.workGroupSize?r.workGroupSize.join(","):"")+e.map(i=>i.length).join(",")+t.join(",")+r.variableNames.join(",")+n+o}function mN(r){let{externalImage:e,backend:t,attrs:n,outShape:o,useImport:s}=r,{numChannels:i}=n,a=b.sizeFromShape(o),u=b.computeStrides(o),l=t.makeTensorInfo(o,"int32"),p=t.getFromPixelsProgram(s?"import":"copyExternal");p.updateOutputShape(o);let m=[l.shape],c=[l.dtype,s?"import":"copyExternal"],d=eT(p,m,c),f=p.getLayout(t.device),h=t.getAndSavePipeline(d,()=>Jx(t.device,p,f.pipelineLayout,[],l,!0));p.setPipeline(h),s||t.queue.copyExternalImageToTexture({source:e,origin:{x:0,y:0}},{texture:p.makeInputTexture(t.device,o[1],o[0])},[o[1],o[0]]);let g=t.tensorMap.get(l.dataId);g.bufferInfo.buffer=t.acquireBuffer(g.bufferInfo.byteSize);let y=[a,i,...u,...p.dispatch];p.setUniform(t.device,y);let x;if(s){let T={source:e};x=t.device.importExternalTexture(T)}else x=p.inputTexture.createView();return t.runFromPixelsProgram(p,g.bufferInfo.buffer,f,x,l.dataId),l}var YU={kernelName:Pl,backendName:"webgpu",kernelFunc:spe},Xc;function spe(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&o instanceof OffscreenCanvas,l=typeof ImageBitmap!="undefined"&&o instanceof ImageBitmap,[p,m]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,p,s];if($().getBool("WEBGPU_USE_IMPORT")&&i)return mN({externalImage:o,backend:t,attrs:n,outShape:c,useImport:!0});if((i||a)&&(Xc==null&&(Xc=document.createElement("canvas").getContext("2d")),Xc.canvas.width=p,Xc.canvas.height=m,Xc.drawImage(o,0,0,p,m),o=Xc.canvas),l||u||i||a)return mN({externalImage:o,backend:t,attrs:n,outShape:c,useImport:!1});let d=o.data,f=d;if(s!=null&&s!==4){f=new Uint8Array(o.width*o.height*s);let y=d.length,x=0;for(let T=0;T<y;T++)T%4<s&&(f[x++]=d[T])}let h=t.makeTensorInfo(c,"int32"),g=t.tensorMap.get(h.dataId);return g.values=new Int32Array(f),t.maybeReleaseBuffer(h.dataId),t.uploadToGPU(h.dataId),h}var cN=class{constructor(e,t,n,o,s){this.uniforms="varianceEpsilon : f32;";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${ve()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var QU={kernelName:vo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:i,variance:a}=r,{varianceEpsilon:u}=e,l=t,p=[n,i,a],m=null;s!=null&&(m=s.shape,p.push(s));let c=null;o!=null&&(c=o.shape,p.push(o));let d=new cN(n.shape,i.shape,a.shape,m,c),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(d,p,n.dtype,f)}};function ape(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=I.convertConv2DDataFormat(p),g=I.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h);return Qx({x:o,filter:s,convInfo:g,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:f,activation:d})}var ZU={kernelName:Ds,backendName:"webgpu",kernelFunc:ape};function ipe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c}=n,d=p;d==null&&(d=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(u,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${d}'`);let f=I.computeConv2DInfo(o.shape,s.shape,u,d,l,m,!0),h=[o,s],g=i!=null,y=a!=null;g&&h.push(i),y&&h.push(a);let x=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}],T;return f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4==0?T=new Sg(f,g,c,y):(T=new wg(f,g,c,y),x.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.outChannels/f.inChannels]})),t.runWebGPUProgram(T,h,"float32",x)}var JU={kernelName:Ps,backendName:"webgpu",kernelFunc:ipe};var dN=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${Zt(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function upe(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,i=s[s.length-1],a=b.sizeFromShape(n.shape),[u,l,p,m]=I.prepareAndValidate(n,o),c=Le({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),d=Le({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let x=t.readSync(o.dataId),T=t.bufferSync(n),k=GG(x,T,n.dtype,l,i,p,m,n.shape,a);return t.makeTensorInfo(u,n.dtype,k.values)}let f=new dN(i,[l,p]),h=[{type:"int32",data:[i]},{type:"int32",data:m}],g=t.runWebGPUProgram(f,[d,c],d.dtype,h),y=Le({inputs:{x:g},backend:t,attrs:{shape:u}});return t.disposeData(c.dataId),t.disposeData(d.dataId),t.disposeData(g.dataId),y}var eW={kernelName:ma,backendName:"webgpu",kernelFunc:upe};var fN=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=lpe(this.aShape,"i32");return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function lpe(r,e="int"){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push(`${e}(getIndices(resRC.x, resRC.z))`):n.push(`${t[o]}`);return n.join()}function hN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0],l=I.segment_util.collectGatherOpShapeInfo(o,s,u,a),p=b.sizeFromShape(s.shape),m=[],c=Le({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=Le({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let T=t.tensorMap.get(d.dataId).values,k=Ce(d.shape,d.dtype,T),A=t.tensorMap.get(c.dataId).values,M=Ce(c.shape,c.dtype,A),D=UG(M,k,f);return m.forEach(R=>t.disposeData(R.dataId)),t.makeTensorInfo(l.outputShape,D.dtype,D.values)}let h=new fN(c.shape,f),g=t.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let y=Le({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return m.forEach(x=>t.disposeData(x.dataId)),y}var tW={kernelName:bs,backendName:"webgpu",kernelFunc:hN};var ppe=_t({opSnippet:st.GREATER,cpuKernelImpl:KG,dtype:"bool"}),rW={kernelName:ca,backendName:"webgpu",kernelFunc:ppe};var mpe=_t({opSnippet:st.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:WG}),nW={kernelName:So,backendName:"webgpu",kernelFunc:mpe};function cpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,i=[{type:"float32",data:[s]}],a=new Xa(o.shape,Ke.LEAKYRELU);return a.uniforms="alpha : f32;",t.runWebGPUProgram(a,[o],"float32",i)}var oW={kernelName:wo,backendName:"webgpu",kernelFunc:cpe};var dpe=_t({opSnippet:st.LESS,dtype:"bool",cpuKernelImpl:jG}),sW={kernelName:da,backendName:"webgpu",kernelFunc:dpe};var fpe=_t({opSnippet:st.LESS_EQUAL,dtype:"bool",cpuKernelImpl:VG}),aW={kernelName:fa,backendName:"webgpu",kernelFunc:fpe};var hpe=ct({opType:Ke.LOG,cpuKernelImpl:HG}),iW={kernelName:_o,backendName:"webgpu",kernelFunc:hpe};var gpe=_t({opSnippet:st.LOGICAL_AND,dtype:"bool"}),uW={kernelName:ha,backendName:"webgpu",kernelFunc:gpe};var bpe=ct({opType:Ke.LOGICAL_NOT}),lW={kernelName:ji,backendName:"webgpu",kernelFunc:bpe};function gN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n;return wi(o,s,i,"max",t)}var pW={kernelName:Ao,backendName:"webgpu",kernelFunc:gN};var ype=_t({opSnippet:st.MAX,cpuKernelImpl:XG}),mW={kernelName:No,backendName:"webgpu",kernelFunc:ype};function xpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1,p=I.computePool2DInfo(o.shape,s,i,l,a,u),m,c=[];if(p.filterHeight===1&&p.filterWidth===1){if(b.arraysEqual(p.inShape,p.outShape))return wr({inputs:{x:o},backend:t});m=new vg(p),c.push({type:"int32",data:[p.strideHeight,p.strideWidth]})}else m=new Cg(p,"max"),c.push({type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]});return t.runWebGPUProgram(m,[o],o.dtype,c)}var cW={kernelName:Do,backendName:"webgpu",kernelFunc:xpe};function Tpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:i}=n;return wi(o,i,s,"mean",t)}var dW={kernelName:Po,backendName:"webgpu",kernelFunc:Tpe};function kpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return wi(o,s,i,"min",t)}var fW={kernelName:Mo,backendName:"webgpu",kernelFunc:kpe};var Ipe=_t({opSnippet:st.MIN,cpuKernelImpl:YG}),hW={kernelName:Eo,backendName:"webgpu",kernelFunc:Ipe};var bN=class{constructor(e,t,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,p)=>`uniforms.pad${p}[0]`).join(","),n=this.xShape.map((l,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",a=Zt(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ve()}
        if (index < uniforms.size) {
          let start = ${a}(${t});
          let end = ${a}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${o}) {
              ${i} = ${o} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${s}) {
              ${i} = (${s} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${u}));
        }
      }
    `}};var gW={kernelName:Ro,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,i=t,a=o.map(p=>({type:"int32",data:[p[0],p[1]]})),u=new bN(n.shape,o,s);return i.runWebGPUProgram(u,[n],n.dtype,a)}};function Cpe(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[i,a]=ZG(s.values,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,i)}let o=new Xa(n.shape,Ke.NEG);return t.runWebGPUProgram(o,[n],n.dtype)}var bW={kernelName:ys,backendName:"webgpu",kernelFunc:Cpe};function vpe(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m}=Tr.nonMaxSuppressionV3Impl(l,p,i,a,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var yW={kernelName:ba,backendName:"webgpu",kernelFunc:vpe};function Spe(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),m=t.readSync(s.dataId),c=i,d=a,f=u,h=l,{selectedIndices:g,selectedScores:y}=Tr.nonMaxSuppressionV5Impl(p,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var xW={kernelName:ya,backendName:"webgpu",kernelFunc:Spe};function Ag(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=Au({inputs:{input:n},backend:t}),s=Ag({inputs:{x:o},backend:t}),i=Wp({inputs:{input:n},backend:t}),a=Ag({inputs:{x:i},backend:t}),u=qa({inputs:{real:s,imag:a},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),u}else return Qa({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var TW={kernelName:_s,backendName:"webgpu",kernelFunc:Ag};function kW(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Au({inputs:{input:n},backend:t}),s=kW({inputs:{x:o},backend:t}),i=Wp({inputs:{input:n},backend:t}),a=Ag({inputs:{x:i},backend:t}),u=qa({inputs:{real:s,imag:a},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),u}else return Qa({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var IW={kernelName:xs,backendName:"webgpu",kernelFunc:kW};function wpe(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Zx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(p=>{let m=Zx({inputs:{input:p},backend:t,attrs:{dim:o}});return a.push(m),m}),l=QA({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(p=>t.disposeData(p.dataId)),l}var CW={kernelName:Ts,backendName:"webgpu",kernelFunc:wpe};var yN=class{constructor(e,t){this.variableNames=["x"];this.uniforms="constantValue : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Zt(e),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,i=e>1?`${t}(${o})`:`${o}`,a=e>1?"any(outC < start)":"outC < start",u=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ve()}
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${i};
          let outC = getCoordsFromIndex(index);

          if (${a} || ${u}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}};var xN=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;if(s.every(l=>b.arraysEqual(l,[0,0])))return wr({inputs:{x:o},backend:t});if(b.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return Qa({backend:t,attrs:{shape:l,value:i,dtype:o.dtype}})}let a=[{type:"float32",data:[i]}];s.map(l=>a.push({type:"int32",data:[l[0],l[1]]}));let u=new yN(o.shape,s);return t.runWebGPUProgram(u,[o],o.dtype,a)},vW={kernelName:Lo,backendName:"webgpu",kernelFunc:xN};var _pe=_t({opSnippet:st.POW}),SW={kernelName:Bo,backendName:"webgpu",kernelFunc:_pe};function Ape(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new kg(st.PRELU,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var wW={kernelName:$o,backendName:"webgpu",kernelFunc:Ape};function Npe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return wi(o,s,i,"prod",t)}var _W={kernelName:Ta,backendName:"webgpu",kernelFunc:Npe};var Dpe=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=tU(n,o,s,i);return e.makeTensorInfo([a.length],i,a)},AW={kernelName:ni,backendName:"webgpu",kernelFunc:Dpe};var TN=_t({opSnippet:st.DIV}),NW={kernelName:xo,backendName:"webgpu",kernelFunc:TN};var Ppe=ct({opType:Ke.RELU}),DW={kernelName:Oo,backendName:"webgpu",kernelFunc:Ppe};var Mpe=ct({opType:Ke.RELU6}),PW={kernelName:Go,backendName:"webgpu",kernelFunc:Mpe};var kN=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Epe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:i,halfPixelCenters:a}=n,[u,l]=i,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[a?.5:0]}],f=new kN(o.shape,u,l);return t.runWebGPUProgram(f,[o],"float32",d)}var MW={kernelName:zo,backendName:"webgpu",kernelFunc:Epe};var IN=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Rpe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[s?.5:0]}],f=new IN(o.shape,u,l,i);return t.runWebGPUProgram(f,[o],o.dtype,d)}var EW={kernelName:oi,backendName:"webgpu",kernelFunc:Rpe};var CN=class{constructor(e,t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ve()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var RW={kernelName:Na,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=new CN(n.shape,s),[l,p]=I.getImageCenter(i,n.shape[1],n.shape[2]),m=[{type:"float32",data:[l]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),a.runWebGPUProgram(u,[n],n.dtype,m)}};var Fpe=ct({opType:Ke.RSQRT,cpuKernelImpl:rU}),FW={kernelName:Uo,backendName:"webgpu",kernelFunc:Fpe};var vN=class{constructor(e,t,n,o,s,i,a){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=i,this.type=a,this.dispatchLayout=Ie(e),this.dispatch=de(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${a}`;let u=Zt(s.length);this.uniforms=`sliceDim : i32; strides: ${u}; size: i32;`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="",i="";this.updatesRank===1?(o="coords[0]",s="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(o="coords[0], coords[1]",s="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let a=`getUpdates(${o})`,u=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${i}

      ${ve()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${a};
          let flatIndex = getOutputIndexFromCoords(${s});

         ${u}
        }
      }`}};function Lpe(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=I.calculateShapes(s,o,i),c=[m/l,l];if(m===0)return t.makeTensorInfo(i,o.dtype);let d=Le({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),f=Le({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=f.dtype,g=Qa({backend:t,attrs:{shape:c,value:0,dtype:h}}),y=b.sizeFromShape(f.shape),x=[{type:"int32",data:[a]},{type:"int32",data:p},{type:"int32",data:[y]}],T=new vN(f.shape,a,d.shape.length,f.shape.length,p,c,h),k=t.runWebGPUProgram(T,[f,d],h,x,g),C=Le({inputs:{x:k},backend:t,attrs:{shape:i}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(k.dataId),C}var LW={kernelName:Ca,backendName:"webgpu",kernelFunc:Lpe};var SN=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let a=0;a<this.outputShape.length;a++)i.push(`${o[a]}`),a<this.cRank&&s.push(`${o[a]}`);e=s.join(),t=i.join()}return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function Bpe(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=new SN(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(i,[n,o,s],Kt(o.dtype,s.dtype))}var BW={kernelName:Is,backendName:"webgpu",kernelFunc:Bpe};var $pe=ct({opType:Ke.SIGMOID}),$W={kernelName:Ko,backendName:"webgpu",kernelFunc:$pe};var Ope=ct({opType:Ke.SIN}),OW={kernelName:Wo,backendName:"webgpu",kernelFunc:Ope};var zpe=ct({opType:Ke.SINH}),zW={kernelName:va,backendName:"webgpu",kernelFunc:zpe};var wN=_t({opSnippet:st.SUB,cpuKernelImpl:iU,supportsComplex:!0}),GW={kernelName:Xo,backendName:"webgpu",kernelFunc:wN};function Gpe(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=b.parseAxisParam([s],o.shape),a=gN({inputs:{x:o},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),u=I.expandShapeToKeepDim(a.shape,i),l=Le({inputs:{x:a},backend:t,attrs:{shape:u}}),p=wN({inputs:{a:o,b:l},backend:t}),m=uN({inputs:{x:p},backend:t}),c=_g({inputs:{x:m},backend:t,attrs:{axis:i,keepDims:!1}}),d=Le({inputs:{x:c},backend:t,attrs:{shape:u}}),f=TN({inputs:{a:m,b:d},backend:t});return t.disposeData(a.dataId),t.disposeData(l.dataId),t.disposeData(p.dataId),t.disposeData(m.dataId),t.disposeData(c.dataId),t.disposeData(d.dataId),f}var UW={kernelName:Ho,backendName:"webgpu",kernelFunc:Gpe};var Upe=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let a=s.reduce((y,x)=>y*x),u=[[0,0]];u.push(...i);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let l=[],p=xN({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),m=I.getReshaped(p.shape,s,a,!1),c=I.getPermuted(m.length,s.length,!1),d=I.getReshapedPermuted(p.shape,s,a,!1),f=Le({inputs:{x:p},backend:t,attrs:{shape:m}}),h=as({inputs:{x:f},backend:t,attrs:{perm:c}}),g=Le({inputs:{x:h},backend:t,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(y=>t.disposeData(y.dataId)),g},WW={kernelName:vs,backendName:"webgpu",kernelFunc:Upe};var _N=class{constructor(e,t,n,o,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"];this.workGroupSize=[64,1,1];this.workPerThread=4;this.size=!0;this.outputShape=i,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let u=t>1;this.shaderKey=`scatter_${n}_${o}_${u}`;let l=Zt(s.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let p="";n===1?p="i":n===2&&(p="i, j"),this.indicesSnippet=`getIndices(${p})`;let m="";o===1?m="i":o===2&&(m="i, coords[1]"),this.updatesSnippet=`getUpdates(${m})`,this.strideString=u?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${ve()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function Wpe(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:l,strides:p,outputSize:m}=I.calculateShapes(s,o,a),c=!1,d=[{type:"int32",data:[l]},{type:"int32",data:[u]},{type:"int32",data:p}],f=new _N(l,u,o.shape.length,s.shape.length,p,[m,1],c),h=t.runWebGPUProgram(f,[s,o,i],s.dtype,d),g=Le({inputs:{x:h},backend:t,attrs:{shape:a}});return t.disposeData(h.dataId),g}var KW={kernelName:Xu,backendName:"webgpu",kernelFunc:Wpe};function Kpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[a]=c;let f=Ya({inputs:{x:o},backend:t,attrs:{begin:p,size:d}});return p[a]+=c,f})}var VW={kernelName:Ss,backendName:"webgpu",kernelFunc:Kpe};var Vpe=ct({opType:Ke.SQRT}),jW={kernelName:Vo,backendName:"webgpu",kernelFunc:Vpe};var HW={kernelName:si,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new Xa(t.shape,Ke.SQUARE);return n.runWebGPUProgram(o,[t],t.dtype)}};var jpe=_t({opSnippet:st.SQUARED_DIFFERENCE}),qW={kernelName:qo,backendName:"webgpu",kernelFunc:jpe};var AN=class{constructor(e){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Zt(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,i)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${o-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${ve()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Hpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:x,end:T,strides:k}=Tt.sliceInfo(o.shape,s,i,a,u,l,p,m,c),C;if(h)C=Le({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=Tt.computeOutShape(x,T,k),M=Ya({inputs:{x:o},backend:t,attrs:{begin:x,size:A}});C=Le({inputs:{x:M},backend:t,attrs:{shape:f}}),t.disposeData(M.dataId)}else if(t.shouldExecuteOnCPU([o])){let M=t.readSync(o.dataId),D=Ce(o.shape,o.dtype,M),R=sU(d,D,k,x);C=t.makeTensorInfo(f,o.dtype,R.values)}else{let M=new AN(d),D=[{type:"int32",data:x},{type:"int32",data:k}],R=t.runWebGPUProgram(M,[o],o.dtype,D);C=Le({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeData(R.dataId)}return C}var XW={kernelName:Sa,backendName:"webgpu",kernelFunc:Hpe};function qpe(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=e,c=t.readSync(p.dataId),d=t.readSync(m.dataId),[f,h]=aU(c,d,o,s,i,a,u,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var YW={kernelName:Yu,backendName:"webgpu",kernelFunc:qpe};var Xpe=ct({opType:Ke.TANH}),QW={kernelName:Yo,backendName:"webgpu",kernelFunc:Xpe};var NN=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Ype(this.rank,"uniforms.");return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Ype(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function Qpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>b.decodeString(c)):u,p=Ce(o.shape,o.dtype,l),m=uU(p,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let i=new NN(o.shape,s);return t.runWebGPUProgram(i,[o],o.dtype)}var ZW={kernelName:Nn,backendName:"webgpu",kernelFunc:Qpe};var DN=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${ve()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},PN=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${ve()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Yc(r,e){e!==null&&r.disposeData(e.dataId)}function JW(r){let e=1;for(;e<r;)e*=2;return e}function Zpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n,a=o.shape,u=a[a.length-1];if(t.shouldExecuteOnCPU([o])){let C=t.readSync(o.dataId),[A,M]=lU(C,a,o.dtype,s,i);return[t.makeTensorInfo(A.shape,A.dtype,A.values),t.makeTensorInfo(M.shape,M.dtype,M.values)]}if(s===0)return a[a.length-1]=0,[t.makeTensorInfo(a,o.dtype,[]),t.makeTensorInfo(a,"int32",[])];if(u===1)return[o,Qa({attrs:{shape:a,dtype:"int32",value:0},backend:t})];let p=b.sizeFromShape(a)/u,m=Le({inputs:{x:o},attrs:{shape:[p,u]},backend:t}),c=JW(s),d=JW(u),f=null,h=()=>f===null?[m,m]:[m,f],g=(C,A,M)=>{let D=h(),R=new DN(M),U=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[C]},{type:"int32",data:[A]}],W=f;f=t.runWebGPUProgram(R,D,"int32",U),Yc(t,W)};for(let C=1;C<c;C*=2){let A=C*2;for(let M=C;M>=1;M/=2)g(A,M,[p,d])}for(let C=d;C>c;C/=2){let A=h(),M=new PN([p,C/2]),R=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],B=f;f=t.runWebGPUProgram(M,A,"int32",R),Yc(t,B);let U=c/2,W=U*2;for(let K=U;K>=1;K/=2)g(W,K,f.shape)}let y=f;f=Ya({inputs:{x:f},backend:t,attrs:{begin:0,size:[p,s]}}),Yc(t,y);let x=hN({inputs:{x:m,indices:f},backend:t,attrs:{axis:1,batchDims:1}});Yc(t,m);let T=a.slice(0,-1);T.push(s),y=f,f=Le({inputs:{x:f},attrs:{shape:T},backend:t}),Yc(t,y);let k=x;return x=Le({inputs:{x},attrs:{shape:T},backend:t}),Yc(t,k),[x,f]}var eK={kernelName:_a,backendName:"webgpu",kernelFunc:Zpe};var MN=class{constructor(e){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ve()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Jpe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],y=new MN(g),x=i==="nearest"?1:2,T;switch(a){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}let k=[{type:"int32",data:[x]},{type:"int32",data:[T]},{type:"float32",data:[u]}];return t.runWebGPUProgram(y,[o,s],"float32",k)}var tK={kernelName:Aa,backendName:"webgpu",kernelFunc:Jpe};function eme(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o,a=i.shape.length,u=o.shape[s],l=new Array(a-1),p=0;for(let h=0;h<a;h++)h!==s&&(l[p++]=i.shape[h]);let m=[],c=new Array(a).fill(0),d=i.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=Ya({inputs:{x:i},backend:t,attrs:{begin:c,size:d}}),y=Le({inputs:{x:g},backend:t,attrs:{shape:l}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeData(h.dataId)),f}var rK={kernelName:ws,backendName:"webgpu",kernelFunc:eme};var tme=[PG,mU,cU,dU,hU,gU,bU,yU,TU,vU,SU,wU,EG,AU,NU,DU,PU,MU,EU,RU,FU,$U,OU,zU,GU,UU,WU,KU,VU,YU,jU,HU,QU,ZU,JU,eW,tW,rW,nW,MG,_U,oW,sW,aW,iW,uW,lW,pW,mW,cW,dW,fW,hW,gW,LU,bW,yW,xW,kU,IW,CW,vW,SW,wW,_W,AW,IU,NW,DW,PW,DG,MW,EW,RW,FW,LW,BW,$W,OW,zW,xU,XW,YW,UW,WW,KW,VW,jW,HW,qW,GW,BU,QW,ZW,eK,tK,fU,rK,TW];for(let r of tme)eu(r);var EN=class{constructor(e){this.device=e;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let o=nK(e,t);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let i=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(i),i}this.numBytesAllocated+=e;let s=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(o).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let o=nK(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),i=s.indexOf(e);if(i<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(i,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function nK(r,e){return`${r}_${e}`}var Ng=class{constructor(){this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.lastUniformData=[];this.inputTexture=null;this.layout=null;this.lastPixelSize={width:0,height:0};this.disposed=!1;this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){b.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=Ie(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${ve()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,o)=>n===this.lastUniformData[o])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var RN=class extends Ng{constructor(){super(...arguments);this.layout=null;this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var rme=$().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),FN=class extends cs{constructor(e,t=!1){super();this.commandQueueOwnedIds=new WeakSet;this.tensorDisposalQueue=[];this.uniformDisposalQueue=[];this.stagingDisposalQueue=[];this.disposed=!1;this.uploadWaitMs=0;this.downloadWaitMs=0;this.dispatchNumberInEncoder=0;if(!yg())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new EN(this.device),this.tensorMap=new Za(this,Qn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return FN.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:o}=this.tensorMap.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()},s=b.sizeFromShape(t)*Hx(n);return this.tensorMap.set(o,{dtype:n,values:e,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i=b.sizeFromShape(n)*Hx(o);this.tensorMap.set(e,{dtype:o,values:t,bufferInfo:{byteSize:i,usage:this.defaultGpuBufferUsage()},refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new Ng),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new RN),this.fromPixelImportProgram;default:b.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(b.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),i=s[0],a=s[1];o=I.mergeRealAndImagArrays(i,a)}else{let s=await this.getBufferData(t);o=EA(s,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=b.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(s);return a.kernelMs=b.sum(u),a.getExtraProfileInfo=()=>u.map((l,p)=>({name:i[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(i=>b.encodeString(i));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),o=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(o).set(t.values):new Float32Array(o).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let s={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(s)}}makeUniforms(e){let t=0,n=[];e.forEach(i=>{i.data.length===0&&(i.data=[1]);let a;switch(i.data.length){case 1:a=4;break;case 2:a=8;break;case 3:a=16;break;case 4:a=16;break;default:b.assert(!1,()=>`Unsupported ${i.data.length}D shape`)}t=Math.ceil(t/a)*a,n.push(t),t+=i.data.length*4});let o=new ArrayBuffer(t);e.forEach((i,a)=>{let u=n[a];i.type==="int32"?new Int32Array(o,u,i.data.length).set(i.data):i.type==="uint32"?new Uint32Array(o,u,i.data.length).set(i.data):new Float32Array(o,u,i.data.length).set(i.data)});let s=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(s,0,o,0,t),{offset:0,size:t,buffer:s}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let s=0;s<e;s++)t.push({binding:s+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),o=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,o,s){if(!s){if(s=this.makeTensorInfo(e.outputShape,n),b.sizeFromShape(s.shape)===0){let D=this.tensorMap.get(s.dataId);return D.values=b.getTypedArrayFromDType(s.dtype,0),s}this.uploadToGPU(s.dataId)}let i=[{type:"float32",data:[NaN]}],a=t.concat(s).map(D=>D.shape),u="int32";a.map(D=>{i.push({type:u,data:D})});let l=b.computeStrides(s.shape);if(i.push({type:u,data:l}),e.size){let D=b.sizeFromShape(e.outputShape);i.push({type:u,data:[e.isVec4?D/4:D]})}o&&(i=[...i,...o]);let p=this.makeUniforms(i),m=t.map((D,R)=>{if(D.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(D.dataId),{dtype:this.tensorMap.get(D.dataId).dtype,shape:D.shape,name:e.variableNames[R]}}),c=m.map(D=>D.dtype).concat(s.dtype),d=m.map(D=>I.getBroadcastDims(D.shape,s.shape)),f=m.map(D=>b.arraysEqual(D.shape,s.shape)).join("_"),h=d.map(D=>D.join("_")).join(";"),g=eT(e,a,c,h,f),{bindGroupLayout:y,pipelineLayout:x}=this.getCachedOrCreateLayout(e.variableNames.length),T=this.getAndSavePipeline(g,()=>Jx(this.device,e,x,m,s)),k=this.activeTimers!=null,C=qU(this.device,y,t.map(D=>this.tensorToBinding(D)),this.tensorToBinding(s),p);this.ensureCommandEncoderReady();let A=this.getComputePass();k&&this.supportTimeQuery&&A.writeTimestamp(this.querySet,0),A.setPipeline(T),A.setBindGroup(0,C),A.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),k&&this.supportTimeQuery&&A.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(D=>{this.commandQueueOwnedIds.add(D.dataId)}),this.commandQueueOwnedIds.add(s.dataId);let M={byteSize:p.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:p.buffer};return this.uniformDisposalQueue.push(M),$().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),k&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}runFromPixelsProgram(e,t,n,o,s){let i=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:o},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let a=this.getComputePass(),u=this.activeTimers!=null;u&&this.supportTimeQuery&&a.writeTimestamp(this.querySet,0),a.setPipeline(e.pipeline),a.setBindGroup(0,i),a.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),u&&this.supportTimeQuery&&a.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(s),this.submitQueue(),u&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=rme){return $().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&b.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Qc=FN;Qc.nextDataId=0;var oK={};Xe(oK,{WebGPUBackend:()=>Qc,webgpu_util:()=>qx});ii.isBrowser()&&yg()&&rl("webgpu",async()=>{$().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:$().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t={},n=e.features.has("timestamp-query");n?t={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let o=await e.requestDevice(t);return new Qc(o,n)},3);var et=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(et||{}),Kp=(a=>(a[a.linear=0]="linear",a[a.relu=1]="relu",a[a.relu6=2]="relu6",a[a.prelu=3]="prelu",a[a.leakyrelu=4]="leakyrelu",a[a.sigmoid=5]="sigmoid",a[a.elu=6]="elu",a))(Kp||{});var sK;function nme(r){sK=r.wasm.cwrap(Ns,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function ome(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=0;if(i!=null){let D=t.dataIdMap.get(i.dataId);if(D.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${D.shape.length}.`);f=D.id}let h=a==null?0:t.dataIdMap.get(a.dataId).id,g=Kp[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=u?o.shape[2]:o.shape[1],x=l?s.shape[1]:s.shape[2],T=Nr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),k=t.makeOutput([...T,y,x],o.dtype),C=t.dataIdMap.get(k.dataId).id,A=new Uint8Array(new Int32Array(o.shape).buffer),M=new Uint8Array(new Int32Array(s.shape).buffer);return sK(c,A,o.shape.length,d,M,s.shape.length,u,l,g,f,h,m||0,C),k}var aK={kernelName:Ns,backendName:"wasm",setupFunc:nme,kernelFunc:ome};function dt(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:i,inputs:{x:a}}=s,u=i.dataIdMap.get(a.dataId).id,l=i.makeOutput(a.shape,e||a.dtype),p=i.dataIdMap.get(l.dataId).id;return b.sizeFromShape(l.shape)===0||t(u,et[a.dtype],p),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var iK=dt(ds);function At(r,e,t){let n;function o(i){n=i.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:a,inputs:u}=i,{a:l,b:p}=u,m=a.dataIdMap.get(l.dataId).id,c=a.dataIdMap.get(p.dataId).id,d=t??l.dtype,f=I.assertAndGetBroadcastShape(l.shape,p.shape),h=a.makeOutput(f,d);if(b.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),y=new Uint8Array(new Int32Array(p.shape).buffer),x=a.dataIdMap.get(h.dataId).id;return(()=>n(m,g,l.shape.length,c,y,p.shape.length,et[l.dtype],x))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var sme=!0,uK=At(An,sme);var lK;function ame(r){lK=r.wasm.cwrap(uo,null,["array","number","number","number"])}function ime(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(b.sizeFromShape(n.shape)===0)return n;let o=e.map(a=>t.dataIdMap.get(a.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),i=t.dataIdMap.get(n.dataId).id;return lK(s,o.length,et[n.dtype],i),n}var pK={kernelName:uo,backendName:"wasm",setupFunc:ame,kernelFunc:ime};function Vp(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var mK={kernelName:Hn,backendName:"wasm",kernelFunc:Vp};var cK;function ume(r){cK=r.wasm.cwrap(Qo,null,["number","array","number","number","number","array","number"])}function _i(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=pme(e.x.shape,n.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let a=lme(e.x.shape,n.perm),u={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(i){let f=Vp({inputs:e,backend:t});return f.shape=a,f}let l=t.makeOutput(a,u.dtype),p=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(l.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(u.shape).buffer);return cK(p,d,u.shape.length,et[u.dtype],m,c,s.length),l}function lme(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function pme(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let i=0;i<n.length;++i)n[i]>=o&&(s===-1||n[s]>n[i])&&(s=i);n[s]=o}return[t,n]}var dK={kernelName:Qo,backendName:"wasm",kernelFunc:_i,setupFunc:ume};function vn(r,e,t){let n=r.shape,o=r.shape.length,s=b.parseAxisParam(e,n),i=s,a=I.getAxesPermutation(i,o),u=null,l=!1;if(a!=null){let p=new Array(o);for(let d=0;d<p.length;d++)p[d]=n[a[d]];i=I.getInnerMostAxes(i.length,o),u=_i({inputs:{x:r},attrs:{perm:a},backend:t});let m=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(u.dataId).id!==m&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var fK;function mme(r){fK=r.wasm.cwrap(Ri,null,["number, number, number"])}function cme(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(i,o,e);if(d){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let f=l.shape.length;I.assertAxesAreInnerMostDims("all",m,f);let[h,g]=I.computeOutAndReduceShapes(l.shape,m),y=b.sizeFromShape(g),x=e.makeOutput(h,i.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;fK(u,y,T)}if(d&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var hK={kernelName:Ri,backendName:"wasm",setupFunc:mme,kernelFunc:cme};var gK;function dme(r){gK=r.wasm.cwrap(Fi,null,["number, number, number"])}function fme(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(i,o,e);if(d){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let f=l.shape.length;I.assertAxesAreInnerMostDims("any",m,f);let[h,g]=I.computeOutAndReduceShapes(l.shape,m),y=b.sizeFromShape(g),x=e.makeOutput(h,i.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;gK(u,y,T)}if(d&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var bK={kernelName:Fi,backendName:"wasm",setupFunc:dme,kernelFunc:fme};var yK;function hme(r){yK=r.wasm.cwrap(lo,null,["number","number","number","number","number"])}function gme(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,i=e.dataIdMap.get(s.dataId).id,a=i,u=s,{transposed:l,axes:p,inputWasTransposed:m}=vn(s,o,e);if(m){let y=e.dataIdMap.get(l.dataId).id;y!==i&&(u=l,a=y)}let c=u.shape.slice(0,-1),d=e.makeOutput(c,"int32"),f=e.dataIdMap.get(d.dataId).id,h=b.sizeFromShape(d.shape),g=u.shape[p[0]];return yK(a,et[u.dtype],h,g,f),m&&e.disposeData(l.dataId),d}var xK={kernelName:lo,backendName:"wasm",kernelFunc:gme,setupFunc:hme};var TK;function bme(r){TK=r.wasm.cwrap(po,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yme(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=t,p=I.computePool2DInfo(o.shape,i,a,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,x=p.strideWidth,T=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let k=n.makeOutput(p.outShape,"float32"),C=n.dataIdMap.get(k.dataId).id;return TK(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,x,T,C),k}var kK={kernelName:po,backendName:"wasm",setupFunc:bme,kernelFunc:yme};function gr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),i=b.inferFromImplicitShape(o,s);return b.assert(s===b.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var IK={kernelName:ks,backendName:"wasm",kernelFunc:gr};var CK;function xme(r){CK=r.wasm.cwrap(mo,null,["number","array","number","number","array","number","number","number","number"])}function Tme(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,p=i?o.shape[u-2]:o.shape[u-1],m=a?s.shape[l-1]:s.shape[l-2],c=i?o.shape[u-1]:o.shape[u-2],d=a?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),T=Nr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let k=i?[g,p,c]:[g,c,p],C=a?[y,d,m]:[y,m,d],A=gr({inputs:{x:o},backend:t,attrs:{shape:k}}),M=gr({inputs:{x:s},backend:t,attrs:{shape:C}}),D=t.dataIdMap.get(A.dataId).id,R=t.dataIdMap.get(M.dataId).id,B=i?A.shape[2]:A.shape[1],U=a?M.shape[1]:M.shape[2],W=Math.max(g,y),K=t.makeOutput([W,B,U],A.dtype),j=t.dataIdMap.get(K.dataId).id,V=new Uint8Array(new Int32Array(A.shape).buffer),q=new Uint8Array(new Int32Array(M.shape).buffer);return CK(D,V,A.shape.length,R,q,M.shape.length,i,a,j),t.disposeData(A.dataId),t.disposeData(M.dataId),K.shape=T,K}var vK={kernelName:mo,backendName:"wasm",setupFunc:xme,kernelFunc:Tme};function ra(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,i]=Tt.parseSliceParams(e,t,n),a=Tt.isSliceContinous(e.shape,s,i),u=o.readSync(e.dataId),l=o.makeOutput(i,e.dtype),p=b.computeStrides(e.shape),m=o.dataIdMap.get(l.dataId);if(a){let f=Tt.computeFlatOffset(s,p);return e.dtype==="string"?m.stringBytes=u.slice(f,f+b.sizeFromShape(i)):o.typedArrayFromHeap(l).set(u.subarray(f,f+b.sizeFromShape(i))),l}if(e.dtype==="string"){let f=_p(u,s,i,e.shape,e.dtype);return m.stringBytes=f,l}let c=o.typedArrayFromHeap(l),d=e.shape.length;if(d===2)kme(u,p[0],c,s,i);else if(d===3)Ime(u,p[0],p[1],c,s,i);else if(d===4)Cme(u,p[0],p[1],p[2],c,s,i);else{let f=_p(u,s,i,e.shape,e.dtype);c.set(f)}return l}function kme(r,e,t,n,o){let s=0,i=n[0],a=n[1],u=i+o[0];for(let l=i;l<u;l++){let p=l*e+a;t.set(r.subarray(p,p+o[1]),s),s+=o[1]}}function Ime(r,e,t,n,o,s){let i=0,a=o[0],u=o[1],l=o[2],p=a+s[0],m=u+s[1];for(let c=a;c<p;c++)for(let d=u;d<m;d++){let f=c*e+d*t+l;n.set(r.subarray(f,f+s[2]),i),i+=s[2]}}function Cme(r,e,t,n,o,s,i){let a=0,u=s[0],l=s[1],p=s[2],m=u+i[0],c=l+i[1],d=p+i[2],f=s[3];for(let h=u;h<m;h++)for(let g=l;g<c;g++)for(let y=p;y<d;y++){let x=h*e+g*t+y*n+f;o.set(r.subarray(x,x+i[3]),a),a+=i[3]}}var SK={kernelName:Cs,backendName:"wasm",kernelFunc:ra};function vme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n,a=s.reduce((y,x)=>y*x),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,a),m=I.getSliceBeginCoords(i,s.length),c=I.getSliceSize(p,i,s.length),d=gr({inputs:{x:o},backend:t,attrs:{shape:u}}),f=_i({inputs:{x:d},backend:t,attrs:{perm:l}}),h=gr({inputs:{x:f},backend:t,attrs:{shape:p}}),g=ra({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(d.dataId),g}var wK={kernelName:fs,backendName:"wasm",kernelFunc:vme};function Nu(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var _K={kernelName:Vn,backendName:"wasm",kernelFunc:Nu};var AK=dt(co);var NK;function Sme(r){NK=r.wasm.cwrap(jn,null,["number","number","number","number"])}function wme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a=t.dataIdMap.get(o.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id;return NK(a,s,i,l),u}var DK={kernelName:jn,backendName:"wasm",setupFunc:Sme,kernelFunc:wme};function LN(r){let{inputs:e,backend:t}=r,n=b.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=I.computeOutShape(e.map(d=>d.shape),n),s=e.filter(d=>b.sizeFromShape(d.shape)>0);if(s.length===1)return Vp({inputs:{x:s[0]},backend:t});let i=t.makeOutput(o,e[0].dtype);if(b.sizeFromShape(o)===0)return i;let a=s.map(d=>d.shape);if(I.assertParamsConsistent(a,n),s[0].dtype==="string"){let d=s.map(T=>{let k=b.sizeFromShape(T.shape.slice(n));return gr({inputs:{x:T},backend:t,attrs:{shape:[-1,k]}})}),f=d.map(T=>({vals:t.readSync(T.dataId),shape:T.shape}));o=I.computeOutShape(d.map(T=>T.shape),1);let h=d[0].shape[0]===1,g=vp(f,o,e[0].dtype,h),y=I.computeOutShape(s.map(T=>T.shape),n);i.shape=y;let x=t.dataIdMap.get(i.dataId);return x.stringBytes=I.fromStringArrayToUint8(g),d.forEach(T=>t.disposeData(T.dataId)),i}let u=b.sizeFromShape(s[0].shape.slice(0,n)),l=0,p=s.map(d=>{let f=b.sizeFromShape(d.shape.slice(n));return l+=f,f}),m=s.map(d=>t.typedArrayFromHeap(d)),c=t.typedArrayFromHeap(i);for(let d=0;d<u;d++){let f=d*l;for(let h=0;h<m.length;h++){let g=p[h],y=d*g,x=m[h].subarray(y,y+g);c.set(x,f),f+=g}}return i}var PK={kernelName:hs,backendName:"wasm",kernelFunc:LN};var MK;function _me(r){MK=r.wasm.cwrap(fo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ame(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m,dataFormat:c}=t,d=I.convertConv2DDataFormat(c),f=I.computeConv2DInfo(o.shape,s.shape,u,l,p,m,!1,d),h=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,T=f.padInfo.bottom,k=f.padInfo.left,C=f.dilationHeight,A=f.dilationWidth,M=f.strideHeight,D=f.strideWidth,R=f.inChannels,B=f.outChannels,U=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let W=n.makeOutput(f.outShape,"float32"),K=n.dataIdMap.get(W.dataId).id;return MK(i,o.shape[0],o.shape[1],o.shape[2],a,h,g,y,x,T,k,U,C,A,M,D,R,B,K),W}var EK={kernelName:fo,backendName:"wasm",setupFunc:_me,kernelFunc:Ame};var RK;function Nme(r){RK=r.wasm.cwrap(ho,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Dme(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,inputShape:p}=n,m=1,c=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(p,s.shape,i,m,a,l,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:y,inHeight:x,inWidth:T,outChannels:k,outHeight:C,outWidth:A,strideHeight:M,strideWidth:D}=d,R=h-1-d.padInfo.top,B=g-1-d.padInfo.left,U=d.dataFormat==="channelsLast",W=b.computeStrides(d.inShape),K=b.computeStrides(o.shape),[j,V,q]=b.computeStrides(s.shape),ee=W[0],Z=U?W[1]:W[2],te=U?W[2]:1,oe=U?1:W[1],ie=K[0],se=U?K[1]:K[2],ue=U?K[2]:1,ye=U?1:K[1],fe=e.makeOutput(d.inShape,"float32"),xe=e.dataIdMap.get(fe.dataId).id,we=e.dataIdMap.get(o.dataId).id,Fe=e.dataIdMap.get(s.dataId).id;return RK(we,Fe,f,h,g,x,T,y,C,A,k,M,D,R,B,j,V,q,ee,Z,te,oe,ie,se,ue,ye,xe),fe}var FK={kernelName:ho,backendName:"wasm",setupFunc:Nme,kernelFunc:Dme};var LK=dt(go);var BK=dt(bo);var $K=(t=>(t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest",t))($K||{}),OK;function Pme(r){OK=r.wasm.cwrap(aa,null,["number","number","number","number","array","number","number","number","number","number"])}function Mme(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:i}=n,{image:a,boxes:u,boxInd:l}=t,p=u.shape[0],[m,c]=i,d=[p,m,c,a.shape[3]],f=e.dataIdMap.get(a.dataId),h;a.dtype!=="float32"&&(h=Nu({backend:e,inputs:{x:a},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(h.dataId));let g=f.id,y=e.dataIdMap.get(u.dataId).id,x=e.dataIdMap.get(l.dataId).id,T=e.makeOutput(d,"float32"),k=e.dataIdMap.get(T.dataId).id,C=new Uint8Array(new Int32Array(a.shape).buffer);return OK(g,y,x,p,C,m,c,$K[o],s,k),h!=null&&e.disposeData(h.dataId),T}var zK={kernelName:aa,backendName:"wasm",setupFunc:Pme,kernelFunc:Mme};var GK;function Eme(r){GK=r.wasm.cwrap(sa,null,["number","number","number","number","number","number"])}function Rme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([s],u),p=o;l!==null&&(p=_i({inputs:{x:o},attrs:{perm:l},backend:t}));let m=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumsum",[m],u);let c=t.makeOutput(p.shape,p.dtype),d=p.shape[m],f=t.dataIdMap.get(p.dataId).id,h=t.dataIdMap.get(c.dataId).id;GK(f,i?1:0,a?1:0,d,h,et[o.dtype]);let g=c;if(l!==null){let y=I.getUndoAxesPermutation(l);g=_i({inputs:{x:c},attrs:{perm:y},backend:t}),t.disposeData(p.dataId),t.disposeData(c.dataId)}return g}var UK={kernelName:sa,backendName:"wasm",setupFunc:Eme,kernelFunc:Rme};var WK;function Fme(r){WK=r.wasm.cwrap(ia,null,["number","number","number","array","number","array","array","number","number"])}function Lme(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],p=i==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=i==="NHWC"?[a,m,c,d]:[a,d,m,c],h=e.makeOutput(f,"float32"),y=e.dataIdMap.get(o.dataId).id,x=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),T=new Uint8Array(new Int32Array(f).buffer),k=new Uint8Array(new Int32Array(b.computeStrides(f)).buffer),C=e.dataIdMap.get(h.dataId).id;return WK(y,s,i==="NHWC"?1:0,x,o.shape.length-1,T,k,f.length,C),h}var KK={kernelName:ia,backendName:"wasm",setupFunc:Fme,kernelFunc:Lme};var VK;function Bme(r){VK=r.wasm.cwrap(yo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $me(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m}=t,c=l??[1,1],d=I.computeConv2DInfo(o.shape,s.shape,u,c,p,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,y=d.padInfo.right,x=d.padInfo.bottom,T=d.padInfo.left,k=d.dilationHeight,C=d.dilationWidth,A=d.strideHeight,M=d.strideWidth,D=d.inChannels,R=d.outChannels,B=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let U=n.makeOutput(d.outShape,"float32"),W=n.dataIdMap.get(U.dataId).id;return VK(i,o.shape[0],o.shape[1],o.shape[2],a,f,h,g,y,x,T,B,k,C,A,M,D,R,W),U}var jK={kernelName:yo,backendName:"wasm",setupFunc:Bme,kernelFunc:$me};var HK=dt(To);var Ome=!1,qK=At(ua,Ome,"bool");var XK=dt(ko,"float32");function tT(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),gr({inputs:{x:o},backend:n,attrs:{shape:a}})}var YK={kernelName:gs,backendName:"wasm",kernelFunc:tT};function BN(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var QK={kernelName:ri,backendName:"wasm",kernelFunc:BN};var ZK;function zme(r){ZK=r.wasm.cwrap(pa,null,["number","number","number","number","number","number"])}function Gme(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,[a,u,l,p]=n.shape;return ZK(s,a,u,l,p,i),o}var JK={kernelName:pa,backendName:"wasm",kernelFunc:Gme,setupFunc:zme};var eV=dt(Io);var Ume=!1,tV=At(Co,Ume);var rV;function Wme(r){rV=r.wasm.cwrap(vo,null,["number","number","number","number","number","number","number"])}function Kme(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:i,variance:a,offset:u,scale:l}=t,p=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(i.dataId).id,c=e.dataIdMap.get(a.dataId).id,d=u!=null?e.dataIdMap.get(u.dataId).id:0,f=l!=null?e.dataIdMap.get(l.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(b.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return rV(p,m,c,d,f,o,g),h}var nV={kernelName:vo,backendName:"wasm",setupFunc:Wme,kernelFunc:Kme};var oV;function Vme(r){oV=r.wasm.cwrap(Ds,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function jme(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,p,l,c),g=Kp[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,k=0;if(i!=null){let ue=n.dataIdMap.get(i.dataId);if(ue.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==T)throw new Error(`FusedConv2D bias shape (${ue.shape}) does not match the number of output channels (${T})`);k=ue.id}let C=h.filterHeight,A=h.filterWidth,M=h.padInfo.top,D=h.padInfo.right,R=h.padInfo.bottom,B=h.padInfo.left,U=h.dilationHeight,W=h.dilationWidth,K=h.strideHeight,j=h.strideWidth,V=h.inChannels,q=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,Z=h.inHeight,te=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(oe.dataId).id,se=a==null?0:n.dataIdMap.get(a.dataId).id;return oV(y,ee,Z,te,x,C,A,k,M,D,R,B,q,U,W,K,j,V,T,g,se,f||0,ie),oe}var sV={kernelName:Ds,backendName:"wasm",setupFunc:Vme,kernelFunc:jme};var aV;function Hme(r){aV=r.wasm.cwrap(Ps,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qme(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,p,l,c,!0),g=Kp[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,k=0;if(i!=null){let ue=n.dataIdMap.get(i.dataId);if(ue.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==T)throw new Error(`FusedDepthwiseConv2D bias shape (${ue.shape}) does not match the number of output channels (${T})`);k=ue.id}let C=h.filterHeight,A=h.filterWidth,M=h.padInfo.top,D=h.padInfo.right,R=h.padInfo.bottom,B=h.padInfo.left,U=h.dilationHeight,W=h.dilationWidth,K=h.strideHeight,j=h.strideWidth,V=h.inChannels,q=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,Z=h.inHeight,te=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(oe.dataId).id,se=a==null?0:n.dataIdMap.get(a.dataId).id;return aV(y,ee,Z,te,x,C,A,k,M,D,R,B,q,U,W,K,j,V,T,g,se,f||0,ie),oe}var iV={kernelName:Ps,backendName:"wasm",setupFunc:Hme,kernelFunc:qme};var uV;function Xme(r){uV=r.wasm.cwrap(ma,null,["number","number","number","number","number","number","array","number"])}function Yme(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,i,a,u]=Sb.prepareAndValidate(n,o),l=e.makeOutput(s,n.dtype);if(i===0)return l;let p=o.shape,m=p[p.length-1],d=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),y=e.dataIdMap.get(l.dataId).id;return uV(d,et[n.dtype],h,i,m,a,g,y),l}var lV={kernelName:ma,backendName:"wasm",setupFunc:Xme,kernelFunc:Yme};var pV;function Qme(r){pV=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Zme(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0],l=e.readSync(s.dataId),p=o.shape[u];for(let R=0;R<l.length;++R){let B=l[R];b.assert(B<=p-1&&B>=0,()=>`GatherV2: the index value ${B} is not in [0, ${p-1}]`)}let m=I.segment_util.collectGatherOpShapeInfo(o,s,u,a),c=gr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:e}),d=b.sizeFromShape(s.shape),f=gr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:e}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=e.makeOutput(h,o.dtype);if(b.sizeFromShape(o.shape)===0)return g;let y=c.shape.length-1,T=e.dataIdMap.get(c.dataId).id,C=e.dataIdMap.get(f.dataId).id,A=e.dataIdMap.get(g.dataId).id,M=new Uint8Array(new Int32Array(b.computeStrides(c.shape)).buffer),D=new Uint8Array(new Int32Array(b.computeStrides(h)).buffer);return pV(T,et[o.dtype],M,y,C,m.batchSize,D,A),e.disposeData(c.dataId),e.disposeData(f.dataId),g.shape=m.outputShape,g}var mV={kernelName:bs,backendName:"wasm",setupFunc:Qme,kernelFunc:Zme};var Jme=!1,cV=At(ca,Jme,"bool");var ece=!1,dV=At(So,ece,"bool");var fV;function tce(r){fV=r.wasm.cwrap(wo,null,["number","number","number","number"])}function rce(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(b.sizeFromShape(e.shape)!==0){let i=n.dataIdMap.get(s.dataId).id;fV(o,et[e.dtype],t,i)}return s}var hV={kernelName:wo,backendName:"wasm",setupFunc:tce,kernelFunc:rce};var nce=!1,gV=At(da,nce,"bool");var oce=!1,bV=At(fa,oce,"bool");var yV=dt(_o);var sce=!1,xV=At(ha,sce,"bool");var TV;function ace(r){TV=r.wasm.cwrap(Ao,null,["number","number","number","number"])}function ice(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(i,o,e);if(d){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let f=l.shape.length;I.assertAxesAreInnerMostDims("max",m,f);let[h,g]=I.computeOutAndReduceShapes(l.shape,m),y=b.sizeFromShape(g),x=e.makeOutput(h,i.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;TV(u,et[i.dtype],y,T)}if(d&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var kV={kernelName:Ao,backendName:"wasm",setupFunc:ace,kernelFunc:ice};var uce=!1,IV=At(No,uce);var CV;function lce(r){CV=r.wasm.cwrap(Do,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function pce(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;b.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=t,p=I.computePool2DInfo(o.shape,i,a,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,x=p.dilationWidth,T=p.strideHeight,k=p.strideWidth,C=p.inChannels,A=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let M=n.makeOutput(p.outShape,"float32"),D=n.dataIdMap.get(M.dataId).id;return CV(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,x,T,k,C,A,D),M}var vV={kernelName:Do,backendName:"wasm",setupFunc:lce,kernelFunc:pce};var SV;function mce(r){SV=r.wasm.cwrap(Po,null,["number, number, number"])}function cce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(i,o,e),f=m;if(d){let k=e.dataIdMap.get(p.dataId).id;k!==a&&(l=p,u=k,f=I.getInnerMostAxes(f.length,l.shape.length))}I.assertAxesAreInnerMostDims("mean",f,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,f),y=b.sizeFromShape(g),x=l;l.dtype!=="float32"&&(x=Nu({backend:e,inputs:{x:l},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(x.dataId).id);let T=e.makeOutput(h,"float32");if(b.sizeFromShape(l.shape)!==0){let k=e.dataIdMap.get(T.dataId).id;SV(u,y,k)}if(d&&e.disposeData(p.dataId),s){let k=I.expandShapeToKeepDim(T.shape,c);T.shape=k}return l.dtype!=="float32"&&e.disposeData(x.dataId),T}var wV={kernelName:Po,backendName:"wasm",setupFunc:mce,kernelFunc:cce};var _V;function dce(r){_V=r.wasm.cwrap(Mo,null,["number","number","number","number"])}function fce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(i,o,e);if(d){let T=e.dataIdMap.get(p.dataId).id;T!==a&&(l=p,u=T)}let f=l.shape.length;I.assertAxesAreInnerMostDims("min",m,f);let[h,g]=I.computeOutAndReduceShapes(l.shape,m),y=b.sizeFromShape(g),x=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;_V(u,et[i.dtype],y,T)}if(d&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var AV={kernelName:Mo,backendName:"wasm",setupFunc:dce,kernelFunc:fce};var hce=!1,NV=At(Eo,hce);var DV=(t=>(t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric",t))(DV||{}),PV;function gce(r){PV=r.wasm.cwrap(Ro,null,["number","array","number","number","array","array","number","number"])}function bce(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+e.shape[h]+f[1]),i=t.dataIdMap.get(e.dataId).id,a=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),p=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(p).buffer),d=new Uint8Array(new Int32Array(m).buffer);return PV(i,l,e.shape.length,et[e.dtype],c,d,DV[o],u),a}var MV={kernelName:Ro,backendName:"wasm",kernelFunc:bce,setupFunc:gce};var yce=!0,EV=At(Fo,yce);var RV=dt(ys);function Zc(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],i=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:i}}var FV;function xce(r){FV=r.wasm.cwrap(ba,"number",["number","number","number","number","number"])}function Tce(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i}=n,{boxes:a,scores:u}=t,l=e.dataIdMap.get(a.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=FV(l,p,s,o,i),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=Zc(e,m);return e.wasm._free(f),e.wasm._free(h),e.makeOutput([d],"int32",c)}var LV={kernelName:ba,backendName:"wasm",setupFunc:xce,kernelFunc:Tce};var BV;function kce(r){BV=r.wasm.cwrap(qi,"number",["number","number","number","number","number","bool"])}function Ice(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:a}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(l.dataId).id,c=BV(p,m,s,o,i,a),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=Zc(e,c);e.wasm._free(h);let y=e.makeOutput([f],"int32",d),x=e.makeOutput([],"int32",g);return[y,x]}var $V={kernelName:qi,backendName:"wasm",setupFunc:kce,kernelFunc:Ice};var OV;function Cce(r){OV=r.wasm.cwrap(ya,"number",["number","number","number","number","number","number"])}function vce(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,softNmsSigma:a}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(l.dataId).id,c=OV(p,m,s,o,i,a),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=Zc(e,c);e.wasm._free(g);let y=e.makeOutput([f],"int32",d),x=e.makeOutput([f],"float32",h);return[y,x]}var zV={kernelName:ya,backendName:"wasm",setupFunc:Cce,kernelFunc:vce};var Sce=!1,GV=At(ga,Sce,"bool");var UV;function wce(r){UV=r.wasm.cwrap(xa,null,["number","number","number","number","number"])}function _ce(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:i,offValue:a}=n,u=t.makeOutput([...o.shape,s],"int32"),l=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(o.dataId).id;return UV(m,s,i,a,l),u}var WV={kernelName:xa,backendName:"wasm",setupFunc:wce,kernelFunc:_ce};function Ace(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var KV={kernelName:xs,backendName:"wasm",kernelFunc:Ace};function Nce(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return tT({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(p=>{let m=tT({inputs:{input:p},backend:t,attrs:{dim:o}});return a.push(m),m}),l=LN({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(p=>t.disposeData(p.dataId)),l}var VV={kernelName:Ts,backendName:"wasm",kernelFunc:Nce};var jV;function Dce(r){jV=r.wasm.cwrap(Lo,null,["number","array","number","number","array","array","number","number"])}function Pce(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(b.sizeFromShape(e.shape)===0)return BN({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let i=t.dataIdMap.get(e.dataId).id,a=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(a.dataId).id,p=new Uint8Array(new Int32Array(e.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return jV(i,p,e.shape.length,et[e.dtype],d,f,o,l),a}var rT={kernelName:Lo,backendName:"wasm",kernelFunc:Pce,setupFunc:Dce};var Mce=!1,HV=At(Bo,Mce);var qV;function Ece(r){qV=r.wasm.cwrap($o,null,["number","number","number"])}function Rce(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,a=s,u=n,l=u;u.dtype!=="float32"&&(l=Nu({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),a=t.dataIdMap.get(l.dataId).id);let p=t.makeOutput(n.shape,"float32"),m=t.dataIdMap.get(p.dataId).id;return qV(a,i,m),u.dtype!=="float32"&&t.disposeData(l.dataId),p}var XV={kernelName:$o,backendName:"wasm",setupFunc:Ece,kernelFunc:Rce};var YV;function Fce(r){YV=r.wasm.cwrap(Ta,null,["number","number","number","number"])}function Lce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(i,o,e),f=m;if(d){let T=e.dataIdMap.get(p.dataId).id;T!==a&&(l=p,u=T,f=I.getInnerMostAxes(f.length,l.shape.length))}I.assertAxesAreInnerMostDims("prod",f,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,f),y=b.sizeFromShape(g),x=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;YV(u,y,et[x.dtype],T)}if(d&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var QV={kernelName:Ta,backendName:"wasm",setupFunc:Fce,kernelFunc:Lce};var Bce=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=wp(n,o,s,i),u=e.makeOutput([a.length],i);return e.typedArrayFromHeap(u).set(a),u},ZV={kernelName:ni,backendName:"wasm",kernelFunc:Bce};var $ce=!0,JV=At(xo,$ce);var e4=dt(Oo);var t4=dt(Go);var r4;function Oce(r){r4=r.wasm.cwrap(zo,null,["number","number","number","number","number","number","number","number","number","number"])}function zce(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,[p,m,c,d]=o.shape,f=[p,u,l,d],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=Nu({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let y=h.id,x=e.makeOutput(f,"float32");if(b.sizeFromShape(o.shape)===0)return x;let T=e.dataIdMap.get(x.dataId).id;return r4(y,p,m,c,d,u,l,s?1:0,i?1:0,T),g!=null&&e.disposeData(g.dataId),x}var n4={kernelName:zo,backendName:"wasm",setupFunc:Oce,kernelFunc:zce};var o4;function Gce(r){o4=r.wasm.cwrap(ka,null,["number","array","number","array","number","number"])}function Uce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,i=b.parseAxisParam(s,o.shape);if(o.shape.length===0)return Vp({inputs:{x:o},backend:t});let a=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(a.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);o4(u,p,i.length,m,o.shape.length,l);let c=gr({inputs:{x:a},attrs:{shape:o.shape},backend:t});return t.disposeData(a.dataId),c}var s4={kernelName:ka,backendName:"wasm",kernelFunc:Uce,setupFunc:Gce};var a4;function Wce(r){a4=r.wasm.cwrap(Na,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Kce(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:i,center:a}=n,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(u.dataId).id,[m,c,d,f]=o.shape,[h,g]=I.getImageCenter(a,c,d),y=i===0,x=255,T=typeof i=="number"?[i,i,i,y?0:x]:[...i,x],k=new Uint8Array(new Int32Array(T).buffer);return a4(l,m,c,d,f,s,h,g,k,T.length,p),u}var i4={kernelName:Na,backendName:"wasm",kernelFunc:Kce,setupFunc:Wce};var u4=dt(Ia);var l4=dt(Uo);var p4;function Vce(r){p4=r.wasm.cwrap(Ca,null,["number","number","number","number","number","number","array","number","number"])}function jce(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:i}=n,a=e.makeOutput(i,s.dtype);if(b.sizeFromShape(i)===0)return a;let{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=Ad.calculateShapes(s,o,i),f=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(m).buffer),x=e.dataIdMap.get(a.dataId).id;return p4(f,g,et[s.dtype],u,l,p,y,c,x),a}var m4={kernelName:Ca,backendName:"wasm",setupFunc:Vce,kernelFunc:jce};var c4;function Hce(r){c4=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function qce(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(l.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:b.sizeFromShape(o.shape.slice(1));return c4(i,a,u,d,p),l}var d4={kernelName:Is,backendName:"wasm",kernelFunc:qce,setupFunc:Hce};var f4;function Xce(r){f4=r.wasm.cwrap(Ko,null,["number","number"])}function Yce(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return b.sizeFromShape(o.shape)===0||f4(n,s),o}var h4={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Xce,kernelFunc:Yce};var g4=dt(Wo);var b4;function Qce(r){b4=r.wasm.cwrap(Ho,null,["number","number","number","number"])}function Zce(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),i=e.dataIdMap.get(s.dataId).id,a=t.shape[n],u=b.sizeFromShape(t.shape)/a;return b.sizeFromShape(s.shape)===0||b4(o,i,a,u),s}var y4={kernelName:Ho,backendName:"wasm",setupFunc:Qce,kernelFunc:Zce};function Jce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n,a=b.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let A=1+s.length;A<o.shape.length;++A)u.push([0,0]);let l=rT.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(l.shape,s,a,!1),m=I.getPermuted(p.length,s.length,!1),c=I.getReshapedPermuted(l.shape,s,a,!1),h=gr({inputs:{x:l},backend:t,attrs:{shape:p}}),x=_i({inputs:{x:h},backend:t,attrs:{perm:m}}),C=gr({inputs:{x},backend:t,attrs:{shape:c}});return t.disposeData(l.dataId),t.disposeData(h.dataId),t.disposeData(x.dataId),C}var x4={kernelName:vs,backendName:"wasm",kernelFunc:Jce};var T4;function ede(r){T4=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function tde(r){let{backend:e,inputs:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=t,a=n.shape[0],u=n.shape[1],l=e.readSync(s.dataId)[0],p=[a+l,u],m=e.dataIdMap.get(n.dataId).id,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(i.dataId).id,f=e.makeOutput(p,n.dtype),h=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(p.slice(0,1),o.dtype),y=e.dataIdMap.get(g.dataId).id,x=e.makeOutput([l],"bool"),T=e.dataIdMap.get(x.dataId).id,k=e.makeOutput([a],n.dtype),C=e.dataIdMap.get(k.dataId).id,A=e.makeOutput([4],"int32"),M=e.dataIdMap.get(A.dataId).id,D=T4(m,c,et[o.dtype],a,l,u,d,h,y,T,C,M),R=e.readSync(A.dataId),B;switch(R[0]){case 1:{B=I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{B=I.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:B=I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:B=""}if(e.disposeData(A.dataId),B)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(k.dataId),new Error(B);let U=f,W=g;return D!==p[0]&&(U=ra({inputs:{x:f},attrs:{begin:0,size:[D,u]},backend:e}),W=ra({inputs:{x:g},attrs:{begin:0,size:D},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[U,W,x,k]}var k4={kernelName:ju,backendName:"wasm",setupFunc:ede,kernelFunc:tde};var I4;function rde(r){I4=r.wasm.cwrap(Ji,null,["number","number","number","number","number","number","number"])}function nde(r){let{backend:e,inputs:t}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(s.dataId).id,l=n.shape[0],p=b.sizeFromShape(s.shape),m=e.makeOutput([l,p],n.dtype),c=e.dataIdMap.get(m.dataId).id,d=e.makeOutput([p],s.dtype),f=e.dataIdMap.get(d.dataId).id,h=e.makeOutput([3],"int32"),g=e.dataIdMap.get(h.dataId).id;I4(i,a,u,l,c,f,g);let y=e.readSync(h.dataId),x;switch(y[0]){case 0:{x=I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{x=I.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:x=I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let T=Array.from(e.readSync(o.dataId)),k=Array.from(e.readSync(d.dataId));x=I.getSparseReshapeInputOutputMultipleErrorMessage(T,k);break}case 4:{let T=Array.from(e.readSync(o.dataId)),k=Array.from(e.readSync(d.dataId));x=I.getSparseReshapeInputOutputMismatchErrorMessage(T,k);break}default:x=""}if(e.disposeData(h.dataId),x)throw e.disposeData(m.dataId),e.disposeData(d.dataId),new Error(x);return[m,d]}var C4={kernelName:Ji,backendName:"wasm",setupFunc:rde,kernelFunc:nde};var v4;function nT(r){v4=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function oT(r,e){let{backend:t,inputs:n}=r,{data:o,indices:s,segmentIds:i}=n,a=s.shape[0],u=t.readSync(i.dataId,a-1,a)[0],p=a>0?u+1:0;if(p<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=p;let c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,h=t.makeOutput(m,o.dtype),g=t.dataIdMap.get(h.dataId).id,y=t.makeOutput([4],"int32"),x=t.dataIdMap.get(y.dataId).id;v4(c,et[o.dtype],o.shape[0],d,f,g,x,e,0);let T=t.readSync(y.dataId),k;switch(T[0]){case 0:{k=I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{k=I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:k=I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T[1],T[2]);break;case 3:k=I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(T[1],T[2],T[3]);break;default:k=""}if(t.disposeData(y.dataId),k)throw t.disposeData(h.dataId),new Error(k);return h}function ode(r){return oT(r,!0)}var S4={kernelName:Hu,backendName:"wasm",setupFunc:nT,kernelFunc:ode};function sde(r){return oT(r,!1)}var w4={kernelName:qu,backendName:"wasm",setupFunc:nT,kernelFunc:sde};function ade(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=t,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[a]=m;let d=ra({inputs:{x:o},attrs:{begin:l,size:c},backend:n});return l[a]+=m,d})}var _4={kernelName:Ss,backendName:"wasm",kernelFunc:ade};var A4=dt(Vo);var N4=dt(si);var ide=!0,D4=At(qo,ide);var P4;function ude(r){P4=r.wasm.cwrap(As,null,["number","number","number","number"])}function lde(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,i=e.dataIdMap.get(s.dataId).id,a=e.makeOutput(s.shape,s.dtype),u=e.dataIdMap.get(a.dataId).id;return P4(i,o,et[s.dtype],u),a}var M4={kernelName:As,backendName:"wasm",setupFunc:ude,kernelFunc:lde};var E4;function pde(r){E4=r.wasm.cwrap(Sa,null,["number","array","number","array","array","array","array","array","number","number"])}function mde(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:x,end:T,strides:k}=Tt.sliceInfo(o.shape,s,i,a,u,l,p,m,c),C;if(h)C=gr({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=Tt.computeOutShape(x,T,k),M=ra({inputs:{x:o},backend:e,attrs:{begin:x,size:A}});C=gr({inputs:{x:M},backend:e,attrs:{shape:f}}),e.disposeData(M.dataId)}else{let A=e.makeOutput(d,"float32"),M=e.dataIdMap.get(o.dataId).id,D=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),B=new Uint8Array(new Int32Array(T).buffer),U=new Uint8Array(new Int32Array(k).buffer),W=new Uint8Array(new Int32Array(d).buffer),K=new Uint8Array(new Int32Array(b.computeStrides(d)).buffer),j=e.dataIdMap.get(A.dataId).id;E4(M,D,o.shape.length,R,B,U,W,K,d.length,j),C=gr({inputs:{x:A},backend:e,attrs:{shape:f}}),e.disposeData(A.dataId)}return C}var R4={kernelName:Sa,backendName:"wasm",setupFunc:pde,kernelFunc:mde};var cde=!0,F4=At(Xo,cde);var L4;function dde(r){L4=r.wasm.cwrap(jo,null,["number","number","number","number"])}function fde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(i,o,e),f=m;if(d){let T=e.dataIdMap.get(p.dataId).id;T!==a&&(l=p,u=T,f=I.getInnerMostAxes(f.length,l.shape.length))}I.assertAxesAreInnerMostDims("sum",f,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,f),y=b.sizeFromShape(g),x=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;L4(u,y,et[x.dtype],T)}if(d&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var B4={kernelName:jo,backendName:"wasm",setupFunc:dde,kernelFunc:fde};var $4=dt(wa);var O4=dt(Yo);var z4;function hde(r){z4=r.wasm.cwrap(Nn,null,["number","array","number","array","number","number"])}function gde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:i}=n,a=new Array(o.shape.length);for(let c=0;c<a.length;c++)a[c]=o.shape[c]*i[c];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(a).buffer),p=t.makeOutput(a,o.dtype),m=t.dataIdMap.get(p.dataId).id;return z4(s,u,o.shape.length,l,a.length,et[p.dtype],m),p}var G4={kernelName:Nn,backendName:"wasm",setupFunc:hde,kernelFunc:gde};var U4;function bde(r){U4=r.wasm.cwrap(_a,null,["number","array","number","number","number","bool","number","number"])}var yde=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,i=e.dataIdMap.get(n.dataId).id,a=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=e.makeOutput(u,n.dtype),p=e.dataIdMap.get(l.dataId).id,m=e.makeOutput(u,"int32"),c=e.dataIdMap.get(m.dataId).id;return U4(i,a,n.shape.length,et[n.dtype],o,s,p,c),[l,m]},W4={kernelName:_a,backendName:"wasm",setupFunc:bde,kernelFunc:yde};var K4;function xde(r){K4=r.wasm.cwrap(Aa,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Tde(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],y=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),x=e.makeOutput(g,o.dtype),T=e.dataIdMap.get(x.dataId).id,C=e.dataIdMap.get(o.dataId).id,M=e.dataIdMap.get(s.dataId).id,D=i==="nearest"?1:2,R;switch(a){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return K4(C,M,s.shape[0]>1,p,f,h,d,c,m,y,o.shape.length-1,D,R,u,T),x}var V4={kernelName:Aa,backendName:"wasm",setupFunc:xde,kernelFunc:Tde};function kde(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape[s],a=o.shape.length,u=new Array(a-1),l=0;for(let d=0;d<a;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(i),m=new Array(a).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<p.length;d++)m[s]=d,p[d]=ra({inputs:{x:o},attrs:{begin:m,size:c},backend:t});return p.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:u}))}var j4={kernelName:ws,backendName:"wasm",kernelFunc:kde};function Ide(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var H4={kernelName:_s,backendName:"wasm",kernelFunc:Ide};var Cde=[aK,iK,uK,pK,hK,bK,xK,kK,vK,wK,_K,AK,DK,PK,EK,FK,LK,BK,zK,UK,KK,jK,HK,qK,XK,YK,QK,JK,eV,tV,nV,sV,iV,lV,mV,cV,dV,mK,hV,gV,bV,yV,xV,kV,IV,vV,wV,AV,NV,MV,EV,RV,LV,$V,zV,GV,WV,KV,VV,rT,HV,XV,QV,ZV,JV,e4,t4,IK,n4,s4,i4,u4,l4,m4,d4,h4,g4,SK,y4,x4,k4,C4,S4,w4,_4,A4,N4,D4,M4,R4,F4,B4,$4,O4,G4,W4,V4,dK,j4,H4];for(let r of Cde)eu(r);var $N=$();$N.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));$N.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if($N.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var WN=_l(Q4());var Z4='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}';var ej=_l(J4());var iT=class extends cs{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(nj),VN=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Za(this,Qn())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}move(e,t,n,o,s){let i=this.dataIdNextNumber++;if(o==="string"){let p=t;this.dataIdMap.set(e,{id:i,stringBytes:p,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let a=b.sizeFromShape(n),u=a*b.bytesPerElement(o),l=this.wasm._malloc(u);this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(i,a,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:o,dtype:s,shape:i,stringBytes:a}=this.dataIdMap.get(e);if(s==="string")return(t==null||t===0)&&(n==null||n>=a.length)?a:a.slice(t,n);t=t||0,n=n||b.sizeFromShape(i);let u=b.bytesPerElement(s),l=this.wasm.HEAPU8.slice(o+t*u,o+n*u);return Sde(l.buffer,s)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=b.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),i=b.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,i);case"int32":return new Int32Array(o,s,i);case"bool":return new Uint8Array(o,s,i);default:throw new Error(`Unknown dtype ${t}`)}}};function vde(r){return(e,t)=>(b.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function tj(r,e,t){if(uT!=null)return uT;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Pg!=null&&Pg[n]!=null?Pg[n]:t+n}async function rj(){let[r,e]=await Promise.all([$().getAsync("WASM_HAS_SIMD_SUPPORT"),$().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(a,u)=>{if(a.endsWith(".worker.js")){let l=Z4,p=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(p)}return a.endsWith(".wasm")?tj(r,e,Dg??u):u+a},KN&&(o.instantiateWasm=vde(tj(r,e,Dg??"")));let s=!1;o.onAbort=()=>{if(s||Mg)return;Mg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let i;e&&r&&uT==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+WN.default.toString()],{type:"text/javascript"}),i=(0,WN.default)(o)):i=(0,ej.default)(o),i.then(a=>{s=!0,Mg=!1;let u=null;a.tfjs={init:a.cwrap("init",null,[]),initWithThreadsCount:a.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:a.cwrap("get_threads_count","number",[]),registerTensor:a.cwrap("register_tensor",null,["number","number","number"]),disposeData:a.cwrap("dispose_data",u,["number"]),dispose:a.cwrap("dispose",u,[])},t({wasm:a})})})}function Sde(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var wde=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],uT=null,Dg=null,Pg={},Mg=!1,KN=!1;function _de(r,e=!1){if(kI("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Mg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");uT=r,KN=e}function Ade(r,e=!1){if(Mg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")Dg=r;else{Pg=r;let t=wde.filter(n=>Pg[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}KN=e}var nj=-1,VN=-1;function Nde(r){nj=r}function Dde(){if(VN===-1)throw new Error("WASM backend not initialized.");return VN}var Pde="0.0.0";var Mde=2;rl("wasm",async()=>{let{wasm:r}=await rj();return new iT(r)},Mde);var kl="3.13.0-20220120",s6r={tfjs:kl,"tfjs-core":kl,"tfjs-data":kl,"tfjs-layers":kl,"tfjs-converter":kl,"tfjs-backend-cpu":kl,"tfjs-backend-webgl":kl,"tfjs-backend-wasm":kl};export{ds as Abs,Mi as Acos,Ei as Acosh,ip as AdadeltaOptimizer,up as AdagradOptimizer,lp as AdamOptimizer,pp as AdamaxOptimizer,An as Add,uo as AddN,Ri as All,Fi as Any,lo as ArgMax,ti as ArgMin,Li as Asin,Bi as Asinh,$i as Atan,zi as Atan2,Oi as Atanh,po as AvgPool,Lu as AvgPool3D,um as AvgPool3DGrad,im as AvgPoolGrad,iT as BackendWasm,mo as BatchMatMul,fs as BatchToSpaceND,lm as Bincount,pm as BroadcastArgs,cD as BroadcastTo,Bv as Callback,VC as CallbackList,Vn as Cast,co as Ceil,jn as ClipByValue,Bu as Complex,$u as ComplexAbs,hs as Concat,fo as Conv2D,mm as Conv2DBackpropFilter,ho as Conv2DBackpropInput,Ou as Conv3D,cm as Conv3DBackpropFilterV2,dm as Conv3DBackpropInputV2,go as Cos,bo as Cosh,aa as CropAndResize,sa as Cumsum,HC as CustomCallback,Za as DataStorage,fm as DenseBincount,ia as DepthToSpace,yo as DepthwiseConv2dNative,hm as DepthwiseConv2dNativeBackpropFilter,gm as DepthwiseConv2dNativeBackpropInput,bm as Diag,zu as Dilation2D,yd as Dilation2DBackpropFilter,bd as Dilation2DBackpropInput,zk as ENV,$v as EarlyStopping,Gu as Einsum,To as Elu,ym as EluGrad,ub as Environment,ua as Equal,Gi as Erf,ko as Exp,gs as ExpandDims,la as Expm1,xm as FFT,ri as Fill,pa as FlipLeftRight,Io as Floor,Co as FloorDiv,Pl as FromPixels,vo as FusedBatchNorm,Ds as FusedConv2D,Ps as FusedDepthwiseConv2D,jc as GPGPUContext,ma as GatherNd,bs as GatherV2,fS as GraphModel,ca as Greater,So as GreaterEqual,jC as History,Tm as IFFT,Hn as Identity,Uu as Imag,Et as InputSpec,Ui as IsFinite,Wi as IsInf,Ki as IsNan,cs as KernelBackend,Wu as LRN,Im as LRNGrad,py as LayerVariable,os as LayersModel,wo as LeakyRelu,da as Less,fa as LessEqual,km as LinSpace,_o as Log,Vi as Log1p,dD as LogSoftmax,ha as LogicalAnd,ji as LogicalNot,Dl as LogicalOr,Kh as MathBackendCPU,ag as MathBackendWebGL,Ao as Max,Do as MaxPool,Ku as MaxPool3D,vm as MaxPool3DGrad,Cm as MaxPoolGrad,Sm as MaxPoolWithArgmax,No as Maximum,Po as Mean,Mo as Min,Eo as Minimum,Ro as MirrorPad,Hi as Mod,mp as MomentumOptimizer,wm as Multinomial,Fo as Multiply,ys as Neg,ba as NonMaxSuppressionV3,qi as NonMaxSuppressionV4,ya as NonMaxSuppressionV5,ga as NotEqual,HD as OP_SCOPE_SUFFIX,xa as OneHot,xs as OnesLike,tn as Optimizer,fi as OptimizerConstructors,Ts as Pack,Lo as PadV2,$de as Pool,Bo as Pow,$o as Prelu,Ta as Prod,cp as RMSPropOptimizer,js as RNN,ni as Range,OD as Rank,Vu as Real,xo as RealDiv,Xi as Reciprocal,ir as Reduction,Oo as Relu,Go as Relu6,ks as Reshape,zo as ResizeBilinear,Am as ResizeBilinearGrad,oi as ResizeNearestNeighbor,_m as ResizeNearestNeighborGrad,ka as Reverse,Na as RotateWithOffset,Ia as Round,Uo as Rsqrt,gu as SGDOptimizer,Ca as ScatterNd,Is as Select,Yi as Selu,hc as Sequential,Ko as Sigmoid,Qi as Sign,Wo as Sin,va as Sinh,Cs as Slice,Ho as Softmax,Zi as Softplus,vs as SpaceToBatchND,ju as SparseFillEmptyRows,Ji as SparseReshape,Hu as SparseSegmentMean,qu as SparseSegmentSum,Xu as SparseToDense,Ss as SplitV,Vo as Sqrt,si as Square,qo as SquaredDifference,As as Step,Sa as StridedSlice,Yu as StringNGrams,Nm as StringSplit,Dm as StringToHashBucketFast,Xo as Sub,jo as Sum,yn as SymbolicTensor,wa as Tan,Yo as Tanh,Ye as Tensor,yt as TensorBuffer,Nn as Tile,_a as TopK,Aa as Transform,Qo as Transpose,Pm as Unique,ws as Unpack,Qu as UnsortedSegmentSum,el as Variable,_s as ZerosLike,Ns as _FusedMatMul,$t as abs,II as acos,CI as acosh,X as add,vI as addN,Pd as all,Um as any,uu as argMax,SI as argMin,wI as asin,_I as asinh,AI as atan,NI as atan2,DI as atanh,Gl as avgPool,Md as avgPool3d,V0 as backend,I as backend_util,_6 as basicLSTMCell,li as batchNorm,RI as batchNorm2d,FI as batchNorm3d,LI as batchNorm4d,Ul as batchToSpaceND,Ed as bincount,ELe as booleanMaskAsync,BI as broadcastArgs,Wl as broadcastTo,Nr as broadcast_util,vb as browser,Ce as buffer,oJ as callbacks,J as cast,$I as ceil,Br as clipByValue,Dn as clone,Yn as complex,lt as concat,OI as concat1d,zI as concat2d,GI as concat3d,UI as concat4d,uM as constraints,Rd as conv1d,Zn as conv2d,Fd as conv2dTranspose,Ld as conv3d,WI as conv3dTranspose,Vde as copyRegisteredKernels,Kl as cos,Bd as cosh,Gb as cosineWindow,$d as cumsum,cn as customGrad,NR as data,KI as denseBincount,kI as deprecationWarn,VI as depthToSpace,pu as depthwiseConv2d,uJ as deregisterOp,ii as device_util,r5 as diag,jI as dilation2d,wye as disableDeprecationWarnings,Ee as dispose,_ye as disposeVariables,me as div,HI as divNoNan,l5 as dot,b2 as dropout,qI as einsum,mu as elu,Sye as enableDebugMode,vye as enableProdMode,y2 as enclosingPowerOfTwo,Qn as engine,$ as env,Vr as equal,XI as erf,cr as exp,Dr as expandDims,YI as expm1,Vm as eye,ep as fft,Ea as fill,Eye as findBackend,Rye as findBackendFactory,cu as floor,Dd as floorDiv,J$ as forceHalfFloat,Bs as fused,pi as gather,h2 as gatherND,Sb as gather_util,Pye as getBackend,Wk as getGradient,Td as getKernel,lb as getKernelsForBackend,Dde as getThreadsCount,Zw as gpgpu_util,R5 as grad,F5 as grads,nr as greater,es as greaterEqual,ol as ifft,Vl as imag,Rn as image,GBe as inTopKAsync,AM as initializers,rv as input,Kr as io,ef as irfft,v5 as isFinite,w5 as isInf,QI as isNaN,Vt as keep,Tr as kernel_impls,mE as layers,jl as leakyRelu,Od as less,ts as lessEqual,s1 as linalg,ZI as linspace,tee as loadGraphModel,gZ as loadLayersModel,JI as localResponseNormalization,$r as log,Hl as log1p,G5 as logSigmoid,zd as logSoftmax,oC as logSumExp,Hr as logicalAnd,ql as logicalNot,Ud as logicalOr,J5 as logicalXor,oVe as losses,Ve as matMul,_0 as math,en as max,Xl as maxPool,Wd as maxPool3d,sC as maxPoolWithArgmax,Jn as maximum,Ft as mean,Nd as memory,s8 as meshgrid,cE as metrics,jm as min,du as minimum,aC as mirrorPad,iC as mod,fZ as model,dE as models,Hm as moments,nBe as movingAverage,F as mul,d8 as multiRNNCell,uC as multinomial,Ze as neg,_C as nextFrame,Ob as norm,ci as notEqual,au as oneHot,dr as ones,Pr as onesLike,_ as op,y8 as outerProduct,Mn as pad,k8 as pad1d,C8 as pad2d,S8 as pad3d,_8 as pad4d,M8 as pool,En as pow,Ql as prelu,mI as print,Kd as prod,Aye as profile,B8 as rand,V8 as randomGamma,Fb as randomNormal,Ra as randomUniform,fu as range,Dye as ready,nl as real,bC as reciprocal,rl as registerBackend,bZ as registerCallbackConstructor,hD as registerGradient,eu as registerKernel,iJ as registerOp,fE as regularizers,qr as relu,jd as relu6,Mye as removeBackend,L as reshape,xr as reverse,eX as reverse1d,rX as reverse2d,oX as reverse3d,aX as reverse4d,tp as rfft,Hd as round,qd as rsqrt,ce as scalar,d2 as scatterND,Ad as scatter_util,Xd as selu,yC as separableConv2d,hZ as sequential,re as serialization,Xq as setBackend,Fye as setPlatform,Nde as setThreadsCount,_de as setWasmPath,Ade as setWasmPaths,iw as setWebGLContext,xC as setdiff1dAsync,Mc as shared,mn as sigmoid,TC as sign,PKe as signal,Yd as sin,Qd as sinh,ze as slice,Zd as slice1d,Lb as slice2d,Jd as slice3d,Xm as slice4d,Tt as slice_util,Jl as softmax,mi as softplus,Yl as spaceToBatchND,nf as sparse,zb as sparseToDense,wKe as spectral,Cr as split,Lt as sqrt,qe as square,tf as squaredDifference,dn as squeeze,fr as stack,hu as step,kC as stridedSlice,Xb as string,pe as sub,he as sum,tu as sumOutType,IC as tan,lu as tanh,Fr as tensor,zt as tensor1d,di as tensor2d,hI as tensor3d,MX as tensor4d,EX as tensor5d,RX as tensor6d,Fs as tensor_util,K0 as test_util,G as tidy,jr as tile,Nye as time,CC as topk,dp as train,He as transpose,rp as truncatedNormal,Bb as unique,Kde as unregisterGradient,Wde as unregisterKernel,vC as unsortedSegmentSum,Or as unstack,Kt as upcastType,b as util,L5 as valueAndGrad,B5 as valueAndGrads,SC as variable,Pb as variableGrads,s6r as version,ree as version_converter,qq as version_core,Dee as version_cpu,Nf as version_layers,Pde as version_wasm,yoe as version_webgl,iHt as webgl,$c as webgl_util,oK as webgpu,Ot as where,rf as whereAsync,xt as zeros,Ne as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
