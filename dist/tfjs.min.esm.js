var kj=Object.create;var Vg=Object.defineProperty;var Ij=Object.getOwnPropertyDescriptor;var Cj=Object.getOwnPropertyNames;var vj=Object.getPrototypeOf,wj=Object.prototype.hasOwnProperty;var zN=r=>Vg(r,"__esModule",{value:!0});var rs=(r=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(r,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):r)(function(r){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});var vn=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Ye=(r,e)=>{zN(r);for(var t in e)Vg(r,t,{get:e[t],enumerable:!0})},Sj=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Cj(e))!wj.call(r,n)&&n!=="default"&&Vg(r,n,{get:()=>e[n],enumerable:!(t=Ij(e,n))||t.enumerable});return r},kl=r=>Sj(zN(Vg(r!=null?kj(vj(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var aD=vn((bme,sD)=>{sD.exports=Jt;var vs=null;try{vs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Jt(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Jt.prototype.__isLong__;Object.defineProperty(Jt.prototype,"__isLong__",{value:!0});function Kn(r){return(r&&r.__isLong__)===!0}Jt.isLong=Kn;var YN={},QN={};function Sl(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=QN[r],n)?n:(t=er(r,(r|0)<0?-1:0,!0),o&&(QN[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=YN[r],n)?n:(t=er(r,r<0?-1:0,!1),o&&(YN[r]=t),t))}Jt.fromInt=Sl;function ws(r,e){if(isNaN(r))return e?_l:Ss;if(e){if(r<0)return _l;if(r>=JN)return oD}else{if(r<=-eD)return Vn;if(r+1>=eD)return nD}return r<0?ws(-r,e).neg():er(r%Sc|0,r/Sc|0,e)}Jt.fromNumber=ws;function er(r,e,t){return new Jt(r,e,t)}Jt.fromBits=er;var Yg=Math.pow;function wk(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return Ss;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return wk(r.substring(1),e,t).neg();for(var o=ws(Yg(t,8)),s=Ss,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),u=parseInt(r.substring(a,a+i),t);if(i<8){var l=ws(Yg(t,i));s=s.mul(l).add(ws(u))}else s=s.mul(o),s=s.add(ws(u))}return s.unsigned=e,s}Jt.fromString=wk;function ka(r,e){return typeof r=="number"?ws(r,e):typeof r=="string"?wk(r,e):er(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Jt.fromValue=ka;var ZN=1<<16,Xj=1<<24,Sc=ZN*ZN,JN=Sc*Sc,eD=JN/2,tD=Sl(Xj),Ss=Sl(0);Jt.ZERO=Ss;var _l=Sl(0,!0);Jt.UZERO=_l;var _c=Sl(1);Jt.ONE=_c;var rD=Sl(1,!0);Jt.UONE=rD;var Sk=Sl(-1);Jt.NEG_ONE=Sk;var nD=er(4294967295|0,2147483647|0,!1);Jt.MAX_VALUE=nD;var oD=er(4294967295|0,4294967295|0,!0);Jt.MAX_UNSIGNED_VALUE=oD;var Vn=er(0,2147483648|0,!1);Jt.MIN_VALUE=Vn;var Ie=Jt.prototype;Ie.toInt=function(){return this.unsigned?this.low>>>0:this.low};Ie.toNumber=function(){return this.unsigned?(this.high>>>0)*Sc+(this.low>>>0):this.high*Sc+(this.low>>>0)};Ie.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Vn)){var t=ws(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=ws(Yg(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),l=a.sub(u.mul(s)).toInt()>>>0,p=l.toString(e);if(a=u,a.isZero())return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}};Ie.getHighBits=function(){return this.high};Ie.getHighBitsUnsigned=function(){return this.high>>>0};Ie.getLowBits=function(){return this.low};Ie.getLowBitsUnsigned=function(){return this.low>>>0};Ie.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Vn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};Ie.isZero=function(){return this.high===0&&this.low===0};Ie.eqz=Ie.isZero;Ie.isNegative=function(){return!this.unsigned&&this.high<0};Ie.isPositive=function(){return this.unsigned||this.high>=0};Ie.isOdd=function(){return(this.low&1)==1};Ie.isEven=function(){return(this.low&1)==0};Ie.equals=function(e){return Kn(e)||(e=ka(e)),this.unsigned!==e.unsigned&&this.high>>>31==1&&e.high>>>31==1?!1:this.high===e.high&&this.low===e.low};Ie.eq=Ie.equals;Ie.notEquals=function(e){return!this.eq(e)};Ie.neq=Ie.notEquals;Ie.ne=Ie.notEquals;Ie.lessThan=function(e){return this.comp(e)<0};Ie.lt=Ie.lessThan;Ie.lessThanOrEqual=function(e){return this.comp(e)<=0};Ie.lte=Ie.lessThanOrEqual;Ie.le=Ie.lessThanOrEqual;Ie.greaterThan=function(e){return this.comp(e)>0};Ie.gt=Ie.greaterThan;Ie.greaterThanOrEqual=function(e){return this.comp(e)>=0};Ie.gte=Ie.greaterThanOrEqual;Ie.ge=Ie.greaterThanOrEqual;Ie.compare=function(e){if(Kn(e)||(e=ka(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Ie.comp=Ie.compare;Ie.negate=function(){return!this.unsigned&&this.eq(Vn)?Vn:this.not().add(_c)};Ie.neg=Ie.negate;Ie.add=function(e){Kn(e)||(e=ka(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=e.high>>>16,i=e.high&65535,u=e.low>>>16,l=e.low&65535,p=0,c=0,m=0,f=0;return f+=s+l,m+=f>>>16,f&=65535,m+=o+u,c+=m>>>16,m&=65535,c+=n+i,p+=c>>>16,c&=65535,p+=t+a,p&=65535,er(m<<16|f,p<<16|c,this.unsigned)};Ie.subtract=function(e){return Kn(e)||(e=ka(e)),this.add(e.neg())};Ie.sub=Ie.subtract;Ie.multiply=function(e){if(this.isZero())return Ss;if(Kn(e)||(e=ka(e)),vs){var t=vs.mul(this.low,this.high,e.low,e.high);return er(t,vs.get_high(),this.unsigned)}if(e.isZero())return Ss;if(this.eq(Vn))return e.isOdd()?Vn:Ss;if(e.eq(Vn))return this.isOdd()?Vn:Ss;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(tD)&&e.lt(tD))return ws(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=e.high>>>16,u=e.high&65535,l=e.low>>>16,p=e.low&65535,c=0,m=0,f=0,d=0;return d+=a*p,f+=d>>>16,d&=65535,f+=s*p,m+=f>>>16,f&=65535,f+=a*l,m+=f>>>16,f&=65535,m+=o*p,c+=m>>>16,m&=65535,m+=s*l,c+=m>>>16,m&=65535,m+=a*u,c+=m>>>16,m&=65535,c+=n*p+o*l+s*u+a*i,c&=65535,er(f<<16|d,c<<16|m,this.unsigned)};Ie.mul=Ie.multiply;Ie.divide=function(e){if(Kn(e)||(e=ka(e)),e.isZero())throw Error("division by zero");if(vs){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?vs.div_u:vs.div_s)(this.low,this.high,e.low,e.high);return er(t,vs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?_l:Ss;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return _l;if(e.gt(this.shru(1)))return rD;s=_l}else{if(this.eq(Vn)){if(e.eq(_c)||e.eq(Sk))return Vn;if(e.eq(Vn))return _c;var a=this.shr(1);return n=a.div(e).shl(1),n.eq(Ss)?e.isNegative()?_c:Sk:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(Vn))return this.unsigned?_l:Ss;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=Ss}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),u=i<=48?1:Yg(2,i-48),l=ws(n),p=l.mul(e);p.isNegative()||p.gt(o);)n-=u,l=ws(n,this.unsigned),p=l.mul(e);l.isZero()&&(l=_c),s=s.add(l),o=o.sub(p)}return s};Ie.div=Ie.divide;Ie.modulo=function(e){if(Kn(e)||(e=ka(e)),vs){var t=(this.unsigned?vs.rem_u:vs.rem_s)(this.low,this.high,e.low,e.high);return er(t,vs.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Ie.mod=Ie.modulo;Ie.rem=Ie.modulo;Ie.not=function(){return er(~this.low,~this.high,this.unsigned)};Ie.and=function(e){return Kn(e)||(e=ka(e)),er(this.low&e.low,this.high&e.high,this.unsigned)};Ie.or=function(e){return Kn(e)||(e=ka(e)),er(this.low|e.low,this.high|e.high,this.unsigned)};Ie.xor=function(e){return Kn(e)||(e=ka(e)),er(this.low^e.low,this.high^e.high,this.unsigned)};Ie.shiftLeft=function(e){return Kn(e)&&(e=e.toInt()),(e&=63)==0?this:e<32?er(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):er(0,this.low<<e-32,this.unsigned)};Ie.shl=Ie.shiftLeft;Ie.shiftRight=function(e){return Kn(e)&&(e=e.toInt()),(e&=63)==0?this:e<32?er(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):er(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Ie.shr=Ie.shiftRight;Ie.shiftRightUnsigned=function(e){if(Kn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return er(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?er(t,0,this.unsigned):er(t>>>e-32,0,this.unsigned)};Ie.shru=Ie.shiftRightUnsigned;Ie.shr_u=Ie.shiftRightUnsigned;Ie.toSigned=function(){return this.unsigned?er(this.low,this.high,!1):this};Ie.toUnsigned=function(){return this.unsigned?this:er(this.low,this.high,!0)};Ie.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Ie.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Ie.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Jt.fromBytes=function(e,t,n){return n?Jt.fromBytesLE(e,t):Jt.fromBytesBE(e,t)};Jt.fromBytesLE=function(e,t){return new Jt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Jt.fromBytesBE=function(e,t){return new Jt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var KD=vn(()=>{});var VD=vn(()=>{});var _0=vn((S0,jI)=>{(function(r,e,t){function n(i){var u=this,l=a();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(i),u.s0<0&&(u.s0+=1),u.s1-=l(i),u.s1<0&&(u.s1+=1),u.s2-=l(i),u.s2<0&&(u.s2+=1),l=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function s(i,u){var l=new n(i),p=u&&u.state,c=l.next;return c.int32=function(){return l.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,p&&(typeof p=="object"&&o(p,l),c.state=function(){return o(l,{})}),c}function a(){var i=4022871197,u=function(l){l=String(l);for(var p=0;p<l.length;p++){i+=l.charCodeAt(p);var c=.02519603282416938*i;i=c>>>0,c-=i,c*=i,i=c>>>0,c-=i,i+=c*4294967296}return(i>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(S0,typeof jI=="object"&&jI,typeof define=="function"&&define)});var N0=vn((A0,HI)=>{(function(r,e,t){function n(a){var i=this,u="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var p=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^p^p>>>8},a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(A0,typeof HI=="object"&&HI,typeof define=="function"&&define)});var P0=vn((D0,qI)=>{(function(r,e,t){function n(a){var i=this,u="";i.next=function(){var p=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(p^p<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,l==u.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(D0,typeof qI=="object"&&qI,typeof define=="function"&&define)});var M0=vn((F0,XI)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var l=i.x,p=i.i,c,m,f;return c=l[p],c^=c>>>7,m=c^c<<24,c=l[p+1&7],m^=c^c>>>10,c=l[p+3&7],m^=c^c>>>3,c=l[p+4&7],m^=c^c<<7,c=l[p+7&7],c=c^c<<13,m^=c^c<<9,l[p]=m,i.i=p+1&7,m};function u(l,p){var c,m,f=[];if(p===(p|0))m=f[0]=p;else for(p=""+p,c=0;c<p.length;++c)f[c&7]=f[c&7]<<15^p.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?m=f[7]=-1:m=f[c],l.x=f,l.i=0,c=256;c>0;--c)l.next()}u(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(l.x&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(F0,typeof XI=="object"&&XI,typeof define=="function"&&define)});var R0=vn((E0,YI)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var l=i.w,p=i.X,c=i.i,m,f;return i.w=l=l+1640531527|0,f=p[c+34&127],m=p[c=c+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=p[c]=f^m,i.i=c,f+(l^l>>>16)|0};function u(l,p){var c,m,f,d,h,g=[],y=128;for(p===(p|0)?(m=p,p=null):(p=p+"\0",m=0,y=Math.max(y,p.length)),f=0,d=-32;d<y;++d)p&&(m^=p.charCodeAt((d+32)%p.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,c=g[d&127]^=m+h,f=c==0?f+1:0);for(f>=128&&(g[(p&&p.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],c=g[f=f+1&127],m^=m<<13,c^=c<<17,m^=m>>>15,c^=c>>>12,g[f]=m^c;l.w=h,l.X=g,l.i=f}u(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(l.X&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(E0,typeof YI=="object"&&YI,typeof define=="function"&&define)});var $0=vn((L0,QI)=>{(function(r,e,t){function n(a){var i=this,u="";i.next=function(){var p=i.b,c=i.c,m=i.d,f=i.a;return p=p<<25^p>>>7^c,c=c-m|0,m=m<<24^m>>>8^f,f=f-p|0,i.b=p=p<<20^p>>>12^c,i.c=c=c-m|0,i.d=m<<16^c>>>16^f,i.a=f-p|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):u+=a;for(var l=0;l<u.length+20;l++)i.b^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(L0,typeof QI=="object"&&QI,typeof define=="function"&&define)});var B0=vn(()=>{});var z0=vn((O0,Tb)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),u=t.pow(2,s),l=u*2,p=n-1,c;function m(x,k,v){var N=[];k=k==!0?{entropy:!0}:k||{};var A=g(h(k.entropy?[x,T(e)]:x??y(),3),N),F=new f(N),E=function(){for(var $=F.g(o),U=i,K=0;$<u;)$=($+K)*n,U*=n,K=F.g(1);for(;$>=l;)$/=2,U/=2,K>>>=1;return($+K)/U};return E.int32=function(){return F.g(4)|0},E.quick=function(){return F.g(4)/4294967296},E.double=E,g(T(F.S),e),(k.pass||v||function($,U,K,B){return B&&(B.S&&d(B,F),$.state=function(){return d(F,{})}),K?(t[a]=$,U):$})(E,A,"global"in k?k.global:this==t,k.state)}function f(x){var k,v=x.length,N=this,A=0,F=N.i=N.j=0,E=N.S=[];for(v||(x=[v++]);A<n;)E[A]=A++;for(A=0;A<n;A++)E[A]=E[F=p&F+x[A%v]+(k=E[A])],E[F]=k;(N.g=function($){for(var U,K=0,B=N.i,V=N.j,j=N.S;$--;)U=j[B=p&B+1],K=K*n+j[p&(j[B]=j[V=p&V+U])+(j[V]=U)];return N.i=B,N.j=V,K})(n)}function d(x,k){return k.i=x.i,k.j=x.j,k.S=x.S.slice(),k}function h(x,k){var v=[],N=typeof x,A;if(k&&N=="object")for(A in x)try{v.push(h(x[A],k-1))}catch{}return v.length?v:N=="string"?x:x+"\0"}function g(x,k){for(var v=x+"",N,A=0;A<v.length;)k[p&A]=p&(N^=k[p&A]*19)+v.charCodeAt(A++);return T(k)}function y(){try{var x;return c&&(x=c.randomBytes)?x=x(n):(x=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(x)),T(x)}catch{var k=r.navigator,v=k&&k.plugins;return[+new Date,r,v,r.screen,T(e)]}}function T(x){return String.fromCharCode.apply(0,x)}if(g(t.random(),e),typeof Tb=="object"&&Tb.exports){Tb.exports=m;try{c=B0()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):t["seed"+a]=m})(typeof self!="undefined"?self:O0,[],Math)});var Mf=vn((N1e,G0)=>{var s8=_0(),a8=N0(),i8=P0(),u8=M0(),l8=R0(),p8=$0(),jl=z0();jl.alea=s8;jl.xor128=a8;jl.xorwow=i8;jl.xorshift7=u8;jl.xor4096=l8;jl.tychei=p8;G0.exports=jl});var Zv=vn(()=>{});var b4=vn((Ux,kN)=>{var TN=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};function t(){return re.buffer!=Je&&Pr(re.buffer),Ot}function n(){return re.buffer!=Je&&Pr(re.buffer),qt}function o(){return re.buffer!=Je&&Pr(re.buffer),Jn}function s(){return re.buffer!=Je&&Pr(re.buffer),zr}function a(){return re.buffer!=Je&&Pr(re.buffer),nn}var i=typeof e!="undefined"?e:{},u,l;i.ready=new Promise(function(S,M){u=S,l=M});var p={},c;for(c in i)i.hasOwnProperty(c)&&(p[c]=i[c]);var m=[],f="./this.program",d=function(S,M){throw M},h=!1,g=!1,y=!1,T=!1;h=typeof window=="object",g=typeof importScripts=="function",y=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=!h&&!y&&!g;var x=i.ENVIRONMENT_IS_PTHREAD||!1;x&&(Je=i.buffer);var k="";function v(S){return i.locateFile?i.locateFile(S,k):k+S}var N,A,F,E,$,U;if(y){g?k=rs("path").dirname(k)+"/":k=__dirname+"/",N=function(M,z){return $||($=rs("fs")),U||(U=rs("path")),M=U.normalize(M),$.readFileSync(M,z?null:"utf8")},F=function(M){var z=N(M,!0);return z.buffer||(z=new Uint8Array(z)),le(z.buffer),z},process.argv.length>1&&(f=process.argv[1].replace(/\\/g,"/")),m=process.argv.slice(2),process.on("uncaughtException",function(S){if(!(S instanceof ef))throw S}),process.on("unhandledRejection",xi),d=function(S){process.exit(S)},i.inspect=function(){return"[Emscripten Module object]"};var K;try{K=rs("worker_threads")}catch(S){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),S}global.Worker=K.Worker}else T?(typeof read!="undefined"&&(N=function(M){return read(M)}),F=function(M){var z;return typeof readbuffer=="function"?new Uint8Array(readbuffer(M)):(z=read(M,"binary"),le(typeof z=="object"),z)},typeof scriptArgs!="undefined"?m=scriptArgs:typeof arguments!="undefined"&&(m=arguments),typeof quit=="function"&&(d=function(S){quit(S)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(h||g)&&(g?k=self.location.href:typeof document!="undefined"&&document.currentScript&&(k=document.currentScript.src),typeof r!="undefined"&&r&&(k=r),k.indexOf("blob:")!==0?k=k.substr(0,k.lastIndexOf("/")+1):k="",y?(N=function(M,z){return $||($=rs("fs")),U||(U=rs("path")),M=U.normalize(M),$.readFileSync(M,z?null:"utf8")},F=function(M){var z=N(M,!0);return z.buffer||(z=new Uint8Array(z)),le(z.buffer),z}):(N=function(S){var M=new XMLHttpRequest;return M.open("GET",S,!1),M.send(null),M.responseText},g&&(F=function(S){var M=new XMLHttpRequest;return M.open("GET",S,!1),M.responseType="arraybuffer",M.send(null),new Uint8Array(M.response)}),A=function(S,M,z){var H=new XMLHttpRequest;H.open("GET",S,!0),H.responseType="arraybuffer",H.onload=function(){if(H.status==200||H.status==0&&H.response){M(H.response);return}z()},H.onerror=z,H.send(null)}),E=function(S){document.title=S});y&&typeof performance=="undefined"&&(global.performance=rs("perf_hooks").performance);var B=i.print||console.log.bind(console),V=i.printErr||console.warn.bind(console);for(c in p)p.hasOwnProperty(c)&&(i[c]=p[c]);p=null,i.arguments&&(m=i.arguments),i.thisProgram&&(f=i.thisProgram),i.quit&&(d=i.quit);function j(S){j.shown||(j.shown={}),j.shown[S]||(j.shown[S]=1,V(S))}var q=Atomics.load,J=Atomics.store,Y=Atomics.compareExchange,Q;i.wasmBinary&&(Q=i.wasmBinary);var oe=i.noExitRuntime||!0;typeof WebAssembly!="object"&&xi("no native wasm support detected");var re,me,ae=!1,xe;function le(S,M){S||xi("Assertion failed: "+M)}function ke(S){var M=i["_"+S];return le(M,"Cannot call unknown function "+S+", make sure it is exported"),M}function Ne(S,M,z,H,Te){var be={string:function(on){var Vp=0;if(on!=null&&on!==0){var ON=(on.length<<2)+1;Vp=Wp(ON),gt(on,Vp,ON)}return Vp},array:function(on){var Vp=Wp(on.length);return Bt(on,Vp),Vp}};function ye(on){return M==="string"?We(on):M==="boolean"?Boolean(on):on}var Fe=ke(S),Pt=[],Fr=0;if(H)for(var Sr=0;Sr<H.length;Sr++){var Au=be[z[Sr]];Au?(Fr===0&&(Fr=Jm()),Pt[Sr]=Au(H[Sr])):Pt[Sr]=H[Sr]}var Kp=Fe.apply(null,Pt);return Kp=ye(Kp),Fr!==0&&Gp(Fr),Kp}function Be(S,M,z,H){z=z||[];var Te=z.every(function(ye){return ye==="number"}),be=M!=="string";return be&&Te&&!H?ke(S):function(){return Ne(S,M,z,arguments,H)}}function Re(S,M,z){for(var H=M+z,Te="";!(M>=H);){var be=S[M++];if(!be)return Te;if(!(be&128)){Te+=String.fromCharCode(be);continue}var ye=S[M++]&63;if((be&224)==192){Te+=String.fromCharCode((be&31)<<6|ye);continue}var Fe=S[M++]&63;if((be&240)==224?be=(be&15)<<12|ye<<6|Fe:be=(be&7)<<18|ye<<12|Fe<<6|S[M++]&63,be<65536)Te+=String.fromCharCode(be);else{var Pt=be-65536;Te+=String.fromCharCode(55296|Pt>>10,56320|Pt&1023)}}return Te}function We(S,M){return S?Re(n(),S,M):""}function rt(S,M,z,H){if(!(H>0))return 0;for(var Te=z,be=z+H-1,ye=0;ye<S.length;++ye){var Fe=S.charCodeAt(ye);if(Fe>=55296&&Fe<=57343){var Pt=S.charCodeAt(++ye);Fe=65536+((Fe&1023)<<10)|Pt&1023}if(Fe<=127){if(z>=be)break;M[z++]=Fe}else if(Fe<=2047){if(z+1>=be)break;M[z++]=192|Fe>>6,M[z++]=128|Fe&63}else if(Fe<=65535){if(z+2>=be)break;M[z++]=224|Fe>>12,M[z++]=128|Fe>>6&63,M[z++]=128|Fe&63}else{if(z+3>=be)break;M[z++]=240|Fe>>18,M[z++]=128|Fe>>12&63,M[z++]=128|Fe>>6&63,M[z++]=128|Fe&63}}return M[z]=0,z-Te}function gt(S,M,z){return rt(S,n(),M,z)}function Ct(S){for(var M=0,z=0;z<S.length;++z){var H=S.charCodeAt(z);H>=55296&&H<=57343&&(H=65536+((H&1023)<<10)|S.charCodeAt(++z)&1023),H<=127?++M:H<=2047?M+=2:H<=65535?M+=3:M+=4}return M}function Bt(S,M){t().set(S,M)}function Dt(S,M){return S%M>0&&(S+=M-S%M),S}var Je,Ot,qt,$n,gr,Jn,zr,Vs,nn;function Pr(S){Je=S,i.HEAP8=Ot=new Int8Array(S),i.HEAP16=$n=new Int16Array(S),i.HEAP32=Jn=new Int32Array(S),i.HEAPU8=qt=new Uint8Array(S),i.HEAPU16=gr=new Uint16Array(S),i.HEAPU32=zr=new Uint32Array(S),i.HEAPF32=Vs=new Float32Array(S),i.HEAPF64=nn=new Float64Array(S)}var eo=i.INITIAL_MEMORY||16777216;if(x)re=i.wasmMemory,Je=i.buffer;else if(i.wasmMemory)re=i.wasmMemory;else if(re=new WebAssembly.Memory({initial:eo/65536,maximum:2147483648/65536,shared:!0}),!(re.buffer instanceof SharedArrayBuffer))throw V("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");re&&(Je=re.buffer),eo=Je.byteLength,Pr(Je);var br,kn=[],Bn=[],hl=[],gl=[],js=[],yi=!1,Um=!1;x||Bn.push({func:function(){Bg()}});function $p(){if(!x){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;)Hx(i.preRun.shift());Bp(kn)}}function Ig(){yi=!0,!x&&Bp(Bn)}function Cg(){x||Bp(hl)}function In(){x||(Um=!0)}function vg(){if(!x){if(i.postRun)for(typeof i.postRun=="function"&&(i.postRun=[i.postRun]);i.postRun.length;)qx(i.postRun.shift());Bp(js)}}function Hx(S){kn.unshift(S)}function qx(S){js.unshift(S)}var ts=0,Km=null,bl=null;function Xx(S){le(!x,"addRunDependency cannot be used in a pthread worker"),ts++,i.monitorRunDependencies&&i.monitorRunDependencies(ts)}function Yx(S){if(ts--,i.monitorRunDependencies&&i.monitorRunDependencies(ts),ts==0&&(Km!==null&&(clearInterval(Km),Km=null),bl)){var M=bl;bl=null,M()}}i.preloadedImages={},i.preloadedAudios={};function xi(S){i.onAbort&&i.onAbort(S),x&&console.error("Pthread aborting at "+new Error().stack),S+="",V(S),ae=!0,xe=1,S="abort("+S+"). Build with -s ASSERTIONS=1 for more info.";var M=new WebAssembly.RuntimeError(S);throw l(M),M}function yl(S,M){return String.prototype.startsWith?S.startsWith(M):S.indexOf(M)===0}var Qx="data:application/octet-stream;base64,";function wg(S){return yl(S,Qx)}var Zx="file://";function Sg(S){return yl(S,Zx)}var Cn="tfjs-backend-wasm-threaded-simd.wasm";wg(Cn)||(Cn=v(Cn));function Jx(S){try{if(S==Cn&&Q)return new Uint8Array(Q);if(F)return F(S);throw"both async and sync fetching of the wasm failed"}catch(M){xi(M)}}function _g(){if(!Q&&(h||g)){if(typeof fetch=="function"&&!Sg(Cn))return fetch(Cn,{credentials:"same-origin"}).then(function(S){if(!S.ok)throw"failed to load wasm binary file at '"+Cn+"'";return S.arrayBuffer()}).catch(function(){return Jx(Cn)});if(A)return new Promise(function(S,M){A(Cn,function(z){S(new Uint8Array(z))},M)})}return Promise.resolve().then(function(){return Jx(Cn)})}function eT(){var S={a:jT};function M(ye,Fe){var Pt=ye.exports;if(i.asm=Pt,br=i.asm.kb,me=Fe,!x){var Fr=Me.unusedWorkers.length;Me.unusedWorkers.forEach(function(Sr){Me.loadWasmModuleToWorker(Sr,function(){--Fr||Yx("wasm-instantiate")})})}}x||Xx("wasm-instantiate");function z(ye){M(ye.instance,ye.module)}function H(ye){return _g().then(function(Fe){return WebAssembly.instantiate(Fe,S)}).then(ye,function(Fe){V("failed to asynchronously prepare wasm: "+Fe),xi(Fe)})}function Te(){return!Q&&typeof WebAssembly.instantiateStreaming=="function"&&!wg(Cn)&&!Sg(Cn)&&typeof fetch=="function"?fetch(Cn,{credentials:"same-origin"}).then(function(ye){var Fe=WebAssembly.instantiateStreaming(ye,S);return Fe.then(z,function(Pt){return V("wasm streaming compile failed: "+Pt),V("falling back to ArrayBuffer instantiation"),H(z)})}):H(z)}if(i.instantiateWasm)try{var be=i.instantiateWasm(S,M);return be}catch(ye){return V("Module.instantiateWasm callback failed with error: "+ye),!1}return Te().catch(l),{}}var Ag={10072:function(){throw"Canceled!"},10090:function(S,M){setTimeout(function(){MN(S,M)},0)}};function tT(){Me.initRuntime()}function Bp(S){for(;S.length>0;){var M=S.shift();if(typeof M=="function"){M(i);continue}var z=M.func;typeof z=="number"?M.arg===void 0?br.get(z)():br.get(z)(M.arg):z(M.arg===void 0?null:M.arg)}}var Cu={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Vm(S,M){if(S<=0||S>t().length||S&!0||M<0)return-28;if(M==0)return 0;M>=2147483647&&(M=1/0);var z=Atomics.load(o(),Up>>2),H=0;if(z==S){var Te=Atomics.compareExchange(o(),Up>>2,z,0);if(Te==z&&(--M,H=1,M<=0))return 1}var be=Atomics.notify(o(),S>>2,M);if(be>=0)return be+H;throw"Atomics.notify returned an unexpected value "+be}i._emscripten_futex_wake=Vm;function rT(S){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in killThread!";o()[S+12>>2]=0;var M=Me.pthreads[S];M.worker.terminate(),Me.freeThreadData(M),Me.runningWorkers.splice(Me.runningWorkers.indexOf(M.worker),1),M.worker.pthread=void 0}function nT(S){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cancelThread!";var M=Me.pthreads[S];M.worker.postMessage({cmd:"cancel"})}function Ng(S){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cleanupThread!";var M=Me.pthreads[S];if(M){o()[S+12>>2]=0;var z=M.worker;Me.returnWorkerToPool(z)}}var Me={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var S=8,M=0;M<S;++M)Me.allocateUnusedWorker()},initRuntime:function(){for(var S=Tl(228),M=0;M<228/4;++M)s()[S/4+M]=0;o()[S+12>>2]=S;var z=S+152;o()[z>>2]=z;for(var H=Tl(512),M=0;M<128;++M)s()[H/4+M]=0;Atomics.store(s(),S+100>>2,H),Atomics.store(s(),S+40>>2,S),mk(S,!g,1),PN(S)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Me.threadExitHandlers.length>0;)Me.threadExitHandlers.pop()();x&&_u()&&DN()},runExitHandlersAndDeinitThread:function(S,M){Atomics.store(s(),S+56>>2,1),Atomics.store(s(),S+60>>2,0),Me.runExitHandlers(),Atomics.store(s(),S+4>>2,M),Atomics.store(s(),S+0>>2,1),Vm(S+0,2147483647),mk(0,0,0)},threadExit:function(S){var M=_u();M&&(Me.runExitHandlersAndDeinitThread(M,S),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Me.runExitHandlersAndDeinitThread(_u(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var S in Me.pthreads){var M=Me.pthreads[S];M&&M.worker&&Me.returnWorkerToPool(M.worker)}Me.pthreads={};for(var z=0;z<Me.unusedWorkers.length;++z){var H=Me.unusedWorkers[z];H.terminate()}Me.unusedWorkers=[];for(var z=0;z<Me.runningWorkers.length;++z){var H=Me.runningWorkers[z],M=H.pthread;Me.freeThreadData(M),H.terminate()}Me.runningWorkers=[]},freeThreadData:function(S){if(!!S){if(S.threadInfoStruct){var M=o()[S.threadInfoStruct+100>>2];o()[S.threadInfoStruct+100>>2]=0,Zm(M),Zm(S.threadInfoStruct)}S.threadInfoStruct=0,S.allocatedOwnStack&&S.stackBase&&Zm(S.stackBase),S.stackBase=0,S.worker&&(S.worker.pthread=null)}},returnWorkerToPool:function(S){Me.runWithoutMainThreadQueuedCalls(function(){delete Me.pthreads[S.pthread.threadInfoStruct],Me.unusedWorkers.push(S),Me.runningWorkers.splice(Me.runningWorkers.indexOf(S),1),Me.freeThreadData(S.pthread),S.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(S){o()[BN>>2]=0;try{S()}finally{o()[BN>>2]=1}},receiveObjectTransfer:function(S){},loadWasmModuleToWorker:function(S,M){S.onmessage=function(z){var H=z.data,Te=H.cmd;if(S.pthread&&(Me.currentProxiedOperationCallerThread=S.pthread.threadInfoStruct),H.targetThread&&H.targetThread!=_u()){var be=Me.pthreads[H.targetThread];be?be.worker.postMessage(z.data,H.transferList):console.error('Internal error! Worker sent a message "'+Te+'" to target pthread '+H.targetThread+", but that thread no longer exists!"),Me.currentProxiedOperationCallerThread=void 0;return}if(Te==="processQueuedMainThreadWork")Ug();else if(Te==="spawnThread")Lg(z.data);else if(Te==="cleanupThread")Ng(H.thread);else if(Te==="killThread")rT(H.thread);else if(Te==="cancelThread")nT(H.thread);else if(Te==="loaded")S.loaded=!0,M&&M(S),S.runPthread&&(S.runPthread(),delete S.runPthread);else if(Te==="print")B("Thread "+H.threadId+": "+H.text);else if(Te==="printErr")V("Thread "+H.threadId+": "+H.text);else if(Te==="alert")alert("Thread "+H.threadId+": "+H.text);else if(Te==="exit"){var ye=S.pthread&&Atomics.load(s(),S.pthread.threadInfoStruct+64>>2);ye&&Me.returnWorkerToPool(S)}else if(Te==="exitProcess")try{Tj(H.returnCode)}catch(Fe){if(Fe instanceof ef)return;throw Fe}else Te==="cancelDone"?Me.returnWorkerToPool(S):Te==="objectTransfer"?Me.receiveObjectTransfer(z.data):z.data.target==="setimmediate"?S.postMessage(z.data):V("worker sent an unknown command "+Te);Me.currentProxiedOperationCallerThread=void 0},S.onerror=function(z){V("pthread sent an error! "+z.filename+":"+z.lineno+": "+z.message)},y&&(S.on("message",function(z){S.onmessage({data:z})}),S.on("error",function(z){S.onerror(z)}),S.on("exit",function(z){})),S.postMessage({cmd:"load",urlOrBlob:i.mainScriptUrlOrBlob||r,wasmMemory:re,wasmModule:me})},allocateUnusedWorker:function(){var S=v("tfjs-backend-wasm-threaded-simd.worker.js");Me.unusedWorkers.push(new Worker(S))},getNewWorker:function(){return Me.unusedWorkers.length==0&&(Me.allocateUnusedWorker(),Me.loadWasmModuleToWorker(Me.unusedWorkers[0])),Me.unusedWorkers.length>0?Me.unusedWorkers.pop():null},busySpinWait:function(S){for(var M=performance.now()+S;performance.now()<M;);}};function oT(S,M){LN(S,M),Gp(S)}i.establishStackSpace=oT;function sT(){return oe}i.getNoExitRuntime=sT;function aT(S,M){return br.get(S)(M)}i.invokeEntryPoint=aT;function iT(S,M,z,H){xi("Assertion failed: "+We(S)+", at: "+[M?We(M):"unknown filename",z,H?We(H):"unknown function"])}function uT(S,M){var z=_main(S,M)}var xl;y?xl=function(){var S=process.hrtime();return S[0]*1e3+S[1]/1e6}:x?xl=function(){return performance.now()-i.__performance_now_clock_drift}:typeof dateNow!="undefined"?xl=dateNow:xl=function(){return performance.now()};function lT(S){return o()[AN()>>2]=S,S}function pT(S,M){if(x)return vu(1,1,S,M)}function cT(S,M){if(S==M)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:S,cmd:"processThreadQueue"});else{var z=Me.pthreads[S],H=z&&z.worker;if(!H)return;H.postMessage({cmd:"processThreadQueue"})}return 1}function mT(){xi()}function fT(S,M,z){var H=bT(M,z);return Ag[S].apply(null,H)}function dT(S,M){}function Dg(S,M,z){if(S<=0||S>t().length||S&!0)return-28;if(h){if(Atomics.load(o(),S>>2)!=M)return-6;for(var Te=performance.now(),be=Te+z,ye=Atomics.exchange(o(),Up>>2,S);;){if(Te=performance.now(),Te>be)return ye=Atomics.exchange(o(),Up>>2,0),-73;if(ye=Atomics.exchange(o(),Up>>2,0),ye==0)break;if(Ug(),Atomics.load(o(),S>>2)!=M)return-6;ye=Atomics.exchange(o(),Up>>2,S)}return 0}else{var H=Atomics.wait(o(),S>>2,M,z);if(H==="timed-out")return-73;if(H==="not-equal")return-6;if(H==="ok")return 0;throw"Atomics.wait returned an unexpected value "+H}}function hT(S,M,z){n().copyWithin(S,M,M+z)}function gT(){return y?rs("os").cpus().length:navigator.hardwareConcurrency}function vu(S,M){for(var z=arguments.length-2,H=Jm(),Te=z,be=Wp(Te*8),ye=be>>3,Fe=0;Fe<z;Fe++){var Pt=arguments[2+Fe];a()[ye+Fe]=Pt}var Fr=RN(S,Te,be,M);return Gp(H),Fr}var jm=[],Hm=[];function bT(S,M){Hm.length=0;var z;for(M>>=2;z=n()[S++];){var H=z<105;H&&M&1&&M++,Hm.push(H?a()[M++>>1]:o()[M]),++M}return Hm}function yT(S,M,z){jm.length=M;for(var H=z>>3,Te=0;Te<M;Te++)jm[Te]=a()[H+Te];var be=S<0,ye=be?Ag[-S-1]:VT[S];return ye.apply(null,jm)}function xT(){return n().length}function TT(S){try{return re.grow(S-Je.byteLength+65535>>>16),Pr(re.buffer),1}catch{}}function kT(S){var M=xT();if(S<=M)return!1;var z=2147483648;if(S>z)return!1;for(var H=1;H<=4;H*=2){var Te=M*(1+.2/H);Te=Math.min(Te,S+100663296);var be=Math.min(z,Dt(Math.max(S,Te),65536)),ye=TT(be);if(ye)return!0}return!1}var ot={inEventHandler:0,removeAllEventListeners:function(){for(var S=ot.eventHandlers.length-1;S>=0;--S)ot._removeHandler(S);ot.eventHandlers=[],ot.deferredCalls=[]},registerRemoveEventListeners:function(){ot.removeEventListenersRegistered||(gl.push(ot.removeAllEventListeners),ot.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(S,M,z){function H(ye,Fe){if(ye.length!=Fe.length)return!1;for(var Pt in ye)if(ye[Pt]!=Fe[Pt])return!1;return!0}for(var Te in ot.deferredCalls){var be=ot.deferredCalls[Te];if(be.targetFunction==S&&H(be.argsList,z))return}ot.deferredCalls.push({targetFunction:S,precedence:M,argsList:z}),ot.deferredCalls.sort(function(ye,Fe){return ye.precedence<Fe.precedence})},removeDeferredCalls:function(S){for(var M=0;M<ot.deferredCalls.length;++M)ot.deferredCalls[M].targetFunction==S&&(ot.deferredCalls.splice(M,1),--M)},canPerformEventHandlerRequests:function(){return ot.inEventHandler&&ot.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!ot.canPerformEventHandlerRequests())for(var S=0;S<ot.deferredCalls.length;++S){var M=ot.deferredCalls[S];ot.deferredCalls.splice(S,1),--S,M.targetFunction.apply(null,M.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(S,M){for(var z=0;z<ot.eventHandlers.length;++z)ot.eventHandlers[z].target==S&&(!M||M==ot.eventHandlers[z].eventTypeString)&&ot._removeHandler(z--)},_removeHandler:function(S){var M=ot.eventHandlers[S];M.target.removeEventListener(M.eventTypeString,M.eventListenerFunc,M.useCapture),ot.eventHandlers.splice(S,1)},registerOrRemoveHandler:function(S){var M=function(Te){++ot.inEventHandler,ot.currentEventHandler=S,ot.runDeferredCalls(),S.handlerFunc(Te),ot.runDeferredCalls(),--ot.inEventHandler};if(S.callbackfunc)S.eventListenerFunc=M,S.target.addEventListener(S.eventTypeString,M,S.useCapture),ot.eventHandlers.push(S),ot.registerRemoveEventListeners();else for(var z=0;z<ot.eventHandlers.length;++z)ot.eventHandlers[z].target==S.target&&ot.eventHandlers[z].eventTypeString==S.eventTypeString&&ot._removeHandler(z--)},queueEventHandlerOnThread_iiii:function(S,M,z,H,Te){var be=Jm(),ye=Wp(12);o()[ye>>2]=z,o()[ye+4>>2]=H,o()[ye+8>>2]=Te,ck(0,S,637534208,M,H,ye),Gp(be)},getTargetThreadForEventCallback:function(S){switch(S){case 1:return 0;case 2:return Me.currentProxiedOperationCallerThread;default:return S}},getNodeNameForTarget:function(S){return S?S==window?"#window":S==screen?"#screen":S&&S.nodeName?S.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function IT(S){var M=Ct(S)+1,z=Tl(M);return gt(S,z,M),z}function CT(S,M,z,H){var Te=Jm(),be=Wp(12),ye=0;M&&(ye=IT(M)),o()[be>>2]=ye,o()[be+4>>2]=z,o()[be+8>>2]=H,ck(0,S,657457152,0,ye,be),Gp(Te)}function vT(S,M,z,H){M=M?We(M):"",CT(S,M,z,H)}function wT(S){return S>2?We(S):S}var ST=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function _T(S){S=wT(S);var M=ST[S]||(typeof document!="undefined"?document.querySelector(S):void 0);return M}function qm(S){return _T(S)}function Pg(S,M,z){var H=qm(S);if(!H)return-4;if(H.canvasSharedPtr&&(o()[H.canvasSharedPtr>>2]=M,o()[H.canvasSharedPtr+4>>2]=z),H.offscreenCanvas||!H.controlTransferredOffscreen){H.offscreenCanvas&&(H=H.offscreenCanvas);var Te=!1;if(H.GLctxObject&&H.GLctxObject.GLctx){var be=H.GLctxObject.GLctx.getParameter(2978);Te=be[0]===0&&be[1]===0&&be[2]===H.width&&be[3]===H.height}H.width=M,H.height=z,Te&&H.GLctxObject.GLctx.viewport(0,0,M,z)}else if(H.canvasSharedPtr){var ye=o()[H.canvasSharedPtr+8>>2];return vT(ye,S,M,z),1}else return-4;return 0}function Fg(S,M,z){return x?vu(2,1,S,M,z):Pg(S,M,z)}function AT(S,M,z){var H=qm(S);return H?Pg(S,M,z):Fg(S,M,z)}function NT(S){}function DT(S,M){}function PT(S){var M=S.getExtension("ANGLE_instanced_arrays");if(M)return S.vertexAttribDivisor=function(z,H){M.vertexAttribDivisorANGLE(z,H)},S.drawArraysInstanced=function(z,H,Te,be){M.drawArraysInstancedANGLE(z,H,Te,be)},S.drawElementsInstanced=function(z,H,Te,be,ye){M.drawElementsInstancedANGLE(z,H,Te,be,ye)},1}function FT(S){var M=S.getExtension("OES_vertex_array_object");if(M)return S.createVertexArray=function(){return M.createVertexArrayOES()},S.deleteVertexArray=function(z){M.deleteVertexArrayOES(z)},S.bindVertexArray=function(z){M.bindVertexArrayOES(z)},S.isVertexArray=function(z){return M.isVertexArrayOES(z)},1}function MT(S){var M=S.getExtension("WEBGL_draw_buffers");if(M)return S.drawBuffers=function(z,H){M.drawBuffersWEBGL(z,H)},1}function ET(S){return!!(S.multiDrawWebgl=S.getExtension("WEBGL_multi_draw"))}var vt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(M){vt.lastError||(vt.lastError=M)},getNewId:function(S){for(var M=vt.counter++,z=S.length;z<M;z++)S[z]=null;return M},getSource:function(S,M,z,H){for(var Te="",be=0;be<M;++be){var ye=H?o()[H+be*4>>2]:-1;Te+=We(o()[z+be*4>>2],ye<0?void 0:ye)}return Te},createContext:function(S,M){var z=S.getContext("webgl",M);if(!z)return 0;var H=vt.registerContext(z,M);return H},registerContext:function(S,M){var z=Tl(8);o()[z+4>>2]=_u();var H={handle:z,attributes:M,version:M.majorVersion,GLctx:S};return S.canvas&&(S.canvas.GLctxObject=H),vt.contexts[z]=H,(typeof M.enableExtensionsByDefault=="undefined"||M.enableExtensionsByDefault)&&vt.initExtensions(H),z},makeContextCurrent:function(S){return vt.currentContext=vt.contexts[S],i.ctx=wu=vt.currentContext&&vt.currentContext.GLctx,!(S&&!wu)},getContext:function(S){return vt.contexts[S]},deleteContext:function(S){vt.currentContext===vt.contexts[S]&&(vt.currentContext=null),typeof ot=="object"&&ot.removeAllHandlersOnTarget(vt.contexts[S].GLctx.canvas),vt.contexts[S]&&vt.contexts[S].GLctx.canvas&&(vt.contexts[S].GLctx.canvas.GLctxObject=void 0),Zm(vt.contexts[S].handle),vt.contexts[S]=null},initExtensions:function(S){if(S||(S=vt.currentContext),!S.initExtensionsDone){S.initExtensionsDone=!0;var M=S.GLctx;PT(M),FT(M),MT(M),M.disjointTimerQueryExt=M.getExtension("EXT_disjoint_timer_query"),ET(M);var z=M.getSupportedExtensions()||[];z.forEach(function(H){H.indexOf("lose_context")<0&&H.indexOf("debug")<0&&M.getExtension(H)})}},populateUniformTable:function(S){for(var M=vt.programs[S],z=vt.programInfos[S]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},H=z.uniforms,Te=wu.getProgramParameter(M,35718),be=0;be<Te;++be){var ye=wu.getActiveUniform(M,be),Fe=ye.name;z.maxUniformLength=Math.max(z.maxUniformLength,Fe.length+1),Fe.slice(-1)=="]"&&(Fe=Fe.slice(0,Fe.lastIndexOf("[")));var Pt=wu.getUniformLocation(M,Fe);if(Pt){var Fr=vt.getNewId(vt.uniforms);H[Fe]=[ye.size,Fr],vt.uniforms[Fr]=Pt;for(var Sr=1;Sr<ye.size;++Sr){var Au=Fe+"["+Sr+"]";Pt=wu.getUniformLocation(M,Au),Fr=vt.getNewId(vt.uniforms),vt.uniforms[Fr]=Pt}}}}},RT=["default","low-power","high-performance"];function LT(S,M){var z=M>>2,H=o()[z+(24>>2)],Te={alpha:!!o()[z+(0>>2)],depth:!!o()[z+(4>>2)],stencil:!!o()[z+(8>>2)],antialias:!!o()[z+(12>>2)],premultipliedAlpha:!!o()[z+(16>>2)],preserveDrawingBuffer:!!o()[z+(20>>2)],powerPreference:RT[H],failIfMajorPerformanceCaveat:!!o()[z+(28>>2)],majorVersion:o()[z+(32>>2)],minorVersion:o()[z+(36>>2)],enableExtensionsByDefault:o()[z+(40>>2)],explicitSwapControl:o()[z+(44>>2)],proxyContextToMainThread:o()[z+(48>>2)],renderViaOffscreenBackBuffer:o()[z+(52>>2)]},be=qm(S);if(!be||Te.explicitSwapControl)return 0;var ye=vt.createContext(be,Te);return ye}function $T(S,M){return LT(S,M)}var Op={mappings:{},buffers:[null,[],[]],printChar:function(S,M){var z=Op.buffers[S];M===0||M===10?((S===1?B:V)(Re(z,0)),z.length=0):z.push(M)},varargs:void 0,get:function(){Op.varargs+=4;var S=o()[Op.varargs-4>>2];return S},getStr:function(S){var M=We(S);return M},get64:function(S,M){return S}};function Mg(S){return x?vu(3,1,S):0}function Eg(S,M,z,H,Te){if(x)return vu(4,1,S,M,z,H,Te)}function Rg(S,M,z,H){if(x)return vu(5,1,S,M,z,H);for(var Te=0,be=0;be<z;be++){for(var ye=o()[M+be*8>>2],Fe=o()[M+(be*8+4)>>2],Pt=0;Pt<Fe;Pt++)Op.printChar(S,n()[ye+Pt]);Te+=Fe}return o()[H>>2]=Te,0}function BT(S){var M=Me.threadExitHandlers.pop();S&&M()}function OT(S,M){Me.threadExitHandlers.push(function(){br.get(S)(M)})}function Lg(S){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var M=Me.getNewWorker();if(M.pthread!==void 0)throw"Internal error!";if(!S.pthread_ptr)throw"Internal error, no pthread ptr!";Me.runningWorkers.push(M);for(var z=Tl(128*4),H=0;H<128;++H)o()[z+H*4>>2]=0;var Te=S.stackBase+S.stackSize,be=Me.pthreads[S.pthread_ptr]={worker:M,stackBase:S.stackBase,stackSize:S.stackSize,allocatedOwnStack:S.allocatedOwnStack,threadInfoStruct:S.pthread_ptr},ye=be.threadInfoStruct>>2;Atomics.store(s(),ye+(64>>2),S.detached),Atomics.store(s(),ye+(100>>2),z),Atomics.store(s(),ye+(40>>2),be.threadInfoStruct),Atomics.store(s(),ye+(80>>2),S.stackSize),Atomics.store(s(),ye+(76>>2),Te),Atomics.store(s(),ye+(104>>2),S.stackSize),Atomics.store(s(),ye+(104+8>>2),Te),Atomics.store(s(),ye+(104+12>>2),S.detached);var Fe=NN(),Pt=Fe+40;Atomics.store(s(),ye+(172>>2),Pt),M.pthread=be;var Fr={cmd:"run",start_routine:S.startRoutine,arg:S.arg,threadInfoStruct:S.pthread_ptr,stackBase:S.stackBase,stackSize:S.stackSize};M.runPthread=function(){Fr.time=performance.now(),M.postMessage(Fr,S.transferList)},M.loaded&&(M.runPthread(),delete M.runPthread)}function zT(S,M,z,H){if(typeof SharedArrayBuffer=="undefined")return V("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!S)return V("pthread_create called with a null thread pointer!"),28;var Te=[],be=0;if(x&&(Te.length===0||be))return EN(687865856,S,M,z,H);if(be)return be;var ye=0,Fe=0,Pt=0;M&&M!=-1?(ye=o()[M>>2],ye+=81920,Fe=o()[M+8>>2],Pt=o()[M+12>>2]!==0):ye=2097152;var Fr=Fe==0;Fr?Fe=$N(16,ye):(Fe-=ye,le(Fe>0));for(var Sr=Tl(228),Au=0;Au<228>>2;++Au)s()[(Sr>>2)+Au]=0;o()[S>>2]=Sr,o()[Sr+12>>2]=Sr;var Kp=Sr+152;o()[Kp>>2]=Kp;var on={stackBase:Fe,stackSize:ye,allocatedOwnStack:Fr,detached:Pt,startRoutine:z,pthread_ptr:Sr,arg:H,transferList:Te};return x?(on.cmd="spawnThread",postMessage(on,Te)):Lg(on),0}function GT(){if(!!x){var S=_u();if(!!S){var M=Atomics.load(s(),S+56>>2);if(!M){var z=Atomics.load(s(),S+0>>2);if(z==2)throw"Canceled!"}}}}function WT(){y||g||j("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function UT(S,M,z){if(!S)return V("pthread_join attempted on a null thread pointer!"),Cu.ESRCH;if(x&&_u()==S)return V("PThread "+S+" is attempting to join to itself!"),Cu.EDEADLK;if(!x&&FN()==S)return V("Main thread "+S+" is attempting to join to itself!"),Cu.EDEADLK;var H=o()[S+12>>2];if(H!==S)return V("pthread_join attempted on thread "+S+", which does not point to a valid thread, or does not exist anymore!"),Cu.ESRCH;var Te=Atomics.load(s(),S+64>>2);if(Te)return V("Attempted to join thread "+S+", which was already detached!"),Cu.EINVAL;for(z&&WT();;){var be=Atomics.load(s(),S+0>>2);if(be==1){var ye=Atomics.load(s(),S+4>>2);return M&&(o()[M>>2]=ye),Atomics.store(s(),S+64>>2,1),x?postMessage({cmd:"cleanupThread",thread:S}):Ng(S),0}if(!z)return Cu.EBUSY;GT(),x||Ug(),Dg(S+0,be,x?100:1)}}function KT(S,M){return UT(S,M,!0)}function $g(S){if(x)return vu(6,1,S);switch(S){case 30:return 16384;case 85:var M=2147483648;return M/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return lT(28),-1}x||Me.initMainThreadBlock();var wu,VT=[null,pT,Fg,Mg,Eg,Rg,$g],jT={e:iT,r:uT,x:cT,b:mT,y:fT,j:dT,d:Dg,c:Vm,f:xl,p:hT,A:gT,u:yT,q:kT,v:AT,i:NT,s:DT,w:$T,l:Mg,n:Eg,g:Rg,o:tT,a:re||i.wasmMemory,z:BT,k:OT,h:zT,m:KT,t:$g},_N=eT(),Bg=i.___wasm_call_ctors=function(){return(Bg=i.___wasm_call_ctors=i.asm.B).apply(null,arguments)},HT=i._init=function(){return(HT=i._init=i.asm.C).apply(null,arguments)},qT=i._init_with_threads_count=function(){return(qT=i._init_with_threads_count=i.asm.D).apply(null,arguments)},XT=i._get_threads_count=function(){return(XT=i._get_threads_count=i.asm.E).apply(null,arguments)},YT=i._register_tensor=function(){return(YT=i._register_tensor=i.asm.F).apply(null,arguments)},QT=i._dispose_data=function(){return(QT=i._dispose_data=i.asm.G).apply(null,arguments)},ZT=i._dispose=function(){return(ZT=i._dispose=i.asm.H).apply(null,arguments)},JT=i._Abs=function(){return(JT=i._Abs=i.asm.I).apply(null,arguments)},ek=i._Add=function(){return(ek=i._Add=i.asm.J).apply(null,arguments)},tk=i._AddN=function(){return(tk=i._AddN=i.asm.K).apply(null,arguments)},rk=i._All=function(){return(rk=i._All=i.asm.L).apply(null,arguments)},nk=i._Any=function(){return(nk=i._Any=i.asm.M).apply(null,arguments)},ok=i._ArgMax=function(){return(ok=i._ArgMax=i.asm.N).apply(null,arguments)},sk=i._AvgPool=function(){return(sk=i._AvgPool=i.asm.O).apply(null,arguments)},ak=i._BatchMatMul=function(){return(ak=i._BatchMatMul=i.asm.P).apply(null,arguments)},ik=i._Ceil=function(){return(ik=i._Ceil=i.asm.Q).apply(null,arguments)},uk=i._ClipByValue=function(){return(uk=i._ClipByValue=i.asm.R).apply(null,arguments)},lk=i._Conv2D=function(){return(lk=i._Conv2D=i.asm.S).apply(null,arguments)},Og=i._Conv2DBackpropInput=function(){return(Og=i._Conv2DBackpropInput=i.asm.T).apply(null,arguments)},zg=i._Cos=function(){return(zg=i._Cos=i.asm.U).apply(null,arguments)},Xm=i._Cosh=function(){return(Xm=i._Cosh=i.asm.V).apply(null,arguments)},zp=i._CropAndResize=function(){return(zp=i._CropAndResize=i.asm.W).apply(null,arguments)},pk=i._Cumsum=function(){return(pk=i._Cumsum=i.asm.X).apply(null,arguments)},Ym=i._DepthToSpace=function(){return(Ym=i._DepthToSpace=i.asm.Y).apply(null,arguments)},ee=i._DepthwiseConv2dNative=function(){return(ee=i._DepthwiseConv2dNative=i.asm.Z).apply(null,arguments)},se=i._Elu=function(){return(se=i._Elu=i.asm._).apply(null,arguments)},Ae=i._Equal=function(){return(Ae=i._Equal=i.asm.$).apply(null,arguments)},yt=i._Exp=function(){return(yt=i._Exp=i.asm.aa).apply(null,arguments)},pr=i._FlipLeftRight=function(){return(pr=i._FlipLeftRight=i.asm.ba).apply(null,arguments)},rr=i._Floor=function(){return(rr=i._Floor=i.asm.ca).apply(null,arguments)},ut=i._FloorDiv=function(){return(ut=i._FloorDiv=i.asm.da).apply(null,arguments)},pt=i._FusedBatchNorm=function(){return(pt=i._FusedBatchNorm=i.asm.ea).apply(null,arguments)},Gr=i._FusedConv2D=function(){return(Gr=i._FusedConv2D=i.asm.fa).apply(null,arguments)},Ti=i._FusedDepthwiseConv2D=function(){return(Ti=i._FusedDepthwiseConv2D=i.asm.ga).apply(null,arguments)},ki=i._Gather=function(){return(ki=i._Gather=i.asm.ha).apply(null,arguments)},Gg=i._GatherNd=function(){return(Gg=i._GatherNd=i.asm.ia).apply(null,arguments)},Qm=i._Greater=function(){return(Qm=i._Greater=i.asm.ja).apply(null,arguments)},On=i._GreaterEqual=function(){return(On=i._GreaterEqual=i.asm.ka).apply(null,arguments)},Su=i._LeakyRelu=function(){return(Su=i._LeakyRelu=i.asm.la).apply(null,arguments)},Wg=i._Less=function(){return(Wg=i._Less=i.asm.ma).apply(null,arguments)},v4=i._LessEqual=function(){return(v4=i._LessEqual=i.asm.na).apply(null,arguments)},w4=i._Log=function(){return(w4=i._Log=i.asm.oa).apply(null,arguments)},S4=i._LogicalAnd=function(){return(S4=i._LogicalAnd=i.asm.pa).apply(null,arguments)},_4=i._Max=function(){return(_4=i._Max=i.asm.qa).apply(null,arguments)},A4=i._MaxPool=function(){return(A4=i._MaxPool=i.asm.ra).apply(null,arguments)},N4=i._Maximum=function(){return(N4=i._Maximum=i.asm.sa).apply(null,arguments)},D4=i._Mean=function(){return(D4=i._Mean=i.asm.ta).apply(null,arguments)},P4=i._Min=function(){return(P4=i._Min=i.asm.ua).apply(null,arguments)},F4=i._Minimum=function(){return(F4=i._Minimum=i.asm.va).apply(null,arguments)},M4=i._MirrorPad=function(){return(M4=i._MirrorPad=i.asm.wa).apply(null,arguments)},E4=i._Multiply=function(){return(E4=i._Multiply=i.asm.xa).apply(null,arguments)},R4=i._Neg=function(){return(R4=i._Neg=i.asm.ya).apply(null,arguments)},L4=i._NonMaxSuppressionV3=function(){return(L4=i._NonMaxSuppressionV3=i.asm.za).apply(null,arguments)},$4=i._NonMaxSuppressionV4=function(){return($4=i._NonMaxSuppressionV4=i.asm.Aa).apply(null,arguments)},B4=i._NonMaxSuppressionV5=function(){return(B4=i._NonMaxSuppressionV5=i.asm.Ba).apply(null,arguments)},O4=i._NotEqual=function(){return(O4=i._NotEqual=i.asm.Ca).apply(null,arguments)},z4=i._OneHot=function(){return(z4=i._OneHot=i.asm.Da).apply(null,arguments)},G4=i._PadV2=function(){return(G4=i._PadV2=i.asm.Ea).apply(null,arguments)},W4=i._Pow=function(){return(W4=i._Pow=i.asm.Fa).apply(null,arguments)},U4=i._Prelu=function(){return(U4=i._Prelu=i.asm.Ga).apply(null,arguments)},K4=i._Prod=function(){return(K4=i._Prod=i.asm.Ha).apply(null,arguments)},V4=i._RealDiv=function(){return(V4=i._RealDiv=i.asm.Ia).apply(null,arguments)},j4=i._Relu=function(){return(j4=i._Relu=i.asm.Ja).apply(null,arguments)},H4=i._Relu6=function(){return(H4=i._Relu6=i.asm.Ka).apply(null,arguments)},q4=i._ResizeBilinear=function(){return(q4=i._ResizeBilinear=i.asm.La).apply(null,arguments)},X4=i._Reverse=function(){return(X4=i._Reverse=i.asm.Ma).apply(null,arguments)},Y4=i._RotateWithOffset=function(){return(Y4=i._RotateWithOffset=i.asm.Na).apply(null,arguments)},Q4=i._Round=function(){return(Q4=i._Round=i.asm.Oa).apply(null,arguments)},Z4=i._Rsqrt=function(){return(Z4=i._Rsqrt=i.asm.Pa).apply(null,arguments)},J4=i._ScatterNd=function(){return(J4=i._ScatterNd=i.asm.Qa).apply(null,arguments)},ej=i._SelectV2=function(){return(ej=i._SelectV2=i.asm.Ra).apply(null,arguments)},tj=i._Sigmoid=function(){return(tj=i._Sigmoid=i.asm.Sa).apply(null,arguments)},rj=i._Sin=function(){return(rj=i._Sin=i.asm.Ta).apply(null,arguments)},nj=i._Softmax=function(){return(nj=i._Softmax=i.asm.Ua).apply(null,arguments)},oj=i._Sqrt=function(){return(oj=i._Sqrt=i.asm.Va).apply(null,arguments)},sj=i._Square=function(){return(sj=i._Square=i.asm.Wa).apply(null,arguments)},aj=i._SquaredDifference=function(){return(aj=i._SquaredDifference=i.asm.Xa).apply(null,arguments)},ij=i._Step=function(){return(ij=i._Step=i.asm.Ya).apply(null,arguments)},uj=i._StridedSlice=function(){return(uj=i._StridedSlice=i.asm.Za).apply(null,arguments)},lj=i._Sub=function(){return(lj=i._Sub=i.asm._a).apply(null,arguments)},pj=i._Sum=function(){return(pj=i._Sum=i.asm.$a).apply(null,arguments)},cj=i._Tan=function(){return(cj=i._Tan=i.asm.ab).apply(null,arguments)},mj=i._Tanh=function(){return(mj=i._Tanh=i.asm.bb).apply(null,arguments)},fj=i._Tile=function(){return(fj=i._Tile=i.asm.cb).apply(null,arguments)},dj=i._TopK=function(){return(dj=i._TopK=i.asm.db).apply(null,arguments)},hj=i._Transform=function(){return(hj=i._Transform=i.asm.eb).apply(null,arguments)},gj=i._Transpose=function(){return(gj=i._Transpose=i.asm.fb).apply(null,arguments)},bj=i.__FusedMatMul=function(){return(bj=i.__FusedMatMul=i.asm.gb).apply(null,arguments)},Tl=i._malloc=function(){return(Tl=i._malloc=i.asm.hb).apply(null,arguments)},Zm=i._free=function(){return(Zm=i._free=i.asm.ib).apply(null,arguments)},AN=i.___errno_location=function(){return(AN=i.___errno_location=i.asm.jb).apply(null,arguments)},NN=i._emscripten_get_global_libc=function(){return(NN=i._emscripten_get_global_libc=i.asm.lb).apply(null,arguments)},_u=i._pthread_self=function(){return(_u=i._pthread_self=i.asm.mb).apply(null,arguments)},DN=i.___pthread_tsd_run_dtors=function(){return(DN=i.___pthread_tsd_run_dtors=i.asm.nb).apply(null,arguments)},Ug=i._emscripten_main_thread_process_queued_calls=function(){return(Ug=i._emscripten_main_thread_process_queued_calls=i.asm.ob).apply(null,arguments)},yj=i._emscripten_current_thread_process_queued_calls=function(){return(yj=i._emscripten_current_thread_process_queued_calls=i.asm.pb).apply(null,arguments)},PN=i._emscripten_register_main_browser_thread_id=function(){return(PN=i._emscripten_register_main_browser_thread_id=i.asm.qb).apply(null,arguments)},FN=i._emscripten_main_browser_thread_id=function(){return(FN=i._emscripten_main_browser_thread_id=i.asm.rb).apply(null,arguments)},MN=i.__emscripten_do_dispatch_to_thread=function(){return(MN=i.__emscripten_do_dispatch_to_thread=i.asm.sb).apply(null,arguments)},EN=i._emscripten_sync_run_in_main_thread_4=function(){return(EN=i._emscripten_sync_run_in_main_thread_4=i.asm.tb).apply(null,arguments)},RN=i._emscripten_run_in_main_runtime_thread_js=function(){return(RN=i._emscripten_run_in_main_runtime_thread_js=i.asm.ub).apply(null,arguments)},ck=i.__emscripten_call_on_thread=function(){return(ck=i.__emscripten_call_on_thread=i.asm.vb).apply(null,arguments)},xj=i._emscripten_tls_init=function(){return(xj=i._emscripten_tls_init=i.asm.wb).apply(null,arguments)},mk=i.__emscripten_thread_init=function(){return(mk=i.__emscripten_thread_init=i.asm.xb).apply(null,arguments)},Jm=i.stackSave=function(){return(Jm=i.stackSave=i.asm.yb).apply(null,arguments)},Gp=i.stackRestore=function(){return(Gp=i.stackRestore=i.asm.zb).apply(null,arguments)},Wp=i.stackAlloc=function(){return(Wp=i.stackAlloc=i.asm.Ab).apply(null,arguments)},LN=i._emscripten_stack_set_limits=function(){return(LN=i._emscripten_stack_set_limits=i.asm.Bb).apply(null,arguments)},$N=i._memalign=function(){return($N=i._memalign=i.asm.Cb).apply(null,arguments)},BN=i.__emscripten_allow_main_runtime_queued_calls=10064,Up=i.__emscripten_main_thread_futex=10268;i.cwrap=Be,i.PThread=Me,i.PThread=Me,i.wasmMemory=re,i.ExitStatus=ef;var Kg;function ef(S){this.name="ExitStatus",this.message="Program terminated with exit("+S+")",this.status=S}bl=function S(){Kg||fk(),Kg||(bl=S)};function fk(S){if(S=S||m,ts>0)return;if(x){u(i),Ig(),postMessage({cmd:"loaded"});return}if($p(),ts>0)return;function M(){Kg||(Kg=!0,i.calledRun=!0,!ae&&(Ig(),Cg(),u(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),vg()))}i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),M()},1)):M()}i.run=fk;function Tj(S,M){if(!(M&&oe&&S===0)){if(!M&&x)throw postMessage({cmd:"exitProcess",returnCode:S}),new ef(S);oe||(Me.terminateAllThreads(),xe=S,In(),i.onExit&&i.onExit(S),ae=!0),d(S,new ef(S))}}if(i.preInit)for(typeof i.preInit=="function"&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();return x&&(oe=!1,Me.initWorker()),fk(),e.ready}}();typeof Ux=="object"&&typeof kN=="object"?kN.exports=TN:typeof define=="function"&&define.amd?define([],function(){return TN}):typeof Ux=="object"&&(Ux.WasmBackendModuleThreadedSimd=TN)});var x4=vn((Kx,CN)=>{var IN=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};var t=typeof e!="undefined"?e:{},n,o;t.ready=new Promise(function(ee,se){n=ee,o=se});var s={},a;for(a in t)t.hasOwnProperty(a)&&(s[a]=t[a]);var i=[],u="./this.program",l=function(ee,se){throw se},p=!1,c=!1,m=!1,f=!1;p=typeof window=="object",c=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f=!p&&!m&&!c;var d="";function h(ee){return t.locateFile?t.locateFile(ee,d):d+ee}var g,y,T,x,k,v;m?(c?d=rs("path").dirname(d)+"/":d=__dirname+"/",g=function(se,Ae){return k||(k=rs("fs")),v||(v=rs("path")),se=v.normalize(se),k.readFileSync(se,Ae?null:"utf8")},T=function(se){var Ae=g(se,!0);return Ae.buffer||(Ae=new Uint8Array(Ae)),B(Ae.buffer),Ae},process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(ee){if(!(ee instanceof pk))throw ee}),process.on("unhandledRejection",js),l=function(ee){process.exit(ee)},t.inspect=function(){return"[Emscripten Module object]"}):f?(typeof read!="undefined"&&(g=function(se){return read(se)}),T=function(se){var Ae;return typeof readbuffer=="function"?new Uint8Array(readbuffer(se)):(Ae=read(se,"binary"),B(typeof Ae=="object"),Ae)},typeof scriptArgs!="undefined"?i=scriptArgs:typeof arguments!="undefined"&&(i=arguments),typeof quit=="function"&&(l=function(ee){quit(ee)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(p||c)&&(c?d=self.location.href:typeof document!="undefined"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.lastIndexOf("/")+1):d="",g=function(ee){var se=new XMLHttpRequest;return se.open("GET",ee,!1),se.send(null),se.responseText},c&&(T=function(ee){var se=new XMLHttpRequest;return se.open("GET",ee,!1),se.responseType="arraybuffer",se.send(null),new Uint8Array(se.response)}),y=function(ee,se,Ae){var yt=new XMLHttpRequest;yt.open("GET",ee,!0),yt.responseType="arraybuffer",yt.onload=function(){if(yt.status==200||yt.status==0&&yt.response){se(yt.response);return}Ae()},yt.onerror=Ae,yt.send(null)},x=function(ee){document.title=ee});var N=t.print||console.log.bind(console),A=t.printErr||console.warn.bind(console);for(a in s)s.hasOwnProperty(a)&&(t[a]=s[a]);s=null,t.arguments&&(i=t.arguments),t.thisProgram&&(u=t.thisProgram),t.quit&&(l=t.quit);var F;t.wasmBinary&&(F=t.wasmBinary);var E=t.noExitRuntime||!0;typeof WebAssembly!="object"&&js("no native wasm support detected");var $,U=!1,K;function B(ee,se){ee||js("Assertion failed: "+se)}function V(ee){var se=t["_"+ee];return B(se,"Cannot call unknown function "+ee+", make sure it is exported"),se}function j(ee,se,Ae,yt,pr){var rr={string:function(On){var Su=0;if(On!=null&&On!==0){var Wg=(On.length<<2)+1;Su=Xm(Wg),re(On,Su,Wg)}return Su},array:function(On){var Su=Xm(On.length);return me(On,Su),Su}};function ut(On){return se==="string"?Q(On):se==="boolean"?Boolean(On):On}var pt=V(ee),Gr=[],Ti=0;if(yt)for(var ki=0;ki<yt.length;ki++){var Gg=rr[Ae[ki]];Gg?(Ti===0&&(Ti=Og()),Gr[ki]=Gg(yt[ki])):Gr[ki]=yt[ki]}var Qm=pt.apply(null,Gr);return Qm=ut(Qm),Ti!==0&&zg(Ti),Qm}function q(ee,se,Ae,yt){Ae=Ae||[];var pr=Ae.every(function(ut){return ut==="number"}),rr=se!=="string";return rr&&pr&&!yt?V(ee):function(){return j(ee,se,Ae,arguments,yt)}}var J=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function Y(ee,se,Ae){for(var yt=se+Ae,pr=se;ee[pr]&&!(pr>=yt);)++pr;if(pr-se>16&&ee.subarray&&J)return J.decode(ee.subarray(se,pr));for(var rr="";se<pr;){var ut=ee[se++];if(!(ut&128)){rr+=String.fromCharCode(ut);continue}var pt=ee[se++]&63;if((ut&224)==192){rr+=String.fromCharCode((ut&31)<<6|pt);continue}var Gr=ee[se++]&63;if((ut&240)==224?ut=(ut&15)<<12|pt<<6|Gr:ut=(ut&7)<<18|pt<<12|Gr<<6|ee[se++]&63,ut<65536)rr+=String.fromCharCode(ut);else{var Ti=ut-65536;rr+=String.fromCharCode(55296|Ti>>10,56320|Ti&1023)}}return rr}function Q(ee,se){return ee?Y(ke,ee,se):""}function oe(ee,se,Ae,yt){if(!(yt>0))return 0;for(var pr=Ae,rr=Ae+yt-1,ut=0;ut<ee.length;++ut){var pt=ee.charCodeAt(ut);if(pt>=55296&&pt<=57343){var Gr=ee.charCodeAt(++ut);pt=65536+((pt&1023)<<10)|Gr&1023}if(pt<=127){if(Ae>=rr)break;se[Ae++]=pt}else if(pt<=2047){if(Ae+1>=rr)break;se[Ae++]=192|pt>>6,se[Ae++]=128|pt&63}else if(pt<=65535){if(Ae+2>=rr)break;se[Ae++]=224|pt>>12,se[Ae++]=128|pt>>6&63,se[Ae++]=128|pt&63}else{if(Ae+3>=rr)break;se[Ae++]=240|pt>>18,se[Ae++]=128|pt>>12&63,se[Ae++]=128|pt>>6&63,se[Ae++]=128|pt&63}}return se[Ae]=0,Ae-pr}function re(ee,se,Ae){return oe(ee,ke,se,Ae)}function me(ee,se){le.set(ee,se)}function ae(ee,se){return ee%se>0&&(ee+=se-ee%se),ee}var xe,le,ke,Ne,Be,Re,We,rt,gt;function Ct(ee){xe=ee,t.HEAP8=le=new Int8Array(ee),t.HEAP16=Ne=new Int16Array(ee),t.HEAP32=Re=new Int32Array(ee),t.HEAPU8=ke=new Uint8Array(ee),t.HEAPU16=Be=new Uint16Array(ee),t.HEAPU32=We=new Uint32Array(ee),t.HEAPF32=rt=new Float32Array(ee),t.HEAPF64=gt=new Float64Array(ee)}var Bt=t.INITIAL_MEMORY||16777216,Dt,Je=[],Ot=[],qt=[],$n=[],gr=!1;Ot.push({func:function(){_g()}});function Jn(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)Pr(t.preRun.shift());ts(Je)}function zr(){gr=!0,ts(Ot)}function Vs(){ts(qt)}function nn(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)eo(t.postRun.shift());ts($n)}function Pr(ee){Je.unshift(ee)}function eo(ee){$n.unshift(ee)}var br=0,kn=null,Bn=null;function hl(ee){br++,t.monitorRunDependencies&&t.monitorRunDependencies(br)}function gl(ee){if(br--,t.monitorRunDependencies&&t.monitorRunDependencies(br),br==0&&(kn!==null&&(clearInterval(kn),kn=null),Bn)){var se=Bn;Bn=null,se()}}t.preloadedImages={},t.preloadedAudios={};function js(ee){t.onAbort&&t.onAbort(ee),ee+="",A(ee),U=!0,K=1,ee="abort("+ee+"). Build with -s ASSERTIONS=1 for more info.";var se=new WebAssembly.RuntimeError(ee);throw o(se),se}function yi(ee,se){return String.prototype.startsWith?ee.startsWith(se):ee.indexOf(se)===0}var Um="data:application/octet-stream;base64,";function $p(ee){return yi(ee,Um)}var Ig="file://";function Cg(ee){return yi(ee,Ig)}var In="tfjs-backend-wasm.wasm";$p(In)||(In=h(In));function vg(ee){try{if(ee==In&&F)return new Uint8Array(F);if(T)return T(ee);throw"both async and sync fetching of the wasm failed"}catch(se){js(se)}}function Hx(){if(!F&&(p||c)){if(typeof fetch=="function"&&!Cg(In))return fetch(In,{credentials:"same-origin"}).then(function(ee){if(!ee.ok)throw"failed to load wasm binary file at '"+In+"'";return ee.arrayBuffer()}).catch(function(){return vg(In)});if(y)return new Promise(function(ee,se){y(In,function(Ae){ee(new Uint8Array(Ae))},se)})}return Promise.resolve().then(function(){return vg(In)})}function qx(){var ee={a:Cn};function se(ut,pt){var Gr=ut.exports;t.asm=Gr,$=t.asm.h,Ct($.buffer),Dt=t.asm.Sa,gl("wasm-instantiate")}hl("wasm-instantiate");function Ae(ut){se(ut.instance)}function yt(ut){return Hx().then(function(pt){return WebAssembly.instantiate(pt,ee)}).then(ut,function(pt){A("failed to asynchronously prepare wasm: "+pt),js(pt)})}function pr(){return!F&&typeof WebAssembly.instantiateStreaming=="function"&&!$p(In)&&!Cg(In)&&typeof fetch=="function"?fetch(In,{credentials:"same-origin"}).then(function(ut){var pt=WebAssembly.instantiateStreaming(ut,ee);return pt.then(Ae,function(Gr){return A("wasm streaming compile failed: "+Gr),A("falling back to ArrayBuffer instantiation"),yt(Ae)})}):yt(Ae)}if(t.instantiateWasm)try{var rr=t.instantiateWasm(ee,se);return rr}catch(ut){return A("Module.instantiateWasm callback failed with error: "+ut),!1}return pr().catch(o),{}}function ts(ee){for(;ee.length>0;){var se=ee.shift();if(typeof se=="function"){se(t);continue}var Ae=se.func;typeof Ae=="number"?se.arg===void 0?Dt.get(Ae)():Dt.get(Ae)(se.arg):Ae(se.arg===void 0?null:se.arg)}}function Km(){js()}function bl(ee,se,Ae){ke.copyWithin(ee,se,se+Ae)}function Xx(){return ke.length}function Yx(ee){try{return $.grow(ee-xe.byteLength+65535>>>16),Ct($.buffer),1}catch{}}function xi(ee){var se=Xx(),Ae=2147483648;if(ee>Ae)return!1;for(var yt=1;yt<=4;yt*=2){var pr=se*(1+.2/yt);pr=Math.min(pr,ee+100663296);var rr=Math.min(Ae,ae(Math.max(ee,pr),65536)),ut=Yx(rr);if(ut)return!0}return!1}var yl={mappings:{},buffers:[null,[],[]],printChar:function(ee,se){var Ae=yl.buffers[ee];se===0||se===10?((ee===1?N:A)(Y(Ae,0)),Ae.length=0):Ae.push(se)},varargs:void 0,get:function(){yl.varargs+=4;var ee=Re[yl.varargs-4>>2];return ee},getStr:function(ee){var se=Q(ee);return se},get64:function(ee,se){return ee}};function Qx(ee){return 0}function wg(ee,se,Ae,yt,pr){}function Zx(ee,se,Ae,yt){for(var pr=0,rr=0;rr<Ae;rr++){for(var ut=Re[se+rr*8>>2],pt=Re[se+(rr*8+4)>>2],Gr=0;Gr<pt;Gr++)yl.printChar(ee,ke[ut+Gr]);pr+=pt}return Re[yt>>2]=pr,0}function Sg(){return 28}var Cn={a:Km,d:bl,e:xi,f:Qx,c:wg,b:Zx,g:Sg},Jx=qx(),_g=t.___wasm_call_ctors=function(){return(_g=t.___wasm_call_ctors=t.asm.i).apply(null,arguments)},eT=t._init=function(){return(eT=t._init=t.asm.j).apply(null,arguments)},Ag=t._init_with_threads_count=function(){return(Ag=t._init_with_threads_count=t.asm.k).apply(null,arguments)},tT=t._get_threads_count=function(){return(tT=t._get_threads_count=t.asm.l).apply(null,arguments)},Bp=t._register_tensor=function(){return(Bp=t._register_tensor=t.asm.m).apply(null,arguments)},Cu=t._dispose_data=function(){return(Cu=t._dispose_data=t.asm.n).apply(null,arguments)},Vm=t._dispose=function(){return(Vm=t._dispose=t.asm.o).apply(null,arguments)},rT=t._Abs=function(){return(rT=t._Abs=t.asm.p).apply(null,arguments)},nT=t._Add=function(){return(nT=t._Add=t.asm.q).apply(null,arguments)},Ng=t._AddN=function(){return(Ng=t._AddN=t.asm.r).apply(null,arguments)},Me=t._All=function(){return(Me=t._All=t.asm.s).apply(null,arguments)},oT=t._Any=function(){return(oT=t._Any=t.asm.t).apply(null,arguments)},sT=t._ArgMax=function(){return(sT=t._ArgMax=t.asm.u).apply(null,arguments)},aT=t._AvgPool=function(){return(aT=t._AvgPool=t.asm.v).apply(null,arguments)},iT=t._BatchMatMul=function(){return(iT=t._BatchMatMul=t.asm.w).apply(null,arguments)},uT=t._Ceil=function(){return(uT=t._Ceil=t.asm.x).apply(null,arguments)},xl=t._ClipByValue=function(){return(xl=t._ClipByValue=t.asm.y).apply(null,arguments)},lT=t._Conv2D=function(){return(lT=t._Conv2D=t.asm.z).apply(null,arguments)},pT=t._Conv2DBackpropInput=function(){return(pT=t._Conv2DBackpropInput=t.asm.A).apply(null,arguments)},cT=t._Cos=function(){return(cT=t._Cos=t.asm.B).apply(null,arguments)},mT=t._Cosh=function(){return(mT=t._Cosh=t.asm.C).apply(null,arguments)},fT=t._CropAndResize=function(){return(fT=t._CropAndResize=t.asm.D).apply(null,arguments)},dT=t._Cumsum=function(){return(dT=t._Cumsum=t.asm.E).apply(null,arguments)},Dg=t._DepthToSpace=function(){return(Dg=t._DepthToSpace=t.asm.F).apply(null,arguments)},hT=t._DepthwiseConv2dNative=function(){return(hT=t._DepthwiseConv2dNative=t.asm.G).apply(null,arguments)},gT=t._Elu=function(){return(gT=t._Elu=t.asm.H).apply(null,arguments)},vu=t._Equal=function(){return(vu=t._Equal=t.asm.I).apply(null,arguments)},jm=t._Exp=function(){return(jm=t._Exp=t.asm.J).apply(null,arguments)},Hm=t._FlipLeftRight=function(){return(Hm=t._FlipLeftRight=t.asm.K).apply(null,arguments)},bT=t._Floor=function(){return(bT=t._Floor=t.asm.L).apply(null,arguments)},yT=t._FloorDiv=function(){return(yT=t._FloorDiv=t.asm.M).apply(null,arguments)},xT=t._FusedBatchNorm=function(){return(xT=t._FusedBatchNorm=t.asm.N).apply(null,arguments)},TT=t._FusedConv2D=function(){return(TT=t._FusedConv2D=t.asm.O).apply(null,arguments)},kT=t._FusedDepthwiseConv2D=function(){return(kT=t._FusedDepthwiseConv2D=t.asm.P).apply(null,arguments)},ot=t._Gather=function(){return(ot=t._Gather=t.asm.Q).apply(null,arguments)},IT=t._GatherNd=function(){return(IT=t._GatherNd=t.asm.R).apply(null,arguments)},CT=t._Greater=function(){return(CT=t._Greater=t.asm.S).apply(null,arguments)},vT=t._GreaterEqual=function(){return(vT=t._GreaterEqual=t.asm.T).apply(null,arguments)},wT=t._LeakyRelu=function(){return(wT=t._LeakyRelu=t.asm.U).apply(null,arguments)},ST=t._Less=function(){return(ST=t._Less=t.asm.V).apply(null,arguments)},_T=t._LessEqual=function(){return(_T=t._LessEqual=t.asm.W).apply(null,arguments)},qm=t._Log=function(){return(qm=t._Log=t.asm.X).apply(null,arguments)},Pg=t._LogicalAnd=function(){return(Pg=t._LogicalAnd=t.asm.Y).apply(null,arguments)},Fg=t._Max=function(){return(Fg=t._Max=t.asm.Z).apply(null,arguments)},AT=t._MaxPool=function(){return(AT=t._MaxPool=t.asm._).apply(null,arguments)},NT=t._Maximum=function(){return(NT=t._Maximum=t.asm.$).apply(null,arguments)},DT=t._Mean=function(){return(DT=t._Mean=t.asm.aa).apply(null,arguments)},PT=t._Min=function(){return(PT=t._Min=t.asm.ba).apply(null,arguments)},FT=t._Minimum=function(){return(FT=t._Minimum=t.asm.ca).apply(null,arguments)},MT=t._MirrorPad=function(){return(MT=t._MirrorPad=t.asm.da).apply(null,arguments)},ET=t._Multiply=function(){return(ET=t._Multiply=t.asm.ea).apply(null,arguments)},vt=t._Neg=function(){return(vt=t._Neg=t.asm.fa).apply(null,arguments)},RT=t._NonMaxSuppressionV3=function(){return(RT=t._NonMaxSuppressionV3=t.asm.ga).apply(null,arguments)},LT=t._NonMaxSuppressionV4=function(){return(LT=t._NonMaxSuppressionV4=t.asm.ha).apply(null,arguments)},$T=t._NonMaxSuppressionV5=function(){return($T=t._NonMaxSuppressionV5=t.asm.ia).apply(null,arguments)},Op=t._NotEqual=function(){return(Op=t._NotEqual=t.asm.ja).apply(null,arguments)},Mg=t._OneHot=function(){return(Mg=t._OneHot=t.asm.ka).apply(null,arguments)},Eg=t._PadV2=function(){return(Eg=t._PadV2=t.asm.la).apply(null,arguments)},Rg=t._Pow=function(){return(Rg=t._Pow=t.asm.ma).apply(null,arguments)},BT=t._Prelu=function(){return(BT=t._Prelu=t.asm.na).apply(null,arguments)},OT=t._Prod=function(){return(OT=t._Prod=t.asm.oa).apply(null,arguments)},Lg=t._RealDiv=function(){return(Lg=t._RealDiv=t.asm.pa).apply(null,arguments)},zT=t._Relu=function(){return(zT=t._Relu=t.asm.qa).apply(null,arguments)},GT=t._Relu6=function(){return(GT=t._Relu6=t.asm.ra).apply(null,arguments)},WT=t._ResizeBilinear=function(){return(WT=t._ResizeBilinear=t.asm.sa).apply(null,arguments)},UT=t._Reverse=function(){return(UT=t._Reverse=t.asm.ta).apply(null,arguments)},KT=t._RotateWithOffset=function(){return(KT=t._RotateWithOffset=t.asm.ua).apply(null,arguments)},$g=t._Round=function(){return($g=t._Round=t.asm.va).apply(null,arguments)},wu=t._Rsqrt=function(){return(wu=t._Rsqrt=t.asm.wa).apply(null,arguments)},VT=t._ScatterNd=function(){return(VT=t._ScatterNd=t.asm.xa).apply(null,arguments)},jT=t._SelectV2=function(){return(jT=t._SelectV2=t.asm.ya).apply(null,arguments)},_N=t._Sigmoid=function(){return(_N=t._Sigmoid=t.asm.za).apply(null,arguments)},Bg=t._Sin=function(){return(Bg=t._Sin=t.asm.Aa).apply(null,arguments)},HT=t._Softmax=function(){return(HT=t._Softmax=t.asm.Ba).apply(null,arguments)},qT=t._Sqrt=function(){return(qT=t._Sqrt=t.asm.Ca).apply(null,arguments)},XT=t._Square=function(){return(XT=t._Square=t.asm.Da).apply(null,arguments)},YT=t._SquaredDifference=function(){return(YT=t._SquaredDifference=t.asm.Ea).apply(null,arguments)},QT=t._Step=function(){return(QT=t._Step=t.asm.Fa).apply(null,arguments)},ZT=t._StridedSlice=function(){return(ZT=t._StridedSlice=t.asm.Ga).apply(null,arguments)},JT=t._Sub=function(){return(JT=t._Sub=t.asm.Ha).apply(null,arguments)},ek=t._Sum=function(){return(ek=t._Sum=t.asm.Ia).apply(null,arguments)},tk=t._Tan=function(){return(tk=t._Tan=t.asm.Ja).apply(null,arguments)},rk=t._Tanh=function(){return(rk=t._Tanh=t.asm.Ka).apply(null,arguments)},nk=t._Tile=function(){return(nk=t._Tile=t.asm.La).apply(null,arguments)},ok=t._TopK=function(){return(ok=t._TopK=t.asm.Ma).apply(null,arguments)},sk=t._Transform=function(){return(sk=t._Transform=t.asm.Na).apply(null,arguments)},ak=t._Transpose=function(){return(ak=t._Transpose=t.asm.Oa).apply(null,arguments)},ik=t.__FusedMatMul=function(){return(ik=t.__FusedMatMul=t.asm.Pa).apply(null,arguments)},uk=t._malloc=function(){return(uk=t._malloc=t.asm.Qa).apply(null,arguments)},lk=t._free=function(){return(lk=t._free=t.asm.Ra).apply(null,arguments)},Og=t.stackSave=function(){return(Og=t.stackSave=t.asm.Ta).apply(null,arguments)},zg=t.stackRestore=function(){return(zg=t.stackRestore=t.asm.Ua).apply(null,arguments)},Xm=t.stackAlloc=function(){return(Xm=t.stackAlloc=t.asm.Va).apply(null,arguments)};t.cwrap=q;var zp;function pk(ee){this.name="ExitStatus",this.message="Program terminated with exit("+ee+")",this.status=ee}Bn=function ee(){zp||Ym(),zp||(Bn=ee)};function Ym(ee){if(ee=ee||i,br>0||(Jn(),br>0))return;function se(){zp||(zp=!0,t.calledRun=!0,!U&&(zr(),Vs(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),nn()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),se()},1)):se()}if(t.run=Ym,t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();return Ym(),e.ready}}();typeof Kx=="object"&&typeof CN=="object"?CN.exports=IN:typeof define=="function"&&define.amd?define([],function(){return IN}):typeof Kx=="object"&&(Kx.WasmBackendModule=IN)});var _j=1e-7,Aj=1e-4,Wa=class{constructor(e,t){this.backend=e;this.dataMover=t;this.data=new WeakMap;this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},ns=class{refCount(e){return os("refCount")}incRef(e){return os("incRef")}timerAvailable(){return!0}time(e){return os("time")}read(e){return os("read")}readSync(e){return os("readSync")}numDataIds(){return os("numDataIds")}disposeData(e,t){return os("disposeData")}write(e,t,n){return os("write")}move(e,t,n,o,s){return os("move")}memory(){return os("memory")}floatPrecision(){return os("floatPrecision")}epsilon(){return this.floatPrecision()===32?_j:Aj}dispose(){return os("dispose")}};function os(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function GN(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,jg(r,e,t)}function Nj(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,jg(r,t,n),jg(e,t,n)}function jp(r,e,t){return Math.max(r,Math.min(e,t))}function Dj(r){return r%2==0?r:r+1}function jg(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function Pj(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function Fj(r,e){let t=Math.random();return e*t+(1-t)*r}function Mj(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function P(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Ut(r,e,t=""){P(zn(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function to(r){P(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Hs(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||kr(r)&&!t)for(let n=0;n<r.length;++n)Hs(r[n],e,t);else e.push(r);return e}function ct(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function Ej(r){return r.length===0}function zn(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function mt(r){return r%1==0}function Rj(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function Lj(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function $j(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return GN(e),e}function Il(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function Bj(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=e(s);if(t!=null&&s>=t){o();return}setTimeout(a,i)};a()})}function Oj(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function yr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),P(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),P(r.every(n=>mt(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function dk(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:yr(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function hk(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function gk(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function bk(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function yk(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function zj(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function kr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function Hg(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function xk(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function qs(r){return typeof r=="string"||r instanceof String}function WN(r){return typeof r=="boolean"}function UN(r){return typeof r=="number"}function Hp(r){return Array.isArray(r)?Hp(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":UN(r)?"float32":qs(r)?"string":WN(r)?"bool":"float32"}function Ua(r){return!!(r&&r.constructor&&r.call&&r.apply)}function qp(r,e){for(let t=e;t<r;++t)if(r%t==0)return t;return r}function Ka(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function KN(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=t[r+a]}else{let s=e[0],a=e.slice(1),i=a.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=KN(r+u*i,a,t,n)}return o}function Cl(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return KN(0,r,e,t)}function tf(r,e){let t=Xp(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function Xp(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function Gj(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return Cl(r,new Float32Array(t));if(e==="int32")return Cl(r,new Int32Array(t));if(e==="bool")return Cl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function rf(r){r.forEach(e=>{P(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function Wj(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function Uj(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function nf(r){return r&&r.then&&typeof r.then=="function"}var VN="tfjsflags",qg=class{constructor(e){this.global=e;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=Kj;this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(nf(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);VN in e&&e[VN].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=jj(o,s)})}};function Kj(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(Vj(e,n[0],n[1]),n.join("="))),e}function Vj(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function jj(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function G(){return Tk}var Tk=null;function jN(r){Tk=r}var kk;function Ik(){if(kk==null){let r;if(typeof window!="undefined")r=window;else if(typeof global!="undefined")r=global;else if(typeof process!="undefined")r=process;else if(typeof self!="undefined")r=self;else throw new Error("Could not find a global object");kk=r}return kk}function Hj(){let r=Ik();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function of(r,e){let t=Hj();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var ss="Abs",Ii="Acos",Ci="Acosh",wn="Add",ro="AddN",vi="All",wi="Any",no="ArgMax",Va="ArgMin",Si="Asin",_i="Asinh",Ai="Atan",Ni="Atanh",Di="Atan2",oo="AvgPool",Yp="AvgPoolGrad",Nu="AvgPool3D",Qp="AvgPool3DGrad",so="BatchMatMul",as="BatchToSpaceND",Zp="Bincount",HN="BroadcastTo",Jp="BroadcastArgs",Gn="Cast",ao="Ceil",Wn="ClipByValue",Du="Complex",Pu="ComplexAbs",is="Concat",io="Conv2D",ec="Conv2DBackpropFilter",uo="Conv2DBackpropInput",Fu="Conv3D",tc="Conv3DBackpropFilterV2",rc="Conv3DBackpropInputV2",lo="Cos",po="Cosh",Xs="Cumsum",Ys="CropAndResize",nc="DenseBincount",Qs="DepthToSpace",co="DepthwiseConv2dNative",oc="DepthwiseConv2dNativeBackpropFilter",sc="DepthwiseConv2dNativeBackpropInput",ac="Diag",Mu="Dilation2D",sf="Dilation2DBackpropInput",af="Dilation2DBackpropFilter",mo="RealDiv",Eu="Einsum",fo="Elu",ic="EluGrad",Pi="Erf",Zs="Equal",ho="Exp",us="ExpandDims",Js="Expm1",uc="FFT",ja="Fill",ea="FlipLeftRight",go="Floor",bo="FloorDiv",yo="FusedBatchNorm",ls="GatherV2",ta="GatherNd",ra="Greater",xo="GreaterEqual",Un="Identity",lc="IFFT",Ru="Imag",Fi="IsFinite",Mi="IsInf",Ei="IsNan",na="LeakyRelu",oa="Less",sa="LessEqual",pc="LinSpace",To="Log",Ri="Log1p",aa="LogicalAnd",Li="LogicalNot",vl="LogicalOr",qN="LogSoftmax",Lu="LRN",cc="LRNGrad",ko="Max",Io="Maximum",Co="MaxPool",mc="MaxPoolGrad",$u="MaxPool3D",fc="MaxPool3DGrad",dc="MaxPoolWithArgmax",vo="Mean",wo="Min",So="Minimum",_o="MirrorPad",$i="Mod",hc="Multinomial",Ao="Multiply",ps="Neg",ia="NotEqual",ua="NonMaxSuppressionV3",Bi="NonMaxSuppressionV4",la="NonMaxSuppressionV5",cs="OnesLike",pa="OneHot",ms="Pack",No="PadV2",ame="Pool",Do="Pow",Po="Prelu",ca="Prod",Ha="Range",Bu="Real",Oi="Reciprocal",Fo="Relu",fs="Reshape",qa="ResizeNearestNeighbor",gc="ResizeNearestNeighborGrad",Mo="ResizeBilinear",bc="ResizeBilinearGrad",Eo="Relu6",ma="Reverse",fa="Round",Ro="Rsqrt",da="ScatterNd",ds="Select",zi="Selu",hs="Slice",Lo="Sin",ha="Sinh",Gi="Sign",$o="Sigmoid",Wi="Softplus",Bo="Sqrt",Oo="Sum",gs="SpaceToBatchND",bs="SplitV",zo="Softmax",yc="SparseFillEmptyRows",xc="SparseReshape",Tc="SparseSegmentMean",kc="SparseSegmentSum",Ou="SparseToDense",Go="SquaredDifference",Xa="Square",ga="StridedSlice",zu="StringNGrams",Ic="StringSplit",Cc="StringToHashBucketFast",Wo="Sub",ba="Tan",Uo="Tanh",Sn="Tile",ya="TopK",xa="Transform",Ko="Transpose",vc="Unique",ys="Unpack",Gu="UnsortedSegmentSum",xs="ZerosLike",Ts="Step",wl="FromPixels",Ta="RotateWithOffset",ks="_FusedMatMul",Is="FusedConv2D",Cs="FusedDepthwiseConv2D";function Ya(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(...r)}function qj(...r){G().getBool("IS_TEST")||G().getBool("PROD")||console.log(...r)}var wc=of("kernelRegistry",()=>new Map),uf=of("gradRegistry",()=>new Map);function lf(r,e){let t=vk(r,e);return wc.get(t)}function Ck(r){return uf.get(r)}function Xg(r){let e=wc.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function Ui(r){let{kernelName:e,backendName:t}=r,n=vk(e,t);wc.has(n)&&Ya(`The kernel '${e}' for backend '${t}' is already registered`),wc.set(n,r)}function XN(r){let{kernelName:e}=r;uf.has(e)&&G().getBool("DEBUG")&&Ya(`Overriding the gradient for '${e}'`),uf.set(e,r)}function fme(r,e){let t=vk(r,e);if(!wc.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);wc.delete(t)}function dme(r){if(!uf.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);uf.delete(r)}function hme(r,e){Xg(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});Ui(o)})}function vk(r,e){return`${e}_${r}`}var b={};Ye(b,{arraysEqual:()=>zn,assert:()=>P,assertNonNegativeIntegerDimensions:()=>rf,assertNonNull:()=>to,assertShapesMatch:()=>Ut,bytesFromStringArray:()=>xk,bytesPerElement:()=>Hg,checkConversionForErrors:()=>bk,clamp:()=>jp,computeStrides:()=>Ka,createScalarValue:()=>tH,createShuffledIndices:()=>$j,decodeString:()=>Nc,distSquared:()=>Mj,encodeString:()=>Uu,fetch:()=>nH,fingerPrint64:()=>eH,flatten:()=>Hs,getArrayFromDType:()=>gk,getTypedArrayFromDType:()=>hk,hasEncodingLoss:()=>zj,hexToLong:()=>pf,indexToLoc:()=>Uj,inferDtype:()=>Hp,inferFromImplicitShape:()=>Oj,isBoolean:()=>WN,isFunction:()=>Ua,isInt:()=>mt,isNumber:()=>UN,isPromise:()=>nf,isScalarShape:()=>Ej,isString:()=>qs,isTypedArray:()=>kr,isValidDtype:()=>yk,locToIndex:()=>Wj,makeOnesTypedArray:()=>tf,makeZerosNestedTypedArray:()=>Gj,makeZerosTypedArray:()=>Xp,nearestDivisor:()=>qp,nearestLargerEven:()=>Dj,now:()=>Dl,parseAxisParam:()=>yr,randUniform:()=>Fj,repeatedTry:()=>Bj,rightPad:()=>Il,shuffle:()=>GN,shuffleCombo:()=>Nj,sizeFromShape:()=>ct,sizeToSquarishShape:()=>Lj,squeezeShape:()=>dk,sum:()=>Pj,swap:()=>jg,tanh:()=>Rj,toNestedArray:()=>Cl,toTypedArray:()=>Ac});var iD=kl(aD());var Al=iD.default||iD;function pf(r){return Al.fromString(r,!0,16)}var uD=pf("c3a5c85c97cb3127"),Nl=pf("b492b66fbe98f273"),sn=pf("9ae16a3b2f90404f");function _k(r){return r.xor(r.shru(47))}function lD(r,e,t){let n=r.slice(e,e+t);return Al.fromBytes(Array.from(n),!0,!0)}function Xt(r,e){return lD(r,e,8)}function pD(r,e){return lD(r,e,4)}function Mr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Wu(r,e,t=pf("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function Yj(r,e,t,n,o,s){o=o.add(r),s=Mr(s.add(o).add(n),21);let a=o;return o=o.add(e),o=o.add(t),s=s.add(Mr(o,44)),[o.add(n),s.add(a)]}function Qg(r,e,t,n){return Yj(Xt(r,e),Xt(r,e+8),Xt(r,e+16),Xt(r,e+24),t,n)}function Qj(r,e=r.length){if(e>=8){let t=sn.add(e*2),n=Xt(r,0).add(sn),o=Xt(r,e-8),s=Mr(o,37).mul(t).add(n),a=Mr(n,25).add(o).mul(t);return Wu(s,a,t)}if(e>=4){let t=sn.add(e*2),n=pD(r,0);return Wu(n.shl(3).add(e),pD(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),a=e+(o<<2);return _k(sn.mul(s).xor(uD.mul(a))).mul(sn)}return sn}function Zj(r,e=r.length){let t=sn.add(e*2),n=Xt(r,0).mul(Nl),o=Xt(r,8),s=Xt(r,e-8).mul(t),a=Xt(r,e-16).mul(sn);return Wu(Mr(n.add(o),43).add(Mr(s,30)).add(a),n.add(Mr(o.add(sn),18)).add(s),t)}function Jj(r,e=r.length){let t=sn.add(e*2),n=Xt(r,0).mul(sn),o=Xt(r,8),s=Xt(r,e-8).mul(t),a=Xt(r,e-16).mul(sn),i=Mr(n.add(o),43).add(Mr(s,30)).add(a),u=Wu(i,n.add(Mr(o.add(sn),18)).add(s),t),l=Xt(r,16).mul(t),p=Xt(r,24),c=i.add(Xt(r,e-32)).mul(t),m=u.add(Xt(r,e-24)).mul(t);return Wu(Mr(l.add(p),43).add(Mr(c,30)).add(m),l.add(Mr(p.add(n),18)).add(c),t)}function eH(r,e=r.length){let t=Al.fromNumber(81,!0);if(e<=32)return e<=16?Qj(r,e):Zj(r,e);if(e<=64)return Jj(r,e);let n=t,o=t.mul(Nl).add(113),s=_k(o.mul(sn).add(113)).mul(sn),a=[Al.UZERO,Al.UZERO],i=[Al.UZERO,Al.UZERO];n=n.mul(sn).add(Xt(r,0));let u=0,l=(e-1>>6)*64,p=l+(e-1&63)-63;do n=Mr(n.add(o).add(a[0]).add(Xt(r,u+8)),37).mul(Nl),o=Mr(o.add(a[1]).add(Xt(r,u+48)),42).mul(Nl),n=n.xor(i[1]),o=o.add(a[0]).add(Xt(r,u+40)),s=Mr(s.add(i[0]),33).mul(Nl),a=Qg(r,u,a[1].mul(Nl),n.add(i[0])),i=Qg(r,u+32,s.add(i[1]),o.add(Xt(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let c=Nl.add(s.and(255).shl(1));return u=p,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Mr(n.add(o).add(a[0]).add(Xt(r,u+8)),37).mul(c),o=Mr(o.add(a[1]).add(Xt(r,u+48)),42).mul(c),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(Xt(r,u+40))),s=Mr(s.add(i[0]),33).mul(c),a=Qg(r,u,a[1].mul(c),n.add(i[0])),i=Qg(r,u+32,s.add(i[1]),o.add(Xt(r,u+16))),[s,n]=[n,s],Wu(Wu(a[0],i[0],c).add(_k(o).mul(uD)).add(s),Wu(a[1],i[1],c).add(n),c)}function tH(r,e){return e==="string"?Uu(r):Ac([r],e)}function rH(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Ac(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Hs(r)),G().getBool("DEBUG")&&bk(r,e),rH(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Dl(){return G().platform.now()}function nH(r,e){return G().platform.fetch(r,e)}function Uu(r,e="utf-8"){return e=e||"utf-8",G().platform.encode(r,e)}function Nc(r,e="utf-8"){return e=e||"utf-8",G().platform.decode(r,e)}var Ak=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new cD)}profileKernel(e,t,n){let o,s=()=>{o=n()},a,i=Dl();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();a=Promise.resolve({kernelMs:Dl()-i})}if(G().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let p=o[l];p.data().then(c=>{oH(c,p.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],s,u[2])})})}};function oH(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var cD=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?Il(`${o}ms`,9):o.error,u=Il(e,25),l=t.rank,p=t.size,c=Il(t.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let h=d.shape||t.shape,g=h.length;m+=`${f}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${i}	%c${l}D ${c}	%c${p}	%c${m}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function mD(r,e,t){let n={},o={};for(let u=0;u<e.length;u++)n[e[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],p=l.inputs;for(let c in p){let m=p[c],f=!1;for(let d=0;d<e.length;d++)if(n[m.id]){l.outputs.forEach(h=>n[h.id]=!0),f=!0,o[l.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let a={};for(let u=r.length-1;u>=0;u--){let l=r[u],p=l.inputs;for(let c=0;c<l.outputs.length;c++)if(s[l.outputs[c].id]){for(let m in p)s[p[m].id]=!0,a[l.id]=!0;break}}let i=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&a[l.id]){let p={};for(let m in l.inputs){let f=l.inputs[m];n[f.id]&&(p[m]=f)}let c=Object.assign({},l);c.inputs=p,c.outputs=l.outputs,i.push(c)}}return i}function fD(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?a.push(l):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let u in s.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);let l=t(()=>i[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let p=s.inputs[u];if(!zn(l.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${p.shape}'`);if(r[p.id]==null)r[p.id]=l;else{let c=r[p.id];r[p.id]=n(c,l),c.dispose()}}}}var dD=20,cf=3,Nk=7;function hD(r,e,t,n){let o=Ka(e),s=sH(r,e,t,o),a=e.length,i=Zg(r,e,t,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(l=>"    "+l).join(`
`)),u.join(`
`)}function sH(r,e,t,n){let o=ct(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,u=t==="complex64"?ff(r):r;if(i>1)for(let l=0;l<o/s;l++){let p=l*s;for(let c=0;c<s;c++)a[c]=Math.max(a[c],mf(u[p+c],0,t).length)}return a}function mf(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(Nk))} + ${parseFloat(r[1].toFixed(Nk))}j`:qs(r)?n=`'${r}'`:t==="bool"?n=gD(r):n=parseFloat(r.toFixed(Nk)).toString(),Il(n,e)}function gD(r){return r===0?"false":"true"}function Zg(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){let h=ff(r);return[mf(h[0],0,t)]}return t==="bool"?[gD(r[0])]:[r[0].toString()]}if(u===1){if(i>dD){let g=cf*a,y=Array.from(r.slice(0,g)),T=Array.from(r.slice((i-cf)*a,i*a));return t==="complex64"&&(y=ff(y),T=ff(T)),["["+y.map((x,k)=>mf(x,o[k],t)).join(", ")+", ..., "+T.map((x,k)=>mf(x,o[i-cf+k],t)).join(", ")+"]"]}let h=t==="complex64"?ff(r):Array.from(r);return["["+h.map((g,y)=>mf(g,o[y],t)).join(", ")+"]"]}let l=e.slice(1),p=n.slice(1),c=n[0]*a,m=[];if(i>dD){for(let h=0;h<cf;h++){let g=h*c,y=g+c;m.push(...Zg(r.slice(g,y),l,t,p,o,!1))}m.push("...");for(let h=i-cf;h<i;h++){let g=h*c,y=g+c;m.push(...Zg(r.slice(g,y),l,t,p,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*c,y=g+c;m.push(...Zg(r.slice(g,y),l,t,p,o,h===i-1))}let f=u===2?",":"";m[0]="["+m[0]+f;for(let h=1;h<m.length-1;h++)m[h]=" "+m[h]+f;let d=`,
`;for(let h=2;h<u;h++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function ff(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var xt=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=ct(e),n!=null){let o=n.length;P(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||gk(t,this.size),this.strides=Ka(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Qa().makeTensor(this.values,this.shape,this.dtype)}},Qa=null,Dc=null,aH=null;function bD(r){Qa=r}function yD(r){Dc=r}function xD(r){aH=r}var Qe=class{constructor(e,t,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=e.slice(),this.dtype=t||"float32",this.size=ct(e),this.strides=Ka(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Dc.buffer(this.shape,this.dtype,e)}bufferSync(){return Dc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Cl(this.shape,e,this.dtype==="complex64")}arraySync(){return Cl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Qa().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Nc(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Qa().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Nc(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Qa().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Qa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Dc.print(this,e)}clone(){return this.throwIfDisposed(),Dc.clone(this)}toString(e=!1){let t=this.dataSync();return hD(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Dc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Qa().makeVariable(this,e,t,n)}};Object.defineProperty(Qe,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function iH(){return of("Tensor",()=>Qe)}iH();var Ku=class extends Qe{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t;this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!zn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Qa().disposeTensor(this),this.dataId=e.dataId,Qa().incRef(this,null)}dispose(){Qa().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ku,Symbol.hasInstance,{value:r=>r instanceof Qe&&r.assign!=null&&r.assign instanceof Function});var _s={};Ye(_s,{assertTypesMatch:()=>Rk,getTensorsInContainer:()=>df,isTensorInList:()=>lH,makeTypesMatch:()=>Ze});var Dk;(function(i){i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6"})(Dk||(Dk={}));var Pk;(function(o){o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64"})(Pk||(Pk={}));var Fk;(function(o){o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64"})(Fk||(Fk={}));var Mk;(function(o){o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64"})(Mk||(Mk={}));var Ek;(function(o){o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64"})(Ek||(Ek={}));var uH={float32:Mk,int32:Pk,bool:Fk,complex64:Ek};function Kt(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return uH[r][e]}function Ki(r){return Kt(r,"int32")}function Ze(r,e){if(r.dtype===e.dtype)return[r,e];let t=Kt(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function Rk(r,e){P(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function lH(r,e){return e.some(t=>t.id===r.id)}function df(r){let e=[],t=new Set;return TD(r,e,t),e}function TD(r,e,t){if(r==null)return;if(r instanceof Qe){e.push(r);return}if(!pH(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),TD(s,e,t))}}function pH(r){return Array.isArray(r)||typeof r=="object"}function Lk(r){return r.kernelName!=null}var $k=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},eb=class{constructor(e){this.ENV=e;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new $k}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ya(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ak(this.backendInstance),!0}setupRegisteredKernels(){Xg(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Xg(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof ns)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,Ya(`Initialization of backend ${e} failed`),Ya(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Ya(`Initialization of backend ${e} failed`),Ya(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return eb.nextTensorId++}nextVariableId(){return eb.nextVariableId++}clone(e){let t=D.runKernel(Un,{x:e}),n={x:e},o=a=>({x:()=>{let i="float32",u={x:a},l={dtype:i};return D.runKernel(Gn,u,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(lf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u,l=Lk(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Lk(e)){let{kernelName:d,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let y=lf(d,this.backendName);P(y!=null,()=>`Cannot find registered kernel '${d}' for backend '${this.backendName}'`),i=()=>{let T=this.backend.numDataIds();u=y.kernelFunc({inputs:h,attrs:g,backend:this.backend});let x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,T,x);let k=x.map(v=>{if(v.rank!=null)return v;let{dataId:N,shape:A,dtype:F}=v;return this.makeTensorFromDataId(N,A,F)});if(o){let v=this.getTensorsForGradient(d,h,k);n=this.saveTensorsForBackwardMode(v)}return k}}else{let{forwardFunc:d}=e,h=g=>{!o||(n=g.map(y=>this.keep(this.clone(y))))};i=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>d(this.backend,h));let y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,y),y}}let{inputs:p,attrs:c}=e,m=Lk(e)?null:e.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(f=this.profiler.profileKernel(l,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),o&&this.addTapeNode(l,p,t,m,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(d=>p[d]!=null?p[d].shape:null),outputShapes:t.map(d=>d.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=Ck(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=s.map(l=>t[l]);let u=n.filter((l,p)=>a[p]);return i.concat(u)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&qs(e[0])&&(s=e.map(u=>Uu(u)));let a=o.write(s,t,n),i=new Qe(t,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let u=this.state.tensorInfo.get(a),l=xk(s);this.state.numBytes+=l-u.bytes,u.bytes=l}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s=new Qe(t,n,e,this.nextTensorId());return this.trackTensor(s,o),s}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new Ku(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Hg(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ku||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Hg(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=Ck(e);u!=null&&(o=u.gradFunc),o!=null&&(i.gradient=l=>(l=l.map((p,c)=>{if(p==null){let m=n[c],f=Xp(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return p}),o(l.length>1?l:l[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=df(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(s instanceof Qe,()=>"The result y returned by f() must be a tensor.");let a=mD(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??cH(s.shape),fD(i,a,l=>this.tidy(l),mH);let u=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let p of l.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return P(Ua(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(i=>i instanceof Qe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((i,u)=>{o[u]=i});let s=(i,u)=>(n=e(...t,u),P(n.value instanceof Qe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Ua(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,u)=>{let l=n.gradFunc(i,u),p=Array.isArray(l)?l:[l];P(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(p.every(m=>m instanceof Qe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return p.forEach((m,f)=>{c[f]=()=>m}),c};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Dl(),n=await this.backend.time(e);return n.wallMs=Dl()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new $k;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Jg=eb;Jg.nextTensorId=0,Jg.nextVariableId=0;function cH(r){let e=tf(ct(r),"float32");return D.makeTensor(e,r,"float32")}function Bk(){let r=Ik();if(r._tfengine==null){let e=new qg(r);r._tfengine=new Jg(e)}return jN(r._tfengine.ENV),bD(()=>r._tfengine),r._tfengine}var D=Bk();function mH(r,e){let t={a:r,b:e};return D.runKernel(wn,t)}var Vi={};Ye(Vi,{isBrowser:()=>zk,isMobile:()=>hH,mockIsMobile:()=>dH});function fH(){return typeof navigator!="undefined"&&navigator!=null}var Ok;function dH(r){Ok=r}function hH(r){if(Ok!==void 0)return Ok;if(r||fH()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window!="undefined"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function zk(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Ia=G();Ia.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ia.registerFlag("IS_BROWSER",()=>zk());Ia.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Ia.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ia.registerFlag("PROD",()=>!1);Ia.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ia.getBool("DEBUG"));Ia.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ia.registerFlag("IS_TEST",()=>!1);Ia.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ia.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Wr(r,e){let t=r;if(kr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||kr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&kD(r,n,[]),n}function kD(r,e,t){if(t=t||[],!Array.isArray(r)&&!kr(r)){P(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}P(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),P(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)kD(r[o],n,t.concat(o))}function ID(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function C(r,e,t,n="numeric"){if(r instanceof Qe)return ID(n,r.dtype,e,t),r;let o=Hp(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),ID(n,o,e,t),r==null||!kr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}let s=Wr(r,o);!kr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?Ac(r,o):Hs(r,[],!0);return D.makeTensor(i,s,o)}function ji(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>C(s,`${e}[${a}]`,t,n))}var CD="__op";function _(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+CD;let o=(...s)=>{D.startScope(t);try{let a=n(...s);return nf(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function gH(r,e){let t=C(r,"real","complex"),n=C(e,"imag","complex");Ut(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(Du,o)}var jn=_({complex_:gH});function an(r,e,t,n){if(n==null&&(n=Hp(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!kr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){rf(e);let o=ct(e),s=ct(t);P(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],u=a===t.length-1?i!==ct(e.slice(a)):!0;P(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!kr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?Ac(r,n):Hs(r,[],!0),D.makeTensor(r,e,n)}function Er(r,e,t){let n=Wr(r,t);return an(r,e,n,t)}var hf={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var tb=4;async function vD(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],u=Array.isArray(r)?r[a].tensor:r[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);let l={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let p=new Promise(async c=>{let m=await u.bytes(),f=m.reduce((g,y)=>g+y.length,0)+tb*m.length,d=new Uint8Array(f),h=0;for(let g=0;g<m.length;g++){let y=m[g],T=new Uint8Array(new Uint32Array([y.length]).buffer);d.set(T,h),h+=tb,d.set(y,h),h+=y.length}c(d)});n.push(p)}else n.push(u.data());e!=null&&(l.group=e),t.push(l)}let s=await Promise.all(n);return{data:bH(s),specs:t}}function rb(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,u=s.shape,l=ct(u),p;if("quantization"in s){let c=s.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${s.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=hf[c.dtype],f=r.slice(o,o+l*m),d=c.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(i==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){p=new Float32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];p[h]=g*c.scale+c.min}}else if(c.dtype==="float16")n===void 0&&(n=kH()),p=n(d);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(i==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);p=new Int32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];p[h]=Math.round(g*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*m}else if(i==="string"){let c=ct(s.shape);p=[];for(let m=0;m<c;m++){let f=new Uint32Array(r.slice(o,o+tb))[0];o+=tb;let d=new Uint8Array(r.slice(o,o+f));p.push(d),o+=f}}else{let c=hf[i],m=r.slice(o,o+l*c);if(i==="float32")p=new Float32Array(m);else if(i==="int32")p=new Int32Array(m);else if(i==="bool")p=new Uint8Array(m);else if(i==="complex64"){p=new Float32Array(m);let f=new Float32Array(p.length/2),d=new Float32Array(p.length/2);for(let y=0;y<f.length;y++)f[y]=p[y*2],d[y]=p[y*2+1];let h=Er(f,u,"float32"),g=Er(d,u,"float32");t[a]=jn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*c}i!=="complex64"&&(t[a]=Er(p,u,i))}return t}function bH(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var Gk=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function wD(r){return Gk?Buffer.byteLength(r):new Blob([r]).size}function SD(r){if(Gk)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function _D(r){if(Gk){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function Pc(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function Wk(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function nb(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}async function Fc(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await e(r.weightsManifest);t.weightSpecs=n,t.weightData=o}return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),t}function Za(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:wD(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:wD(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function yH(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)==0;)o-=8388608,n<<=1;return n&=~8388608,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function xH(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function TH(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function kH(){let r=yH(),e=xH(),t=TH();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],u=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=u}return new Float32Array(o)}}var Rt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Rt.instance==null&&(Rt.instance=new Rt),Rt.instance}static registerSaveRouter(e){Rt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Rt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Rt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Rt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Rt.getInstance().loadRouters:Rt.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},AD=r=>Rt.registerSaveRouter(r),ND=r=>Rt.registerLoadRouter(r),DD=r=>Rt.getSaveHandlers(r),PD=(r,e)=>Rt.getLoadHandlers(r,e);var Uk="tensorflowjs",Kk=1,Pl="models_store",Vu="model_info_store";function FD(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window=="undefined"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Vk(r){let e=r.result;e.createObjectStore(Pl,{keyPath:"modelPath"}),e.createObjectStore(Vu,{keyPath:"modelPath"})}var Hi=class{constructor(e){if(this.indexedDB=FD(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(Uk,Kk);s.onupgradeneeded=()=>Vk(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(Pl,"readonly"),l=i.objectStore(Pl).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=p=>(a.close(),o(l.error)),i.oncomplete=()=>a.close()}else{let i=Za(t),u=a.transaction(Vu,"readwrite"),l=u.objectStore(Vu),p=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),c;p.onsuccess=()=>{c=a.transaction(Pl,"readwrite");let f=c.objectStore(Pl).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});f.onsuccess=()=>n({modelArtifactsInfo:i}),f.onerror=d=>{l=u.objectStore(Vu);let h=l.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(f.error)),h.onerror=g=>(a.close(),o(f.error))}},p.onerror=m=>(a.close(),o(p.error)),u.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};Hi.URL_SCHEME="indexeddb://";var MD=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Hi.URL_SCHEME)?IH(r.slice(Hi.URL_SCHEME.length)):null;Rt.registerSaveRouter(MD);Rt.registerLoadRouter(MD);function IH(r){return new Hi(r)}function CH(r){return r.startsWith(Hi.URL_SCHEME)?r.slice(Hi.URL_SCHEME.length):r}var jk=class{constructor(){this.indexedDB=FD()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Uk,Kk);n.onupgradeneeded=()=>Vk(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Vu,"readonly"),i=s.objectStore(Vu).getAll();i.onsuccess=()=>{let u={};for(let l of i.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},i.onerror=u=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=CH(e),new Promise((t,n)=>{let o=this.indexedDB.open(Uk,Kk);o.onupgradeneeded=()=>Vk(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(Vu,"readwrite"),i=a.objectStore(Vu),u=i.get(e),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=i.delete(e),c=()=>{l=s.transaction(Pl,"readwrite");let f=l.objectStore(Pl).delete(e);f.onsuccess=()=>t(u.result.modelArtifactsInfo),f.onerror=d=>n(u.error)};p.onsuccess=c,p.onerror=m=>(c(),s.close(),n(u.error))}},u.onerror=p=>(s.close(),n(u.error)),a.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var qi="/",Mc="tensorflowjs_models",ED="info",vH="model_topology",wH="weight_specs",SH="weight_data",_H="model_metadata";function RD(r){return{info:[Mc,r,ED].join(qi),topology:[Mc,r,vH].join(qi),weightSpecs:[Mc,r,wH].join(qi),weightData:[Mc,r,SH].join(qi),modelMetadata:[Mc,r,_H].join(qi)}}function LD(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function AH(r){let e=r.split(qi);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(qi)}function NH(r){return r.startsWith(Xi.URL_SCHEME)?r.slice(Xi.URL_SCHEME.length):r}var Xi=class{constructor(e){if(!G().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=RD(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=Za(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,SD(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw LD(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=_D(a),t}};Xi.URL_SCHEME="localstorage://";var $D=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Xi.URL_SCHEME)?DH(r.slice(Xi.URL_SCHEME.length)):null;Rt.registerSaveRouter($D);Rt.registerLoadRouter($D);function DH(r){return new Xi(r)}var Hk=class{constructor(){P(G().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Mc+qi,n=qi+ED;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=AH(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=NH(e);let t=RD(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return LD(t),n}};var Ec="://",un=class{constructor(){this.managers={}}static getInstance(){return un.instance==null&&(un.instance=new un),un.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ec)&&(e=e.slice(0,e.indexOf(Ec))),P(e.length>0,()=>"scheme must not be an empty string.");let n=un.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function ob(r){if(r.indexOf(Ec)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${un.getSchemes().join(",")}`);return{scheme:r.split(Ec)[0],path:r.split(Ec)[1]}}async function BD(r,e,t=!1){P(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Rt.getLoadHandlers(r);P(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),P(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Rt.getSaveHandlers(e);P(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=ob(r).scheme,u=ob(r).path,l=i===ob(r).scheme,p=await o.load();t&&l&&await un.getManager(i).removeModel(u);let c=await a.save(p);return t&&!l&&await un.getManager(i).removeModel(u),c.modelArtifactsInfo}async function OD(){let r=un.getSchemes(),e={};for(let t of r){let n=await un.getManager(t).listModels();for(let o in n){let s=t+Ec+o;e[s]=n[o]}}return e}async function zD(r){let e=ob(r);return un.getManager(e.scheme).removeModel(e.path)}async function GD(r,e){return BD(r,e,!1)}async function WD(r,e){return BD(r,e,!0)}var UD=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(G().get("IS_BROWSER")){G().setPlatform("browser",new UD);try{un.registerManager(Xi.URL_SCHEME,new Hk)}catch{}try{un.registerManager(Hi.URL_SCHEME,new jk)}catch{}}var PH={importFetch:()=>KD()},qk;var jD=class{constructor(){this.util=VD(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return G().global.fetch!=null?G().global.fetch(e,t):(qk==null&&(qk=PH.importFetch()),qk(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};G().get("IS_NODE")&&G().setPlatform("node",new jD);function Ce(r,e="float32",t){return e=e||"float32",rf(r),new xt(r,e,t)}function FH(r,e){let t=C(r,"x","cast");if(!yk(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(Gn,n,o)}var Z=_({cast_:FH});function MH(r){let t={x:C(r,"x","clone","string_or_numeric")};return D.runKernel(Un,t)}var _n=_({clone_:MH});function Xk(r,e=!1){console.log(r.toString(e))}Bk();var EH={buffer:Ce,cast:Z,clone:_n,print:Xk};yD(EH);var Ur={};Ye(Ur,{browserFiles:()=>XD,browserHTTPRequest:()=>ZD,concatenateArrayBuffers:()=>Pc,copyModel:()=>GD,decodeWeights:()=>rb,encodeWeights:()=>vD,fromMemory:()=>e0,getLoadHandlers:()=>PD,getModelArtifactsForJSON:()=>Fc,getModelArtifactsInfoForJSON:()=>Za,getSaveHandlers:()=>DD,http:()=>ub,isHTTPScheme:()=>ib,listModels:()=>OD,loadWeights:()=>YD,moveModel:()=>WD,registerLoadRouter:()=>ND,registerSaveRouter:()=>AD,removeModel:()=>zD,weightsLoaderFactory:()=>Zk,withSaveHandler:()=>t0});var RH="model",LH=".json",$H=".weights.bin";function HD(r){return new Promise(e=>setTimeout(e)).then(r)}var sb=class{constructor(e){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(sb.URL_SCHEME)&&(e=e.slice(sb.URL_SCHEME.length)),(e==null||e.length===0)&&(e=RH),this.modelJsonFileName=e+LH,this.weightDataFileName=e+$H}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=nb(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await HD(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await HD(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Za(e)}}}},gf=sb;gf.URL_SCHEME="downloads://";var qD=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let u=Fc(s,l=>this.loadWeights(l));e(u)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[t,Pc(a)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>Wk(s.name)),o={};for(let s of e)s.paths.forEach(a=>{let i=Wk(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},BH=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(gf.URL_SCHEME)?OH(r.slice(gf.URL_SCHEME.length)):null;Rt.registerSaveRouter(BH);function OH(r="model"){return new gf(r)}function XD(r){return new qD(r)}function Yk(r,e,t,n){a(r),t=t??0,n=n??1,i(t,n);let o=0,s=u=>(u.then(l=>{let p=t+ ++o/r.length*(n-t);return e(p),l}),u);function a(u){P(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,l){P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),P(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function Qk(r,e){e==null&&(e={});let t=e.fetchFunc==null?G().platform.fetch:e.fetchFunc,n=r.map(c=>t(c,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await Yk(n,e.onProgress,o,s)).map(c=>c.arrayBuffer()),u=.5,l=1;return e.onProgress==null?await Promise.all(i):await Yk(i,e.onProgress,u,l)}async function YD(r,e="",t,n){return Zk(a=>Qk(a,{requestInit:n}))(r,e,t)}function Zk(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((f,d)=>{let h=0;f.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,T=hf[y]*ct(g.shape),x=()=>{o[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:g,groupOffset:h,sizeBytes:T})};n!=null?n.forEach((k,v)=>{k===g.name&&(x(),a[v]=!0)}):x(),i.push(g.name),h+=T})}),!a.every(f=>f)){let f=n.filter((d,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let u=o.reduce((f,d,h)=>(d&&f.push(h),f),[]),l=[];u.forEach(f=>{e[f].paths.forEach(d=>{let h=t+(t.endsWith("/")?"":"/")+d;l.push(h)})});let p=await r(l),c={},m=0;return u.forEach(f=>{let d=e[f].paths.length,h=0;for(let k=0;k<d;k++)h+=p[m+k].byteLength;let g=new ArrayBuffer(h),y=new Uint8Array(g),T=0;for(let k=0;k<d;k++){let v=new Uint8Array(p[m+k]);y.set(v,T),T+=v.byteLength}s[f].forEach(k=>{let v=g.slice(k.groupOffset,k.groupOffset+k.sizeBytes),N=rb(v,[k.manifestEntry]);for(let A in N)c[A]=N[A]}),m+=d}),c}}var zH="application/octet-stream",GH="application/json",ab=class{constructor(e,t){this.DEFAULT_METHOD="POST";if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=G().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=nb(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:GH}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:zH}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Za(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Fc(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=WH(t),s=this.weightPathPrefix||n,a=[];for(let p of e)a.push(...p.weights);let i=[],u=[];for(let p of e)for(let c of p.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(c)):i.push(s+c+o);this.weightUrlConverter&&i.push(...await Promise.all(u));let l=await Qk(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Pc(l)]}};ab.URL_SCHEME_REGEX=/^https?:\/\//;function WH(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function ib(r){return r.match(ab.URL_SCHEME_REGEX)!=null}var QD=(r,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>ib(n)):t=ib(r),t)return ub(r,e)}return null};Rt.registerSaveRouter(QD);Rt.registerLoadRouter(QD);function ub(r,e){return new ab(r,e)}function ZD(r,e){return ub(r,e)}var lb=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},JD=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function e0(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new lb(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new lb({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new lb({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function t0(r){return new JD(r)}var n0={};Ye(n0,{confusionMatrix:()=>r0});function UH(r,e,t=!1,n=!1){let o=C(r,"a","matMul"),s=C(e,"b","matMul");[o,s]=Ze(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return D.runKernel(so,a,i)}var je=_({matMul_:UH});function KH(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:C(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:n};return D.runKernel(pa,s,a)}var Yi=_({oneHot_:KH});function VH(r,e){let t=C(r,"x","transpose");if(e==null&&(e=t.shape.map((s,a)=>a).reverse()),P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{P(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let n={x:t},o={perm:e};return D.runKernel(Ko,n,o)}var qe=_({transpose_:VH});function jH(r,e,t){let n=C(r,"labels","confusionMatrix"),o=C(e,"predictions","confusionMatrix");P(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),P(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),P(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),P(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),P(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=Yi(Z(n,"int32"),t),a=Yi(Z(o,"int32"),t),i=qe(s),u=je(i,a);return Z(u,"int32")}var r0=_({confusionMatrix_:jH});var As={};Ye(As,{assertAndGetBroadcastShape:()=>Ke,getBroadcastDims:()=>o0,getReductionAxes:()=>wt});function o0(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function wt(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function Ke(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}var pb={};Ye(pb,{fromPixels:()=>JH,fromPixelsAsync:()=>QH,toPixels:()=>ZH});function Jk(r,e,t){if(to(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Wr(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return an(r,e,n,t)}var Fl;function s0(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData!="undefined"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o){let d=2;if(o&&r.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(lf(wl,D.backendName)!=null){let d={pixels:r},h={numChannels:e};return D.runKernel(wl,d,h)}let[l,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c;if(a)c=r.getContext("2d").getImageData(0,0,l,p).data;else if(n||t)c=r.data;else if(s||o||i){if(Fl==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Fl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Fl=document.createElement("canvas").getContext("2d");Fl.canvas.width=l,Fl.canvas.height=p,Fl.drawImage(r,0,0,l,p),c=Fl.getImageData(0,0,l,p).data}let m;if(e===4)m=new Int32Array(c);else{let d=l*p;m=new Int32Array(d*e);for(let h=0;h<d;h++)for(let g=0;g<e;++g)m[h*e+g]=c[h*4+g]}return Jk(m,[p,l,e],"int32")}function HH(r){return r!=null&&r.data instanceof Uint8Array}function qH(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function XH(r){return r!=null&&r.width!==0&&r.height!==0}function YH(r){return qH()&&!(r instanceof ImageBitmap)&&XH(r)&&!HH(r)}async function QH(r,e=3){let t=null;if(G().getBool("WRAP_TO_IMAGEBITMAP")&&YH(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return s0(t,e)}async function ZH(r,e){let t=C(r,"img","toPixels");if(!(r instanceof Qe)){let l=t;t=Z(l,"int32"),l.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let p=[0,0,0,255];for(let m=0;m<s;m++){let f=a[l*s+m];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(p[0]=f*i,p[1]=f*i,p[2]=f*i):p[m]=f*i}let c=l*4;u[c+0]=Math.round(p[0]),u[c+1]=Math.round(p[1]),u[c+2]=Math.round(p[2]),u[c+3]=Math.round(p[3])}if(e!=null){e.width=o,e.height=n;let l=e.getContext("2d"),p=new ImageData(u,o,n);l.putImageData(p,0,0)}return t!==r&&t.dispose(),u}var JH=_({fromPixels_:s0});var cb={};Ye(cb,{prepareAndValidate:()=>a0});function a0(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(ct(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let c=0;c<o.length-1;++c)a*=o[c];let i=r.shape,u=o.slice();u.pop();let l=1;for(let c=s;c<t;++c)l*=i[c],u.push(i[c]);let p=[...Ka(r.shape).map(c=>c/l),1].slice(0,s);return[u,a,l,p]}var fb={};Ye(fb,{calculateShapes:()=>i0,validateInput:()=>mb,validateUpdateShape:()=>eI});function eI(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function mb(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}eI(t,e,r)}function i0(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let c=o;c<s;++c)a*=t[c];let i=o<1?1:o,u=ct(e.shape)/i,l=[...Ka(t.slice(0,o)),1],p=ct(t);return{sliceRank:o,numUpdates:u,sliceSize:a,strides:l,outputSize:p}}var kt={};Ye(kt,{assertParamsValid:()=>tq,computeFlatOffset:()=>aq,computeOutShape:()=>nq,getNormalizedAxes:()=>oq,isSliceContinous:()=>sq,maskToAxes:()=>rq,parseSliceParams:()=>rI,sliceInfo:()=>iq,startForAxis:()=>d0,startIndicesWithElidedDims:()=>c0,stopForAxis:()=>h0,stopIndicesWithElidedDims:()=>m0,stridesForAxis:()=>f0,stridesWithElidedDims:()=>u0});var tI=-2,eq=-1;function tq(r,e,t){let n=r.shape.length;P(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),P(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)P(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function rq(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function nq(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function u0(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function l0(r,e,t){return t<=r?t:t-(e-1)}function p0(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function oq(r,e,t,n,o,s,a,i,u){let l=r.length,p=new Array(l),c=new Array(l),m=new Array(l);if(e.length&&t>0){let f=e[0],d=t+1;p=c0(a,f,d,n,r),c=m0(i,f,d,o,r),m=u0(s,f,d,r)}else for(let f=0;f<l;f++)p[f]=d0(a,n,s,r,f,u),c[f]=h0(i,o,s,r,f,u),m[f]=f0(s,f,u);return{begin:p,end:c,strides:m}}function c0(r,e,t,n,o){let s=[...o],a=p0(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let u=l0(e,t,i),l=n[u];r&1<<u&&(l=0),s[i]=l}return s}function m0(r,e,t,n,o){let s=[...o],a=p0(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let u=l0(e,t,i),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[i]=l}for(let i=0;i<s.length;i++){let u=o[i];s[i]<0&&(s[i]+=u),s[i]=jp(0,s[i],o[i])}return s}function f0(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function d0(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),a=jp(0,a,u-1),a}function h0(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),i>0?a=jp(0,a,u):a=jp(-1,a,u-1),a}function sq(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function aq(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function rI(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{P(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(P(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function iq(r,e,t,n,o,s,a,i,u){let l;if(n==null?(l=new Array(e.length),l.fill(1)):l=n,a!=null&&(a&a-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,c={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let x=0;x<c.dims;x++)p&&(1<<x&i)!=0&&c.numAddAxisAfterEllipsis++,1<<x&a&&(p=!0);p||(c.ellipsisMask|=1<<c.dims,c.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};uq(c,m);let f=!0,d=!0,h=!0,g=[],y=[];for(let x=0;x<r.length;++x){if(m.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);let k=!!(m.shrinkAxisMask&1<<x),v=r[x];if(v===-1){g.push(k?1:-1);continue}let N=[m.beginMask&1<<x,m.endMask&1<<x],A=[m.strides[x]>0?0:-1,m.strides[x]>0?v:v-1];if(k&&m.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&m.strides[x]===1;let F=!!(m.beginMask&1<<x&&m.endMask&1<<x);if(m.beginValid&&m.endValid){if(k){let K=m.begin[x]<0?v+m.begin[x]:m.begin[x];if(m.begin[x]=K,m.end[x]=m.begin[x]+1,K<0||K>=v)throw Error(`slice index ${m.begin[x]} of dimension ${x} out of bounds.`)}else m.begin[x]=g0(m.begin[x],0,m.strides[x],v,N,A),m.end[x]=g0(m.end[x],1,m.strides[x],v,N,A);let U=m.strides[x]===1&&m.begin[x]===0&&m.end[x]===v;f=f&&U,d=d&&(x===0&&m.strides[x]===1||U)}else f=f&&m.strides[x]===1&&F,d=d&&(x===0&&m.strides[x]===1||F);let E,$=!1;if(m.beginValid&&m.endValid?(E=m.end[x]-m.begin[x],$=!0):k?(E=1,$=!0):F&&v>=0&&(m.strides[x]<0?E=-v:E=v,$=!0),$){let U;E===0||E<0!=m.strides[x]<0?U=0:U=Math.trunc(E/m.strides[x])+(E%m.strides[x]!=0?1:0),g.push(U)}else g.push(-1)}for(let x=0;x<m.finalShapeGatherIndices.length;++x){let k=m.finalShapeGatherIndices[x];k>=0?y.push(g[k]):k===tI&&y.push(1)}return{finalShapeSparse:y.filter((x,k)=>m.finalShapeGatherIndices[k]!==tI),finalShape:y,isIdentity:f,sliceDim0:d,isSimpleSlice:h,begin:m.begin,end:m.end,strides:m.strides}}function uq(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(tI),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(eq),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function g0(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var te={};Ye(te,{Serializable:()=>db,SerializationMap:()=>Qi,registerClass:()=>An});var db=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Qi=class{constructor(){this.classNameMap={}}static getMap(){return Qi.instance==null&&(Qi.instance=new Qi),Qi.instance}static register(e){Qi.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function An(r){P(r.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),P(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Qi.register(r)}var T0={};Ye(T0,{TEST_EPSILON_FLOAT16:()=>b0,encodeStrings:()=>x0,expectArrayBuffersEqual:()=>dq,expectArraysClose:()=>pq,expectArraysEqual:()=>mq,expectNumbersClose:()=>y0,expectPromiseToFail:()=>cq,expectValuesInRange:()=>fq,testEpsilon:()=>hb});var lq=.001,b0=.1;function pq(r,e,t){return t==null&&(t=hb()),nI(r,e,(n,o)=>oI(n,o,t))}function hb(){return D.backend.floatPrecision()===32?lq:b0}function nI(r,e,t){let n=!0;if((kr(r)||kr(e))&&(n=!1),kr(r)&&kr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=Wr(r),i=Wr(e);if(!zn(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=kr(r)?r:Hs(r),s=kr(e)?e:Hs(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],u=s[a];if(!t(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}}function cq(r,e){r().then(()=>e.fail(),()=>e())}function mq(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return qs(r)||qs(r[0])||qs(e)||qs(e[0])?nI(r,t,(n,o)=>n==o):nI(r,e,(n,o)=>oI(n,o,0))}function y0(r,e,t){if(t==null&&(t=hb()),!oI(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function oI(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function fq(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function dq(r,e){expect(new Float32Array(r)).toEqual(new Float32Array(e))}function x0(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?x0(t):r[e]=Uu(t)}return r}var hq="0.0.0";function ibe(){G().set("PROD",!0)}function ube(){G().set("DEBUG",!0)}function lbe(){G().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function sI(r){G().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}xD(sI);function pbe(){D.disposeVariables()}function Vo(){return D}function bf(){return D.memory()}function cbe(r){return D.profile(r)}function W(r,e){return D.tidy(r,e)}function Ee(r){df(r).forEach(t=>t.dispose())}function Vt(r){return D.keep(r)}function mbe(r){return D.time(r)}function gq(r){return D.setBackend(r)}function fbe(){return D.ready()}function dbe(){return D.backendName}function hbe(r){D.removeBackend(r)}function gbe(r){return D.findBackend(r)}function bbe(r){return D.findBackendFactory(r)}function ju(r,e,t=1){return D.registerBackend(r,e,t)}function k0(){return D.backend}function ybe(r,e){G().setPlatform(r,e)}function bq(r,e){let t=C(r,"a","add"),n=C(e,"b","add");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(wn,o)}var X=_({add_:bq});function yq(r,e){let t=C(r,"a","floorDiv"),n=C(e,"b","floorDiv");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(bo,o)}var yf=_({floorDiv_:yq});function xq(r,e){let t=C(r,"a","div"),n=C(e,"b","div");if([t,n]=Ze(t,n),t.dtype==="int32"&&n.dtype==="int32")return yf(t,n);let o={a:t,b:n},s={};return D.runKernel(mo,o,s)}var pe=_({div_:xq});function Tq(r,e){let t=C(r,"a","mul"),n=C(e,"b","mul");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Ao,o)}var R=_({mul_:Tq});function kq(r){let e=C(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(Pu,t)}else{let t={x:e};return D.runKernel(ss,t)}}var zt=_({abs_:kq});function Iq(r){let t={x:C(r,"x","acos")};return D.runKernel(Ii,t)}var aI=_({acos_:Iq});function Cq(r){let t={x:C(r,"x","acosh")};return D.runKernel(Ci,t)}var iI=_({acosh_:Cq});function vq(r){P(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),P(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>C(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!zn(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(ro,n)}var uI=_({addN_:vq});function wq(r,e=null,t=!1){let o={x:C(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(vi,o,s)}var xf=_({all_:wq});function Sq(r,e=null,t=!1){let o={x:C(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(wi,o,s)}var Rc=_({any_:Sq});function _q(r,e=0){let n={x:C(r,"x","argMax")},o={axis:e};return D.runKernel(no,n,o)}var Zi=_({argMax_:_q});function Aq(r,e=0){let n={x:C(r,"x","argMin")},o={axis:e};return D.runKernel(Va,n,o)}var lI=_({argMin_:Aq});function Nq(r){let t={x:C(r,"x","asin")};return D.runKernel(Si,t)}var pI=_({asin_:Nq});function Dq(r){let t={x:C(r,"x","asinh")};return D.runKernel(_i,t)}var cI=_({asinh_:Dq});function Pq(r){let t={x:C(r,"x","atan")};return D.runKernel(Ai,t)}var mI=_({atan_:Pq});function Fq(r,e){let t=C(r,"a","atan2"),n=C(e,"b","atan2");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Di,o)}var fI=_({atan2_:Fq});function Mq(r){let t={x:C(r,"x","atanh")};return D.runKernel(Ni,t)}var dI=_({atanh_:Mq});function Eq(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],u=C0(o);return Ml(r,i,t,s,n,null,null,u)}function hI(r,e,t,n,o,s,a="channelsLast"){let[i,u]=gb(e),l;if(a==="channelsLast")l=[i,u,r[3],r[3]];else if(a==="channelsFirst")l=[i,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Ml(r,l,t,n,o,s,!1,a)}function Rq(r,e,t,n,o,s,a="NDHWC"){let[i,u,l]=bI(e),p,c;if(a==="NDHWC")c="channelsLast",p=[i,u,l,r[4],r[4]];else if(a==="NCDHW")c="channelsFirst",p=[i,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return I0(r,p,t,n,o,!1,c,s)}function Ml(r,e,t,n,o,s,a=!1,i="channelsLast"){let[u,l,p,c]=[-1,-1,-1,-1];if(i==="channelsLast")[u,l,p,c]=r;else if(i==="channelsFirst")[u,c,l,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[m,f,,d]=e,[h,g]=gb(t),[y,T]=gb(n),x=Lc(m,y),k=Lc(f,T),{padInfo:v,outHeight:N,outWidth:A}=Bq(o,l,p,h,g,x,k,s,i),F=a?d*c:d,E;return i==="channelsFirst"?E=[u,F,N,A]:i==="channelsLast"&&(E=[u,N,A,F]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:p,inChannels:c,outHeight:N,outWidth:A,outChannels:F,padInfo:v,strideHeight:h,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:x,effectiveFilterWidth:k,dilationHeight:y,dilationWidth:T,inShape:r,outShape:E,filterShape:e}}function I0(r,e,t,n,o,s=!1,a="channelsLast",i){let[u,l,p,c,m]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,l,p,c,m]=r;else if(a==="channelsFirst")[u,m,l,p,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[f,d,h,,g]=e,[y,T,x]=bI(t),[k,v,N]=bI(n),A=Lc(f,k),F=Lc(d,v),E=Lc(h,N),{padInfo:$,outDepth:U,outHeight:K,outWidth:B}=Oq(o,l,p,c,y,T,x,A,F,E,i),V=s?g*m:g,j;return a==="channelsFirst"?j=[u,V,U,K,B]:a==="channelsLast"&&(j=[u,U,K,B,V]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:p,inWidth:c,inChannels:m,outDepth:U,outHeight:K,outWidth:B,outChannels:V,padInfo:$,strideDepth:y,strideHeight:T,strideWidth:x,filterDepth:f,filterHeight:d,filterWidth:h,effectiveFilterDepth:A,effectiveFilterHeight:F,effectiveFilterWidth:E,dilationDepth:k,dilationHeight:v,dilationWidth:N,inShape:r,outShape:j,filterShape:e}}function Lq(r,e,t,n,o){n==null&&(n=gI(r,e,t));let s=r[0],a=r[1],i=El((s-e+2*n)/t+1,o),u=El((a-e+2*n)/t+1,o);return[i,u]}function $q(r,e,t,n,o,s){o==null&&(o=gI(r,e,n));let a=r[0],i=r[1],u=r[2],l=El((a-e+2*o)/n+1,s),p=El((i-e+2*o)/n+1,s),c=El((u-e+2*o)/n+1,s);return[l,p,c,t]}function gI(r,e,t,n=1){let o=Lc(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function gb(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function bI(r){return typeof r=="number"?[r,r,r]:r}function Lc(r,e){return e<=1?r:r+(r-1)*(e-1)}function Bq(r,e,t,n,o,s,a,i,u){let l,p,c;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=Lq([e,t],s,n,r,i);p=f[0],c=f[1]}else if(r==="same"){p=Math.ceil(e/n),c=Math.ceil(t/o);let m=Math.max(0,(p-1)*n+s-e),f=Math.max(0,(c-1)*o+a-t),d=Math.floor(m/2),h=m-d,g=Math.floor(f/2),y=f-g;l={top:d,bottom:h,left:g,right:y,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-s+1)/n),c=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let m=u==="channelsLast"?r[1][0]:r[2][0],f=u==="channelsLast"?r[1][1]:r[2][1],d=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:m,bottom:f,left:d,right:h,type:m===0&&f===0&&d===0&&h===0?"VALID":"EXPLICIT"},p=El((e-s+m+f)/n+1,i),c=El((t-a+d+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:p,outWidth:c}}function Oq(r,e,t,n,o,s,a,i,u,l,p){let c,m,f,d;if(typeof r=="number"){c={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=$q([e,t,n,1],i,1,o,r,p);m=g[0],f=g[1],d=g[2]}else if(r==="same"){m=Math.ceil(e/o),f=Math.ceil(t/s),d=Math.ceil(n/a);let h=(m-1)*o+i-e,g=(f-1)*s+u-t,y=(d-1)*a+l-n,T=Math.floor(h/2),x=h-T,k=Math.floor(g/2),v=g-k,N=Math.floor(y/2),A=y-N;c={top:k,bottom:v,left:N,right:A,front:T,back:x,type:"SAME"}}else if(r==="valid")c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-i+1)/o),f=Math.ceil((t-u+1)/s),d=Math.ceil((n-l+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:c,outDepth:m,outHeight:f,outWidth:d}}function El(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function jo(r){let[e,t,n]=gb(r);return e===1&&t===1&&n===1}function Rr(r,e){return jo(r)||jo(e)}function C0(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function zq(r,e){let n={x:C(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(fs,n,o)}var L=_({reshape_:zq});function Gq(r,e,t,n,o){let s=C(r,"x","avgPool","float32"),a=1;P(Rr(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,u=!1;s.rank===3&&(u=!0,i=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),o!=null&&P(mt(n),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},c=D.runKernel(oo,l,p);return c=Z(c,s.dtype),u?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Rl=_({avgPool_:Gq});function Wq(r,e,t,n,o,s="NDHWC"){let a=C(r,"x","avgPool3d","float32"),i=a,u=!1;a.rank===4&&(u=!0,i=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),P(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),o!=null&&P(mt(n),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},c=D.runKernel(Nu,l,p);return c=Z(c,i.dtype),u?L(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Tf=_({avgPool3d_:Wq});function Uq(r,e=0){P(r.length>=1,()=>"Pass at least one tensor to concat");let t=ji(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return _n(t[0]);let n=t,o={axis:e};return D.runKernel(is,n,o)}var lt=_({concat_:Uq});function Kq(r){let t={x:C(r,"x","sigmoid","float32")};return D.runKernel($o,t)}var ln=_({sigmoid_:Kq});function Vq(r,e,t){let n=C(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(hs,o,s)}var Ue=_({slice_:Vq});function jq(r){let t={x:C(r,"x","tanh","float32")};return D.runKernel(Uo,t)}var Ji=_({tanh_:jq});function Hq(r,e,t,n,o,s){let a=C(r,"forgetBias","basicLSTMCell"),i=C(e,"lstmKernel","basicLSTMCell"),u=C(t,"lstmBias","basicLSTMCell"),l=C(n,"data","basicLSTMCell"),p=C(o,"c","basicLSTMCell"),c=C(s,"h","basicLSTMCell"),m=lt([l,c],1),f=je(m,i),d=X(f,u),h=d.shape[0],g=d.shape[1]/4,y=[h,g],T=Ue(d,[0,0],y),x=Ue(d,[0,g],y),k=Ue(d,[0,g*2],y),v=Ue(d,[0,g*3],y),N=X(R(ln(T),Ji(x)),R(p,ln(X(a,k)))),A=R(Ji(N),ln(v));return[N,A]}var qq=_({basicLSTMCell_:Hq});function Xq(r,e,t){let n=C(r,"x","batchToSpaceND"),o=e.reduce((i,u)=>i*u);P(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),P(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),P(n.shape[0]%o==0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return D.runKernel(as,s,a)}var Ll=_({batchToSpaceND_:Xq});function v0(r){let e;return r.rank===0||r.rank===1?e=L(r,[1,1,1,r.size]):r.rank===2?e=L(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function Yq(r,e,t,n,o,s){s==null&&(s=.001);let a=C(r,"x","batchNorm"),i=C(e,"mean","batchNorm"),u=C(t,"variance","batchNorm"),l;o!=null&&(l=C(o,"scale","batchNorm"));let p;n!=null&&(p=C(n,"offset","batchNorm")),P(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(p==null||i.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:v0(a),scale:l,offset:p,mean:i,variance:u},f={varianceEpsilon:s},d=D.runKernel(yo,m,f);return L(d,a.shape)}var Ja=_({batchNorm_:Yq});function Qq(r,e,t,n,o,s){let a=C(r,"x","batchNorm"),i=C(e,"mean","batchNorm"),u=C(t,"variance","batchNorm"),l;o!=null&&(l=C(o,"scale","batchNorm"));let p;return n!=null&&(p=C(n,"offset","batchNorm")),P(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),P(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),Ja(a,i,u,p,l,s)}var yI=_({batchNorm2d_:Qq});function Zq(r,e,t,n,o,s){let a=C(r,"x","batchNorm"),i=C(e,"mean","batchNorm"),u=C(t,"variance","batchNorm"),l;o!=null&&(l=C(o,"scale","batchNorm"));let p;return n!=null&&(p=C(n,"offset","batchNorm")),P(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),P(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),Ja(a,i,u,p,l,s)}var xI=_({batchNorm3d_:Zq});function Jq(r,e,t,n,o,s){let a=C(r,"x","batchNorm"),i=C(e,"mean","batchNorm"),u=C(t,"variance","batchNorm"),l;o!=null&&(l=C(o,"scale","batchNorm"));let p;return n!=null&&(p=C(n,"offset","batchNorm")),P(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),P(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),Ja(a,i,u,p,l,s)}var TI=_({batchNorm4d_:Jq});function e6(r,e,t){let n=C(r,"x","bincount"),o=C(e,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return D.runKernel(Zp,s,a)}var kf=_({bincount_:e6});function t6(r,e){let t=C(r,"s0","broadcastArgs","int32"),n=C(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return D.runKernel(Jp,o)}var kI=_({broadcastArgs_:t6});function r6(r,e){let t=C(r,"broadcastTo","x"),n=t.shape;if(e.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=L(t,l)}let o=t.shape,s=Array.from(e);for(let l=e.length-1;l>=0;l--)if(o[l]===e[l])s[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return _n(t);let i={x:t},u={reps:s};return D.runKernel(Sn,i,u)}var $l=_({broadcastTo_:r6});function n6(r){let t={x:C(r,"x","ceil","float32")};return D.runKernel(ao,t)}var II=_({ceil_:n6});function o6(r,e,t){let n=C(r,"x","clipByValue");P(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Wn,o,s)}var Lr=_({clipByValue_:o6});function s6(r){return lt(r,0)}var CI=_({concat1d_:s6});function a6(r,e){return lt(r,e)}var vI=_({concat2d_:a6});function i6(r,e){return lt(r,e)}var wI=_({concat3d_:i6});function u6(r,e){return lt(r,e)}var SI=_({concat4d_:u6});function l6(r,e,t,n,o="NHWC",s=[1,1],a){let i=C(r,"x","conv2d","float32"),u=C(e,"filter","conv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=L(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),a!=null&&P(mt(n),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let c=o==="NHWC"?l.shape[3]:l.shape[1];P(c===u.shape[2],()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${u.shape[2]}.`),P(Rr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let m={x:l,filter:u},f={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},d=D.runKernel(io,m,f);return p?L(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Hn=_({conv2d_:l6});function p6(r,e,t,n,o="NWC",s=1,a){let i=C(r,"x","conv1d"),u=C(e,"filter","conv1d"),l=i,p=!1;i.rank===2&&(p=!0,l=L(i,[1,i.shape[0],i.shape[1]])),P(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),P(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),a!=null&&P(mt(n),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),P(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),P(Rr(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),P(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let c=L(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=L(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=Hn(m,c,[1,t],n,"NHWC",[1,s],a);return p?L(g,[g.shape[2],g.shape[3]]):L(g,[g.shape[0],g.shape[2],g.shape[3]])}var If=_({conv1d_:p6});function c6(r,e,t,n,o,s="NHWC",a){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,u=e,l=!1;e.rank===3&&(l=!0,u=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),P(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),P(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),P(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let p=s==="NHWC"?i[3]:i[1],c=s==="NHWC"?u.shape[3]:u.shape[1];P(p===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[2]}.`),P(c===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[3]}.`),a!=null&&P(mt(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let m={dy:u,filter:t},f={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},d=D.runKernel(uo,m,f);return l?L(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var $c=_({conv2DBackpropInput_:c6});function m6(r,e,t,n,o,s){let a=C(r,"x","conv2dTranspose"),i=C(e,"filter","conv2dTranspose");return $c(t,a,i,n,o,"NHWC",s)}var Cf=_({conv2dTranspose_:m6});function f6(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=C(r,"x","conv3d"),i=C(e,"filter","conv3d"),u=a,l=!1;a.rank===4&&(l=!0,u=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),P(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),P(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),P(Rr(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let p={x:u,filter:i},c={strides:t,pad:n,dataFormat:o,dilations:s},m=D.runKernel(Fu,p,c);return l?L(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var vf=_({conv3d_:f6});function d6(r,e,t,n,o){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=L(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=a.shape[4];P(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),P(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),P(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),P(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),P(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);let p={dy:a,filter:t},c={pad:o,strides:n,inputShape:s},m=D.runKernel(rc,p,c);return i?L(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var bb=_({conv3DBackpropInput_:d6});function h6(r,e,t,n,o){let s=C(r,"x","conv3dTranspose"),a=C(e,"filter","conv3dTranspose");return bb(t,s,a,n,o)}var _I=_({conv3dTranspose_:h6});function g6(r){let t={x:C(r,"x","cos","float32")};return D.runKernel(lo,t)}var Bl=_({cos_:g6});function b6(r){let t={x:C(r,"x","cosh","float32")};return D.runKernel(po,t)}var wf=_({cosh_:b6});function y6(r,e=0,t=!1,n=!1){let s={x:C(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(Xs,s,a)}var Sf=_({cumsum_:y6});function x6(r,e,t,n=!1){let o=C(r,"x","denseBincount"),s=C(e,"weights","denseBincount");P(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),P(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return D.runKernel(nc,a,i)}var AI=_({denseBincount_:x6});function T6(r,e,t="NHWC"){let n=C(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];P(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),P(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),P(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),P(a%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},u={blockSize:e,dataFormat:t};return D.runKernel(Qs,i,u)}var NI=_({depthToSpace_:T6});function k6(r,e,t,n,o="NHWC",s=[1,1],a){let i=C(r,"x","depthwiseConv2d","float32"),u=C(e,"filter","depthwiseConv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=L(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),a!=null&&P(mt(n),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let c={x:l,filter:u},m={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(co,c,m);return p?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var eu=_({depthwiseConv2d_:k6});function I6(r){let t={x:C(r,"x","diag")};return D.runKernel(ac,t)}var C6=_({diag_:I6});function v6(r,e,t,n,o=[1,1],s="NHWC"){let a=C(r,"x","dilation2d"),i=C(e,"filter","dilation2d");P(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),P(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),P(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=a,l=!1;a.rank===3&&(u=L(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);let p={x:u,filter:i},c={strides:t,pad:n,dilations:o},m=D.runKernel(Mu,p,c);return l?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var DI=_({dilation2d_:v6});function w6(r,e){let t=C(r,"a","equal","string_or_numeric"),n=C(e,"b","equal","string_or_numeric");[t,n]=Ze(t,n),Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Zs,o)}var Kr=_({equal_:w6});function S6(r,e,t){let n=C(e,"a","where"),o=C(t,"b","where"),s=C(r,"condition","where","bool"),a=Ke(Ke(s.shape,n.shape),o.shape),i=$l(s,a),u=$l(n,a),l=$l(o,a),p={condition:i,t:u,e:l};return D.runKernel(ds,p)}var Gt=_({where_:S6});function _6(r){let t={x:C(r,"x","zerosLike")};return D.runKernel(xs,t)}var De=_({zerosLike_:_6});function A6(r,e){let t=C(r,"a","div"),n=C(e,"b","div");[t,n]=Ze(t,n);let o=pe(t,n),s=De(o),a=Kr(n,s);return Gt(a,s,o)}var PI=_({divNoNan_:A6});function N6(r,e){let t=C(r,"t1","dot"),n=C(e,"t2","dot");P((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(P(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=L(t,[1,-1]),i=L(n,[-1,1]),u=je(a,i);return L(u,[])}else if(t.rank===1&&n.rank===2){let a=L(t,[1,-1]),i=L(n,[n.shape[0],n.shape[1]]),u=je(a,i);return L(u,[u.size])}else if(t.rank===2&&n.rank===1){let a=L(n,[-1,1]),i=je(t,a);return L(i,[i.size])}else{let a=L(n,[n.shape[0],n.shape[1]]);return je(t,a)}}var D6=_({dot_:N6});function P6(r,...e){let t=e.map((o,s)=>C(o,`tensors${s}`,"einsum")),n={equation:r};return D.runKernel(Eu,t,n)}var FI=_({einsum_:P6});function F6(r){let t={x:C(r,"x","elu","float32")};return D.runKernel(fo,t)}var tu=_({elu_:F6});function M6(r){let e=C(r,"x","erf");P(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Z(e,"float32"));let t={x:e};return D.runKernel(Pi,t)}var MI=_({erf_:M6});function E6(r){let t={x:C(r,"x","exp")};return D.runKernel(ho,t)}var cr=_({exp_:E6});function R6(r,e=0){let t=C(r,"x","expandDims","string_or_numeric");P(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(us,n,o)}var _r=_({expandDims_:R6});function L6(r){let t={x:C(r,"x","expm1")};return D.runKernel(Js,t)}var EI=_({expm1_:L6});function $6(r,e){let t=C(r,"x","tile","string_or_numeric");P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(Sn,n,o)}var Vr=_({tile_:$6});function B6(r,e,t,n="float32"){e==null&&(e=r);let o=Ce([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=L(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return Vr(_r(a,0),[t[0],1,1]);if(t.length===2)return Vr(_r(_r(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Vr(_r(_r(_r(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Bc=_({eye_:B6});function Ca(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(ja,{},n)}function O6(r){let t={x:C(r,"x","floor","float32")};return D.runKernel(go,t)}var ru=_({floor_:O6});function z6(r,e,t=0,n=0){let o=C(r,"x","gather"),s=C(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return D.runKernel(ls,a,i)}var ei=_({gather_:z6});function G6(r,e){let t=C(r,"a","greater","string_or_numeric"),n=C(e,"b","greater","string_or_numeric");[t,n]=Ze(t,n),Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ra,o)}var nr=_({greater_:G6});function W6(r,e){let t=C(r,"a","greaterEqual","string_or_numeric"),n=C(e,"b","greaterEqual","string_or_numeric");[t,n]=Ze(t,n),Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(xo,o)}var Ho=_({greaterEqual_:W6});function U6(r){let t={input:C(r,"input","imag")};return D.runKernel(Ru,t)}var Ol=_({imag_:U6});function K6(r){let t={x:C(r,"x","isFinite")};return D.runKernel(Fi,t)}var V6=_({isFinite_:K6});function j6(r){let t={x:C(r,"x","isInf")};return D.runKernel(Mi,t)}var H6=_({isInf_:j6});function q6(r){let t={x:C(r,"x","isNaN")};return D.runKernel(Ei,t)}var RI=_({isNaN_:q6});function X6(r,e=.2){let n={x:C(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(na,n,o)}var zl=_({leakyRelu_:X6});function Y6(r,e){let t=C(r,"a","less","string_or_numeric"),n=C(e,"b","less","string_or_numeric");[t,n]=Ze(t,n),Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(oa,o)}var _f=_({less_:Y6});function Q6(r,e){let t=C(r,"a","lessEqual","string_or_numeric"),n=C(e,"b","lessEqual","string_or_numeric");[t,n]=Ze(t,n),Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(sa,o)}var qo=_({lessEqual_:Q6});function LI(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(pc,{},n)}function Z6(r,e=5,t=1,n=1,o=.5){let s=C(r,"x","localResponseNormalization");P(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),P(mt(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=L(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:a},l={depthRadius:e,bias:t,alpha:n,beta:o},p=D.runKernel(Lu,u,l);return i?L(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var $I=_({localResponseNormalization_:Z6});function J6(r){let t={x:C(r,"x","log","float32")};return D.runKernel(To,t)}var $r=_({log_:J6});function e5(r){let t={x:C(r,"x","log1p")};return D.runKernel(Ri,t)}var Gl=_({log1p_:e5});function t5(r){return P(Ua(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=C(e,"x","tf.grad","string_or_numeric"),o=t!=null?C(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(n),[n],o);return o!=null&&Ut(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),xb(a),a[0]})}}function r5(r){return P(Ua(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{P(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=ji(e,"args","tf.grads","string_or_numeric"),o=t!=null?C(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(...n),n,o);return o!=null&&Ut(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),xb(a),a})}}function n5(r){return P(Ua(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{P(e instanceof Qe,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(t==null||t instanceof Qe,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return xb(n),{grad:n[0],value:o}}}function o5(r){return P(Ua(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{P(Array.isArray(e)&&e.every(o=>o instanceof Qe),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(t==null||t instanceof Qe,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&Ut(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),xb(n.grads),n}}function yb(r,e){P(Ua(r),()=>"The f passed in variableGrads(f) must be a function"),P(e==null||Array.isArray(e)&&e.every(l=>l instanceof Ku),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let l in D.registeredVariables)e.push(D.registeredVariables[l])}let n=t?e.filter(l=>!l.trainable):null,o=e.length;e=e.filter(l=>l.trainable),P(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=D.gradients(r,e,null,s);P(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let u={};return e.forEach((l,p)=>{i[p]!=null&&(u[l.name]=i[p])}),n!=null&&n.forEach(l=>u[l.name]=null),{value:a,grads:u}}function pn(r){return D.customGrad(r)}function xb(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function s5(r){let t={x:C(r,"x","neg")};return D.runKernel(ps,t)}var et=_({neg_:s5});function a5(r){let t={x:C(r,"x","softplus")};return D.runKernel(Wi,t)}var ti=_({softplus_:a5});function i5(r){let e=C(r,"x","logSigmoid");return pn(n=>({value:et(ti(et(n))),gradFunc:a=>R(a,ln(et(n)))}))(e)}var u5=_({logSigmoid_:i5});function l5(r,e=null,t=!1){let o={x:C(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(ko,o,s)}var Zr=_({max_:l5});function p5(r,e){let t=C(r,"a","sub"),n=C(e,"b","sub");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Wo,o)}var ue=_({sub_:p5});function c5(r,e=null,t=!1){let n=C(r,"x","sum");n.dtype==="bool"&&(n=Z(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Oo,o,s)}var he=_({sum_:c5});function m5(r,e=-1){let t=C(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return pn((o,s)=>{let a=!0,i=Zr(o,e,!0),u=ue(o,i),l=ue(Z(u,"float32"),$r(he(cr(u),e,a)));return s([l]),{value:l,gradFunc:(c,m)=>{let[f]=m,d=!0,h=cr(f);return ue(c,R(he(c,e,d),h))}}})(t)}var Af=_({logSoftmax_:m5});function BI(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function w0(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function OI(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Ns(r,e){let t=e.map(n=>1);return w0(r,t,e)}function f5(r,e,t){P(BI(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function zI(r,e){if(BI(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Nf(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function d5(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function h5(r,e=null,t=!1){let n=C(r,"x","logSumExp"),o=yr(e,n.shape),s=Zr(n,o,!0),a=ue(n,s),i=cr(a),u=he(i,o),l=$r(u),p=X(L(s,l.shape),l);if(t){let c=Ns(p.shape,o);return L(p,c)}return p}var GI=_({logSumExp_:h5});function g5(r,e){let t=C(r,"a","logicalAnd","bool"),n=C(e,"b","logicalAnd","bool");Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(aa,o)}var jr=_({logicalAnd_:g5});function b5(r){let t={x:C(r,"x","logicalNot","bool")};return D.runKernel(Li,t)}var Wl=_({logicalNot_:b5});function y5(r,e){let t=C(r,"a","logicalOr","bool"),n=C(e,"b","logicalOr","bool");Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(vl,o)}var Df=_({logicalOr_:y5});function x5(r,e){let t=C(r,"a","logicalXor","bool"),n=C(e,"b","logicalXor","bool");return Ke(t.shape,n.shape),jr(Df(r,e),Wl(jr(r,e)))}var T5=_({logicalXor_:x5});function k5(r,e,t,n,o){let s=C(r,"x","maxPool"),a=1,i=s,u=!1;s.rank===3&&(u=!0,i=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),P(Rr(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),o!=null&&P(mt(n),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},c=D.runKernel(Co,l,p);return u?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Ul=_({maxPool_:k5});function I5(r,e=[1,1,1],t,n,o,s="NDHWC"){let a=C(r,"x","maxPool3d"),i=a,u=!1;a.rank===4&&(u=!0,i=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),P(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),o!=null&&P(mt(n),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},c=D.runKernel($u,l,p);return u?L(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Pf=_({maxPool3d_:I5});function C5(r,e,t,n,o=!1){let a={x:C(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},u=D.runKernel(dc,a,i);return{result:u[0],indexes:u[1]}}var WI=_({maxPoolWithArgmax_:C5});function v5(r,e){let t=C(r,"a","maximum"),n=C(e,"b","maximum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=Z(t,"int32"),n=Z(n,"int32")),Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Io,o)}var qn=_({maximum_:v5});function w5(r,e=null,t=!1){let o={x:C(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(vo,o,s)}var Lt=_({mean_:w5});function Tt(r,e="float32"){if(e==="complex64"){let n=Tt(r,"float32"),o=Tt(r,"float32");return jn(n,o)}let t=Xp(ct(r),e);return D.makeTensor(t,r,e)}function mr(r,e="float32"){if(e==="complex64"){let n=mr(r,"float32"),o=Tt(r,"float32");return jn(n,o)}let t=tf(ct(r),e);return D.makeTensor(t,r,e)}function S5(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=C(r,"x","meshgrid",r instanceof Qe?r.dtype:"float32");if(e===void 0)return[n];let o=C(e,"y","meshgrid",e instanceof Qe?e.dtype:"float32"),s=ct(n.shape),a=ct(o.shape);return t==="xy"?(n=L(n,[1,-1]),o=L(o,[-1,1]),[je(mr([a,1],n.dtype),n),je(o,mr([1,s],o.dtype))]):(n=L(n,[-1,1]),o=L(o,[1,-1]),[je(n,mr([1,a],n.dtype)),je(mr([s,1],o.dtype),o)])}function _5(r,e=null,t=!1){let o={x:C(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(wo,o,s)}var Oc=_({min_:_5});function A5(r,e){let t=C(r,"a","minimum"),n=C(e,"b","minimum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=Z(t,"int32"),n=Z(n,"int32")),Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(So,o)}var nu=_({minimum_:A5});function N5(r,e,t){P(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=C(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)P(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return D.runKernel(_o,a,s)}var UI=_({mirrorPad_:N5});function D5(r,e){let t=C(r,"a","mod"),n=C(e,"b","mod");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel($i,o)}var KI=_({mod_:D5});function P5(r){let e=C(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var Xe=_({square_:P5});function F5(r,e=null,t=!1){r=C(r,"x","moments");let n=yr(e,r.shape),o=Lt(r,n,t),s=o.shape;t||(s=Ns(o.shape,n));let a=Xe(ue(Z(r,"float32"),L(o,s))),i=Lt(a,n,t);return{mean:o,variance:i}}var zc=_({moments_:F5});function M5(r,e,t,n){let o=C(e,"data","multiRNNCell"),s=ji(t,"c","multiRNNCell"),a=ji(n,"h","multiRNNCell"),i=o,u=[];for(let c=0;c<r.length;c++){let m=r[c](i,s[c],a[c]);u.push(m[0]),u.push(m[1]),i=m[1]}let l=[],p=[];for(let c=0;c<u.length;c+=2)l.push(u[c]),p.push(u[c+1]);return[l,p]}var E5=_({multiRNNCell_:M5});function R5(r,e,t,n=!1){let o=C(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let u={logits:a===1?L(o,[1,-1]):o},l={numSamples:e,seed:t,normalized:n},p=D.runKernel(hc,u,l);return a===1?L(p,[p.size]):p}var VI=_({multinomial_:R5});function L5(r,e){let t=C(r,"a","notEqual","string_or_numeric"),n=C(e,"b","notEqual","string_or_numeric");[t,n]=Ze(t,n),Ke(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ia,o)}var ri=_({notEqual_:L5});function $5(r){let t={x:C(r,"x","onesLike")};return D.runKernel(cs,t)}var Ar=_({onesLike_:$5});function B5(r,e){let t=C(r,"v1","outerProduct"),n=C(e,"v2","outerProduct");P(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=L(t,[-1,1]),s=L(n,[1,-1]);return je(o,s)}var O5=_({outerProduct_:B5});function z5(r,e,t=0){let n=C(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(No,s,o)}var Nn=_({pad_:z5});function G5(r,e,t=0){return P(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Nn(r,[e],t)}var W5=_({pad1d_:G5});function U5(r,e,t=0){return P(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Nn(r,e,t)}var K5=_({pad2d_:U5});function V5(r,e,t=0){return P(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Nn(r,e,t)}var j5=_({pad3d_:V5});function H5(r,e,t=0){return P(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Nn(r,e,t)}var q5=_({pad4d_:H5});function X5(r,e,t){let n=C(r,"x","spaceToBatchND");P(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),P(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),P(n.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+t[u-1][0]+t[u-1][1])%e[u-1]==0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(gs,o,s)}var Kl=_({spaceToBatchND_:X5});function Y5(r,e,t,n,o,s){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=C(r,"x","maxPool"),i=a,u=!1;a.rank===3&&(u=!0,i=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(Rr(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let l=hI(i.shape,e,s,o,n),p=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=Z5([l.filterHeight,l.filterWidth],p):c=[[0,0],[0,0]];let m=p[0]===1&&p[1]===1,[f,d]=Q5([l.inHeight,l.inWidth],p,c),h=m?n:"valid",g=m?i:Kl(i,p,f),T=(t==="avg"?()=>Rl(g,e,s,h):()=>Ul(g,e,s,h))(),x=m?T:Ll(T,p,d);return u?L(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function Q5(r,e,t){let n=t.map(p=>p[0]),o=t.map(p=>p[1]),s=r.concat(n,o),a=e.map((p,c)=>(p-s[c]%p)%p),i=o.map((p,c)=>p+a[c]),u=e.map((p,c)=>[n[c],i[c]]),l=e.map((p,c)=>[0,a[c]]);return[u,l]}function Z5(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var J5=_({pool_:Y5});function e8(r,e){let t=C(r,"base","pow"),n=C(e,"exp","pow");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Do,o)}var Dn=_({pow_:e8});function t8(r,e){let t=C(r,"x","prelu"),n=C(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(Po,o)}var Vl=_({prelu_:t8});function r8(r,e=null,t=!1){let n=C(r,"x","prod");n.dtype==="bool"&&(n=Z(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(ca,o,s)}var Ff=_({prod_:r8});function n8(r,e,t){let n=ct(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var o8=_({rand_:n8});var kb=kl(Mf());var Gc=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=kb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},ZI=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=kb.alea(s.toString()),this.randn=new Gc(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},JI=class{constructor(e=0,t=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=kb.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function c8(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new ZI(e,t,n,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var m8=_({randomGamma_:c8});function f8(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new Gc(e,t,n,!1,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Ib=_({randomNormal_:f8});function d8(r,e=0,t=1,n="float32",o){let s=Ce(r,n),a=new JI(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var va=_({randomUniform_:d8});function ou(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(Ha,{},o)}function h8(r){let t={input:C(r,"input","real")};return D.runKernel(Bu,t)}var Hu=_({real_:h8});function g8(r){let t={x:C(r,"x","reciprocal")};return D.runKernel(Oi,t)}var eC=_({reciprocal_:g8});function b8(r){let t={x:C(r,"x","relu")};return D.runKernel(Fo,t)}var Hr=_({relu_:b8});function y8(r){let t={x:C(r,"x","relu6")};return D.runKernel(Eo,t)}var Ef=_({relu6_:y8});function x8(r,e){let n={x:C(r,"x","reverse")},o={dims:e};return D.runKernel(ma,n,o)}var xr=_({reverse_:x8});function T8(r){let e=C(r,"x","reverse");return P(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),xr(e,0)}var k8=_({reverse1d_:T8});function I8(r,e){let t=C(r,"x","reverse");return P(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),xr(t,e)}var C8=_({reverse2d_:I8});function v8(r,e){let t=C(r,"x","reverse");return P(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),xr(t,e)}var w8=_({reverse3d_:v8});function S8(r,e){let t=C(r,"x","reverse");return P(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),xr(t,e)}var _8=_({reverse4d_:S8});function A8(r){let t={x:C(r,"x","round")};return D.runKernel(fa,t)}var Rf=_({round_:A8});function N8(r){let t={x:C(r,"x","rsqrt","float32")};return D.runKernel(Ro,t)}var Lf=_({rsqrt_:N8});function ce(r,e){if((kr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&kr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return an(r,[],[],e)}function D8(r){let t={x:C(r,"x","selu")};return D.runKernel(zi,t)}var $f=_({selu_:D8});function P8(r,e,t,n,o,s=[1,1],a="NHWC"){let i=C(r,"x","separableConv2d"),u=C(e,"depthwiseFilter","separableConv2d"),l=C(t,"pointwiseFilter","separableConv2d"),p=i,c=!1;if(i.rank===3&&(c=!0,p=L(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),P(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let m=u.shape[2],f=u.shape[3];P(l.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${l.shape[2]}.`);let d=eu(p,u,n,o,a,s),g=Hn(d,l,1,"valid",a);return c?L(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var tC=_({separableConv2d_:P8});async function F8(r,e){let t=C(r,"x","setdiff1d"),n=C(e,"y","setdiff1d");P(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),P(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),P(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let p=0;p<o.length;p++)a.has(o[p])||i++;let u=new xt([i],t.dtype),l=new xt([i],"int32");for(let p=0,c=0;p<o.length;p++)a.has(o[p])||(u.values[c]=o[p],l.values[c]=p,c++);return[u.toTensor(),l.toTensor()]}var rC=F8;function M8(r){let t={x:C(r,"x","sign")};return D.runKernel(Gi,t)}var nC=_({sign_:M8});function E8(r){let t={x:C(r,"x","sin","float32")};return D.runKernel(Lo,t)}var Bf=_({sin_:E8});function R8(r){let t={x:C(r,"x","sinh")};return D.runKernel(ha,t)}var Of=_({sinh_:R8});function L8(r,e,t){let n=C(r,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Ue(n,[e],[t])}var zf=_({slice1d_:L8});function $8(r,e,t){let n=C(r,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Ue(n,e,t)}var Cb=_({slice2d_:$8});function B8(r,e,t){let n=C(r,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Ue(n,e,t)}var Gf=_({slice3d_:B8});function O8(r,e,t){let n=C(r,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Ue(n,e,t)}var Wc=_({slice4d_:O8});function z8(r,e=-1){let t=C(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel(zo,n,o)}var Hl=_({softmax_:z8});function G8(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(uc,e)}var ql=_({fft_:G8});function W8(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(lc,e)}var qu=_({ifft_:W8});function U8(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=L(r,[t,e]);n=qu(o)}else{let o=[t,2*(e-1)],s=L(Hu(r),[t,e]),a=L(Ol(r),[t,e]),i=xr(Ue(s,[0,1],[t,e-2]),1),u=R(xr(Ue(a,[0,1],[t,e-2]),1),ce(-1)),l=lt([s,i],1),p=lt([a,u],1),c=L(jn(l,p),[o[0],o[1]]);n=qu(c)}if(n=Hu(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=L(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Wf=_({irfft_:U8});function K8(r,e,t=0){let o={x:C(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(bs,o,s)}var Ir=_({split_:K8});function V8(r,e){P(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let d=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=Ue(r,d,h),t=e}else if(e!=null&&e>t){let d=r.shape.map(h=>h);d[r.shape.length-1]=e-t,o=lt([r,Tt(d)],r.shape.length-1),t=e}else o=r;let s=De(o),a=L(jn(o,s),[n,t]),i=ql(a),u=Math.floor(t/2)+1,l=Hu(i),p=Ol(i),c=Ir(l,[u,t-u],l.shape.length-1),m=Ir(p,[u,t-u],p.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=u,L(jn(c[0],m[0]),f)}var Xl=_({rfft_:V8});function j8(r){let t={x:C(r,"x","sqrt","float32")};return D.runKernel(Bo,t)}var $t=_({sqrt_:j8});function H8(r,e){let t=C(r,"a","squaredDifference"),n=C(e,"b","squaredDifference");[t,n]=Ze(t,n),Ke(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Go,o,s)}var Uf=_({squaredDifference_:H8});function q8(r,e){let t=C(r,"x","squeeze");return L(t,dk(t.shape,e).newShape)}var cn=_({squeeze_:q8});function X8(r,e=0){let t=ji(r,"tensors","stack","string_or_numeric");P(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&P(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(ms,n,o)}var fr=_({stack_:X8});function Y8(r,e=0){let n={x:C(r,"x","step")},o={alpha:e};return D.runKernel(Ts,n,o)}var su=_({step_:Y8});function Q8(r,e,t,n,o=0,s=0,a=0,i=0,u=0){let p={x:C(r,"x","stridedSlice","string_or_numeric")},c={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return D.runKernel(ga,p,c)}var oC=_({stridedSlice_:Q8});function Z8(r){let t={x:C(r,"x","tan","float32")};return D.runKernel(ba,t)}var sC=_({tan_:Z8});function Wt(r,e){to(r);let t=Wr(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return an(r,null,t,e)}function ni(r,e,t){if(to(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Wr(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return an(r,e,n,t)}function J8(r,e,t){if(to(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Wr(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return an(r,e,n,t)}function eX(r,e,t){if(to(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Wr(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return an(r,e,n,t)}function tX(r,e,t){if(to(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Wr(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,an(r,e,n,t)}function rX(r,e=1,t=!0){let n=C(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,u]=D.runKernel(ya,s,a);return{values:i,indices:u}}var aC=_({topk_:rX});function nX(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Gc(e,t,n,!0,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Yl=_({truncatedNormal_:nX});function oX(r,e=0){let t=C(r,"x","unique","string_or_numeric");P(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=D.runKernel(vc,n,o);return{values:s,indices:a}}var vb=_({unique_:oX});function sX(r,e,t){let n=C(r,"x","unsortedSegmentSum"),o=C(e,"segmentIds","unsortedSegmentSum","int32");P(mt(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return D.runKernel(Gu,s,a)}var iC=_({unsortedSegmentSum_:sX});function aX(r,e=0){let t=C(r,"x","unstack","string_or_numeric");P(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(ys,n,o)}var Br=_({unstack_:aX});function uC(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function wb(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Ce(r,"int32"),o=Ce([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function iX(r){let e=C(r,"condition","whereAsync","bool"),t=await e.data(),n=wb(e.shape,t);return r!==e&&e.dispose(),n}var Kf=iX;async function uX(r,e,t){let n=C(r,"tensor","boolMask"),o=C(e,"mask","boolMask","bool"),s=t??0,a=o.rank,i=n.shape;P(a>0,()=>"mask cannot be scalar"),Ut(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+a;h++)u*=i[h];let l=i.slice(0,s).concat([u],i.slice(s+a)),p=L(n,l),c=L(o,[-1]),m=await Kf(c),f=cn(m,[1]),d=ei(p,f,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),f.dispose(),p.dispose(),c.dispose(),m.dispose(),d}var mLe=uX;function lX(r,e="euclidean",t=null,n=!1){r=C(r,"x","norm");let o=W0(r,e,t),s=o.shape;if(n){let a=yr(t,r.shape);s=Ns(o.shape,a)}return L(o,s)}function W0(r,e,t=null){if(r.rank===0)return zt(r);if(r.rank!==1&&t===null)return W0(L(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return he(zt(r),t);if(e===1/0)return Zr(zt(r),t);if(e===-1/0)return Oc(zt(r),t);if(e==="euclidean"||e===2)return $t(he(Dn(zt(r),ce(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Zr(he(zt(r),t[0]),t[1]-1);if(e===1/0)return Zr(he(zt(r),t[1]),t[0]);if(e===-1/0)return Oc(he(zt(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return $t(he(Xe(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Sb=_({norm_:lX});function pX(r,e,t,n,o=!0){let s=C(r,"v","movingAverage"),a=C(e,"x","movingAverage"),i=C(t,"decay","movingAverage");Rk(s,a),P(zn(s.shape,a.shape),()=>"Shape mismatch in v and x");let u=ce(1),l=ue(u,i),p=R(ue(a,s),l);if(o){P(n!=null,()=>"When using zeroDebias: true, step is required.");let c=C(n,"step","movingAverage");p=pe(p,ue(u,Dn(i,c)))}return X(s,p)}var BLe=_({movingAverage_:pX});function cX(r,e,t){let n=C(r,"indices","scatterND","int32"),o=C(e,"updates","scatterND");mb(o,n,t);let s={indices:n,updates:o},a={shape:t};return D.runKernel(da,s,a)}var U0=_({scatterND_:cX});function K0(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function mX(r,e,t,n=0){let o=C(r,"sparseIndices","sparseToDense","int32"),s=C(e,"sparseValues","sparseToDense"),a=C(n,"defaultValue","sparseToDense",s.dtype);K0(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},u={outputShape:t};return D.runKernel(Ou,i,u)}var _b=_({sparseToDense_:mX});function fX(r,e){let t=C(e,"indices","gatherND","int32"),o={params:C(r,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(ta,o)}var V0=_({gatherND_:fX});function j0(r,e){if(e==null)return r.shape.slice();if(zn(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function dX(r,e,t,n){let o=C(r,"x","dropout");if(P(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),P(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Qe?o.clone():o;let s=j0(o,t),a=1-e,i=pe(ru(X(va(s,0,1,"float32",n),a)),a);return R(o,i)}var H0=_({dropout_:dX});function q0(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Ab(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return Wt(o,"float32")}async function hX(r,e,t=1){let n=C(r,"predictions","inTopK"),o=C(e,"targets","inTopK");P(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),P(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Ut(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];P(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[u,l]=[a.length/s,s],p=hk("bool",u);for(let c=0;c<u;c++){let m=c*l,f=a.subarray(m,m+l),d=[];for(let h=0;h<f.length;h++)d.push({value:f[h],index:h});d.sort((h,g)=>g.value-h.value),p[c]=0;for(let h=0;h<t;h++)if(d[h].index===i[c]){p[c]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Er(p,o.shape,"bool")}var _$e=hX;var Ds={};Ye(Ds,{conv2d:()=>X0,depthwiseConv2d:()=>Y0,matMul:()=>Q0});function gX(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=L(e,[1,e.shape[0],e.shape[1],e.shape[2]])),P(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),P(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),P(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let l=s==="NHWC"?i.shape[3]:i.shape[1],p=s==="NHWC"?u.shape[3]:u.shape[1];P(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),P(p===t[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${t[3]}).`),a!=null&&P(mt(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let c={x:i,dy:u},m={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return D.runKernel(ec,c,m)}var Uc=_({conv2DBackpropFilter_:gX});function Ql(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return R(r,su(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Zl(r,e){let t=e,n=wt(r.shape,e.shape);return n.length>0&&(t=he(t,n)),L(t,r.shape)}function Jl(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Hr(r);if(e==="elu")return tu(r);if(e==="relu6")return Ef(r);if(e==="prelu")return Vl(r,t);if(e==="leakyrelu")return zl(r,n);if(e==="sigmoid")return ln(r);throw new Error(`Unknown fused activation ${e}.`)}var ep=(r,e)=>!(r>0)||e==="linear";function bX({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(u=u||"linear",ep(D.state.gradientDepth,u)===!1){let v=Hn(r,e,t,n,o,s,a);return i!=null&&(v=X(v,i)),Jl(v,u,l,p)}let c=C(r,"x","conv2d","float32"),m=C(e,"filter","conv2d","float32"),f=c,d=!1;c.rank===3&&(d=!0,f=L(c,[1,c.shape[0],c.shape[1],c.shape[2]])),P(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),P(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),a!=null&&P(mt(n),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),P(f.shape[3]===m.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${m.shape[2]}.`),P(Rr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let h=Ml(f.shape,m.shape,t,s,n,a),g;i!=null&&(g=C(i,"bias","fused conv2d"),[g]=Ze(g,c),Ke(h.outShape,g.shape));let y;l!=null&&(y=C(l,"prelu weights","fused conv2d"));let T=(v,N)=>{let[A,F,E,$]=N,U=Ql(v,E,u);P(jo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let K=$c(F.shape,U,A,t,n),B=Uc(F,U,A.shape,t,n),V=[K,B];if($!=null){let j=Zl($,U);V.push(j)}return V},x={x:f,filter:m,bias:g,preluActivationWeights:y},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?pn((N,A,F)=>{let E=D.runKernel(Is,x,k);return F([A,N,E]),d&&(E=L(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:T}})(f,m):pn((N,A,F,E)=>{let $=D.runKernel(Is,x,k);return E([A,N,$,F]),d&&($=L($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:T}})(f,m,g)}var X0=_({fusedConv2d_:bX});function yX(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={x:i,dy:u},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return D.runKernel(oc,l,p)}var Nb=_({depthwiseConv2dNativeBackpropFilter_:yX});function xX(r,e,t,n,o,s=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={dy:i,filter:t},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},c=D.runKernel(sc,l,p);return u?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Db=_({depthwiseConv2dNativeBackpropInput_:xX});function TX({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(ep(D.state.gradientDepth,u)===!1){let v=eu(r,e,t,n,o,s,a);return i!=null&&(v=X(v,i)),Jl(v,u,l,p)}let c=C(r,"x","depthwiseConv2d","float32"),m=C(e,"filter","depthwiseConv2d","float32"),f=c,d=!1;c.rank===3&&(d=!0,f=L(c,[1,c.shape[0],c.shape[1],c.shape[2]])),P(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),P(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),P(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),P(Rr(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),a!=null&&P(mt(n),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${n}.`);let h=Ml(f.shape,m.shape,t,s,n,a,!0),g;i!=null&&(g=C(i,"bias","fused conv2d"),[g]=Ze(g,c),Ke(h.outShape,g.shape));let y;l!=null&&(y=C(l,"prelu weights","fused depthwiseConv2d"));let T=(v,N)=>{P(jo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[A,F,E,$]=N,U=Ql(v,E,u),K=Db(F.shape,U,A,t,n,s,a),B=Nb(F,U,A.shape,t,n,s,a);if($!=null){let V=Zl(g,U);return[K,B,V]}return[K,B]},x={x:f,filter:m,bias:g,preluActivationWeights:y},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?pn((N,A,F)=>{let E=D.runKernel(Cs,x,k);return F([A,N,E]),d&&(E=L(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:T}})(f,m):pn((N,A,F,E)=>{let $=D.runKernel(Cs,x,k);return E([A,N,$,F]),d&&($=L($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:T}})(f,m,g)}var Y0=_({fusedDepthwiseConv2d_:TX});function kX({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(ep(D.state.gradientDepth,s)===!1){let U=je(r,e,t,n);return o!=null&&(U=X(U,o)),Jl(U,s,a,i)}let u=C(r,"a","fused matMul"),l=C(e,"b","fused matMul");[u,l]=Ze(u,l);let p=t?u.shape[u.rank-2]:u.shape[u.rank-1],c=n?l.shape[l.rank-1]:l.shape[l.rank-2],m=t?u.shape[u.rank-1]:u.shape[u.rank-2],f=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=ct(d),y=ct(h);P(p===c,()=>`Error in fused matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${t} and transposeB=${n} must match.`);let x=Ke(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([m,f]),k=t?L(u,[g,p,m]):L(u,[g,m,p]),v=n?L(l,[y,f,c]):L(l,[y,c,f]),N;o!=null&&(N=C(o,"bias","fused matMul"),[N]=Ze(N,u),Ke(x,N.shape));let A;a!=null&&(A=C(a,"prelu weights","fused matMul"));let F=(U,K)=>{let[B,V,j,q]=K,J=Ql(L(U,j.shape),j,s),Y,Q;if(!t&&!n?(Y=je(J,V,!1,!0),Q=je(B,J,!0,!1)):!t&&n?(Y=je(J,V,!1,!1),Q=je(J,B,!0,!1)):t&&!n?(Y=je(V,J,!1,!0),Q=je(B,J,!1,!1)):(Y=je(V,J,!0,!0),Q=je(J,B,!0,!0)),o!=null){let oe=Zl(q,J);return[Y,Q,oe]}else return[Y,Q]},E={a:k,b:v,bias:N,preluActivationWeights:A},$={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?pn((K,B,V)=>{let j=D.runKernel(ks,E,$);return V([K,B,j]),{value:L(j,x),gradFunc:F}})(k,v):pn((K,B,V,j)=>{let q=D.runKernel(ks,E,$);return j([K,B,q,V]),{value:L(q,x),gradFunc:F}})(k,v,N)}var Q0=_({fusedMatMul_:kX});function IX(r){return Ab(r,.54,.46)}var Z0=_({hammingWindow_:IX});function CX(r){return Ab(r,.5,.5)}var Pb=_({hannWindow_:CX});function vX(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Ue(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,u=lt([Ue(r,s,e-i),Ca([i],o)]);a.push(u),s+=t}return a.length===0?ni([],[0,e]):L(lt(a),[a.length,e])}var Fb=_({frame_:vX});function wX(r,e,t,n,o=Pb){n==null&&(n=q0(e));let s=Fb(r,e,t),a=R(s,o(e));return Xl(a,n)}var J0=_({stft_:wX});function SX(r,e,t,n,o="bilinear",s=0){let a=C(r,"image","cropAndResize"),i=C(e,"boxes","cropAndResize","float32"),u=C(t,"boxInd","cropAndResize","int32"),l=i.shape[0];P(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),P(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),P(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let p={image:a,boxes:i,boxInd:u},c={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(Ys,p,c)}var e2=_({cropAndResize_:SX});function _X(r){let e=C(r,"image","flipLeftRight","float32");P(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(ea,t,{})}var t2=_({flipLeftRight_:_X});function AX(r){let e=C(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];P(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Vr(e,o)}var r2=_({grayscaleToRGB_:AX});function NX(r,e,t=0,n=.5){let o=C(r,"image","rotateWithOffset","float32");P(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return D.runKernel(Ta,s,a)}var n2=_({rotateWithOffset_:NX});function Ps(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),P(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),P(e.rank===1,()=>"scores must be a 1D tensor"),P(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),P(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function DX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=C(r,"boxes","nonMaxSuppression","float32"),a=C(e,"scores","nonMaxSuppression","float32"),i=Ps(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(ua,{boxes:s,scores:a},u)}var o2=_({nonMaxSuppression_:DX});function s2(r,e,t){let n=PX(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function PX(r,e,t){return MX(r,e,t||FX)}function FX(r,e){return r>e?1:r<e?-1:0}function MX(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function Mb(r,e,t,n,o){return lC(r,e,t,n,o,0)}function Eb(r,e,t,n,o,s){return lC(r,e,t,n,o,0,!1,s,!0)}function Rb(r,e,t,n,o,s){return lC(r,e,t,n,o,s,!0)}function lC(r,e,t,n,o,s,a=!1,i=!1,u=!1){let l=[];for(let g=0;g<e.length;g++)e[g]>o&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(a2);let p=s>0?-.5/s:0,c=[],m=[];for(;c.length<t&&l.length>0;){let g=l.pop(),{score:y,boxIndex:T,suppressBeginIndex:x}=g;if(y<o)break;let k=!1;for(let v=c.length-1;v>=x;--v){let N=EX(r,T,c[v]);if(N>=n){k=!0;break}if(g.score=g.score*RX(n,p,N),g.score<=o)break}g.suppressBeginIndex=c.length,k||(g.score===y?(c.push(T),m.push(g.score)):g.score>o&&s2(l,g,a2))}let f=c.length,d=t-f;i&&d>0&&(c.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let h={selectedIndices:c};return a&&(h.selectedScores=m),u&&(h.validOutputs=f),h}function EX(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),p=Math.min(o[1],o[3]),c=Math.max(o[0],o[2]),m=Math.max(o[1],o[3]),f=(i-s)*(u-a),d=(c-l)*(m-p);if(f<=0||d<=0)return 0;let h=Math.max(s,l),g=Math.max(a,p),y=Math.min(i,c),T=Math.min(u,m),x=Math.max(y-h,0)*Math.max(T-g,0);return x/(f+d-x)}function RX(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function a2(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function LX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=C(r,"boxes","nonMaxSuppressionAsync"),a=C(e,"scores","nonMaxSuppressionAsync"),i=Ps(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u=await Promise.all([s.data(),a.data()]),l=u[0],p=u[1],{selectedIndices:c}=Mb(l,p,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),Wt(c,"int32")}var i2=LX;function $X(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=C(r,"boxes","nonMaxSuppression"),i=C(e,"scores","nonMaxSuppression"),u=Ps(a,i,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:a,scores:i},p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},c=D.runKernel(la,l,p);return{selectedIndices:c[0],selectedScores:c[1]}}var u2=_({nonMaxSuppressionWithScore_:$X});async function BX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=C(r,"boxes","nonMaxSuppressionAsync"),i=C(e,"scores","nonMaxSuppressionAsync"),u=Ps(a,i,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([a.data(),i.data()]),p=l[0],c=l[1],{selectedIndices:m,selectedScores:f}=Rb(p,c,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Wt(m,"int32"),selectedScores:Wt(f)}}var l2=BX;function OX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=C(r,"boxes","nonMaxSuppression"),i=C(e,"scores","nonMaxSuppression"),u=Ps(a,i,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,c=u.scoreThreshold,m={boxes:a,scores:i},f={maxOutputSize:l,iouThreshold:p,scoreThreshold:c,padToMaxOutputSize:s},d=D.runKernel(Bi,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var p2=_({nonMaxSuppressionPadded_:OX});async function zX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=C(r,"boxes","nonMaxSuppressionAsync"),i=C(e,"scores","nonMaxSuppressionAsync"),u=Ps(a,i,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,c=u.scoreThreshold,[m,f]=await Promise.all([a.data(),i.data()]),{selectedIndices:d,validOutputs:h}=Eb(m,f,l,p,c,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Wt(d,"int32"),validOutputs:ce(h,"int32")}}var c2=zX;function GX(r,e,t=!1,n=!1){let o=C(r,"images","resizeBilinear");P(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),P(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=D.runKernel(Mo,i,u);return a?L(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var m2=_({resizeBilinear_:GX});function WX(r,e,t=!1,n=!1){let o=C(r,"images","resizeNearestNeighbor");P(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),P(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=D.runKernel(qa,i,u);return a?L(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var f2=_({resizeNearestNeighbor_:WX});function UX(r,e="binary",t=!1,n=.5){let o=C(r,"image","threshold"),s=.2989,a=.587,i=.114,u=o.shape[0]*o.shape[1],l=R(Wt([n]),255),p,c,m,f;if(P(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),P(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),P(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),P(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[p,c,m]=Ir(o,[1,1,1],-1);let g=R(p,s),y=R(c,a),T=R(m,i);f=X(X(g,y),T)}else f=r;if(e==="otsu"){let g=kf(Z(Rf(f),"int32"),Er([]),256);l=KX(g,u)}let d=t?qo(f,l):nr(f,l);return Z(R(d,255),"int32")}function KX(r,e){let t=Wt([-1]),n=Wt([0]),o=Wt([0]),s,a,i,u,l,p;for(let c=0;c<r.size-1;c++){s=Ue(r,0,c+1),a=Ue(r,c+1),l=pe(he(s),e),p=pe(he(a),e);let m=he(R(s,ou(0,s.size)));i=pe(m,he(s));let f=Ca(a.shape,s.size),d=X(ou(0,a.size),f),h=R(a,d);u=pe(he(h),he(a));let g=ue(i,u),y=ue(i,u),T=R(l,p);o=R(R(T,g),y);let x=nr(o,n);n=Gt(x,o,n),t=Gt(x,Wt([c]),t)}return t}var d2=_({threshold_:UX});function VX(r,e,t="nearest",n="constant",o=0,s){let a=C(r,"image","transform","float32"),i=C(e,"transforms","transform","float32");P(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),P(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:a,transforms:i},l={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return D.runKernel(xa,u,l)}var h2=_({transform_:VX});function jX(r,e,t){P(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),P(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=C(r,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=L(ou(0,s,1,"int32"),[-1,1]),u=ou(0,a,1,"int32"),l=ue(i,u),p=jr(qo(l,ce(+e,"int32")),Ho(l,ce(-t,"int32"))),c=Tt([s,a],n.dtype);return L(fr(Br(L(n,[-1,s,a])).map(m=>Gt(p,m,c))),o)}var g2=_({bandPart_:jX});function HX(r){let e;if(Array.isArray(r)){e=!1,P(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)P(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=Ir(r,r.shape[0],0).map(o=>cn(o,[0]));P(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=R(he(R(t[a],s)),t[a]);s=ue(s,i)}return pe(s,Sb(s,"euclidean"))}));return e?fr(t,0):t}var b2=_({gramSchmidt_:HX});function qX(r,e=!1){if(P(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return y2(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=Br(L(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,p]=y2(u,e);o.push(l),s.push(p)});let a=L(fr(o,0),r.shape),i=L(fr(s,0),r.shape);return[a,i]}}function y2(r,e=!1){return D.tidy(()=>{P(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=Bc(t),s=_n(r),a=ni([[1]],[1,1]),i=_n(a),u=t>=n?n:t;for(let l=0;l<u;++l){let p=s,c=i,m=o;[i,s,o]=D.tidy(()=>{let f=Ue(s,[l,l],[t-l,1]),d=Sb(f),h=Ue(s,[l,l],[1,1]),g=Gt(nr(h,0),ni([[-1]]),ni([[1]])),y=ue(h,R(g,d)),T=pe(f,y);T.shape[0]===1?i=_n(a):i=lt([a,Ue(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);let x=et(pe(je(g,y),d)),k=Ue(s,[l,0],[t-l,n]),v=R(x,i),N=qe(i);if(l===0)s=ue(k,je(v,je(N,k)));else{let E=ue(k,je(v,je(N,k)));s=lt([Ue(s,[0,0],[l,n]),E],0)}let A=qe(v),F=Ue(o,[0,l],[t,o.shape[1]-l]);if(l===0)o=ue(F,je(je(F,i),A));else{let E=ue(F,je(je(F,i),A));o=lt([Ue(o,[0,0],[t,l]),E],1)}return[i,s,o]}),Ee([p,c,m])}return!e&&t>n&&(o=Ue(o,[0,0],[t,n]),s=Ue(s,[0,0],[n,n])),[o,s]})}var x2=_({qr_:qX});var or;(function(o){o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(or||(or={}));function XX(r,e,t=or.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=C(e,"weights","computeWeightedLoss"));let s=o==null?n:R(n,o);if(t===or.NONE)return s;if(t===or.SUM)return he(s);if(t===or.MEAN){if(o==null)return Lt(s);{let a=n.size/o.size,i=pe(he(s),he(o));return a>1?pe(i,ce(a)):i}}if(t===or.SUM_BY_NONZERO_WEIGHTS){if(o==null)return pe(he(s),ce(n.size));{let a=R(o,mr(n.shape)),i=Z(he(ri(a,ce(0))),"float32");return pe(he(s),i)}}throw Error(`Unknown reduction: ${t}`)}var qr=_({computeWeightedLoss_:XX});function YX(r,e,t,n=or.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"labels","absoluteDifference"),s=C(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=C(t,"weights","absoluteDifference")),Ut(o.shape,s.shape,"Error in absoluteDifference: ");let i=zt(ue(o,s));return qr(i,a,n)}var T2=_({absoluteDifference_:YX});function QX(r,e,t,n,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"labels","cosineDistance"),a=C(e,"predictions","cosineDistance"),i=null;n!=null&&(i=C(n,"weights","cosineDistance")),Ut(s.shape,a.shape,"Error in cosineDistance: ");let u=ce(1),l=ue(u,he(R(s,a),t,!0));return qr(l,i,o)}var k2=_({cosineDistance_:QX});function ZX(r,e,t,n=or.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"labels","hingeLoss"),s=C(e,"predictions","hingeLoss"),a=null;t!=null&&(a=C(t,"weights","hingeLoss")),Ut(o.shape,s.shape,"Error in hingeLoss: ");let i=ce(1);o=ue(R(ce(2),o),i);let u=Hr(ue(i,R(o,s)));return qr(u,a,n)}var I2=_({hingeLoss_:ZX});function JX(r,e,t,n=1,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"labels","huberLoss"),a=C(e,"predictions","huberLoss"),i=null;t!=null&&(i=C(t,"weights","huberLoss")),Ut(s.shape,a.shape,"Error in huberLoss: ");let u=ce(n),l=zt(ue(a,s)),p=nu(l,u),c=ue(l,p),m=X(R(ce(.5),Xe(p)),R(u,c));return qr(m,i,o)}var C2=_({huberLoss_:JX});function eY(r,e,t,n=1e-7,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"labels","logLoss"),a=C(e,"predictions","logLoss"),i=null;t!=null&&(i=C(t,"weights","logLoss")),Ut(s.shape,a.shape,"Error in logLoss: ");let u=ce(1),l=ce(n),p=et(R(s,$r(X(a,l)))),c=R(ue(u,s),$r(X(ue(u,a),l))),m=ue(p,c);return qr(m,i,o)}var v2=_({logLoss_:eY});function tY(r,e,t,n=or.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"labels","meanSquaredError"),s=C(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=C(t,"weights","meanSquaredError")),Ut(o.shape,s.shape,"Error in meanSquaredError: ");let i=Uf(o,s);return qr(i,a,n)}var w2=_({meanSquaredError_:tY});function rY(r,e){let t=C(r,"labels","sigmoidCrossEntropyWithLogits"),n=C(e,"logits","sigmoidCrossEntropyWithLogits");Ut(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Hr(n),s=R(n,t),a=Gl(cr(et(zt(n))));return X(ue(o,s),a)}function nY(r,e,t,n=0,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"multiClassLabels","sigmoidCrossEntropy"),a=C(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=C(t,"weights","sigmoidCrossEntropy")),Ut(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=ce(n),p=ce(1),c=ce(.5);s=X(R(s,ue(p,l)),R(c,l))}let u=rY(s,a);return qr(u,i,o)}var S2=_({sigmoidCrossEntropy_:nY});function oY(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return pn((o,s,a)=>{let u=GI(s,[t],!0),l=ue(Z(s,"float32"),u);a([o,l]);let p=et(R(l,o));return{value:he(p,[t]),gradFunc:(f,d)=>{let[h,g]=d,y=Ns(f.shape,[t]);return[R(L(f,y),ue(Z(h,"float32"),cr(g))),R(L(f,y),ue(cr(g),Z(h,"float32")))]}}})(r,e)}function sY(r,e,t,n=0,o=or.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"onehotLabels","softmaxCrossEntropy"),a=C(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=C(t,"weights","softmaxCrossEntropy")),Ut(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let l=ce(n),p=ce(1),c=ce(s.shape[1]);s=X(R(s,ue(p,l)),pe(l,c))}let u=oY(s,a);return qr(u,i,o)}var _2=_({softmaxCrossEntropy_:sY});function aY(r,e,t,n){let o=C(r,"indices","sparseFillEmptyRows"),s=C(e,"values","sparseFillEmptyRows"),a=C(t,"denseShape","sparseFillEmptyRows"),i=C(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let u={indices:o,values:s,denseShape:a,defaultValue:i},l=D.runKernel(yc,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var A2=_({sparseFillEmptyRows_:aY});function iY(r,e,t){let n=C(r,"inputIndices","sparseReshape"),o=C(e,"inputShape","sparseReshape"),s=C(t,"newShape","sparseReshape");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=D.runKernel(xc,a);return{outputIndices:i[0],outputShape:i[1]}}var N2=_({sparseReshape_:iY});function uY(r,e,t){let n=C(r,"data","sparseSegmentMean"),o=C(e,"indices","sparseSegmentMean"),s=C(t,"segmentIds","sparseSegmentMean");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel(Tc,a)}var D2=_({sparseSegmentMean_:uY});function lY(r,e,t){let n=C(r,"data","sparseSegmentSum"),o=C(e,"indices","sparseSegmentSum"),s=C(t,"segmentIds","sparseSegmentSum");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel(kc,a)}var P2=_({sparseSegmentSum_:lY});function pY(r,e,t,n,o,s,a,i){let u=C(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=C(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},c={data:u,dataSplits:l},m=D.runKernel(zu,c,p);return{nGrams:m[0],nGramsSplits:m[1]}}var F2=_({stringNGrams_:pY});function cY(r,e,t=!0){let n=C(r,"input","stringSplit","string"),o=C(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},a={input:n,delimiter:o},i=D.runKernel(Ic,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var M2=_({stringSplit_:cY});function mY(r,e){let t=C(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return D.runKernel(Cc,o,n)}var E2=_({stringToHashBucketFast_:mY});var PKe={fft:ql,ifft:qu,rfft:Xl,irfft:Wf},LKe={hammingWindow:Z0,hannWindow:Pb,frame:Fb,stft:J0},Pn={flipLeftRight:t2,grayscaleToRGB:r2,resizeNearestNeighbor:f2,resizeBilinear:m2,rotateWithOffset:n2,cropAndResize:e2,nonMaxSuppression:o2,nonMaxSuppressionAsync:i2,nonMaxSuppressionWithScore:u2,nonMaxSuppressionWithScoreAsync:l2,nonMaxSuppressionPadded:p2,nonMaxSuppressionPaddedAsync:c2,threshold:d2,transform:h2},R2={bandPart:g2,gramSchmidt:b2,qr:x2},lVe={absoluteDifference:T2,computeWeightedLoss:qr,cosineDistance:k2,hingeLoss:I2,huberLoss:C2,logLoss:v2,meanSquaredError:w2,sigmoidCrossEntropy:S2,softmaxCrossEntropy:_2},Vf={sparseFillEmptyRows:A2,sparseReshape:N2,sparseSegmentMean:D2,sparseSegmentSum:P2},Lb={stringNGrams:F2,stringSplit:M2,stringToHashBucketFast:E2};var Jr=class extends db{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return Ee(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return yb(e,t)}dispose(){this.iterations_!=null&&Ee(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Jr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var tp=class extends Jr{constructor(e,t,n=null){super();this.learningRate=e;this.rho=t;this.epsilon=n;this.accumulatedGrads=[];this.accumulatedUpdates=[];n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:W(()=>De(s).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:W(()=>De(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let u=this.accumulatedGrads[o].variable,l=this.accumulatedUpdates[o].variable;W(()=>{let p=X(R(u,this.rho),R(Xe(i),1-this.rho)),c=R(pe($t(X(l,this.epsilon)),$t(X(u,this.epsilon))),i),m=X(R(l,this.rho),R(Xe(c),1-this.rho));u.assign(p),l.assign(m);let f=X(R(c,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ee(this.accumulatedGrads.map(e=>e.variable)),Ee(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};tp.className="Adadelta";An(tp);var rp=class extends Jr{constructor(e,t=.1){super();this.learningRate=e;this.initialAccumulatorValue=t;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulatedGrads[o]==null){let u=!1;this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:W(()=>Ca(s.shape,this.initialAccumulatorValue).variable(u))}}let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[o].variable;W(()=>{let u=X(i,Xe(a));i.assign(u);let l=X(R(pe(a,$t(X(u,D.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ee(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};rp.className="Adagrad";An(rp);var np=class extends Jr{constructor(e,t,n,o=null){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];W(()=>{this.accBeta1=ce(t).variable(),this.accBeta2=ce(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=ue(1,this.accBeta1),o=ue(1,this.accBeta2);t.forEach((s,a)=>{let i=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:W(()=>De(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:W(()=>De(i).variable(u))});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,m=X(R(p,this.beta1),R(l,1-this.beta1)),f=X(R(c,this.beta2),R(Xe(l),1-this.beta2)),d=pe(m,n),h=pe(f,o);p.assign(m),c.assign(f);let g=X(R(pe(d,X($t(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ee(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),W(()=>{this.accBeta1.assign(Dn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Dn(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};np.className="Adam";An(np);var op=class extends Jr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.decay=s;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];W(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=ue(1,this.accBeta1),o=pe(-this.learningRate,X(R(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:De(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:De(i).variable(u)});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,m=X(R(p,this.beta1),R(l,1-this.beta1)),f=R(c,this.beta2),d=zt(l),h=qn(f,d);p.assign(m),c.assign(h);let g=X(R(pe(o,n),pe(m,X(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(X(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ee(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};op.className="Adamax";An(op);var au=class extends Jr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let a=D.registeredVariables[n];W(()=>{let i=X(R(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Vt(ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};au.className="SGD";An(au);var sp=class extends au{constructor(e,t,n=!1){super(e);this.learningRate=e;this.momentum=t;this.useNesterov=n;this.accumulations=[];this.m=ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulations[o]==null){let u=!1;this.accumulations[o]={originalName:`${n}/momentum`,variable:W(()=>De(s).variable(u))}}let a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&W(()=>{let u,l=X(R(this.m,a),i);this.useNesterov?u=X(R(this.c,X(i,R(l,this.m))),s):u=X(R(this.c,l),s),a.assign(l),s.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ee(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};sp.className="Momentum";An(sp);var ap=class extends Jr{constructor(e,t=.9,n=0,o=null,s=!1){super();this.learningRate=e;this.decay=t;this.momentum=n;this.epsilon=o;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:W(()=>De(s).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:W(()=>De(s).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:W(()=>De(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let u=this.accumulatedMeanSquares[o].variable,l=this.accumulatedMoments[o].variable;W(()=>{let p=X(R(u,this.decay),R(Xe(i),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[o].variable,m=X(R(c,this.decay),R(i,1-this.decay)),f=pe(R(i,this.learningRate),$t(ue(p,X(Xe(m),this.epsilon)))),d=X(R(l,this.momentum),f);u.assign(p),c.assign(m),l.assign(d);let h=ue(s,d);s.assign(h)}else{let c=X(R(u,this.decay),R(Xe(i),1-this.decay)),m=X(R(l,this.momentum),pe(R(i,this.learningRate),$t(X(c,this.epsilon))));u.assign(c),l.assign(m);let f=ue(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ee(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ee(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ee(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};ap.className="RMSProp";An(ap);var oi=class{static sgd(e){return new au(e)}static momentum(e,t,n=!1){return new sp(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new ap(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new np(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new tp(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new op(e,t,n,o,s)}static adagrad(e,t=.1){return new rp(e,t)}};var ip={sgd:oi.sgd,momentum:oi.momentum,adadelta:oi.adadelta,adagrad:oi.adagrad,rmsprop:oi.rmsprop,adamax:oi.adamax,adam:oi.adam};var fY=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:r=>r())();function pC(){return new Promise(r=>fY(()=>r()))}var I={};Ye(I,{ERF_A1:()=>vY,ERF_A2:()=>wY,ERF_A3:()=>SY,ERF_A4:()=>_Y,ERF_A5:()=>AY,ERF_P:()=>CY,PARALLELIZE_THRESHOLD:()=>$b,SELU_SCALE:()=>mC,SELU_SCALEALPHA:()=>cC,applyActivation:()=>Jl,assertAndGetBroadcastShape:()=>Ke,assertAxesAreInnerMostDims:()=>f5,assertParamsConsistent:()=>dY,assignToTypedArray:()=>EY,axesAreInnerMostDims:()=>BI,calculateShapes:()=>i0,checkEinsumDimSizes:()=>zY,combineLocations:()=>w0,complexWithEvenIndex:()=>PY,complexWithOddIndex:()=>FY,computeConv2DInfo:()=>Ml,computeConv3DInfo:()=>I0,computeDefaultPad:()=>gI,computeDilation2DInfo:()=>Eq,computeOptimalWindowSize:()=>gY,computeOutAndReduceShapes:()=>OI,computeOutShape:()=>hY,computePool2DInfo:()=>hI,computePool3DInfo:()=>Rq,convertConv2DDataFormat:()=>C0,decodeEinsumEquation:()=>BY,eitherStridesOrDilationsAreOne:()=>Rr,expandShapeToKeepDim:()=>Ns,exponent:()=>LY,exponents:()=>RY,fromStringArrayToUint8:()=>XY,fromUint8ToStringArray:()=>qY,getAxesPermutation:()=>zI,getBroadcastDims:()=>o0,getComplexWithIndex:()=>MY,getEinsumComputePath:()=>GY,getEinsumPermutation:()=>OY,getFusedBiasGradient:()=>Zl,getFusedDyActivation:()=>Ql,getImageCenter:()=>bY,getInnerMostAxes:()=>d5,getPermuted:()=>xY,getReductionAxes:()=>wt,getReshaped:()=>yY,getReshapedPermuted:()=>TY,getSliceBeginCoords:()=>kY,getSliceSize:()=>IY,getUndoAxesPermutation:()=>Nf,isIdentityPermutation:()=>WY,log:()=>qj,mergeRealAndImagArrays:()=>NY,prepareAndValidate:()=>a0,prepareSplitSize:()=>KY,segment_util:()=>dC,shouldFuse:()=>ep,slice_util:()=>kt,splitRealAndImagArrays:()=>DY,tupleValuesAreOne:()=>jo,upcastType:()=>Kt,validateInput:()=>mb,validateUpdateShape:()=>eI,warn:()=>Ya});function dY(r,e){let t=r[0].length;r.forEach((o,s)=>{P(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),P(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)P(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function hY(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var $b=30;function gY(r){return r<=$b?r:qp(r,Math.floor(Math.sqrt(r)))}function bY(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function yY(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function xY(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2==1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function TY(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function kY(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function IY(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var cC=1.7580993408473768,mC=1.0507009873554805;var CY=.3275911,vY=.254829592,wY=-.284496736,SY=1.421413741,_Y=-1.453152027,AY=1.061405429;function NY(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function DY(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function PY(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function FY(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function MY(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function EY(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function RY(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function LY(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var fC="->",$Y=/->/g,L2=",",$2="...";function BY(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace($Y,"").length)/fC.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${fC}").`);let[n,o]=r.split(fC);P(n.indexOf($2)===-1,()=>`The ellipsis notation ("${$2}") is not supported yet.`);let s=n.split(L2),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let m=0;m<o.length;++m){let f=o[m];if(!s.some(d=>d.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);i.indexOf(f)===-1&&i.push(f)}for(let m=0;m<n.length;++m){let f=n[m];i.indexOf(f)===-1&&f!==L2&&i.push(f)}let u=new Array(s.length);for(let m=0;m<a;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let f=0;f<s[m].length;++f)u[m].push(i.indexOf(s[m][f]))}let l=i.length,p=o.length,c=[];for(let m=p;m<l;++m)c.push(m);return{allDims:i,summedDims:c,idDims:u}}function OY(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function zY(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let a=0;a<e[o].length;++a)n[e[o][a]]===void 0?n[e[o][a]]=s[a]:P(n[e[o][a]]===s[a],()=>`Expected dimension ${n[e[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function GY(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<t.length;++a){let i=t[a],u=UY(e,i);for(let l of u)s.indexOf(l)===-1&&(n[a].push(l),s.push(l))}return{path:t,steps:n}}function WY(r){return r.every((e,t)=>e===t)}function UY(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function KY(r,e,t=0){let n=[];if(typeof e=="number")P(r.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);P(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,u)=>u>0?i+u:i);e[s]=r.shape[t]-a}P(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}var dC={};Ye(dC,{collectGatherOpShapeInfo:()=>HY,computeOutShape:()=>jY,segOpComputeOptimalWindowSize:()=>VY});function VY(r,e){let t=!1,n;for(r<=$b?(n=r,t=!0):n=qp(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=qp(r,n+1);return n}function jY(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function HY(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let c=0;c<n;++c)if(r.shape[c]!==e.shape[c])throw new Error(`x.shape[${c}]: ${r.shape[c]} should be equal to indices.shape[${c}]: ${e.shape[c]}.`);let a=r.shape[t],i=[],u=1,l=1,p=1;for(let c=0;c<n;++c)i.push(r.shape[c]),u*=r.shape[c];for(let c=n;c<t;c++)i.push(r.shape[c]),l*=r.shape[c];for(let c=n;c<o;c++)i.push(e.shape[c]);for(let c=t+1;c<s;c++)i.push(r.shape[c]),p*=r.shape[c];return{batchSize:u,sliceSize:p,outerSize:l,dimSize:a,outputShape:i}}function qY(r){try{return r.map(e=>Nc(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function XY(r){return r.map(e=>Uu(e))}var Tr={};Ye(Tr,{nonMaxSuppressionV3Impl:()=>Mb,nonMaxSuppressionV4Impl:()=>Eb,nonMaxSuppressionV5Impl:()=>Rb,whereImpl:()=>wb});var Bb={kernelName:ss,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,su(Z(t,"float32"),-1))}}};var B2={kernelName:Ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Xe(Z(t,"float32")),o=$t(ue(ce(1),n));return et(pe(r,o))}}}};var O2={kernelName:Ci,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=$t(ue(Xe(Z(t,"float32")),1));return pe(r,n)}}}};var z2={kernelName:wn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ke(t.shape,n.shape);return{a:()=>{let i=r,u=wt(t.shape,o);return u.length>0&&(i=he(i,u)),L(i,t.shape)},b:()=>{let i=r,u=wt(n.shape,o);return u.length>0&&(i=he(i,u)),L(i,n.shape)}}}};var G2={kernelName:ro,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var W2={kernelName:no,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var U2={kernelName:Va,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var K2={kernelName:Si,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,$t(ue(ce(1),Xe(Z(t,"float32")))))}}};var V2={kernelName:_i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=$t(X(ce(1),Xe(Z(t,"float32"))));return pe(r,n)}}}};var j2={kernelName:Di,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ke(t.shape,n.shape);return{a:()=>{let i=X(Xe(t),Xe(n)),u=R(r,pe(n,i)),l=wt(t.shape,o);return l.length>0&&(u=he(u,l)),L(u,t.shape)},b:()=>{let i=X(Xe(t),Xe(n)),u=et(R(r,pe(t,i))),l=wt(n.shape,o);return l.length>0&&(u=he(u,l)),L(u,n.shape)}}}};var H2={kernelName:Ai,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,X(Xe(Z(t,"float32")),1))}}};var q2={kernelName:Ni,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,ue(ce(1),Xe(Z(t,"float32"))))}}};function YY(r,e,t,n,o,s){let a=C(r,"dy","avgPool3dGrad"),i=C(e,"input","avgPool3dGrad"),u=a,l=i,p=!1;i.rank===4&&(p=!0,u=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),s!=null&&P(mt(o),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`);let c={dy:u,input:l},m={filterSize:t,strides:n,pad:o,dimRoundingMode:s},f=D.runKernel(Qp,c,m);return p?L(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var X2=_({avgPool3dGrad_:YY});var Y2={kernelName:Nu,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=t;return{x:()=>X2(r,n,o,s,a,i)}}};function QY(r,e,t,n,o){let s=C(r,"dy","avgPoolGrad"),a=C(e,"input","avgPoolGrad");P(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,u=s,l=!1;a.rank===3&&(l=!0,i=L(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),P(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let p={dy:u,input:i},c={filterSize:t,strides:n,pad:o},m=D.runKernel(Yp,p,c);return l?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Q2=_({avgPoolGrad_:QY});var Z2={kernelName:oo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>Q2(r,n,o,s,a)}}};var J2={kernelName:so,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>je(r,o,!1,!0),b:()=>je(n,r,!0,!1)}:!s&&a?{a:()=>je(r,o,!1,!1),b:()=>je(r,n,!0,!1)}:s&&!a?{a:()=>je(o,r,!1,!0),b:()=>je(n,r,!1,!1)}:{a:()=>je(o,r,!0,!0),b:()=>je(r,n,!0,!0)}}};var e1={kernelName:as,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Kl(r,n,o)}}};var t1={kernelName:HN,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])a[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>he(r,i,!0)}}};var r1={kernelName:Gn,gradFunc:r=>({x:()=>r.clone()})};var n1={kernelName:ao,gradFunc:r=>({x:()=>De(r)})};var o1={kernelName:Wn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Gt(jr(Ho(n,o),qo(n,s)),r,De(r))}}};var s1={kernelName:Pu,inputsToSave:["x"],gradFunc:Bb.gradFunc};var a1={kernelName:is,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(u=>u.shape),{axis:o}=t,s=yr(o,e[0].shape)[0],a=n.map(u=>u[s]);return Ir(r,a,s).map(u=>()=>u)}};var i1={kernelName:io,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:u}=t;return P(jo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>$c(n.shape,r,o,a,i,u),filter:()=>Uc(n,r,o.shape,a,i,u)}}};var u1={kernelName:uo,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:u}=t;return{dy:()=>Hn(r,o,s,a,i,1,u),filter:()=>Uc(r,n,o.shape,s,a,i,u)}}};function ZY(r,e,t,n,o){let s=r;r.rank===4&&(s=L(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=L(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),P(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),P(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),P(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),P(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),P(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},u={strides:n,pad:o,filterShape:t};return D.runKernel(tc,i,u)}var l1=_({conv3DBackpropFilter_:ZY});var p1={kernelName:Fu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;P(jo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>bb(a.shape,r,i,o,s),filter:()=>l1(a,r,i.shape,o,s)}}};var c1={kernelName:lo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(et(Bf(Z(t,"float32"))),r)}}};var m1={kernelName:po,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(Of(Z(t,"float32")),r)}}};var f1={kernelName:Xs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=zI([o],n.rank),u=Sf(r,o,s,!a);return i!=null&&(u=qe(u,i)),u}}}};var d1={kernelName:co,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n??[1,1];P(jo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[u,l]=e;return P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),P(Rr(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),a!=null&&P(mt(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),{x:()=>Db(u.shape,r,l,o,s,i,a),filter:()=>Nb(u,r,l.shape,o,s,i,a)}}};var h1={kernelName:Mu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>D.runKernel(sf,s,t),filter:()=>D.runKernel(af,a,t)}}};var g1={kernelName:fo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(ic,n)}}};var b1={kernelName:Pi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=R(cr(et(Xe(t))),2/Math.sqrt(Math.PI));return{x:()=>R(r,n)}}};var y1={kernelName:ho,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,t)}}};var x1={kernelName:us,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>L(r,t.shape)}}};var T1={kernelName:Js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,cr(t))}}};var k1={kernelName:go,gradFunc:r=>({x:()=>De(r)})};var I1={kernelName:bo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ke(t.shape,n.shape);return{a:()=>{let i=pe(r,Z(n,"float32")),u=wt(t.shape,o);return u.length>0?L(he(i,u),t.shape):i},b:()=>{let i=R(r,Z(t,"float32")),u=wt(n.shape,o);u.length>0&&(i=L(he(i,u),n.shape));let l=Xe(n);return et(pe(i,Z(l,"float32")))}}}};var C1={kernelName:yo,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,u=i??ce(1),l=wt(s.shape,o.shape),p=[];if(s.rank===1){for(let k=0;k<o.shape.length-1;++k)p.push(o.shape[k]);p.push(1)}let c=ue(o,s),m=R(r,u),f=Lf(X(a,ce(n))),d=R(R(R(f,f),f),ce(-.5));return{x:()=>s.rank===1?L(R(R(r,Vr(L(f,[1,1,1,s.shape[0]]),p)),u),o.shape):L(R(R(r,f),u),o.shape),mean:()=>{let k=R(R(f,ce(-1)),m);return s.rank===1&&(k=he(k,l)),L(k,s.shape)},variance:()=>{let k=R(R(d,c),m);return s.rank===1&&(k=he(k,l)),L(k,s.shape)},scale:()=>{let k=R(c,f),v=R(r,k);return s.rank===1&&(v=he(v,l)),L(v,s.shape)},offset:()=>{let k=r;return s.rank===1&&(k=he(k,l)),L(k,s.shape)}}}};var v1={kernelName:ls,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=yr(s,n.shape)[0];return{x:()=>{let u=n.shape,l=o.size,p=u.slice(0,a),c=p.length,m=u.slice(s,u.length).slice(1),f=m.length,d=w1(0,c),h=w1(c+1,c+1+f),g=S1([p,[l],m]),y=L(r,g),T=L(o,[l]),x=S1([[c],d,h]),k=qe(y,x),v=iC(k,T,n.shape[a]),N=Nf(x);return v=qe(v,N),v},indices:()=>o}}};function w1(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function S1(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var _1={kernelName:xo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>De(t),b:()=>De(n)}}};var A1={kernelName:Un,gradFunc:r=>({x:()=>Z(r,"float32")})};var N1={kernelName:Fi,gradFunc:r=>({x:()=>De(r)})};var D1={kernelName:Mi,gradFunc:r=>({x:()=>De(r)})};var P1={kernelName:Ei,gradFunc:r=>({x:()=>De(r)})};var F1={kernelName:na,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=nr(n,0);return{x:()=>Gt(s,r,R(r,o))}}};var M1={kernelName:Ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,X(t,1))}}};var E1={kernelName:To,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,Z(t,"float32"))}}};var R1={kernelName:qN,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let s=!0,a=cr(n);return ue(r,R(he(r,o,s),a))}}}};function JY(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},u={depthRadius:n,bias:o,alpha:s,beta:a};return D.runKernel(cc,i,u)}var L1=_({localResponseNormalizationBackprop_:JY});var $1={kernelName:Lu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:u}=t;return{x:()=>L1(n,o,r,s,a,i,u)}}};function Ob(r,e,t,n){return e.rank<t.rank&&(e=L(e,Ns(e.shape,n))),r.rank<t.rank&&(r=L(r,Ns(r.shape,n))),{x:()=>R(r,Z(Kr(t,e),r.dtype))}}var hC={kernelName:ko,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=yr(o,s.shape),u=Ob(r,a,s,i);return{x:()=>u.x()}}};var B1={kernelName:Io,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>R(r,Z(Ho(t,n),"float32")),b:()=>R(r,Z(_f(t,n),"float32"))}}};function e7(r,e,t,n,o,s,a){let i=C(r,"dy","maxPool3dGrad"),u=C(e,"input","maxPool3dGrad"),l=C(t,"output","maxPool3dGrad"),p=i,c=u,m=l,f=!1;u.rank===4&&(f=!0,p=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=L(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=L(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),P(c.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),P(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),a!=null&&P(mt(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let d={dy:p,input:c,output:m},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=D.runKernel(fc,d,h);return f?L(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var O1=_({maxPool3dGrad_:e7});var z1={kernelName:$u,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=t;return{x:()=>O1(r,n,o,s,a,i,u)}}};function t7(r,e,t,n,o,s,a){let i=C(r,"dy","maxPoolGrad"),u=C(e,"input","maxPoolGrad"),l=C(t,"output","maxPoolGrad");P(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),P(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),P(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),a!=null&&P(mt(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let p={dy:i,input:u,output:l},c={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return D.runKernel(mc,p,c)}var G1=_({maxPoolGrad_:t7});var W1={kernelName:Co,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>G1(r,n,o,s,a,i)}}};var U1={kernelName:vo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=yr(o,n.shape),i=OI(n.shape,s)[1],u=ct(i);return{x:()=>{let p=n.shape.slice();s.forEach(f=>{p[f]=1});let c=L(r,p);return pe(R(c,mr(n.shape,"float32")),u)}}}};var K1={kernelName:wo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=yr(o,s.shape),u=Ob(r,a,s,i);return{x:()=>u.x()}}};var V1={kernelName:So,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>R(r,Z(qo(t,n),"float32")),b:()=>R(r,Z(nr(t,n),"float32"))}}};var j1={kernelName:_o,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ue(r,s,n.shape)}}};var H1={kernelName:$i,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ke(t.shape,n.shape);return{a:()=>{let i=wt(t.shape,o);return i.length>0?L(he(r,i),t.shape):r},b:()=>{let i=R(r,et(ru(pe(t,n)))),u=wt(n.shape,o);return u.length>0?L(he(i,u),n.shape):i}}}};var q1={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ke(t.shape,n.shape);return{a:()=>{let i=R(r,Z(n,"float32")),u=wt(t.shape,o);return u.length>0?L(he(i,u),t.shape):i},b:()=>{let i=R(r,Z(t,"float32")),u=wt(n.shape,o);return u.length>0?L(he(i,u),n.shape):i}}}};var X1={kernelName:ps,gradFunc:r=>({x:()=>et(r)})};var Y1={kernelName:pa,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>Tt(t.shape,"float32")}}};var Q1={kernelName:cs,gradFunc:r=>({x:()=>De(r)})};var Z1={kernelName:ms,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return Br(r,n).map(s=>()=>s)}};var gC={kernelName:No,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ue(r,s,n.shape)}}};var J1={kernelName:Do,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=Ke(s.shape,a.shape);return{a:()=>{let p=Z(a,"float32"),c=R(r,R(p,Dn(s,ue(p,ce(1))))),m=wt(s.shape,i);return m.length>0&&(c=he(c,m)),L(c,s.shape)},b:()=>{let p=nr(s,0),c=Gt(p,$r(s),De(s)),m=R(r,R(o,c)),f=wt(a.shape,i);return f.length>0&&(m=he(m,f)),L(m,a.shape)}}}};var eP={kernelName:Po,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=nr(t,0);return{x:()=>Gt(o,r,R(r,n)),alpha:()=>{let s=Gt(o,De(r),R(r,t)),a=wt(n.shape,r.shape);return a.length>0&&(s=he(s,a)),L(s,n.shape)}}}};var tP={kernelName:mo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ke(t.shape,n.shape);return{a:()=>{let i=pe(r,Z(n,"float32")),u=wt(t.shape,o);return u.length>0?L(he(i,u),t.shape):i},b:()=>{let i=R(r,Z(t,"float32")),u=wt(n.shape,o);u.length>0&&(i=L(he(i,u),n.shape));let l=Xe(n);return et(pe(i,Z(l,"float32")))}}}};var rP={kernelName:Oi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,et(Xe(t)))}}};var nP={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=R(qo(t,6),su(t));return{x:()=>R(r,Z(n,"float32"))}}};var oP={kernelName:Fo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,Z(su(t),"float32"))}}};var sP={kernelName:fs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,t.shape)}}};var aP={kernelName:Mo,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(bc,o,t)}}};var iP={kernelName:qa,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(gc,o,t)}}};var uP={kernelName:ma,gradFunc:(r,e,t)=>{let{dims:n}=t,o=yr(n,r.shape);return{x:()=>xr(r,o)}}};var lP={kernelName:fa,gradFunc:r=>({x:()=>De(r)})};var pP={kernelName:Ro,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>et(pe(r,R(Dn(t,1.5),2)))}}};var cP={kernelName:ds,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>Z(De(t),"float32"),t:()=>R(r,Z(t,r.dtype)),e:()=>R(r,Z(Wl(t),r.dtype))}}};var mP={kernelName:zi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=nr(t,ce(0)),o=ce(cC),s=ce(mC),a=R(r,s),i=R(R(r,o),cr(Z(t,"float32")));return Gt(n,a,i)}}}};var fP={kernelName:$o,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,R(t,ue(ce(1),t)))}}};var dP={kernelName:Gi,gradFunc:r=>({x:()=>De(r)})};var hP={kernelName:Lo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(Bl(Z(t,"float32")),r)}}};var gP={kernelName:ha,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(wf(Z(t,"float32")),r)}}};var bP={kernelName:hs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,u]=rI(n,o,s),l=[];for(let p=0;p<r.rank;p++)l.push([i[p],a[p]-i[p]-u[p]]);return{x:()=>Nn(r,l)}}};var yP={kernelName:zo,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=R(r,n);return{logits:()=>ue(a,R(he(a,[o],s),n))}}};var xP={kernelName:Wi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,ln(t))}}};var bC={kernelName:gs,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Ll(r,n,o)}}};var yC={kernelName:bs,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>lt(r,n)}}};var TP={kernelName:Bo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,R($t(Z(t,"float32")),2))}}};var kP={kernelName:Xa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,R(Z(t,"float32"),2))}}};var IP={kernelName:Go,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ce(2);return{a:()=>R(r,R(o,ue(t,n))),b:()=>R(r,R(o,ue(n,t)))}}};var CP={kernelName:Ts,gradFunc:r=>({x:()=>De(r)})};var vP={kernelName:Wo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ke(t.shape,n.shape);return{a:()=>{let i=r,u=wt(t.shape,o);return u.length>0&&(i=he(i,u)),L(i,t.shape)},b:()=>{let i=r,u=wt(n.shape,o);return u.length>0&&(i=he(i,u)),L(et(i),n.shape)}}}};var wP={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;yr(s,n.shape).forEach(l=>{o[l]=1});let i=L(r,o),u=R(i,mr(n.shape,"float32"));return{x:()=>u}}};var SP={kernelName:ba,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pe(r,Xe(Bl(t)))}}};var _P={kernelName:Uo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(ue(ce(1),Xe(t)),r)}}};var AP={kernelName:Sn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=De(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=X(a,Ue(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)a=X(a,Ue(r,[i*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)a=X(a,Ue(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let p=0;p<o[3];++p)a=X(a,Ue(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var NP={kernelName:Ko,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Nf(o);return{x:()=>qe(r,s)}}};var DP={kernelName:ys,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>fr(r,o)}}};var PP={kernelName:Gu,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>r7(r,t)}}};function r7(r,e){let t=qn(e,De(e)),n=ei(r,t),o=Ho(e,ce(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=_r(o,i+1);o=jr(o,mr(n.shape,"bool"));let a=De(n);return Gt(o,n,a)}var FP={kernelName:xs,gradFunc:r=>({x:()=>De(r)})};var n7=[Bb,B2,O2,z2,G2,W2,U2,K2,V2,j2,H2,q2,Y2,Z2,J2,e1,t1,r1,n1,o1,s1,a1,u1,i1,p1,c1,m1,f1,d1,h1,tP,g1,b1,y1,x1,T1,I1,k1,C1,v1,_1,A1,N1,D1,P1,F1,M1,E1,R1,$1,hC,hC,B1,z1,W1,U1,K1,V1,j1,H1,q1,X1,Y1,Q1,Z1,gC,gC,J1,eP,rP,nP,oP,sP,aP,iP,uP,lP,pP,cP,mP,fP,dP,hP,gP,bP,yP,xP,bC,bC,yC,yC,TP,IP,kP,CP,vP,wP,SP,_P,AP,NP,DP,PP,FP];for(let r of n7)XN(r);var BP={};Ye(BP,{maxNorm:()=>s7,minMaxNorm:()=>u7,nonNeg:()=>i7,unitNorm:()=>a7});var xC;function dr(){return xC==null&&(xC=k0().epsilon()),xC}function mn(){return"channelsLast"}var Xn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Xn.prototype)}},en=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,en.prototype)}},O=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,O.prototype)}},Pe=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Pe.prototype)}},jf=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,jf.prototype)}};function Fs(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Xo(r,e){if(!r)throw new jf(e)}function TC(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Nr(r){return r.length===1?r[0]:r}function St(r){return Array.isArray(r)?r:[r]}function Ms(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function iu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Es={};function Kc(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function kC(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>kC(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:kC(n))}}}function si(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in Es)a=Es[s];else if(a=e[s],a==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,u;if(a in t?[i,u]=t[a]:a in Es?[i,u]=Es.className:a in e&&([i,u]=e[a]),i==null)throw new O(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let f of Object.keys(Es))l[f]=Es[f];for(let f of Object.keys(t))l[f]=t[f];let p=s.config;p.customObjects=l;let c={...Es};for(let f of Object.keys(t))Es[f]=t[f];kC(s.config);let m=u(i,s.config,t,o);return Es={...c},m}else{let l={...Es};for(let c of Object.keys(t))Es[c]=t[c];let p=new i(s.config);return Es={...l},p}}}function o7(r,e){return r<e?-1:r>e?1:0}function Hf(r,e){return-1*o7(r,e)}function Rs(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function MP(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function ai(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new O(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function zb(r,e,t=0,n=1/0){return Xo(t>=0),Xo(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function sr(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>sr(t,`element ${n+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${EP(r)}.`)}function EP(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>EP(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function RP(r,e,t){let n=t!=null?t():b.now(),o;return(...a)=>{let i=t!=null?t():b.now();return i-n<e||(n=i,o=r(...a)),o}}function Gb(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}function IC(r,e){return W(()=>$t(he(R(r,r),e,!0)))}var Vc=class extends te.Serializable{getConfig(){return{}}},qf=class extends Vc{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=IC(e,this.axis),n=Lr(t,0,this.maxValue);return R(e,pe(n,X(dr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};qf.className="MaxNorm";te.registerClass(qf);var Xf=class extends Vc{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>pe(e,X(dr(),IC(e,this.axis))))}getConfig(){return{axis:this.axis}}};Xf.className="UnitNorm";te.registerClass(Xf);var Yf=class extends Vc{apply(e){return Hr(e)}};Yf.className="NonNeg";te.registerClass(Yf);var Qf=class extends Vc{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=IC(e,this.axis),n=X(R(this.rate,Lr(t,this.minValue,this.maxValue)),R(1-this.rate,t));return R(e,pe(n,X(dr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Qf.className="MinMaxNorm";te.registerClass(Qf);var LP={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Yt(r){return Kc(r)}function $P(r,e={}){return si(r,te.SerializationMap.getMap().classNameMap,e,"constraint")}function Qt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in LP?LP[r]:r,config:{}};return $P(t)}else return r instanceof Vc?r:$P(r)}function s7(r){return new qf(r)}function a7(r){return new Xf(r)}function i7(){return new Yf}function u7(r){return new Qf(r)}var oF={};Ye(oF,{constant:()=>g7,glorotNormal:()=>C7,glorotUniform:()=>I7,heNormal:()=>v7,heUniform:()=>w7,identity:()=>T7,leCunNormal:()=>S7,leCunUniform:()=>_7,ones:()=>h7,orthogonal:()=>A7,randomNormal:()=>y7,randomUniform:()=>b7,truncatedNormal:()=>x7,varianceScaling:()=>k7,zeros:()=>d7});var OP=["channelsFirst","channelsLast"],zP=["nearest","bilinear"],GP=["valid","same","causal"],WP=["max","avg"],UP=["sum","mul","concat","ave"];var jc=new Map;function jt(r){ai(OP,"DataFormat",r)}function KP(r){ai(zP,"InterpolationFormat",r)}function fn(r){ai(GP,"PaddingMode",r)}function CC(r){ai(WP,"PoolMode",r)}var Zf=[],VP="/";function wa(r,e){Zf.push(r);try{let t=e();return Zf.pop(),t}catch(t){throw Zf.pop(),t}}function l7(){return Zf.length===0?"":Zf.join(VP)+VP}function Wb(r){if(!jP(r))throw new Error("Not a valid tensor name: '"+r+"'");return l7()+r}function Ub(r){if(!jP(r))throw new Error("Not a valid tensor name: '"+r+"'");jc.has(r)||jc.set(r,0);let e=jc.get(r);if(jc.set(r,jc.get(r)+1),e>0){let t=`${r}_${e}`;return jc.set(t,1),t}else return r}var p7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function jP(r){return!!r.match(p7)}function HP(r){return r===parseInt(r.toString(),10)}function Ls(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function up(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function Sa(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function tn(r,e){if(e<r)throw new O(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}function lp(r,e){return Z(r,e)}function uu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),L(r,t)}function qP(r,e){return W(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=uu(r,1);return Kb(t,[1,e,1])})}function XP(r){let e=[Ls(r.shape)];return L(r,e)}function YP(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],Ls(r.shape,1)];return L(r,e)}function lu(r,e,t){return W(()=>{switch(r.rank){case 1:return zf(r,e,t);case 2:return Cb(r,[e,0],[t,r.shape[1]]);case 3:return Gf(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Wc(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Ue(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Ue(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function vC(r,e,t){return W(()=>{switch(r.rank){case 1:return zf(r,e,t);case 2:return Cb(r,[0,e],[r.shape[0],t]);case 3:return Gf(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Wc(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Jf(r,e,t,n){return W(()=>{switch(r.rank){case 1:return zf(r,e,t);case 2:switch(n){case 1:return lu(r,e,t);case 2:return vC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return lu(r,e,t);case 2:return Gf(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return vC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return lu(r,e,t);case 2:return Wc(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Wc(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return vC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Hc(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),lt(r,e)}function wC(r,e){switch(r.rank){case 1:return CI([r,e]);case 2:return vI([r,e],0);case 3:return wI([r,e],0);case 4:return SI([r,e],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Kb(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new O(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Vr(r,e)}function qc(r,e=0,t=1,n,o){return Ib(r,e,t,n,o)}function $s(r,e,t,n){if(r.rank<2||e.rank<2)throw new Pe(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Pe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2){let o=!1,s=!1;return Ds.matMul({a:r,b:e,transposeA:o,transposeB:s,bias:n?SC(r.rank,n,mn()):null,activation:t})}else{let o=r.shape.slice(),s=o.pop();r=L(r,[-1,s]);let a=e.shape.slice(),i=a.pop(),u=a.pop(),l=[...a,i],p=Array.from({length:e.rank},(d,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=L(qe(e,p),[u,-1]);let c=[...o,...l],m=!1,f=!1;return L(Ds.matMul({a:r,b:e,transposeA:m,transposeB:f,bias:n?SC(r.rank,n,mn()):null,activation:t}),c)}}function Vb(r,e,t){return W(()=>(Array.isArray(e)?e=Wt(e,"int32"):e=Z(e,"int32"),ei(r,e,t)))}function pp(r){return R(r,r)}function SC(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new O(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?L(e,[1,n[0],1,1,1]):L(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?L(e,[1,1,1,1,n[0]]):L(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?L(e,[1,n[0],1,1]):L(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?L(e,[1,1,1,n[0]]):L(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?L(e,[1,n[0],1]):L(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?L(e,[1,1,n[0]]):L(e,[1].concat(n))}else if(r<3)return e;throw new O(`Unsupported input rank by biasAdd: ${e.rank}`)}function dn(r,e,t){return W(()=>(t==null&&(t=mn()),jt(t),X(r,SC(r.rank,e,t))))}function QP(r,e=1){if(e!==1)throw new Pe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return tu(r)}function ZP(r){return W(()=>pe(r,X(zt(r),1)))}function jb(r,e,t,n){return W(()=>H0(r,e,t,n))}function JP(r){return W(()=>{let e=X(.5,R(.2,r));return Lr(e,0,1)})}function Xu(r,e,t=!1){return t?r():e()}var eF=["fanIn","fanOut","fanAvg"],tF=["normal","uniform","truncatedNormal"];function c7(r){ai(eF,"FanMode",r)}function m7(r){ai(tF,"Distribution",r)}var Fn=class extends te.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},ed=class extends Fn{apply(e,t){return Tt(e,t)}};ed.className="Zeros";te.registerClass(ed);var cp=class extends Fn{apply(e,t){return mr(e,t)}};cp.className="Ones";te.registerClass(cp);var td=class extends Fn{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return W(()=>R(ce(this.value),mr(e,t)))}getConfig(){return{value:this.value}}};td.className="Constant";te.registerClass(td);var rd=class extends Fn{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return va(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};rd.className="RandomUniform";te.registerClass(rd);var nd=class extends Fn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`randomNormal does not support dType ${t}.`);return qc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};nd.className="RandomNormal";te.registerClass(nd);var od=class extends Fn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`truncatedNormal does not support dType ${t}.`);return Yl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};od.className="TruncatedNormal";te.registerClass(od);var sd=class extends Fn{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return W(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,Bc(e[0]))})}getConfig(){return{gain:this.gain}}};sd.className="Identity";te.registerClass(sd);function f7(r,e="channelsLast"){let t,n;if(jt(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=Ls(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=Ls(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=Ls(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var rn=class extends Fn{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,c7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,m7(this.distribution),this.seed=e.seed}apply(e,t){let n=f7(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`${this.getClassName()} does not support dType ${t}.`);return Yl(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return va(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};rn.className="VarianceScaling";te.registerClass(rn);var Xc=class extends rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Xc.className="GlorotUniform";te.registerClass(Xc);var Yc=class extends rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Yc.className="GlorotNormal";te.registerClass(Yc);var Qc=class extends rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Qc.className="HeNormal";te.registerClass(Qc);var Zc=class extends rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Zc.className="HeUniform";te.registerClass(Zc);var Jc=class extends rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Jc.className="LeCunNormal";te.registerClass(Jc);var em=class extends rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};em.className="LeCunNormal";te.registerClass(em);var ad=class extends Fn{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Pe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return W(()=>{if(e.length<2)throw new Pe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=qc(n,0,1,"float32"),s=R2.gramSchmidt(o);return e[0]>e[1]&&(s=qe(s)),R(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};ad.className="Orthogonal";te.registerClass(ad);var rF={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function nF(r,e={}){return si(r,te.SerializationMap.getMap().classNameMap,e,"initializer")}function Ft(r){return Kc(r)}function It(r){if(typeof r=="string"){let e=r in rF?rF[r]:r;if(e==="GlorotNormal")return new Yc;if(e==="GlorotUniform")return new Xc;if(e==="HeNormal")return new Qc;if(e==="HeUniform")return new Zc;if(e==="LeCunNormal")return new Jc;if(e==="LeCunUniform")return new em;{let t={};return t.className=e,t.config={},nF(t)}}else return r instanceof Fn?r:nF(r)}function d7(){return new ed}function h7(){return new cp}function g7(r){return new td(r)}function b7(r){return new rd(r)}function y7(r){return new nd(r)}function x7(r){return new od(r)}function T7(r){return new sd(r)}function k7(r){return new rn(r)}function I7(r){return new Xc(r)}function C7(r){return new Yc(r)}function v7(r){return new Qc(r)}function w7(r){return new Zc(r)}function S7(r){return new Jc(r)}function _7(r){return new em(r)}function A7(r){return new ad(r)}var OF={};Ye(OF,{Layer:()=>Ve,RNN:()=>Bs,RNNCell:()=>rl,activation:()=>YQ,add:()=>sZ,alphaDropout:()=>WZ,average:()=>aZ,averagePooling1d:()=>bv,averagePooling2d:()=>yv,averagePooling3d:()=>xv,avgPool1d:()=>hZ,avgPool2d:()=>bZ,avgPool3d:()=>xZ,avgPooling1d:()=>gZ,avgPooling2d:()=>yZ,avgPooling3d:()=>TZ,batchNormalization:()=>mZ,bidirectional:()=>EZ,concatenate:()=>iZ,conv1d:()=>GQ,conv2d:()=>WQ,conv2dTranspose:()=>UQ,conv3d:()=>KQ,conv3dTranspose:()=>VQ,convLstm2d:()=>DZ,convLstm2dCell:()=>PZ,cropping2D:()=>HQ,dense:()=>QQ,depthwiseConv2d:()=>XQ,dot:()=>cZ,dropout:()=>ZQ,elu:()=>RQ,embedding:()=>oZ,flatten:()=>eZ,gaussianDropout:()=>GZ,gaussianNoise:()=>zZ,globalAveragePooling1d:()=>kZ,globalAveragePooling2d:()=>IZ,globalMaxPool1d:()=>LZ,globalMaxPool2d:()=>$Z,globalMaxPooling1d:()=>RF,globalMaxPooling2d:()=>LF,gru:()=>vZ,gruCell:()=>wZ,input:()=>OC,inputLayer:()=>EQ,layerNormalization:()=>fZ,leakyReLU:()=>$Q,lstm:()=>SZ,lstmCell:()=>_Z,masking:()=>UZ,maxPool1d:()=>BZ,maxPool2d:()=>OZ,maxPooling1d:()=>$F,maxPooling2d:()=>BF,maxPooling3d:()=>CZ,maximum:()=>uZ,minimum:()=>lZ,multiply:()=>pZ,permute:()=>nZ,prelu:()=>BQ,reLU:()=>LQ,repeatVector:()=>tZ,reshape:()=>rZ,rnn:()=>FZ,separableConv2d:()=>jQ,simpleRNN:()=>AZ,simpleRNNCell:()=>NZ,softmax:()=>OQ,spatialDropout1d:()=>JQ,stackedRNNCells:()=>MZ,thresholdedReLU:()=>zQ,timeDistributed:()=>RZ,upSampling2d:()=>qQ,zeroPadding2d:()=>dZ});var N7=0;function Hb(){return N7++}var qb={};function Yu(r=""){return r in qb||(qb[r]=0),qb[r]+=1,r+qb[r].toString()}function Xb(r){return Array.isArray(r)&&Array.isArray(r[0])}function tm(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Ge(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function tt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function rm(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var sF="Variable",Yb=class{constructor(e,t="float32",n=sF,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=Hb(),n=n??sF,this.originalName=Wb(n),this.name=Ub(this.originalName),this.trainable_=o,this.constraint=s,this.val=uC(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),D7(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function D7(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function id(r){return r.map(e=>e.read())}function nm(r){r.forEach(e=>{e[0].write(e[1])})}var Mt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},hn=class{constructor(e,t,n,o,s,a,i){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=Hb(),a!=null&&(this.originalName=Wb(a),this.name=Ub(this.originalName)),this.rank=t.length}},P7=0,Qu=class{constructor(e,t){this.callArgs=t;this.id=P7++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},F7=0,Ve=class extends te.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=F7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Ms(n)+"_"+Yu(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new en(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Nr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Nr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Xn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Xn(`Layer ${this.name} is not connected, no input to return.`);return Nr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Xn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Xn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Nr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=St(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=St(this.inputSpec);if(e.length!==t.length)throw new O(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let u in s.axes){let l=Number(u),p=s.axes[u],c=l>=0?i[l]:i[i.length+l];if(p!=null&&[p,null].indexOf(c)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${p} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let u=s.shape[i],l=o.shape[i];if(u!=null&&l!=null&&u!==l)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=St(e),o=!0;for(let a of n)if(!(a instanceof hn)){o=!1;break}let s=!0;for(let a of n)if(a instanceof hn){s=!1;break}if(o===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return wa(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of St(e))a.push(i.shape);this.build(Nr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=St(a),u=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(a=Nr(u),this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=M7(e),i=this.computeOutputShape(a),u,l=E7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?u=i.map((p,c)=>new hn(l,p,this,St(e),t,this.name,c)):u=new hn(l,i,this,St(e),t,this.name),this.addInboundNode(e,u,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Xn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Xn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new en(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return rm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return id(e?this.trainableWeights:this.weights)}setWeights(e){W(()=>{let t=this.weights;if(t.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=id(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],u=e[s];if(!b.arraysEqual(a.shape,u.shape))throw new O(`Layer weight shape ${a.shape} not compatible with provided weight shape ${u.shape}`);n.push([i,u])}nm(n)})}addWeight(e,t,n,o,s,a,i,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=u!=null?u():It("zeros"));let l=o.apply(t,n),p=new Yb(l,n,e,a,i);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(p.read())),a==null&&(a=!0),a?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=St(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let u=St(e);t=St(t),n=St(n),o=St(o),s=tm(s),a=tm(a);let l=[],p=[],c=[];for(let m of u)l.push(m.sourceLayer),p.push(m.nodeIndex),c.push(m.tensorIndex);new Qu({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:c,inputTensors:u,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function M7(r){r=St(r);let e=[];for(let t of r)e.push(t.shape);return Nr(e)}function E7(r){return"float32"}function _C(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],u=n.nodeIndices[s],l=_C(a,i,u);for(let p of l)o.indexOf(p)===-1&&o.push(p)}return o}}}var ii=class extends Ve{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Yu("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new hn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Qu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};ii.className="InputLayer";te.registerClass(ii);function Qb(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new ii({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function ui(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Ee(n)}}function Zb(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var aF;(function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"})(aF||(aF={}));var R7=125,Zu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},AC=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},iF=class extends Zu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=W(()=>X(this.totals[o],R(s,n)));this.totals[o]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:W(()=>{let o=R(pe(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Vt(t[n])}))}},NC=class extends Zu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let u=a[i];e.push(u.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},DC=class extends Zu{constructor(e,t){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||pC,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=R7),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=RP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await ui(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ui(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await ui(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ui(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await ui(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await ui(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ui(e),await this.trainEnd(e))}};function Jb(r,e){return r==null&&(r={}),r instanceof Zu?[r]:Array.isArray(r)&&r[0]instanceof Zu?r:St(r).map(n=>new DC(n,e))}var _a=class{constructor(){}static registerCallbackConstructor(e,t){b.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),_a.checkForDuplicate(t),_a.constructors[e]==null&&(_a.constructors[e]=[]),_a.constructors[e].push(t)}static checkForDuplicate(e){for(let t in _a.constructors)_a.constructors[+t].forEach(o=>{if(o===e)throw new O("Duplicate callback constructor.")})}static clear(){_a.constructors={}}static createCallbacks(e){let t=[];for(let n in _a.constructors){let o=+n;e>=o&&t.push(..._a.constructors[o])}return t.map(n=>new n)}},ud=_a;ud.constructors={};function ey(r,e,t,n,o,s,a,i,u){let l=new NC,p=[new iF,...ud.createCallbacks(e)];r!=null&&p.push(...r),p.push(l);let c=new AC(p);return c.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:u}),{callbackList:c,history:l}}function gn(r,e={},t=!1){return si(r,te.SerializationMap.getMap().classNameMap,e,"layer",t)}function ld(r,e){return W(()=>{r.dtype!=="float32"&&(r=Z(r,"float32"));let t=he(pp(r),e,!0),n=Ca(t.shape,dr()),o=$t(qn(t,n));return pe(r,o)})}function li(r,e){return W(()=>Lt(pp(ue(e,r)),-1))}function om(r,e){return W(()=>Lt(zt(ue(e,r)),-1))}function Ju(r,e){return W(()=>{let t=ue(r,e),n=Lr(zt(r),dr(),Number.MAX_VALUE),o=zt(pe(t,n));return R(100,Lt(o,-1))})}function L7(r,e){return W(()=>{let t=Lr(e,dr(),Number.MAX_VALUE),n=$r(X(1,t)),o=Lr(r,dr(),Number.MAX_VALUE),s=$r(X(1,o));return Lt(pp(ue(n,s)),-1)})}function $7(r,e){return W(()=>{let t=qn(0,ue(1,R(r,e)));return Lt(pp(t),-1)})}function B7(r,e){return W(()=>{let t=qn(0,ue(1,R(r,e)));return Lt(t,-1)})}function O7(r,e){return W(()=>{let t=he(R(r,e),-1),n=Zr(R(ue(1,r),e),-1);return qn(0,X(1,ue(n,t)))})}function z7(r,e){return W(()=>{let t=Math.log(2),n=ue(e,r),o=ue(X(n,ti(R(-2,n))),t);return Lt(o,-1)})}function mp(r,e,t=!1){return W(()=>{if(t)e=Hl(e);else{let n=he(e,e.shape.length-1,!0);e=pe(e,n)}return e=Lr(e,dr(),1-dr()),et(he(R(Z(r,"float32"),$r(e)),e.shape.length-1))})}function sm(r,e,t=!1){return W(()=>{let n=Z(ru(XP(r)),"int32");e=Lr(e,dr(),1-dr());let o=e.shape,s=L(Yi(n,o[o.length-1]),o);return mp(s,e,t)})}function G7(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return W(()=>{let t=Hr(e),n=et(zt(e));return X(ue(t,R(e,r)),Gl(cr(n)))})}function am(r,e){return W(()=>{let t;return t=Lr(e,dr(),1-dr()),t=$r(pe(t,ue(1,t))),Lt(G7(r,t),-1)})}function W7(r,e){return W(()=>{let t=Lr(r,dr(),1),n=Lr(e,dr(),1);return he(R(r,$r(pe(t,n))),-1)})}function U7(r,e){return W(()=>{let t=$r(X(dr(),e));return Lt(ue(e,R(r,t)),-1)})}function pd(r,e){return W(()=>{let t=ld(r,-1),n=ld(e,-1),o=R(t,n);return et(he(o,-1))})}var cd={meanSquaredError:li,meanAbsoluteError:om,meanAbsolutePercentageError:Ju,meanSquaredLogarithmicError:L7,squaredHinge:$7,hinge:B7,categoricalHinge:O7,logcosh:z7,categoricalCrossentropy:mp,sparseCategoricalCrossentropy:sm,binaryCrossentropy:am,kullbackLeiblerDivergence:W7,poisson:U7,cosineProximity:pd};function ty(r){if(typeof r=="string"){if(r in cd)return cd[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(e)}else return r}function md(r,e){return W(()=>{let t=R(.5,Ar(e)),n=lp(nr(e,t),r.dtype);return Lt(Kr(r,n),-1)})}function fd(r,e){return W(()=>lp(Kr(Zi(r,-1),Zi(e,-1)),"float32"))}function uF(r,e){return W(()=>Z(he(jr(Kr(r,1),Kr(e,1))),"float32"))}function K7(r,e){return W(()=>Z(he(jr(Kr(r,1),Kr(e,0))),"float32"))}function V7(r,e){return W(()=>Z(he(jr(Kr(r,0),Kr(e,1))),"float32"))}function PC(r,e){return W(()=>{let t=uF(r,e),n=V7(r,e),o=X(t,n);return Z(Gt(nr(o,0),pe(t,o),0),"float32")})}function lF(r,e){return W(()=>{let t=uF(r,e),n=K7(r,e),o=X(t,n);return Z(Gt(nr(o,0),pe(t,o),0),"float32")})}function ry(r,e){return am(r,e)}function ny(r,e){return r.rank===e.rank&&(r=cn(r,[r.rank-1])),e=Zi(e,-1),e.dtype!==r.dtype&&(e=Z(e,r.dtype)),Z(Kr(r,e),"float32")}var j7=li,H7=li,q7=om,X7=om,Y7=Ju,Q7=Ju,dd=mp,Z7=pd,FC=sm,oy={binaryAccuracy:md,categoricalAccuracy:fd,precision:PC,categoricalCrossentropy:dd,sparseCategoricalCrossentropy:FC,mse:j7,MSE:H7,mae:q7,MAE:X7,mape:Y7,MAPE:Q7,cosine:Z7};function pF(r){if(typeof r=="string"&&r in oy)return oy[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function hd(r){if(Xo(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(cd))if(cd[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(oy))if(oy[t]===r){e=t;break}return e!==void 0?e:r.name}}function cF(r){let e={Adagrad:()=>ip.adagrad(.01),Adadelta:()=>ip.adadelta(1,.95,dr()),Adam:()=>ip.adam(.001,.9,.999,dr()),Adamax:()=>ip.adamax(.002,.9,.999,dr(),0),RMSProp:()=>ip.rmsprop(.001,.9,0,dr()),SGD:()=>ip.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new O(`Unknown Optimizer ${r}`)}var mF=1*1024*1024;function MC(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!EC(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>mF&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${mF}.`)}}function EC(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!EC(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!EC(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function fF(r,e,t,n=console.log){let o=eQ(r),s=["Layer (type)","Output shape","Param #"];o?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(p=>Math.floor(e*p)));let a;if(!o){s.push("Receives inputs"),a=[];for(let p in r.nodesByDepth)a.push(...r.nodesByDepth[p])}n("_".repeat(e)),sy(s,t,n),n("=".repeat(e));let i=r.layers;for(let p=0;p<i.length;++p)o?tQ(i[p],t,n):rQ(i[p],t,a,n),n((p===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let u=J7(r),l=rm(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(e))}function J7(r){let e;return r.collectedTrainableWeights!=null?e=rm(r.collectedTrainableWeights):e=rm(r.trainableWeights),e}function eQ(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function sy(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function tQ(r,e,t){let n;try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let o=r.name,s=r.getClassName(),a=[`${o} (${s})`,n,r.countParams().toString()];sy(a,e,t)}function rQ(r,e,t,n){let o;try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let s=[];for(let p of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(p)===-1))for(let c=0;c<p.inboundLayers.length;++c){let m=p.inboundLayers[c].name,f=p.nodeIndices[c],d=p.tensorIndices[c];s.push(`${m}[${f}][${d}]`)}let a=r.name,i=r.getClassName(),u=s.length===0?"":s[0],l=[`${a} (${i})`,o,r.countParams().toString(),u];sy(l,e,n);for(let p=1;p<s.length;++p)sy(["","","",s[p]],e,n)}function dF(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function fp(r,e){if(r===null)return null;if(typeof r=="string")return iu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];dF(e,o,s)?t.push(s):t.push(fp(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=iu(n);t[s]=fp(o,s)}}return t}}function ay(r,e){if(r==null)return null;if(typeof r=="string")return Ms(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];dF(e,o,s)?t.push(s):t.push(ay(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=Ms(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=ay(o,n)}return t}}var gd="0.0.0";function nQ(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return Z(e,r.dtype)}catch{throw new O(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Aa=class{constructor(e){this.id2Value={};this.id2Mask={};this.name2Id={};if(e instanceof Aa)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=nQ(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new O(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof hn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ee(this.id2Mask)}},RC={},hF={};function dp(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(d=>d.name),u=[],l=e.names();for(let d of i)l.indexOf(d)!==-1?u.push(e.getValue(d)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let p=i.join(",")+"|"+e.names().join(","),c,m;if(RC[p]==null){let d=oQ(a,e);c=d.sorted,m=d.recipientCounts,RC[p]=c,hF[p]=m}c=RC[p],m={},o||Object.assign(m,hF[p]);let f=new Aa(e);for(let d=0;d<c.length;++d){if(n!=null){let E=bf().numTensors;E>n.maxNumTensors&&(n.maxNumTensors=E),E<n.minNumTensors&&(n.minNumTensors=E)}let h=c[d],g=h.sourceLayer;if(g instanceof ii)continue;let y=[],T=[],x=[],k=!1;for(let E of h.inputs){let $=f.getValue(E),U=f.getMask(E);y.push($),T.push(U),U!=null&&(k=!0),o||(m[E.name]--,m[E.name]===0&&!e.hasKey(E)&&i.indexOf(E.name)===-1&&!$.isDisposed&&E.sourceLayer.stateful!==!0&&x.push($))}k&&(t=t||{},t.mask=T[0]);let v=St(g.apply(y,t)),N=null;g.supportsMasking&&(N=g.computeMask(y,T));let A=aQ(h),F=Array.isArray(A)?A:[A];for(let E=0;E<F.length;++E){f.hasKey(F[E])||f.add(F[E],v[E],Array.isArray(N)?N[0]:N);let $=i.indexOf(F[E].name);$!==-1&&(u[$]=v[E])}o||Ee(x)}return f.disposeMasks(),s?u:u[0]}function oQ(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=gF(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=gF(s,e);for(let u of a)o.has(u.name)||(t.push(u),o.add(u.name));for(let u in i)n[u]==null&&(n[u]=new Set),i[u].forEach(l=>n[u].add(l))}}return{sorted:t,recipientCounts:sQ(n)}}function sQ(r){let e={};for(let t in r)e[t]=r[t].size;return e}function gF(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let u=a[a.length-1]===s.length-1;if(i.inputs.length===0||u)s.pop(),n.push(i),t.add(i.name),u&&a.pop();else{a.push(s.length-1);for(let l of i.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(i.name),!t.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function aQ(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var Yo=class extends Ve{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let T=this.getClassName().toLowerCase();this.name=Yu(T)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Rs(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(T=>T.name)}`);Rs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(T=>T.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let T of this.outputs){let x=T.sourceLayer,k=T.nodeIndex,v=T.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(k),this.outputLayersTensorIndices.push(v)}for(let T of this.inputs){let x=T.sourceLayer,k=T.nodeIndex,v=T.tensorIndex;Xo(k===0,"input layer has >1 nodes"),Xo(v===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(k),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let T=0;T<this.inputLayers.length;T++){let x=this.inputLayers[T];if(!(x instanceof ii))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${T} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map(T=>T.shape),this.internalOutputShapes=this.outputs.map(T=>T.shape);let t={},n={},o={},s={},a={},i=[],u=(T,x,k,v,N,A)=>{(v==null||N==null||A==null)&&(v=T.sourceLayer,N=T.nodeIndex,A=T.tensorIndex);let F=v.inboundNodes[N];if(k.indexOf(F)!==-1)throw new en(`The tensor ${T.name} at layer "${v.name}" is part of a cycle.`);if(x.indexOf(F)!==-1)return;this.containerNodes.add(Yo.nodeKey(v,N)),v.id in a||(a[v.id]=Object.keys(a).length),k.indexOf(F)===-1&&k.push(F);let E=F.inboundLayers.length;for(let $=0;$<E;$++){let U=F.inputTensors[$],K=F.inboundLayers[$],B=F.nodeIndices[$],V=F.tensorIndices[$];u(U,x,k,K,B,V)}for(x.push(F);k.indexOf(F)>=0;)k.splice(k.indexOf(F),1);i.push(F)},l=[],p=[];for(let T of this.outputs)u(T,l,p);let c=i.slice().reverse();for(let T of c){n[T.id]=T,T.id in t||(t[T.id]=0);let x=t[T.id],k=o[T.outboundLayer.id]==null?0:o[T.outboundLayer.id];x=Math.max(x,k),o[T.outboundLayer.id]=x,s[T.outboundLayer.id]=T.outboundLayer,t[T.id]=x;for(let v=0;v<T.inboundLayers.length;v++){let N=T.inboundLayers[v],A=T.nodeIndices[v],F=N.inboundNodes[A],E=t[F.id]==null?0:t[F.id];t[F.id]=Math.max(x+1,E),n[F.id]=F}}let m={};for(let T in t){let x=t[T];x in m||(m[x]=[]),m[x].push(n[T])}let f={};for(let T in o){let x=o[T];x in f||(f[x]=[]),f[x].push(s[T])}let d=Object.keys(f).map(T=>parseInt(T,10)).sort(Hf);this.layers=[];for(let T of d){let x=f[T];x.sort((k,v)=>{let N=a[k.id],A=a[v.id];return N<A?-1:N>A?1:0});for(let k of x)k instanceof Yo&&this.internalContainerRefs.push(k),this.layers.push(k)}this.layersByDepth=f,d=Object.keys(m).map(T=>parseInt(T,10)).sort(Hf);let h=this.inputs.slice(),g=[];for(let T of d)for(let x of m[T]){let k=x.outboundLayer;if(k!=null){for(let v of x.inputTensors)if(h.indexOf(v)===-1)throw new en(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${k.name}". The following previous layers were accessed without issue: ${g}`);for(let v of x.outputTensors)h.push(v);g.push(k.name)}}this.nodesByDepth=m;let y=this.layers.map(T=>T.name);for(let T of y){let x=y.filter(k=>k===T).length;if(x!==1)throw new en(`The name "${T}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Qu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(T=>null),outputMasks:this.outputs.map(T=>null),inputShapes:this.inputs.map(T=>T.shape),outputShapes:this.outputs.map(T=>T.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new O(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let u=a.split("/");i=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new O(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new O(`${a.length} of ${o} weights are not set: ${a}`)}nm(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${gd}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=ay(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return W(()=>{e=St(e);let n=new Aa;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return dp(this.outputs,n,t)})}computeMask(e,t){return W(()=>{e=St(e);let n;return t==null?n=Fs(null,e.length):n=St(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=tm(e);if(t.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let u=this.inputLayers[i],l=t[i],p=u.name+"_0_0";n[p]=l}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Hf);if(o.length>1)for(let i of o){let u=this.nodesByDepth[i];for(let l of u){let p=l.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(p.id)!==-1)continue;let c=[];for(let h=0;h<l.inboundLayers.length;h++){let g=l.inboundLayers[h],y=l.nodeIndices[h],T=l.tensorIndices[h],x=`${g.name}_${y}_${T}`,k=n[x];c.push(k)}let m=p.computeOutputShape(Nr(c)),f=tm(m),d=p.inboundNodes.indexOf(l);for(let h=0;h<f.length;h++){let g=`${p.name}_${d}_${h}`;n[g]=f[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let u=this.outputLayers[i],l=this.outputLayersNodeIndices[i],p=this.outputLayersTensorIndices[i],c=`${u.name}_${l}_${p}`;a.push(c)}for(let i=0;i<a.length;i++){let u=a[i];Xo(u in n),s.push(n[u])}return Nr(s)}runInternalGraph(e,t){t==null&&(t=Fs(null,e.length));let n={};for(let u=0;u<this.inputs.length;++u){let l=this.inputs[u],p=e[u],c=t[u];n[l.id]=[p,c]}let o=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Hf);for(let u of o){let l=this.nodesByDepth[u];for(let p of l){let c=p.outboundLayer,m=p.inputTensors,f=p.outputTensors,d=new Array;for(let h of m)h.id in n&&d.push(n[h.id]);if(d.length===m.length){let h={},g,y,T,x;if(p.callArgs!=null&&(h=p.callArgs),d.length===1){let[k,v]=d[0];h.mask==null&&(h.mask=v),T=St(c.call(k,h)),x=St(c.computeMask(k,v)),g=[k],y=[v]}else g=d.map(k=>k[0]),y=d.map(k=>k[1]),h.mask==null&&(h.mask=y),T=St(c.call(g,h)),x=St(c.computeMask(g,y));if(c.activityRegularizer)throw new Pe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let k=0;k<f.length;++k){let v=f[k],N=T[k],A=x[k];n[v.id]=[N,A]}}}}let s=[],a=[],i=[];for(let u of this.outputs){Xo(u.id in n,`Could not compute output ${u.name} : ${u.id}`);let[l,p]=n[u.id];i.push(l.shape),s.push(l),a.push(p)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof Yo?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=Yo.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new O("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new O(`No such layer: ${e}`)}calculateLosses(){return W(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=Yo.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),u=a.getConfig(),l=[];for(let c=0;c<a.inboundNodes.length;c++){let m=a.inboundNodes[c],f=Yo.nodeKey(a,c),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let h=[];for(let g=0;g<m.inboundLayers.length;g++){let y=m.inboundLayers[g],T=m.nodeIndices[g],x=m.tensorIndices[g],k=Yo.nodeKey(y,T),v=t[k];v==null&&(v=0),h.push([y.name,v,x,d])}l.push(h)}}}let p={};p.name=a.name,p.className=i,p.config=u,p.inboundNodes=l,n.push(p)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],u=this.inputLayersNodeIndices[a],l=Yo.nodeKey(i,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let c=this.inputLayersTensorIndices[a];o.push([i.name,p,c])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],u=this.outputLayersNodeIndices[a],l=Yo.nodeKey(i,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let c=this.outputLayersTensorIndices[a];s.push([i.name,p,c])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function u(g,y){let T=[],x;for(let k of y){let v=k[0],N=k[1],A=k[2];if(x=k[3]==null?{}:k[3],!(v in s)){i(g,y);return}let F=s[v];if(F.inboundNodes.length<=N){i(g,y);return}let E=F.inboundNodes[N];T.push(E.outputTensors[A])}T.length>0&&g.apply(Nr(T),x)}function l(g){let y=g.name,T=gn(g,t.customObjects!=null?t.customObjects:{});T.setFastWeightInitDuringBuild(o),s[y]=T,g.inboundNodes.forEach(k=>{if(!(k instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${k}`);i(T,k)})}let p=t.name,c=t.layers;for(let g of c)l(g);for(;!MP(a);)for(let g of c){let y=s[g.name];if(y.name in a){let T=a[y.name];delete a[y.name];for(let x of T)u(y,x)}}let m=[],f=[],d=t.inputLayers;for(let g of d){let y=g[0],T=g[1],x=g[2];Xo(y in s);let v=s[y].inboundNodes[T].outputTensors;m.push(v[x])}let h=t.outputLayers;for(let g of h){let y=g[0],T=g[1],x=g[2];Xo(y in s);let v=s[y].inboundNodes[T].outputTensors;f.push(v[x])}return new e({inputs:m,outputs:f,name:p})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function iQ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function iy(r,e){return iQ(r,e,"classWeight")}async function uy(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=W(()=>{if(r.shape.length===1)return _n(r);if(r.shape.length===2){if(r.shape[1]>1)return Zi(r,1);if(r.shape[1]===1)return L(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Ee(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Wt(a,"float32")}else return null}function bF(r,e){return R(r,e)}var uQ=32;function yF(r,e){let t,n,o=e;t=o.xs,n=o.ys,b.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=xF("input",r.inputNames,t),a=xF("output",r.outputNames,n),i=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)b.assert(s[u].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let u=0;u<a.length;u++)b.assert(a[u].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function xF(r,e,t){if(t instanceof Qe)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function lQ(r){if(r.length===3)throw new Pe("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function TF(r,e,t){let n=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(kF(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=lQ(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let p=Jb(t.callbacks,t.yieldEvery),c=t.verbose==null?1:t.verbose,{callbackList:m,history:f}=ey(p,c,t.epochs,null,null,pQ(e,t),null,o,l);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let d=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;d<t.epochs;){let g={};await m.onEpochBegin(d);let y=0,T=0;for(n||(h=await e.iterator());n?y<t.batchesPerEpoch:!0;){let x=await h.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:k,ys:v}=yF(r,x.value),N={};N.batch=T,N.size=k[0].shape[0],await m.onBatchBegin(T,N);let A=[];if(t.classWeight!=null){let $=iy(t.classWeight,r.outputNames);for(let U=0;U<$.length;++U)A.push(await uy(v[U],null,$[U]))}let F=k.concat(v).concat(A),E=i(F);Ee(F);for(let $=0;$<u.length;++$){let U=u[$],K=E[$];N[U]=K,Vt(K)}await m.onBatchEnd(T,N),Zb(N),T++,y++}if(n?y>=t.batchesPerEpoch:x.done){if(o){let k;kF(t.validationData)?k=St(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):k=St(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?uQ:t.validationBatchSize,verbose:0}));for(let v=0;v<r.metricsNames.length;++v)g[`val_${r.metricsNames[v]}`]=k[v]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(d,g),d++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function pQ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function kF(r){return typeof r.iterator=="function"}function cQ(r){return typeof r.next=="function"}async function IF(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Pe("Verbose mode is not implemented yet.");b.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=cQ(e)?e:await e.iterator(),i=0,u=0;for(;n?u<t.batches:!0;){let l=await a.next();if(s=W(()=>{if(l.value){let{xs:p,ys:c}=yF(r,l.value),m=p.concat(c),f=W(()=>o(m));if(Ee(m),u===0)for(let h=0;h<f.length;++h)s.push(ce(0));let d=m[0].shape[0];for(let h=0;h<f.length;++h){let g=f[h],y=s[h];s[h]=W(()=>X(s[h],R(d,g))),u>0&&Ee(y)}Ee(f),i+=d,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let p=s[l];s[l]=pe(s[l],i),Ee(p)}return Nr(s)}function ly(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function im(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>lu(n,e,t-e)):lu(r,e,t-e)}function py(r,e){return W(()=>r==null?null:Array.isArray(r)?r.map(t=>py(t,e)):Vb(r,e.dtype==="int32"?e:Z(e,"int32")))}function cy(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function mQ(r,e,t,n,o,s,a,i,u,l,p,c,m,f,d){o==null&&(o=32),s==null&&(s=1),p==null&&(p=!0),m==null&&(m=0);let h=!1;if(u!=null&&l!=null&&(h=!0),d!=null&&(h=!0,f==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,f,"steps_per_epoch"),y;g!=null&&(y=tn(0,g)),a==null&&(a=1);let{callbackList:T,history:x}=ey(i,a,s,m,g,f,o,h,c);T.setModel(r),r.history=x,await T.onTrainBegin(),r.stopTraining_=!1;for(let k=m;k<s;++k){await T.onEpochBegin(k);let v={};if(f!=null)throw new Pe("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Pe("batch shuffling is not implemneted yet");p&&b.shuffle(y);let N=Wt(y),A=cy(g,o);for(let F=0;F<A.length;++F){let E={};if(await T.onBatchBegin(F,E),W(()=>{let $=A[F][0],U=A[F][1],K=lu(N,$,U-$);E.batch=F,E.size=U-$;let B=py(t,K),V=e(B);for(let j=0;j<n.length;++j){let q=n[j],J=V[j];E[q]=J,Vt(J)}if(F===A.length-1&&h){let j=r.testLoop(u,l,o);for(let q=0;q<n.length;++q){let J=n[q],Y=j[q];Vt(Y),v["val_"+J]=Y}}}),await T.onBatchEnd(F,E),Zb(E),r.stopTraining_)break}N.dispose()}if(await T.onEpochEnd(k,v),r.stopTraining_)break}return await T.onTrainEnd(),await r.history.syncData(),r.history}async function CF(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,u,l,p;try{let c=n.batchSize==null?32:n.batchSize;ly(c);let m=!1,f=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,m,c);o=f[0],s=f[1],p=f[2];let d=!1,h;if(n.validationData!=null&&n.validationData.length>0){if(d=!0,n.validationData.length===2)a=n.validationData[0],i=n.validationData[1];else throw n.validationData.length===3?new Pe("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let A=!0,F=await r.standardizeUserData(a,i,null,null,A,c);u=F[0],l=F[1],h=u.concat(l)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){d=!0;let A=Math.floor(o[0].shape[0]*(1-n.validationSplit)),F=o[0].shape[0];u=im(o,A,F),o=im(o,0,A),l=im(s,A,F),s=im(s,0,A),h=u.concat(l)}else n.validationSteps!=null&&(d=!0);let g=o.concat(s).concat(p);r.checkTrainableWeightsConsistency();let y=r.makeTrainFunction(),T=r.getDedupedMetricsNames(),x,k;d?(r.makeTestFunction(),x=r.testFunction,k=T.slice().concat(T.map(A=>"val_"+A))):(x=null,h=[],k=T.slice());let v=Jb(n.callbacks,n.yieldEvery);return await mQ(r,y,g,T,c,n.epochs,n.verbose,v,x,h,n.shuffle,k,n.initialEpoch,null,null)}finally{r.isTraining=!1,el(o,e),el(s,t),el(u,a),el(l,i),p!=null&&Ee(p)}}function LC(r){let e=[];r instanceof Qe&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(uu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function el(r,e){if(r==null)return;let t=[];if(e instanceof Qe)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Qe)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function fQ(r){return r instanceof Qe}function $C(r){return Array.isArray(r)}function vF(r){return!fQ(r)&&!$C(r)}function wF(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if($C(r)&&r.length>0)a=!0;else if(vF(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(vF(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new O(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if($C(r)){if(r=r,r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new O(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=LC(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<t[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=t[a][u];if(p!=null&&p>=0&&l!==p)throw new O(`${o} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function dQ(r,e,t){let n=Rs(r.map(s=>s.shape[0]));n.sort();let o=Rs(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function hQ(r,e,t){let n=[li,am,mp];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===mp&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let u=s.shape.slice(1),l=i.slice(1);for(let p=0;p<u.length;++p){let c=u[p],m=l[p];if(m!=null&&c!==m)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function SF(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new O(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<t[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=t[a][u];if(p!=null&&p!==l)throw new O(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function gQ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var bQ="layers-model",Qo=class extends Yo{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");fF(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=cF(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Jr))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new O(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(ty(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>ty(i))}else{let a=ty(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],wa("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=gQ(e.metrics,this.outputNames),s=(a,i,u)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([u,a])};wa("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(l=>{let p="",c,m,f;for(let d of l){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===am?["accuracy","acc"].indexOf(d)!==-1?m=md:["crossentropy","ce"].indexOf(d)!==-1&&(m=ry):this.lossFunctions[a]===sm?["accuracy","acc"].indexOf(d)!==-1?m=ny:["crossentropy","ce"].indexOf(d)!==-1&&(m=FC):["accuracy","acc"].indexOf(d)!==-1?m=fd:["crossentropy","ce"].indexOf(d)!==-1&&(m=dd);let y;["accuracy","acc"].indexOf(d)!==-1?y="acc":["crossentropy","ce"].indexOf(d)!==-1&&(y="ce"),f=m,c=p+y}else f=pF(d),c=p+hd(d);let h;wa(c,()=>{h=f}),s(a,c,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;ly(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let u=this.testFunction,l=this.testLoop(u,i,o,n.verbose,n.steps);return Nr(l)}finally{el(a[0],e),el(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),IF(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new O(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new Aa;if(e instanceof Qe&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],e[u])}else for(let u of this.inputs){let l=e[u.name];if(l==null)throw new O(`No value is provided for the model's input ${u.name}`);a.add(u,l)}let i=dp(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Fs(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let u=a.indexOf(e[i]);if(u!==-1&&(t[i]=s[u],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return W(()=>{let o=this.checkNumSamples(e);if(n)throw new Pe("Verbose predictLoop() is not implemented yet.");let s=cy(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)W(()=>{let l=s[i][0],p=s[i][1],c=im(e,l,p),m=[];if(Array.isArray(c))for(let d=0;d<c.length;++d)m.push({key:this.inputs[d],value:c[d]});else m.push({key:this.inputs[0],value:c});let f=new Aa(m);return dp(this.outputs,f)}).forEach((l,p)=>a[p].push(l));return Nr(a.map(i=>lt(i,0)))})}predict(e,t={}){let n=LC(e);SF(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return ly(o),this.predictLoop(n,o)}finally{el(n,e)}}predictOnBatch(e){SF(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new en("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===sm?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=wF(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=wF(t,this.feedOutputNames,s,!1,"target"),dQ(e,t,null),hQ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!=0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,u]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(o!=null){let p=iy(o,this.outputNames);l=[];for(let c=0;c<p.length;++c)l.push(await uy(u[c],null,p[c]))}return[i,u,l]}testLoop(e,t,n,o=0,s){return W(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Pe("Verbose mode is not implemented yet.");if(s!=null)throw new Pe("steps mode in testLoop() is not implemented yet");{let u=cy(a,n),l=Wt(tn(0,a));for(let p=0;p<u.length;++p){let c=u[p][0],m=u[p][1],f=lu(l,c,m-c),d=py(t,f),h=e(d);if(p===0)for(let g=0;g<h.length;++g)i.push(ce(0));for(let g=0;g<h.length;++g){let y=h[g];i[g]=X(i[g],R(m-c,y))}}for(let p=0;p<i.length;++p)i[p]=pe(i[p],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;TC(e,o)>1&&(s+=`_${TC(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let c=[];for(let h=0;h<this.inputs.length;++h)c.push({key:this.inputs[h],value:n[h]});let m=new Aa(c),f=dp(this.outputs,m,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let y=this.lossFunctions[h](o[h],f[h]);s[h]!=null&&(y=bF(y,s[h]));let T=Lt(y);t.push(T),h===0?d=y:d=X(d,y)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let y=this.metricsTensors[h][0],T=this.metricsTensors[h][1];g=Lt(y(o[T],f[T]))}Vt(g),a.push(g)}return d=Lt(d),this.calculateLosses().forEach(h=>{d=X(d,h)}),d},u=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(i,l,u)].concat(a)}}makeTestFunction(){this.testFunction=e=>W(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:o[l]});let i=new Aa(a),u=dp(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let p=this.lossFunctions[l],c=Lt(p(s[l],u[l]));l===0?n=c:n=X(n,c),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let p=this.metricsTensors[l][0],c=this.metricsTensors[l][1],m=Lt(p(s[c],u[c]));t.push(m)}return t})}async fit(e,t,n={}){return CF(this,e,t,n)}async fitDataset(e,t){return TF(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),u=[];for(let l of i){let p=await l.data();u.push(p[0])}return Ee(i),Nr(u)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=bf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-bf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Ms(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Ms(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=Ms(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ms(hd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ms(hd(e)));{let e={};for(let t in this.metrics)e[t]=Ms(hd(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=fp(e.optimizer_config),n=gn(t),o;if(typeof e.loss=="string")o=iu(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>iu(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=iu(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>iu(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=iu(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=Ur.getSaveHandlers(e);if(l.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new O(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Ur.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:bQ,generatedBy:`TensorFlow.js tfjs-layers v${gd}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:p,specs:c}=await Ur.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...c),n.data=Ur.concatenateArrayBuffers([n.data,p])}if(this.userDefinedMetadata!=null){let l=!0;MC(this.userDefinedMetadata,this.name,l),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){MC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Qo.className="Model";te.registerClass(Qo);var BC=class extends Qo{};BC.className="Functional";te.registerClass(BC);async function _F(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=fp(t),o=gn(n,e);if(r.weightsManifest!=null){let s=await Ur.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Ee(s)}return o}async function AF(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Ur.getLoadHandlers(r,e);if(t.length===0)t.push(Ur.browserHTTPRequest(r,e));else if(t.length>1)throw new O(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return yQ(r,void 0,e)}async function yQ(r,e,t){if(t==null&&(t={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=gn(fp(o),e,a),u=n.trainingConfig;if(u!=null&&i.loadTrainingConfig(u),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:p}=xQ(n.weightData,n.weightSpecs);i.loadWeights(l,s),i.optimizer!=null&&p.length>0&&await i.optimizer.setWeights(p),Ee(l),Ee(p.map(c=>c.tensor))}return i}function xQ(r,e){let t=Ur.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var my=class extends Qo{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Yu("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof my||e instanceof Qo,n;if(t){if(n=e,n.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=Qb({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=_C(this.outputs[0])}this.inboundNodes=[],new Qu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Fs(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(tt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Qo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=t}else b.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof my))throw new Pe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let u of s){let p=gn(u,void 0,o);o&&p.setFastWeightInitDuringBuild(!0),i.add(p)}return i}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},um=my;um.className="Sequential";te.registerClass(um);function TQ(r){return new Qo(r)}function kQ(r){return new um(r)}function IQ(r,e){return e==null&&(e={}),AF(r,e)}function OC(r){return Qb(r)}function CQ(r,e){ud.registerCallbackConstructor(r,e)}var bn=class extends te.Serializable{getConfig(){return{}}},zC=class extends bn{apply(e,t=1){return QP(e,t)}};zC.className="elu";te.registerClass(zC);var GC=class extends bn{apply(e){return $f(e)}};GC.className="selu";te.registerClass(GC);var WC=class extends bn{apply(e){return Hr(e)}};WC.className="relu";te.registerClass(WC);var UC=class extends bn{apply(e){return W(()=>nu(6,Hr(e)))}};UC.className="relu6";te.registerClass(UC);var KC=class extends bn{apply(e){return e}};KC.className="linear";te.registerClass(KC);var VC=class extends bn{apply(e){return ln(e)}};VC.className="sigmoid";te.registerClass(VC);var jC=class extends bn{apply(e){return JP(e)}};jC.className="hardSigmoid";te.registerClass(jC);var HC=class extends bn{apply(e){return ti(e)}};HC.className="softplus";te.registerClass(HC);var qC=class extends bn{apply(e){return ZP(e)}};qC.className="softsign";te.registerClass(qC);var XC=class extends bn{apply(e){return Ji(e)}};XC.className="tanh";te.registerClass(XC);var bd=class extends bn{apply(e,t=-1){return Hl(e,t)}};bd.className="softmax";te.registerClass(bd);var YC=class extends bn{apply(e,t=-1){return Af(e,t)}};YC.className="logSoftmax";te.registerClass(YC);var QC=class extends bn{apply(e,t=1){return W(()=>R(ln(R(e,t)),e))}};QC.className="swish";te.registerClass(QC);var ZC=class extends bn{apply(e){return W(()=>R(e,Ji(ti(e))))}};ZC.className="mish";te.registerClass(ZC);function Na(r){return r.getClassName()}function JC(r,e={}){return si(r,te.SerializationMap.getMap().classNameMap,e,"activation")}function Da(r){if(r==null){let e={};return e.className="linear",e.config={},JC(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},JC(e)}else return r instanceof bn?r:JC(r)}function ev(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var tv=class extends te.Serializable{},hp=class extends tv{constructor(e){super();ev(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return W(()=>{let t=Tt([1]);return this.hasL1&&(t=X(t,he(R(this.l1,zt(e))))),this.hasL2&&(t=X(t,he(R(this.l2,pp(e))))),L(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};hp.className="L1L2";te.registerClass(hp);function NF(r){return ev(r),new hp({l1:r!=null?r.l1:null,l2:0})}function DF(r){return ev(r),new hp({l2:r!=null?r.l2:null,l1:0})}var PF={l1l2:"L1L2"};function bt(r){return Kc(r)}function FF(r,e={}){return si(r,te.SerializationMap.getMap().classNameMap,e,"regularizer")}function _t(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in PF?PF[r]:r,config:{}};return FF(t)}else return r instanceof tv?r:FF(r)}var yd=class extends Ve{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ge(e);let n=Hr(e);return this.maxValue!=null&&(n=Lr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};yd.className="ReLU";te.registerClass(yd);var xd=class extends Ve{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ge(e);return zl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};xd.className="LeakyReLU";te.registerClass(xd);var Td=class extends Ve{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=It(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_t(e.alphaRegularizer),this.alphaConstraint=Qt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=tt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Mt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ge(e),Vl(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Ft(this.alphaInitializer),alphaRegularizer:bt(this.alphaRegularizer),alphaConstraint:Yt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Td.className="PReLU";te.registerClass(Td);var kd=class extends Ve{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Pe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ge(e);return tu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};kd.className="ELU";te.registerClass(kd);var Id=class extends Ve{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ge(e);return R(n,Z(nr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Id.className="ThresholdedReLU";te.registerClass(Id);var Cd=class extends Ve{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new bd().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ge(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Cd.className="Softmax";te.registerClass(Cd);function tl(r,e,t){if(typeof r=="number")return Fs(r,e);if(r.length!==e)throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!HP(o))throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Mn(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Pa(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+Sa([t-e,0]);else if(n==="same")r=r*e;else throw new O(`Unsupport padding mode: ${n}.`);return r}function vd(r,e){return W(()=>(jt(e),e==="channelsFirst"?qe(r,[0,2,3,1]):r))}function rv(r,e){return W(()=>(jt(e),e==="channelsFirst"?qe(r,[0,2,3,4,1]):r))}function vQ(r,e,t,n=1,o="valid",s,a=1){return W(()=>{if(s==null&&(s=mn()),jt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=qe(r,[0,2,1])),o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=If(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=dn(i,t)),i})}function MF(r,e,t,n=[1,1],o="valid",s,a,i=null){return W(()=>{if(s==null&&(s=mn()),jt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=vd(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Ds.conv2d({x:u,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(u=qe(u,[0,3,1,2])),u})}function wQ(r,e,t,n=[1,1,1],o="valid",s,a){return W(()=>{if(s==null&&(s=mn()),jt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=rv(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=vf(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=dn(i,t)),s==="channelsFirst"&&(i=qe(i,[0,4,1,2,3])),i})}var lm=class extends Ve{constructor(e,t){super(t);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(lm.verifyArgs(t),this.rank=e,sr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Pe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tl(t.kernelSize,e,"kernelSize"),this.strides=tl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,fn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,jt(this.dataFormat),this.activation=Da(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=It(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Qt(t.biasConstraint),this.biasRegularizer=_t(t.biasRegularizer),this.activityRegularizer=_t(t.activityRegularizer),this.dilationRate=tl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Xo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!zb(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Na(this.activation),useBias:this.useBias,biasInitializer:Ft(this.biasInitializer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),biasConstraint:Yt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},gp=class extends lm{constructor(e,t){super(e,t);this.kernel=null;gp.verifyArgs(t),this.filters=t.filters,sr(this.filters,"filters"),this.kernelInitializer=It(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Qt(t.kernelConstraint),this.kernelRegularizer=_t(t.kernelRegularizer)}build(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return W(()=>{e=Ge(e);let n,o=this.bias==null?null:this.bias.read(),s=Gb(this.activation.getClassName());if(s!=null&&this.rank===2)n=MF(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=vQ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=MF(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=wQ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Pe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=tt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=Mn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Ft(this.kernelInitializer),kernelRegularizer:bt(this.kernelRegularizer),kernelConstraint:Yt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},ov=class extends gp{constructor(e){super(2,e);ov.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!zb(e.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},pm=ov;pm.className="Conv2D";te.registerClass(pm);var sv=class extends gp{constructor(e){super(3,e);sv.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},cm=sv;cm.className="Conv3D";te.registerClass(cm);var wd=class extends pm{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Ge(e);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let u=o[a],l=o[i],p=this.kernelSize[0],c=this.kernelSize[1],m=this.strides[0],f=this.strides[1],d=Pa(u,m,p,this.padding),h=Pa(l,f,c,this.padding),g=[s,d,h,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,1]));let y=Cf(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=qe(y,[0,3,1,2])),this.bias!=null&&(y=dn(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[o]=Pa(t[o],u,a,this.padding),t[s]=Pa(t[s],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};wd.className="Conv2DTranspose";te.registerClass(wd);var Sd=class extends cm{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Ge(e);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i,u;this.dataFormat==="channelsFirst"?(u=2,a=3,i=4):(u=1,a=2,i=3);let l=o[u],p=o[a],c=o[i],m=this.kernelSize[0],f=this.kernelSize[1],d=this.kernelSize[2],h=this.strides[0],g=this.strides[1],y=this.strides[2],T=Pa(l,h,m,this.padding),x=Pa(p,g,f,this.padding),k=Pa(c,y,d,this.padding),v=[s,T,x,k,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,4,1]));let N=_I(n,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(N=qe(N,[0,4,1,2,3])),this.bias!==null&&(N=dn(N,this.bias.read(),this.dataFormat)),this.activation!==null&&(N=this.activation.apply(N)),N})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,o,s,a;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,a=4):(n=4,o=1,s=2,a=3);let i=this.kernelSize[0],u=this.kernelSize[1],l=this.kernelSize[2],p=this.strides[0],c=this.strides[1],m=this.strides[2];return t[n]=this.filters,t[o]=Pa(t[o],p,i,this.padding),t[s]=Pa(t[s],c,u,this.padding),t[a]=Pa(t[a],m,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Sd.className="Conv3DTranspose";te.registerClass(Sd);var nv=class extends gp{constructor(e,t){super(e,t);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(t.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=It(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_t(t.depthwiseRegularizer),this.depthwiseConstraint=Qt(t.depthwiseConstraint),this.pointwiseInitializer=It(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_t(t.pointwiseRegularizer),this.pointwiseConstraint=Qt(t.pointwiseConstraint)}build(e){if(e=tt(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Mt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{e=Ge(e);let n;if(this.rank===1)throw new Pe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=qe(e,[0,2,3,1])),n=tC(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=dn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=qe(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.pointwiseInitializer=Ft(this.pointwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.pointwiseRegularizer=bt(this.pointwiseRegularizer),e.depthwiseConstraint=Yt(this.depthwiseConstraint),e.pointwiseConstraint=Yt(this.pointwiseConstraint),e}};nv.className="SeparableConv";var _d=class extends nv{constructor(e){super(2,e)}};_d.className="SeparableConv2D";te.registerClass(_d);var av=class extends gp{constructor(e){super(1,e);av.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!zb(e.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Ad=av;Ad.className="Conv1D";te.registerClass(Ad);var Nd=class extends Ve{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return W(()=>{if(e=Ge(e),this.dataFormat==="channelsLast"){let n=Jf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Jf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Jf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Jf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Nd.className="Cropping2D";te.registerClass(Nd);var Dd=class extends Ve{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,KP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return W(()=>{let n=Ge(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=qe(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?Pn.resizeNearestNeighbor(n,[s,a]):Pn.resizeBilinear(n,[s,a]);return qe(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?Pn.resizeNearestNeighbor(n,[s,a]):Pn.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Dd.className="UpSampling2D";te.registerClass(Dd);function SQ(r,e,t=[1,1],n="valid",o,s){return W(()=>{o==null&&(o=mn()),jt(o);let a=vd(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=eu(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=qe(a,[0,3,1,2])),a})}var Pd=class extends lm{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=It(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Qt(e.depthwiseConstraint),this.depthwiseRegularizer=_t(e.depthwiseRegularizer)}build(e){if(e=tt(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{e=Ge(e);let n=SQ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=dn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Mn(t,this.kernelSize[0],this.padding,this.strides[0]),a=Mn(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.depthwiseConstraint=Yt(this.depthwiseRegularizer),e}};Pd.className="DepthwiseConv2D";te.registerClass(Pd);function iv(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function uv(r,e,t,n=!1,o,s,a=!1,i=!1){return W(()=>{let u=e.shape.length;if(u<3)throw new O(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(tn(2,u));if(e=qe(e,l),s!=null)throw new Pe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=Z(Z(o,"bool"),"float32"),o.rank===u-1&&(o=_r(o,-1)),o=qe(o,l)),n&&(e=xr(e,0),o!=null&&(o=xr(o,0)));let p=[],c,m=t,f=e.shape[0],d=Br(e),h;o!=null&&(h=Br(o));for(let y=0;y<f;++y){let T=d[y],x=W(()=>r(T,m));if(o==null)c=x[0],m=x[1];else{let k=W(()=>{let v=h[y],N=ue(Ar(v),v),A=X(R(x[0],v),R(m[0],N)),F=m.map((E,$)=>X(R(x[1][$],v),R(E,N)));return{output:A,newStates:F}});c=k.output,m=k.newStates}i&&p.push(c)}let g;return i&&(g=fr(p,1)),[c,g,m]})}var lv=class extends Ve{constructor(e){super(e);let t;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new dm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Mt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return tn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Xb(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return W(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Pe("Constants support is not implemented in RNN yet.");Xb(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Mt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new Pe("Constants support is not implemented in RNN yet.");this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Mt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new Xn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Tt([n,o])):this.states_=[Tt([n,this.cell.stateSize])];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Tt([n,o])):this.states_[0]=Tt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!b.arraysEqual(s.shape,i))throw new O(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Vt(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=iv(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Mt({shape:l.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof hn){let l=[e].concat(a),p=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=p;let m=super.apply(l,t);return this.inputSpec=c,m}else return super.apply(e,t)}call(e,t){return W(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Ge(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new O(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},l=uv((d,h)=>{let g=this.cell.call([d].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),p=l[0],c=l[1],m=l[2];this.stateful&&this.resetStates(m,o);let f=this.returnSequences?c:p;return this.returnState?[f].concat(m):f})}getInitialState(e){return W(()=>{let t=Tt(e.shape);return t=he(t,[1,2]),t=uu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Kb(t,[1,n]):t):this.cell.stateSize>1?[Kb(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===lv.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=gn(o,n);return new e(Object.assign(t,{cell:s}))}},Bs=lv;Bs.className="RNN";te.registerClass(Bs);var rl=class extends Ve{},mm=class extends rl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,sr(this.units,"units"),this.activation=Da(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=It(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Qt(e.kernelConstraint),this.recurrentConstraint=Qt(e.recurrentConstraint),this.biasConstraint=Qt(e.biasConstraint),this.dropout=up([1,Sa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=up([1,Sa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=pu({ones:()=>Ar(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=pu({ones:()=>Ar(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=$s(R(e,a),this.kernel.read()):s=$s(e,this.kernel.read()),this.bias!=null&&(s=dn(s,this.bias.read())),i!=null&&(n=R(n,i));let u=X(s,$s(n,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Na(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Yt(this.kernelConstraint),recurrentConstraint:Yt(this.recurrentConstraint),biasConstraint:Yt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};mm.className="SimpleRNNCell";te.registerClass(mm);var Fd=class extends Bs{constructor(e){e.cell=new mm(e);super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};Fd.className="SimpleRNN";te.registerClass(Fd);var fm=class extends rl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,sr(this.units,"units"),this.activation=Da(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Da(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=It(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Qt(e.kernelConstraint),this.recurrentConstraint=Qt(e.recurrentConstraint),this.biasConstraint=Qt(e.biasConstraint),this.dropout=up([1,Sa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=up([1,Sa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=pu({ones:()=>Ar(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=pu({ones:()=>Ar(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,u,l;0<this.dropout&&this.dropout<1&&(e=R(e,s[0]));let p=$s(e,this.kernel.read());this.useBias&&(p=dn(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,a[0]));let c=this.recurrentKernel.read(),[m,f]=Ir(c,[2*this.units,this.units],c.rank-1),d=$s(o,m),[h,g,y]=Ir(p,3,p.rank-1),[T,x]=Ir(d,2,d.rank-1);i=this.recurrentActivation.apply(X(h,T)),u=this.recurrentActivation.apply(X(g,x));let k=$s(R(u,o),f);l=this.activation.apply(X(y,k));let v=X(R(i,o),R(X(1,et(i)),l));return[v,v]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Na(this.activation),recurrentActivation:Na(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Yt(this.kernelConstraint),recurrentConstraint:Yt(this.recurrentConstraint),biasConstraint:Yt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};fm.className="GRUCell";te.registerClass(fm);var Md=class extends Bs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new fm(e);super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Md.className="GRU";te.registerClass(Md);var nl=class extends rl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,sr(this.units,"units"),this.activation=Da(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Da(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=It(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Qt(e.kernelConstraint),this.recurrentConstraint=Qt(e.recurrentConstraint),this.biasConstraint=Qt(e.biasConstraint),this.dropout=up([1,Sa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=up([1,Sa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var o;e=tt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;n=new(o=class extends Fn{apply(u,l){let p=s.apply([a]),c=new cp().apply([a]),m=s.apply([a*2]);return wC(wC(p,c),m)}},o.className="CustomInit",o)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return W(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=pu({ones:()=>Ar(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=pu({ones:()=>Ar(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,u,l,p,c;0<this.dropout&&this.dropout<1&&(e=R(e,a[0]));let m=$s(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,i[0])),m=X(m,$s(o,this.recurrentKernel.read())),this.useBias&&(m=dn(m,this.bias.read()));let[f,d,h,g]=Ir(m,4,m.rank-1);u=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(d),p=X(R(l,s),R(u,this.activation.apply(h))),c=this.recurrentActivation.apply(g);let y=R(c,this.activation.apply(p));return[y,y,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Na(this.activation),recurrentActivation:Na(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Yt(this.kernelConstraint),recurrentConstraint:Yt(this.recurrentConstraint),biasConstraint:Yt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};nl.className="LSTMCell";te.registerClass(nl);var Ed=class extends Bs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new nl(e);super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Ed.className="LSTM";te.registerClass(Ed);var dm=class extends rl{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return W(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let u=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=u.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){Xb(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{wa(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(gn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return id(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}nm(t)}};dm.className="StackedRNNCells";te.registerClass(dm);function pu(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(e(),t):jb(e(),t),i=()=>Xu(a,e,n);return!o||o<=1?Vt(i().clone()):Array(o).fill(void 0).map(i).map(l=>Vt(l.clone()))}var pv=class extends Bs{constructor(e){if(e.unroll)throw new Pe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pe("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Mt({ndim:5})]}call(e,t){return W(()=>{if(this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new O("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return W(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=Tt(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new Xn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Tt(s)):this.states_=[Tt(s)];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Tt(s)):this.states_[0]=Tt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let i=0;i<this.states_.length;++i){let u=e[i],l=s;if(!b.arraysEqual(u.shape,l))throw new O(`State ${i} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${u.shape}`);this.states_[i]=u}}this.states_=this.states_.map(i=>Vt(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,u=t==="channelsFirst",l=e[u?3:2],p=e[u?4:3],c=Mn(l,o[0],s,a[0],i[0]),m=Mn(p,o[1],s,a[1],i[1]);return[...e.slice(0,2),...u?[n,c,m]:[c,m,n]]}};pv.className="ConvRNN2D";var hm=class extends nl{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super({...e,units:t});this.filters=t,sr(this.filters,"filters"),this.kernelSize=tl(n,2,"kernelSize"),this.kernelSize.forEach(u=>sr(u,"kernelSize")),this.strides=tl(o||1,2,"strides"),this.strides.forEach(u=>sr(u,"strides")),this.padding=s||"valid",fn(this.padding),this.dataFormat=a||"channelsLast",jt(this.dataFormat),this.dilationRate=tl(i||1,2,"dilationRate"),this.dilationRate.forEach(u=>sr(u,"dilationRate"))}build(e){var i;e=tt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let l=this.biasInitializer,p=this.filters;u=new(i=class extends Fn{apply(m,f){let d=l.apply([p]),h=mr([p]),g=l.apply([p*2]);return Hc([d,h,g])}},i.className="CustomInit",i)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return W(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=pu({ones:()=>Ar(o),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,l=(oe,re,me)=>!re||!re[me]?oe:R(re[me],oe),p=l(o,u,0),c=l(o,u,1),m=l(o,u,2),f=l(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=pu({ones:()=>Ar(s),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,h=l(s,d,0),g=l(s,d,1),y=l(s,d,2),T=l(s,d,3),x=3,[k,v,N,A]=Ir(this.kernel.read(),i,x),[F,E,$,U]=this.useBias?Ir(this.bias.read(),i):[null,null,null,null];p=this.inputConv(p,k,F,this.padding),c=this.inputConv(c,v,E,this.padding),m=this.inputConv(m,N,$,this.padding),f=this.inputConv(f,A,U,this.padding);let[K,B,V,j]=Ir(this.recurrentKernel.read(),i,x);h=this.recurrentConv(h,K),g=this.recurrentConv(g,B),y=this.recurrentConv(y,V),T=this.recurrentConv(T,j);let q=this.recurrentActivation.apply(X(p,h)),J=this.recurrentActivation.apply(X(c,g)),Y=X(R(J,a),R(q,this.activation.apply(X(m,y)))),Q=R(this.recurrentActivation.apply(X(f,T)),this.activation.apply(Y));return[Q,Q,Y]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=Hn(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?dn(s,n,this.dataFormat):s}recurrentConv(e,t){return Hn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};hm.className="ConvLSTM2DCell";te.registerClass(hm);var Rd=class extends pv{constructor(e){let t=new hm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Rd.className="ConvLSTM2D";te.registerClass(Rd);var gm=class extends Ve{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ge(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return Xu(()=>jb(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};gm.className="Dropout";te.registerClass(gm);var Ld=class extends gm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Ld.className="SpatialDropout1D";te.registerClass(Ld);var $d=class extends Ve{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,sr(this.units,"units"),this.activation=Da(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Qt(e.kernelConstraint),this.biasConstraint=Qt(e.biasConstraint),this.kernelRegularizer=_t(e.kernelRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=tt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=tt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ge(e),o=Gb(this.activation.getClassName()),s;return o!=null?s=$s(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=$s(n,this.kernel.read()),this.bias!=null&&(s=dn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Na(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Yt(this.kernelConstraint),biasConstraint:Yt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};$d.className="Dense";te.registerClass($d);var Bd=class extends Ve{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tt(e);for(let t of e.slice(1))if(t==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ls(e,1)]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ge(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=qe(n,o)}return YP(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Bd.className="Flatten";te.registerClass(Bd);var Od=class extends Ve{constructor(e){super(e);this.supportsMasking=!0,this.activation=Da(e.activation)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ge(e);return this.activation.apply(n)})}getConfig(){let e={activation:Na(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Od.className="Activation";te.registerClass(Od);var zd=class extends Ve{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return W(()=>(e=Ge(e),qP(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};zd.className="RepeatVector";te.registerClass(zd);var Gd=class extends Ve{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let u=0;u<o.length;++u){let l=o[u];if(this.isUnknown(l))if(a===null)a=u;else throw new O("Can only specifiy one unknown dimension.");else s*=l}let i=Ls(e);if(a!==null){if(s===0||i%s!=0)throw new O(n);o[a]=i/s}else if(i!==s)throw new O(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ge(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return L(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Gd.className="Reshape";te.registerClass(Gd);var Wd=class extends Ve{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=tn(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Mt({ndim:this.dims.length+1})]}computeOutputShape(e){e=tt(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return qe(Ge(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Wd.className="Permute";te.registerClass(Wd);var Ud=class extends Ve{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ge(e),o=-1;return Rc(ri(n,this.maskValue),o)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ge(e),o=-1,s=!0,a=Rc(ri(n,this.maskValue),o,s);return R(n,Z(a,n.dtype))})}};Ud.className="Masking";te.registerClass(Ud);var Kd=class extends Ve{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(St(e.inputLength))}this.inputDim=e.inputDim,sr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,sr(this.outputDim,"outputDim"),this.embeddingsInitializer=It(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_t(e.embeddingsRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.embeddingsConstraint=Qt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return W(()=>this.maskZero?(e=Ge(e),ri(e,De(e))):null)}computeOutputShape(e){if(e=tt(e),this.inputLength==null)return[...e,this.outputDim];let t=St(this.inputLength);if(t.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ge(e);n.dtype!=="int32"&&(n=lp(n,"int32"));let o=Vb(this.embeddings.read(),L(n,[n.size]));return L(o,tt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ft(this.embeddingsInitializer),embeddingsRegularizer:bt(this.embeddingsRegularizer),activityRegularizer:bt(this.activityRegularizer),embeddingsConstraint:Yt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Kd.className="Embedding";te.registerClass(Kd);var ol=class extends Ve{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Pe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tt(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Rs(t),t.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&Rs(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return W(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=Sa(o);for(let a of e){let i=a.rank;for(let u=0;u<s-i;++u)a=uu(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let u of e){let l=u.rank;if(l==null){let p=u.shape,c=p[0],m=p.slice(1).concat([c]),f=L(u,[c].concat(Ls(p.slice(1))));f=qe(f,[1,0]),f=L(f,m),n.push(f),s=!0}else if(l>1){let p=tn(1,l).concat([0]);n.push(qe(u,p)),s=!0}else n.push(u)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let u=a.shape,l=u.length,p=u[l-1],c=[p].concat(u.slice(0,u.length-1));a=L(qe(L(a,[-1,p]),[1,0]),c)}else if(i>1){let u=[i-1].concat(tn(0,i-1));a=qe(a,u)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Rs(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return W(()=>{if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(t.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:_r(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=jr(n,t[o]);return n})}},Vd=class extends ol{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return t})}};Vd.className="Add";te.registerClass(Vd);var jd=class extends ol{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=R(t,e[n]);return t})}};jd.className="Multiply";te.registerClass(jd);var Hd=class extends ol{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return R(1/e.length,t)})}};Hd.className="Average";te.registerClass(Hd);var qd=class extends ol{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qn(t,e[n]);return t})}};qd.className="Maximum";te.registerClass(qd);var Xd=class extends ol{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=nu(t,e[n]);return t})}};Xd.className="Minimum";te.registerClass(Xd);var Yd=class extends ol{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(b.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return W(()=>Hc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new O(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return W(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(Z(Ar(e[a]),"bool")):t[a].rank<e[a].rank?o.push(_r(t[a],-1)):o.push(t[a]);let s=lt(o,this.axis);return xf(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Yd.className="Concatenate";te.registerClass(Yd);function Qd(r,e){for(;r<0;)r+=e;return r}function _Q(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Pe("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Pe("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return W(()=>{let a;if(n>o){a=n-o;let u=[];for(let l=0;l<a;++l)u.push(1);e=L(e,e.shape.concat(u))}else if(o>n){a=o-n;let u=[];for(let l=0;l<a;++l)u.push(1);r=L(r,r.shape.concat(u))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=he(R(r,e),s[0]):i=he(R(qe(r,[1,0]),e),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===e.shape.length-1;i=je(r,e,u,l)}if(a>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let p=u;p<u+a;++p)l.push(p);i=cn(i,l)}return i.shape.length===1&&(i=_r(i,1)),i})}var Zd=class extends ol{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new O(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>Qd(s,e[a].shape.length)):o=[Qd(this.axes,t.shape.length),Qd(this.axes,n.shape.length)],this.normalize&&(t=ld(t,o[0]),n=ld(n,o[1])),_Q(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Qd(this.axes,e.length),Qd(this.axes,t.length)],n}computeOutputShape(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Zd.className="Dot";te.registerClass(Zd);var Jd=class extends Ve{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ge(e);return Xu(()=>X(qc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Jd.className="GaussianNoise";te.registerClass(Jd);var eh=class extends Ve{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ge(e);return this.rate>0&&this.rate<1?Xu(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return R(n,qc(n.shape,1,s))},()=>n,t.training||!1):n})}};eh.className="GaussianDropout";te.registerClass(eh);var th=class extends Ve{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ge(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Xu(()=>{let s=Ge(e),a=1.6732632423543772,i=1.0507009873554805,u=-a*i,l=Ho(va(n),this.rate);l=lp(l,"float32");let p=((1-this.rate)*(1+this.rate*u**2))**-.5,c=-p*u*this.rate,m=X(R(s,l),R(X(l,-1),u));return X(R(m,p),c)},()=>Ge(e),t.training||!1)}return e})}};th.className="AlphaDropout";te.registerClass(th);function rh(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=yI(r,e,t,n,o,s);else if(r.rank===3)a=xI(r,e,t,n,o,s);else if(r.rank===4)a=TI(r,e,t,n,o,s);else throw new Pe(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function AQ(r,e,t,n,o=.001){return W(()=>{let s=zc(r,n),a=s.mean,i=s.variance;return[rh(r,a,i,t,e,o),a,i]})}function NQ(r,e,t,n,o=.001){return W(()=>{let s=zc(r,n),a=s.mean,i=s.variance,u=[];for(let d of tn(0,r.rank))n.indexOf(d)!==-1?u.push(1):u.push(r.shape[d]);let l=L(a,u),p=L(i,u),c=e==null?null:L(e,u),m=t==null?null:L(t,u);return[rh(r,l,p,m,c,o),a,i]})}function DQ(r,e,t,n,o=.001){return b.arraysEqual(n.slice().sort(),tn(0,r.rank-1))?AQ(r,e,t,n,o):NQ(r,e,t,n,o)}var nh=class extends Ve{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=It(e.betaInitializer||"zeros"),this.gammaInitializer=It(e.gammaInitializer||"ones"),this.movingMeanInitializer=It(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=It(e.movingVarianceInitializer||"ones"),this.betaConstraint=Qt(e.betaConstraint),this.gammaConstraint=Qt(e.gammaConstraint),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer)}build(e){e=tt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new O(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Mt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return W(()=>{let n=t.training==null?!1:t.training,o=Ge(e),s=o.shape,a=s.length,i=tn(0,a),u=this.axis>=0?this.axis:this.axis+a;i.splice(u,1);let l=Fs(1,a);l[u]=s[u];let p=i.slice();p.sort();let c=!b.arraysEqual(p,tn(0,a).slice(0,a-1)),m=()=>{if(c){let T=L(this.movingMean.read(),l),x=L(this.movingVariance.read(),l),k=this.center?L(this.beta.read(),l):null,v=this.scale?L(this.gamma.read(),l):null;return rh(o,T,x,k,v,this.epsilon)}else return rh(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return m();let[f,d,h]=DQ(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(T,x,k)=>{W(()=>{let v=1-k,N=T.read(),A=R(ue(N,x),v);T.write(ue(N,A))})};return(()=>{g(this.movingMean,d,this.momentum),g(this.movingVariance,h,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),movingMeanInitializer:Ft(this.movingMeanInitializer),movingVarianceInitializer:Ft(this.movingVarianceInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer),betaConstraint:Yt(this.betaConstraint),gammaConstraint:Yt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};nh.className="BatchNormalization";te.registerClass(nh);var oh=class extends Ve{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=It(e.betaInitializer||"zeros"),this.gammaInitializer=It(e.gammaInitializer||"ones"),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=tt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Rs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Ge(e),o=n.shape,s=o.length;return W(()=>{let a=!0,{mean:i,variance:u}=zc(n,this.axis,a),l=Fs(1,s);for(let h of this.axis)l[h]=o[h];let p=h=>h!=null&&h.shape.length!==s?L(h,l):h,c=p(this.gamma.read()),m=p(this.beta.read()),f=[],d=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(f.push(o[h]),d.push(1)):(f.push(1),d.push(o[h]));return i=Vr(i,f),u=Vr(u,f),c=Vr(c,d),m=Vr(m,d),rh(n,i,u,m,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};oh.className="LayerNormalization";te.registerClass(oh);function PQ(r,e,t){return W(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=mn()),t!=="channelsLast"&&t!=="channelsFirst")throw new O(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],Nn(r,n)})}var sh=class extends Ve{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?mn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=tt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return W(()=>PQ(Ge(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};sh.className="ZeroPadding2D";te.registerClass(sh);function fy(r,e,t,n,o,s){return W(()=>{jt(o),CC(s),fn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=mn()),s==null&&(s="max"),r=vd(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Ul(r,e,t,i):a=Rl(r,e,t,i),o==="channelsFirst"&&(a=qe(a,[0,3,1,2])),a})}function EF(r,e,t,n,o,s){return W(()=>{jt(o),CC(s),fn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=mn()),s==null&&(s="max"),r=rv(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Pf(r,e,t,i):a=Tf(r,e,t,i),o==="channelsFirst"&&(a=qe(a,[0,4,1,2,3])),a})}var cv=class extends Ve{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(sr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);sr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,fn(this.padding),this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){e=tt(e);let t=Mn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return W(()=>{this.invokeCallHook(e,t),e=uu(Ge(e),2);let n=this.poolingFunction(Ge(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return cn(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},ah=class extends cv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),fy(e,t,n,o,s,"max")}};ah.className="MaxPooling1D";te.registerClass(ah);var ih=class extends cv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),fy(e,t,n,o,s,"avg")}};ih.className="AveragePooling1D";te.registerClass(ih);var mv=class extends Ve{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];sr(this.poolSize,"poolSize"),sr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),fn(this.padding),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Mn(t,this.poolSize[0],this.padding,this.strides[0]),n=Mn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ge(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},uh=class extends mv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),fy(e,t,n,o,s,"max")}};uh.className="MaxPooling2D";te.registerClass(uh);var lh=class extends mv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),fy(e,t,n,o,s,"avg")}};lh.className="AveragePooling2D";te.registerClass(lh);var fv=class extends Ve{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];sr(this.poolSize,"poolSize"),sr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),fn(this.padding),this.inputSpec=[new Mt({ndim:5})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Mn(t,this.poolSize[0],this.padding,this.strides[0]),n=Mn(n,this.poolSize[1],this.padding,this.strides[1]),o=Mn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ge(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ph=class extends fv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),EF(e,t,n,o,s,"max")}};ph.className="MaxPooling3D";te.registerClass(ph);var ch=class extends fv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),fn(o),EF(e,t,n,o,s,"avg")}};ch.className="AveragePooling3D";te.registerClass(ch);var dv=class extends Ve{constructor(e){super(e);this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pe}},mh=class extends dv{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Ge(e);return Lt(n,1)})}};mh.className="GlobalAveragePooling1D";te.registerClass(mh);var fh=class extends dv{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Ge(e);return Zr(n,1)})}};fh.className="GlobalMaxPooling1D";te.registerClass(fh);var hv=class extends Ve{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},dh=class extends hv{call(e,t){return W(()=>{let n=Ge(e);return this.dataFormat==="channelsLast"?Lt(n,[1,2]):Lt(n,[2,3])})}};dh.className="GlobalAveragePooling2D";te.registerClass(dh);var hh=class extends hv{call(e,t){return W(()=>{let n=Ge(e);return this.dataFormat==="channelsLast"?Zr(n,[1,2]):Zr(n,[2,3])})}};hh.className="GlobalMaxPooling2D";te.registerClass(hh);var gv=class extends Ve{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=gn(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},gh=class extends gv{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=tt(e),e.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=tt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return W(()=>(e=Ge(e),uv((a,i)=>[Ge(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};gh.className="TimeDistributed";te.registerClass(gh);function FQ(r){ai(UP,"BidirectionalMergeMode",r)}var MQ="concat",bh=class extends gv{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=gn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=gn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?MQ:e.mergeMode,FQ(this.mergeMode),e.weights)throw new Pe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Nr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=iv(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let p=n.map(c=>new Mt({shape:c.shape}));this.forwardLayer.stateSpec=p.slice(0,l/2),this.backwardLayer.stateSpec=p.slice(l/2),i.push(...p)}if(o!=null)throw new Pe("Support for constants in Bidirectional layers is not implemented yet.");let u=a[0]instanceof hn;for(let l of a)if(l instanceof hn!==u)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let l=[e].concat(a),p=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=p;let m=super.apply(l,t);return this.inputSpec=c,m}else return super.apply(e,t)}call(e,t){return W(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let u=n.slice(0,n.length/2),l=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=xr(s,1));let i;return this.mergeMode==="concat"?i=Hc([o,s]):this.mergeMode==="sum"?i=X(o,s):this.mergeMode==="ave"?i=R(.5,X(o,s)):this.mergeMode==="mul"?i=R(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){wa(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),wa(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=gn(t.layer);if(delete t.layer,t.numConstants!=null)throw new Pe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};bh.className="Bidirectional";te.registerClass(bh);function EQ(r){return new ii(r)}function RQ(r){return new kd(r)}function LQ(r){return new yd(r)}function $Q(r){return new xd(r)}function BQ(r){return new Td(r)}function OQ(r){return new Cd(r)}function zQ(r){return new Id(r)}function GQ(r){return new Ad(r)}function WQ(r){return new pm(r)}function UQ(r){return new wd(r)}function KQ(r){return new cm(r)}function VQ(r){return new Sd(r)}function jQ(r){return new _d(r)}function HQ(r){return new Nd(r)}function qQ(r){return new Dd(r)}function XQ(r){return new Pd(r)}function YQ(r){return new Od(r)}function QQ(r){return new $d(r)}function ZQ(r){return new gm(r)}function JQ(r){return new Ld(r)}function eZ(r){return new Bd(r)}function tZ(r){return new zd(r)}function rZ(r){return new Gd(r)}function nZ(r){return new Wd(r)}function oZ(r){return new Kd(r)}function sZ(r){return new Vd(r)}function aZ(r){return new Hd(r)}function iZ(r){return new Yd(r)}function uZ(r){return new qd(r)}function lZ(r){return new Xd(r)}function pZ(r){return new jd(r)}function cZ(r){return new Zd(r)}function mZ(r){return new nh(r)}function fZ(r){return new oh(r)}function dZ(r){return new sh(r)}function bv(r){return new ih(r)}function hZ(r){return bv(r)}function gZ(r){return bv(r)}function yv(r){return new lh(r)}function bZ(r){return yv(r)}function yZ(r){return yv(r)}function xv(r){return new ch(r)}function xZ(r){return xv(r)}function TZ(r){return xv(r)}function kZ(r){return new mh(r)}function IZ(r){return new dh(r)}function RF(r){return new fh(r)}function LF(r){return new hh(r)}function $F(r){return new ah(r)}function BF(r){return new uh(r)}function CZ(r){return new ph(r)}function vZ(r){return new Md(r)}function wZ(r){return new fm(r)}function SZ(r){return new Ed(r)}function _Z(r){return new nl(r)}function AZ(r){return new Fd(r)}function NZ(r){return new mm(r)}function DZ(r){return new Rd(r)}function PZ(r){return new hm(r)}function FZ(r){return new Bs(r)}function MZ(r){return new dm(r)}function EZ(r){return new bh(r)}function RZ(r){return new gh(r)}var LZ=RF,$Z=LF,BZ=$F,OZ=BF;function zZ(r){return new Jd(r)}function GZ(r){return new eh(r)}function WZ(r){return new th(r)}function UZ(r){return new Ud(r)}var zF={};Ye(zF,{MAPE:()=>eJ,MSE:()=>nJ,binaryAccuracy:()=>KZ,binaryCrossentropy:()=>VZ,categoricalAccuracy:()=>HZ,categoricalCrossentropy:()=>qZ,cosineProximity:()=>QZ,mape:()=>tJ,meanAbsoluteError:()=>ZZ,meanAbsolutePercentageError:()=>JZ,meanSquaredError:()=>rJ,mse:()=>oJ,precision:()=>XZ,recall:()=>YZ,sparseCategoricalAccuracy:()=>jZ});function KZ(r,e){return md(r,e)}function VZ(r,e){return ry(r,e)}function jZ(r,e){return ny(r,e)}function HZ(r,e){return fd(r,e)}function qZ(r,e){return dd(r,e)}function XZ(r,e){return PC(r,e)}function YZ(r,e){return lF(r,e)}function QZ(r,e){return pd(r,e)}function ZZ(r,e){return om(r,e)}function JZ(r,e){return Ju(r,e)}function eJ(r,e){return Ju(r,e)}function tJ(r,e){return Ju(r,e)}function rJ(r,e){return li(r,e)}function nJ(r,e){return li(r,e)}function oJ(r,e){return li(r,e)}var GF={};Ye(GF,{modelFromJSON:()=>_F});var WF={};Ye(WF,{l1:()=>aJ,l1l2:()=>sJ,l2:()=>iJ});function sJ(r){return new hp(r)}function aJ(r){return NF(r)}function iJ(r){return DF(r)}var Tv=class extends Zu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Qo))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function dy(r,e){return r<e}function UF(r,e){return r>e}var kv=class extends Tv{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Pe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=dy:this.mode==="max"?this.monitorFunc=UF:this.monitor.indexOf("acc")!==-1?this.monitorFunc=UF:this.monitorFunc=dy,this.monitorFunc===dy&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===dy?1/0:-1/0}async onEpochEnd(e,t){await ui(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function uJ(r){return new kv(r)}var lJ={earlyStopping:uJ};var Os;(function(B){B[B.DT_INVALID=0]="DT_INVALID",B[B.DT_FLOAT=1]="DT_FLOAT",B[B.DT_DOUBLE=2]="DT_DOUBLE",B[B.DT_INT32=3]="DT_INT32",B[B.DT_UINT8=4]="DT_UINT8",B[B.DT_INT16=5]="DT_INT16",B[B.DT_INT8=6]="DT_INT8",B[B.DT_STRING=7]="DT_STRING",B[B.DT_COMPLEX64=8]="DT_COMPLEX64",B[B.DT_INT64=9]="DT_INT64",B[B.DT_BOOL=10]="DT_BOOL",B[B.DT_QINT8=11]="DT_QINT8",B[B.DT_QUINT8=12]="DT_QUINT8",B[B.DT_QINT32=13]="DT_QINT32",B[B.DT_BFLOAT16=14]="DT_BFLOAT16",B[B.DT_FLOAT_REF=101]="DT_FLOAT_REF",B[B.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",B[B.DT_INT32_REF=103]="DT_INT32_REF",B[B.DT_UINT8_REF=104]="DT_UINT8_REF",B[B.DT_INT16_REF=105]="DT_INT16_REF",B[B.DT_INT8_REF=106]="DT_INT8_REF",B[B.DT_STRING_REF=107]="DT_STRING_REF",B[B.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",B[B.DT_INT64_REF=109]="DT_INT64_REF",B[B.DT_BOOL_REF=110]="DT_BOOL_REF",B[B.DT_QINT8_REF=111]="DT_QINT8_REF",B[B.DT_QUINT8_REF=112]="DT_QUINT8_REF",B[B.DT_QINT32_REF=113]="DT_QINT32_REF",B[B.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Os||(Os={}));var KF;(function(e){let r;(function(s){s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"})(r=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(KF||(KF={}));var Iv={};function pJ(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};Iv[r]=t}function hy(r){return Iv[r]}function cJ(r){delete Iv[r]}function w(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return Cr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(i,u).map(m=>Cr(m,t,n,o));let l=Cr(e.inputNames.slice(i)[0],t,n,o),p=l.dataSync();return s.type==="number"?p[0]:b.toNestedArray(l.shape,p)}let a=e.attrParams[r];return a&&a.value}function Cr(r,e,t,n){let[o,s]=yn(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[gy(o,i)]);return a!==void 0?e[gy(o,a)][s]:void 0}function VF(r,e,t){return e[gy(r,t.currentContextId)]}function Fa(r,e){let[t,n,o]=yn(r);return[gy(t,e&&e.currentContextId),n,o]}function gy(r,e){return e?`${r}-${e}`:r}function yn(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],n=e.length===3?e[1]:void 0,o=Number(e[e.length-1]);return[t,o,n]}function yh(r,e,t){let n=w("pad",r,e,t);if(n==="explicit"){n=w("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Ma(r){return r.kept?r:_n(r)}var Cv={};Ye(Cv,{json:()=>mJ});var mJ=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var vv={};Ye(vv,{json:()=>fJ});var fJ=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var wv={};Ye(wv,{json:()=>dJ});var dJ=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var Sv={};Ye(Sv,{json:()=>hJ});var hJ=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var _v={};Ye(_v,{json:()=>gJ});var gJ=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var Av={};Ye(Av,{json:()=>bJ});var bJ=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Nv={};Ye(Nv,{json:()=>yJ});var yJ=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var Dv={};Ye(Dv,{json:()=>xJ});var xJ=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var Pv={};Ye(Pv,{json:()=>TJ});var TJ=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var Fv={};Ye(Fv,{json:()=>kJ});var kJ=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var Mv={};Ye(Mv,{json:()=>IJ});var IJ=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Ev={};Ye(Ev,{json:()=>CJ});var CJ=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var Rv={};Ye(Rv,{json:()=>vJ});var vJ=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var Lv={};Ye(Lv,{json:()=>wJ});var wJ=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var $v={};Ye($v,{json:()=>SJ});var SJ=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var Bv={};Ye(Bv,{json:()=>_J});var _J=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var Ov={};Ye(Ov,{json:()=>AJ});var AJ=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var zv={};Ye(zv,{json:()=>NJ});var NJ=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var Gv={};Ye(Gv,{json:()=>DJ});var DJ=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var by=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[Cv,vv,wv,Sv,_v,Av,Nv,Dv,Pv,Fv,Mv,Ev,Rv,Lv,$v,Bv,Ov,zv,Gv],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),u=[],l=[],p={},c={};t!=null&&(p=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let m=Object.keys(i);m.forEach(h=>{let g=i[h];g.inputNames.forEach((y,T)=>{let[x,,k]=Fa(y),v=i[x];if(v.outputs!=null){let N=v.outputs.indexOf(k);if(N!==-1){let A=`${x}:${N}`;g.inputNames[T]=A}}g.inputs.push(v),v.children.push(g)})}),Object.keys(c).length===0?m.forEach(h=>{let g=i[h];g.children.length===0&&l.push(g)}):Object.keys(c).forEach(h=>{let[g]=Fa(h),y=i[g];y!=null&&(y.signatureKey=c[h],l.push(y))}),Object.keys(p).length>0?Object.keys(p).forEach(h=>{let[g]=Fa(h),y=i[g];y&&(y.signatureKey=p[h],u.push(y))}):u=o;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let d={nodes:i,inputs:u,outputs:l,weights:s,placeholders:o,signature:t,functions:f};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=hy(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=yy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=yy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=wy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=wy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=Ty(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=Ty(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=vy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=vy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=xy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=xy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=_y(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=_y(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=Cy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Cy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=Sy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Sy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=ky(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ky(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=Iy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Iy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=HF(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=HF(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((c,m)=>(c[m.name]=this.mapNode(m),m.op==="Const"&&o.push(c[m.name]),c),{}));let a=[],i=[];e.signature.inputArg.forEach(c=>{let[m]=Fa(c.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Wv(c.type),type:"dtype"}},children:[]};f.signatureKey=c.name,a.push(f),s[m]=f}),Object.keys(s).forEach(c=>{let m=s[c];m.inputNames.forEach((f,d)=>{let[h,,g]=Fa(f),y=s[h];if(y.outputs!=null){let T=y.outputs.indexOf(g);if(T!==-1){let x=`${h}:${T}`;m.inputNames[d]=x}}m.inputs.push(y),y.children.push(m)})});let l=e.ret;e.signature.outputArg.forEach(c=>{let[m,f]=Fa(l[c.name]),d=s[m];d!=null&&(d.defaultOutput=f,i.push(d))});let p=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:p}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function PJ(r){let e=G().global;if(typeof e.atob!="undefined")return e.atob(r);if(typeof Buffer!="undefined")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function jF(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):PJ(r);return e?t:t.toLowerCase()}function yy(r,e,t,n=!1){let o=r[e];return o!=null?jF(o.s,n):t}function xy(r,e,t){let n=r[e];return n?n.b:t}function Ty(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function Wv(r){switch(typeof r=="string"&&(r=Os[r]),r){case Os.DT_FLOAT:return"float32";case Os.DT_INT32:case Os.DT_INT64:case Os.DT_INT8:case Os.DT_UINT8:return"int32";case Os.DT_BOOL:return"bool";case Os.DT_DOUBLE:return"float32";case Os.DT_STRING:return"string";default:return null}}function HF(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function ky(r,e,t){let n=r[e];return n&&n.type?Wv(n.type):t}function Iy(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>Wv(o)):t}function qF(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Cy(r,e,t){let n=r[e];return n&&n.shape?qF(n.shape):t}function vy(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function wy(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>jF(s,n)):t}function Sy(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>qF(o)):t}function _y(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var Uv=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=[];this.attrs={};this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return Cr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Cr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Ty(this.node.rawAttrs,e,t);if(n.s!=null)return yy(this.node.rawAttrs,e,t);if(n.b!=null)return xy(this.node.rawAttrs,e,t);if(n.shape!=null)return Cy(this.node.rawAttrs,e,t);if(n.type!=null)return ky(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return vy(this.node.rawAttrs,e,t);if(n.list.s!=null)return wy(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Sy(this.node.rawAttrs,e,t);if(n.list.b!=null)return _y(this.node.rawAttrs,e,t);if(n.list.type!=null)return Iy(this.node.rawAttrs,e,t)}return t}};var XF=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[X(w("a",r,e,t),w("b",r,e,t))];case"AddN":return[uI(w("tensors",r,e,t))];case"FloorMod":case"Mod":return[KI(w("a",r,e,t),w("b",r,e,t))];case"Mul":return[R(w("a",r,e,t),w("b",r,e,t))];case"RealDiv":case"Div":return[pe(w("a",r,e,t),w("b",r,e,t))];case"DivNoNan":return[PI(w("a",r,e,t),w("b",r,e,t))];case"FloorDiv":return[yf(w("a",r,e,t),w("b",r,e,t))];case"Sub":return[ue(w("a",r,e,t),w("b",r,e,t))];case"Minimum":return[nu(w("a",r,e,t),w("b",r,e,t))];case"Maximum":return[qn(w("a",r,e,t),w("b",r,e,t))];case"Pow":return[Dn(w("a",r,e,t),w("b",r,e,t))];case"SquaredDifference":return[Uf(w("a",r,e,t),w("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var YF=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[zt(w("x",r,e,t))];case"Acos":return[aI(w("x",r,e,t))];case"Acosh":return[iI(w("x",r,e,t))];case"Asin":return[pI(w("x",r,e,t))];case"Asinh":return[cI(w("x",r,e,t))];case"Atan":return[mI(w("x",r,e,t))];case"Atan2":return[fI(w("x",r,e,t),w("y",r,e,t))];case"Atanh":return[dI(w("x",r,e,t))];case"Ceil":return[II(w("x",r,e,t))];case"Complex":return[jn(w("real",r,e,t),w("imag",r,e,t))];case"Cos":return[Bl(w("x",r,e,t))];case"Cosh":return[wf(w("x",r,e,t))];case"Elu":return[tu(w("x",r,e,t))];case"Erf":return[MI(w("x",r,e,t))];case"Exp":return[cr(w("x",r,e,t))];case"Expm1":return[EI(w("x",r,e,t))];case"Floor":return[ru(w("x",r,e,t))];case"Log":return[$r(w("x",r,e,t))];case"Log1p":return[Gl(w("x",r,e,t))];case"Imag":return[Ol(w("x",r,e,t))];case"Neg":return[et(w("x",r,e,t))];case"Reciprocal":return[eC(w("x",r,e,t))];case"Real":return[Hu(w("x",r,e,t))];case"Relu":return[Hr(w("x",r,e,t))];case"Round":return[Rf(w("x",r,e,t))];case"Selu":return[$f(w("x",r,e,t))];case"Sigmoid":return[ln(w("x",r,e,t))];case"Sin":return[Bf(w("x",r,e,t))];case"Sign":return[nC(w("x",r,e,t))];case"Sinh":return[Of(w("x",r,e,t))];case"Softplus":return[ti(w("x",r,e,t))];case"Sqrt":return[$t(w("x",r,e,t))];case"Square":return[Xe(w("x",r,e,t))];case"Tanh":return[Ji(w("x",r,e,t))];case"Tan":return[sC(w("x",r,e,t))];case"ClipByValue":return[Lr(w("x",r,e,t),w("clipValueMin",r,e,t),w("clipValueMax",r,e,t))];case"Relu6":return[Ef(w("x",r,e,t))];case"Rsqrt":return[Lf(Cr(r.inputNames[0],e,t))];case"Prod":return[Ff(w("x",r,e,t),w("axes",r,e,t))];case"LeakyRelu":return[zl(w("x",r,e,t),w("alpha",r,e,t))];case"Prelu":return[Vl(w("x",r,e,t),w("alpha",r,e,t))];case"IsNan":return[RI(Cr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Yn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){b.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];b.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function QF(r){return!(typeof r=="number"||r.some(e=>e<0))}function bm(r,e,t){let n=Ay(r,t),o=!QF(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=Ay(s.shape,n)}),!QF(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Ay(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var Kv=class{constructor(e,t,n,o,s,a,i){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=ce(0),Vt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Yn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Vt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Er([],[0].concat(this.elementShape));let n=this.readMany(e);return Yn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),fr(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Er([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Yn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),lt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Br(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(u=>(n+=u,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];W(()=>{t=L(t,[1,n,s]);for(let u=0;u<e.length;++u){let l=u===0?0:o[u-1],p=[0,l,0],c=[1,e[u],s];a[u]=L(Ue(t,p,c),this.elementShape)}return a});let i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,a)}};var bp=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Yn(t,s.shape,"TensorList shape mismatch: "),Vt(s)}),this.idTensor=ce(0),this.maxNumElements=o,Vt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new bp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Yn(e,this.elementShape,"TensorList shape mismatch: ");let o=bm(this.elementShape,this.tensors,e);return W(()=>{let s=this.tensors.map(a=>L(a,o));return fr(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=bm(this.elementShape,this.tensors,e),o=this.tensors.pop();return Yn(o.shape,e,"TensorList shape mismatch: "),L(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Yn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Vt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Yn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=bm(this.elementShape,this.tensors,t);return L(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Yn(this.elementShape,t.shape,"TensorList shape mismatch: "),Vt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Yn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=bm(this.elementShape,this.tensors,n);return e.length===0?Er([],[0].concat(o)):W(()=>{let s=e.map(a=>L(this.tensors[a],o));return fr(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Yn(this.elementShape,t,"TensorList shape mismatch: ");let n=bm(this.elementShape,this.tensors,t);return this.size()===0?Er([],[0].concat(n)):W(()=>{let o=this.tensors.map(s=>L(s,n));return lt(o,0)})}};function ZF(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Yn(o,e,"TensorList shape mismatch: ");let s=Br(r);return new bp(s,e,n)}function JF(r,e,t){return new bp([],r,e,t)}function eM(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new bp([],t,r.dtype,n),a=Br(r,0);return e.forEach((i,u)=>{s.setItem(i,a[u])}),s}function tM(r,e,t){let n=0,o=e.map(p=>(n+=p,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=Ay(s,t),i=n===0?0:r.size/n,u=W(()=>{let p=[];r=L(r,[1,n,i]);for(let c=0;c<e.length;++c){let m=c===0?0:o[c-1],f=[0,m,0],d=[1,e[c],i];p[c]=L(Ue(r,f,d),a)}return r.dispose(),p}),l=new bp([],t,r.dtype,e.length);for(let p=0;p<u.length;p++)l.setItem(p,u[p]);return l}var rM=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=w("thenBranch",r,e,t),o=w("elseBranch",r,e,t),s=w("cond",r,e,t),a=w("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=w("body",r,e,t),o=w("cond",r,e,t),s=w("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(p=>p.id),u=await a[0].data();a.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&p.dispose()});let l=s;for(;u[0];){let p=l;l=await t.functionMap[n].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);let c=l.map(f=>f.id);p.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&c.indexOf(f.id)===-1&&f.dispose()});let m=await t.functionMap[o].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);u=await m[0].data(),m.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&c.indexOf(f.id)===-1&&f.dispose()})}return l}case"LoopCond":{let n=w("pred",r,e,t);return[Ma(n)]}case"Switch":{let n=w("pred",r,e,t),o=w("data",r,e,t);return o.kept||(o=Ma(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>Cr(o,e,t)!==void 0);if(n){let o=Cr(n,e,t);return[Ma(o)]}return}case"Enter":{let n=w("frameName",r,e,t),o=w("tensor",r,e,t);return t.enterFrame(n),[Ma(o)]}case"Exit":{let n=w("tensor",r,e,t);return t.exitFrame(),[Ma(n)]}case"NextIteration":{let n=w("tensor",r,e,t);return t.nextIteration(),[Ma(n)]}case"TensorArrayV3":{let n=w("size",r,e,t),o=w("dtype",r,e,t),s=w("elementShape",r,e,t),a=w("dynamicSize",r,e,t),i=w("clearAfterRead",r,e,t),u=w("identicalElementShapes",r,e,t),l=w("name",r,e,t),p=new Kv(l,o,n,s,u,a,i);return t.addTensorArray(p),[p.idTensor,ce(1)]}case"TensorArrayWriteV3":{let n=w("tensorArrayId",r,e,t),o=w("index",r,e,t),s=w("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=w("tensorArrayId",r,e,t),o=w("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=w("tensorArrayId",r,e,t),o=w("indices",r,e,t),s=w("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=w("tensorArrayId",r,e,t),o=w("indices",r,e,t),s=w("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=w("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=w("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=w("tensorArrayId",r,e,t),o=w("tensor",r,e,t),s=w("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=w("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ce(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=w("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=w("tensorListId",r,e,t),o=w("index",r,e,t),s=w("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=w("tensorListId",r,e,t),o=w("index",r,e,t),s=w("elementShape",r,e,t),a=w("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=w("indices",r,e,t),o=w("tensor",r,e,t),s=w("elementShape",r,e,t),a=w("numElements",r,e,t),i=eM(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=w("elementShape",r,e,t),o=w("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=w(s,r,e,t),i=JF(n,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{let n=w("tensorListId",r,e,t),o=w("indices",r,e,t),s=w("elementShape",r,e,t),a=w("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=w("tensorListId",r,e,t),o=w("elementShape",r,e,t),s=w("elementDType",r,e,t),a=w("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=w("tensor",r,e,t),o=w("elementShape",r,e,t),s=w("elementDType",r,e,t),a=ZF(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":{let n=w("tensorListId",r,e,t),o=t.getTensorList(n.id),s=w("dtype",r,e,t),a=w("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=w("tensorListId",r,e,t),o=w("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=w("tensorListId",r,e,t),o=w("elementShape",r,e,t),s=w("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=w("tensor",r,e,t),o=w("elementShape",r,e,t),s=w("lengths",r,e,t),a=tM(n,s,o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function nM(r,e,t){let[n,o]=w("fusedOps",r,e,t),s=n==="biasadd",a=!s,i=o==="prelu",u=n==="fusedbatchnorm",l=w("numArgs",r,e,t);if(s){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=w("strides",r,e,t),c=yh(r,e,t),m=w("dataFormat",r,e,t).toUpperCase(),f=w("dilations",r,e,t),[d,h]=w("args",r,e,t);a&&(h=d,d=void 0);let g=w("leakyreluAlpha",r,e,t);return{stride:p,pad:c,dataFormat:m,dilations:f,biasArg:d,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var oM=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=w("stride",r,e,t),o=w("pad",r,e,t),s=w("dataFormat",r,e,t).toUpperCase(),a=w("dilation",r,e,t);return[If(w("x",r,e,t),w("filter",r,e,t),n,o,s,a)]}case"Conv2D":{let n=w("strides",r,e,t),o=yh(r,e,t),s=w("dataFormat",r,e,t).toUpperCase(),a=w("dilations",r,e,t);return[Hn(w("x",r,e,t),w("filter",r,e,t),[n[1],n[2]],o,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:p}=nM(r,e,t);return[Ds.conv2d({x:w("x",r,e,t),filter:w("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:p}=nM(r,e,t);return[Ds.depthwiseConv2d({x:w("x",r,e,t),filter:w("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=w("outputShape",r,e,t),o=w("strides",r,e,t),s=yh(r,e,t);return[Cf(w("x",r,e,t),w("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=w("strides",r,e,t),o=yh(r,e,t),s=w("dilations",r,e,t),a=w("dataFormat",r,e,t).toUpperCase();return[eu(w("input",r,e,t),w("filter",r,e,t),[n[1],n[2]],o,a,[s[1],s[2]])]}case"Conv3D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("dataFormat",r,e,t).toUpperCase(),a=w("dilations",r,e,t);return[vf(w("x",r,e,t),w("filter",r,e,t),[n[1],n[2],n[3]],o,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Rl(w("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Ul(w("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t),a=w("includeBatchInIndex",r,e,t),{result:i,indexes:u}=WI(w("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,a);return[i,u]}case"AvgPool3D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Tf(w("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Pf(w("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("dilations",r,e,t),a=n[1],i=n[2],u=s[1],l=s[2];return[DI(w("x",r,e,t),w("filter",r,e,t),[a,i],o,[u,l],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var sM=(r,e,t)=>{switch(r.op){case"Fill":{let n=w("shape",r,e,t),o=w("dtype",r,e,t),s=w("value",r,e,t);return[Ca(n,s,o)]}case"LinSpace":{let n=w("start",r,e,t),o=w("stop",r,e,t),s=w("num",r,e,t);return[LI(n,o,s)]}case"Multinomial":{let n=w("logits",r,e,t),o=w("numSamples",r,e,t),s=w("seed",r,e,t);return[VI(n,o,s)]}case"OneHot":{let n=w("indices",r,e,t),o=w("depth",r,e,t),s=w("onValue",r,e,t),a=w("offValue",r,e,t);return[Yi(n,o,s,a)]}case"Ones":return[mr(w("shape",r,e,t),w("dtype",r,e,t))];case"OnesLike":return[Ar(w("x",r,e,t))];case"RandomUniform":return[va(w("shape",r,e,t),w("minval",r,e,t),w("maxval",r,e,t),w("dtype",r,e,t))];case"Range":{let n=w("start",r,e,t),o=w("stop",r,e,t),s=w("step",r,e,t);return[ou(n,o,s,w("dtype",r,e,t))]}case"TruncatedNormal":{let n=w("shape",r,e,t),o=w("mean",r,e,t),s=w("stdDev",r,e,t),a=w("seed",r,e,t);return[Yl(n,o,s,w("dtype",r,e,t),a)]}case"Zeros":return[Tt(w("shape",r,e,t),w("dtype",r,e,t))];case"ZerosLike":return[De(w("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Vv(r,e,t){let n=w("boxes",r,e,t),o=w("scores",r,e,t),s=w("maxOutputSize",r,e,t),a=w("iouThreshold",r,e,t),i=w("scoreThreshold",r,e,t),u=w("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}var aM=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}=Vv(r,e,t),l=await Pn.nonMaxSuppressionWithScoreAsync(n,o,s,a,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=Vv(r,e,t),u=w("padToMaxOutputSize",r,e,t),l=await Pn.nonMaxSuppressionPaddedAsync(n,o,s,a,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=Vv(r,e,t);return[await Pn.nonMaxSuppressionAsync(n,o,s,a,i)]}case"Where":{let n=Z(w("condition",r,e,t),"bool"),o=[await Kf(n)];return n.dispose(),o}case"ListDiff":return rC(w("x",r,e,t),w("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var iM=(r,e,t)=>{switch(r.op){case"TopKV2":{let n=w("x",r,e,t),o=w("k",r,e,t),s=w("sorted",r,e,t),a=aC(n,o,s);return[a.values,a.indices]}case"Unique":{let n=w("x",r,e,t),o=vb(n);return[o.values,o.indices]}case"UniqueV2":{let n=w("x",r,e,t),o=w("axis",r,e,t),s=vb(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uM=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=w("default",r,e,t);return[Cr(r.name,e,t)||n];case"Placeholder":return[Cr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=w("x",r,e,t);return[Ma(l)]}case"IdentityN":return w("x",r,e,t).map(l=>Ma(l));case"Snapshot":let o=w("x",r,e,t);return[Ma(o)];case"Shape":return[Wt(w("x",r,e,t).shape,"int32")];case"ShapeN":return w("x",r,e,t).map(l=>Wt(l.shape));case"Size":return[ce(w("x",r,e,t).size,"int32")];case"Rank":return[ce(w("x",r,e,t).rank,"int32")];case"NoOp":return[ce(1)];case"Print":let s=w("x",r,e,t),a=w("data",r,e,t),i=w("message",r,e,t),u=w("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let l=0;l<a.length;l++)console.log(Array.prototype.slice.call(a[l].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var jv=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=ce(0),this.tensorMap=new Map,Vt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),W(()=>{let o=Br(t),s=n.length,a=o.length;b.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let u=n[i],l=o[i];Vt(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return W(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return fr(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var lM=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=w("keyDType",r,e,t),s=w("valueDType",r,e,t),a=new jv(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=w("tableHandle",r,e,t,n),s=w("keys",r,e,t),a=w("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=w("tableHandle",r,e,t,n),s=w("keys",r,e,t),a=w("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=w("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pM=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=w("images",r,e,t),o=w("size",r,e,t),s=w("alignCorners",r,e,t),a=w("halfPixelCenters",r,e,t);return[Pn.resizeBilinear(n,[o[0],o[1]],s,a)]}case"ResizeNearestNeighbor":{let n=w("images",r,e,t),o=w("size",r,e,t),s=w("alignCorners",r,e,t),a=w("halfPixelCenters",r,e,t);return[Pn.resizeNearestNeighbor(n,[o[0],o[1]],s,a)]}case"CropAndResize":{let n=w("image",r,e,t),o=w("boxes",r,e,t),s=w("boxInd",r,e,t),a=w("cropSize",r,e,t),i=w("method",r,e,t),u=w("extrapolationValue",r,e,t);return[Pn.cropAndResize(n,o,s,a,i,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var cM=(r,e,t)=>{switch(r.op){case"Equal":return[Kr(w("a",r,e,t),w("b",r,e,t))];case"NotEqual":return[ri(w("a",r,e,t),w("b",r,e,t))];case"Greater":return[nr(w("a",r,e,t),w("b",r,e,t))];case"GreaterEqual":return[Ho(w("a",r,e,t),w("b",r,e,t))];case"Less":return[_f(w("a",r,e,t),w("b",r,e,t))];case"LessEqual":return[qo(w("a",r,e,t),w("b",r,e,t))];case"LogicalAnd":return[jr(w("a",r,e,t),w("b",r,e,t))];case"LogicalNot":return[Wl(w("a",r,e,t))];case"LogicalOr":return[Df(w("a",r,e,t),w("b",r,e,t))];case"Select":case"SelectV2":return[Gt(w("condition",r,e,t),w("a",r,e,t),w("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var mM=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[je(w("a",r,e,t),w("b",r,e,t),w("transposeA",r,e,t),w("transposeB",r,e,t))];case"Einsum":return[FI(w("equation",r,e,t),...w("tensors",r,e,t))];case"Transpose":return[qe(w("x",r,e,t),w("perm",r,e,t))];case"_FusedMatMul":let[n,o]=w("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=w("numArgs",r,e,t),u=w("leakyreluAlpha",r,e,t);if(s){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,p]=w("args",r,e,t);return[Ds.matMul({a:w("a",r,e,t),b:w("b",r,e,t),transposeA:w("transposeA",r,e,t),transposeB:w("transposeB",r,e,t),bias:l,activation:o,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fM=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Ja(w("x",r,e,t),w("mean",r,e,t),w("variance",r,e,t),w("offset",r,e,t),w("scale",r,e,t),w("epsilon",r,e,t))];case"FusedBatchNormV3":return[Ja(w("x",r,e,t),w("mean",r,e,t),w("variance",r,e,t),w("offset",r,e,t),w("scale",r,e,t),w("epsilon",r,e,t))];case"LRN":return[$I(w("x",r,e,t),w("radius",r,e,t),w("bias",r,e,t),w("alpha",r,e,t),w("beta",r,e,t))];case"Softmax":return[Hl(w("x",r,e,t))];case"LogSoftmax":return[Af(w("x",r,e,t))];case"SparseToDense":return[_b(w("sparseIndices",r,e,t),w("outputShape",r,e,t),w("sparseValues",r,e,t),w("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dM=(r,e,t)=>{switch(r.op){case"Max":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Zr(w("x",r,e,t),a,i)]}case"Mean":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Lt(w("x",r,e,t),a,i)]}case"Min":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Oc(w("x",r,e,t),a,i)]}case"Sum":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[he(w("x",r,e,t),a,i)]}case"All":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[xf(w("x",r,e,t),a,i)]}case"Any":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Rc(w("x",r,e,t),a,i)]}case"ArgMax":{let a=w("axis",r,e,t);return[Zi(w("x",r,e,t),a)]}case"ArgMin":{let a=w("axis",r,e,t);return[lI(w("x",r,e,t),a)]}case"Prod":{let a=w("axis",r,e,t),i=w("keepDims",r,e,t);return[Ff(w("x",r,e,t),a,i)]}case"Cumsum":{let a=w("axis",r,e,t),i=w("exclusive",r,e,t),u=w("reverse",r,e,t);return[Sf(w("x",r,e,t),a,i,u)]}case"Bincount":let n=w("x",r,e,t),o=w("weights",r,e,t),s=w("size",r,e,t);return[kf(n,o,s)];case"DenseBincount":{let a=w("x",r,e,t),i=w("weights",r,e,t),u=w("size",r,e,t),l=w("binaryOutput",r,e,t);return[AI(a,i,u,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hM=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=w("n",r,e,t),o=w("axis",r,e,t),s=w("tensors",r,e,t);return s=s.slice(0,n),[lt(s,o)]}case"Gather":{let n=w("x",r,e,t),o=w("indices",r,e,t);return[ei(n,Z(o,"int32"),0)]}case"GatherV2":{let n=w("axis",r,e,t),o=w("batchDims",r,e,t),s=w("x",r,e,t),a=w("indices",r,e,t);return[ei(s,Z(a,"int32"),n,o)]}case"Reverse":{let n=w("dims",r,e,t),o=[];for(let a=0;a<n.length;a++)n[a]&&o.push(a);let s=w("x",r,e,t);return[xr(s,o)]}case"ReverseV2":{let n=w("axis",r,e,t),o=w("x",r,e,t);return[xr(o,n)]}case"Slice":{let n=w("begin",r,e,t),o=w("size",r,e,t);return[Ue(w("x",r,e,t),n,o)]}case"StridedSlice":{let n=w("begin",r,e,t),o=w("end",r,e,t),s=w("strides",r,e,t),a=w("beginMask",r,e,t),i=w("endMask",r,e,t),u=w("ellipsisMask",r,e,t),l=w("newAxisMask",r,e,t),p=w("shrinkAxisMask",r,e,t),c=w("x",r,e,t);return[oC(c,n,o,s,a,i,u,l,p)]}case"Pack":return W(()=>{let n=w("axis",r,e,t),o=w("tensors",r,e,t),s=o[0].shape,a=cn(o[0]).shape,i=o.map(u=>{let l=b.arraysEqual(u.shape,s);if(!l&&!b.arraysEqual(cn(u).shape,a))throw new Error("the input tensors shape does not match");return l?u:L(u,s)});return[fr(i,n)]});case"Unpack":{let n=w("axis",r,e,t),o=w("tensor",r,e,t);return Br(o,n)}case"Tile":{let n=w("reps",r,e,t);return[Vr(w("x",r,e,t),n)]}case"Split":case"SplitV":{let n=w("axis",r,e,t),o=w("numOrSizeSplits",r,e,t),s=w("x",r,e,t);return Ir(s,o,n)}case"ScatterNd":{let n=w("indices",r,e,t),o=w("values",r,e,t),s=w("shape",r,e,t);return[U0(n,o,s)]}case"GatherNd":{let n=w("x",r,e,t),o=w("indices",r,e,t);return[V0(n,o)]}case"SparseToDense":{let n=w("sparseIndices",r,e,t),o=w("outputShape",r,e,t),s=w("sparseValues",r,e,t),a=w("defaultValue",r,e,t);return[_b(n,s,o,s.dtype===a.dtype?a:Z(a,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gM=(r,e,t)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:o,emptyRowIndicator:s,reverseIndexMap:a}=Vf.sparseFillEmptyRows(w("indices",r,e,t),w("values",r,e,t),w("denseShape",r,e,t),w("defaultValue",r,e,t));return[n,o,s,a]}case"SparseReshape":{let{outputIndices:n,outputShape:o}=Vf.sparseReshape(w("inputIndices",r,e,t),w("inputShape",r,e,t),w("newShape",r,e,t));return[n,o]}case"SparseSegmentMean":return[Vf.sparseSegmentMean(w("data",r,e,t),w("indices",r,e,t),w("segmentIds",r,e,t))];case"SparseSegmentSum":return[Vf.sparseSegmentSum(w("data",r,e,t),w("indices",r,e,t),w("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bM=(r,e,t)=>{switch(r.op){case"FFT":return[ql(w("x",r,e,t))];case"IFFT":return[qu(w("x",r,e,t))];case"RFFT":return[Xl(w("x",r,e,t))];case"IRFFT":return[Wf(w("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var yM=(r,e,t)=>{switch(r.op){case"StringNGrams":{let{nGrams:n,nGramsSplits:o}=Lb.stringNGrams(w("data",r,e,t),w("dataSplits",r,e,t),w("separator",r,e,t),w("nGramWidths",r,e,t),w("leftPad",r,e,t),w("rightPad",r,e,t),w("padWidth",r,e,t),w("preserveShortSequences",r,e,t));return[n,o]}case"StringSplit":{let{indices:n,values:o,shape:s}=Lb.stringSplit(w("input",r,e,t),w("delimiter",r,e,t),w("skipEmpty",r,e,t));return[n,o,s]}case"StringToHashBucketFast":return[Lb.stringToHashBucketFast(w("input",r,e,t),w("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xM=(r,e,t)=>{switch(r.op){case"Cast":return[Z(w("x",r,e,t),w("dtype",r,e,t))];case"ExpandDims":{let n=w("axis",r,e,t);return[_r(w("x",r,e,t),n)]}case"Squeeze":{let n=w("axis",r,e,t);return[cn(w("x",r,e,t),n)]}case"Reshape":return[L(w("x",r,e,t),w("shape",r,e,t))];case"MirrorPad":return[UI(w("x",r,e,t),w("padding",r,e,t),w("mode",r,e,t))];case"PadV2":case"Pad":return[Nn(w("x",r,e,t),w("padding",r,e,t),w("constantValue",r,e,t))];case"SpaceToBatchND":{let n=w("blockShape",r,e,t),o=w("paddings",r,e,t);return[Kl(w("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=w("blockShape",r,e,t),o=w("crops",r,e,t);return[Ll(w("x",r,e,t),n,o)]}case"DepthToSpace":{let n=w("blockSize",r,e,t),o=w("dataFormat",r,e,t).toUpperCase();return[NI(w("x",r,e,t),n,o)]}case"BroadcastTo":return[$l(w("x",r,e,t),w("shape",r,e,t))];case"BroadcastArgs":return[kI(w("s0",r,e,t),w("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Hv(r,e,t,n){let o=((s,a,i)=>{switch(s.category){case"arithmetic":return W(()=>XF(s,a,i));case"basic_math":return W(()=>YF(s,a,i));case"control":return rM(s,a,i);case"convolution":return W(()=>oM(s,a,i));case"creation":return W(()=>sM(s,a,i));case"dynamic":return aM(s,a,i);case"evaluation":return W(()=>iM(s,a,i));case"image":return W(()=>pM(s,a,i));case"graph":return W(()=>uM(s,a,i));case"logical":return W(()=>cM(s,a,i));case"matrices":return W(()=>mM(s,a,i));case"normalization":return W(()=>fM(s,a,i));case"reduction":return W(()=>dM(s,a,i));case"slice_join":return W(()=>hM(s,a,i));case"sparse":return W(()=>gM(s,a,i));case"spectral":return W(()=>bM(s,a,i));case"string":return W(()=>yM(s,a,i));case"transformation":return W(()=>xM(s,a,i));case"hash_table":return lM(s,a,i,n);case"custom":let u=hy(s.op);if(u&&u.customExecutor)return u.customExecutor(new Uv(s,a,i));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return b.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var Ny=class{constructor(e={},t={},n={},o={}){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function qv(r,e,t,n){let o=new Set,s=[],a=null,i=null,u=new Set,l=Object.keys(r).map(m=>yn(m)[0]),p=[];n!=null&&(p=n.map(m=>yn(m.name)[0]));let c=[...e];for(;c.length>0;){let m=c.pop();if((Xv(m)||RJ(m)||LJ(m))&&a==null&&(a=m,i=a.children.map(f=>f.name).filter(f=>o.has(f))),o.add(m.name),t[m.name]==null&&l.indexOf(m.name)===-1&&p.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{u.has(f.name)||(u.add(f.name),c.push(f))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function TM(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],a=Object.keys(o).map(p=>yn(p)[0]).map(p=>r.nodes[p]),i=r.initNodes;a.forEach(p=>{n.has(p.name)&&s.push(p)}),r.weights.forEach(p=>{n.has(p.name)&&s.push(p)}),i!=null&&i.forEach(p=>{n.has(p.name)&&s.push(p)});let u=new Set,l=[];for(;s.length>0;){let p=s.pop();u.add(p.name),e[p.name]||l.push(p),p.children.forEach(c=>{!u.has(c.name)&&n.has(c.name)&&c.inputs.every(m=>u.has(m.name))&&s.push(c)})}return l}var FJ=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],MJ=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],EJ=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Xv(r){return FJ.indexOf(r.op)>=0}function RJ(r){return MJ.indexOf(r.op)>=0}function LJ(r){return EJ.indexOf(r.op)>=0}var ym=class{constructor(e,t){this.graph=e;this.parent=t;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new ym(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=qv(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=t.map(l=>l.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return TM(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(c=>this.graph.nodes[yn(c)[0]]),s=t.map(c=>yn(c)[0]),a=s.map(c=>this.graph.nodes[c]);a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),u=this.compiledMap.get(i);u==null&&(u=this.compile(e,a),this.compiledMap.set(i,u));let l={},p={};return W(()=>{let c=new Ny(this.weightMap,l,p,this.functionExecutorMap),m={...this.weightMap};Object.keys(e).forEach(h=>{let[g,y]=yn(h),T=[];T[y]=e[h],m[g]=T});let f=this.getFrozenTensorIds(m),d={};for(let h=0;h<u.length;h++){let g=u[h];if(!m[g.name]){let y=Hv(g,m,c,this._resourceManager);if(b.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);m[g.name]=y,this.checkTensorForDisposal(g.name,g,m,c,f,s,d)}}return this.parent==null&&c.dispose(f),t.map(h=>Cr(h,m,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(u=>{u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length)}),t.inputs.forEach(u=>{if(u.category!=="control"){let l=VF(u.name,n,o);l!=null&&l.forEach(p=>{if(p&&!p.kept&&!s.has(p.id)){let c=i[p.id];c===1?(p.dispose(),delete i[p.id]):c!=null&&i[p.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let a=new Ny(this.weightMap,o,s,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),u=t.map(m=>Cr(m,i,a)),l=u.map(m=>m.id),p=Object.keys(e).map(m=>e[m].id),c=new Set([...l,...p,...this.weightIds]);return Object.keys(i).forEach(m=>{i[m].forEach(d=>{d&&!d.kept&&!d.isDisposed&&!c.has(d.id)&&d.dispose()})}),this.parent==null&&a.dispose(c),u}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(x=>this.graph.nodes[yn(x)[0]]),i=n.map(x=>yn(x)[0]),u=i.map(x=>this.graph.nodes[x]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:c,syncInputs:m}=qv(e,u,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),d={...this.weightMap};Object.keys(e).forEach(x=>{let[k,v]=yn(x),N=[];N[v]=e[x],d[k]=N});let h={},g=this.getFrozenTensorIds(d),y={};for(;f.length>0;){let x=this.processStack(a,f,t,d,y,g,i,h,l);await Promise.all(x)}c==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=u.filter(x=>!Xv(x)&&!Cr(x.name,d,t)).map(x=>x.name);if(T.length>0){let x="";throw c!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${x}`)}return d}processStack(e,t,n,o,s,a,i,u,l){let p=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let m="";if(c.node.op==="Enter"&&w("isConstant",c.node,o,n)&&([m]=Fa(c.node.name,n)),o[c.node.name]==null){let f=Hv(c.node,o,n,this._resourceManager);m||([m]=Fa(c.node.name,n));let d=n.currentContext;b.isPromise(f)?p.push(f.then(h=>(o[m]=h,n.currentContext=d,this.checkTensorForDisposal(m,c.node,o,n,a,i,u),this.processChildNodes(c.node,t,n,o,s,l),h))):(o[m]=f,this.checkTensorForDisposal(m,c.node,o,n,a,i,u),this.processChildNodes(c.node,t,n,o,s,l))}else this.processChildNodes(c.node,t,n,o,s,l)}return p}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[u]=Fa(i.name,n);s[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Cr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!Cr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=yn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((u,l)=>a[l]===-1||a[l]===u);b.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=yn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=yn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var Yv=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var $J="?tfjs-format=file",BJ="model.json",Qv=class{constructor(e,t={}){this.modelUrl=e;this.loadOptions=t;this.version="n/a";t==null&&(this.loadOptions={}),this.resourceManager=new Yv}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Ur.browserHTTPRequest(e,this.loadOptions);else{let t=Ur.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Ur.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Ur.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new ym(by.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=by.Instance.transformGraph(e.modelInitializer);this.initializer=new ym(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Ur.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Qe)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function OJ(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${BJ}${$J}`);let t=new Qv(r,e);return await t.load(),t}var zJ="0.0.0";var nE={};Ye(nE,{CSVDataset:()=>Ch,Dataset:()=>pi,FileDataSource:()=>Ah,TextLineDataset:()=>kh,URLDataSource:()=>Nh,array:()=>WM,csv:()=>QM,func:()=>ZM,generator:()=>JM,microphone:()=>tE,version_data:()=>rE,webcam:()=>eE,zip:()=>UM});var GM=kl(Mf());var SM=kl(Mf());function kM(r,e){return Dy(r,e)}function Dy(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(sl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],u=Dy(i,e,t,n);s[a]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function IM(r,e=Jv){return CM(r,e)}function CM(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(sl(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(l=>l[a]),u=CM(i,e,t);s[a]=u}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function Jv(r){return r===null?null:sl(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function Py(r,e){let t=new Map;Dy(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(b.isPromise(s)){let a=await s;t.set(o,a)}}return Dy(r,e,t)}function sl(r){let e=!1;if(G().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=Zv();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Qe)&&!(r instanceof Promise)&&!e)}function vM(r){return r==null||GJ(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Qe||b.isTypedArray(r)}function GJ(r){return r===null||typeof r!="object"&&typeof r!="function"}function wM(r){return kM(r,WJ)}function WJ(r){return r instanceof Qe?{value:r.clone(),recurse:!1}:sl(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var xh=class{constructor(e){this.capacity=e;this.begin=0;this.end=0;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var ew=class extends xh{constructor(){super(ew.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},Fy=ew;Fy.INITIAL_CAPACITY=32;function tw(r){return new NM(r)}function Th(r){return new DM(r)}function _M(r,e){return new nw(r,e)}function AM(r,e=cu.FAIL){return new OM(r,e)}var ur=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new $M(this,e)}filter(e){return new RM(this,e)}map(e){return new LM(this,e)}mapAsync(e){return new rw(this,e)}serialMapAsync(e){return new rw(this,e).serial()}flatmap(e){return new BM(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new EM(this,e,t)}columnMajorBatch(e,t=!0,n=Jv){return this.rowMajorBatch(e,t).map(s=>IM(s,n))}concatenate(e,t){return new nw(tw([this,e]),t)}take(e){return e<0||e==null?this:new MM(this,e)}skip(e){return e<0||e==null?this:new FM(this,e)}prefetch(e){return new ow(this,e)}shuffle(e,t){return new zM(this,e,t)}serial(){return new PM(this)}},NM=class extends ur{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:wM(e),done:!1}}},DM=class extends ur{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},PM=class extends ur{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},FM=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ee(e.value)}return this.upstream.next()}},MM=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},EM=class extends ur{constructor(e,t,n=!0){super();this.upstream=e;this.batchSize=t;this.enableSmallLastBatch=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},RM=class extends ur{constructor(e,t){super();this.upstream=e;this.predicate=t;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ee(e.value)}}},LM=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=_s.getTensorsInContainer(e.value),n=this.transform(e.value),o=_s.getTensorsInContainer(n);for(let s of t)_s.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},$M=class extends ur{constructor(e,t){super();this.upstream=e;this.handler=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},rw=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=_s.getTensorsInContainer(e.value),n=await this.transform(e.value),o=_s.getTensorsInContainer(n);for(let s of t)_s.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},xm=class extends ur{constructor(){super();this.outputQueue=new Fy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},BM=class extends xm{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=_s.getTensorsInContainer(e.value),n=this.transform(e.value),o=_s.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)_s.isTensorInList(s,o)||s.dispose();return!0}},nw=class extends ur{constructor(e,t){super();this.baseErrorHandler=t;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},cu;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(cu||(cu={}));var OM=class extends ur{constructor(e,t=0){super();this.iterators=e;this.mismatchMode=t;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(a){return a instanceof ur?{value:a.next().then(u=>(t++,u.done&&n++,u.value)),recurse:!1}:{value:null,recurse:!0}}let s=await Py(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},ow=class extends ur{constructor(e,t){super();this.upstream=e;this.bufferSize=t;this.buffer=new xh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},zM=class extends ow{constructor(e,t,n){super(e,t);this.upstream=e;this.windowSize=t;this.upstreamExhausted=!1;this.random=SM.alea(n||b.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var pi=class{constructor(){this.size=null}batch(e,t=!0){let n=this;b.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),En(async()=>(await n.iterator()).columnMajorBatch(e,t,UJ),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,En(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,En(async()=>(await t.iterator()).filter(o=>W(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return En(async()=>(await t.iterator()).map(n=>W(()=>e(n))),this.size)}mapAsync(e){let t=this;return En(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return En(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,En(async()=>{let o=Th(async()=>({value:await t.iterator(),done:!1}));return _M(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,En(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=GM.alea(t||b.now().toString());return En(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,En(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};pi.MAX_BUFFER_SIZE=1e4;function En(r,e=null){return new class extends pi{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function WM(r){return En(async()=>tw(r),r.length)}function UM(r){if(!sl(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return En(async()=>{let t=await Py(r,n=>{if(n instanceof pi)return{value:n.iterator(),recurse:!1};if(sl(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return AM(t,cu.SHORTEST)},e)}function UJ(r){if(r===null)return null;let e=r[0];return vM(e)?{value:KJ(r),recurse:!1}:{value:null,recurse:!0}}function KJ(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Qe?fr(r):Er(r)}var kh=class extends pi{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var My='"',Ih=Symbol("out"),KM=Symbol("field"),Ey=Symbol("quote"),sw=Symbol("quoteafterquote"),VM=Symbol("quoteinquote"),Ch=class extends pi{constructor(e,t){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new kh(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(b.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&b.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(b.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let u=t[s],l=null;if(u==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let p=Number(u);if(isNaN(p))i&&i.dtype==="bool"?l=this.getBoolean(u):l=u;else if(!i||!i.dtype)l=p;else switch(i.dtype){case"float32":l=p;break;case"int32":l=Math.floor(p);break;case"bool":l=this.getBoolean(u);break;default:l=p}}i&&i.isLabel?o[a]=l:n[a]=l}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,a=Ih;for(let i=0;i<s;i++)switch(a){case Ih:switch(e.charAt(i)){case My:o=i+1,a=Ey;break;case this.delimiter:if(o=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Ih;break;default:a=KM,o=i;break}break;case KM:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i)),a=Ih,o=i+1;break;default:}break;case Ey:switch(e.charAt(i)){case My:a=sw;break;default:}break;case sw:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i-1)),a=Ih,o=i+1;break;case My:a=Ey;break;default:a=VM;break}break;case VM:switch(e.charAt(i)){case My:a=Ey;break;default:}break;default:}if(a===sw?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var vh=class extends ur{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(G().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new vh(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(b.sizeFromShape(t));return n.set(e,n.length-e.length),Er(n,t)}};var wh=class extends ur{constructor(e,t){super();this.webcamVideoElement=e;this.webcamConfig=t;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Wt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-o)/2,i=s+n,u=o+a;this.cropBox=ni([a,s,u,i],[1,4])}else this.cropBox=ni([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(G().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new wh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&b.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=pb.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return W(()=>{let t=_r(Z(e,"float32"),0),n;n=Pn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return L(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Sh=class{};var Ry=class extends ur{split(e){return new jM(this,e)}},jM=class extends Ry{constructor(e,t){super();this.upstream=e;this.impl=new HM(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},HM=class extends xm{constructor(e,t){super();this.upstream=e;this.separator=t;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var aw=class extends ur{decodeUTF8(){return new qM(this)}},qM=class extends Ry{constructor(e){super();this.upstream=e;this.impl=new XM(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},XM=class extends xm{constructor(e){super();this.upstream=e;if(G().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Zv();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return G().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var _h=class extends aw{constructor(e,t={}){super();this.file=e;this.options=t;b.assert(e instanceof Uint8Array||(G().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=i=>{let u=s.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(u)},s.onabort=i=>n(new Error("Aborted")),s.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,o);s.readAsArrayBuffer(a)}this.offset=o}),done:!1}}};async function YM(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=VJ(r));let s=await(t||b.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new _h(a,e)}else throw new Error(s.statusText)}var VJ=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function Ly(r){return typeof r=="string"&&r.substr(0,7)==="file://"}var Ah=class extends Sh{constructor(e,t={}){super();this.input=e;this.options=t}async iterator(){if(Ly(this.input)&&G().get("IS_NODE")){let e=rs("fs");this.input=e.readFileSync(this.input.substr(7))}return new _h(this.input,this.options)}};var Nh=class extends Sh{constructor(e,t={}){super();this.url=e;this.fileOptions=t}async iterator(){return Ly(this.url)?new Ah(this.url,this.fileOptions).iterator():YM(this.url,this.fileOptions)}};function QM(r,e={}){return new Ch(new Nh(r),e)}function ZM(r){let e=Th(r);return En(async()=>e)}function JM(r){return En(async()=>{let e=await r();return Th(()=>e.next())})}async function eE(r,e){return wh.create(r,e)}async function tE(r){return vh.create(r)}var rE="0.0.0";function ne(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var jJ=Tr.whereImpl,iw=class extends ns{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new Wa(this,Vo())}nextDataId(){return iw.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,G().get("IS_NODE")&&I.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return I.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}makeOutput(e,t,n){let o=this.write(e,t,n);return Vo().makeTensorFromDataId(o,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ne([e],"where");let t=this.readSync(e.dataId);return jJ(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Dh=iw;Dh.nextDataId=0;var wm={};Ye(wm,{addImpl:()=>lw,bincountImpl:()=>Im,bincountReduceImpl:()=>$y,ceilImpl:()=>pw,concatImpl:()=>yp,equalImpl:()=>cw,expImpl:()=>fw,expm1Impl:()=>hw,floorImpl:()=>gw,gatherNdImpl:()=>By,gatherV2Impl:()=>Oy,greaterEqualImpl:()=>yw,greaterImpl:()=>bw,lessEqualImpl:()=>Tw,lessImpl:()=>xw,linSpaceImpl:()=>zy,logImpl:()=>kw,maxImpl:()=>Gy,maximumImpl:()=>Iw,minimumImpl:()=>Cw,multiplyImpl:()=>Ph,negImpl:()=>vw,notEqualImpl:()=>ww,prodImpl:()=>Sw,rangeImpl:()=>Tp,rsqrtImpl:()=>_w,sigmoidImpl:()=>AE,simpleAbsImpl:()=>uw,sliceImpl:()=>kp,sparseFillEmptyRowsImpl:()=>Wy,sparseReshapeImpl:()=>Uy,sparseSegmentReductionImpl:()=>vm,sqrtImpl:()=>PE,squaredDifferenceImpl:()=>Nw,stridedSliceImpl:()=>Ky,stringNGramsImpl:()=>Vy,stringSplitImpl:()=>jy,stringToHashBucketFastImpl:()=>Hy,subImpl:()=>Dw,tileImpl:()=>qy,topKImpl:()=>Xy,transposeImpl:()=>Cm,uniqueImpl:()=>Yy});function uw(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var HJ=r=>{let{x:e}=r.inputs,t=r.backend;ne(e,"abs");let n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=uw(o),t.makeOutput(n,e.shape,e.dtype)},oE={kernelName:ss,backendName:"cpu",kernelFunc:HJ};function nt(r){return(e,t,n,o,s)=>{let a=I.assertAndGetBroadcastShape(e,t),i=a.length,u=b.computeStrides(a),l=b.sizeFromShape(a),p=b.getTypedArrayFromDType(s,l),c=e.length,m=t.length,f=b.computeStrides(e),d=b.computeStrides(t),h=I.getBroadcastDims(e,a),g=I.getBroadcastDims(t,a);if(h.length+g.length===0)for(let y=0;y<p.length;++y)p[y]=r(n[y%n.length],o[y%o.length]);else for(let y=0;y<p.length;++y){let T=b.indexToLoc(y,i,u),x=T.slice(-c);h.forEach(A=>x[A]=0);let k=b.locToIndex(x,c,f),v=T.slice(-m);g.forEach(A=>v[A]=0);let N=b.locToIndex(v,m,d);p[y]=r(n[k],o[N])}return[p,a]}}function vr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),u=t.data.get(i.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var sE={kernelName:Du,backendName:"cpu",kernelFunc:vr};function Tm(r,e,t="float32"){if(t==="complex64"){let o=Tm(r,e,"float32"),s=Tm(r,e,"float32");return vr({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Xr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var aE={kernelName:Un,backendName:"cpu",kernelFunc:Xr};function zs(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var iE={kernelName:Bu,backendName:"cpu",kernelFunc:zs};function Gs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Xr({inputs:{x:o},backend:t});let a=Tm(t,o.shape,o.dtype),i=Gs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=vr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=zs({inputs:{input:o},backend:t}),i=Gs({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=Xr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(o.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(o.shape,"int32",i)}if(s==="bool"){let a=t.data.get(o.dataId).values,i=b.toTypedArray([0],o.dtype),[u,l]=nt((p,c)=>p!==c?1:0)(o.shape,[],a,i,"bool");return t.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var uE={kernelName:Gn,backendName:"cpu",kernelFunc:Gs};function it(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;ne([a,i],r);let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,c=a.dtype==="string"?I.fromUint8ToStringArray(l):l,m=a.dtype==="string"?I.fromUint8ToStringArray(p):p,f=n||a.dtype,[d,h]=e(a.shape,i.shape,c,m,f);return u.makeTensorInfo(h,f,d)}:({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let l=Gs({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(l.dataId),c=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,f=u.data.get(c.dataId).values,d=u.data.get(m.dataId).values,h=Gs({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),y=g.complexTensorInfos.real,T=g.complexTensorInfos.imag,x=u.data.get(y.dataId).values,k=u.data.get(T.dataId).values,[v,N,A]=t(a.shape,i.shape,f,d,x,k),F=u.makeTensorInfo(A,"float32",v),E=u.makeTensorInfo(A,"float32",N),$=vr({inputs:{real:F,imag:E},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(F),u.disposeIntermediateTensorInfo(E),$}else{let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,c=n||a.dtype,[m,f]=e(a.shape,i.shape,l,p,c);return u.makeTensorInfo(f,c,m)}}}function km(r){return(e,t,n,o,s,a)=>{let i=I.assertAndGetBroadcastShape(e,t),u=b.sizeFromShape(i),l=i.length,p=b.computeStrides(i),c=b.getTypedArrayFromDType("float32",u),m=b.getTypedArrayFromDType("float32",u),f=I.getBroadcastDims(e,i),d=I.getBroadcastDims(t,i),h=I.mergeRealAndImagArrays(n,o),g=I.mergeRealAndImagArrays(s,a),y=e.length,T=b.computeStrides(e),x=t.length,k=b.computeStrides(t);if(f.length+d.length===0)for(let v=0;v<c.length;v++){let N=v%h.length,A=v%g.length,F=r(h[N*2],h[N*2+1],g[A*2],g[A*2+1]);c[v]=F.real,m[v]=F.imag}else for(let v=0;v<c.length;v++){let N=b.indexToLoc(v,l,p),A=N.slice(-y);f.forEach(K=>A[K]=0);let F=b.locToIndex(A,y,T),E=N.slice(-x);d.forEach(K=>E[K]=0);let $=b.locToIndex(E,x,k),U=r(h[F*2],h[F*2+1],g[$*2],g[$*2+1]);c[v]=U.real,m[v]=U.imag}return[c,m,i]}}var lw=nt((r,e)=>r+e),qJ=km((r,e,t,n)=>({real:r+t,imag:e+n})),mu=it(wn,lw,qJ),lE={kernelName:wn,backendName:"cpu",kernelFunc:mu};function Im(r,e,t,n,o){let s=b.sizeFromShape(n),a=b.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let u=r[i];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?a[u]+=e[i]:a[u]+=1)}return a}function $y(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=Ce([o,t],e.dtype);for(let i=0;i<o;i++)for(let u=0;u<s;u++){let l=r.get(i,u);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(n?a.set(1,i,l):e.size>0?a.set(a.get(i,l)+e.get(i,u),i,l):a.set(a.get(i,l)+1,i,l))}return a}function xn(r){return(e,t,n)=>{let o=b.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function $e(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(ne(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=b.sizeFromShape(a.shape),p=t||a.dtype,c=b.getArrayFromDType(p,l);for(let m=0;m<l;++m)c[m]=e(u[m],o);return i.makeTensorInfo(a.shape,p,c)}}function Ws(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(ne(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=t||a.dtype,p=e(u,l,o);return i.makeTensorInfo(a.shape,l,p)}}var pw=xn(r=>Math.ceil(r)),XJ=Ws(ao,pw),pE={kernelName:ao,backendName:"cpu",kernelFunc:XJ};function yp(r,e,t,n){let o=b.getArrayFromDType(t,b.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=b.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?I.fromUint8ToStringArray(a.vals):a.vals,u=0;for(let l=0;l<a.shape[0];++l){let p=l*e[1]+s;for(let c=0;c<a.shape[1];++c)o[p+c]=i[u++]}s+=a.shape[1]})}return o}var cw=nt((r,e)=>r===e?1:0),mw=it(Zs,cw,null,"bool"),cE={kernelName:Zs,backendName:"cpu",kernelFunc:mw};var fw=xn(r=>Math.exp(r)),dw=Ws(ho,fw,"float32"),mE={kernelName:ho,backendName:"cpu",kernelFunc:dw};var hw=xn(r=>Math.expm1(r)),YJ=Ws(Js,hw),fE={kernelName:Js,backendName:"cpu",kernelFunc:YJ};var gw=xn(r=>Math.floor(r)),QJ=Ws(go,gw),dE={kernelName:go,backendName:"cpu",kernelFunc:QJ};function By(r,e,t,n,o,s,a,i,u){let l=Ce([n,s],t);for(let p=0;p<n;p++){let c=[],m=0;for(let f=0;f<o;f++){let d=r[p*o+f];m+=d*a[f],c.push(d)}if(m<0||m>=u/s)throw new Error(`Invalid indices: ${c} does not index into ${i}`);for(let f=0;f<s;f++)l.values[p*s+f]=e.get(...e.indexToLoc(m*s+f))}return l}function Oy(r,e,t){let n=Ce(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],u=a[2],l=e.locToIndex([i,u]);a[2]=e.values[l];let p=r.locToIndex(a);n.values[o]=r.values[p]}return n}var bw=nt((r,e)=>r>e?1:0),ZJ=it(ra,bw,null,"bool"),hE={kernelName:ra,backendName:"cpu",kernelFunc:ZJ};var yw=nt((r,e)=>r>=e?1:0),JJ=it(xo,yw,null,"bool"),gE={kernelName:xo,backendName:"cpu",kernelFunc:JJ};var xw=nt((r,e)=>r<e?1:0),e9=it(oa,xw,null,"bool"),bE={kernelName:oa,backendName:"cpu",kernelFunc:e9};var Tw=nt((r,e)=>r<=e?1:0),t9=it(sa,Tw,null,"bool"),yE={kernelName:sa,backendName:"cpu",kernelFunc:t9};function zy(r,e,t){let n=(e-r)/(t-1),o=b.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var kw=xn(r=>Math.log(r)),r9=Ws(To,kw),xE={kernelName:To,backendName:"cpu",kernelFunc:r9};function Gy(r,e,t,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let u=0;u<e;++u){let l=r[a+u];(Number.isNaN(l)||l>i)&&(i=l)}o[s]=i}return o}var Iw=nt((r,e)=>Math.max(r,e)),n9=it(Io,Iw),TE={kernelName:Io,backendName:"cpu",kernelFunc:n9};var Cw=nt((r,e)=>Math.min(r,e)),o9=it(So,Cw),kE={kernelName:So,backendName:"cpu",kernelFunc:o9};var Ph=nt((r,e)=>r*e),s9=km((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),xp=it(Ao,Ph,s9),IE={kernelName:Ao,backendName:"cpu",kernelFunc:xp};function vw(r,e,t){let n=b.createScalarValue(-1,t);return Ph([],e,n,r,t)}function a9(r){let{inputs:e,backend:t}=r,{x:n}=e;ne(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=vw(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var CE={kernelName:ps,backendName:"cpu",kernelFunc:a9};var ww=nt((r,e)=>r!==e?1:0),i9=it(ia,ww,null,"bool"),vE={kernelName:ia,backendName:"cpu",kernelFunc:i9};function Cm(r,e,t,n,o){let s=e.length,a=b.sizeFromShape(e),i=b.computeStrides(e),u=b.computeStrides(o),l=b.getTypedArrayFromDType(t,b.sizeFromShape(o));for(let p=0;p<a;++p){let c=b.indexToLoc(p,s,i),m=new Array(c.length);for(let d=0;d<m.length;d++)m[d]=c[n[d]];let f=b.locToIndex(m,s,u);l[f]=r[p]}return l}function lr(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;ne(o,"transpose");let a=o.shape.length,i=new Array(a);for(let c=0;c<i.length;c++)i[c]=o.shape[s[c]];let u=n.data.get(o.dataId).values,l=Cm(u,o.shape,o.dtype,s,i);return{dataId:n.write(l,i,o.dtype),shape:i,dtype:o.dtype}}var wE={kernelName:Ko,backendName:"cpu",kernelFunc:lr};function Sw(r,e,t,n){let[o,s]=I.computeOutAndReduceShapes(r,n),a=Kt(e,"int32"),i=b.makeZerosTypedArray(b.sizeFromShape(o),a),u=b.sizeFromShape(s);for(let l=0;l<i.length;++l){let p=l*u,c=1;for(let m=0;m<u;++m)c*=t[p+m];i[l]=c}return{outVals:i,outShape:o,outDtype:a}}function u9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"prod");let i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=I.getAxesPermutation(u,i),p=u,c=o,m=[];l!=null&&(c=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),m.push(c),p=I.getInnerMostAxes(p.length,i));let f=t.data.get(c.dataId).values,{outVals:d,outShape:h,outDtype:g}=Sw(c.shape,c.dtype,f,p),y=h;return a&&(y=I.expandShapeToKeepDim(h,u)),m.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.makeTensorInfo(y,g,d)}var SE={kernelName:ca,backendName:"cpu",kernelFunc:u9};function Tp(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return b.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),u=b.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+t;return u}var _w=xn(r=>1/Math.sqrt(r)),l9=Ws(Ro,_w),_E={kernelName:Ro,backendName:"cpu",kernelFunc:l9};var AE=xn(r=>1/(1+Math.exp(-r))),Aw=$e($o,r=>1/(1+Math.exp(-r))),NE={kernelName:$o,backendName:"cpu",kernelFunc:Aw};function kp(r,e,t,n,o){let s=kt.isSliceContinous(n,e,t),a=b.sizeFromShape(t),i=b.computeStrides(n);if(s){let c=kt.computeFlatOffset(e,i);return o==="string"?r.slice(c,c+a):r.subarray(c,c+a)}let u=o==="string"?I.fromUint8ToStringArray(r):r,l=Ce(n,o,u),p=Ce(t,o);for(let c=0;c<p.size;++c){let m=p.indexToLoc(c),f=m.map((d,h)=>d+e[h]);p.set(l.get(...f),...m)}return o==="string"?I.fromStringArrayToUint8(p.values):p.values}function Us(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;ne(o,"slice");let[i,u]=kt.parseSliceParams(o,s,a);kt.assertParamsValid(o,i,u);let l=t.data.get(o.dataId).values,p=kp(l,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,p)}var DE={kernelName:hs,backendName:"cpu",kernelFunc:Us};function Wy(r,e,t,n,o,s,a){let i=e[0],u=s[0],l=new Array(u),p=new Array(i),c=e[1];if(u===0){if(i!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${i}`);let g=b.getArrayFromDType(t,0),y=b.getArrayFromDType(o,0);return[g,[0,c],y,l,p]}let m=!0,f=0,d=new Array(u).fill(0);for(let g=0;g<i;++g){let y=r[g*c];if(y<0)throw new Error(`indices(${g}, 0) is invalid: ${y} < 0`);if(y>=u)throw new Error(`indices(${g}, 0) is invalid: ${y} >= ${u}`);++d[y],m=m&&y>=f,f=y}let h=!0;for(let g=0;g<u;++g){let y=d[g]===0;l[g]=y,h=h&&!y,d[g]=Math.max(d[g],1),g>0&&(d[g]+=d[g-1])}if(h&&m){let g=r,y=n;for(let T=0;T<i;++T)p[T]=T;return[g,[i,c],y,l,p]}else{let g=d[u-1],y=b.getArrayFromDType(t,g*c),T=b.getArrayFromDType(o,g),x=new Array(u).fill(0);for(let k=0;k<i;++k){let v=r[k*c],N=x[v],A=(v===0?0:d[v-1])+N;x[v]++;for(let F=0;F<c;++F)y[A*c+F]=r[k*c+F];T[A]=n[k],p[k]=A}for(let k=0;k<u;++k)if(x[k]===0){let N=k===0?0:d[k-1];y[N*c+0]=k;for(let A=1;A<c;++A)y[N*c+A]=0;T[N]=a}return[y,[g,c],T,l,p]}}function Uy(r,e,t,n,o){let s=b.sizeFromShape(n),a=e[0],i=o.length,u=[],l=1,p=-1;for(let g=0;g<i;++g){let y=o[g];if(y===-1){if(p!==-1)throw new Error(`only one output dimension may be -1, not both ${p} and ${g}`);p=g,u.push(1)}else{if(y<0)throw new Error(`size ${g} must be non-negative, not ${y}`);l*=y,u.push(y)}}if(p!==-1){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let g=Math.trunc(s/l);if(l*g!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}
          dense values, but the requested shape requires a multiple of ${l}. inputShape=${n} outputShape= ${u}`);u[p]=g}let c=b.sizeFromShape(u);if(c!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${c}. inputShape=${n} outputShape=${u}`);let m=n.length,f=[];if(m>0){f[m-1]=1;for(let g=m-2;g>=0;--g)f[g]=f[g+1]*n[g+1]}let d=[];if(i>0){d[i-1]=1;for(let g=i-2;g>=0;--g)d[g]=d[g+1]*u[g+1]}let h=b.getArrayFromDType(t,a*i);for(let g=0;g<a;++g){let y=0;for(let T=0;T<m;++T)y+=r[g*m+T]*f[T];for(let T=0;T<i;++T)h[g*i+T]=Math.trunc(y/d[T]),y%=d[T]}return[h,[a,i],u]}function vm(r,e,t,n,o,s=!1,a=0){let i=n.length;if(i!==o.length)throw new Error("segmentIds and indices should have same size.");let u=[e[0],r.length/e[0]],l=u[1],c=i>0?o[i-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");let m=e.slice();m[0]=c;let f=m.reduce((x,k)=>x*k,1),d=b.getArrayFromDType(t,f);if(i===0)return c>0&&d.fill(a),[d,m];if(c<=0)throw new Error("segment ids must be >= 0");let h=0,g=1,y=0,T=o[h];for(;;){let x=0;if(g<i){if(x=o[g],T===x){++g;continue}if(T>=x)throw new Error("segment ids are not increasing")}if(T<0||T>=c)throw new Error(`Segment id ${T} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);T>y&&d.fill(a,y*l,T*l);for(let k=h;k<g;++k){let v=n[k];if(v<0||v>=u[0])throw new Error(`Bad: indices[${k}] == ${n[k]} out of range [0, ${u[0]})`);for(let N=0;N<l;N++)d[T*l+N]+=r[v*l+N]}if(s)for(let k=0;k<l;k++)d[T*l+k]/=g-h;if(h=g,++g,y=T+1,T=x,g>i)break}return y<c&&d.fill(a,y*l,c*l),[d,m]}var PE=xn(r=>Math.sqrt(r)),p9=$e(Bo,r=>Math.sqrt(r)),FE={kernelName:Bo,backendName:"cpu",kernelFunc:p9};var Nw=nt((r,e)=>{let t=r-e;return t*t}),c9=it(Go,Nw),ME={kernelName:Go,backendName:"cpu",kernelFunc:c9};function Ky(r,e,t,n){let o=Ce(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*t[u]+n[u];o.set(e.get(...i),...a)}return o}var EE=class{constructor(e,t,n,o,s,a){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,a){for(let i=0;i<s;++i){let u=this.getPadWidth(a),l=Math.max(0,u-i),p=Math.max(0,u-(s-(i+1))),c=a-(l+p),m=t+(l>0?0:i-u),f=0;f+=l*this.leftPad.length;for(let T=0;T<c;++T)f+=e[m+T].length;f+=p*this.rightPad.length,f+=(l+p+c-1)*this.separator.length,n[o+i]=new Uint8Array(f);let h=n[o+i],g=0,y=T=>T.forEach(x=>h[g++]=x);for(let T=0;T<l;++T)y(this.leftPad),y(this.separator);for(let T=0;T<c-1;++T)y(e[m+T]),y(this.separator);if(c>0){y(e[m+c-1]);for(let T=0;T<p;++T)y(this.separator),y(this.rightPad)}else{for(let T=0;T<p-1;++T)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let p=t[l]>=u;if(p=p&&t[l]<=n,!p)throw new Error(`Invalid split value ${t[l]}, must be in [${u}, ${n}]`);u=t[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,a=b.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)a[l]=0;return[u,a]}a[0]=0;for(let u=1;u<=s;++u){let l=t[u]-t[u-1],p=0;this.nGramWidths.forEach(c=>{p+=this.getNumNGrams(l,c)}),this.preserveShort&&l>0&&p===0&&(p=1),a[u]=a[u-1]+p}let i=new Array(a[s]);for(let u=0;u<s;++u){let l=t[u],p=a[u];if(this.nGramWidths.forEach(c=>{let m=t[u+1]-t[u],f=this.getNumNGrams(m,c);this.createNGrams(e,l,i,p,f,c),p+=f}),this.preserveShort&&p===a[u]){let c=t[u+1]-t[u];if(c===0)continue;let m=c+2*this.padWidth,f=1;this.createNGrams(e,l,i,p,f,m)}}return[i,a]}};function Vy(r,e,t,n,o,s,a,i){return new EE(t,n,o,s,a,i).compute(r,e)}function m9(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!t||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!t||a.length!==0)&&n.push(a),o=s+1}}function jy(r,e,t){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let m=0;m<n;++m){let f=o.length;m9(r[m],e,t,o);let d=o.length-f;i[m]=d,s+=d,a=Math.max(a,d)}let u=b.getArrayFromDType("int32",s*2),l=new Array(s),p=[n,a],c=0;for(let m=0;m<n;++m)for(let f=0;f<i[m];++f)u[c*2]=m,u[c*2+1]=f,l[c]=o[c],++c;return[u,l,p]}function Hy(r,e){let t=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=b.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var Dw=nt((r,e)=>r-e),f9=km((r,e,t,n)=>({real:r-t,imag:e-n})),Fh=it(Wo,Dw,f9),RE={kernelName:Wo,backendName:"cpu",kernelFunc:Fh};function qy(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Ce(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let u=0;u<a.length;u++)a[u]=s[u]%r.shape[u];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var Mh=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function LE(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let i=n-t+1,u=e-t+1,l=Math.log(i),p=.5*Math.exp(2*l/3),c=.5*Math.sqrt(l*p*(i-p)/i)*Math.sign(u-i/2),m=Math.max(t,Math.floor(e-u*p/i+c)),f=Math.min(n,Math.floor(e+(i-u)*p/i+c));LE(r,e,m,f)}let o=r[e],s=t,a=n;for(b.swap(r,t,e),Mh(r[n],o)>0&&b.swap(r,t,n);s<a;){for(b.swap(r,s,a),s++,a--;Mh(r[s],o)<0;)s=s+1;for(;Mh(r[a],o)>0;)a=a-1}Mh(r[t],o)===0?b.swap(r,t,a):(a=a+1,b.swap(r,a,n)),a<=e&&(t=a+1),e<=a&&(n=a-1)}}function Xy(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],u=b.getTypedArrayFromDType(t,a*n),l=b.getTypedArrayFromDType("int32",a*n);for(let c=0;c<a;c++){let m=c*i,f=r.subarray(m,m+i),d=new Array(f.length);f.forEach((T,x)=>d[x]={value:T,index:x}),n<d.length&&(LE(d,n),d=d.slice(0,n)),o&&d.sort(Mh);let h=c*n,g=u.subarray(h,h+n),y=l.subarray(h,h+n);for(let T=0;T<n;T++)g[T]=d[T].value,y[T]=d[T].index}let p=e.slice();return p[p.length-1]=n,[Ce(p,t,u),Ce(p,"int32",l)]}function Yy(r,e,t,n){let o=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let d=0;d<o;d++)s[0]*=t[d];s[1]=t[o];for(let d=o+1;d<t.length;d++)s[2]*=t[d];let a={},i=new Int32Array(t[o]),u=new xt(s,n,r),l=[],p=s[0]===1&&s[2]===1;for(let d=0;d<t[o];d++){let h;if(p)h=r[d].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let T=0;T<s[2];T++)g.push(u.get(y,d,T));h=g.join(",")}if(a[h]!==void 0)i[d]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[d]=g,l.push(d)}}let c=s.slice();c[1]=Object.keys(a).length;let m=new xt(c,n);l.forEach((d,h)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)m.set(u.get(g,d,y),g,h,y)});let f=t.slice();return f[o]=c[1],{outputValues:m.values,outputShape:f,indices:i}}var d9="0.0.0";ju("cpu",()=>new Dh,1);var Pw=$e(fo,r=>r>=0?r:Math.exp(r)-1),$E={kernelName:fo,backendName:"cpu",kernelFunc:Pw};function Fw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;ne([o],"leakyRelu");let a=b.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,u=b.getTypedArrayFromDType("float32",a);for(let l=0;l<i.length;l++)u[l]=i[l]<0?s*i[l]:i[l];return t.makeTensorInfo(o.shape,"float32",u)}var BE={kernelName:na,backendName:"cpu",kernelFunc:Fw};var h9=nt((r,e)=>r<0?e*r:r);function Mw(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;ne([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,u]=h9(n.shape,o.shape,s,a,"float32");return t.makeTensorInfo(u,"float32",i)}var OE={kernelName:Po,backendName:"cpu",kernelFunc:Mw};var Ew=$e(Fo,r=>Math.max(0,r)),zE={kernelName:Fo,backendName:"cpu",kernelFunc:Ew};var Rw=$e(Eo,r=>Math.min(Math.max(0,r),6)),GE={kernelName:Eo,backendName:"cpu",kernelFunc:Rw};function Sm(r,e,t,n,o){if(t==="linear")return Xr({inputs:{x:e},backend:r});if(t==="relu")return Ew({inputs:{x:e},backend:r});if(t==="elu")return Pw({inputs:{x:e},backend:r});if(t==="relu6")return Rw({inputs:{x:e},backend:r});if(t==="prelu")return Mw({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return Fw({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return Aw({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function st(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=b.sizeFromShape(o.shape),i=b.inferFromImplicitShape(s,a),u=b.sizeFromShape(i);b.assert(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let l=t.data.get(o.dataId);if(l.complexTensorInfos!=null){let p=l.complexTensorInfos.real,c=l.complexTensorInfos.imag;p.shape=i,c.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var WE={kernelName:fs,backendName:"cpu",kernelFunc:st};function Lw(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;ne([o,s],"matMul");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],c=i?s.shape[l-1]:s.shape[l-2],m=a?o.shape[u-1]:o.shape[u-2],f=i?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(d),y=b.sizeFromShape(h),x=As.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);b.assert(p===c,()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let k=a?[g,p,m]:[g,m,p],v=i?[y,f,c]:[y,c,f],N=st({inputs:{x:o},backend:t,attrs:{shape:k}}),A=st({inputs:{x:s},backend:t,attrs:{shape:v}}),F=a?N.shape[1]:N.shape[2],E=a?N.shape[2]:N.shape[1],$=i?A.shape[1]:A.shape[2],U=Math.max(g,y),K=t.data.get(N.dataId).values,B=t.data.get(A.dataId).values,V=b.computeStrides(N.shape),j=b.computeStrides(A.shape),[q,J,Y]=a?[V[0],1,V[1]]:[V[0],V[1],1],[Q,oe,re]=i?[1,j[1],j[0]]:[j[1],1,j[0]],me=E*$,ae=Ce([U,E,$],N.dtype),xe=ae.values,le=t.blockSize;for(let ke=0;ke<U;ke++)for(let Ne=0;Ne<E;Ne+=le)for(let Be=0;Be<$;Be+=le)for(let Re=0;Re<F;Re+=le){let We=Math.min(Ne+le,E),rt=Math.min(Be+le,$),gt=Math.min(Re+le,F);for(let Ct=Ne;Ct<We;Ct++)for(let Bt=Be;Bt<rt;Bt++){let Dt=0;for(let Je=Re;Je<gt;Je++){let Ot=Math.min(ke,g-1)*q,qt=Math.min(ke,y-1)*re,$n=K[Ot+Ct*J+Je*Y],gr=B[Je*Q+Bt*oe+qt];Dt+=$n*gr}xe[ke*me+(Ct*$+Bt)]+=Dt}}return t.disposeIntermediateTensorInfo(N),t.disposeIntermediateTensorInfo(A),t.makeTensorInfo(x,ae.dtype,ae.values)}var UE={kernelName:so,backendName:"cpu",kernelFunc:Lw};function g9(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n,m,f,d,h=[];m=Lw({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:t}),a&&(f=mu({inputs:{a:m,b:a},backend:t}),h.push(m),m=f),p&&(d=Sm(t,m,p,i,c),h.push(m),m=d);for(let y of h)t.disposeIntermediateTensorInfo(y);return m}var KE={kernelName:ks,backendName:"cpu",kernelFunc:g9};var b9=$e(Ii,r=>Math.acos(r)),VE={kernelName:Ii,backendName:"cpu",kernelFunc:b9};var y9=$e(Ci,r=>Math.acosh(r)),jE={kernelName:Ci,backendName:"cpu",kernelFunc:y9};function x9(r){let{inputs:e,backend:t}=r,n=e;ne(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=Ce(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let u=o[i];for(let l=0;l<a.length;l++)a[l]+=u[l]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var HE={kernelName:ro,backendName:"cpu",kernelFunc:x9};function T9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"all");let i=b.parseAxisParam(s,o.shape),u=i,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("all",u,p.shape.length);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(c),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<d.length;++y){let T=y*f,x=h[T];for(let k=0;k<f;++k){let v=h[T+k];x=x&&v}d[y]=x}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(c,p.dtype,d);if(a){let y=I.expandShapeToKeepDim(c,i),T=st({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var qE={kernelName:vi,backendName:"cpu",kernelFunc:T9};function k9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"any");let i=b.parseAxisParam(s,o.shape),u=i,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("any",u,p.shape.length);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(c),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<d.length;++y){let T=y*f,x=h[T];for(let k=0;k<f;++k){let v=h[T+k];x=x||v}d[y]=x}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(c,p.dtype,d);if(a){let y=I.expandShapeToKeepDim(c,i),T=st({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var XE={kernelName:wi,backendName:"cpu",kernelFunc:k9};function I9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMax");let a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=lr({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],I.assertAxesAreInnerMostDims("argMax",a,u.shape.length);let[p,c]=I.computeOutAndReduceShapes(u.shape,a),m=b.sizeFromShape(p),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(c),h=t.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let y=g*d,T=h[y],x=0;for(let k=0;k<d;++k){let v=h[y+k];v>T&&(T=v,x=k)}f[g]=x}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",f)}var YE={kernelName:no,backendName:"cpu",kernelFunc:I9};function C9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMin");let a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=lr({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],I.assertAxesAreInnerMostDims("argMin",a,u.shape.length);let[p,c]=I.computeOutAndReduceShapes(u.shape,a),m=b.sizeFromShape(p),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(c),h=t.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let y=g*d,T=h[y],x=0;for(let k=0;k<d;++k){let v=h[y+k];v<T&&(T=v,x=k)}f[g]=x}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",f)}var QE={kernelName:Va,backendName:"cpu",kernelFunc:C9};var v9=$e(Si,r=>Math.asin(r)),ZE={kernelName:Si,backendName:"cpu",kernelFunc:v9};var w9=$e(_i,r=>Math.asinh(r)),JE={kernelName:_i,backendName:"cpu",kernelFunc:w9};var S9=$e(Ai,r=>Math.atan(r)),eR={kernelName:Ai,backendName:"cpu",kernelFunc:S9};var _9=nt((r,e)=>Math.atan2(r,e)),A9=it(Di,_9),tR={kernelName:Di,backendName:"cpu",kernelFunc:A9};var N9=$e(Ni,r=>Math.atanh(r)),rR={kernelName:Ni,backendName:"cpu",kernelFunc:N9};function _m(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,p=o.effectiveFilterHeight,c=o.effectiveFilterWidth,m=o.padInfo.top,f=o.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ce(o.outShape,t),g=h.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],T=o.outShape[2]*o.outShape[3],x=o.outShape[3];for(let k=0;k<o.batchSize;++k){let v=k*y,N=k*n[0];for(let A=0;A<o.inChannels;++A)for(let F=0;F<o.outHeight;++F){let E=F*a-m,$=Math.max(0,E),U=Math.min(o.inHeight,p+E),K=v+F*T;for(let B=0;B<o.outWidth;++B){let V=B*i-f,j=Math.max(0,V),q=Math.min(o.inWidth,c+V),J=d,Y=0,Q=0;for(let re=$;re<U;re+=u){let me=N+re*n[1];for(let ae=j;ae<q;ae+=l){let xe=me+ae*n[2],le=r[xe+A];s==="max"&&le>J?J=le:s==="avg"&&(Y+=le,Q++)}if(isNaN(J))break}let oe=K+B*x+A;g[oe]=s==="avg"?Y/Q:J}}}return h}function Qy(r,e,t,n,o=!1,s=!1){let a=Ce(n.outShape,"int32"),i=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,p=n.dilationWidth,c=n.effectiveFilterHeight,m=n.effectiveFilterWidth,f=n.padInfo.top,d=n.padInfo.left,h=Ce(e,t,r);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let T=0;T<n.outHeight;++T){let x=T*i-f,k=x;for(;k<0;)k+=l;let v=Math.min(n.inHeight,c+x);for(let N=0;N<n.outWidth;++N){let A=N*u-d,F=A;for(;F<0;)F+=p;let E=Math.min(n.inWidth,m+A),$=Number.NEGATIVE_INFINITY,U=-1;for(let K=k;K<v;K+=l){let B=K-x;for(let V=F;V<E;V+=p){let j=V-A,q=h.get(g,K,V,y);q>$&&($=q,o?U=s?((g*n.inHeight+K)*n.inWidth+V)*n.inChannels+y:(K*n.inWidth+V)*n.inChannels+y:U=B*m+j)}}a.set(U,g,T,N,y)}}return a}function Zy(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,p=o.dilationHeight,c=o.dilationWidth,m=o.effectiveFilterDepth,f=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,T=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ce(o.outShape,t),k=x.values,v=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],N=o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[3]*o.outShape[4],F=o.outShape[4];for(let E=0;E<o.batchSize;++E){let $=E*v,U=E*n[0];for(let K=0;K<o.inChannels;++K)for(let B=0;B<o.outDepth;++B){let V=B*a-h,j=V;for(;j<0;)j+=l;let q=Math.min(o.inDepth,m+V),J=$+B*N;for(let Y=0;Y<o.outHeight;++Y){let Q=Y*i-g,oe=Q;for(;oe<0;)oe+=p;let re=Math.min(o.inHeight,f+Q),me=J+Y*A;for(let ae=0;ae<o.outWidth;++ae){let xe=ae*u-y,le=xe;for(;le<0;)le+=c;let ke=Math.min(o.inWidth,d+xe),Ne=me+ae*F,Be=T,Re=0,We=0;for(let gt=j;gt<q;gt+=l){let Ct=U+gt*n[1];for(let Bt=oe;Bt<re;Bt+=p){let Dt=Ct+Bt*n[2];for(let Je=le;Je<ke;Je+=c){let Ot=Dt+Je*n[3],qt=r[Ot+K];if(s==="max"&&qt>Be?Be=qt:s==="avg"&&(Re+=qt,We++),isNaN(Be))break}if(isNaN(Be))break}if(isNaN(Be))break}let rt=Ne+K;k[rt]=s==="avg"?Re/We:Be}}}}return x}function nR(r,e){let t=Ce(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,p=e.effectiveFilterHeight,c=e.effectiveFilterWidth,m=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){let T=y*n-m,x=T;for(;x<0;)x+=a;let k=Math.min(e.inDepth,l+T);for(let v=0;v<e.outHeight;++v){let N=v*o-f,A=N;for(;A<0;)A+=i;let F=Math.min(e.inHeight,p+N);for(let E=0;E<e.outWidth;++E){let $=E*s-d,U=$;for(;U<0;)U+=u;let K=Math.min(e.inWidth,c+$),B=Number.NEGATIVE_INFINITY,V=-1;for(let j=x;j<k;j+=a){let q=j-T;for(let J=A;J<F;J+=i){let Y=J-N;for(let Q=U;Q<K;Q+=u){let oe=Q-$,re=r.get(h,j,J,Q,g);re>=B&&(B=re,V=q*p*c+Y*p+oe)}}}t.set(V,h,y,v,E,g)}}}return t}function D9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,a,l,i,u),c;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))c=Xr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=_m(m,o.shape,o.dtype,f,p,"avg");c=t.makeTensorInfo(p.outShape,o.dtype,d.values)}return c}var oR={kernelName:oo,backendName:"cpu",kernelFunc:D9};function P9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;ne(o,"avgPool3d");let p=I.computePool3DInfo(o.shape,s,a,1,i,u,l),c=t.data.get(o.dataId).values,m=Zy(c,o.shape,o.dtype,b.computeStrides(o.shape),p,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}var sR={kernelName:Nu,backendName:"cpu",kernelFunc:P9};function F9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;ne([o,s],"avgPool3DGrad");let p=I.computePool3DInfo(s.shape,a,i,1,u,l),c=p.strideDepth,m=p.strideHeight,f=p.strideWidth,d=p.filterDepth,h=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,T=p.dilationHeight,x=p.dilationWidth,k=p.effectiveFilterDepth,v=p.effectiveFilterHeight,N=p.effectiveFilterWidth,A=k-1-p.padInfo.front,F=N-1-p.padInfo.left,E=v-1-p.padInfo.top,$=Ce(s.shape,"float32"),U=1/(d*h*g),K=t.bufferSync(o);for(let B=0;B<p.batchSize;++B)for(let V=0;V<p.inChannels;++V)for(let j=0;j<p.inDepth;++j)for(let q=0;q<p.inHeight;++q)for(let J=0;J<p.inWidth;++J){let Y=j-A,Q=q-E,oe=J-F,re=0;for(let me=0;me<k;me+=y){let ae=(Y+me)/c;if(!(ae<0||ae>=p.outDepth||Math.floor(ae)!==ae))for(let xe=0;xe<v;xe+=T){let le=(Q+xe)/m;if(!(le<0||le>=p.outHeight||Math.floor(le)!==le))for(let ke=0;ke<N;ke+=x){let Ne=(oe+ke)/f;if(Ne<0||Ne>=p.outWidth||Math.floor(Ne)!==Ne)continue;re+=K.get(B,ae,le,Ne,V)}}}$.set(re*U,B,j,q,J,V)}return t.makeTensorInfo($.shape,$.dtype,$.values)}var aR={kernelName:Qp,backendName:"cpu",kernelFunc:F9};function M9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;ne([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=I.computePool2DInfo(a.shape,i,u,1,l),c=p.strideHeight,m=p.strideWidth,f=p.filterHeight,d=p.filterWidth,h=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,T=p.effectiveFilterWidth,x=T-1-p.padInfo.left,k=y-1-p.padInfo.top,v=Ce(a.shape,"float32"),N=1/(f*d),A=t.data.get(o.dataId).values,F=Ce(o.shape,"float32",A);for(let E=0;E<p.batchSize;++E)for(let $=0;$<p.inChannels;++$)for(let U=0;U<p.inHeight;++U)for(let K=0;K<p.inWidth;++K){let B=U-k,V=K-x,j=0;for(let q=0;q<y;q+=h){let J=(B+q)/c;if(!(J<0||J>=p.outHeight||Math.floor(J)!==J))for(let Y=0;Y<T;Y+=g){let Q=(V+Y)/m;if(Q<0||Q>=p.outWidth||Math.floor(Q)!==Q)continue;j+=F.get(E,J,Q,$)}}v.set(j*N,E,U,K,$)}return t.makeTensorInfo(v.shape,v.dtype,v.values)}var iR={kernelName:Yp,backendName:"cpu",kernelFunc:M9};function E9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:u}=e;b.assert(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ne([o,i,u,s,a],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values,m=t.data.get(u.dataId).values,f=s?t.data.get(s.dataId).values:new Float32Array([1]),d=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(p.length),g=d.length,y=f.length,T=m.length,x=c.length,k=0,v=0,N=0,A=0;for(let F=0;F<p.length;++F)h[F]=d[k++]+(p[F]-c[v++])*f[N++]/Math.sqrt(m[A++]+l),k>=g&&(k=0),v>=x&&(v=0),N>=y&&(N=0),A>=T&&(A=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var uR={kernelName:yo,backendName:"cpu",kernelFunc:E9};function R9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;ne([o],"batchToSpaceND");let i=s.reduce((y,T)=>y*T),u=I.getReshaped(o.shape,s,i),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,i),c=I.getSliceBeginCoords(a,s.length),m=I.getSliceSize(p,a,s.length),f=st({inputs:{x:o},backend:t,attrs:{shape:u}}),d=lr({inputs:{x:f},backend:t,attrs:{perm:l}}),h=st({inputs:{x:d},backend:t,attrs:{shape:p}}),g=Us({inputs:{x:h},backend:t,attrs:{begin:c,size:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var lR={kernelName:as,backendName:"cpu",kernelFunc:R9};function L9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Im(i,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}var pR={kernelName:Zp,backendName:"cpu",kernelFunc:L9};function $9(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var cR={kernelName:Jp,backendName:"cpu",kernelFunc:$9};var B9=$e(Wn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),mR={kernelName:Wn,backendName:"cpu",kernelFunc:B9};var O9=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,u=t.data.get(a.dataId).values;for(let l=0;l<i.length;l++){let p=i[l],c=u[l];n[l]=Math.hypot(p,c)}return t.makeOutput(n,e.shape,"float32")},fR={kernelName:Pu,backendName:"cpu",kernelFunc:O9};function ci(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var dR={kernelName:Ru,backendName:"cpu",kernelFunc:ci};function al(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=I.computeOutShape(e.map(h=>h.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>b.sizeFromShape(h.shape)>0);if(i.length===1)return Xr({inputs:{x:i[0]},backend:t});let u=i.map(h=>h.shape);if(I.assertParamsConsistent(u,s),i[0].dtype==="complex64"){let h=i.map(k=>zs({inputs:{input:k},backend:t})),g=i.map(k=>ci({inputs:{input:k},backend:t})),y=al({inputs:h,backend:t,attrs:{axis:s}}),T=al({inputs:g,backend:t,attrs:{axis:s}}),x=vr({inputs:{real:y,imag:T},backend:t});return h.forEach(k=>t.disposeIntermediateTensorInfo(k)),g.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),x}let l=i.map(h=>{let g=b.sizeFromShape(h.shape.slice(s));return st({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),p=l.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=I.computeOutShape(l.map(h=>h.shape),1);let c=l[0].shape[0]===1,m=yp(p,a,e[0].dtype,c),f=I.computeOutShape(i.map(h=>h.shape),s),d=t.makeTensorInfo(f,e[0].dtype,m);return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var hR={kernelName:is,backendName:"cpu",kernelFunc:al};function $w(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n;ne([o,s],"conv2d");let c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,c),f=m.filterHeight,d=m.filterWidth,h=m.dilationHeight,g=m.dilationWidth,y=m.padInfo.left,T=m.padInfo.top,x=m.dataFormat==="channelsLast",k=new xt(m.outShape,o.dtype),v=b.computeStrides(o.shape),N=b.computeStrides(s.shape),A=v[0],F=x?v[1]:v[2],E=x?v[2]:1,$=x?1:v[1],U=k.strides[0],K=x?k.strides[1]:k.strides[2],B=x?k.strides[2]:1,V=x?1:k.strides[1],j=t.data.get(o.dataId).values,q=t.data.get(s.dataId).values,J=k.values;for(let Y=0;Y<m.batchSize;++Y){let Q=Y*A,oe=Y*U;for(let re=0;re<m.outHeight;++re){let me=oe+re*K,ae=re*m.strideHeight-T;for(let xe=0;xe<f;++xe){let le=ae+xe*h;if(le<0||le>=m.inHeight)continue;let ke=xe*N[0],Ne=Q+le*F;for(let Be=0;Be<m.outWidth;++Be){let Re=me+Be*B,We=Be*m.strideWidth-y;for(let rt=0;rt<d;++rt){let gt=We+rt*g;if(gt<0||gt>=m.inWidth)continue;let Ct=ke+rt*N[1],Bt=Ne+gt*E,Dt=Ct;for(let Je=0;Je<m.inChannels;++Je){let Ot=j[Bt+Je*$];for(let qt=0;qt<m.outChannels;++qt)J[Re+qt*V]+=Ot*q[Dt+qt];Dt+=m.outChannels}}}}}}return t.makeTensorInfo(k.shape,k.dtype,J)}var gR={kernelName:io,backendName:"cpu",kernelFunc:$w};function z9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n;ne([o,s],"conv2dBackpropFilter");let c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,p,a,1,i,l,!1,c),{strideHeight:f,strideWidth:d,filterHeight:h,filterWidth:g}=m,y=m.dataFormat==="channelsLast",T=new xt(m.filterShape,"float32"),x=m.padInfo.left,k=m.padInfo.top,v=t.data.get(o.dataId).values,N=t.data.get(s.dataId).values,A=new xt(o.shape,o.dtype,v),F=new xt(s.shape,s.dtype,N);for(let E=0;E<h;++E){let $=Math.max(0,Math.ceil((k-E)/f)),U=Math.min(m.outHeight,(m.inHeight+k-E)/f);for(let K=0;K<g;++K){let B=Math.max(0,Math.ceil((x-K)/d)),V=Math.min(m.outWidth,(m.inWidth+x-K)/d);for(let j=0;j<m.inChannels;++j)for(let q=0;q<m.outChannels;++q){let J=0;for(let Y=0;Y<m.batchSize;++Y)for(let Q=$;Q<U;++Q){let oe=E+Q*f-k;for(let re=B;re<V;++re){let me=K+re*d-x;y?J+=A.get(Y,oe,me,j)*F.get(Y,Q,re,q):J+=A.get(Y,j,oe,me)*F.get(Y,q,Q,re)}}T.set(J,E,K,j,q)}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var bR={kernelName:ec,backendName:"cpu",kernelFunc:z9};function G9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n;ne([o,s],"conv2dBackpropInput");let c=b.computeStrides(s.shape),m=b.computeStrides(o.shape),f=I.convertConv2DDataFormat(l),d=I.computeConv2DInfo(a,s.shape,i,1,u,p,!1,f),h=new xt(d.inShape,"float32"),g=h.values,y=t.data.get(o.dataId).values,T=t.data.get(s.dataId).values,[x,k,v]=c,{batchSize:N,filterHeight:A,filterWidth:F,inChannels:E,inHeight:$,inWidth:U,outChannels:K,outHeight:B,outWidth:V,strideHeight:j,strideWidth:q}=d;f=d.dataFormat;let J=A-1-d.padInfo.top,Y=F-1-d.padInfo.left,Q=f==="channelsLast",oe=h.strides[0],re=Q?h.strides[1]:h.strides[2],me=Q?h.strides[2]:1,ae=Q?1:h.strides[1],xe=m[0],le=Q?m[1]:m[2],ke=Q?m[2]:1,Ne=Q?1:m[1];for(let Be=0;Be<N;++Be)for(let Re=0;Re<E;++Re)for(let We=0;We<$;++We){let rt=We-J,gt=Math.max(0,Math.ceil(rt/j)),Ct=Math.min(B,(A+rt)/j);for(let Bt=0;Bt<U;++Bt){let Dt=Bt-Y,Je=Math.max(0,Math.ceil(Dt/q)),Ot=Math.min(V,(F+Dt)/q),qt=0;for(let gr=gt;gr<Ct;++gr){let Jn=gr*j-rt;for(let zr=Je;zr<Ot;++zr){let Vs=zr*q-Dt,nn=xe*Be+le*gr+ke*zr,Pr=x*(A-1-Jn)+k*(F-1-Vs)+v*Re;for(let eo=0;eo<K;++eo){let br=y[nn+Ne*eo],kn=T[Pr+eo];qt+=br*kn}}}let $n=oe*Be+re*We+me*Bt+ae*Re;g[$n]=qt}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var yR={kernelName:uo,backendName:"cpu",kernelFunc:G9};function W9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n;ne([o,s],"conv3d");let l=I.computeConv3DInfo(o.shape,s.shape,a,u,i),{filterDepth:p,filterHeight:c,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:h,padInfo:g}=l,y=g.front,T=g.left,x=g.top,k=new xt(l.outShape,o.dtype),v=t.data.get(o.dataId).values,N=t.data.get(s.dataId).values,A=k.values,F=b.computeStrides(o.shape),E=b.computeStrides(s.shape);for(let $=0;$<l.batchSize;++$){let U=$*F[0],K=$*k.strides[0];for(let B=0;B<l.outDepth;++B){let V=K+B*k.strides[1],j=B*l.strideDepth-y;for(let q=0;q<p;++q){let J=j+q*f;if(J<0||J>=l.inDepth)continue;let Y=q*E[0],Q=U+J*F[1];for(let oe=0;oe<l.outHeight;++oe){let re=V+oe*k.strides[2],me=oe*l.strideHeight-x;for(let ae=0;ae<c;++ae){let xe=me+ae*d;if(xe<0||xe>=l.inHeight)continue;let le=Y+ae*E[1],ke=Q+xe*F[2];for(let Ne=0;Ne<l.outWidth;++Ne){let Be=re+Ne*l.outChannels,Re=Ne*l.strideWidth-T;for(let We=0;We<m;++We){let rt=Re+We*h;if(rt<0||rt>=l.inWidth)continue;let gt=le+We*E[2],Ct=ke+rt*l.inChannels,Bt=gt;for(let Dt=0;Dt<l.inChannels;++Dt){let Je=v[Ct+Dt];for(let Ot=0;Ot<l.outChannels;++Ot)A[Be+Ot]+=Je*N[Bt+Ot];Bt+=l.outChannels}}}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var xR={kernelName:Fu,backendName:"cpu",kernelFunc:W9};function U9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:u}=n;ne([o,s],"conv3dBackpropFilterV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),c=I.computeConv3DInfo(o.shape,u,a,1,i),m=c.strideDepth,f=c.strideHeight,d=c.strideWidth,h=c.filterDepth,g=c.filterHeight,y=c.filterWidth,T=new xt(c.filterShape,"float32"),x=T.values,[k,v,N,A]=T.strides,F=t.data.get(s.dataId).values,[E,$,U,K]=p,B=t.data.get(o.dataId).values,[V,j,q,J]=l,Y=c.padInfo.front,Q=c.padInfo.left,oe=c.padInfo.top;for(let re=0;re<h;++re){let me=Math.max(0,Math.ceil((Y-re)/m)),ae=Math.min(c.outDepth,(c.inDepth+Y-re)/m),xe=re*k;for(let le=0;le<g;++le){let ke=Math.max(0,Math.ceil((oe-le)/f)),Ne=Math.min(c.outHeight,(c.inHeight+oe-le)/f),Be=le*v+xe;for(let Re=0;Re<y;++Re){let We=Math.max(0,Math.ceil((Q-Re)/d)),rt=Math.min(c.outWidth,(c.inWidth+Q-Re)/d),gt=Re*N+Be;for(let Ct=0;Ct<c.inChannels;++Ct){let Bt=Ct*A+gt;for(let Dt=0;Dt<c.outChannels;++Dt){let Je=0;for(let Ot=0;Ot<c.batchSize;++Ot){let qt=Ot*V,$n=Ot*E;for(let gr=me;gr<ae;++gr){let zr=(re+gr*m-Y)*j+qt,Vs=gr*$+$n;for(let nn=ke;nn<Ne;++nn){let eo=(le+nn*f-oe)*q+zr,br=nn*U+Vs;for(let kn=We;kn<rt;++kn){let hl=(Re+kn*d-Q)*J+eo,gl=kn*K+br;Je+=B[hl+Ct]*F[gl+Dt]}}}}x[Bt+Dt]=Je}}}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var TR={kernelName:tc,backendName:"cpu",kernelFunc:U9};function K9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:u}=n;ne([o],"conv3dBackpropInputV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),c=I.computeConv3DInfo(u,s.shape,i,1,a),m=new xt(c.inShape,"float32"),f=m.values,[d,h,g,y]=m.strides,T=t.data.get(o.dataId).values,[x,k,v,N]=l,A=t.data.get(s.dataId).values,[F,E,$,U]=p,{batchSize:K,filterDepth:B,filterHeight:V,filterWidth:j,inChannels:q,inDepth:J,inHeight:Y,inWidth:Q,outChannels:oe,outDepth:re,outHeight:me,outWidth:ae,strideDepth:xe,strideHeight:le,strideWidth:ke}=c,Ne=B-1-c.padInfo.front,Be=V-1-c.padInfo.top,Re=j-1-c.padInfo.left;for(let We=0;We<K;++We)for(let rt=0;rt<q;++rt)for(let gt=0;gt<J;++gt){let Ct=gt-Ne,Bt=Math.max(0,Math.ceil(Ct/xe)),Dt=Math.min(re,(B+Ct)/xe);for(let Je=0;Je<Y;++Je){let Ot=Je-Be,qt=Math.max(0,Math.ceil(Ot/le)),$n=Math.min(me,(V+Ot)/le);for(let gr=0;gr<Q;++gr){let Jn=gr-Re,zr=Math.max(0,Math.ceil(Jn/ke)),Vs=Math.min(ae,(j+Jn)/ke),nn=0;for(let Pr=Bt;Pr<Dt;++Pr){let eo=Pr*xe-Ct;for(let br=qt;br<$n;++br){let kn=br*le-Ot;for(let Bn=zr;Bn<Vs;++Bn){let hl=Bn*ke-Jn,gl=x*We+k*Pr+v*br+N*Bn,js=F*(B-1-eo)+E*(V-1-kn)+$*(j-1-hl)+U*rt;for(let yi=0;yi<oe;++yi){let Um=T[gl+yi],$p=A[js+yi];nn+=Um*$p}}}}f[d*We+h*gt+g*Je+y*gr+rt]=nn}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}var kR={kernelName:rc,backendName:"cpu",kernelFunc:K9};var V9=$e(lo,r=>Math.cos(r)),IR={kernelName:lo,backendName:"cpu",kernelFunc:V9};var j9=$e(po,r=>Math.cosh(r)),CR={kernelName:po,backendName:"cpu",kernelFunc:j9};function H9(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,[p,c,m,f]=o.shape,d=s.shape[0],[h,g]=i,y=Ce([d,h,g,f],"float32"),T=t.data.get(s.dataId).values,x=t.data.get(a.dataId).values,k=t.data.get(o.dataId).values,v=b.computeStrides(o.shape),N=b.computeStrides(y.shape);for(let A=0;A<d;A++){let F=A*4,E=T[F],$=T[F+1],U=T[F+2],K=T[F+3],B=x[A];if(B>=p)continue;let V=h>1?(U-E)*(c-1)/(h-1):0,j=g>1?(K-$)*(m-1)/(g-1):0;for(let q=0;q<h;q++){let J=h>1?E*(c-1)+q*V:.5*(E+U)*(c-1);if(J<0||J>c-1){for(let Y=0;Y<g;Y++)for(let Q=0;Q<f;Q++){let oe=Q+Y*N[2]+q*N[1]+A*N[0];y.values[oe]=l}continue}if(u==="bilinear"){let Y=Math.floor(J),Q=Math.ceil(J),oe=J-Y;for(let re=0;re<g;re++){let me=g>1?$*(m-1)+re*j:.5*($+K)*(m-1);if(me<0||me>m-1){for(let ke=0;ke<f;ke++){let Ne=ke+re*N[2]+q*N[1]+A*N[0];y.values[Ne]=l}continue}let ae=Math.floor(me),xe=Math.ceil(me),le=me-ae;for(let ke=0;ke<f;ke++){let Ne=ke+ae*v[2]+Y*v[1]+B*v[0],Be=k[Ne];Ne=ke+xe*v[2]+Y*v[1]+B*v[0];let Re=k[Ne];Ne=ke+ae*v[2]+Q*v[1]+B*v[0];let We=k[Ne];Ne=ke+xe*v[2]+Q*v[1]+B*v[0];let rt=k[Ne],gt=Be+(Re-Be)*le,Ct=We+(rt-We)*le;Ne=ke+re*N[2]+q*N[1]+A*N[0],y.values[Ne]=gt+(Ct-gt)*oe}}}else for(let Y=0;Y<g;++Y){let Q=g>1?$*(m-1)+Y*j:.5*($+K)*(m-1);if(Q<0||Q>m-1){for(let me=0;me<f;me++){let ae=me+Y*N[2]+q*N[1]+A*N[0];y.values[ae]=l}continue}let oe=Math.round(Q),re=Math.round(J);for(let me=0;me<f;me++){let ae=me+oe*v[2]+re*v[1]+B*v[0],xe=me+Y*N[2]+q*N[1]+A*N[0];y.values[xe]=k[ae]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var vR={kernelName:Ys,backendName:"cpu",kernelFunc:H9};function q9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;ne(o,"cumsum");let u=I.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=lr({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=I.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let c=Kt(l.dtype,"int32"),m=b.makeZerosTypedArray(b.sizeFromShape(l.shape),c),f=t.data.get(l.dataId).values,d=l.shape[l.shape.length-1],h=i?(y,T)=>y+d-T-1:(y,T)=>y+T;for(let y=0;y<f.length;y+=d)for(let T=0;T<d;T++){let x=h(y,T);if(T===0)m[x]=a?0:f[x];else{let k=h(y,T-1);m[x]=a?f[k]+m[k]:f[x]+m[k]}}let g=t.makeTensorInfo(l.shape,c,m);if(u!=null){let y=I.getUndoAxesPermutation(u),T=lr({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),T}return g}var wR={kernelName:Xs,backendName:"cpu",kernelFunc:q9};function X9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Im(u,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=$y(u,l,a,i);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var SR={kernelName:nc,backendName:"cpu",kernelFunc:X9};function Y9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;b.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],u=o.shape[1],l=o.shape[2],p=o.shape[3],c=u*s,m=l*s,f=p/(s*s),d=t.data.get(o.dataId).values,h=new Float32Array(i*c*m*f),g=0;for(let y=0;y<i;++y)for(let T=0;T<c;++T){let x=Math.floor(T/s),k=T%s;for(let v=0;v<m;++v){let N=Math.floor(v/s),A=v%s,F=(k*s+A)*f;for(let E=0;E<f;++E){let U=E+F+p*(N+l*(x+u*y));h[g++]=d[U]}}}return t.makeTensorInfo([i,c,m,f],o.dtype,h)}var _R={kernelName:Qs,backendName:"cpu",kernelFunc:Y9};function Bw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n;ne([o,s],"depthwiseConv2DNative");let p=b.computeStrides(o.shape),c=b.computeStrides(s.shape),m=u;m==null&&(m=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(a,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${m}'`);let f=I.computeConv2DInfo(o.shape,s.shape,a,m,i,l,!0),{filterHeight:d,filterWidth:h,dilationHeight:g,dilationWidth:y,padInfo:T}=f,x=T.left,k=T.top,v=f.outChannels/f.inChannels,N=new xt(f.outShape,o.dtype),A=t.data.get(o.dataId).values,F=t.data.get(s.dataId).values,E=N.values;for(let $=0;$<f.batchSize;++$){let U=$*p[0],K=$*N.strides[0];for(let B=0;B<f.outHeight;++B){let V=K+B*N.strides[1],j=B*f.strideHeight-k;for(let q=0;q<d;++q){let J=j+q*g;if(J<0||J>=f.inHeight)continue;let Y=q*c[0],Q=U+J*p[1];for(let oe=0;oe<f.outWidth;++oe){let re=V+oe*N.strides[2],me=oe*f.strideWidth-x;for(let ae=0;ae<h;++ae){let xe=me+ae*y;if(xe<0||xe>=f.inWidth)continue;let le=Y+ae*c[1],ke=Q+xe*f.inChannels,Ne=re,Be=le;for(let Re=0;Re<f.inChannels;++Re){let We=A[ke+Re];for(let rt=0;rt<v;++rt)E[Ne+rt]+=We*F[Be+rt];Ne+=v,Be+=v}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}var AR={kernelName:co,backendName:"cpu",kernelFunc:Bw};function Q9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n;ne([o,s],"depthwiseConv2dNativeBackpropFilter");let c=I.computeConv2DInfo(o.shape,p,a,i,u,l,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:h}=c,g=new xt(c.filterShape,"float32"),y=c.padInfo.left,T=c.padInfo.top,x=c.outChannels/c.inChannels,k=t.data.get(o.dataId).values,v=new xt(o.shape,o.dtype,k),N=t.data.get(s.dataId).values,A=new xt(s.shape,s.dtype,N);for(let F=0;F<d;++F){let E=Math.max(0,Math.ceil((T-F)/m)),$=Math.min(c.outHeight,(c.inHeight+T-F)/m);for(let U=0;U<h;++U){let K=Math.max(0,Math.ceil((y-U)/f)),B=Math.min(c.outWidth,(c.inWidth+y-U)/f);for(let V=0;V<c.outChannels;++V){let j=Math.trunc(V/x),q=V%x,J=0;for(let Y=0;Y<c.batchSize;++Y)for(let Q=E;Q<$;++Q){let oe=F+Q*m-T;for(let re=K;re<B;++re){let me=U+re*f-y;J+=v.get(Y,oe,me,j)*A.get(Y,Q,re,V)}}g.set(J,F,U,j,q)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var NR={kernelName:oc,backendName:"cpu",kernelFunc:Q9};function Z9(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n;ne([o,s],"depthwiseConv2DNativeBackpropInput");let c=b.computeStrides(o.shape),m=b.computeStrides(s.shape),f=I.computeConv2DInfo(p,s.shape,a,i,u,l,!0),d=new xt(f.inShape,"float32"),h=d.values,[g,y,T]=d.strides,x=t.data.get(o.dataId).values,[k,v,N]=c,A=t.data.get(s.dataId).values,[F,E,$]=m,{batchSize:U,filterHeight:K,filterWidth:B,inChannels:V,inHeight:j,inWidth:q,outChannels:J,outHeight:Y,outWidth:Q,strideHeight:oe,strideWidth:re}=f,me=K-1-f.padInfo.top,ae=B-1-f.padInfo.left,xe=J/V;for(let le=0;le<U;++le)for(let ke=0;ke<V;++ke)for(let Ne=0;Ne<j;++Ne){let Be=Ne-me,Re=Math.max(0,Math.ceil(Be/oe)),We=Math.min(Y,(K+Be)/oe);for(let rt=0;rt<q;++rt){let gt=rt-ae,Ct=Math.max(0,Math.ceil(gt/re)),Bt=Math.min(Q,(B+gt)/re),Dt=0;for(let Je=Re;Je<We;++Je){let Ot=Je*oe-Be;for(let qt=Ct;qt<Bt;++qt){let $n=qt*re-gt,gr=k*le+v*Je+N*qt,Jn=F*(K-1-Ot)+E*(B-1-$n)+$*ke;for(let zr=0;zr<xe;++zr){let Vs=ke*xe+zr,nn=x[gr+Vs],Pr=A[Jn+zr];Dt+=nn*Pr}}}h[g*le+y*Ne+T*rt+ke]=Dt}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}var DR={kernelName:sc,backendName:"cpu",kernelFunc:Z9};function J9(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=Ce([o,o],n.dtype),i=a.values;for(let l=0;l<s.length;l++)i[l*o+l]=s[l];let u=[...n.shape,...n.shape];return t.makeTensorInfo(u,a.dtype,a.values)}var PR={kernelName:ac,backendName:"cpu",kernelFunc:J9};var FR={kernelName:Mu,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,u=e,l=u.data.get(n.dataId).values,p=n.shape.length,c=u.data.get(o.dataId).values,m=o.shape.length,{batchSize:f,inHeight:d,inWidth:h,inChannels:g,outHeight:y,outWidth:T,padInfo:x,strideHeight:k,strideWidth:v,filterHeight:N,filterWidth:A,dilationHeight:F,dilationWidth:E,outShape:$}=I.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),U=b.sizeFromShape($),K=$.length,B=b.getArrayFromDType(n.dtype,U);for(let j=0;j<f;++j)for(let q=0;q<y;++q){let J=q*k-x.top;for(let Y=0;Y<T;++Y){let Q=Y*v-x.left;for(let oe=0;oe<g;++oe){let re=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<N;++ae){let xe=J+ae*F;if(xe>=0&&xe<d)for(let le=0;le<A;++le){let ke=Q+le*E;if(ke>=0&&ke<h){let Ne=b.locToIndex([j,xe,ke,oe],p,b.computeStrides(n.shape)),Be=b.locToIndex([ae,le,oe],m,b.computeStrides(o.shape)),Re=l[Ne]+c[Be];Re>re&&(re=Re)}}}let me=b.locToIndex([j,q,Y,oe],K,b.computeStrides($));B[me]=re}}}return{dataId:u.write(b.toTypedArray(B,n.dtype),$,n.dtype),shape:$,dtype:n.dtype}}};var MR={kernelName:af,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),c=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:k,filterHeight:v,filterWidth:N,dilationHeight:A,dilationWidth:F,outShape:E}=I.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);b.assert(s.rank===E.length,()=>`Error in ${af}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let $=b.toNestedArray(E,l.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let B=0;B<m;++B)for(let V=0;V<g;++V){let j=V*x-T.top;for(let q=0;q<y;++q){let J=q*k-T.left;for(let Y=0;Y<h;++Y){let Q=Number.MIN_SAFE_INTEGER,oe=0,re=0;for(let me=0;me<v;++me){let ae=j+me*A;if(ae>=0&&ae<f)for(let xe=0;xe<N;++xe){let le=J+xe*F;if(le>=0&&le<d){let ke=p[B][ae][le][Y]+c[me][xe][Y];ke>Q&&(Q=ke,oe=me,re=xe)}}}U[oe][re][Y]+=$[B][V][q][Y]}}}return{dataId:l.write(b.toTypedArray(U,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var ER={kernelName:sf,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),c=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:k,filterHeight:v,filterWidth:N,dilationHeight:A,dilationWidth:F,outShape:E}=I.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);b.assert(s.rank===E.length,()=>`Error in ${sf}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let $=b.toNestedArray(E,l.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let B=0;B<m;++B)for(let V=0;V<g;++V){let j=V*x-T.top;for(let q=0;q<y;++q){let J=q*k-T.left;for(let Y=0;Y<h;++Y){let Q=Number.MIN_SAFE_INTEGER,oe=j<0?0:j,re=J<0?0:J;for(let me=0;me<v;++me){let ae=j+me*A;if(ae>=0&&ae<f)for(let xe=0;xe<N;++xe){let le=J+xe*F;if(le>=0&&le<d){let ke=p[B][ae][le][Y]+c[me][xe][Y];ke>Q&&(Q=ke,oe=ae,re=le)}}}U[B][oe][re][Y]+=$[B][V][q][Y]}}}return{dataId:l.write(b.toTypedArray(U,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function fu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"sum");let i;o.dtype==="bool"?i=Gs({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=Xr({inputs:{x:o},backend:t});let u=i.shape.length,l=b.parseAxisParam(s,i.shape),p=I.getAxesPermutation(l,u),c=l,m=i;p!=null&&(m=lr({inputs:{x:i},backend:t,attrs:{perm:p}}),c=I.getInnerMostAxes(c.length,u)),I.assertAxesAreInnerMostDims("sum",c,m.shape.length);let[f,d]=I.computeOutAndReduceShapes(m.shape,c),h=I.upcastType(m.dtype,"int32"),g=Tm(t,f,h),y=b.sizeFromShape(d),T=t.data.get(g.dataId).values,x=t.data.get(m.dataId).values;for(let k=0;k<T.length;++k){let v=k*y,N=0;for(let A=0;A<y;++A)N+=x[v+A];T[k]=N}if(a){let k=I.expandShapeToKeepDim(g.shape,l),v=g;g=st({inputs:{x:g},backend:t,attrs:{shape:k}}),t.disposeIntermediateTensorInfo(v)}return t.disposeIntermediateTensorInfo(i),p!=null&&t.disposeIntermediateTensorInfo(m),g}var RR={kernelName:Oo,backendName:"cpu",kernelFunc:fu};function eee(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(i,u),c=p.length,m=null,f=a.length,d=[];for(let h=0;h<c;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:T}=I.getEinsumPermutation(f,u[g]),x;I.isIdentityPermutation(y)?x=s[g]:(x=lr({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),d.push(x));let k=x.shape.slice();for(let v=0;v<T.length;++v)k.splice(T[v],0,1);b.arraysEqual(x.shape,k)||(x=st({inputs:{x},backend:t,attrs:{shape:k}}),d.push(x)),m===null?m=x:(m=xp({inputs:{a:x,b:m},backend:t}),d.push(m))}h<c-1&&(l[h]>=0&&(m=fu({inputs:{x:m},backend:t,attrs:{axis:l[h]-(a.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeIntermediateTensorInfo(h);return m}var LR={kernelName:Eu,backendName:"cpu",kernelFunc:eee};function tee(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;ne([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let u=0;u<a.length;++u){let l=a[u];l>=1?s[u]=i[u]:s[u]=i[u]*(l+1)}return t.makeTensorInfo(o.shape,"float32",s)}var $R={kernelName:ic,backendName:"cpu",kernelFunc:tee};var ree=I.ERF_P,nee=I.ERF_A1,oee=I.ERF_A2,see=I.ERF_A3,aee=I.ERF_A4,iee=I.ERF_A5,uee=$e(Pi,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+ree*t);return e*(1-((((iee*n+aee)*n+see)*n+oee)*n+nee)*n*Math.exp(-t*t))}),BR={kernelName:Pi,backendName:"cpu",kernelFunc:uee};function Am(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),st({inputs:{x:o},backend:t,attrs:{shape:i}})}var OR={kernelName:us,backendName:"cpu",kernelFunc:Am};var lee=nt((r,e)=>r/e),Eh=it(mo,lee),Rh={kernelName:mo,backendName:"cpu",kernelFunc:Eh};function Jy(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[o,s],p=b.sizeFromShape(l),c=b.getTypedArrayFromDType("float32",p),m=b.getTypedArrayFromDType("float32",p);for(let g=0;g<o;g++){let y=Us({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=Us({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,s]}}),x=vr({inputs:{real:y,imag:T},backend:t}),{real:k,imag:v}=pee(x,e,t),N=I.mergeRealAndImagArrays(k,v);for(let A=0;A<s;A++){let F=I.getComplexWithIndex(N,A);c[g*s+A]=F.real,m[g*s+A]=F.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(x)}let f=t.makeTensorInfo(l,"float32",c),d=t.makeTensorInfo(l,"float32",m),h=vr({inputs:{real:f,imag:d},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),h}function pee(r,e,t){let n=b.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(cee(n)){let i=Ow(s,a,n,e,t),u=[r.shape[0],r.shape[1]];if(e){let l=t.makeTensorInfo(u,"float32",i.real),p=t.makeTensorInfo(u,"float32",i.imag),c=t.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),m=Xr({inputs:{x:c},backend:t}),f=Rh.kernelFunc({inputs:{a:l,b:c},backend:t}),d=Rh.kernelFunc({inputs:{a:p,b:m},backend:t}),h=t.data.get(f.dataId).values,g=t.data.get(d.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),{real:h,imag:g}}return i}else{let i=I.mergeRealAndImagArrays(s,a),u=mee(i,n,e);return I.splitRealAndImagArrays(u)}}function cee(r){return(r&r-1)==0}function Ow(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=I.mergeRealAndImagArrays(r,e),a=t/2,i=I.complexWithEvenIndex(s),u=i.real,l=i.imag,p=[u.length],c=o.makeTensorInfo(p,"float32",u),m=o.makeTensorInfo(p,"float32",l),f=vr({inputs:{real:c,imag:m},backend:o}),d=I.complexWithOddIndex(s),h=d.real,g=d.imag,y=[h.length],T=o.makeTensorInfo(y,"float32",h),x=o.makeTensorInfo(y,"float32",g),k=vr({inputs:{real:T,imag:x},backend:o}),v=Ow(u,l,a,n,o),N=v.real,A=v.imag,F=[N.length],E=o.makeTensorInfo(F,"float32",N),$=o.makeTensorInfo(F,"float32",A),U=vr({inputs:{real:E,imag:$},backend:o}),K=Ow(h,g,a,n,o),B=K.real,V=K.imag,j=[B.length],q=o.makeTensorInfo(j,"float32",B),J=o.makeTensorInfo(j,"float32",V),Y=vr({inputs:{real:q,imag:J},backend:o}),Q=I.exponents(t,n),oe=[Q.real.length],re=o.makeTensorInfo(oe,"float32",Q.real),me=o.makeTensorInfo(oe,"float32",Q.imag),ae=vr({inputs:{real:re,imag:me},backend:o}),xe=xp({inputs:{a:ae,b:Y},backend:o}),le=mu({inputs:{a:U,b:xe},backend:o}),ke=Fh({inputs:{a:U,b:xe},backend:o}),Ne=zs({inputs:{input:le},backend:o}),Be=zs({inputs:{input:ke},backend:o}),Re=ci({inputs:{input:le},backend:o}),We=ci({inputs:{input:ke},backend:o}),rt=al({inputs:[Ne,Be],backend:o,attrs:{axis:0}}),gt=al({inputs:[Re,We],backend:o,attrs:{axis:0}}),Ct=o.data.get(rt.dataId).values,Bt=o.data.get(gt.dataId).values;return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(k),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(re),o.disposeIntermediateTensorInfo(me),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(xe),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(ke),o.disposeIntermediateTensorInfo(Ne),o.disposeIntermediateTensorInfo(Re),o.disposeIntermediateTensorInfo(Be),o.disposeIntermediateTensorInfo(We),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(gt),{real:Ct,imag:Bt}}function mee(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let u=I.exponent(o*i,e,t),l=I.getComplexWithIndex(r,i);s+=l.real*u.real-l.imag*u.imag,a+=l.real*u.imag+l.imag*u.real}t&&(s/=e,a/=e),I.assignToTypedArray(n,s,a,o)}return n}function fee(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=st({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),u=Jy(i,!1,t),l=st({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var zR={kernelName:uc,backendName:"cpu",kernelFunc:fee};function Lh(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||b.inferDtype(o),i=b.getArrayFromDType(a,b.sizeFromShape(n));return dee(i,o,a),e.makeTensorInfo(n,a,i)}var GR={kernelName:ja,backendName:"cpu",kernelFunc:Lh};function dee(r,e,t){r.fill(e)}var WR={kernelName:ea,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[a,i,u,l]=n.shape,p=o.data.get(n.dataId).values;for(let m=0;m<a;m++){let f=m*u*i*l;for(let d=0;d<i;d++){let h=d*(u*l);for(let g=0;g<u;g++){let y=g*l;for(let T=0;T<l;T++){let x=Math.round(u-g-1),k=f+h+y+T,v=p[k];if(x>=0&&x<u){let N=x*l,A=f+h+N+T;v=p[A]}s[k]=v}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var hee=nt((r,e)=>Math.floor(r/e)),gee=it(bo,hee,null,"int32"),UR={kernelName:bo,backendName:"cpu",kernelFunc:gee};function bee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=$w({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m}});if(a){let g=h;h=mu({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=Sm(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var KR={kernelName:Is,backendName:"cpu",kernelFunc:bee};function yee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=Bw({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m}});if(a){let g=h;h=mu({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=Sm(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var VR={kernelName:Cs,backendName:"cpu",kernelFunc:yee};function xee(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=b.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[u,l,p,c]=I.prepareAndValidate(n,o);if(l===0)return t.makeTensorInfo(u,n.dtype,[]);let m=t.data.get(o.dataId).values,f=t.bufferSync(n),d=By(m,f,n.dtype,l,i,p,c,n.shape,s);return t.makeTensorInfo(u,n.dtype,d.values)}var jR={kernelName:ta,backendName:"cpu",kernelFunc:xee};function Tee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;ne([o,s],"gatherV2");let u=b.parseAxisParam(a,o.shape)[0],l=t.data.get(s.dataId).values,p=o.shape[u];for(let k=0;k<l.length;++k){let v=l[k];b.assert(v<=p-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${p-1}]`)}let c=i;i==null&&(c=0);let m=b.sizeFromShape(s.shape),f=I.segment_util.collectGatherOpShapeInfo(o,s,u,c),d=st({inputs:{x:o},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),h=st({inputs:{x:s},backend:t,attrs:{shape:[f.batchSize,m/f.batchSize]}}),g=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],y=t.bufferSync(h),T=t.bufferSync(d),x=Oy(T,y,g);return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(f.outputShape,x.dtype,x.values)}var HR={kernelName:ls,backendName:"cpu",kernelFunc:Tee};function kee(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=st({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),u=Jy(i,!0,t),l=st({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var qR={kernelName:lc,backendName:"cpu",kernelFunc:kee};var Iee=$e(Fi,r=>Number.isFinite(r)?1:0,"bool"),XR={kernelName:Fi,backendName:"cpu",kernelFunc:Iee};var Cee=$e(Mi,r=>Math.abs(r)===1/0?1:0,"bool"),YR={kernelName:Mi,backendName:"cpu",kernelFunc:Cee};var vee=$e(Ei,r=>Number.isNaN(r)?1:0,"bool"),QR={kernelName:Ei,backendName:"cpu",kernelFunc:vee};function wee(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=zy(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var ZR={kernelName:pc,backendName:"cpu",kernelFunc:wee};var See=$e(Ri,r=>Math.log1p(r)),JR={kernelName:Ri,backendName:"cpu",kernelFunc:See};var _ee=nt((r,e)=>r&&e),Aee=it(aa,_ee,null,"bool"),eL={kernelName:aa,backendName:"cpu",kernelFunc:Aee};var Nee=$e(Li,r=>r?0:1,"bool"),tL={kernelName:Li,backendName:"cpu",kernelFunc:Nee};var Dee=nt((r,e)=>r||e),Pee=it(vl,Dee,null,"bool"),rL={kernelName:vl,backendName:"cpu",kernelFunc:Pee};function Fee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:u}=n;ne(o,"LRN");let l=o.shape[3],p=l-1,c=t.data.get(o.dataId).values,m=b.sizeFromShape(o.shape),f=new Float32Array(m);function d(h){let g=h%l,y=h-g+Math.max(0,g-s),T=h-g+Math.min(g+s,p),x=0;for(;y<=T;y++){let k=c[y];x+=k*k}return x}for(let h=0;h<m;h++){let g=d(h),y=c[h]*Math.pow(a+i*g,-u);f[h]=y}return t.makeTensorInfo(o.shape,o.dtype,f)}var nL={kernelName:Lu,backendName:"cpu",kernelFunc:Fee};function Mee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:p}=n;ne(a,"LRNGrad");let c=b.sizeFromShape(a.shape),m=a.shape[3],f=t.data.get(a.dataId).values,d=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(c),y=c;for(let T=0;T<y;T++){let x=T%m,k=T-x+Math.max(0,x-i),v=T-x+Math.min(m,x+i+1),N=0;for(let A=k;A<v;A++)N+=Math.pow(d[A],2);N=l*N+u;for(let A=k;A<v;A++){let F=-2*l*p*d[A]*h[T]/N;T===A&&(F+=Math.pow(N,-p)),F*=f[T],g[A]+=F}}return t.makeTensorInfo(a.shape,o.dtype,g)}var oL={kernelName:cc,backendName:"cpu",kernelFunc:Mee};function zw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,u=o.shape,l=u.length,p=b.parseAxisParam(s,u),c=p,m=I.getAxesPermutation(c,l),f=i.data.get(o.dataId).values;if(m!=null){let k=new Array(l);for(let v=0;v<k.length;v++)k[v]=u[m[v]];f=Cm(f,u,o.dtype,m,k),c=I.getInnerMostAxes(c.length,l),u=k}ne(o,"max"),I.assertAxesAreInnerMostDims("max",c,l);let[d,h]=I.computeOutAndReduceShapes(u,c),g=b.sizeFromShape(h),y=Gy(f,g,d,o.dtype),T=i.write(y,d,o.dtype),x=d;return a&&(x=I.expandShapeToKeepDim(d,p)),{dataId:T,shape:x,dtype:o.dtype}}var sL={kernelName:ko,backendName:"cpu",kernelFunc:zw};function Eee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,a,l,i,u),c;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))c=Xr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=_m(m,o.shape,o.dtype,f,p,"max");c=t.makeTensorInfo(p.outShape,o.dtype,d.values)}return c}var aL={kernelName:Co,backendName:"cpu",kernelFunc:Eee};function Ree(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;ne(o,"maxPool3d");let p=I.computePool3DInfo(o.shape,s,a,1,i,u,l),c=t.data.get(o.dataId).values,m=Zy(c,o.shape,o.dtype,b.computeStrides(o.shape),p,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}var iL={kernelName:$u,backendName:"cpu",kernelFunc:Ree};function Lee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;ne([o,s],"maxPool3DGrad");let p=I.computePool3DInfo(s.shape,a,i,1,u,l),c=t.bufferSync(s),m=nR(c,p),f=p.strideDepth,d=p.strideHeight,h=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,T=p.dilationWidth,x=p.effectiveFilterDepth,k=p.effectiveFilterHeight,v=p.effectiveFilterWidth,N=x-1-p.padInfo.front,A=v-1-p.padInfo.left,F=k-1-p.padInfo.top,E=Ce(s.shape,"float32"),$=t.bufferSync(o);for(let U=0;U<p.batchSize;++U)for(let K=0;K<p.inChannels;++K)for(let B=0;B<p.inDepth;++B)for(let V=0;V<p.inHeight;++V)for(let j=0;j<p.inWidth;++j){let q=B-N,J=V-F,Y=j-A,Q=0;for(let oe=0;oe<x;oe+=g){let re=(q+oe)/f;if(!(re<0||re>=p.outDepth||Math.floor(re)!==re))for(let me=0;me<k;me+=y){let ae=(J+me)/d;if(!(ae<0||ae>=p.outHeight||Math.floor(ae)!==ae))for(let xe=0;xe<v;xe+=T){let le=(Y+xe)/h;if(le<0||le>=p.outWidth||Math.floor(le)!==le)continue;let ke=x*k*v-1-m.get(U,re,ae,le,K),Ne=oe*k*v+me*v+xe,Be=ke===Ne?1:0;if(Be===0)continue;Q+=$.get(U,re,ae,le,K)*Be}}}E.set(Q,U,B,V,j,K)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}var uL={kernelName:fc,backendName:"cpu",kernelFunc:Lee};function $ee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;ne([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:c}=n,m=I.computePool2DInfo(i.shape,u,l,1,p,c),f=t.data.get(i.dataId).values,d=Ce(m.outShape,i.dtype,Qy(f,i.shape,i.dtype,m).values),h=m.strideHeight,g=m.strideWidth,y=m.dilationHeight,T=m.dilationWidth,x=m.effectiveFilterHeight,k=m.effectiveFilterWidth,v=k-1-m.padInfo.left,N=x-1-m.padInfo.top,A=Ce(i.shape,"float32"),F=t.data.get(o.dataId).values,E=Ce(o.shape,"float32",F);for(let $=0;$<m.batchSize;++$)for(let U=0;U<m.inChannels;++U)for(let K=0;K<m.inHeight;++K)for(let B=0;B<m.inWidth;++B){let V=K-N,j=B-v,q=0;for(let J=0;J<x;J+=y){let Y=(V+J)/h;if(!(Y<0||Y>=m.outHeight||Math.floor(Y)!==Y))for(let Q=0;Q<k;Q+=T){let oe=(j+Q)/g;if(oe<0||oe>=m.outWidth||Math.floor(oe)!==oe)continue;let re=x*k-1-d.get($,Y,oe,U),me=J*k+Q,ae=re===me?1:0;if(ae===0)continue;q+=E.get($,Y,oe,U)*ae}}A.set(q,$,K,B,U)}return t.makeTensorInfo(A.shape,A.dtype,A.values)}var lL={kernelName:mc,backendName:"cpu",kernelFunc:$ee};function pL(r,e,t,n,o){let s=b.computeStrides(e),a=_m(r,e,t,s,o,"max"),i=Qy(r,e,t,o,!0,n);return[a.values,i.values]}var cL={kernelName:dc,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,u=t;ne(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,p=I.computePool2DInfo(n.shape,o,s,[1,1],a),[c,m]=pL(l,n.shape,n.dtype,i,p),f=u.write(c,p.outShape,n.dtype),d=u.write(m,p.outShape,n.dtype);return[{dataId:f,shape:p.outShape,dtype:n.dtype},{dataId:d,shape:p.outShape,dtype:"int32"}]}};function Bee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=b.parseAxisParam(s,o.shape),l=I.computeOutAndReduceShapes(o.shape,i)[1],p=b.sizeFromShape(l),c=[],m=t.makeTensorInfo([],"float32",new Float32Array([p]));c.push(m);let f=Gs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});c.push(f);let d=Eh({inputs:{a:f,b:m},backend:t});c.push(d);let h=fu({inputs:{x:d},backend:t,attrs:{axis:s,keepDims:a}});return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var mL={kernelName:vo,backendName:"cpu",kernelFunc:Bee};function Oee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ne(o,"min");let i=b.parseAxisParam(s,o.shape),u=i,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=lr({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",u,p.shape.length);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(c),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<d.length;++y){let T=y*f,x=h[T];for(let k=0;k<f;++k){let v=h[T+k];(Number.isNaN(v)||v<x)&&(x=v)}d[y]=x}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(c,p.dtype,d);if(a){let y=I.expandShapeToKeepDim(c,i),T=st({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var fL={kernelName:wo,backendName:"cpu",kernelFunc:Oee};function zee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;ne(o,"mirrorPad");let i=s.map((x,k)=>x[0]+o.shape[k]+x[1]),u=s.map(x=>x[0]),l=s.map((x,k)=>x[0]+o.shape[k]),p=a==="reflect"?0:1,c=t.data.get(o.dataId).values,m=o.shape.length,f=b.computeStrides(o.shape),d=b.sizeFromShape(i),h=i.length,g=b.computeStrides(i),y=b.getTypedArrayFromDType(o.dtype,d);for(let x=0;x<d;x++){let k=b.indexToLoc(x,h,g);for(let N=0;N<h;N++)k[N]<u[N]?k[N]=u[N]*2-k[N]-p:k[N]>=l[N]&&(k[N]=(l[N]-1)*2-k[N]+p);k=k.map((N,A)=>N-u[A]);let v=b.locToIndex(k,m,f);y[x]=c[v]}return{dataId:t.write(y,i,o.dtype),shape:i,dtype:o.dtype}}var dL={kernelName:_o,backendName:"cpu",kernelFunc:zee};var Gee=nt((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),Wee=it($i,Gee),hL={kernelName:$i,backendName:"cpu",kernelFunc:Wee};var bL=kl(Mf());function Gw(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let u=b.parseAxisParam([i],o.shape),l=zw({inputs:{x:o},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),p=I.expandShapeToKeepDim(l.shape,u),c=st({inputs:{x:l},backend:t,attrs:{shape:p}}),m=Fh({inputs:{a:o,b:c},backend:t}),f=dw({inputs:{x:m},backend:t}),d=fu({inputs:{x:f},backend:t,attrs:{axis:u,keepDims:!1}}),h=st({inputs:{x:d},backend:t,attrs:{shape:p}}),g=Eh({inputs:{a:f,b:h},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var gL={kernelName:zo,backendName:"cpu",kernelFunc:Gw};function Uee(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;ne(o,"multinomial");let u=i?o:Gw({inputs:{logits:o},backend:t,attrs:{dim:-1}}),l=u.shape[0],p=u.shape[1],c=t.data.get(u.dataId).values,m=[l,s],f=b.makeZerosTypedArray(b.sizeFromShape(m),"int32");for(let d=0;d<l;++d){let h=d*p,g=new Float32Array(p-1);g[0]=c[h];for(let x=1;x<g.length;++x)g[x]=g[x-1]+c[h+x];let y=bL.alea(a.toString()),T=d*s;for(let x=0;x<s;++x){let k=y();f[T+x]=g.length;for(let v=0;v<g.length;v++)if(k<g[v]){f[T+x]=v;break}}}return i||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(m,"int32",f)}var yL={kernelName:hc,backendName:"cpu",kernelFunc:Uee};var Kee=Tr.nonMaxSuppressionV3Impl;function Vee(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n;ne(o,"NonMaxSuppression");let l=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:c}=Kee(l,p,a,i,u);return t.makeTensorInfo([c.length],"int32",new Int32Array(c))}var xL={kernelName:ua,backendName:"cpu",kernelFunc:Vee};var jee=Tr.nonMaxSuppressionV4Impl;function Hee(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n;ne(o,"NonMaxSuppressionPadded");let p=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=jee(p,c,a,i,u,l);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var TL={kernelName:Bi,backendName:"cpu",kernelFunc:Hee};var qee=Tr.nonMaxSuppressionV5Impl;function Xee(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n;ne(o,"NonMaxSuppressionWithScore");let p=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,m=a,f=i,d=u,h=l,{selectedIndices:g,selectedScores:y}=qee(p,c,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var kL={kernelName:la,backendName:"cpu",kernelFunc:Xee};function Yee(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n;ne(o,"oneHot");let u=b.sizeFromShape(o.shape),l=new Float32Array(u*s);l.fill(i);let p=t.data.get(o.dataId).values;for(let c=0;c<u;++c)p[c]>=0&&p[c]<s&&(l[c*s+p[c]]=a);return t.makeTensorInfo([...o.shape,s],"int32",l)}var IL={kernelName:pa,backendName:"cpu",kernelFunc:Yee};function $h(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=zs({inputs:{input:n},backend:t}),s=$h({inputs:{x:o},backend:t}),a=ci({inputs:{input:n},backend:t}),i=$h({inputs:{x:a},backend:t}),u=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Lh({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var CL={kernelName:xs,backendName:"cpu",kernelFunc:$h};function vL(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=zs({inputs:{input:n},backend:t}),s=vL({inputs:{x:o},backend:t}),a=ci({inputs:{input:n},backend:t}),i=$h({inputs:{x:a},backend:t}),u=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Lh({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var wL={kernelName:cs,backendName:"cpu",kernelFunc:vL};function Ww(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Am({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let c=Am({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(c),c}),l=al({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var SL={kernelName:ms,backendName:"cpu",kernelFunc:Ww};function Qee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;ne(o,"pad");let i=s.map((T,x)=>T[0]+o.shape[x]+T[1]),u=s.map(T=>T[0]),l=t.data.get(o.dataId).values,p=b.sizeFromShape(o.shape),c=o.shape.length,m=b.computeStrides(o.shape),f=b.sizeFromShape(i),d=i.length,h=b.computeStrides(i),g=b.getTypedArrayFromDType(o.dtype,f);a!==0&&g.fill(a);for(let T=0;T<p;T++){let k=b.indexToLoc(T,c,m).map((N,A)=>N+u[A]),v=b.locToIndex(k,d,h);g[v]=l[T]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var ex={kernelName:No,backendName:"cpu",kernelFunc:Qee};var Zee=nt((r,e)=>Math.pow(r,e)),Jee=it(Do,Zee),_L={kernelName:Do,backendName:"cpu",kernelFunc:Jee};function ete(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=Tp(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var AL={kernelName:Ha,backendName:"cpu",kernelFunc:ete};var tte=$e(Oi,r=>1/r),NL={kernelName:Oi,backendName:"cpu",kernelFunc:tte};function rte(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;ne(o,"resizeBilinear");let u=b.computeStrides(o.shape),[l,p]=i,[c,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(b.sizeFromShape([c,l,p,d])),y=[s&&l>1?m-1:m,s&&p>1?f-1:f],T=[s&&l>1?l-1:l,s&&p>1?p-1:p],x=0,k=y[0]/T[0],v=y[1]/T[1];for(let N=0;N<c;N++)for(let A=0;A<l;A++){let F;a?F=k*(A+.5)-.5:F=k*A;let E=Math.max(0,Math.floor(F)),$=F-E,U=Math.min(m-1,Math.ceil(F)),K=N*u[0]+E*u[1],B=N*u[0]+U*u[1];for(let V=0;V<p;V++){let j;a?j=v*(V+.5)-.5:j=v*V;let q=Math.max(0,Math.floor(j)),J=j-q,Y=Math.min(f-1,Math.ceil(j)),Q=K+q*u[2],oe=B+q*u[2],re=K+Y*u[2],me=B+Y*u[2];for(let ae=0;ae<d;ae++){let xe=h[Q+ae],le=h[oe+ae],ke=h[re+ae],Ne=h[me+ae],Be=xe+(ke-xe)*J,Re=le+(Ne-le)*J,We=Be+(Re-Be)*$;g[x++]=We}}}return t.makeTensorInfo([c,l,p,d],"float32",g)}var DL={kernelName:Mo,backendName:"cpu",kernelFunc:rte};function nte(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;ne([s,o],"resizeBilinearGrad");let i=b.computeStrides(o.shape),[u,l,p,c]=o.shape,[,m,f]=s.shape,d=new Float32Array(u*l*p*c),h=[a&&m>1?l-1:l,a&&f>1?p-1:p],g=[a&&m>1?m-1:m,a&&f>1?f-1:f],y=h[0]/g[0],T=h[1]/g[1],x=t.data.get(s.dataId).values,k=0;for(let v=0;v<u;v++){let N=v*i[0];for(let A=0;A<m;A++){let F=A*y,E=Math.floor(F),$=Math.min(Math.ceil(F),l-1),U=N+E*i[1],K=N+$*i[1],B=F-E,V=1-B;for(let j=0;j<f;j++){let q=j*T,J=Math.floor(q),Y=Math.min(Math.ceil(q),p-1),Q=q-J,oe=1-Q,re=U+J*i[2],me=U+Y*i[2],ae=K+J*i[2],xe=K+Y*i[2],le=V*oe,ke=V*Q,Ne=B*oe,Be=B*Q;for(let Re=0;Re<c;Re++){let We=x[k++];d[re+Re]+=We*le,d[me+Re]+=We*ke,d[ae+Re]+=We*Ne,d[xe+Re]+=We*Be}}}}return t.makeTensorInfo([u,p,l,c],"float32",d)}var PL={kernelName:bc,backendName:"cpu",kernelFunc:nte};function ote(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;ne(o,"resizeNearestNeighbor");let u=b.computeStrides(o.shape),[l,p]=i,[c,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(c*l*p*d),y=[s&&l>1?m-1:m,s&&p>1?f-1:f],T=[s&&l>1?l-1:l,s&&p>1?p-1:p],x=y[0]/T[0],k=y[1]/T[1],v=0;for(let N=0;N<c;N++){let A=N*u[0];for(let F=0;F<l;F++){let E=a?x*(F+.5):x*F,$=Math.min(m-1,s?Math.round(E):Math.floor(E));a&&($=Math.max(0,$));let U=A+$*u[1];for(let K=0;K<p;K++){let B=a?k*(K+.5):k*K,V=Math.min(f-1,s?Math.round(B):Math.floor(B));a&&(V=Math.max(0,V));let j=U+V*u[2];for(let q=0;q<d;q++){let J=h[j+q];g[v++]=J}}}}return t.makeTensorInfo([c,l,p,d],o.dtype,g)}var FL={kernelName:qa,backendName:"cpu",kernelFunc:ote};function ste(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;ne([s,o],"resizeNearestNeighborGrad");let i=b.computeStrides(o.shape),u=b.computeStrides(s.shape),[l,p,c,m]=o.shape,[,f,d]=s.shape,h=new Float32Array(l*p*c*m),g=t.data.get(s.dataId).values,y=[a&&f>1?p-1:p,a&&d>1?c-1:c],T=[a&&f>1?f-1:f,a&&d>1?d-1:d],x=y[0]/T[0],k=y[1]/T[1],v=1/x,N=1/k,A=Math.ceil(v)*2+2,F=Math.ceil(N)*2+2;for(let E=0;E<l;E++){let $=E*i[0];for(let U=0;U<p;U++){let K=$+U*i[1],B=Math.floor(U*v),V=Math.floor(B-A/2);for(let j=0;j<c;j++){let q=K+j*i[2],J=Math.floor(j*N),Y=Math.floor(J-F/2);for(let Q=0;Q<m;Q++){let oe=0;for(let re=0;re<A;re++){let me=re+V;if(me<0||me>=f)continue;let ae=$+me*u[1],xe=me*x,le=Math.min(p-1,a?Math.round(xe):Math.floor(xe));if(U===le)for(let ke=0;ke<F;ke++){let Ne=ke+Y;if(Ne<0||Ne>=d)continue;let Be=ae+Ne*u[2],Re=Ne*k,We=Math.min(c-1,a?Math.round(Re):Math.floor(Re));j===We&&(oe+=g[Be+Q])}}h[q+Q]=oe}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var ML={kernelName:gc,backendName:"cpu",kernelFunc:ste};function ate(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;ne(o,"reverse");let a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return Xr({inputs:{x:o},backend:t});let u=new xt(o.shape,o.dtype),l=t.bufferSync(o);for(let p=0;p<u.size;p++){let c=u.indexToLoc(p),m=c.slice();i.forEach(f=>m[f]=o.shape[f]-1-m[f]),u.set(l.get(...m),...c)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}var EL={kernelName:ma,backendName:"cpu",kernelFunc:ate};var RL={kernelName:Ta,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[l,p,c,m]=n.shape,[f,d]=I.getImageCenter(a,p,c),h=255,g=Math.sin(o),y=Math.cos(o),T=i.data.get(n.dataId).values;for(let k=0;k<l;k++){let v=k*c*p*m;for(let N=0;N<p;N++){let A=N*(c*m);for(let F=0;F<c;F++){let E=F*m;for(let $=0;$<m;$++){let U=[l,N,F,$],K=U[2],B=U[1],V=(K-f)*y-(B-d)*g,j=(K-f)*g+(B-d)*y;V=Math.round(V+f),j=Math.round(j+d);let q=s;if(typeof s!="number"&&($===3?q=h:q=s[$]),V>=0&&V<c&&j>=0&&j<p){let Y=j*(c*m),Q=V*m,oe=v+Y+Q+$;q=T[oe]}let J=v+A+E+$;u[J]=q}}}}return{dataId:i.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var ite=$e(fa,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2==0?e:e+1}),LL={kernelName:fa,backendName:"cpu",kernelFunc:ite};function tx(r,e,t,n,o,s,a,i,u,l){let p=[n/o,o],c=r.values,m=e.values;if(n===0)return Ce(t,e.dtype);let f=Ce(p,e.dtype);f.values.fill(u);for(let d=0;d<s;d++){let h=[],g=0;for(let y=0;y<a;y++){let T=c[d*a+y];h.push(T),g+=T*i[y]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let y=0;y<o;y++)l?f.values[g*o+y]+=m[d*o+y]:f.values[g*o+y]=e.rank===0?m[0]:m[d*o+y]}return f}function ute(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:c}=I.calculateShapes(s,o,a),m=!0,f=t.bufferSync(o),d=t.bufferSync(s),h=tx(f,d,a,c,l,u,i,p,0,m);return t.makeTensorInfo(a,h.dtype,h.values)}var $L={kernelName:da,backendName:"cpu",kernelFunc:ute};function lte(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;ne([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Kt(o.dtype,s.dtype),c=b.makeZerosTypedArray(b.sizeFromShape(o.shape),p),m=0,f=a===0||a>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let d=0;d<i.length;d++)for(let h=0;h<f;h++)i[d]===1?c[m++]=u[d]:c[m++]=l[d];return t.makeTensorInfo(o.shape,p,c)}var BL={kernelName:ds,backendName:"cpu",kernelFunc:lte};var pte=I.SELU_SCALEALPHA,cte=I.SELU_SCALE,mte=$e(zi,r=>r>=0?cte*r:pte*(Math.exp(r)-1)),OL={kernelName:zi,backendName:"cpu",kernelFunc:mte};var fte=$e(Gi,r=>r<0?-1:r>0?1:0),zL={kernelName:Gi,backendName:"cpu",kernelFunc:fte};var dte=$e(Lo,r=>Math.sin(r)),GL={kernelName:Lo,backendName:"cpu",kernelFunc:dte};var hte=$e(ha,r=>Math.sinh(r)),WL={kernelName:ha,backendName:"cpu",kernelFunc:hte};var gte=11920928955078125e-23,UL=Math.log(gte)+2,bte=$e(Wi,r=>{let e=r>-UL,t=r<UL,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),KL={kernelName:Wi,backendName:"cpu",kernelFunc:bte};function yte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;ne([o],"spaceToBatchND");let i=b.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let N=1+s.length;N<o.shape.length;++N)u.push([0,0]);let l=ex.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(l.shape,s,i,!1),c=I.getPermuted(p.length,s.length,!1),m=I.getReshapedPermuted(l.shape,s,i,!1),h=st({inputs:{x:l},backend:t,attrs:{shape:p}}),T=lr({inputs:{x:h},backend:t,attrs:{perm:c}}),v=st({inputs:{x:T},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(T),v}var VL={kernelName:gs,backendName:"cpu",kernelFunc:yte};function xte(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values[0],[c,m,f,d,h]=Wy(i,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(m,n.dtype,c),t.makeTensorInfo([m[0]],o.dtype,f),t.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var jL={kernelName:yc,backendName:"cpu",kernelFunc:xte};function Tte(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.data.get(o.dataId).values),i=t.data.get(n.dataId).values,u=Array.from(t.data.get(s.dataId).values),[l,p,c]=Uy(i,n.shape,n.dtype,a,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}var HL={kernelName:xc,backendName:"cpu",kernelFunc:Tte};function kte(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=vm(a,n.shape,n.dtype,i,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var qL={kernelName:Tc,backendName:"cpu",kernelFunc:kte};function Ite(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=vm(a,n.shape,n.dtype,i,u);return t.makeTensorInfo(p,n.dtype,l)}var XL={kernelName:kc,backendName:"cpu",kernelFunc:Ite};function Cte(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:c,outputSize:m}=I.calculateShapes(s,o,i),f=!1,d=t.bufferSync(o),h=t.bufferSync(s),g=t.data.get(a.dataId).values[0],y=tx(d,h,i,m,p,l,u,c,g,f);return t.makeTensorInfo(i,y.dtype,y.values)}var YL={kernelName:Ou,backendName:"cpu",kernelFunc:Cte};function vte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],u=I.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(c=>{let m=[...p];m[i]=c;let f=Us({inputs:{x:o},backend:t,attrs:{begin:l,size:m}});return l[i]+=c,f})}var QL={kernelName:bs,backendName:"cpu",kernelFunc:vte};var ZL={kernelName:Xa,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;ne(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let u=o[i];s[i]=u*u}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var wte=$e(Ts,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),JL={kernelName:Ts,backendName:"cpu",kernelFunc:wte};function Ste(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n;ne(o,"stridedSlice");let{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:k}=kt.sliceInfo(o.shape,s,a,i,u,l,p,c,m),v;if(h)v=st({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=kt.computeOutShape(T,x,k),A=Us({inputs:{x:o},backend:t,attrs:{begin:T,size:N}});v=st({inputs:{x:A},backend:t,attrs:{shape:d}}),t.disposeIntermediateTensorInfo(A)}else{let N=t.bufferSync(o),A=Ky(f,N,k,T);v=t.makeTensorInfo(d,A.dtype,A.values)}return v}var e$={kernelName:ga,backendName:"cpu",kernelFunc:Ste};function _te(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:c}=e,m=t.data.get(p.dataId).values,f=t.data.get(c.dataId).values,[d,h]=Vy(m,f,o,s,a,i,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(c.shape,"int32",h)]}var t$={kernelName:zu,backendName:"cpu",kernelFunc:_te};function Ate(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.data.get(s.dataId).values,u=t.data.get(a.dataId).values[0],[l,p,c]=jy(i,u,o),m=p.length;return[t.makeTensorInfo([m,2],"int32",l),t.makeTensorInfo([m],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(c))]}var r$={kernelName:Ic,backendName:"cpu",kernelFunc:Ate};function Nte(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.data.get(s.dataId).values,i=Hy(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var n$={kernelName:Cc,backendName:"cpu",kernelFunc:Nte};var Dte=$e(ba,r=>Math.tan(r)),o$={kernelName:ba,backendName:"cpu",kernelFunc:Dte};var Pte=$e(Uo,r=>Math.tanh(r)),s$={kernelName:Uo,backendName:"cpu",kernelFunc:Pte};function Fte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;ne(o,"tile");let a=qy(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var a$={kernelName:Sn,backendName:"cpu",kernelFunc:Fte};function Mte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;ne(o,"topk");let i=t.data.get(o.dataId).values,[u,l]=Xy(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}var i$={kernelName:ya,backendName:"cpu",kernelFunc:Mte};function Ete(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=t,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],y=b.computeStrides(o.shape),T=y[0],x=y[1],k=y[2],v=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(g));v.fill(u);let N=n.data.get(o.dataId).values,A=n.data.get(s.dataId).values;for(let E=0;E<p;++E){let $=s.shape[0]===1?A:A.subarray(E*8,E*8+8);for(let U=0;U<d;++U)for(let K=0;K<h;++K)for(let B=0;B<f;++B){let V,j=$[6]*K+$[7]*U+1;if(j===0)continue;let q=($[0]*K+$[1]*U+$[2])/j,J=($[3]*K+$[4]*U+$[5])/j,Y=l$(q,m,i),Q=l$(J,c,i);switch(a){case"nearest":V=Ote(N,c,m,T,x,k,E,Q,Y,B,u);break;case"bilinear":V=zte(N,c,m,T,x,k,E,Q,Y,B,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let oe=E*T+U*x+K*k+B;v[oe]=V}return n.makeTensorInfo(g,o.dtype,v)}return{dataId:n.write(v,g,o.dtype),shape:o.shape,dtype:o.dtype}}var u$={kernelName:xa,backendName:"cpu",kernelFunc:Ete};function l$(r,e,t){switch(t){case"reflect":return Rte(r,e);case"wrap":return Lte(r,e);case"nearest":return Bte(r,e);case"constant":default:return $te(r,e)}}function Rte(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return b.clamp(0,t,e-1)}function Lte(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return b.clamp(0,t,e-1)}function $te(r,e){return r}function Bte(r,e){return b.clamp(0,r,e-1)}function Bh(r,e,t,n,o,s,a,i,u,l,p){let c=a*n+i*o+u*s+l;return 0<=i&&i<e&&0<=u&&u<t?r[c]:p}function Ote(r,e,t,n,o,s,a,i,u,l,p){let c=Math.round(i),m=Math.round(u);return Bh(r,e,t,n,o,s,a,c,m,l,p)}function zte(r,e,t,n,o,s,a,i,u,l,p){let c=Math.floor(i),m=Math.floor(u),f=c+1,d=m+1,h=(d-u)*Bh(r,e,t,n,o,s,a,c,m,l,p)+(u-m)*Bh(r,e,t,n,o,s,a,c,d,l,p),g=(d-u)*Bh(r,e,t,n,o,s,a,f,m,l,p)+(u-m)*Bh(r,e,t,n,o,s,a,f,d,l,p);return(f-i)*h+(i-c)*g}function Gte(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;ne(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:l}=Yy(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var p$={kernelName:vc,backendName:"cpu",kernelFunc:Gte};function Wte(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],u=new Array(a-1),l=0;for(let f=0;f<a;f++)f!==s&&(u[l++]=o.shape[f]);let p=new Array(a).fill(0),c=o.shape.slice();c[s]=1;let m=new Array(i);for(let f=0;f<m.length;f++){p[s]=f;let d=Us({inputs:{x:o},backend:t,attrs:{begin:p,size:c}});m[f]=st({inputs:{x:d},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(d)}return m}var c$={kernelName:ys,backendName:"cpu",kernelFunc:Wte};function Ute(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;ne(o,"unsortedSegmentSum");let i=o.shape.length,u=s.shape.length,l=[],p=[],c=i-u,m=s;for(let d=0;d<c;++d){let h=Am({inputs:{input:m},backend:t,attrs:{dim:d+1}});m=h,p.push(h)}for(let d=0;d<a;++d){let h=b.createScalarValue(d,"int32"),g=t.makeTensorInfo([],"int32",h),y=mw({inputs:{a:g,b:m},backend:t}),T=Gs({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),x=xp({inputs:{a:T,b:o},backend:t}),k=fu({inputs:{x},backend:t,attrs:{axis:0,keepDims:!1}});l.push(k),p.push(g),p.push(y),p.push(T),p.push(x),p.push(k)}let f=Ww({inputs:l,backend:t,attrs:{axis:0}});return p.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var m$={kernelName:Gu,backendName:"cpu",kernelFunc:Ute};var Kte=[KE,oE,VE,jE,lE,HE,qE,XE,YE,QE,ZE,JE,eR,tR,rR,oR,sR,aR,iR,UE,uR,lR,pR,cR,uE,pE,mR,sE,fR,hR,bR,yR,gR,TR,kR,xR,IR,CR,vR,wR,SR,_R,AR,NR,DR,PR,FR,ER,MR,Rh,LR,$E,$R,cE,BR,mE,OR,fE,zR,GR,WR,dE,UR,KR,VR,jR,HR,hE,gE,aE,qR,dR,XR,YR,QR,BE,bE,yE,ZR,xE,JR,eL,tL,rL,nL,oL,TE,aL,iL,uL,lL,cL,sL,mL,fL,kE,dL,hL,yL,IE,CE,xL,TL,kL,vE,IL,wL,SL,ex,_L,OE,SE,AL,iE,NL,zE,GE,WE,DL,PL,FL,ML,EL,RL,LL,_E,$L,BL,OL,NE,zL,GL,WL,DE,gL,KL,VL,jL,HL,qL,XL,YL,QL,FE,ZL,ME,JL,e$,t$,r$,n$,RE,RR,o$,s$,a$,i$,wE,u$,p$,c$,m$,CL];for(let r of Kte)Ui(r);var x$={};Ye(x$,{assertNotComplex:()=>Ea,bindCanvasToFramebuffer:()=>ere,bindColorTextureToFramebuffer:()=>Wh,bindTextureToProgramUniformSampler:()=>nS,bindTextureUnit:()=>g$,bindVertexBufferToProgramAttribute:()=>rx,callAndCheck:()=>Se,canBeRepresented:()=>Vw,createFragmentShader:()=>Hw,createFramebuffer:()=>eS,createProgram:()=>qw,createStaticIndexBuffer:()=>Qw,createStaticVertexBuffer:()=>Yw,createTexture:()=>Zw,createVertexShader:()=>jw,getBatchDim:()=>hu,getExtensionOrThrow:()=>Nm,getFramebufferErrorMessage:()=>b$,getMaxTexturesInShader:()=>aS,getNumChannels:()=>Zte,getProgramUniformLocation:()=>rS,getProgramUniformLocationOrThrow:()=>tS,getRowsCols:()=>gu,getShapeAs3D:()=>Uh,getTextureShapeFromLogicalShape:()=>oS,getWebGLDisjointQueryTimerVersion:()=>iS,getWebGLErrorMessage:()=>h$,getWebGLMaxTextureSize:()=>sS,hasExtension:()=>Qn,isCapableOfRenderingToFloatTexture:()=>uS,isDownloadFloatTextureEnabled:()=>lS,isReshapeFree:()=>ul,isWebGLFenceEnabled:()=>cS,isWebGLVersionEnabled:()=>ix,linkProgram:()=>Xw,resetMaxTextureSize:()=>tre,resetMaxTexturesInShader:()=>rre,unbindColorTextureFromFramebuffer:()=>nx,unbindTextureUnit:()=>Jte,validateFramebuffer:()=>Dm,validateProgram:()=>Gh,validateTextureSize:()=>Jw});var Ip={},Uw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Kw(r,e){Ip[r]=e}function Zo(r){if(!(r in Ip)){let t=jte(r);if(t!==null)Ip[r]=t;else return console.log("Could not get context for WebGL version",r),null}let e=Ip[r];return e.isContextLost()?(delete Ip[r],Zo(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Ip[r])}function Vte(r){if(typeof OffscreenCanvas!="undefined"&&r===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function jte(r){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=Vte(r);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete Ip[r]},!1),r===1?e.getContext("webgl",Uw)||e.getContext("experimental-webgl",Uw):e.getContext("webgl2",Uw)}var il;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(il||(il={}));var Yr;(function(o){o[o.RENDER=0]="RENDER",o[o.UPLOAD=1]="UPLOAD",o[o.PIXELS=2]="PIXELS",o[o.DOWNLOAD=3]="DOWNLOAD"})(Yr||(Yr={}));var Or;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Or||(Or={}));function Cp(r,e){return[e,r]}function f$(r,e){return r*e}function Oh(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function mi(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function d$(r,e){let[t,n]=mi(r,e);return t*n*4}function zh(r,e){let t=r,n,o,s,a,i,u,l,p,c,m;return G().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,l=4,p=1,c=t.HALF_FLOAT,m=t.FLOAT):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,l=4,p=4,c=e!=null?e.HALF_FLOAT_OES:null,m=r.FLOAT),u=r.RGBA,{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:p,textureTypeHalfFloat:c,textureTypeFloat:m}}function Se(r,e){let t=e();return G().getBool("DEBUG")&&Hte(r),t}function Hte(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+h$(r,e))}var qte=596e-10,Xte=65504;function Vw(r){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||qte<Math.abs(r)&&Math.abs(r)<Xte)}function h$(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Nm(r,e){return du(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function jw(r,e){let t=du(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Se(r,()=>r.shaderSource(t,e)),Se(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function Hw(r,e){let t=du(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Se(r,()=>r.shaderSource(t,e)),Se(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw Qte(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var Yte=/ERROR: [0-9]+:([0-9]+):/g;function Qte(r,e){let t=Yte.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((c,m)=>b.rightPad((m+1).toString(),s)+c),i=0;for(let c=0;c<a.length;c++)i=Math.max(a[c].length,i);let u=a.slice(0,n-1),l=a.slice(n-1,n),p=a.slice(n);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function qw(r){return du(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function Xw(r,e){if(Se(r,()=>r.linkProgram(e)),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Gh(r,e){if(Se(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Yw(r,e){let t=du(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Se(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),Se(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function Qw(r,e){let t=du(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Se(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),Se(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function Zte(){return G().getNumber("WEBGL_VERSION")===2?1:4}function Zw(r){return du(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function Jw(r,e){let t=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function eS(r){return du(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function rx(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(Se(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),Se(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),Se(r,()=>r.enableVertexAttribArray(i)),!0)}function g$(r,e,t){y$(r,t),Se(r,()=>r.activeTexture(r.TEXTURE0+t)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function Jte(r,e){y$(r,e),Se(r,()=>r.activeTexture(r.TEXTURE0+e)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function tS(r,e,t){return du(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function rS(r,e,t){return r.getUniformLocation(e,t)}function nS(r,e,t,n){Se(r,()=>g$(r,e,n)),Se(r,()=>r.uniform1i(t,n))}function ere(r){Se(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),Se(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),Se(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function Wh(r,e,t){Se(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Se(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function nx(r,e){Se(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Se(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Dm(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+b$(r,e))}function b$(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function du(r,e,t){let n=Se(r,()=>e());if(n==null)throw new Error(t);return n}function y$(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function hu(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function gu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Uh(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[hu(r),...gu(r)]),e}function oS(r,e=!1){let t=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?b.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let n=b.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=hu(r),s=2,a=2;return r.length&&([s,a]=gu(r)),n=o*(s/2)*(a/2),b.sizeToSquarishShape(n).map(i=>i*2)}return b.sizeToSquarishShape(n)}function ox(r){return r%2==0}function ul(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||ox(t)&&ox(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&ox(r[0])&&ox(e[0])}var sx,ax;function sS(r){if(sx==null){let e=Zo(r);sx=e.getParameter(e.MAX_TEXTURE_SIZE)}return sx}function tre(){sx=null}function rre(){ax=null}function aS(r){if(ax==null){let e=Zo(r);ax=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ax)}function iS(r){if(r===0)return 0;let e,t=Zo(r);return Qn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Qn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Qn(r,e){return r.getExtension(e)!=null}function ix(r){try{if(Zo(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function uS(r){if(r===0)return!1;let e=Zo(r);if(r===1){if(!Qn(e,"OES_texture_float"))return!1}else if(!Qn(e,"EXT_color_buffer_float"))return!1;return pS(e)}function lS(r){if(r===0)return!1;let e=Zo(r);if(r===1){if(!Qn(e,"OES_texture_float")||!Qn(e,"WEBGL_color_buffer_float"))return!1}else{if(Qn(e,"EXT_color_buffer_float"))return pS(e);let n="EXT_color_buffer_half_float";if(Qn(e,n)){let o=e.getExtension(n);return nre(e,o)}return!1}return pS(e)}function pS(r){let e=zh(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function nre(r,e){let t=zh(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function cS(r){return r!==2?!1:Zo(r).fenceSync!=null}function Ea(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var Oe=G();Oe.registerFlag("HAS_WEBGL",()=>Oe.getNumber("WEBGL_VERSION")>0);Oe.registerFlag("WEBGL_VERSION",()=>ix(2)?2:ix(1)?1:0);Oe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Oe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Oe.get("WEBGL_VERSION")===2);Oe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Oe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Oe.registerFlag("WEBGL_PACK",()=>Oe.getBool("HAS_WEBGL"));Oe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_CLIP",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_REDUCE",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_CONV_IM2COL",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>sS(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>aS(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Oe.getNumber("WEBGL_VERSION");return r===0?0:iS(r)});Oe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Oe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Vi.isMobile());Oe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>uS(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Oe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Oe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Oe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>lS(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>cS(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Oe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Oe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Oe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Vi.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Oe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Oe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Oe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Oe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Zt(){let r,e,t,n,o,s,a,i,u,l;return G().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function Ra(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function vp(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function ore(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function T$(r,e,t="index"){let n=r.map((s,a)=>a),o=ore(n,e);return o.map((s,a)=>{let i=`int ${r[a]} = ${t} / ${o[a]}`,u=a===o.length-1?`int ${r[a+1]} = ${t} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${u};`}).join("")}function Pm(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Fm(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var ux=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:k$}=I;function I$(r,e,t){let n=[];if(r.forEach(f=>{let d=b.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${d>1?`[${d}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){let{uniformShape:h}=lx(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(f=>sre(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Zt(),u=ure(i),l,p,c=cre(i);return e.isPacked?(l=are(e.logicalShape,a,t.enableShapeUniforms),p=pre(i)):(l=ire(e.logicalShape,a,t.enableShapeUniforms),p=lre(i)),t.packedInputs&&(c+=hre),[c,u,p,o,l,s,t.userCode].join(`
`)}function Mm(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return _re(r,e);case 1:return Nre(r,e);case 2:return Pre(r,e);case 3:return Mre(r,e);case 4:return Rre(r,e);case 5:return Lre(r);case 6:return $re(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function C$(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return Sre(r);case 1:return Are(r,e);case 2:return Dre(r,e);case 3:return Fre(r,e);default:return Ere(r,e)}}function sre(r,e,t=!1,n){let o="";t?o+=C$(r,n):o+=Mm(r,n);let s=r.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(t?o+=Bre(r,e):o+=Ore(r,e)),o}function are(r,e,t){switch(r.length){case 0:return v$();case 1:return gre(r,e,t);case 2:return vre(r,e,t);case 3:return yre(r,e,t);default:return Tre(r,e,t)}}function ire(r,e,t){switch(r.length){case 0:return v$();case 1:return bre(r,e,t);case 2:return wre(r,e,t);case 3:return xre(r,e,t);case 4:return kre(r,e,t);case 5:return Ire(r,e);case 6:return Cre(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function ure(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function lre(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function pre(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function cre(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${mre}
    ${fre}
    ${dre}
  `}var mre=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,fre=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,dre=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,hre=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function v$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function gre(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function bre(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function yre(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function xre(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${vp(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Ra(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Tre(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",u="b, r, c";for(let l=2;l<r.length-1;l++)a*=r[r.length-l-1],i=`
      int b${l} = index / ${a};
      index -= b${l} * ${a};
    `+i,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function kre(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${vp(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Ra(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Ire(r,e){let t=Ra(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Cre(r,e){let t=Ra(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function vre(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function wre(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function wp(r){return`offset${r}`}function Sre(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Zt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function _re(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=wp(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;let[i,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Are(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Zt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function Nre(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Em(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=wp(t);return a===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Dre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],u=Zt();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Pre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=b.squeezeShape(t),u=a;if(u.length<t.length){let m=Rm(r,u),f=["row","col"];return`
      ${Mm(m,e)}
      float ${o}(int row, int col) {
        return ${o}(${Lm(f,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Em(r)}
      }
    `;let l=s[0],p=s[1],c=wp(n);return p===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${c};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${c};
    vec2 uv = uvFromFlat(${l}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function Fre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let m=t.slice(1),f=[1,2],d=Rm(r,m),h=["b","row","col"];return`
        ${C$(d,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Lm(h,f)});
        }
      `}let i=Zt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let u=a[0],l=a[1],p=Math.ceil(t[2]/2),c=p*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${c}, ${p}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function Mre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:u}=b.squeezeShape(t),l=i;if(l.length<t.length){let h=Rm(r,l),g=["row","col","depth"];return`
        ${Mm(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Lm(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${Em(r)}
      }
    `;let p=r.shapeInfo.texShape,c=p[0],m=p[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${c}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(m===a&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `;let d=wp(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${a} + depth + ${d};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${d};
        vec2 uv = uvFromFlat(${c}, ${m}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Ere(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Zt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],p=u[1],c=Math.ceil(s[a-1]/2),m=c*Math.ceil(s[a-2]/2),f="int b, int row, int col",d=`b * ${m} + (row / 2) * ${c} + (col / 2)`;for(let h=2;h<a-1;h++)f=`int b${h}, `+f,m*=s[a-h-1],d=`b${h} * ${m} + `+d;return`
    vec4 ${n}(${f}) {
      int index = ${d};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${l});
      return ${o.texture2D}(${t}, uv);
    }
  `}function Rre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:u,keptDims:l}=b.squeezeShape(t);if(u.length<t.length){let T=Rm(r,u),x=["row","col","depth","depth2"];return`
      ${Mm(T,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Lm(x,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${Em(r)}
      }
    `;let p=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,m=c[0],f=c[1],d=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(f===i&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${d}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===s&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=wp(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${d}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function Lre(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:u,keptDims:l}=b.squeezeShape(e);if(u.length<e.length){let h=Rm(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${Mm(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Lm(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${Em(r)}
      }
    `;let p=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,m=c[0],f=c[1];if(f===i&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;let d=wp(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function $re(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(e);if(o.length<e.length){let g=Rm(r,o),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Mm(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Lm(y,s)});
      }
    `}let a=e[5],i=e[4]*a,u=e[3]*i,l=e[2]*u,p=e[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${l}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Em(r)}
      }
    `;let c=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===p&&c==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===a&&c==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=wp(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${l} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Em(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Bre(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=k$(r.shapeInfo.logicalShape,e.logicalShape),u=He(a),l=a-s,p,c=["x","y","z","w","u","v"];s===0?p="":a<2&&i.length>=1?p="coords = 0;":p=i.map(T=>`coords.${c[T+l]} = 0;`).join(`
`);let m="";a<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((T,x)=>`coords.${c[x+l]}`).join(", ");let f="return outputValue;",h=b.sizeFromShape(r.shapeInfo.logicalShape)===1,y=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!y)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!y)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(i.length){let T=s-2,x=s-1;i.indexOf(T)>-1&&i.indexOf(x)>-1?f="return vec4(outputValue.x);":i.indexOf(T)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${m});
      ${f}
    }
  `}function Ore(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===u&&r.shapeInfo.flatOffset==null&&b.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let l=He(u),p=k$(r.shapeInfo.logicalShape,e.logicalShape),c=u-i,m,f=["x","y","z","w","u","v"];i===0?m="":u<2&&p.length>=1?m="coords = 0;":m=p.map(h=>`coords.${f[h+c]} = 0;`).join(`
`);let d="";return u<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((h,g)=>`coords.${f[g+c]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${m}
      return get${n}(${d});
    }
  `}function He(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function lx(r,e,t){let{newShape:n,keptDims:o}=b.squeezeShape(e),s=e.length,a=r&&s===3&&e[0]===1,i=a?e.slice(1):n,u=!r&&s>1&&!b.arraysEqual(e,t)&&n.length<s||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:o}}function Rm(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function Lm(r,e){return e.map(t=>r[t]).join(", ")}function w$(r,e,t,n){let o=t.map((x,k)=>{let v={logicalShape:x.shape,texShape:x.isUniform?null:x.texData.texShape,isUniform:x.isUniform,isPacked:x.isUniform?!1:x.texData.isPacked,flatOffset:null};return x.texData!=null&&x.texData.slice!=null&&x.texData.slice.flatOffset>0&&(v.flatOffset=x.texData.slice.flatOffset),{name:e.variableNames[k],shapeInfo:v}}),s=o.map(x=>x.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=I$(o,a,e),u=r.createProgram(i),l=null,p=r.getUniformLocation(u,"NAN",!1);G().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(u,"INFINITY",!1));let c=!1,m={},f={},d={};for(let x=0;x<e.variableNames.length;x++){let k=e.variableNames[x];m[k]=r.getUniformLocation(u,k,c),m[`offset${k}`]=r.getUniformLocation(u,`offset${k}`,c),e.enableShapeUniforms&&(f[`${k}Shape`]=r.getUniformLocation(u,`${k}Shape`,c),d[`${k}TexShape`]=r.getUniformLocation(u,`${k}TexShape`,c))}let h,g,y;e.enableShapeUniforms&&(h=r.getUniformLocation(u,"outShape",c),y=r.getUniformLocation(u,"outShapeStrides",c),g=r.getUniformLocation(u,"outTexShape",c));let T=[];return e.customUniforms&&e.customUniforms.forEach((x,k)=>{T[k]=r.getUniformLocation(u,x.name,c)}),{program:e,source:i,webGLProgram:u,uniformLocations:m,customUniformLocations:T,inShapeInfos:s,outShapeInfo:a,infLoc:l,nanLoc:p,inShapesLocations:f,inTexShapesLocations:d,outShapeLocation:h,outShapeStridesLocation:y,outTexShapeLocation:g}}function S$(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!b.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function _$(r,e,t,n,o){e.program.enableShapeUniforms||(S$(e.inShapeInfos,t),S$([e.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s,a[0],a[1]):r.setOutputMatrixTexture(s,a[0],a[1]),r.setProgram(e.webGLProgram),G().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((u,l)=>{let p=e.program.variableNames[l],c=e.uniformLocations[p],m=e.uniformLocations[`offset${p}`],f=e.inShapesLocations[`${p}Shape`],d=e.inTexShapesLocations[`${p}TexShape`];if(f){let{uniformShape:h}=lx(e.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(f,new Int32Array(h));break;case 2:r.gl.uniform2iv(f,new Int32Array(h));break;case 3:r.gl.uniform3iv(f,new Int32Array(h));break;case 4:r.gl.uniform4iv(f,new Int32Array(h));break;default:break}}if(d&&r.gl.uniform2i(d,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(b.sizeFromShape(u.shape)<2)r.gl.uniform1f(c,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(c,h)}return}u.texData.slice!=null&&m!=null&&r.gl.uniform1i(m,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture,c,l)}});let i=e.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let u=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break;default:break}}e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((u,l)=>{let p=e.customUniformLocations[l],c=o[l];if(u.type==="float")r.gl.uniform1fv(p,c);else if(u.type==="vec2")r.gl.uniform2fv(p,c);else if(u.type==="vec3")r.gl.uniform3fv(p,c);else if(u.type==="vec4")r.gl.uniform4fv(p,c);else if(u.type==="int")r.gl.uniform1iv(p,c);else if(u.type==="ivec2")r.gl.uniform2iv(p,c);else if(u.type==="ivec3")r.gl.uniform3iv(p,c);else if(u.type==="ivec4")r.gl.uniform4iv(p,c);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function A$(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let u=a.texData.texShape,{useSqueezeShape:l,uniformShape:p,keptDims:c}=lx(r.packedInputs,a.shape,u),m="",f="",d="";if(p.length===1&&r.packedInputs){let v=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${v[0]>1}_${v[1]>1}`}else if(p.length===2&&!r.packedInputs)f=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!r.packedInputs){let v=b.computeStrides(p);d=`${v[0]===u[1]}_${v[v.length-1]===u[1]}`}let h=a.shape.length,g=p.length===2&&b.arraysEqual(a.shape,u),y=b.sizeFromShape(a.shape)===1,T=I.getBroadcastDims(a.shape,t.shape),x=!r.packedInputs&&h===t.shape.length&&b.arraysEqual(u,t.texData.texShape),k=r.packedInputs||p.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${x}_${l?c:""}_${p.length}_${y}_${T}_${g}_${m}_${f}_${d}_${k}_${i}`}else{let u=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${u}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${G().getNumber("WEBGL_VERSION")}`,s}function tr(r){return G().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var mS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=il.DENSE;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Zt();this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?vp(["r","c","d"],e):Ra(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var fS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=il.DENSE;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Zt();this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?vp(["r","c","d"],e):Ra(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var dS=class{constructor(e){this.variableNames=["A"];this.outTexUsage=Yr.DOWNLOAD;let t=Zt();this.outputShape=e,this.userCode=`
      ${ux}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var hS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=Yr.DOWNLOAD;let t=Zt();this.outputShape=e,this.userCode=`
      ${ux}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var gS=class{constructor(e,t=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Zt();this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Fm():Pm(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var bS=class{constructor(e,t=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Zt();this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let u=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Fm():Pm(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var N$={};Ye(N$,{bindVertexProgramAttributeStreams:()=>SS,createBufferFromOutputTexture:()=>NS,createFloat16MatrixTexture:()=>IS,createFloat16PackedMatrixTexture:()=>wS,createFloat32MatrixTexture:()=>kS,createIndexBuffer:()=>TS,createPackedMatrixTexture:()=>vS,createUnsignedBytesMatrixTexture:()=>CS,createVertexBuffer:()=>xS,createVertexShader:()=>yS,downloadByteEncodedFloatMatrixFromOutputTexture:()=>PS,downloadFloat32MatrixFromBuffer:()=>DS,downloadMatrixFromPackedOutputTexture:()=>MS,downloadPackedMatrixFromBuffer:()=>FS,getInternalFormatForFloat16MatrixTexture:()=>cx,getInternalFormatForFloat16PackedMatrixTexture:()=>dx,getInternalFormatForFloat32MatrixTexture:()=>px,getInternalFormatForPackedMatrixTexture:()=>fx,getInternalFormatForUnsignedBytesMatrixTexture:()=>mx,uploadDenseMatrixToTexture:()=>_S,uploadPixelDataToTexture:()=>AS});function yS(r){let e=Zt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return jw(r,t)}function xS(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Yw(r,e)}function TS(r){let e=new Uint16Array([0,1,2,2,1,3]);return Qw(r,e)}function Kh(r,e,t,n,o,s){Jw(e,t);let a=Zw(r),i=r.TEXTURE_2D;return Se(r,()=>r.bindTexture(i,a)),Se(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Se(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Se(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),Se(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),Se(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null)),a}function px(r){return r.internalFormatFloat}function kS(r,e,t,n){let[o,s]=Cp(e,t);return Kh(r,o,s,px(n),n.textureFormatFloat,r.FLOAT)}function cx(r){return r.internalFormatHalfFloat}function IS(r,e,t,n){let[o,s]=Cp(e,t);return Kh(r,o,s,cx(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function mx(r){return r.downloadTextureFormat}function CS(r,e,t,n){let[o,s]=Cp(e,t);return Kh(r,o,s,mx(n),r.RGBA,r.UNSIGNED_BYTE)}function fx(r){return r.internalFormatPackedFloat}function vS(r,e,t,n){let[o,s]=mi(e,t);return Kh(r,o,s,fx(n),r.RGBA,r.FLOAT)}function dx(r){return r.internalFormatPackedHalfFloat}function wS(r,e,t,n){let[o,s]=mi(e,t);return Kh(r,o,s,dx(n),r.RGBA,n.textureTypeHalfFloat)}function SS(r,e,t){let n=0,o=3*4,s=3*4+2*4;return Se(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),rx(r,e,"clipSpacePos",t,3,s,n)&&rx(r,e,"uv",t,2,s,o)}function _S(r,e,t,n,o,s){Se(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,u;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,u=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,u=s.internalFormatPackedFloat),a.set(o),Se(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,t,n,0,r.RGBA,i,a)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function AS(r,e,t){Se(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?Se(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):Se(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),Se(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function NS(r,e,t,n){let o=r.createBuffer();Se(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return Se(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),Se(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),Se(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function DS(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function PS(r,e,t,n){let[o,s]=Cp(e,t),a=4,i=new Uint8Array(f$(e*t,a));return Se(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function FS(r,e,t,n,o,s,a,i){let u=r,l=new Float32Array(d$(s,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function MS(r,e,t){let n=new Float32Array(e*t*4);return Se(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var hx=class{constructor(e){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let t=G().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Kw(t,e)):this.gl=Zo(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(G().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Nm(this.gl,s),Qn(this.gl,a))this.textureHalfFloatExtension=Nm(this.gl,a);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Qn(this.gl,o))this.colorBufferHalfFloatExtension=Nm(this.gl,o);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Qn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Qn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=xS(this.gl),this.indexBuffer=TS(this.gl),this.framebuffer=eS(this.gl),this.textureConfig=zh(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Se(e,()=>e.finish()),Se(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Se(e,()=>e.deleteFramebuffer(this.framebuffer)),Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Se(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Se(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),kS(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),IS(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),CS(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),AS(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),_S(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),wS(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),vS(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(nx(this.gl,this.framebuffer),this.outputTexture=null),Se(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>PS(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return FS(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return DS(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=NS(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(G().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>MS(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=Hw(t,e);this.vertexShader==null&&(this.vertexShader=yS(t));let o=qw(t);return Se(t,()=>t.attachShader(o,this.vertexShader)),Se(t,()=>t.attachShader(o,n)),Xw(t,o),this.debug&&Gh(t,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=SS(t,this.program,this.vertexBuffer)),o}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Se(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Gh(this.gl,this.program),Se(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?tS(this.gl,e,t):rS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Se(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),nS(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=mi(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Gh(this.gl,this.program),Dm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Se(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Se(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Nm(this.gl,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=zre(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Wh(this.gl,e,this.framebuffer),this.debug&&Dm(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Wh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Dm(this.gl)):nx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;Wh(o,e,this.framebuffer),this.debug&&Dm(o),this.outputTexture=e,Se(o,()=>o.viewport(0,0,t,n)),Se(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),Se(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function zre(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:D$,bincountImpl:gx,bincountReduceImpl:P$,ceilImpl:F$,concatImpl:M$,equalImpl:E$,expImpl:R$,expm1Impl:L$,floorImpl:$$,gatherNdImpl:B$,gatherV2Impl:O$,greaterImpl:z$,greaterEqualImpl:G$,lessImpl:W$,lessEqualImpl:U$,linSpaceImpl:K$,logImpl:V$,maxImpl:j$,maximumImpl:H$,minimumImpl:q$,multiplyImpl:X$,negImpl:Y$,notEqualImpl:Q$,prodImpl:Z$,rangeImpl:J$,rsqrtImpl:eB,sigmoidImpl:tB,simpleAbsImpl:bx,sliceImpl:rB,sparseFillEmptyRowsImpl:nB,sparseReshapeImpl:oB,sparseSegmentReductionImpl:yx,sqrtImpl:sB,stridedSliceImpl:aB,stringNGramsImpl:iB,stringSplitImpl:uB,stringToHashBucketFastImpl:lB,subImpl:pB,tileImpl:cB,topKImpl:mB,transposeImpl:Sp,uniqueImpl:fB}=wm;function ES(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function ar(r,e){return e===1?[r]:ES(r,e)}function dB(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var RS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=ar("rc",t),o=He(t),s=Wre(t,e,n),a=Ure(t,e[e.length-1],e[e.length-2],n),i=Kre(e,n);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${i}));
          }
        }
      `}}};function Gre(r,e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<r;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}function Wre(r,e,t){if(r===1)return`rc > ${e[0]}`;let n="";for(let o=r-2;o<r;o++)n+=`${t[o]} >= ${e[o]}`,o<r-1&&(n+="||");return n}function Ure(r,e,t,n){if(r===1)return"";let o=n.slice(-2);return`
    int r = ${o[0]};
    int c = ${o[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${e};
    bool rEdge = rp1 >= ${t};
  `}function Kre(r,e){let t=r.length,n=Gre(t,e);return t===1?`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${n[0]}),
          cEdge ? 0. : getA(${n[1]}),
          rEdge ? 0. : getA(${n[2]}),
          rEdge || cEdge ? 0. : getA(${n[3]})`}var Vh=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2==1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Vre(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Fm():Pm(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Vre(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?T$(["r","c","d"],"inputShape"):Ra(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var LS=class{constructor(e){this.gpgpu=e;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(e,t,n){let o=gB(t,n),s=bB(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=hB(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let i;return o===Or.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===Or.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===Or.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===Or.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===Or.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=gB(n,o),a=bB(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=hB(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=G().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[a],p=l.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(p,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function jre(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}function hB(r,e,t,n,o){let s=Hre(e,n),a;if(o){let[u,l]=mi(r[0],r[1]);a=u*l}else{let[u,l]=Cp(r[0],r[1]);a=u*l}let i=jre(t,s);return a*i}function Hre(r,e){switch(r){case Or.PACKED_2X2_FLOAT32:return fx(e);case Or.PACKED_2X2_FLOAT16:return dx(e);case Or.UNPACKED_FLOAT32:return px(e);case Or.UNPACKED_FLOAT16:return cx(e);case Or.PACKED_4X1_UNSIGNED_BYTE:return mx(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function qre(r){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?Or.PACKED_2X2_FLOAT32:Or.UNPACKED_FLOAT32:r?Or.PACKED_2X2_FLOAT16:Or.UNPACKED_FLOAT16}function gB(r,e){if(r===Yr.UPLOAD)return Or.PACKED_2X2_FLOAT32;if(r===Yr.RENDER||r==null)return qre(e);if(r===Yr.DOWNLOAD||r===Yr.PIXELS)return Or.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function bB(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var Rn=class{constructor(e,t){this.variableNames=["A"];this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Dr="if (isnan(x)) return x;",yB="return x;",$S="return abs(x);";var xB="return (x >= 0.0) ? x : (exp(x) - 1.0);",TB=Dr+`
  return (x < 0.0) ? 0.0 : x;
`,kB=Dr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,jh="return x;",IB="return 1.0 / (1.0 + exp(-1.0 * x));";var CB="return x;",vB=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,wB=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,SB=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_B="return 1.0 / (1.0 + exp(-1.0 * x));",La=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var BS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=e;let t=e.length,n=ar("rc",t),o=He(t),s=dB(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var Xre=Tr.whereImpl,Yre=1e-7,Qre=1e-4,xx={};function Zre(r){return r in xx||(xx[r]={}),xx[r]}var Jre=G().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),ene=600;function tne(){return G().global.screen==null?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*ene/1024/1024}var OS=class extends ns{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Zo(G().getNumber("WEBGL_VERSION"));this.binaryCache=Zre(G().getNumber("WEBGL_VERSION")),this.gpgpu=new hx(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new LS(this.gpgpu),this.numMBBeforeWarning=tne(),this.texData=new Wa(this,Vo())}nextDataId(){return OS.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:Yr.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if(G().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:Yr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:u}=t;if(a!=null){let m;u?m=new La(i,jh):m=new Rn(i,jh);let f=this.runWebGLProgram(m,[{dataId:e,shape:i,dtype:o}],o),d=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),d}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let l=this.activeTimers!=null,p;l&&(p=b.now());let c;if(o==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);c=I.mergeRealAndImagArrays(m,f)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=b.now()-p),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let d=this.pendingRead.get(e);return new Promise(h=>d.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(s!=null){let d;u?d=new La(o,jh):d=new Rn(o,jh);let h=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(G().getBool("DEBUG")&&!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&G().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,p;if(a!=="complex64"&&G().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let d=this.texData.get(p.dataId);l=this.gpgpu.createBufferFromTexture(d.texture,...Oh(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(a==="complex64"){let d=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=d[0],g=d[1];c=I.mergeRealAndImagArrays(h,g)}else if(l==null)c=this.getValuesFromTexture(e);else{let d=b.sizeFromShape(o);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,d)}if(p!=null&&this.disposeIntermediateTensorInfo(p),l!=null){let d=this.gpgpu.gl;Se(d,()=>d.deleteBuffer(l))}let m=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(d=>d(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Vo().removeDataId(e,this),this.pendingDeletes--),m}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!Vw(n))throw G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=b.sizeFromShape(t);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),d=this.gpgpu.downloadMatrixFromPackedTexture(f.texture,...Oh(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),d}let a=G().getBool("WEBGL_PACK")&&o===!0,i=a?Uh(t):t,u=a?new hS(i):new dS(i),l=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),p=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(s);i.kernelMs=b.sum(u),i.getExtraProfileInfo=()=>u.map((l,p)=>({name:a[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}async getQueryTime(e){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Jre){return G().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&b.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Xre(e.shape,t)}packedUnaryOp(e,t,n){let o=new La(e.shape,t),s=this.compileAndRun(o,[e],n);return Vo().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=bx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,$S,e.dtype);let t=new Rn(e.shape,$S),n=this.compileAndRun(t,[e]);return Vo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:o}=this.makeTensorInfo(e,t,n);return Vo().makeTensorFromDataId(o,e,t,this)}unpackTensor(e){let t=new BS(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new RS(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[hu(e.shape),...gu(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[hu(t),...gu(t)],a=new Vh(s,n),i=!0,u=[n],l=this.runWebGLProgram(a,[o],e.dtype,u,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:o,dtype:s}=t,a=Uh(o),i,u=Oh(a);n?i=new fS(a):i=new mS(a);let l=!0,p=[u],c=this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,p,l);return{dtype:s,shape:o,dataId:c.dataId}}runWebGLProgram(e,t,n,o,s=!1){let a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===il.DENSE){let g=Oh(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),b.sizeFromShape(a.shape)===0)return i.values=b.getTypedArrayFromDType(a.dtype,0),a;let u=[],l=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&b.sizeFromShape(g.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}else if(!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!ul(y.shape,g.shape)){let T=g,x=g.shape;g.shape=y.shape,g=this.packedReshape(g,x),u.push(g),y=this.texData.get(g.dataId),T.shape=x}return this.uploadToGPU(g.dataId),{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);let p={shape:a.shape,texData:i,isUniform:!1},c=A$(e,l,p),m=this.getAndSaveBinary(c,()=>w$(this.gpgpu,e,l,p)),f=this.activeTimers!=null,d;f&&(d=this.startTimer()),_$(this.gpgpu,m,l,p,o),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let h=G().get("WEBGL_FLUSH_THRESHOLD");if(h>0){let g=b.now();g-this.lastGlFlushTime>h&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!G().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&s===!1){let g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=W(()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=G().getBool("DEBUG");G().set("DEBUG",!1);let t=this.abs(ce(1e-8)).dataSync()[0];if(G().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Yre:Qre}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:u}=t;if(a!=null)return;let l=this.activeTimers!=null,p;l&&(p=b.now());let c=t.texShape;if(c==null&&(c=oS(n,u),t.texShape=c),s!=null){let m=Uh(n),f,d=c[1],h=c[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;u?([d,h]=mi(c[0],c[1]),f=new bS(m,g)):f=new gS(m,g);let y=this.makeTensorInfo([h,d],o);g?this.texData.get(y.dataId).usage=Yr.PIXELS:this.texData.get(y.dataId).usage=Yr.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),d,h,s);let T=[[h,d]],x=!0,k=this.runWebGLProgram(f,[y],o,T,x),v=this.texData.get(k.dataId);t.texture=v.texture,t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(k.dataId),t.values=null,l&&(this.uploadWaitMs+=b.now()-p)}else{let m=this.acquireTexture(c,i,o,u);t.texture=m}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=rne(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*b.bytesPerElement(t)}},Hh=OS;Hh.nextDataId=0;function rne(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var nne="0.0.0";function AB(){G().set("WEBGL_FORCE_F16_TEXTURES",!0)}Vi.isBrowser()&&ju("webgl",()=>new Hh,2);var Y6t={forceHalfFloat:AB};var Tx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Ks=class{constructor(e,t,n){this.variableNames=["A","B"];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=tr(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var ll=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var $a=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=I.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=tr(s);let a="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${He(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=ar("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function ir(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var NB={kernelName:Un,backendName:"webgl",kernelFunc:ir};function Ln(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=ir({inputs:{x:n},backend:t}),u=ir({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:u},s}var DB={kernelName:Du,backendName:"webgl",kernelFunc:Ln};var zS="return (a < 0.) ? b * a : a;",GS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function one(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $a(GS,o.shape,a.shape):new Ks(zS,o.shape,a.shape),u=t.runWebGLProgram(i,[o,a],"float32");return t.disposeIntermediateTensorInfo(a),u}var PB={kernelName:na,backendName:"webgl",kernelFunc:one};var WS="return (a < 0.) ? b * a : a;",US=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function sne(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $a(US,n.shape,o.shape):new Ks(WS,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var FB={kernelName:Po,backendName:"webgl",kernelFunc:sne};var kx="if (isnan(x)) return x;",MB=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,EB=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function _e({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,u=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let c=i.texData.get(a.dataId),m=t(c.values,u);return i.makeTensorInfo(a.shape,u,m)}let l=G().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,p;return l?p=new La(a.shape,e):p=new Rn(a.shape,r),i.runWebGLProgram(p,[a],u)}}function ft({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:u,b:l}=a,p=i;if(n&&u.dtype==="complex64"){let d=p.texData.get(u.dataId),h=p.texData.get(l.dataId),[g,y]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(x=>{let[k,v]=x,N={dataId:k.dataId,dtype:k.dtype,shape:u.shape},A={dataId:v.dataId,dtype:v.dtype,shape:l.shape},F=new Ks(r,u.shape,l.shape);return p.runWebGLProgram(F,[N,A],Kt(k.dtype,v.dtype))}),T=Ln({inputs:{real:g,imag:y},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(y),T}let c=s||Kt(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||p.shouldExecuteOnCPU([u,l]))&&o!=null){let d=p.texData.get(u.dataId).values,h=p.texData.get(l.dataId).values,g=u.dtype==="string"?I.fromUint8ToStringArray(d):d,y=u.dtype==="string"?I.fromUint8ToStringArray(h):h,[T,x]=o(u.shape,l.shape,g,y,c),k=p.makeTensorInfo(x,c),v=p.texData.get(k.dataId);return v.values=T,k}let m=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,f;return m?f=new $a(e,u.shape,l.shape,t):f=new Ks(r,u.shape,l.shape),p.runWebGLProgram(f,[u,l],c)}}function pl(r,e=!1){if(r==="linear")return e?CB:yB;if(r==="relu")return e?wB:TB;if(r==="elu")return e?vB:xB;if(r==="relu6")return e?SB:kB;if(r==="prelu")return e?US:WS;if(r==="leakyrelu")return e?GS:zS;if(r==="sigmoid")return e?_B:IB;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var qh=class{constructor(e,t,n,o=!1,s=!1,a=!1,i=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=tr(this.outputShape.length);let p=o?e[1]:e[2],c=Math.ceil(p/2),m=o?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");let T=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",k="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(k=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${x};
          int batchB = ${k};
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${y}

        setOutput(result);
      }
    `}};var KS={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Ix=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var RB="return a * b;";function Xh(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=I.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),u=t.texData.get(o.dataId),l=new Ix(KS.REAL,n.shape,o.shape),p=new Ix(KS.IMAG,n.shape,o.shape),c=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],m=t.runWebGLProgram(l,c,"float32"),f=t.runWebGLProgram(p,c,"float32"),d=Ln({inputs:{real:m,imag:f},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),u=t.texData.get(o.dataId),[l,p]=X$(n.shape,o.shape,i.values,u.values,s),c=t.makeTensorInfo(p,s),m=t.texData.get(c.dataId);return m.values=l,c}let a;return G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new $a(RB,n.shape,o.shape):a=new Ks(RB,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var LB={kernelName:Ao,backendName:"webgl",kernelFunc:Xh};function $B(r,e,t){let n=[hu(r.shape),...gu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[hu(e),...gu(e)],a=new Vh(s,n),i=!0,u=[n],l=t.runWebGLProgram(a,[o],r.dtype,u,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function ie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=b.sizeFromShape(o.shape),u=b.inferFromImplicitShape(s,i),l=b.sizeFromShape(u);b.assert(i===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let p=a.texData.get(o.dataId);return p.isPacked&&!ul(o.shape,u)&&!(p.texture!==null&&ul(p.shape,u))?$B(o,u,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var BB={kernelName:fs,backendName:"webgl",kernelFunc:ie};var Cx=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(t!=null){let c=1/t;l=`sumValue += dot(values * ${b.isInt(c)?c.toPrecision(2):c}, ones);`}let p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var VS=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,c=n%4,m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(i="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(i="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${p};
        if (${c===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${c===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${c===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function ane(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=I.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function Zn(r,e,t,n){let o=ane(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:u,outSize:l}=o[a],p,c;t==="mean"?p=a===0?new Cx({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},i):new Cx({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l}):p=new VS({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},t),c=s,s=n.runWebGLProgram(p,[s],e),c.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(c)}return s}var jS=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=He(this.rank),s=ine(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function ine(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var HS=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=He(this.rank),s=ES("rc",this.rank),a=new Array(this.rank);for(let p=0;p<t.length;p++)a[t[p]]=s[p];let i=`vec2(${a.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function cl(r,e,t){let n=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HS(r.shape,e):new jS(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function OB(r,e,t,n){let o=e,s=r.shape.length,a=b.parseAxisParam(o,r.shape),i=a,u=I.getAxesPermutation(i,s),l=u!=null,p=r;l&&(p=cl(r,u,n),i=I.getInnerMostAxes(i.length,s)),I.assertAxesAreInnerMostDims("sum",i,s);let[c,m]=I.computeOutAndReduceShapes(p.shape,i),f=c;t&&(f=I.expandShapeToKeepDim(c,a));let d=b.sizeFromShape(m),g=b.sizeFromShape(r.shape)/d,y=ie({inputs:{x:p},attrs:{shape:[g,d]},backend:n}),T=Ki(r.dtype),x=Zn(y,T,"sum",n),k=ie({inputs:{x},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),l&&n.disposeIntermediateTensorInfo(p),k}function _p(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return OB(o,s,a,t)}var zB={kernelName:Oo,backendName:"webgl",kernelFunc:_p};function Ht(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];let l;if(a.shouldExecuteOnCPU([o])){let c=a.texData.get(o.dataId).values,m=Sp(c,o.shape,o.dtype,s,u);l=a.makeTensorInfo(u,o.dtype);let f=a.texData.get(l.dataId);f.values=m}else l=cl(o,s,a);return l}var GB={kernelName:Ko,backendName:"webgl",kernelFunc:Ht};var qS=1e3;function Ap({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,c=t?r.shape[l-2]:r.shape[l-1],m=n?e.shape[p-1]:e.shape[p-2],f=t?r.shape[l-1]:r.shape[l-2],d=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),k=As.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,d]);b.assert(c===m,()=>`Error in matMul: inner shapes (${c}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let v=t?[y,c,f]:[y,f,c],N=n?[T,d,m]:[T,m,d],A=ie({inputs:{x:r},backend:o,attrs:{shape:v}}),F=ie({inputs:{x:e},backend:o,attrs:{shape:N}}),E=[A,F],$=Math.max(y,T),U=t?A.shape[1]:A.shape[2],K=s!=null,B=a!=null,V=u==="leakyrelu",j=u!=null?pl(u,!0):null,q=K||B||V||j!=null,J;if((f===1||d===1)&&U>qS&&q===!1){let Q=A,oe=F;t&&(Q=Ht({inputs:{x:A},backend:o,attrs:{perm:[0,2,1]}}),E.push(Q)),n&&(oe=Ht({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),E.push(oe));let re=d!==1,me=d===1,ae=Q;re&&(ae=ie({inputs:{x:Q},backend:o,attrs:{shape:[$,U,1]}}),E.push(ae));let xe=d===1?2:1,le=oe;me&&(le=ie({inputs:{x:oe},backend:o,attrs:{shape:[$,1,U]}}),E.push(le));let ke=Xh({inputs:{a:ae,b:le},backend:o});J=_p({inputs:{x:ke},backend:o,attrs:{axis:xe,keepDims:!0}}),E.push(ke)}else{let Q=Kt(r.dtype,e.dtype),oe=new qh(v,N,[$,f,d],t,n,K,j,B,V),re=[A,F];if(s!=null&&re.push(s),B&&re.push(a),V){let me=o.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));re.push(me),E.push(me)}J=o.runWebGLProgram(oe,re,Q)}let Y=ie({inputs:{x:J},backend:o,attrs:{shape:k}});E.push(J);for(let Q of E)o.disposeIntermediateTensorInfo(Q);return Y}function une(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n;return Ap({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:c,activation:p})}var WB={kernelName:ks,backendName:"webgl",kernelFunc:une};var UB="return abs(x);";function lne(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=bx(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new La(n.shape,UB):o=new Rn(n.shape,UB),t.runWebGLProgram(o,[n],n.dtype)}var KB={kernelName:ss,backendName:"webgl",kernelFunc:lne};var pne=Dr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,cne=_e({opSnippet:pne}),VB={kernelName:Ii,backendName:"webgl",kernelFunc:cne};var mne=Dr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,fne=_e({opSnippet:mne}),jB={kernelName:Ci,backendName:"webgl",kernelFunc:fne};var HB="return a + b;",dne=ft({opSnippet:HB,packedOpSnippet:HB,supportsComplex:!0,cpuKernelImpl:D$}),qB={kernelName:wn,backendName:"webgl",kernelFunc:dne};var XS=class{constructor(e,t){this.outputShape=[];this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var YS=class{constructor(e,t){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function vx(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return ir({inputs:{x:n[0]},backend:t});if(n.length>G().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=vx({inputs:n.slice(0,u),backend:t}),p=vx({inputs:n.slice(u),backend:t});return vx({inputs:[l,p],backend:t})}let o=n.map(u=>u.dtype).reduce((u,l)=>Kt(u,l)),s=n.map(u=>u.shape),i=G().getBool("WEBGL_PACK")?new YS(n[0].shape,s):new XS(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var XB={kernelName:ro,backendName:"webgl",kernelFunc:vx};function hne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,i),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,i)),I.assertAxesAreInnerMostDims("all",l,i);let[m,f]=I.computeOutAndReduceShapes(c.shape,l),d=b.sizeFromShape(f),h=ie({inputs:{x:c},backend:t,attrs:{shape:[-1,d]}}),g=Zn(h,h.dtype,"all",t),y;if(a){let T=I.expandShapeToKeepDim(m,u);y=ie({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ie({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(c),y}var YB={kernelName:vi,backendName:"webgl",kernelFunc:hne};function gne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,i),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,i)),I.assertAxesAreInnerMostDims("any",l,i);let[m,f]=I.computeOutAndReduceShapes(c.shape,l),d=b.sizeFromShape(f),h=ie({inputs:{x:c},backend:t,attrs:{shape:[-1,d]}}),g=Zn(h,h.dtype,"any",t),y;if(a){let T=I.expandShapeToKeepDim(m,u);y=ie({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ie({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(c),y}var QB={kernelName:wi,backendName:"webgl",kernelFunc:gne};var QS=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var ZS=class{constructor(e,t,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;b.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,u=i.length,l=He(u),p=ar("coords",u),c,m;if(a===1){m=u+1;let F=He(m);c=`
        ${F} sourceLocR = ${F}(${p.join()}, 0);
        ++${p[u-1]};
        ${F} sourceLocG = ${F}(${p.join()}, 0);
        ++${p[u-2]};
        ${F} sourceLocA = ${F}(${p.join()}, 0);
        --${p[u-1]};
        ${F} sourceLocB = ${F}(${p.join()}, 0);
        --${p[u-2]};`}else m=u,c=`
        ${l} sourceLocR = coords;
        ++${p[u-1]};
        ${l} sourceLocG = coords;
        ++${p[u-2]};
        ${l} sourceLocA = coords;
        --${p[u-1]};
        ${l} sourceLocB = coords;
        --${p[u-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],h=f.map(F=>"int "+F),g=ar("sourceLocR",m-1).concat("inIdx.r"),y=ar("sourceLocG",m-1).concat("inIdx.g"),T=ar("sourceLocB",m-1).concat("inIdx.b"),x=ar("sourceLocA",m-1).concat("inIdx.a"),k=n==="max"?"greaterThan":"lessThan",v=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${x.join()})));`,N=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,A=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${A}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${p[u-2]} < ${i[u-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function ZB(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=I.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},u=new QS(i,t,n==null),l=[e];n!=null&&l.push(n);let p=r.runWebGLProgram(u,l,"int32");if(p.shape[1]===1)return p;let c=ZB(r,e,t,p);return r.disposeIntermediateTensorInfo(p),c}function JB(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=I.computeOptimalWindowSize(s),i=new ZS(o,a,t,n==null),u=n==null?[e]:[e,n],l=r.runWebGLProgram(i,u,"int32");if(l.shape.length===e.shape.length){let p=JB(r,e,t,l);return r.disposeIntermediateTensorInfo(l),p}return l}function wx(r,e,t,n){let o=[t];if(I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!G().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],a=r.texData.get(e.dataId),i=a!==null&&a.isPacked,u=e;i&&(u=r.unpackTensor(e),s.push(u));let[l,p]=I.computeOutAndReduceShapes(u.shape,o),c=b.sizeFromShape(p),m=ie({inputs:{x:u},backend:r,attrs:{shape:[-1,c]}});s.push(m);let f=ZB(r,m,n);s.push(f);let d=ie({inputs:{x:f},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),d}return JB(r,e,n)}function bne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Ht({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=wx(t,u,a[0],"max");return l.forEach(c=>t.disposeIntermediateTensorInfo(c)),p}var eO={kernelName:no,backendName:"webgl",kernelFunc:bne};function yne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Ht({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=wx(t,u,a[0],"min");return l.forEach(c=>t.disposeIntermediateTensorInfo(c)),p}var tO={kernelName:Va,backendName:"webgl",kernelFunc:yne};var xne=Dr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Tne=_e({opSnippet:xne}),rO={kernelName:Si,backendName:"webgl",kernelFunc:Tne};var kne=Dr+"return log(x + sqrt(x * x + 1.0));",Ine=_e({opSnippet:kne}),nO={kernelName:_i,backendName:"webgl",kernelFunc:Ine};var Cne=Dr+`
  return atan(x);
`,vne=_e({opSnippet:Cne}),oO={kernelName:Ai,backendName:"webgl",kernelFunc:vne};var wne=MB+`
  return atan(a, b);
`,Sne=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+EB+`
  return result;
`,_ne=ft({opSnippet:wne,packedOpSnippet:Sne}),sO={kernelName:Di,backendName:"webgl",kernelFunc:_ne};var Ane=Dr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Nne=_e({opSnippet:Ane}),aO={kernelName:Ni,backendName:"webgl",kernelFunc:Nne};var fi=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,p=e.dilationWidth,c=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,T="0.0";if(h||(T="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:y:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let v=Math.floor(a/4)*4,N=a%4,A=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${A}
          }

          int xC = xCCorner + ${v};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${A}
          }
        }
        setOutput(${k});
      }
    `}},Np=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,l=e.strideWidth,p=e.dilationDepth,c=e.dilationHeight,m=e.dilationWidth,f=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,T=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",k="0.0";if(x||(k="-1.0 / 1e-20"),n){let $=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${y}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${$} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / count");let A=Math.floor(a/4)*4,F=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${y}, ${T});
      const float initializationValue = ${k};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${k});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${A}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${A};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${N});
        }
      }
    `}};function Dne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ea(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return ir({inputs:{x:o},backend:t});let c=new fi(p,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var iO={kernelName:oo,backendName:"webgl",kernelFunc:Dne};function Pne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n,p=[1,1,1],c=I.computePool3DInfo(o.shape,s,a,p,i,u,l),m=new Np(c,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var uO={kernelName:Nu,backendName:"webgl",kernelFunc:Pne};var JS=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,p=u-1-e.padInfo.top,c=l-1-e.padInfo.left,m=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${c});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},e_=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,c=e.effectiveFilterDepth,m=e.effectiveFilterHeight,f=e.effectiveFilterWidth,d=c-1-e.padInfo.front,h=m-1-e.padInfo.top,g=f-1-e.padInfo.left,y=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Fne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,c=[1,1,1],m=I.computePool3DInfo(a.shape,i,u,c,l,p),f=new e_(m);return t.runWebGLProgram(f,[o],a.dtype)}var lO={kernelName:Qp,backendName:"webgl",kernelFunc:Fne};function Mne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;Ea([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=I.computePool2DInfo(a.shape,i,u,1,l),c=new JS(p);return t.runWebGLProgram(c,[o],a.dtype)}var pO={kernelName:Yp,backendName:"webgl",kernelFunc:Mne};function Ene(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Ap({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var cO={kernelName:so,backendName:"webgl",kernelFunc:Ene};var t_=class{constructor(e,t,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var r_=class{constructor(e,t,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Rne=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);let l=[n,o,s],p=null;a!=null&&(p=a.shape,l.push(a));let c=null;i!=null&&(c=i.shape,l.push(i));let m=G().getBool("WEBGL_PACK_NORMALIZATION")?new r_(n.shape,o.shape,s.shape,p,c,u):new t_(n.shape,o.shape,s.shape,p,c,u);return e.runWebGLProgram(m,l,l[0].dtype)},mO={kernelName:yo,backendName:"webgl",kernelFunc:Rne};var n_=class{constructor(e){this.variableNames=["source"];this.outputShape=e,this.rank=e.length;let t=He(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Lne(this.rank),o,s=e.map((a,i)=>`sourceLoc.${o_[i]} = start[${i}] + coords.${o_[i]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},o_=["x","y","z","w","u","v"];function Lne(r){if(r===1)return"sourceLoc";if(r<=6)return o_.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var s_=class{constructor(e){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=He(this.rank),n=ar("coords",this.rank),o=ar("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,c)=>`start[${c}]`).join()});`:e.map((p,c)=>`${o[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}};function $ne(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=kt.computeFlatOffset(e,b.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,u+1),s}function Ba(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,u]=kt.parseSliceParams(o,s,a);if(kt.assertParamsValid(o,i,u),b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let c=t.texData.get(o.dataId),m=rB(c.values,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,m)}let{isPacked:l}=t.texData.get(o.dataId),p=kt.isSliceContinous(o.shape,i,u);if(l||!p){let c=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new s_(u):new n_(u),m=[i];return t.runWebGLProgram(c,[o],o.dtype,m)}return t.uploadToGPU(o.dataId),$ne(o,i,u,t)}var fO={kernelName:hs,backendName:"webgl",kernelFunc:Ba};var Bne=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=I.getReshaped(o.shape,s,i),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,i),c=I.getSliceBeginCoords(a,s.length),m=I.getSliceSize(p,a,s.length),f=[],d=ie({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Ht({inputs:{x:d},backend:t,attrs:{perm:l}}),g=ie({inputs:{x:h},backend:t,attrs:{shape:p}}),y=Ba({inputs:{x:g},backend:t,attrs:{begin:c,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(T=>t.disposeIntermediateTensorInfo(T)),y},dO={kernelName:as,backendName:"webgl",kernelFunc:Bne};function One(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),u=t.readSync(s.dataId),l=gx(i,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}var hO={kernelName:Zp,backendName:"webgl",kernelFunc:One};function zne(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),a=t.readSync(o.dataId),i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var gO={kernelName:Jp,backendName:"webgl",kernelFunc:zne};var Gne="return float(a != b);",a_=ft({opSnippet:Gne,cpuKernelImpl:Q$,dtype:"bool"}),bO={kernelName:ia,backendName:"webgl",kernelFunc:a_};function bu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return ir({inputs:{x:o.complexTensorInfos.real},backend:t})}var yO={kernelName:Bu,backendName:"webgl",kernelFunc:bu};var Wne="return float(int(x));";function xO(r,e){let t=new Rn(r.shape,Wne),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function i_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return ir({inputs:{x:o},backend:t});let a=Tt(o.shape),i=i_({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Ln({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=bu({inputs:{input:o},backend:t}),i=i_({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=ir({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return xO(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=a_({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var TO={kernelName:Gn,backendName:"webgl",kernelFunc:i_};var kO="return ceil(x);",Une=_e({opSnippet:kO,packedOpSnippet:kO,cpuKernelImpl:F$}),IO={kernelName:ao,backendName:"webgl",kernelFunc:Une};var u_=class{constructor(e){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var l_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Kne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;G().getBool("WEBGL_PACK_CLIP")?i=new l_(o.shape):i=new u_(o.shape);let u=[[s],[a]];return t.runWebGLProgram(i,[o],o.dtype,u)}var CO={kernelName:Wn,backendName:"webgl",kernelFunc:Kne};var p_=class{constructor(e){this.variableNames=["real","imag"];this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function vO(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function Vne(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new p_(n.shape),a=[vO(n,o.complexTensorInfos.real),vO(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var wO={kernelName:Pu,backendName:"webgl",kernelFunc:Vne};var c_=class{constructor(e){this.outputShape=[];this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var m_=class{constructor(e,t){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=I.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=He(o),a=ar("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let u=new Array(e.length-1);u[0]=e[0][t];for(let h=1;h<u.length;h++)u[h]=u[h-1]+e[h][t];let l=i[t],p=i.slice(-2),c=i.join(),m=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${c}), vec2(${p.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];m+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${Sx(i,l,g)}),
            vec2(${Sx(p,l,g)}));
        }`}let f=u.length,d=u[u.length-1];m+=`
        return getChannel(
          getT${f}(${Sx(i,l,d)}),
          vec2(${Sx(p,l,d)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function Sx(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function Dp(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return ir({inputs:{x:o.complexTensorInfos.imag},backend:t})}var SO={kernelName:Ru,backendName:"webgl",kernelFunc:Dp};function Pp(r,e,t){let n=r[0].dtype;if(n==="complex64"){let p=r.map(h=>bu({inputs:{input:h},backend:t})),c=r.map(h=>Dp({inputs:{input:h},backend:t})),m=Pp(p,e,t),f=Pp(c,e,t),d=Ln({inputs:{real:m,imag:f},backend:t});return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),c.forEach(h=>t.disposeIntermediateTensorInfo(h)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let p=r.map(y=>{let T=b.sizeFromShape(y.shape.slice(e));return ie({inputs:{x:y},backend:t,attrs:{shape:[-1,T]}})}),c=p.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),m=I.computeOutShape(p.map(y=>y.shape),1),f=p[0].shape[0]===1,d=M$(c,m,n,f),h=I.computeOutShape(r.map(y=>y.shape),e),g=t.makeTensorInfo(h,n,d);return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}if(r.length>G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let p=Math.floor(r.length/2),c=Pp(r.slice(0,p),e,t),m=Pp(r.slice(p),e,t),f=Pp([c,m],e,t);return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),f}if(G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let p=new m_(r.map(c=>c.shape),e);return t.runWebGLProgram(p,r,n)}let{tensors2D:s,outShape:a}=jne(r,e,t),i=new c_(s.map(p=>p.shape)),u=t.runWebGLProgram(i,s,n);s.forEach(p=>t.disposeIntermediateTensorInfo(p));let l=ie({inputs:{x:u},attrs:{shape:a},backend:t});return t.disposeIntermediateTensorInfo(u),l}function jne(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>ie({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function f_(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=I.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(l=>b.sizeFromShape(l.shape)>0);if(i.length===1)return ir({inputs:{x:i[0]},backend:t});let u=i.map(l=>l.shape);return I.assertParamsConsistent(u,s),Pp(i,s,t)}var _O={kernelName:is,backendName:"webgl",kernelFunc:f_};var Yh=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,p=e.dilationHeight,c=e.dilationWidth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,T=g?2:3,x=g?3:1,k="",v="";n&&(o?k=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?k=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:k=`
          float activation(float x) {
            ${n}
          }
        `,v="result = activation(result);");let N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${k}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${v}
        setOutput(result);
      }
    `}},d_=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,c=e.filterDepth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var h_=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=e,this.enableShapeUniforms=tr(this.outputShape.length);let{dataFormat:n}=t,o=Zt(),s=n==="channelsLast",a=s?0:1,i=s?1:2,u=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let p=0;p<=1;p++)for(let c=0;c<=1;c++)l+=`
          blockIndex = rc.y + ${c};
          pos = rc.x + ${p};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+c}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+c}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function _x({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=r.shape,l=n.texData.get(r.dataId),p=t.inChannels,c=u[0]*u[1]*u[2],m=t.outChannels,f=t.dataFormat==="channelsLast",d=!1,h=!1,g,y=[];if(!((c===1||m===1)&&p>qS)&&l.isPacked&&f&&l.texture!=null&&u[2]%2!=0&&b.arraysEqual(l.shape.slice(-3),u.slice(-3))){let k=u[0]*u[1]*(u[2]+1),v={dataId:r.dataId,shape:[1,k,t.inChannels],dtype:r.dtype},N=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,b.assert(ul(l.shape,v.shape),()=>`packed reshape ${l.shape} to ${v.shape} isn't free`);let A=ie({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(A);let F=Ap({a:v,b:A,backend:n,transposeA:d,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),E=n.texData.get(F.dataId);b.assert(E.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=N,E.shape=t.outShape,g=ir({inputs:{x:F},backend:n}),g.shape=t.outShape,y.push(F)}else{let k=f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],v=ie({inputs:{x:r},backend:n,attrs:{shape:[1,k,t.inChannels]}}),N=ie({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),A=Ap({a:v,b:N,transposeA:d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ie({inputs:{x:A},backend:n,attrs:{shape:t.outShape}}),y.push(v),y.push(N),y.push(A)}for(let k of y)n.disposeIntermediateTensorInfo(k);return g}function Ax({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:u,filterHeight:l,inChannels:p,outWidth:c,outHeight:m,dataFormat:f}=t,d=f==="channelsLast",h=u*l*p,g=m*c,y=[h,g],T=!0,x=!1,k=[],v=ie({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),N=ie({inputs:{x:e},backend:n,attrs:{shape:[1,h,b.sizeFromShape(e.shape)/h]}});k.push(v),k.push(N);let A=new h_(y,t),F=[v.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],E=n.runWebGLProgram(A,[v],"float32",F),$=ie({inputs:{x:E},backend:n,attrs:{shape:[1,y[0],y[1]]}});k.push(E),k.push($);let U=o!=null,K=s!=null,B=i==="leakyrelu",V=i?pl(i,!0):null,j=new qh($.shape,N.shape,[1,g,t.outChannels],T,x,U,V,K,B),q=[$,N];if(o&&q.push(o),K&&q.push(s),B){let oe=n.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));q.push(oe),k.push(oe)}let J=n.runWebGLProgram(j,q,"float32"),Y=d?[1,m,c,t.outChannels]:[1,t.outChannels,m,c],Q=ie({inputs:{x:J},backend:n,attrs:{shape:Y}});k.push(J);for(let oe of k)n.disposeIntermediateTensorInfo(oe);return Q}function Hne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,c),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=_x({x:o,filter:s,convInfo:m,backend:t});else if(G().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)f=Ax({x:o,filter:s,convInfo:m,backend:t});else{let h=new Yh(m);f=t.runWebGLProgram(h,[o,s],"float32")}let d=ie({inputs:{x:f},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(f),d}var AO={kernelName:io,backendName:"webgl",kernelFunc:Hne};var g_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},b_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=n-1-e.padInfo.left,l=a?1:2,p=a?2:3,c=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},y_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},x_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,l=n-1-e.padInfo.top,p=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function qne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n,c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,p,a,1,i,l,!1,c),f=new g_(m);return t.runWebGLProgram(f,[o,s],"float32")}var NO={kernelName:ec,backendName:"webgl",kernelFunc:qne};function Xne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,c=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(a,s.shape,i,1,u,p,!1,c),f=new b_(m);return t.runWebGLProgram(f,[o,s],"float32")}var DO={kernelName:uo,backendName:"webgl",kernelFunc:Xne};function Yne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n,l=I.computeConv3DInfo(o.shape,s.shape,a,u,i),p=new d_(l);return t.runWebGLProgram(p,[o,s],"float32")}var PO={kernelName:Fu,backendName:"webgl",kernelFunc:Yne};function Qne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:u}=n,l=I.computeConv3DInfo(o.shape,u,a,1,i),p=new y_(l);return t.runWebGLProgram(p,[o,s],"float32")}var FO={kernelName:tc,backendName:"webgl",kernelFunc:Qne};function Zne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:u}=n,l=I.computeConv3DInfo(u,s.shape,i,1,a),p=new x_(l);return t.runWebGLProgram(p,[o,s],"float32")}var MO={kernelName:rc,backendName:"webgl",kernelFunc:Zne};var Jne=kx+`
  return cos(x);
`,eoe=_e({opSnippet:Jne}),EO={kernelName:lo,backendName:"webgl",kernelFunc:eoe};var toe=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,roe=_e({opSnippet:toe}),RO={kernelName:po,backendName:"webgl",kernelFunc:roe};var T_=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,u,l]=e,[p]=t,[c,m]=n;this.outputShape=[p,c,m,l];let f=o==="bilinear"?1:0,[d,h]=[`${i-1}.0`,`${u-1}.0`],[g,y,T]=c>1?[`${(i-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[x,k,v]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${k};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var noe=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,p=new T_(o.shape,s.shape,i,u,l);return t.runWebGLProgram(p,[o,s,a],"float32")},LO={kernelName:Ys,backendName:"webgl",kernelFunc:noe};var Nx=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];this.outputShape=e;let o=e.length,s=t?"0.0":`getX(${$O(o,"coords")})`,a=e[e.length-1],i="",u="";t?(i=n?`end != ${a-1}`:"end != 0",u=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${He(o)} coords = getOutputCoords();
        int end = ${BO(o,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${u};
          ${BO(o,"coords")} = idx;
          val += getX(${$O(o,"coords")});
        }
        setOutput(val);
      }
    `}};function $O(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function BO(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function ooe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length,l=I.getAxesPermutation([s],u),p=o;l!=null&&(p=Ht({inputs:{x:o},backend:t,attrs:{perm:l}}));let c=I.getInnerMostAxes(1,u)[0];if(c!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${s}`);let m=p.shape[c],f=ir({inputs:{x:p},backend:t});for(let d=0;d<=Math.ceil(Math.log2(m))-1;d++){let h=new Nx(p.shape,!1,i),g=[[d]],y=f;f=t.runWebGLProgram(h,[f],f.dtype,g),t.disposeIntermediateTensorInfo(y)}if(a){let d=new Nx(p.shape,a,i),h=f;f=t.runWebGLProgram(d,[f],f.dtype),t.disposeIntermediateTensorInfo(h)}if(l!=null){let d=I.getUndoAxesPermutation(l),h=Ht({inputs:{x:f},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),h}return f}var OO={kernelName:Xs,backendName:"webgl",kernelFunc:ooe};function soe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=gx(u,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=P$(u,l,a,i);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var zO={kernelName:nc,backendName:"webgl",kernelFunc:soe};var k_=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function aoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],c=u*s,m=l*s,f=p/(s*s),d=a==="NHWC"?[i,c,m,f]:[i,f,c,m],h=new k_(d,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var GO={kernelName:Qs,backendName:"webgl",kernelFunc:aoe};var Qh=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=tr(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels,l="",p="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${p}
        setOutput(result);
      }
    `}};var Zh=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=tr(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,p=e.filterHeight,c=e.filterWidth,m=c,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<c;y++)f+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;f+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let y=0;y<c;y++)f+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(m+1)/2;y++){let T=y*2;if(f+=`
          xC = xCCorner + ${T*l};
          `,u===1){if(T<c&&(i%2==1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,l===1&&T>0?f+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<c)){let x=i%2==0?b.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,l>1&&(f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                      xTexelC${T} = getX(batch, xR, xCOffset, d1);
                      xTexelC${T}Ready = 1;
                    }
                    `),f+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                  `):x===1?f+=`
                    xC${T+1} = xTexelC${T};
                    `:f+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<c&&(i%2==1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<c&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<c&&(f+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<c&&(f+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<c&&(f+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let d="",h="";n&&(o?d=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?d=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:d=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function ioe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let c=I.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!0),m;G().getBool("WEBGL_PACK_DEPTHWISECONV")&&c.strideWidth<=2&&c.outChannels/c.inChannels==1?m=new Zh(c):m=new Qh(c);let f=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];return t.runWebGLProgram(m,[o,s],"float32",f)}var WO={kernelName:co,backendName:"webgl",kernelFunc:ioe};var I_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},C_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function uoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n,c=I.computeConv2DInfo(o.shape,p,a,i,u,l,!0),m=new I_(c);return t.runWebGLProgram(m,[o,s],"float32")}var UO={kernelName:oc,backendName:"webgl",kernelFunc:uoe};function loe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n,c=I.computeConv2DInfo(p,s.shape,a,i,u,l,!0),m=new C_(c);return t.runWebGLProgram(m,[o,s],"float32")}var KO={kernelName:sc,backendName:"webgl",kernelFunc:loe};var v_=class{constructor(e){this.variableNames=["X"];this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function poe(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),a=ie({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new v_(s),u=t.runWebGLProgram(i,[a],a.dtype),l=ie({inputs:{x:u},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var VO={kernelName:ac,backendName:"webgl",kernelFunc:poe};var w_=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:l,dilationWidth:p}=e,{top:c,left:m}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${c}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function coe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n,l=I.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",u),p,c=new w_(l);p=t.runWebGLProgram(c,[o,s],"float32");let m=ie({inputs:{x:p},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(p),m}var jO={kernelName:Mu,backendName:"webgl",kernelFunc:coe};function moe(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(i,u),c=p.length,m=null,f=a.length,d=[];for(let h=0;h<c;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:T}=I.getEinsumPermutation(f,u[g]),x;I.isIdentityPermutation(y)?x=s[g]:(x=Ht({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),d.push(x));let k=x.shape.slice();for(let v=0;v<T.length;++v)k.splice(T[v],0,1);b.arraysEqual(x.shape,k)||(x=ie({inputs:{x},backend:t,attrs:{shape:k}}),d.push(x)),m===null?m=x:(m=Xh({inputs:{a:x,b:m},backend:t}),d.push(m))}h<c-1&&(l[h]>=0&&(m=_p({inputs:{x:m},backend:t,attrs:{axis:l[h]-(a.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeIntermediateTensorInfo(h);return m}var HO={kernelName:Eu,backendName:"webgl",kernelFunc:moe};var foe="return (x >= 0.0) ? x : (exp(x) - 1.0);",doe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,hoe=_e({opSnippet:foe,packedOpSnippet:doe}),qO={kernelName:fo,backendName:"webgl",kernelFunc:hoe};var goe="return (b >= 1.0) ? a : a * (b + 1.0);",boe=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,yoe=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $a(boe,n.shape,o.shape):new Ks(goe,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},XO={kernelName:ic,backendName:"webgl",kernelFunc:yoe};var xoe=`
  return vec4(equal(a, b));
`,Toe="return float(a == b);",koe=ft({opSnippet:Toe,packedOpSnippet:xoe,dtype:"bool",cpuKernelImpl:E$}),YO={kernelName:Zs,backendName:"webgl",kernelFunc:koe};var Ioe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Coe=_e({opSnippet:Ioe}),QO={kernelName:Pi,backendName:"webgl",kernelFunc:Coe};var ZO="return exp(x);",S_=_e({opSnippet:ZO,packedOpSnippet:ZO,cpuKernelImpl:R$,dtype:"float32"}),JO={kernelName:ho,backendName:"webgl",kernelFunc:S_};function Dx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),ie({inputs:{x:s},backend:n,attrs:{shape:i}})}var ez={kernelName:us,backendName:"webgl",kernelFunc:Dx};var tz="return exp(x) - 1.0;",voe=_e({opSnippet:tz,packedOpSnippet:tz,cpuKernelImpl:L$}),rz={kernelName:Js,backendName:"webgl",kernelFunc:voe};var Px=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function Fx(r,e,t){let n=t.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ie({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),u=i.shape,l=new Px("real",u,e),p=new Px("imag",u,e),c=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],m=t.runWebGLProgram(l,c,"float32"),f=t.runWebGLProgram(p,c,"float32"),d=Ln({inputs:{real:m,imag:f},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f);let h=ie({inputs:{x:d},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(d),h}function woe(r){let{inputs:e,backend:t}=r,{input:n}=e;return Fx(n,!1,t)}var nz={kernelName:uc,backendName:"webgl",kernelFunc:woe};var __=class{constructor(e,t){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function yu(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new __(n,o),i=[[o]];return e.runWebGLProgram(a,[],s,i)}}var oz={kernelName:ja,backendName:"webgl",kernelFunc:yu};var A_=class{constructor(e){this.variableNames=["Image"];this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var sz={kernelName:ea,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new A_(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var az="return floor(x);",Soe=_e({opSnippet:az,packedOpSnippet:az,cpuKernelImpl:$$}),iz={kernelName:go,backendName:"webgl",kernelFunc:Soe};var _oe=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Aoe=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Noe=ft({opSnippet:_oe,packedOpSnippet:Aoe,dtype:"int32"}),uz={kernelName:bo,backendName:"webgl",kernelFunc:Noe};var N_=class{constructor(e){this.variableNames=["A"];let t=Zt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var D_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let t=Zt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var lz={kernelName:wl,backendName:"webgl",kernelFunc:Doe},$m;function Doe(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,[u,l]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[l,u],c=[l,u,s];(i||a)&&($m==null&&($m=document.createElement("canvas").getContext("2d")),$m.canvas.width=u,$m.canvas.height=l,$m.drawImage(o,0,0,u,l),o=$m.canvas);let m=t.makeTensorInfo(p,"int32");t.texData.get(m.dataId).usage=Yr.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(m.dataId),o);let f=G().getBool("WEBGL_PACK")?new D_(c):new N_(c),d=t.runWebGLProgram(f,[m],"int32");return t.disposeData(m.dataId),d}function Poe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=I.convertConv2DDataFormat(p),g=I.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!1,h),y,T=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=_x({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else if(G().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)y=Ax({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else{let k=a!=null,v=i!=null,N=f==="leakyrelu",A=f?pl(f,!1):null,F=new Yh(g,k,A,v,N),E=[o,s];if(a&&E.push(a),i&&E.push(i),N){let $=t.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));E.push($),T.push($)}y=t.runWebGLProgram(F,E,"float32")}let x=ie({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return T.push(y),T.forEach(k=>t.disposeIntermediateTensorInfo(k)),x}var pz={kernelName:Is,backendName:"webgl",kernelFunc:Poe};function Foe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:c,activation:m,leakyreluAlpha:f}=n,d=[],h=p;h==null&&(h=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=I.computeConv2DInfo(o.shape,s.shape,u,h,l,c,!0),y=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,T=m?pl(m,y):null,x=[o,s],k=a!=null,v=i!=null,N=m==="leakyrelu";if(k&&x.push(a),v&&x.push(i),N){let $=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));x.push($),d.push($)}let A;y?A=new Zh(g,k,T,v,N):A=new Qh(g,k,T,v,N);let F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=t.runWebGLProgram(A,x,"float32",F);return d.forEach($=>t.disposeIntermediateTensorInfo($)),E}var cz={kernelName:Cs,backendName:"webgl",kernelFunc:Foe};var P_=class{constructor(e,t,n){this.sliceDim=e;this.strides=t;this.variableNames=["x","indices"];this.outputShape=n;let o=He(t.length),s=He(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Moe(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[u,l,p,c]=I.prepareAndValidate(n,o),m=ie({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),f=ie({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let y=t.readSync(o.dataId),T=t.bufferSync(n),x=B$(y,T,n.dtype,l,a,p,c,n.shape,i);return t.makeTensorInfo(u,n.dtype,x.values)}let d=new P_(a,c,[l,p]),h=t.runWebGLProgram(d,[f,m],f.dtype),g=ie({inputs:{x:h},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var mz={kernelName:ta,backendName:"webgl",kernelFunc:Moe};var F_=class{constructor(e,t){this.variableNames=["A","indices"];this.outputShape=t,this.rank=t.length;let n=He(this.rank),o=Eoe(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}};function Eoe(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("int(getIndices(resRC.x, resRC.z))"):n.push(`${t[o]}`);return n.join()}function M_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=b.parseAxisParam(a,o.shape)[0],l=t.readSync(s.dataId),p=o.shape[u];for(let k=0;k<l.length;++k){let v=l[k];b.assert(v<=p-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${p-1}]`)}let c=I.segment_util.collectGatherOpShapeInfo(o,s,u,i),m=b.sizeFromShape(s.shape),f=[],d=ie({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=ie({inputs:{x:s},backend:t,attrs:{shape:[c.batchSize,m/c.batchSize]}});f.push(d),f.push(h);let g=[c.batchSize,c.outerSize,m/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let k=t.bufferSync(h),v=t.bufferSync(d),N=O$(v,k,g);return f.forEach(A=>t.disposeIntermediateTensorInfo(A)),t.makeTensorInfo(c.outputShape,N.dtype,N.values)}let y=new F_(d.shape,g),T=t.runWebGLProgram(y,[d,h],d.dtype);f.push(T);let x=ie({inputs:{x:T},backend:t,attrs:{shape:c.outputShape}});return f.forEach(k=>t.disposeIntermediateTensorInfo(k)),x}var fz={kernelName:ls,backendName:"webgl",kernelFunc:M_};var Roe="return float(a > b);",Loe=`
  return vec4(greaterThan(a, b));
`,$oe=ft({opSnippet:Roe,packedOpSnippet:Loe,cpuKernelImpl:z$,dtype:"bool"}),dz={kernelName:ra,backendName:"webgl",kernelFunc:$oe};var Boe="return float(a >= b);",Ooe=`
  return vec4(greaterThanEqual(a, b));
`,zoe=ft({opSnippet:Boe,packedOpSnippet:Ooe,dtype:"bool",cpuKernelImpl:G$}),hz={kernelName:xo,backendName:"webgl",kernelFunc:zoe};function Goe(r){let{inputs:e,backend:t}=r,{input:n}=e;return Fx(n,!0,t)}var gz={kernelName:lc,backendName:"webgl",kernelFunc:Goe};var Woe="return float(!isnan(x) && !isinf(x));",Uoe=_e({opSnippet:Woe,dtype:"bool"}),bz={kernelName:Fi,backendName:"webgl",kernelFunc:Uoe};var Koe="return float(isinf(x));",Voe=_e({opSnippet:Koe,dtype:"bool"}),yz={kernelName:Mi,backendName:"webgl",kernelFunc:Voe};var joe="return float(isnan(x));",Hoe=_e({opSnippet:joe,dtype:"bool"}),xz={kernelName:Ei,backendName:"webgl",kernelFunc:Hoe};var qoe="return float(a < b);",Xoe=`
  return vec4(lessThan(a, b));
`,Yoe=ft({opSnippet:qoe,packedOpSnippet:Xoe,cpuKernelImpl:W$,dtype:"bool"}),Tz={kernelName:oa,backendName:"webgl",kernelFunc:Yoe};var Qoe="return float(a <= b);",Zoe=`
  return vec4(lessThanEqual(a, b));
`,Joe=ft({opSnippet:Qoe,packedOpSnippet:Zoe,cpuKernelImpl:U$,dtype:"bool"}),kz={kernelName:sa,backendName:"webgl",kernelFunc:Joe};function ese(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=K$(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var Iz={kernelName:pc,backendName:"webgl",kernelFunc:ese};var tse=`if (x < 0.0) return NAN;
  return log(x);`,rse=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,nse=_e({opSnippet:tse,packedOpSnippet:rse,cpuKernelImpl:V$}),Cz={kernelName:To,backendName:"webgl",kernelFunc:nse};var ose="return log(1.0 + x);",sse=_e({opSnippet:ose}),vz={kernelName:Ri,backendName:"webgl",kernelFunc:sse};var ase="return float(a >= 1.0 && b >= 1.0);",ise=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,use=ft({opSnippet:ase,packedOpSnippet:ise,dtype:"bool"}),wz={kernelName:aa,backendName:"webgl",kernelFunc:use};var lse="return float(!(x >= 1.0));",pse=_e({opSnippet:lse}),Sz={kernelName:Li,backendName:"webgl",kernelFunc:pse};var cse="return float(a >= 1.0 || b >= 1.0);",mse=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,fse=ft({opSnippet:cse,packedOpSnippet:mse,dtype:"bool"}),_z={kernelName:vl,backendName:"webgl",kernelFunc:fse};var E_=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var R_=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var dse=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:u}=n,l=G().getBool("WEBGL_PACK_NORMALIZATION")?new R_(o.shape,s,a,i,u):new E_(o.shape,s,a,i,u);return t.runWebGLProgram(l,[o],o.dtype)},Az={kernelName:Lu,backendName:"webgl",kernelFunc:dse};var L_=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var hse=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:p}=n,c=new L_(o.shape,i,u,l,p);return t.runWebGLProgram(c,[o,s,a],o.dtype)},Nz={kernelName:cc,backendName:"webgl",kernelFunc:hse};function Dz(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Zn(i,r.dtype,"max",n),l=ie({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}function $_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,i),c=p!=null,m=t.shouldExecuteOnCPU([o]),f=o;if(c){if(m){let x=t.texData.get(f.dataId).values,k=new Array(i);for(let A=0;A<k.length;A++)k[A]=o.shape[p[A]];let v=Sp(x,o.shape,o.dtype,p,k);f=t.makeTensorInfo(k,o.dtype);let N=t.texData.get(f.dataId);N.values=v}else f=cl(o,p,t);l=I.getInnerMostAxes(l.length,i)}I.assertAxesAreInnerMostDims("max",l,i);let[d,h]=I.computeOutAndReduceShapes(f.shape,l),g=d;a&&(g=I.expandShapeToKeepDim(d,u));let y;if(m){let x=t.texData.get(f.dataId).values,k=j$(x,b.sizeFromShape(h),g,o.dtype);y=t.makeTensorInfo(g,o.dtype);let v=t.texData.get(y.dataId);v.values=k}else y=Dz(f,h,g,t);return c&&t.disposeIntermediateTensorInfo(f),y}var Pz={kernelName:ko,backendName:"webgl",kernelFunc:$_};var gse=Tx+`
  return max(a, b);
`,bse=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+ll+`
  return result;
`,yse=ft({opSnippet:gse,packedOpSnippet:bse,cpuKernelImpl:H$}),Fz={kernelName:Io,backendName:"webgl",kernelFunc:yse};function xse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ea(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return ir({inputs:{x:o},backend:t});let c=new fi(p,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var Mz={kernelName:Co,backendName:"webgl",kernelFunc:xse};function Tse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=n,p=[1,1,1],c=I.computePool3DInfo(o.shape,s,a,p,i,l,u),m=new Np(c,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var Ez={kernelName:$u,backendName:"webgl",kernelFunc:Tse};var B_=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,u=a-1-e.padInfo.left,l=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},O_=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=u-1-e.padInfo.front,m=l-1-e.padInfo.top,f=p-1-e.padInfo.left,d=u*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function kse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,c=[1,1,1],m=I.computePool3DInfo(a.shape,i,u,c,l,p),f=new Np(m,"max",!0),d=t.runWebGLProgram(f,[a],a.dtype),h=new O_(m),g=t.runWebGLProgram(h,[o,d],a.dtype);return t.disposeIntermediateTensorInfo(d),g}var Rz={kernelName:fc,backendName:"webgl",kernelFunc:kse};function Ise(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;Ea([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:c}=n,m=I.computePool2DInfo(i.shape,u,l,1,p,c),f=!0,d=new fi(m,"max",f),h=t.runWebGLProgram(d,[i],i.dtype),g=new B_(m),y=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),y}var Lz={kernelName:mc,backendName:"webgl",kernelFunc:Ise};function $z(r,e,t,n){let o=new fi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new fi(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var Bz={kernelName:dc,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,u=t;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];b.assert(I.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let p=I.computePool2DInfo(n.shape,o,s,l,a),[c,m]=$z(n,i,p,u);return[c,m]}};function Oz(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Zn(i,"float32","mean",n),l=ie({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}var zz={kernelName:vo,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,u=b.parseAxisParam(s,n.shape),l=u,p=I.getAxesPermutation(l,i),c=p!=null,m=a.shouldExecuteOnCPU([n]),f=[],d=n;if(c){if(m){let k=a.texData.get(d.dataId).values,v=new Array(i);for(let F=0;F<v.length;F++)v[F]=n.shape[p[F]];let N=Sp(k,n.shape,n.dtype,p,v);d=a.makeTensorInfo(v,n.dtype);let A=a.texData.get(d.dataId);A.values=N}else d=cl(n,p,a);f.push(d),l=I.getInnerMostAxes(l.length,i)}I.assertAxesAreInnerMostDims("sum",l,i);let[h,g]=I.computeOutAndReduceShapes(d.shape,l),y=h;o&&(y=I.expandShapeToKeepDim(h,u));let T=Oz(d,g,y,a);for(let x of f)a.disposeIntermediateTensorInfo(x);return T}};function Cse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,i),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",l,i);let[m,f]=I.computeOutAndReduceShapes(c.shape,l),d=b.sizeFromShape(f),h=ie({inputs:{x:c},backend:t,attrs:{shape:[-1,d]}}),g=Zn(h,h.dtype,"min",t),y;if(a){let T=I.expandShapeToKeepDim(m,u);y=ie({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ie({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(c),y}var Gz={kernelName:wo,backendName:"webgl",kernelFunc:Cse};var vse=Tx+`
  return min(a, b);
`,wse=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+ll+`
  return result;
`,Sse=ft({opSnippet:vse,packedOpSnippet:wse,cpuKernelImpl:q$}),Wz={kernelName:So,backendName:"webgl",kernelFunc:Sse};var z_=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=t.map((p,c)=>p[0]+e[c]+p[1]);let o=e.length,s=He(o),a=t.map(p=>p[0]).join(","),i=t.map((p,c)=>p[0]+e[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var G_=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);let o=e.length,s=He(o),a=t.map(d=>d[0]).join(","),i=t.map((d,h)=>d[0]+e[h]).join(","),u=ar("rc",o),l=ar("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,c=o===1?"source":`vec2(${l.slice(-2).join()})`,m=n==="reflect"?0:1,f="";if(o===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${u[o-1]} += 1;
        if(${p}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${u[o-1]} += 1;
        if(${p}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${d}
          result[2] = getChannel(getX(${l.join()}), ${c});
          ${u[o-1]} += 1;
          if(${p}) {
            ${d}
            result[3] = getChannel(getX(${l.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var _se=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new G_(n.shape,o,s):new z_(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},Uz={kernelName:_o,backendName:"webgl",kernelFunc:_se};var Ase=`if (b == 0.0) return NAN;
  return mod(a, b);`,Nse=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+ll+`
  return result;
`,Dse=ft({opSnippet:Ase,packedOpSnippet:Nse}),Kz={kernelName:$i,backendName:"webgl",kernelFunc:Dse};var W_=class{constructor(e,t,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var Pse=`
if (a == b) {
  return 1.0;
};
return a / b;`,Fse=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,U_=ft({opSnippet:Pse,packedOpSnippet:Fse,checkOutOfBounds:!0}),Vz={kernelName:mo,backendName:"webgl",kernelFunc:U_};var jz="return a - b;",K_=ft({opSnippet:jz,packedOpSnippet:jz,supportsComplex:!0,cpuKernelImpl:pB}),Hz={kernelName:Wo,backendName:"webgl",kernelFunc:K_};function V_(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=$_({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=I.expandShapeToKeepDim(i.shape,a),l=ie({inputs:{x:i},backend:t,attrs:{shape:u}}),p=K_({inputs:{a:o,b:l},backend:t}),c=S_({inputs:{x:p},backend:t}),m=_p({inputs:{x:c},backend:t,attrs:{axis:a,keepDims:!1}}),f=ie({inputs:{x:m},backend:t,attrs:{shape:u}}),d=U_({inputs:{a:c,b:f},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}var qz={kernelName:zo,backendName:"webgl",kernelFunc:V_};function Mse(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,u=i?o:V_({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),l=u.shape[0],p=u.shape[1],c=new W_(l,p,s),m=[[a]],f=t.runWebGLProgram(c,[u],"int32",m);return i||t.disposeIntermediateTensorInfo(u),f}var Xz={kernelName:hc,backendName:"webgl",kernelFunc:Mse};var Yz="return -x;";function Ese(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=Y$(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new La(n.shape,Yz):o=new Rn(n.shape,Yz),t.runWebGLProgram(o,[n],n.dtype)}var Qz={kernelName:ps,backendName:"webgl",kernelFunc:Ese};var Rse=Tr.nonMaxSuppressionV3Impl;function Lse(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:c}=Rse(l,p,a,i,u);return t.makeTensorInfo([c.length],"int32",new Int32Array(c))}var Zz={kernelName:ua,backendName:"webgl",kernelFunc:Lse};var $se=Tr.nonMaxSuppressionV4Impl;function Bse(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n,p=t.readSync(o.dataId),c=t.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=$se(p,c,a,i,u,l);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var Jz={kernelName:Bi,backendName:"webgl",kernelFunc:Bse};var Ose=Tr.nonMaxSuppressionV5Impl;function zse(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),c=t.readSync(s.dataId),m=a,f=i,d=u,h=l,{selectedIndices:g,selectedScores:y}=Ose(p,c,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var e3={kernelName:la,backendName:"webgl",kernelFunc:zse};var j_=class{constructor(e,t,n,o){this.variableNames=["indices"];this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var Gse=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,u=b.sizeFromShape(o.shape),l=new j_(u,s,a,i),p=ie({inputs:{x:o},backend:t,attrs:{shape:[u]}}),c=t.runWebGLProgram(l,[p],o.dtype);t.disposeIntermediateTensorInfo(p);let m=[...o.shape,s],f=ie({inputs:{x:c},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(c),f},t3={kernelName:pa,backendName:"webgl",kernelFunc:Gse};function Jh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=bu({inputs:{input:n},backend:t}),s=Jh({inputs:{x:o},backend:t}),a=Dp({inputs:{input:n},backend:t}),i=Jh({inputs:{x:a},backend:t}),u=Ln({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return yu({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var r3={kernelName:xs,backendName:"webgl",kernelFunc:Jh};function n3(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=bu({inputs:{input:n},backend:t}),s=n3({inputs:{x:o},backend:t}),a=Dp({inputs:{input:n},backend:t}),i=Jh({inputs:{x:a},backend:t}),u=Ln({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return yu({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var o3={kernelName:cs,backendName:"webgl",kernelFunc:n3};function Wse(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Dx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let c=Dx({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(c),c}),l=f_({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var s3={kernelName:ms,backendName:"webgl",kernelFunc:Wse};var H_=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((l,p)=>l[0]+e[p]+l[1]);let o=e.length,s=He(o),a=t.map(l=>l[0]).join(","),i=t.map((l,p)=>l[0]+e[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var q_=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=He(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),u=ar("rc",o),l=ar("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,c=o===1?"source":`vec2(${l.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${p}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${p}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let h=0,g=o===1?2:4;h<g;h++)d+=`
        ${m[h]}
        if (${f}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${c});
        }
      `;d+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var X_=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(b.sizeFromShape(o.shape)===0){let l=s.map((p,c)=>p[0]+o.shape[c]+p[1]);return yu({backend:t,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new q_(o.shape,s,a):new H_(o.shape,s,a),u=[[a]];return t.runWebGLProgram(i,[o],o.dtype,u)},a3={kernelName:No,backendName:"webgl",kernelFunc:X_};var Use=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Kse=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+ll+`
  return result;
`,Vse=ft({opSnippet:Use,packedOpSnippet:Kse}),i3={kernelName:Do,backendName:"webgl",kernelFunc:Vse};function jse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=[],l=b.parseAxisParam(s,o.shape),p=l,c=I.getAxesPermutation(p,i),m=o;c!=null&&(m=Ht({inputs:{x:o},backend:t,attrs:{perm:c}}),p=I.getInnerMostAxes(p.length,i),u.push(m)),I.assertAxesAreInnerMostDims("prod",p,i);let f;if(t.shouldExecuteOnCPU([m])){let d=t.texData.get(m.dataId).values,{outVals:h,outShape:g,outDtype:y}=Z$(m.shape,m.dtype,d,p);f=t.makeTensorInfo(g,y,h)}else{let[d,h]=I.computeOutAndReduceShapes(m.shape,p),g=b.sizeFromShape(h),y=ie({inputs:{x:m},backend:t,attrs:{shape:[-1,g]}}),T=Ki(o.dtype),x=Zn(y,T,"prod",t);f=ie({inputs:{x},backend:t,attrs:{shape:d}}),u.push(y),u.push(x)}if(a){u.push(f);let d=I.expandShapeToKeepDim(f.shape,l);f=ie({inputs:{x:f},backend:t,attrs:{shape:d}})}return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var u3={kernelName:ca,backendName:"webgl",kernelFunc:jse};var Y_=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=J$(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},l3={kernelName:Ha,backendName:"webgl",kernelFunc:Y_};var Hse="return 1.0 / x;",qse=_e({opSnippet:Hse}),p3={kernelName:Oi,backendName:"webgl",kernelFunc:qse};var Xse=Dr+`
  return (x < 0.0) ? 0.0 : x;
`,Yse=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Qse=_e({opSnippet:Xse,packedOpSnippet:Yse}),c3={kernelName:Fo,backendName:"webgl",kernelFunc:Qse};var Zse=Dr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Jse=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eae=_e({opSnippet:Zse,packedOpSnippet:Jse}),m3={kernelName:Eo,backendName:"webgl",kernelFunc:eae};var Q_=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/c[0]},
          ${p[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var Z_=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/c[0]},
          ${p[1]/c[1]},
          ${p[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function tae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Z_(o.shape,u,l,s,a):new Q_(o.shape,u,l,s,a);return t.runWebGLProgram(p,[o],"float32")}var f3={kernelName:Mo,backendName:"webgl",kernelFunc:tae};var J_=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],c=u[1]/l[1],m=1/p,f=1/c,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${c});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function rae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new J_(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var d3={kernelName:bc,backendName:"webgl",kernelFunc:rae};var eA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/c[0]},
          ${p[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var tA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/c[0]},
          ${p[1]/c[1]},
          ${p[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function nae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tA(o.shape,u,l,s,a):new eA(o.shape,u,l,s,a);return t.runWebGLProgram(p,[o],o.dtype)}var h3={kernelName:qa,backendName:"webgl",kernelFunc:nae};var rA=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],c=u[1]/l[1],m=1/p,f=1/c,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${c});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function oae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new rA(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var g3={kernelName:gc,backendName:"webgl",kernelFunc:oae};var nA=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,u)=>o(u)).join(","),a=He(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var oA=class{constructor(e,t){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=ar("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=He(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${a}) {
            result.b = ${p(o.slice())};
            if(${s}) {
              result.a = ${c(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(d){return m(d)}function l(d){return d[n-1]="("+d[n-1]+" + 1)",m(d)}function p(d){return d[n-2]="("+d[n-2]+" + 1)",m(d)}function c(d){return d[n-1]="("+d[n-1]+" + 1)",d[n-2]="("+d[n-2]+" + 1)",m(d)}function m(d){let h=e.map((T,x)=>f(x,d)),g=h.join(","),y=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function f(d,h){return t.indexOf(d)!==-1&&e[d]!==1?`${e[d]} - ${h[d]} - 1`:`${h[d]}`}}};function sae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return ir({inputs:{x:o},backend:t});let u=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oA(o.shape,i):new nA(o.shape,i);return t.runWebGLProgram(u,[o],o.dtype)}var b3={kernelName:ma,backendName:"webgl",kernelFunc:sae};var sA=class{constructor(e,t){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var y3={kernelName:Ta,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=new sA(n.shape,s),[l,p]=I.getImageCenter(a,n.shape[1],n.shape[2]),c=[[l,p,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(u,[n],n.dtype,c)}};var aae=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,iae=_e({opSnippet:aae}),x3={kernelName:fa,backendName:"webgl",kernelFunc:iae};var uae="return inversesqrt(x);",lae=_e({opSnippet:uae,cpuKernelImpl:eB}),T3={kernelName:Ro,backendName:"webgl",kernelFunc:lae};var eg=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let u=He(s.length),l=He(a.length),p="";n===1?p="i":n===2&&(p="i, j");let c=`getIndices(${p})`,m="";o===1?m="i":o===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,d=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${d};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function pae(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:c}=I.calculateShapes(s,o,a),m=[c/l,l];if(c===0)return t.makeTensorInfo(a,o.dtype);let f=ie({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),d=ie({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new eg(u,i,f.shape.length,d.shape.length,p,m),y=t.runWebGLProgram(g,[d,f,h],d.dtype),T=ie({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),T}var k3={kernelName:da,backendName:"webgl",kernelFunc:pae};var aA=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let p=0;p<t.length;p++)l.push(`${i[p]}`),p<e&&u.push(`${i[p]}`);o=u.join(),s=l.join()}let a=He(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function cae(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new aA(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],Kt(o.dtype,s.dtype))}var I3={kernelName:ds,backendName:"webgl",kernelFunc:cae};var mae=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,fae=_e({opSnippet:mae}),C3={kernelName:zi,backendName:"webgl",kernelFunc:fae};var v3="return 1.0 / (1.0 + exp(-1.0 * x));",dae=_e({opSnippet:v3,packedOpSnippet:v3,cpuKernelImpl:tB}),w3={kernelName:$o,backendName:"webgl",kernelFunc:dae};var hae=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,gae=_e({opSnippet:hae}),S3={kernelName:Gi,backendName:"webgl",kernelFunc:gae};var bae=kx+`
  return sin(x);
`,yae=_e({opSnippet:bae}),_3={kernelName:Lo,backendName:"webgl",kernelFunc:yae};var xae=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Tae=_e({opSnippet:xae}),A3={kernelName:ha,backendName:"webgl",kernelFunc:Tae};var kae=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Iae=_e({opSnippet:kae}),N3={kernelName:Wi,backendName:"webgl",kernelFunc:Iae};var Cae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((y,T)=>y*T),u=[[0,0]];u.push(...a);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let l=[],p=X_({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(p.shape,s,i,!1),m=I.getPermuted(c.length,s.length,!1),f=I.getReshapedPermuted(p.shape,s,i,!1),d=ie({inputs:{x:p},backend:t,attrs:{shape:c}}),h=Ht({inputs:{x:d},backend:t,attrs:{perm:m}}),g=ie({inputs:{x:h},backend:t,attrs:{shape:f}});return l.push(p),l.push(d),l.push(h),l.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},D3={kernelName:gs,backendName:"webgl",kernelFunc:Cae};function vae(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.readSync(n.dataId),u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=t.readSync(a.dataId)[0],[c,m,f,d,h]=nB(i,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(m,n.dtype,c),t.makeTensorInfo([m[0]],o.dtype,f),t.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var P3={kernelName:yc,backendName:"webgl",kernelFunc:vae};function wae(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.readSync(o.dataId)),i=t.readSync(n.dataId),u=Array.from(t.readSync(s.dataId)),[l,p,c]=oB(i,n.shape,n.dtype,a,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}var F3={kernelName:xc,backendName:"webgl",kernelFunc:wae};function Sae(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=yx(a,n.shape,n.dtype,i,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var M3={kernelName:Tc,backendName:"webgl",kernelFunc:Sae};function _ae(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=yx(a,n.shape,n.dtype,i,u);return t.makeTensorInfo(p,n.dtype,l)}var E3={kernelName:kc,backendName:"webgl",kernelFunc:_ae};function Aae(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,strides:p,outputSize:c}=I.calculateShapes(s,o,i),m=!1,f=new eg(l,u,o.shape.length,s.shape.length,p,[c,1],m),d=t.runWebGLProgram(f,[s,o,a],s.dtype),h=ie({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),h}var R3={kernelName:Ou,backendName:"webgl",kernelFunc:Aae};function Nae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],u=I.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),c=o.shape.slice();return u.map(m=>{let f=[...c];f[i]=m;let d=Ba({inputs:{x:o},backend:t,attrs:{begin:p,size:f}});return p[i]+=m,d})}var L3={kernelName:bs,backendName:"webgl",kernelFunc:Nae};var $3="return sqrt(x);",Dae=_e({opSnippet:$3,packedOpSnippet:$3,cpuKernelImpl:sB}),B3={kernelName:Bo,backendName:"webgl",kernelFunc:Dae};var Pae="return x * x;",Fae=_e({opSnippet:Pae}),O3={kernelName:Xa,backendName:"webgl",kernelFunc:Fae};var z3="return (a - b) * (a - b);",Mae=ft({opSnippet:z3,packedOpSnippet:z3}),G3={kernelName:Go,backendName:"webgl",kernelFunc:Mae};function Eae({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=Dr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new Rn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var W3={kernelName:Ts,backendName:"webgl",kernelFunc:Eae};var iA=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=He(n.length),a=He(n.length),i="";if(o===1)i="coords * strides + begin";else{let u=0;i=n.map((l,p)=>(u++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${u-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Rae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:k}=kt.sliceInfo(o.shape,s,a,i,u,l,p,c,m),v;if(h)v=ie({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=kt.computeOutShape(T,x,k),F=Ba({inputs:{x:o},backend:t,attrs:{begin:T,size:A}});v=ie({inputs:{x:F},backend:t,attrs:{shape:d}}),t.disposeIntermediateTensorInfo(F)}else if(t.shouldExecuteOnCPU([o])){let F=t.readSync(o.dataId),E=Ce(o.shape,o.dtype,F),$=aB(f,E,k,T);v=t.makeTensorInfo(d,o.dtype,$.values)}else{let F=new iA(T,k,f);v=t.runWebGLProgram(F,[o],o.dtype)}let N=ie({inputs:{x:v},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(v),N}var U3={kernelName:ga,backendName:"webgl",kernelFunc:Rae};function Lae(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:c}=e,m=t.readSync(p.dataId),f=t.readSync(c.dataId),[d,h]=iB(m,f,o,s,a,i,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(c.shape,"int32",h)]}var K3={kernelName:zu,backendName:"webgl",kernelFunc:Lae};function $ae(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.readSync(s.dataId),u=t.readSync(a.dataId)[0],[l,p,c]=uB(i,u,o),m=p.length;return[t.makeTensorInfo([m,2],"int32",l),t.makeTensorInfo([m],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(c))]}var V3={kernelName:Ic,backendName:"webgl",kernelFunc:$ae};function Bae(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.readSync(s.dataId),i=lB(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var j3={kernelName:Cc,backendName:"webgl",kernelFunc:Bae};var Oae="return tan(x);",zae=_e({opSnippet:Oae}),H3={kernelName:ba,backendName:"webgl",kernelFunc:zae};var Gae=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Wae=_e({opSnippet:Gae}),q3={kernelName:Uo,backendName:"webgl",kernelFunc:Wae};var uA=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=He(this.rank),s=Uae(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Uae(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function lA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(m=>b.decodeString(m)):u,p=Ce(o.shape,o.dtype,l),c=cB(p,s);return t.makeTensorInfo(c.shape,c.dtype,c.values)}let a=new uA(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var X3={kernelName:Sn,backendName:"webgl",kernelFunc:lA};var pA=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},cA=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Fp(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function Y3(r){let e=1;for(;e<r;)e*=2;return e}function Kae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=G().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=G().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,p=l[l.length-1];if(t.shouldExecuteOnCPU([o])||p<i||s>u){let $=t.readSync(o.dataId),[U,K]=mB($,l,o.dtype,s,a);return[t.makeTensorInfo(U.shape,U.dtype,U.values),t.makeTensorInfo(K.shape,K.dtype,K.values)]}if(s===0)return l[l.length-1]=0,[t.makeTensorInfo(l,o.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(p===1)return[o,yu({attrs:{shape:l,dtype:"int32",value:0},backend:t})];let c=t.texData.get(o.dataId),m=c!==null&&c.isPacked,f=m?t.unpackTensor(o):o,h=b.sizeFromShape(l)/p,g=ie({inputs:{x:f},attrs:{shape:[h,p]},backend:t});m&&Fp(t,f);let y=Y3(s),T=Y3(p),x=null,k=()=>x===null?[g,g]:[g,x],v=($,U,K)=>{let B=k(),V=new pA(K),q=[[p],[x===null?1:0],[Number.NEGATIVE_INFINITY],[$],[U]],J=x;x=t.runWebGLProgram(V,B,"int32",q),Fp(t,J)};for(let $=1;$<y;$*=2){let U=$*2;for(let K=$;K>=1;K/=2)v(U,K,[h,T])}for(let $=T;$>y;$/=2){let U=k(),K=new cA([h,$/2]),V=[[p],[x===null?1:0],[y]],j=x;x=t.runWebGLProgram(K,U,"int32",V),Fp(t,j);let q=y/2,J=q*2;for(let Y=q;Y>=1;Y/=2)v(J,Y,x.shape)}let N=x;x=Ba({inputs:{x},backend:t,attrs:{begin:0,size:[h,s]}}),Fp(t,N);let A=M_({inputs:{x:g,indices:x},backend:t,attrs:{axis:1,batchDims:1}});Fp(t,g);let F=l.slice(0,-1);F.push(s),N=x,x=ie({inputs:{x},attrs:{shape:F},backend:t}),Fp(t,N);let E=A;return A=ie({inputs:{x:A},attrs:{shape:F},backend:t}),Fp(t,E),[A,x]}var Q3={kernelName:ya,backendName:"webgl",kernelFunc:Kae};var mA=class{constructor(e,t,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Vae(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],y=new mA(c,m,a,i,u,g);return t.runWebGLProgram(y,[o,s],"float32")}var Z3={kernelName:xa,backendName:"webgl",kernelFunc:Vae};function jae(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Ea(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=fB(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var J3={kernelName:vc,backendName:"webgl",kernelFunc:jae};function Hae(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let c=[],m=new Array(i).fill(0),f=a.shape.slice();f[s]=1;let d=new Array(u);for(let h=0;h<d.length;h++){m[s]=h;let g=Ba({inputs:{x:a},backend:t,attrs:{begin:m,size:f}}),y=ie({inputs:{x:g},backend:t,attrs:{shape:l}});d[h]=y,c.push(g)}return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var eG={kernelName:ys,backendName:"webgl",kernelFunc:Hae};var fA=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let u="0.0",l="sumValue",p=Math.floor(n/4)*4,c=n%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${p};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function qae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,u=[],l=0,p=I.getAxesPermutation([l],i),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),u.push(c),l=I.getInnerMostAxes(1,i)[0]);let m=I.segment_util.computeOutShape(c.shape,l,a),f=b.sizeFromShape([c.shape[l]]),d=ie({inputs:{x:c},backend:t,attrs:{shape:[-1,f]}});u.push(d);let h=Ki(o.dtype),g=(k,v,N,A,F)=>{let E=k.shape[0],$=k.shape[1],U=I.segment_util.segOpComputeOptimalWindowSize($,F),K={windowSize:U,inSize:$,batchSize:E,numSegments:F},B=new fA(K,v),V=t.compileAndRun(B,[k,N],A);if(u.push(V),V.shape[1]===F)return V;let j=Y_({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),q=lA({inputs:{x:j},backend:t,attrs:{reps:[$/U]}});return u.push(j),u.push(q),g(V,v,q,A,F)},y=g(d,"unsortedSegmentSum",s,h,a),T=ie({inputs:{x:y},backend:t,attrs:{shape:m}}),x=T;if(p!=null){u.push(T);let k=I.getUndoAxesPermutation(p);x=Ht({inputs:{x},backend:t,attrs:{perm:k}})}return u.forEach(k=>t.disposeIntermediateTensorInfo(k)),x}var tG={kernelName:Gu,backendName:"webgl",kernelFunc:qae};var Xae=[Az,Nz,WB,KB,VB,jB,qB,XB,YB,QB,eO,tO,rO,nO,sO,oO,aO,uO,iO,lO,pO,cO,mO,dO,hO,gO,TO,IO,CO,wO,DB,_O,NO,DO,AO,FO,MO,PO,EO,RO,LO,OO,zO,GO,UO,KO,WO,VO,jO,HO,qO,XO,YO,QO,JO,ez,rz,nz,oz,sz,iz,uz,lz,pz,cz,mz,fz,dz,hz,NB,gz,SO,bz,yz,xz,PB,Tz,kz,Iz,vz,Cz,wz,Sz,_z,Pz,Ez,Mz,Rz,Lz,Bz,Fz,zz,Gz,Wz,Uz,Kz,Xz,LB,Qz,Zz,Jz,e3,bO,t3,o3,s3,a3,i3,FB,u3,l3,yO,Vz,p3,m3,c3,BB,f3,d3,h3,g3,b3,y3,x3,T3,k3,I3,C3,w3,S3,_3,A3,fO,qz,N3,D3,P3,F3,M3,E3,R3,L3,B3,O3,G3,W3,U3,K3,V3,j3,Hz,zB,H3,q3,X3,Q3,Z3,GB,J3,eG,tG,r3];for(let r of Xae)Ui(r);var di=G();di.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);di.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);di.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);di.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);di.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);di.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);di.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);di.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);di.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);di.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function rG(r,e){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function Et(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";throw Error(`GPU for rank ${r} is not yet supported`)}function Mx(r,e){return r==="float32"?e?"vec4<f32>":"f32":r==="int32"||r==="bool"?e?"vec4<i32>":"i32":r}function ge(){return`
  let index = getGlobalIndex(globalId, localId);
`}function de(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
  fn main([[builtin(local_invocation_id)]] localId : vec3<u32>, [[builtin(global_invocation_id)]] globalId : vec3<u32>)
`}function nG(r,e,t,n=!1){let o=`
    let workGroupSizeX = ${t.workGroupSize[0]}u;
    let workGroupSizeY = ${t.workGroupSize[1]}u;
    let workGroupSizeZ = ${t.workGroupSize[2]}u;`;if(n===!0){let f=aG(e.shape),d=`
      [[block]] struct Matrix0 {
        numbers: array<${Mx(e.dtype,t.isVec4)}>;
      };
      [[block]] struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `;return[oG,d,o,sG,f,t.getUserCode()].join(`
`)}let s=[],a="[[block]] struct Uniforms { NAN : f32; ";t.variableNames.forEach((f,d)=>{a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${Et(r[d].shape.length)}; `}),a+=`outShape : ${Et(e.shape.length)} ; `;let i=e.shape.length-1;a+=`
       outShapeStrides: ${Et(i)}; `,t.size!=null&&(a+="size : i32; "),a+="dispatchSize : vec3<u32>; ",t.uniforms&&(a+=t.uniforms),a+="};",s.push(a),t.atomic?s.push(`
    [[block]] struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):s.push(`
    [[block]] struct Matrix0 {
        numbers: array<${Mx(e.dtype,t.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),t.variableNames.forEach((f,d)=>{s.push(`
    [[block]] struct Matrix${1+d} {
      numbers: array<${Mx(r[d].dtype,t.isVec4)}>;
    };
    [[group(0), binding(${1+d})]] var<storage, read> ${f} : Matrix${1+d};
    `)}),a!==""&&s.push(`
    [[group(0), binding(${1+t.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `),s.push(o);let[u,l]=tie(e.shape,t.dispatchLayout),p=aG(e.shape),c=[oG,s.join(`
`),sG,p,u,Yae(e.shape.length)];if(t.atomic||c.push(Qae(e.shape,e.dtype,t.isVec4)),l===e.shape.length){let f=r.map(d=>Zae(d,e.shape,t.isVec4,t.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(f)}return c.push(t.getUserCode()),c.join(`
`)}var oG=`
  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }

  fn isNanCustomVec4F32(val : vec4<f32>) -> vec4<f32> {
    var res = vec4<f32> (0.0);
    for (var i = 0u; i < 4u; i = i + 1u) {
      if (isNanCustom(val[i])) {
        res[i] = 1.0;
      } else {
        res[i] = 0.0;
      }
    }
    return res;
  }

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) &&
        all(coord < shape);
  }
  `,sG=`
  fn getFlatIndex1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }

  fn getFlatIndex2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return i32(dot(vec2<f32>(coords), vec2<f32>(f32(shape.y), 1.0)));
  }

  fn getFlatIndex3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return i32(dot(vec3<f32>(coords), vec3<f32>(f32(shape.y) * f32(shape.z), f32(shape.z), 1.0)));
  }

  fn getFlatIndex4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return i32(dot(vec4<f32>(coords), vec4<f32>(
        f32(shape.y) * f32(shape.z) * f32(shape.w), f32(shape.z) * f32(shape.w), f32(shape.w), 1.0)));
  }

  // Only used when the y/z dimension of workgroup size is 1.
  fn getGlobalIndex(globalId : vec3<u32>, localId : vec3<u32>) -> i32 {
    if (uniforms.dispatchSize.y == 1u && uniforms.dispatchSize.z == 1u) {
      return i32(globalId.x);
    }
    let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
      localId.y * workGroupSizeX + localId.x;
    let workGroupID = (globalId - localId)/vec3<u32>(
      workGroupSizeX, workGroupSizeY, workGroupSizeZ);
    return i32((workGroupID.z * uniforms.dispatchSize.x * uniforms.dispatchSize.y +
      workGroupID.y * uniforms.dispatchSize.x + workGroupID.x) *
      (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
      localInvocationIndex);
  }
`;function Yae(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputFlatIndex(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputFlatIndex(coords : vec2<i32>) -> i32 {
          return i32(dot(vec2<f32>(coords), vec2<f32>(f32(uniforms.outShapeStrides), 1.0)));
        }
        `;break;case 3:e+=`
        fn getOutputFlatIndex(coords : vec3<i32>) -> i32 {
          return i32(dot(vec3<f32>(coords), vec3<f32>(f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), 1.0)));
        }
        `;break;case 4:e+=`
        fn getOutputFlatIndex(coords : vec4<i32>) -> i32 {
          return i32(dot(vec4<f32>(coords), vec4<f32>(
            f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), f32(uniforms.outShapeStrides.z), 1.0)));
        }
        `;break;default:b.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function Qae(r,e,t){let n=r.length,o=Mx(e,t),s;if(t?s=`fn setOutputFlat(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${o}(value);
    }`:s=`fn setOutputFlat(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${o}(value);
    }`,n>=2){let a=["d0","d1","d2","d3"].slice(0,n),i=Et(n);t?s+=`
      fn setOutput(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputFlatIndex(${i}(${a.join(", ")}));
        setOutputFlat(flatIndex / 4, value);
      }
      fn setOutputI32(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputFlatIndex(${i}(${a.join(", ")}));
        setOutputFlatI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutput(${a.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputFlatIndex(${i}(${a.join(", ")}));
        setOutputFlat(flatIndex, value);
      }
      fn setOutputI32(${a.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputFlatIndex(${i}(${a.join(", ")}));
        setOutputFlatI32(flatIndex, value);
      }
    `}return s}function Zae(r,e,t,n){let o=Jae(r,t);return r.shape.length<=e.length&&(o+=eie(r,e,t,n)),o}function Jae(r,e){let t=r.name,n=r.shape.length,o=Et(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=["d0","d1","d2","d3"].slice(0,n),i=a.map(p=>`${p} : i32`).join(", ");if(n<1)return e?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${t}.numbers[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${t}.numbers[0]);
      }
    `;let u=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,l=`${n}D`;return n===0&&(l="1D"),e?`
      fn ${s}(${i}) -> vec4<f32> {
        return vec4<f32>(${t}.numbers[getFlatIndex${l}(${o}(${a.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${i}) -> f32 {
      return f32(${t}.numbers[getFlatIndex${l}(${o}(${a.join(",")}),
        ${u})]);
    }
   `}function eie(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"AtOutCoords",i=r.shape.length,u=e.length,l=Et(u);if(b.arraysEqual(r.shape,e)&&n)return t?`
        fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[globalIndex]);
        }

        fn ${a}ByCoords(coords : ${l}) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[${u>1?"getOutputFlatIndex(coords)":"coords"} / 4]);
        }
        `:`
      fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
        return f32(${o}.numbers[globalIndex]);
      }

      fn ${a}ByCoords(coords : ${l}) -> f32 {
        return f32(${o}.numbers[${u>1?"getOutputFlatIndex(coords)":"coords"}]);
      }
      `;let p=I.getBroadcastDims(r.shape,e),c=u-i,m="";if(i===0)return t?`
      fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${a}ByCoords(coords : ${l}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${a}ByCoords(coords : ${l}) -> f32{
        return get${s}();
      }
    `;u<2&&p.length>=1?m="coords = 0;":m=p.map(g=>`coords[${g+c}] = 0;`).join(`
`);let f="";if(u<2&&i>0)f="coords";else if(u>1){let g=Et(i),y=r.shape.map((T,x)=>`coords[${x+c}]`).join(", ");f=`${g}(${y})`}else f="coords";let d=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return t?`
      fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        var coords = getOutputCoords(globalId, globalIndex);
        ${m}
        return ${o}.numbers[getFlatIndex${h}(${f}, ${d}) / 4];
      }

      fn ${a}ByCoords(coordsIn : ${l}) -> vec4<f32> {
        var coords = coordsIn;
        ${m}
        return ${o}.numbers[getFlatIndex${h}(${f}, ${d}) / 4];
      }
    `:`
    fn ${a}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
      var coords = getOutputCoords(globalId, globalIndex);
      ${m}
      return f32(${o}.numbers[getFlatIndex${h}(${f}, ${d})]);
    }

    fn ${a}ByCoords(coordsIn : ${l}) -> f32 {
      var coords = coordsIn;
      ${m}
      return f32(${o}.numbers[getFlatIndex${h}(${f}, ${d})]);
    }
  `}function tie(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length;if(t.length===s)return[`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${Et(s)}{
      return getCoordsFromFlatIndex(i32(globalIndex));
    }
    `,s];let a="",i=[t,n,o],u=0;for(let m=0;m<i.length;m++){let f=i[m];if(f.length!==0)if(u+=f.length,f.length===1)a+=`let d${f[0]} = i32(globalId[${m}]);`;else{let d=rG(f,"uniforms.outShape");a+=`var index${m} = i32(globalId[${m}]);`;for(let h=0;h<d.length;h++)a+=`let d${f[h]} = index${m} / ${d[h]};`,h===d.length-1?a+=`let d${f[h+1]} = index${m} - d${f[h]} * ${d[h]};`:a+=`index${m} = index${m} - d${f[h]} * ${d[h]};`}}let l=[];for(let m=0;m<u;m++)l.push(`d${m}`);let p=Et(u),c=`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${p} {
    ${a}
  `;return l.length===0?c+=`return ${p}(0); }`:c+=`return ${p}(${l.join(",")}); }`,[c,u]}function aG(r){let e=r.length;if(e<=1)return"fn getCoordsFromFlatIndex(index : i32) -> i32 { return index; }";let t=b.computeStrides(r),n=Et(e),o=[];for(let a=0;a<e;a++)o.push(`d${a}`);if(t.length===1)return`    fn getCoordsFromFlatIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s="var index2 = index;"+t.map((a,i)=>{let u=`let ${o[i]} = index2 / uniforms.outShapeStrides[${i}]`,l=i===t.length-1?`let ${o[i+1]} = index2 - ${o[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${o[i]} * uniforms.outShapeStrides[${i}]`;return`${u}; ${l};`}).join("");return`
    fn getCoordsFromFlatIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}var hA={};Ye(hA,{ArrayBufferToTypedArray:()=>dA,GPUBytesPerElement:()=>Ex,computeDispatch:()=>fe,computeWorkGroupSizeForConv2d:()=>tg,computeWorkGroupSizeForMatMul:()=>rg,computeWorkPerThreadForConv2d:()=>ng,flatDispatchLayout:()=>ve,isWebGPUSupported:()=>og,tilesFitEvenlyIntoShape:()=>Jo});var Mp=65535;var Ep=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function Jo(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]==0)}function fe(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(Ep(r.x.map(u=>e[u]))/(t[0]*n[0])),r.y?Math.ceil(Ep(r.y.map(u=>e[u]))/(t[1]*n[1])):1,r.z?Math.ceil(Ep(r.z.map(u=>e[u]))/(t[2]*n[2])):1];if(o<=Mp&&s<=Mp&&a<=Mp)return[o,s,a];b.assert(o>Mp&&r.y===void 0&&r.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(o));return i>Mp?(i=Math.ceil(Math.cbrt(o)),b.assert(i<=Mp,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function tg(r,e){let t=Ep(r.x.map(o=>e[o])),n=Ep(r.y.map(o=>e[o]));return t<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function rg(r,e,t){return r===1?[32,1,1]:t===1?[1,32,1]:[8,8,1]}function ng(r,e){let t=Ep(r.x.map(o=>e[o])),n=Ep(r.y.map(o=>e[o]));return t<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function ve(r){return{x:r.map((e,t)=>t)}}function Ex(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function dA(r,e){if(e==="float32")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"||e==="string"){let t=new Int32Array(r),n=new ArrayBuffer(t.length),o=new Uint8Array(n);for(let s=0;s<t.length;s++)o[s]=t[s];return o}else throw new Error(`Unknown dtype ${e}`)}function og(){return!!navigator.gpu}var Le;(function(x){x[x.MUL=0]="MUL",x[x.ADD=1]="ADD",x[x.SUB=2]="SUB",x[x.DIV=3]="DIV",x[x.EQUAL=4]="EQUAL",x[x.GREATER=5]="GREATER",x[x.GREATER_EQUAL=6]="GREATER_EQUAL",x[x.LESS=7]="LESS",x[x.LESS_EQUAL=8]="LESS_EQUAL",x[x.LOGICAL_AND=9]="LOGICAL_AND",x[x.NOT_EQUAL=10]="NOT_EQUAL",x[x.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",x[x.INT_DIV=12]="INT_DIV",x[x.POW=13]="POW",x[x.PRELU=14]="PRELU",x[x.MAX=15]="MAX",x[x.MIN=16]="MIN",x[x.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",x[x.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"})(Le||(Le={}));var rie="return a + b;",nie="return areal * breal - aimag * bimag;",oie="return areal * bimag + aimag * breal;",sie="return a / b;",aie="return a * b;",iie="return (a - b) * (a - b);",uie="return a - b;",lie="return f32(a == b);",pie="return vec4<f32>(a == b);",cie="return f32(a > b);",mie="return vec4<f32>(a > b);",fie="return f32(a >= b);",die="return vec4<f32>(a >= b);",hie="return f32(a < b);",gie="return vec4<f32>(a < b);",bie="return f32(a <= b);",yie="return vec4<f32>(a <= b);",xie="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Tie=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,kie=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,iG=`
  if (isNaN.r > 0.) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g > 0.) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b > 0.) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a > 0.) {
    resultTemp.a = uniforms.NAN;
  }
  `,Iie=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Cie=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,vie="return f32(a != b);",wie="return vec4<f32>(a != b);",Sie=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,_ie=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = vec4<f32>(a < vec4<f32>(0.0)) * vec4<f32>(floor(b) < b);
  ${iG}
  return resultTemp;
  `,Aie="if (a < 0.0) { return b * a; }  return a;",Nie=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function uG(r,e){let t=e?iG:kie;return e?`
    var resultTemp = vec4<f32>(${r}(a, b));
    let isNaN = min(vec4<f32>(isNanCustomVec4F32(a)) + vec4<f32>(isNanCustomVec4F32(b)), vec4<f32>(1.0));
    `+t+`
    return resultTemp;
  `:t+`
    return ${r}(a, b);
  `}function hi(r,e){switch(r){case 0:return aie;case 1:return rie;case 2:return uie;case 3:return sie;case 4:return e?pie:lie;case 5:return e?mie:cie;case 6:return e?die:fie;case 7:return e?gie:hie;case 8:return e?yie:bie;case 9:return e?Tie:xie;case 10:return e?wie:vie;case 11:return iie;case 12:return e?Cie:Iie;case 14:return e?Nie:Aie;case 15:return uG("max",e);case 16:return uG("min",e);case 13:return e?_ie:Sie;case 17:return nie;case 18:return oie;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var we;(function(A){A[A.ABS=0]="ABS",A[A.CEIL=1]="CEIL",A[A.COS=2]="COS",A[A.COSH=3]="COSH",A[A.ELU=4]="ELU",A[A.EXP=5]="EXP",A[A.EXPM1=6]="EXPM1",A[A.FLOOR=7]="FLOOR",A[A.LINEAR=8]="LINEAR",A[A.LOG=9]="LOG",A[A.LOGICAL_NOT=10]="LOGICAL_NOT",A[A.NEG=11]="NEG",A[A.PRELU=12]="PRELU",A[A.RELU=13]="RELU",A[A.RELU6=14]="RELU6",A[A.RSQRT=15]="RSQRT",A[A.SIN=16]="SIN",A[A.SINH=17]="SINH",A[A.SIGMOID=18]="SIGMOID",A[A.SQRT=19]="SQRT",A[A.SQUARE=20]="SQUARE",A[A.TANH=21]="TANH",A[A.TO_INT=22]="TO_INT"})(we||(we={}));var Die="return abs(a);",Pie="return ceil(a);",Fie="return cos(a);",Mie=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Eie="return exp(a) - 1.0;",Rie="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Lie=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,$ie="return exp(a);",Bie="return floor(a);",Oie="return a;",zie=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Gie="return f32(!(a >= 1.0));",Wie="return -a;",Uie="return (a < 0.0) ? b * a : a;",Kie="return max(a, 0.0);",Vie="return clamp(a, 0.0, 6.0);",jie="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Hie=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNan(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,qie="return 1.0/sqrt(a);",Xie="return 1.0 / (1.0 + exp(-1.0 * a));",Yie="return sin(a);",Qie=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Zie="return sqrt(a);",Jie="return a * a;",eue=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,tue="return f32(i32((a)));";function ml(r,e){switch(r){case 0:return Die;case 2:return Fie;case 3:return Mie;case 1:return Pie;case 4:return e?Lie:Rie;case 5:return $ie;case 6:return Eie;case 7:return Bie;case 8:return Oie;case 9:return zie;case 10:return Gie;case 11:return Wie;case 12:return Uie;case 13:return e?Hie:Kie;case 14:return e?jie:Vie;case 15:return qie;case 18:return Xie;case 16:return Yie;case 17:return Qie;case 19:return Zie;case 20:return Jie;case 21:return eue;case 22:return tue;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function Qr(r,e=!1){if(r===null)return null;if(r==="linear")return ml(we.LINEAR);if(r==="relu")return ml(we.RELU,e);if(r==="elu")return ml(we.ELU,e);if(r==="relu6")return ml(we.RELU6,e);if(r==="prelu")return hi(Le.PRELU,e);if(r==="sigmoid")return ml(we.SIGMOID);throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`)}function gA(r,e){let t={RowPerThread:r[1],ColPerThread:r[0],TileAOuter:e[1]*r[1],TileBOuter:e[0]*r[0],TileInner:e[0]*r[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${t.TileInner/t.ColPerThread}>, ${t.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${t.TileBOuter/t.ColPerThread}>, ${t.TileInner}>;

  let RowPerThread = ${t.RowPerThread};
  let ColPerThread = ${t.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${t.TileAOuter};
  let TileBOuter = ${t.TileBOuter};
  let TileInner = ${t.TileInner};

  ${de()} {

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${t.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${e[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
}`}function rue(r){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;
  let tileSize = ${r[0]*4};
  ${de()} {
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var bA=class{constructor(e,t,n,o=null,s=null,a=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[16,16,1];this.isVec4=!0;this.vecSize=4;this.outputShape=t,this.workGroupSize=rg(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let i=o!=null,u=a!=null;i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=i,this.activation=s,this.hasPreluActivationWeights=u,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],o=this.workGroupSize[1]*this.workPerThread,s=this.workGroupSize[0]*this.vecSize,a=s,i=[o,a],u=[a,s];return[Jo(i,this.aShape.slice(1)),Jo(u,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",o="";if(this.activation){let i=Qr(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${i}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${i}
            }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${s}
          ${o}
          setOutput(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?gA([this.vecSize,this.workPerThread,1],this.workGroupSize):rue(this.workGroupSize)}

    `}};function sg(r,e){let t=e[1]*r[1],n=e[0]*r[0],o=t>n?t:n;return`
    var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
    var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${o}>;
    ${de()} {
      let tileRow = i32(localId.y) * ${r[1]};
      let tileCol = i32(localId.x) * ${r[0]};

      let globalRow = i32(globalId.y) * ${r[1]};
      let globalCol = i32(globalId.x) * ${r[0]};

      let numTiles = (uniforms.dimInner - 1) / ${o} + 1;

      var acc : array<array<f32, ${r[0]}>, ${r[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${r[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${o} / ${e[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${o} / ${e[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${o} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${o} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${o}; k = k + 1) {
          for (var inner = 0; inner < ${r[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function nue(r){return`
    let TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${de()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var ag=class{constructor(e,t,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=o?e[1]:e[2];this.workGroupSize=rg(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),b.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let p=a!=null,c=u!=null;p&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=o,this.transposeB=s,this.addBias=p,this.activation=i,this.hasPreluActivationWeights=c;let m=this.outputShape[2],f=this.transposeB?[this.outputShape[0],m,l]:[this.outputShape[0],l,m];[this.fitA,this.fitB]=this.getShapeFit(f),this.shaderKey=`matMulPacked_${this.workPerThread}_${o}_${s}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,o=t>n?t:n;this.outputShape[1]===1&&(o*=4),b.assert(o%this.workGroupSize[0]==0&&o%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[t,o],a=[o,n];return[Jo(s,this.aShape.slice(1)),Jo(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",o="";if(this.activation){let i=Qr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutput(batch, row, col, value);
      }
      ${this.outputShape[1]>1?sg([this.workPerThread,this.workPerThread,1],this.workGroupSize):nue(this.workGroupSize)}
    `}};function oue(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${de()} {
      ${ge()}
      let coords = getOutputCoords(globalId, index);
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var yA=class{constructor(e,t=!1,n=!1,o=null,s=null,a=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize);let i=o!=null,u=a!=null;i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=i,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",o="";if(this.activation){let i=Qr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutput(batch, row, col, value);
      }
      ${oue()}
    `}};function sue(r){let e=r[1]/2,t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${t}>, ${n}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${de()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        }
      } else {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${e};
    if (tileRow >= ${e} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var xA=class{constructor(e,t,n,o=null,s=null,a=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[8,16,1];b.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let i=o!=null;i&&this.variableNames.push("bias");let u=a!=null;u&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",o="";if(this.activation){let i=Qr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
            ${i}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${i}
        }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${s}
          ${o}
          setOutput(batch, row, col, value);
        }
      }
      ${sue(this.workGroupSize)}
    `}};function ze(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s),i=b.sizeFromShape(a);return b.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var lG={kernelName:fs,backendName:"webgpu",kernelFunc:ze};function Bm({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,c=t?r.shape[l-2]:r.shape[l-1],m=n?e.shape[p-1]:e.shape[p-2],f=t?r.shape[l-1]:r.shape[l-2],d=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),k=As.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,d]);b.assert(c===m,()=>`Error in matMul: inner shapes (${c}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let v=t?[y,c,f]:[y,f,c],N=n?[T,d,m]:[T,m,d],A=ze({inputs:{x:r},backend:o,attrs:{shape:v}}),F=ze({inputs:{x:e},backend:o,attrs:{shape:N}}),E=[A,F],$=Math.max(y,T),U=c%4==0&&d%4==0&&!t&&!n&&d>=32,K;f*d<=32?K=new yA([$,f,d],t,n,s,u,a):!t&&!n&&(f<=16&&(d<=512||m>=2*d)||d<=16&&(f<=512||c>=2*f))?K=new xA(v,N,[$,f,d],s,u,a):U?K=new bA(v,[$,f,d],G().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,u,a):K=new ag(v,[$,f,d],G().get("WEBGPU_MATMUL_WORK_PER_THREAD"),t,n,s,u,a);let B=[A,F];s&&B.push(s),a&&B.push(a);let V=[{type:"int32",data:[f]},{type:"int32",data:[d]},{type:"int32",data:[c]}],j=o.runWebGPUProgram(K,B,r.dtype,V),q=ze({inputs:{x:j},backend:o,attrs:{shape:k}});E.push(j);for(let J of E)o.disposeData(J.dataId);return q}function aue(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n;return Bm({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:c,activation:p})}var pG={kernelName:ks,backendName:"webgpu",kernelFunc:aue};var Rx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${hi(this.op,!1)}
      }

      ${de()} {
        ${ge()}
        if(index < uniforms.size) {
          let areal = getARealAtOutCoordsByGlobalId(globalId, index);
          let aimag = getAImagAtOutCoordsByGlobalId(globalId, index);
          let breal = getBRealAtOutCoordsByGlobalId(globalId, index);
          let bimag = getBImagAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var TA=class{constructor(e,t,n,o){this.variableNames=["A","B"];let s=256;this.workGroupSize=[s,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ve(this.outputShape),this.lastDimensionSize=o?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=o,this.op=e,this.size=b.sizeFromShape(this.outputShape),this.sizeFit=this.size%(this.workGroupSize[0]*this.workPerThread)==0,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}_${this.sizeFit}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAAtOutCoordsByCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBAtOutCoordsByCoords(coords);`,n=this.sizeFit?`let coords = getCoordsFromFlatIndex(flatIndex);

         ${t}
         setOutputFlat(flatIndex, binaryOperation(a, b));`:`if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            ${t}
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${hi(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${de()} {
          ${ge()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;

            ${n}
          }
        }
        `}};var kA=class{constructor(e,t,n){this.variableNames=["A","B"];this.workPerThread=4;this.isVec4=!0;let o=128;this.workGroupSize=[o,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.fitShape=this.size%this.workGroupSize[0]==0,this.shaderKey=`binaryVec4_${e}_${this.fitShape}`,this.size=b.sizeFromShape(this.outputShape)/this.workPerThread}getUserCode(){let e,n=`fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
          ${hi(this.op,this.isVec4)}
        }`;return this.fitShape?e=`
      ${n}
      ${de()} {
        ${ge()}
        let a = vec4<f32>(A.numbers[index]);
        let b = vec4<f32>(B.numbers[index]);
        setOutputFlat(index, binaryOperation(a, b));
      }
    `:e=`
      ${n}
      ${de()} {
        ${ge()}
        if (index < uniforms.size) {
          let a = vec4<f32>(A.numbers[index]);
          let b = vec4<f32>(B.numbers[index]);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
    `,e}};var ig=class{constructor(e,t,n){this.variableNames=["A","B"];let o=128;this.workGroupSize=[o,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ve(this.outputShape),this.size=b.sizeFromShape(this.outputShape),this.sizeFit=this.size%o==0,this.shapesFit=b.arraysEqual(t,n)&&this.sizeFit,this.workPerThread=this.sizeFit||this.shapesFit?1:2,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey=`binary_${e}_${this.sizeFit}_${this.shapesFit}`,this.op=e}getUserCode(){let e,n=`          fn binaryOperation(a : f32, b : f32) -> f32 {
      ${hi(this.op,!1)}
    }`;return this.shapesFit?e=`
          ${n}
          ${de()} {
            ${ge()}

            let a = f32(A[index]);
            let b = f32(B[index]);
            setOutputFlat(index, binaryOperation(a, b));
          }
        `:this.sizeFit?e=`
      ${n}
      ${de()} {
        ${ge()}

        let coords = getCoordsFromFlatIndex(index);

        let a = getAAtOutCoordsByCoords(coords);
        let b = getBAtOutCoordsByCoords(coords);
        setOutputFlat(index, binaryOperation(a, b));
      }
      `:e=`
      ${n}
      ${de()} {
        ${ge()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1 ) {
          let flatIndex = index * ${this.workPerThread} + i;

          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            let a = getAAtOutCoordsByCoords(coords);
            let b = getBAtOutCoordsByCoords(coords);
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }
        }
      }
      `,e}};function IA(r,e,t){if(b.arraysEqual(e,t)&&b.sizeFromShape(e)%4==0)return new kA(r,e,t);let o=e.length===1&&t.length>1&&e[0]<1024,s=t.length===1&&e.length>1&&t[0]<1024;return o||s?new TA(r,e,t,s):new ig(r,e,t)}function wr(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var cG={kernelName:Un,backendName:"webgpu",kernelFunc:wr};function Oa(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.tensorMap.get(s.dataId),i=wr({inputs:{x:n},backend:t}),u=wr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:u},s}var mG={kernelName:Du,backendName:"webgpu",kernelFunc:Oa};var xu=class{constructor(e,t){this.variableNames=["A"];let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.size=b.sizeFromShape(this.outputShape),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${ml(this.op,!1)}
      }
      ${de()} {
        ${ge()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, unaryOperation(a));
        }
      }
      `}};function dt({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=t||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let l=a.tensorMap.get(s.dataId),p=e(l.values,i);return a.makeTensorInfo(s.shape,i,p)}let u=new xu(s.shape,r);return a.runWebGPUProgram(u,[s],i)}}function At({opSnippet:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(t&&a.dtype==="complex64"){let c=u.tensorMap.get(a.dataId),m=u.tensorMap.get(i.dataId),f,d;if(r!==Le.MUL)[f,d]=[[c.complexTensorInfos.real,m.complexTensorInfos.real],[c.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(g=>{let[y,T]=g,x={dataId:y.dataId,dtype:y.dtype,shape:a.shape},k={dataId:T.dataId,dtype:T.dtype,shape:i.shape},v=IA(r,a.shape,i.shape);return u.runWebGPUProgram(v,[x,k],Kt(y.dtype,T.dtype))});else{let g=new Rx(Le.COMPLEX_MULTIPLY_REAL,a.shape,i.shape),y=new Rx(Le.COMPLEX_MULTIPLY_IMAG,a.shape,i.shape),T=[{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:a.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:i.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:i.shape}];f=u.runWebGPUProgram(g,T,"float32"),d=u.runWebGPUProgram(y,T,"float32")}let h=Oa({inputs:{real:f,imag:d},backend:u});return u.disposeData(f.dataId),u.disposeData(d.dataId),h}let l=n||Kt(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||u.shouldExecuteOnCPU([a,i]))&&e!=null){let c=u.tensorMap.get(a.dataId).values,m=u.tensorMap.get(i.dataId).values,f=a.dtype==="string"?I.fromUint8ToStringArray(c):c,d=a.dtype==="string"?I.fromUint8ToStringArray(m):m,[h,g]=e(a.shape,i.shape,f,d,l);return u.makeTensorInfo(g,l,h)}let p=IA(r,a.shape,i.shape);return u.runWebGPUProgram(p,[a,i],l)}}var{addImpl:fG,ceilImpl:dG,concatImpl:hG,equalImpl:gG,expImpl:bG,expm1Impl:yG,floorImpl:xG,gatherNdImpl:TG,gatherV2Impl:kG,greaterEqualImpl:IG,greaterImpl:CG,lessEqualImpl:vG,lessImpl:wG,logImpl:SG,maxImpl:_G,maximumImpl:AG,minimumImpl:NG,multiplyImpl:DG,negImpl:PG,notEqualImpl:FG,prodImpl:MG,rangeImpl:EG,rsqrtImpl:RG,simpleAbsImpl:LG,sliceImpl:$G,stridedSliceImpl:BG,stringNGramsImpl:OG,subImpl:zG,tileImpl:GG,topKImpl:WG,transposeImpl:UG,uniqueImpl:lCr}=wm;var iue=dt({opType:we.ABS,cpuKernelImpl:LG}),KG={kernelName:ss,backendName:"webgpu",kernelFunc:iue};var uue=At({opSnippet:Le.ADD,cpuKernelImpl:fG,supportsComplex:!0}),VG={kernelName:wn,backendName:"webgpu",kernelFunc:uue};var CA=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}AtOutCoordsByCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${de()} {
        ${ge()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputFlat(flatIndex, ${t});
          }
        }
      }
    `}};function lue(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return wr({inputs:{x:n[0]},backend:t});let o=n.map(i=>i.dtype).reduce((i,u)=>Kt(i,u)),s=n.map(i=>i.shape),a=new CA(s);return t.runWebGPUProgram(a,n,o)}var jG={kernelName:ro,backendName:"webgpu",kernelFunc:lue};var ug=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="axis : i32;";let o=[t];I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.length),this.op=n==="min"?"<":">";let[s,a]=I.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s;let i=b.sizeFromShape(a);this.reductionFactor=2;let u=256,l=Math.min(Math.ceil(i/this.reductionFactor),u);this.workGroupSize=[l,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((p,c)=>c)},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=this.workGroupSize[0]>1,t=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,n=`
      xBestIndices[localId.x] = bestIndex;
      xBestValues[localId.x] = bestValue;

      for(var currentSize = WorkGroupSize; currentSize > 1; currentSize = DIV_CEIL(currentSize, ${this.reductionFactor})) {
        workgroupBarrier();

        for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
          let i = i32(localId.x) * ${this.reductionFactor} + w;
          if (i < currentSize) {
            let candidateIndex = xBestIndices[i];
            let candidate = xBestValues[i];
            if(candidate ${this.op} bestValue && !isNanCustom(candidate)) {
              bestValue = candidate;
              bestIndex = candidateIndex;
            }
          }
        }

        xBestIndices[localId.x] = bestIndex;
        xBestValues[localId.x] = bestValue;
      }

      if (localId.x == 0u) {
        setOutputFlatI32(flatOutputIndex, i32(bestIndex));
      }
    `,o=Et(this.outputShape.length),s=(u,l)=>this.outputShape.length===1?u:`${u}[${l}]`,a=u=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${u}]`;return`
      fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
      }

      let WorkGroupSize = ${this.workGroupSize[0]};

      ${e?t:""}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(globalId : vec3<u32>, globalIndex : i32) -> vec2<i32>{
        let outputCoords : ${o} = getOutputCoords(globalId, globalIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${a(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${s("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${de()} {
        ${ge()}
        let coordInfo = getInputCoordInfo(globalId, index);

        var bestIndex = 0;
        var bestValue = f32(x.numbers[getInputIndex(coordInfo, bestIndex)]);

        let Length = ${a("uniforms.axis")};
        let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);

        for (var w = 0; w < WorkPerThread; w = w + 1) {
          let i = i32(globalId.x) * WorkPerThread + w;
          if (i < Length) {
            let candidate = f32(x.numbers[getInputIndex(coordInfo, i)]);
            if (candidate ${this.op} bestValue && !isNanCustom(f32(candidate))) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
        }

        let flatOutputIndex = i32(globalId.y);
        ${e?n:"setOutputFlatI32(flatOutputIndex, bestIndex);"}
      }
    `}};var vA=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${de()} {
        ${ge()}
        let workGroupID = (globalId - localId)/vec3<u32>(${this.workGroupSize[0]}u, ${this.workGroupSize[1]}u, ${this.workGroupSize[2]}u);
        var x = i32(workGroupID.x) * TILE_DIM + i32(localId.x);
        var y = i32(workGroupID.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workGroupID.y) * TILE_DIM + i32(localId.x);
        y = i32(workGroupID.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputFlat((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var wA=class{constructor(e,t){this.variableNames=["A"];this.workPerThread=4;this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=Et(this.outputShape.length),t=pue(this.newDim);return`
      ${de()} {
        ${ge()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromFlatIndex(flatIndex);
            setOutputFlat(flatIndex, A.numbers[getFlatIndex${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function pue(r){let e=r.length;if(e>4)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC[${n}]`;return t.join()}function es(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];if(t.shouldExecuteOnCPU([o])){let c=a.tensorMap.get(o.dataId).values,m=UG(c,o.shape,o.dtype,s,u);return t.makeTensorInfo(u,o.dtype,m)}if(o.shape.length===2&&b.arraysEqual(s,[1,0])){let p=new vA(o.shape,s);return a.runWebGPUProgram(p,[o],o.dtype)}let l=new wA(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}var HG={kernelName:Ko,backendName:"webgpu",kernelFunc:es};function cue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=es({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=new ug(u.shape,a[0],"max"),c=[{type:"int32",data:[a[0]]}],m=t.runWebGPUProgram(p,[u],"int32",c);return l.forEach(f=>t.disposeData(f.dataId)),m}var qG={kernelName:no,backendName:"webgpu",kernelFunc:cue};function mue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=es({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=I.getInnerMostAxes(a.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=new ug(u.shape,a[0],"min"),c=[{type:"int32",data:[a[0]]}],m=t.runWebGPUProgram(p,[u],"int32",c);return l.forEach(f=>t.disposeData(f.dataId)),m}var XG={kernelName:Va,backendName:"webgpu",kernelFunc:mue};var lg=class{constructor(e,t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;";this.workGroupSize=[128,1,1];this.outputShape=e.outShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${de()} {
        ${ge()}
        let coords = getOutputCoords(globalId, index);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutput(batch, coords[1], coords[2], coords[3], ${t});
        }
      }
    `}};var pg=class{constructor(e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>;";this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${de()} {
        ${ge()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let d = coords[3];

        if (all(coords < uniforms.outShape)) {
          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutput(batch, coords[1], coords[2], d, value);
        }
      }
    `}};function fue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=I.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return wr({inputs:{x:o},backend:t});let c,m=[{type:"int32",data:[p.strideHeight,p.strideWidth]}];return p.filterHeight===1&&p.filterWidth===1?c=new pg(p):(c=new lg(p,"avg"),m.push({type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]})),t.runWebGPUProgram(c,[o],o.dtype,m)}var YG={kernelName:oo,backendName:"webgpu",kernelFunc:fue};function due(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Bm({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var QG={kernelName:so,backendName:"webgpu",kernelFunc:due};var SA=class{constructor(e,t){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.outputShape=t,this.rank=t.length,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Et(e.length)}; `,this.shaderKey="slice",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=Et(this.rank),t=hue(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${_A[a]} = uniforms.start[${a}] + coords.${_A[a]};`),`
      ${de()} {
        ${ge()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getOutputCoords(globalId, index);
          ${n.join(`
`)}
          setOutputFlat(index, getSource(${t}));
        }
      }
    `}},_A=["x","y","z","w","u","v"];function hue(r){if(r===1)return"sourceLoc";if(r<=6)return _A.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function za(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,u]=kt.parseSliceParams(o,s,a);if(kt.assertParamsValid(o,i,u),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let c=t.tensorMap.get(o.dataId),m=$G(c.values,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,m)}if(b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);let l=new SA(i,u),p=[{type:"int32",data:i}];return t.runWebGPUProgram(l,[o],o.dtype,p)}var ZG={kernelName:hs,backendName:"webgpu",kernelFunc:za};var gue=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=I.getReshaped(o.shape,s,i),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,i),c=I.getSliceBeginCoords(a,s.length),m=I.getSliceSize(p,a,s.length),f=[],d=ze({inputs:{x:o},backend:t,attrs:{shape:u}}),h=es({inputs:{x:d},backend:t,attrs:{perm:l}}),g=ze({inputs:{x:h},backend:t,attrs:{shape:p}}),y=za({inputs:{x:g},backend:t,attrs:{begin:c,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(T=>t.disposeData(T.dataId)),y},JG={kernelName:as,backendName:"webgpu",kernelFunc:gue};var AA=At({opSnippet:Le.NOT_EQUAL,dtype:"bool",cpuKernelImpl:FG}),eW={kernelName:ia,backendName:"webgpu",kernelFunc:AA};function Tu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return wr({inputs:{x:o.complexTensorInfos.real},backend:t})}var tW={kernelName:Bu,backendName:"webgpu",kernelFunc:Tu};function rW(r,e){let t=new xu(r.shape,we.TO_INT),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function NA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return wr({inputs:{x:o},backend:t});let a=Tt(o.shape),i=NA({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Oa({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeData(i.dataId),u}if(o.dtype==="complex64"){let a=Tu({inputs:{input:o},backend:t}),i=NA({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeData(a.dataId),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=wr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return rW(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=AA({inputs:{a:o,b:a},backend:t});return t.disposeData(a.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var nW={kernelName:Gn,backendName:"webgpu",kernelFunc:NA};var bue=dt({opType:we.CEIL,cpuKernelImpl:dG}),oW={kernelName:ao,backendName:"webgpu",kernelFunc:bue};var DA=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4",this.size=b.sizeFromShape(this.outputShape)/4}getUserCode(){return`
      ${de()} {
        ${ge()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputFlat(index, clampedValue);
        }
      }
    `}};var PA=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${de()} {
        ${ge()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          if (isNanCustom(value)) {
            setOutputFlat(index, value);
            return;
          }
          setOutputFlat(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function yue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i,u=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return b.sizeFromShape(o.shape)%4==0?i=new DA(o.shape):i=new PA(o.shape),t.runWebGPUProgram(i,[o],o.dtype,u)}var sW={kernelName:Wn,backendName:"webgpu",kernelFunc:yue};var FA=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shapes=e,this.shaderKey=`concat${e}`,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=new Array(this.shapes.length-1),t=[];if(e.length>0){e[0]=this.shapes[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+this.shapes[a][1];t.push(`if (yC < ${e[0]}){ setOutput(coords.x, coords.y, getT0(yR, yC)); }`);for(let a=1;a<e.length;a++){let i=e[a-1];t.push(`elseif (yC < ${e[a]}){ setOutput(coords.x, coords.y, getT${a}(yR, yC - ${i})); }`)}let o=e.length,s=e[e.length-1];t.push(`else { setOutput(coords.x, coords.y, getT${o}(yR, yC - ${s})); }`)}else t.push("setOutput(coords.x, coords.y, getT0(yR, yC));");return`
      ${de()} {
        ${ge()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function Rp(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return wr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var aW={kernelName:Ru,backendName:"webgpu",kernelFunc:Rp};function Lx(r,e,t){let n=r[0].dtype;if(n==="complex64"){let p=r.map(h=>Tu({inputs:{input:h},backend:t})),c=r.map(h=>Rp({inputs:{input:h},backend:t})),m=Lx(p,e,t),f=Lx(c,e,t),d=Oa({inputs:{real:m,imag:f},backend:t});return p.forEach(h=>t.disposeData(h.dataId)),c.forEach(h=>t.disposeData(h.dataId)),t.disposeData(m.dataId),t.disposeData(f.dataId),d}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let p=r.map(y=>{let T=b.sizeFromShape(y.shape.slice(e));return ze({inputs:{x:y},backend:t,attrs:{shape:[-1,T]}})}),c=p.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),m=I.computeOutShape(p.map(y=>y.shape),1),f=p[0].shape[0]===1,d=hG(c,m,n,f),h=I.computeOutShape(r.map(y=>y.shape),e),g=t.makeTensorInfo(h,n,d);return p.forEach(y=>t.disposeData(y.dataId)),g}let{tensors2D:s,outShape:a}=xue(r,e,t),i=new FA(s.map(p=>p.shape)),u=t.runWebGPUProgram(i,s,s[0].dtype);s.forEach(p=>t.disposeData(p.dataId));let l=ze({inputs:{x:u},backend:t,attrs:{shape:a}});return t.disposeData(u.dataId),l}function xue(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>ze({inputs:{x:s},backend:t,attrs:{shape:[b.sizeFromShape(s.shape.slice(0,e)),b.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function MA(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=I.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(l=>b.sizeFromShape(l.shape)>0);if(i.length===1)return wr({inputs:{x:i[0]},backend:t});let u=i.map(l=>l.shape);return I.assertParamsConsistent(u,s),Lx(i,s,t)}var iW={kernelName:is,backendName:"webgpu",kernelFunc:MA};var EA=class{constructor(e,t){this.variableNames=["A"];this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`;this.workPerThread=4;this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${de()} {
      ${ge()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromFlatIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputFlat(flatIndex, value);
        }
      }
    }
  `}};function $x({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=r.shape,l=t.dataFormat==="channelsLast",p=!1,c=!1,m=l?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],f=ze({inputs:{x:r},backend:n,attrs:{shape:[1,m,t.inChannels]}}),d=ze({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),h=Bm({a:f,b:d,transposeA:p,transposeB:c,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=ze({inputs:{x:h},backend:n,attrs:{shape:t.outShape}});return n.disposeData(f.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),g}function uW({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:u,filterHeight:l,inChannels:p,strideWidth:c,strideHeight:m,padInfo:f,outWidth:d,outHeight:h,dilationWidth:g,dilationHeight:y,dataFormat:T}=t,x=T==="channelsLast",k=u*l*p,v=h*d,N=[v,k],A=!1,F=!1,E=[],$=ze({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),U=ze({inputs:{x:e},backend:n,attrs:{shape:[1,k,-1]}});E.push($),E.push(U);let K=new EA(N,x),B=[{type:"int32",data:[f.left,f.top]},{type:"int32",data:[c,m]},{type:"int32",data:[g,y]},{type:"int32",data:[d]},{type:"int32",data:[p*u]},{type:"int32",data:[p]}],V=n.runWebGPUProgram(K,[$],$.dtype,B),j=ze({inputs:{x:V},backend:n,attrs:{shape:[1,N[0],N[1]]}});E.push(V),E.push(j);let q=[1,N[0],N[1]],J=new ag(q,[1,v,t.outChannels],G().get("WEBGPU_MATMUL_WORK_PER_THREAD"),A,F),Y=q[1],Q=q[2],oe=t.outChannels,re=[{type:"int32",data:[Y]},{type:"int32",data:[oe]},{type:"int32",data:[Q]}],me=n.runWebGPUProgram(J,[j,U],j.dtype,re),ae=x?[1,h,d,t.outChannels]:[1,t.outChannels,h,d],xe=ze({inputs:{x:me},backend:n,attrs:{shape:ae}});E.push(me);for(let le of E)n.disposeData(le.dataId);return xe}var cg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`;this.isVec4=!0;this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let a=[4,4,1];this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,a),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.hasLeakyreluAlpha=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(a),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],o=n,s=[t,o],a=[o,n],i=this.outputShape[1]*this.outputShape[2],u=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Jo(s,[i,l]),Jo(a,[l,u])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getFlatIndex4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } elseif (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } elseif (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=gA([4,4,1],this.workGroupSize),s=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getFlatIndex4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } elseif (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${s}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${s}
         }
         return vec4<f32>(0.0);
        `,i=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,u="",l="";if(this.activation){let m=Qr(this.activation,this.isVec4);if(this.hasPreluActivationWeights)u=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${m}
        }`;else{if(this.hasLeakyreluAlpha)throw u=`fn activation(a: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaAtOutCoords();
          ${m}
        }`,new Error("Leakyrelu is not supported.");u=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${m}
        }`}l="value = activation(value, outCoord);"}let p=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
        ${u}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${i}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${p}
            ${l}
            setOutput(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}};var mg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=tg(this.dispatchLayout,this.outputShape),this.elementsPerThread=ng(this.dispatchLayout,this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;b.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let o=[e,n],s=[n,t],a=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],u=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Jo(o,[a,u]),Jo(s,[u,i])]}getUserCode(){let e=sg(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,s="",a="";if(this.activation){let l=Qr(this.activation,!1);this.hasPreluActivationWeights?s=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${l}
                }`:s=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,a="value = activation(value, outCoord);"}let i=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
    ${s}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${o}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${i}
      ${a}
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}};var fg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;";this.workGroupSize=[128,1,1];this.outputShape=e.outShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=Qr(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${s}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${s}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutput(batch, row, col, chan, value);
        }
      }

      ${de()} {
        ${ge()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function Tue(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=t,c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,c);if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))return $x({x:o,filter:s,convInfo:m,backend:n});if(G().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&o.shape[0]===1)return uW({x:o,filter:s,convInfo:m,backend:n});let f,d=[m.padInfo.top,m.padInfo.left],h=[{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]}],g=G().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?f=new fg(m):(m.inChannels%4==0||m.inChannels===3&&m.padInfo.type==="VALID")&&m.outChannels%4==0&&m.outChannels>=64?f=new cg(m):f=new mg(m),!g){let y=m.outShape[1]*m.outShape[2],T=m.outShape[3],x=m.filterHeight*m.filterWidth*m.inShape[3];h.push({type:"int32",data:[y]},{type:"int32",data:[T]},{type:"int32",data:[x]})}return n.runWebGPUProgram(f,[o,s],o.dtype,h)}var lW={kernelName:io,backendName:"webgpu",kernelFunc:Tue};var RA=class{constructor(e){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.inShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=tg(this.dispatchLayout,this.outputShape),this.elementsPerThread=ng(this.dispatchLayout,this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getFlatIndex4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }

    ${sg(this.elementsPerThread,this.workGroupSize)}
  `}};var LA=class{constructor(e){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;";this.workGroupSize=[64,1,1];this.outputShape=e.inShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${de()} {
      ${ge()}
      let coords = getOutputCoords(globalId, index);
      if (coordsInBounds4D(coords, uniforms.outShape)) {
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutput(coords[0], coords[1], coords[2], coords[3], dotProd);
      }
    }
  `}};function kue(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,c=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(a,s.shape,i,1,u,p,!1,c),f=[{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[m.filterHeight-1-m.padInfo.top,m.filterWidth-1-m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.batchSize,m.outHeight,m.outWidth,m.outChannels]}],d;if(G().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))d=new LA(m);else{d=new RA(m);let h=m.inShape[1]*m.inShape[2],g=m.inShape[3],y=m.filterHeight*m.filterWidth*m.outChannels;f.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(d,[o,s],"float32",f)}var pW={kernelName:uo,backendName:"webgpu",kernelFunc:kue};var Iue=dt({opType:we.COS}),cW={kernelName:lo,backendName:"webgpu",kernelFunc:Iue};var Cue=dt({opType:we.COSH}),mW={kernelName:po,backendName:"webgpu",kernelFunc:Cue};var $A=class{constructor(e,t,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32;";this.workGroupSize=[64,1,1];let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,u]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      fn writeResult(coords : vec4<i32>, value : f32) {
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutput(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
      ${de()} {
        ${ge()}
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let coords = getOutputCoords(globalId, index);
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${t} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          writeResult(coords, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          writeResult(coords,newValue);
        }
      }
    `}};var vue=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,p=new $A(o.shape[3],s.shape,i,u),c=[{type:"float32",data:[l]}];return t.runWebGPUProgram(p,[o,s,a],"float32",c)},fW={kernelName:Ys,backendName:"webgpu",kernelFunc:vue};var BA=class{constructor(e,t){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.uniforms="blockSize : i32;";this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.size=b.sizeFromShape(this.outputShape),this.dataFormat=t}getUserCode(){return`
      ${de()} {
        ${ge()}
        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputFlat(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function wue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],c=u*s,m=l*s,f=p/(s*s),d=a==="NHWC"?[i,c,m,f]:[i,f,c,m],h=[{type:"int32",data:[s]}],g=new BA(d,a);return t.runWebGPUProgram(g,[o],o.dtype,h)}var dW={kernelName:Qs,backendName:"webgpu",kernelFunc:wue};var dg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;";this.workGroupSize=[4,4,4];this.isVec4=!0;this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let s=Qr(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, globalIndex);
          ${s}
        }`:e=`
        fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
            ${s}
          }
        `,t="dotProd[i] = activation(dotProd[i], globalId, index);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${e}

      ${de()} {
        ${ge()}
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutput(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}};var hg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;";this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.activation}_${this.convInfo.outChannels/this.convInfo.inChannels}`}getUserCode(){let e=this.convInfo.outChannels/this.convInfo.inChannels,t="",n="";if(this.activation){let a=Qr(this.activation,!1);this.hasPreluActivation?t=`fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, index);
          ${a}
        }`:t=`
          fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
            ${a}
          }
        `,n="dotProd = activation(dotProd, globalId, index);"}let o=this.addBias?"dotProd = dotProd + getBiasAtOutCoordsByGlobalId(globalId, index);":"";return`
      ${t}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutput(batch, row, col, chan, value);
        }
      }

      ${de()} {
        ${ge()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / ${e};
        let q = d2 - d1 * ${e};

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + ${this.convInfo.filterHeight} * uniforms.dilation[0];
        let inputColEnd = inputColStart + ${this.convInfo.filterWidth} * uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] && inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${o}
        ${n}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Sue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]);let c=I.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!0),m;c.batchSize===1&&c.inHeight===c.outHeight&&c.inWidth===c.outWidth&&c.strideHeight===1&&c.strideWidth===1&&c.filterHeight===c.filterWidth&&c.inChannels===c.outChannels&&c.filterHeight===3&&c.inChannels%4==0?m=new dg(c):m=new hg(c);let f=[{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]}];return t.runWebGPUProgram(m,[o,s],o.dtype,f)}var hW={kernelName:co,backendName:"webgpu",kernelFunc:Sue};var OA=At({opSnippet:Le.MUL,cpuKernelImpl:DG,supportsComplex:!0}),gW={kernelName:Ao,backendName:"webgpu",kernelFunc:OA};var zA=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="reduceSize : i32;";this.inputShape=[e.batchSize,e.inSize];let[o]=I.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=o.length===0?[1]:o,this.reductionFactor=2;let s=256,a=Math.min(Math.ceil(e.inSize/this.reductionFactor),s);this.workGroupSize=[a,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((i,u)=>u)},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.reduceType=t,this.shaderKey=`reduce_${t}_${n}`}getUserCode(){let e=this.workGroupSize[0]>1,t="",n="0.0";this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } elseif (candidate ${this.reduceType==="min"?"<":">"}
           bestValue)
           {  bestValue = candidate; }`,n="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(t=" bestValue = bestValue * candidate; ",n="1.0");let o=this.reduceType==="mean"?"setOutputFlat(flatOutputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputFlat(flatOutputIndex, bestValue);",s=`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `,a=`
       xBestValues[localId.x] = bestValue;
       ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`bestValue = ${n};`:" "}
       var currentSize = WorkGroupSize;
       for(; currentSize > 1;) {
         workgroupBarrier();
         for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
           let i = i32(localId.x) * ${this.reductionFactor} + w;
           if (i < currentSize) {
             let candidate = xBestValues[i];
             ${t}
           }
         }
         workgroupBarrier();
         xBestValues[localId.x] = bestValue;
         currentSize = DIV_CEIL(currentSize, ${this.reductionFactor});
         ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`if(currentSize > 1) { bestValue = ${n}; }`:""}
       }
       if (localId.x == 0u) {
         ${o}
       }
     `;return`
       fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
       }
       let WorkGroupSize = ${this.workGroupSize[0]};
       ${e?s:""}
       fn getOffset(globalId : vec3<u32>, index : i32) -> i32 {
         let outputCoords = getOutputCoords(globalId, index);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
         return offset;
       }
       ${de()} {
         ${ge()}
         let offset= getOffset(globalId, index);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);
         for (var w = 0; w < WorkPerThread; w = w + 1) {
           let i = i32(globalId.x) * WorkPerThread + w;
           if (i < Length) {
             let candidate = f32(x.numbers[offset + i]);
             ${t}
           }
         }
         let flatOutputIndex = i32(globalId.y);
         ${e?a:o}
       }
     `}};function gi(r,e,t,n,o){let s=r.shape.length,a=[],i=b.parseAxisParam(e,r.shape),u=i,l=I.getAxesPermutation(u,s),p=r;l!=null&&(p=es({inputs:{x:r},attrs:{perm:l},backend:o}),u=I.getInnerMostAxes(u.length,s),a.push(p)),I.assertAxesAreInnerMostDims(n,u,s);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=c;t&&(f=I.expandShapeToKeepDim(c,i));let d;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([p])){let h=o.tensorMap.get(p.dataId).values;switch(n){case"max":let g=_G(h,b.sizeFromShape(m),f,r.dtype);d=o.makeTensorInfo(f,r.dtype,g);break;case"prod":let{outVals:y,outShape:T,outDtype:x}=MG(p.shape,p.dtype,h,u);d=o.makeTensorInfo(T,x,y);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=b.sizeFromShape(m),y=b.sizeFromShape(p.shape)/h,T={windowSize:h,inSize:h,batchSize:y,outSize:1},x=n==="mean"?"float32":Ki(r.dtype),k=[{type:"int32",data:[h]}],v=new zA(T,n,x),N=o.runWebGPUProgram(v,[p],x,k);a.push(N),d=ze({inputs:{x:N},attrs:{shape:f},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),d}function gg(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return gi(o,s,a,"sum",t)}var bW={kernelName:Oo,backendName:"webgpu",kernelFunc:gg};function _ue(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(i,u),c=p.length,m=null,f=a.length,d=[];for(let h=0;h<c;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:T}=I.getEinsumPermutation(f,u[g]),x;I.isIdentityPermutation(y)?x=s[g]:(x=es({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),d.push(x));let k=x.shape.slice();for(let v=0;v<T.length;++v)k.splice(T[v],0,1);b.arraysEqual(x.shape,k)||(x=ze({inputs:{x},backend:t,attrs:{shape:k}}),d.push(x)),m===null?m=x:(m=OA({inputs:{a:x,b:m},backend:t}),d.push(m))}h<c-1&&(l[h]>=0&&(m=gg({inputs:{x:m},backend:t,attrs:{axis:l[h]-(a.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeData(h.dataId);return m}var yW={kernelName:Eu,backendName:"webgpu",kernelFunc:_ue};var Aue=dt({opType:we.ELU}),xW={kernelName:fo,backendName:"webgpu",kernelFunc:Aue};var Nue=At({opSnippet:Le.EQUAL,dtype:"bool",cpuKernelImpl:gG}),TW={kernelName:Zs,backendName:"webgpu",kernelFunc:Nue};var GA=dt({opType:we.EXP,cpuKernelImpl:bG,dtype:"float32"}),kW={kernelName:ho,backendName:"webgpu",kernelFunc:GA};function Bx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),ze({inputs:{x:s},backend:n,attrs:{shape:i}})}var IW={kernelName:us,backendName:"webgpu",kernelFunc:Bx};var Due=dt({opType:we.EXPM1,cpuKernelImpl:yG}),CW={kernelName:Js,backendName:"webgpu",kernelFunc:Due};var WA=class{constructor(e){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32;";this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
    ${de()} {
      ${ge()}
      if (index < uniforms.size) {
        setOutputFlat(index, uniforms.value);
      }
    }
  `}};function Ga(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new WA(n),i=[{type:"float32",data:[o]}];return e.runWebGPUProgram(a,[],s,i)}}var vW={kernelName:ja,backendName:"webgpu",kernelFunc:Ga};var UA=class{constructor(e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${de()} {
        ${ge()}

        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputFlat(index, outputValue);
        }
      }
    `}};var wW={kernelName:ea,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new UA(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var Pue=dt({opType:we.FLOOR,cpuKernelImpl:xG}),SW={kernelName:go,backendName:"webgpu",kernelFunc:Pue};var Fue=At({opSnippet:Le.INT_DIV,dtype:"int32"}),_W={kernelName:bo,backendName:"webgpu",kernelFunc:Fue};var AW=(r,e,t,n,o)=>{let s=[n,...t];return o&&s.push(o),r.createBindGroup({layout:e,entries:s.map((a,i)=>({binding:i,resource:a}))})},Ox=(r,e,t,n,o,s=!1)=>{let a={dtype:o.dtype,shape:o.shape},i=nG(n,a,e,s),u=r.createShaderModule({code:i});return r.createComputePipeline({layout:t,compute:{module:u,entryPoint:"main"}})};function zx(r,e,t,n="",o=""){return(r.workGroupSize?r.workGroupSize.join(","):"")+e.map(a=>a.length).join(",")+t.join(",")+r.variableNames.join(",")+n+o+r.shaderKey}function KA(r){let{externalImage:e,backend:t,attrs:n,outShape:o,useImport:s}=r,{numChannels:a}=n,i=b.sizeFromShape(o),u=b.computeStrides(o),l=t.makeTensorInfo(o,"int32"),p=t.getFromPixelsProgram(s?"import":"copyExternal");p.updateOutputShape(o);let c=[l.shape],m=[l.dtype,s?"import":"copyExternal"],f=zx(p,c,m),d=p.getLayout(t.device),h=t.getAndSavePipeline(f,()=>Ox(t.device,p,d.pipelineLayout,[],l,!0));p.setPipeline(h),s||t.queue.copyExternalImageToTexture({source:e,origin:{x:0,y:0}},{texture:p.makeInputTexture(t.device,o[1],o[0])},[o[1],o[0]]);let g=t.tensorMap.get(l.dataId);g.bufferInfo.buffer=t.acquireBuffer(g.bufferInfo.byteSize);let y=[i,a,...u,...p.dispatch];p.setUniform(t.device,y);let T;if(s){let x={source:e};T=t.device.importExternalTexture(x)}else T=p.inputTexture.createView();return t.runFromPixelsProgram(p,g.bufferInfo.buffer,d,T,l.dataId),l}var NW={kernelName:wl,backendName:"webgpu",kernelFunc:Mue},Om;function Mue(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&o instanceof OffscreenCanvas,l=typeof ImageBitmap!="undefined"&&o instanceof ImageBitmap,[p,c]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],m=[c,p,s];if(G().getBool("WEBGPU_USE_IMPORT")&&a)return KA({externalImage:o,backend:t,attrs:n,outShape:m,useImport:!0});if((a||i)&&(Om==null&&(Om=document.createElement("canvas").getContext("2d")),Om.canvas.width=p,Om.canvas.height=c,Om.drawImage(o,0,0,p,c),o=Om.canvas),l||u||a||i)return KA({externalImage:o,backend:t,attrs:n,outShape:m,useImport:!1});let f=o.data,d=f;if(s!=null&&s!==4){d=new Uint8Array(o.width*o.height*s);let y=f.length,T=0;for(let x=0;x<y;x++)x%4<s&&(d[T++]=f[x])}let h=t.makeTensorInfo(m,"int32"),g=t.tensorMap.get(h.dataId);return g.values=new Int32Array(d),t.maybeReleaseBuffer(h.dataId),t.uploadToGPU(h.dataId),h}var VA=class{constructor(e,t,n,o,s){this.uniforms="varianceEpsilon : f32;";this.workGroupSize=[128,1,1];this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetAtOutCoordsByGlobalId(globalId, index)");let t="1.0";this.scaleShape!=null&&(t="getScaleAtOutCoordsByGlobalId(globalId, index)");let n=this.outputShape.length,o=Et(n),s="setOutput(coords[0], coords[1], coords[2], coords[3], value);";return n===2&&(s="setOutput(coords[0], coords[1], value);"),n===3&&(s="setOutput(coords[0], coords[1], coords[2], value);"),`
      fn writeResult(coords : ${o}, value : f32) {
        if (coordsInBounds${n}D(coords, uniforms.outShape)) {
          ${s}
        }
      }
      ${de()} {
        ${ge()}
        let coords = getOutputCoords(globalId, index);
        let xValue = getXAtOutCoordsByGlobalId(globalId, index);
        let meanValue = getMeanAtOutCoordsByGlobalId(globalId, index);
        let varianValue = getVarianceAtOutCoordsByGlobalId(globalId, index);
        let offsetValue = ${e};
        let scaleValue = ${t};
        let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
        writeResult(coords,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
      }
  `}};var DW={kernelName:yo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:u}=e,l=t,p=[n,a,i],c=null;s!=null&&(c=s.shape,p.push(s));let m=null;o!=null&&(m=o.shape,p.push(o));let f=new VA(n.shape,a.shape,i.shape,c,m),d=[{type:"float32",data:[u]}];return l.runWebGPUProgram(f,p,n.dtype,d)}};function Eue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=I.convertConv2DDataFormat(p),g=I.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!1,h),y=a!=null,T=i!=null,x;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return $x({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});let k=G().getBool("WEBGPU_USE_NAIVE_CONV2D"),v=g.inChannels%4==0&&g.outChannels%4==0,N=[g.padInfo.top,g.padInfo.left],A=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...N]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(k)x=new fg(g,y,f,T);else{v?x=new cg(g,y,f,T):x=new mg(g,y,f,T);let E=g.outShape[1]*g.outShape[2],$=g.outShape[3],U=g.filterHeight*g.filterWidth*g.inShape[3];A.push({type:"int32",data:[E]},{type:"int32",data:[$]},{type:"int32",data:[U]})}let F=[o,s];return y&&F.push(a),T&&F.push(i),t.runWebGPUProgram(x,F,o.dtype,A)}var PW={kernelName:Is,backendName:"webgpu",kernelFunc:Eue};function Rue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:c,activation:m}=n,f=p;f==null&&(f=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let d=I.computeConv2DInfo(o.shape,s.shape,u,f,l,c,!0),h=[o,s],g=a!=null,y=i!=null;g&&h.push(a),y&&h.push(i);let T;d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4==0?T=new dg(d,g,m,y):T=new hg(d,g,m,y);let x=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}];return t.runWebGPUProgram(T,h,"float32",x)}var FW={kernelName:Cs,backendName:"webgpu",kernelFunc:Rue};var jA=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.outputShape=t,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.size=b.sizeFromShape(this.outputShape),this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${Et(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${de()} {
          ${ge()}
          let coords = getOutputCoords(globalId, index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }
          if (index < uniforms.size) {
            setOutputFlat(index, getA(flattenIndex, coords[1]));
          }
        }
      `}};function Lue(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[u,l,p,c]=I.prepareAndValidate(n,o),m=ze({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),f=ze({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let T=t.readSync(o.dataId),x=t.bufferSync(n),k=TG(T,x,n.dtype,l,a,p,c,n.shape,i);return t.makeTensorInfo(u,n.dtype,k.values)}let d=new jA(a,[l,p]),h=[{type:"int32",data:[a]},{type:"int32",data:c}],g=t.runWebGPUProgram(d,[f,m],f.dtype,h),y=ze({inputs:{x:g},backend:t,attrs:{shape:u}});return t.disposeData(m.dataId),t.disposeData(f.dataId),t.disposeData(g.dataId),y}var MW={kernelName:ta,backendName:"webgpu",kernelFunc:Lue};var HA=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=$ue(this.aShape,"i32");return`
      ${de()} {
        ${ge()}
        let resRC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function $ue(r,e="int"){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push(`${e}(getIndices(resRC.x, resRC.z))`):n.push(`${t[o]}`);return n.join()}function qA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=b.parseAxisParam(a,o.shape)[0],l=I.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=b.sizeFromShape(s.shape),c=[],m=ze({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=ze({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,p/l.batchSize]}});c.push(m),c.push(f);let d=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let x=t.tensorMap.get(f.dataId).values,k=Ce(f.shape,f.dtype,x),N=t.tensorMap.get(m.dataId).values,A=Ce(m.shape,m.dtype,N),F=kG(A,k,d);return c.forEach(E=>t.disposeData(E.dataId)),t.makeTensorInfo(l.outputShape,F.dtype,F.values)}let h=new HA(m.shape,d),g=t.runWebGPUProgram(h,[m,f],m.dtype);c.push(g);let y=ze({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return c.forEach(T=>t.disposeData(T.dataId)),y}var EW={kernelName:ls,backendName:"webgpu",kernelFunc:qA};var Bue=At({opSnippet:Le.GREATER,cpuKernelImpl:CG,dtype:"bool"}),RW={kernelName:ra,backendName:"webgpu",kernelFunc:Bue};var Oue=At({opSnippet:Le.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:IG}),LW={kernelName:xo,backendName:"webgpu",kernelFunc:Oue};var zue=At({opSnippet:Le.LESS,dtype:"bool",cpuKernelImpl:wG}),$W={kernelName:oa,backendName:"webgpu",kernelFunc:zue};var Gue=At({opSnippet:Le.LESS_EQUAL,dtype:"bool",cpuKernelImpl:vG}),BW={kernelName:sa,backendName:"webgpu",kernelFunc:Gue};var Wue=dt({opType:we.LOG,cpuKernelImpl:SG}),OW={kernelName:To,backendName:"webgpu",kernelFunc:Wue};var Uue=At({opSnippet:Le.LOGICAL_AND,dtype:"bool"}),zW={kernelName:aa,backendName:"webgpu",kernelFunc:Uue};var Kue=dt({opType:we.LOGICAL_NOT}),GW={kernelName:Li,backendName:"webgpu",kernelFunc:Kue};function XA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n;return gi(o,s,a,"max",t)}var WW={kernelName:ko,backendName:"webgpu",kernelFunc:XA};var Vue=At({opSnippet:Le.MAX,cpuKernelImpl:AG}),UW={kernelName:Io,backendName:"webgpu",kernelFunc:Vue};function jue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=I.computePool2DInfo(o.shape,s,a,l,i,u),c,m=[];if(p.filterHeight===1&&p.filterWidth===1){if(b.arraysEqual(p.inShape,p.outShape))return wr({inputs:{x:o},backend:t});c=new pg(p),m.push({type:"int32",data:[p.strideHeight,p.strideWidth]})}else c=new lg(p,"max"),m.push({type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]});return t.runWebGPUProgram(c,[o],o.dtype,m)}var KW={kernelName:Co,backendName:"webgpu",kernelFunc:jue};function Hue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:a}=n;return gi(o,a,s,"mean",t)}var VW={kernelName:vo,backendName:"webgpu",kernelFunc:Hue};function que(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return gi(o,s,a,"min",t)}var jW={kernelName:wo,backendName:"webgpu",kernelFunc:que};var Xue=At({opSnippet:Le.MIN,cpuKernelImpl:NG}),HW={kernelName:So,backendName:"webgpu",kernelFunc:Xue};var YA=class{constructor(e,t,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`,this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,p)=>`uniforms.pad${p}[0]`).join(","),n=this.xShape.map((l,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=Et(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${de()} {
        ${ge()}
        let start = ${i}(${t});
        let end = ${i}(${n});
        var outC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } elseif(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputFlat(index, getX(${u}));
        }
      }
    `}};var qW={kernelName:_o,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=t,i=o.map(p=>({type:"int32",data:[p[0],p[1]]})),u=new YA(n.shape,o,s);return a.runWebGPUProgram(u,[n],n.dtype,i)}};function Yue(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[a,i]=PG(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o=new xu(n.shape,we.NEG);return t.runWebGPUProgram(o,[n],n.dtype)}var XW={kernelName:ps,backendName:"webgpu",kernelFunc:Yue};function Que(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:c}=Tr.nonMaxSuppressionV3Impl(l,p,a,i,u);return t.makeTensorInfo([c.length],"int32",new Int32Array(c))}var YW={kernelName:ua,backendName:"webgpu",kernelFunc:Que};function Zue(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),c=t.readSync(s.dataId),m=a,f=i,d=u,h=l,{selectedIndices:g,selectedScores:y}=Tr.nonMaxSuppressionV5Impl(p,c,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var QW={kernelName:la,backendName:"webgpu",kernelFunc:Zue};function bg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=Tu({inputs:{input:n},backend:t}),s=bg({inputs:{x:o},backend:t}),a=Rp({inputs:{input:n},backend:t}),i=bg({inputs:{x:a},backend:t}),u=Oa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),u}else return Ga({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var ZW={kernelName:xs,backendName:"webgpu",kernelFunc:bg};function JW(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Tu({inputs:{input:n},backend:t}),s=JW({inputs:{x:o},backend:t}),a=Rp({inputs:{input:n},backend:t}),i=bg({inputs:{x:a},backend:t}),u=Oa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),u}else return Ga({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var eU={kernelName:cs,backendName:"webgpu",kernelFunc:JW};function Jue(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Bx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let c=Bx({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(c),c}),l=MA({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeData(p.dataId)),l}var tU={kernelName:ms,backendName:"webgpu",kernelFunc:Jue};var QA=class{constructor(e,t){this.variableNames=["x"];this.uniforms="constantValue : f32;";this.workGroupSize=[64,1,1];this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=Et(e),n=this.xShape.map((c,m)=>`uniforms.pad${m}[0]`).join(","),o=this.xShape.map((c,m)=>`uniforms.pad${m}[0] + uniforms.xShape${e>1?`[${m}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${o})`:`${o}`,i=e>1?"any(outC < start)":"outC < start",u=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${de()} {
        ${ge()}
        let start = ${s};
        let end = ${a};
        if (index < uniforms.size) {
          let outC = getOutputCoords(globalId, index);

          if (${i} || ${u}) {
            setOutputFlat(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputFlat(index, getX(${l}));
          }
        }
      }
    `}};var ZA=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(s.every(l=>b.arraysEqual(l,[0,0])))return wr({inputs:{x:o},backend:t});if(b.sizeFromShape(o.shape)===0){let l=s.map((p,c)=>p[0]+o.shape[c]+p[1]);return Ga({backend:t,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(l=>i.push({type:"int32",data:[l[0],l[1]]}));let u=new QA(o.shape,s);return t.runWebGPUProgram(u,[o],o.dtype,i)},rU={kernelName:No,backendName:"webgpu",kernelFunc:ZA};var ele=At({opSnippet:Le.POW}),nU={kernelName:Do,backendName:"webgpu",kernelFunc:ele};function tle(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new ig(Le.PRELU,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var oU={kernelName:Po,backendName:"webgpu",kernelFunc:tle};function rle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return gi(o,s,a,"prod",t)}var sU={kernelName:ca,backendName:"webgpu",kernelFunc:rle};var nle=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=EG(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},aU={kernelName:Ha,backendName:"webgpu",kernelFunc:nle};var JA=At({opSnippet:Le.DIV}),iU={kernelName:mo,backendName:"webgpu",kernelFunc:JA};var ole=dt({opType:we.RELU}),uU={kernelName:Fo,backendName:"webgpu",kernelFunc:ole};var sle=dt({opType:we.RELU6}),lU={kernelName:Eo,backendName:"webgpu",kernelFunc:sle};var eN=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=o,this.halfPixelCenters=s,this.shaderKey=`resizeBilinear_${o}_${s}_${this.outputShape[1]>1}_${this.outputShape[2]>1}`}getUserCode(){let e=this.alignCorners&&this.outputShape[1]>1,t=this.alignCorners&&this.outputShape[2]>1;return`
      ${de()} {
        ${ge()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${e?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${t?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${e?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${t?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${this.halfPixelCenters?"(vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC - vec2<f32>(0.5)":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC"};

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function ale(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:a,halfPixelCenters:i}=n,[u,l]=a,p=new eN(o.shape,u,l,s,i);return t.runWebGPUProgram(p,[o],"float32")}var pU={kernelName:Mo,backendName:"webgpu",kernelFunc:ale};var tN=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=o,this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${o}_${this.outputShape[1]>1}_${this.outputShape[2]>1}_${s}`}getUserCode(){let e=this.alignCorners?"0.5":"0.0",t;this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC";let n=this.alignCorners&&this.outputShape[1]>1,o=this.alignCorners&&this.outputShape[2]>1;return`
      ${de()} {
        ${ge()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${n?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${o?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${n?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${o?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${e})));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function ile(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=new tN(o.shape,u,l,s,a);return t.runWebGPUProgram(p,[o],o.dtype)}var cU={kernelName:qa,backendName:"webgpu",kernelFunc:ile};var rN=class{constructor(e,t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.size=b.sizeFromShape(this.outputShape),this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${de()} {
          ${ge()}

          if (index < uniforms.size) {
            let coords = getOutputCoords(globalId, index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputFlat(index, outputValue);
          }
        }
      `}};var mU={kernelName:Ta,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=new rN(n.shape,s),[l,p]=I.getImageCenter(a,n.shape[1],n.shape[2]),c=[{type:"float32",data:[l]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?c.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):c.push({type:"float32",data:s}),i.runWebGPUProgram(u,[n],n.dtype,c)}};var ule=dt({opType:we.RSQRT,cpuKernelImpl:RG}),fU={kernelName:Ro,backendName:"webgpu",kernelFunc:ule};var nN=class{constructor(e,t,n,o,s,a,i){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.dispatchLayout=ve(e),this.dispatch=fe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}`,this.size=b.sizeFromShape(e);let u=Et(s.length);this.uniforms=`sliceDim : i32; strides: ${u};`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="",a="";this.updatesRank===1?(o="coords[0]",s="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(o="coords[0], coords[1]",s="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${o})`,u=this.type==="int32"?"ignore(atomicAdd(&(result.numbers[flatIndex]), i32(updateValue)));":`
     var oldI32 = atomicLoad(&(result.numbers[flatIndex]));
     var assumed = oldI32 - 1;
     for (; assumed != oldI32;) {
       assumed = oldI32;
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       oldI32 = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32)[0];
     }
     `;return`
    ${a}

      ${de()} {
        ${ge()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${i};
          let flatIndex = getOutputFlatIndex(${s});

         ${u}
        }
      }`}};function lle(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:c}=I.calculateShapes(s,o,a),m=[c/l,l];if(c===0)return t.makeTensorInfo(a,o.dtype);let f=ze({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),d=ze({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=d.dtype,g=Ga({backend:t,attrs:{shape:m,value:0,dtype:h}}),y=[{type:"int32",data:[i]},{type:"int32",data:p}],T=new nN(d.shape,i,f.shape.length,d.shape.length,p,m,h),x=t.runWebGPUProgram(T,[d,f],h,y,g),k=ze({inputs:{x},backend:t,attrs:{shape:a}});return t.disposeData(f.dataId),t.disposeData(d.dataId),t.disposeData(x.dataId),k}var dU={kernelName:da,backendName:"webgpu",kernelFunc:lle};var oN=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.outputShape=t,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);e=s.join(),t=a.join()}return`
      ${de()} {
        ${ge()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputFlat(index, getA(${t}));
          } else {
            setOutputFlat(index, getB(${t}));
          }
        }
      }
    `}};function ple(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new oN(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(a,[n,o,s],Kt(o.dtype,s.dtype))}var hU={kernelName:ds,backendName:"webgpu",kernelFunc:ple};var cle=dt({opType:we.SIGMOID}),gU={kernelName:$o,backendName:"webgpu",kernelFunc:cle};var mle=dt({opType:we.SIN}),bU={kernelName:Lo,backendName:"webgpu",kernelFunc:mle};var fle=dt({opType:we.SINH}),yU={kernelName:ha,backendName:"webgpu",kernelFunc:fle};var sN=At({opSnippet:Le.SUB,cpuKernelImpl:zG,supportsComplex:!0}),xU={kernelName:Wo,backendName:"webgpu",kernelFunc:sN};function dle(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=XA({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=I.expandShapeToKeepDim(i.shape,a),l=ze({inputs:{x:i},backend:t,attrs:{shape:u}}),p=sN({inputs:{a:o,b:l},backend:t}),c=GA({inputs:{x:p},backend:t}),m=gg({inputs:{x:c},backend:t,attrs:{axis:a,keepDims:!1}}),f=ze({inputs:{x:m},backend:t,attrs:{shape:u}}),d=JA({inputs:{a:c,b:f},backend:t});return t.disposeData(i.dataId),t.disposeData(l.dataId),t.disposeData(p.dataId),t.disposeData(c.dataId),t.disposeData(m.dataId),t.disposeData(f.dataId),d}var TU={kernelName:zo,backendName:"webgpu",kernelFunc:dle};var hle=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((y,T)=>y*T),u=[[0,0]];u.push(...a);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let l=[],p=ZA({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(p.shape,s,i,!1),m=I.getPermuted(c.length,s.length,!1),f=I.getReshapedPermuted(p.shape,s,i,!1),d=ze({inputs:{x:p},backend:t,attrs:{shape:c}}),h=es({inputs:{x:d},backend:t,attrs:{perm:m}}),g=ze({inputs:{x:h},backend:t,attrs:{shape:f}});return l.push(p),l.push(d),l.push(h),l.forEach(y=>t.disposeData(y.dataId)),g},kU={kernelName:gs,backendName:"webgpu",kernelFunc:hle};var aN=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.workGroupSize=[64,1,1];this.workPerThread=4;this.outputShape=a,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let u=t>1;this.shaderKey=`scatter_${n}_${o}_${u}`,this.size=b.sizeFromShape(this.outputShape);let l=Et(s.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let p="";n===1?p="i":n===2&&(p="i, j"),this.indicesSnippet=`getIndices(${p})`;let c="";o===1?c="i":o===2&&(c="i, coords[1]"),this.updatesSnippet=`getUpdates(${c})`,this.strideString=u?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${de()} {
        ${ge()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromFlatIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputFlat(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function gle(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,strides:p,outputSize:c}=I.calculateShapes(s,o,i),m=!1,f=[{type:"int32",data:[l]},{type:"int32",data:[u]},{type:"int32",data:p}],d=new aN(l,u,o.shape.length,s.shape.length,p,[c,1],m),h=t.runWebGPUProgram(d,[s,o,a],s.dtype,f),g=ze({inputs:{x:h},backend:t,attrs:{shape:i}});return t.disposeData(h.dataId),g}var IU={kernelName:Ou,backendName:"webgpu",kernelFunc:gle};function ble(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],u=I.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),c=o.shape.slice();return u.map(m=>{let f=[...c];f[i]=m;let d=za({inputs:{x:o},backend:t,attrs:{begin:p,size:f}});return p[i]+=m,d})}var CU={kernelName:bs,backendName:"webgpu",kernelFunc:ble};var yle=dt({opType:we.SQRT}),vU={kernelName:Bo,backendName:"webgpu",kernelFunc:yle};var wU={kernelName:Xa,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new xu(t.shape,we.SQUARE);return n.runWebGPUProgram(o,[t],t.dtype)}};var xle=At({opSnippet:Le.SQUARED_DIFFERENCE}),SU={kernelName:Go,backendName:"webgpu",kernelFunc:xle};var iN=class{constructor(e){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Et(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${de()} {
         ${ge()}
         if (index < uniforms.size) {
           let coords = getOutputCoords(globalId, index);
           setOutputFlat(index, getX(${t}));
         }
       }
     `}};function Tle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:k}=kt.sliceInfo(o.shape,s,a,i,u,l,p,c,m),v;if(h)v=ze({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=kt.computeOutShape(T,x,k),A=za({inputs:{x:o},backend:t,attrs:{begin:T,size:N}});v=ze({inputs:{x:A},backend:t,attrs:{shape:d}}),t.disposeData(A)}else if(t.shouldExecuteOnCPU([o])){let A=t.readSync(o.dataId),F=Ce(o.shape,o.dtype,A),E=BG(f,F,k,T);v=t.makeTensorInfo(d,o.dtype,E.values)}else{let A=new iN(f),F=[{type:"int32",data:T},{type:"int32",data:k}];v=t.runWebGPUProgram(A,[o],o.dtype,F)}return v}var _U={kernelName:ga,backendName:"webgpu",kernelFunc:Tle};function kle(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:c}=e,m=t.readSync(p.dataId),f=t.readSync(c.dataId),[d,h]=OG(m,f,o,s,a,i,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(c.shape,"int32",h)]}var AU={kernelName:zu,backendName:"webgpu",kernelFunc:kle};var Ile=dt({opType:we.TANH}),NU={kernelName:Uo,backendName:"webgpu",kernelFunc:Ile};var uN=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.size=b.sizeFromShape(this.outputShape),this.shaderKey="tile"}getUserCode(){let e=Cle(this.rank,"uniforms.");return`
      ${de()} {
        ${ge()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Cle(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function vle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(m=>b.decodeString(m)):u,p=Ce(o.shape,o.dtype,l),c=GG(p,s);return t.makeTensorInfo(c.shape,c.dtype,c.values)}let a=new uN(o.shape,s);return t.runWebGPUProgram(a,[o],o.dtype)}var DU={kernelName:Sn,backendName:"webgpu",kernelFunc:vle};var lN=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
        ${de()} {
          ${ge()}
          if (index < uniforms.size) {
            let outC = getOutputCoords(globalId, index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}},pN=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge",this.size=b.sizeFromShape(this.outputShape)}getUserCode(){return`
        ${de()} {
          ${ge()}
          if (index < uniforms.size) {
            let outC = getOutputCoords(globalId, index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}};function zm(r,e){e!==null&&r.disposeData(e.dataId)}function PU(r){let e=1;for(;e<r;)e*=2;return e}function wle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=o.shape,u=i[i.length-1];if(t.shouldExecuteOnCPU([o])){let v=t.readSync(o.dataId),[N,A]=WG(v,i,o.dtype,s,a);return[t.makeTensorInfo(N.shape,N.dtype,N.values),t.makeTensorInfo(A.shape,A.dtype,A.values)]}if(s===0)return i[i.length-1]=0,[t.makeTensorInfo(i,o.dtype,[]),t.makeTensorInfo(i,"int32",[])];if(u===1)return[o,Ga({attrs:{shape:i,dtype:"int32",value:0},backend:t})];let p=b.sizeFromShape(i)/u,c=ze({inputs:{x:o},attrs:{shape:[p,u]},backend:t}),m=PU(s),f=PU(u),d=null,h=()=>d===null?[c,c]:[c,d],g=(v,N,A)=>{let F=h(),E=new lN(A),U=[{type:"int32",data:[u]},{type:"int32",data:[d===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[v]},{type:"int32",data:[N]}],K=d;d=t.runWebGPUProgram(E,F,"int32",U),zm(t,K)};for(let v=1;v<m;v*=2){let N=v*2;for(let A=v;A>=1;A/=2)g(N,A,[p,f])}for(let v=f;v>m;v/=2){let N=h(),A=new pN([p,v/2]),E=[{type:"int32",data:[u]},{type:"int32",data:[d===null?1:0]},{type:"int32",data:[m]}],$=d;d=t.runWebGPUProgram(A,N,"int32",E),zm(t,$);let U=m/2,K=U*2;for(let B=U;B>=1;B/=2)g(K,B,d.shape)}let y=d;d=za({inputs:{x:d},backend:t,attrs:{begin:0,size:[p,s]}}),zm(t,y);let T=qA({inputs:{x:c,indices:d},backend:t,attrs:{axis:1,batchDims:1}});zm(t,c);let x=i.slice(0,-1);x.push(s),y=d,d=ze({inputs:{x:d},attrs:{shape:x},backend:t}),zm(t,y);let k=T;return T=ze({inputs:{x:T},attrs:{shape:x},backend:t}),zm(t,k),[T,d]}var FU={kernelName:ya,backendName:"webgpu",kernelFunc:wle};var cN=class{constructor(e){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;";this.workGroupSize=[64,1,1];this.outputShape=e,this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${de()} {
            ${ge()}
            let coords = getOutputCoords(globalId, index);
            if (coordsInBounds4D(coords, uniforms.outShape)) {
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(coords[0], coords[1], coords[2], coords[3], outputValue);
            }
          }
        `}};function Sle(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],y=new cN(g),T=a==="nearest"?1:2,x;switch(i){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let k=[{type:"int32",data:[T]},{type:"int32",data:[x]},{type:"float32",data:[u]}];return t.runWebGPUProgram(y,[o,s],"float32",k)}var MU={kernelName:xa,backendName:"webgpu",kernelFunc:Sle};function _le(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let c=[],m=new Array(i).fill(0),f=a.shape.slice();f[s]=1;let d=new Array(u);for(let h=0;h<d.length;h++){m[s]=h;let g=za({inputs:{x:a},backend:t,attrs:{begin:m,size:f}}),y=ze({inputs:{x:g},backend:t,attrs:{shape:l}});d[h]=y,c.push(g)}return c.forEach(h=>t.disposeData(h.dataId)),d}var EU={kernelName:ys,backendName:"webgpu",kernelFunc:_le};var Ale=[pG,KG,VG,jG,qG,XG,YG,QG,JG,nW,oW,sW,mG,iW,lW,pW,cW,mW,fW,dW,hW,yW,xW,TW,IW,kW,CW,vW,wW,NW,SW,_W,DW,PW,FW,MW,EW,RW,LW,cG,aW,$W,BW,OW,zW,GW,WW,UW,KW,VW,jW,HW,qW,gW,XW,YW,QW,eW,eU,tU,rU,oU,sU,nU,aU,tW,iU,uU,lU,lG,pU,cU,mU,fU,dU,hU,gU,bU,yU,ZG,_U,AU,TU,kU,CU,IU,vU,wU,SU,xU,bW,NU,DU,FU,MU,HG,EU,ZW];for(let r of Ale)Ui(r);var mN=class{constructor(e){this.device=e;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireBuffer(e,t){let n=RU(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let s=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(s),s}this.numBytesAllocated+=e;let o=this.device.createBuffer({size:e,usage:t});return this.usedBuffers.get(n).push(o),o}releaseBuffer(e,t,n){if(this.freeBuffers==null)return;let o=RU(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=t}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}reset(){this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}dispose(){this.freeBuffers==null&&this.usedBuffers==null||(this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=null,this.usedBuffers=null,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0)}};function RU(r,e){return`${r}_${e}`}var yg=class{constructor(){this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.lastUniformData=[];this.inputTexture=null;this.layout=null;this.lastPixelSize={width:0,height:0};this.disposed=!1;this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){b.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=ve(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${de()} {
        ${ge()}
        let flatIndexBase = index * uniforms.numChannels;
        let coords = getCoordsFromFlatIndex(flatIndexBase);
        let values = ${e};
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,o)=>n===this.lastUniformData[o])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var fN=class extends yg{constructor(){super(...arguments);this.layout=null;this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var Nle=G().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),dN=class extends ns{constructor(e,t=!1){super();this.commandQueueOwnedIds=new WeakSet;this.tensorDisposalQueue=[];this.uniformDisposalQueue=[];this.disposed=!1;this.uploadWaitMs=0;this.downloadWaitMs=0;this.dispatchNumberInEncoder=0;if(!og())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new mN(this.device),this.tensorMap=new Wa(this,Vo()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return dN.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:o}=this.tensorMap.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()},s=b.sizeFromShape(t)*Ex(n);return n==="bool"&&e instanceof Uint8Array&&(e=Int32Array.from(e)),this.tensorMap.set(o,{dtype:n,values:e,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=b.sizeFromShape(n)*Ex(o);this.tensorMap.set(e,{dtype:o,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new yg),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new fN),this.fromPixelImportProgram;default:b.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),G().getBool("WEBGPU_USE_PROFILE_TOOL")&&(b.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=s[0],i=s[1];o=I.mergeRealAndImagArrays(a,i)}else{let s=await this.getBufferData(t);o=dA(s,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=b.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(s);return i.kernelMs=b.sum(u),i.getExtraProfileInfo=()=>u.map((l,p)=>({name:a[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values&&this.queue.writeBuffer(t.bufferInfo.buffer,0,t.values))}makeUniformsDataView(e){let t=this.acquireBuffer(e.byteLength,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(t,0,e),{offset:0,size:e.byteLength,buffer:t}}arrayToDataView(e,t){let n=4,o=new DataView(new ArrayBuffer(t*n)),s=0;return e.forEach(a=>{let i=a.data;if(a.type!=="int32"&&a.type!=="float32"&&a.type!=="uint32")throw new Error(`${a.type} not supported!`);a.type==="int32"?i.forEach(u=>{o.setInt32(s*n,u,!0),s++}):a.type==="uint32"?i.forEach(u=>{o.setUint32(s*n,u,!0),s++}):i.forEach(u=>{o.setFloat32(s*n,u,!0),s++})}),o}computePadding(e){let t=0,n=0,o=0,s=[];return e.forEach((a,i)=>{a.data.length===0&&(a.data=[1]);let u;switch(a.data.length){case 0:u=1;break;case 1:u=1;break;case 2:u=2;break;case 3:u=4;break;case 4:u=4;break;default:b.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}n=Math.ceil(t/u)*u-t;for(let l=0;l<n;++l)s.push({type:a.type,data:[0]}),o++;s.push({type:a.type,data:a.data}),o=o+a.data.length,t+=a.data.length+n}),this.arrayToDataView(s,o)}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let s=0;s<e;s++)t.push({binding:s+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),o=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,o,s){if(!s){if(s=this.makeTensorInfo(e.outputShape,n),b.sizeFromShape(s.shape)===0){let E=this.tensorMap.get(s.dataId);return E.values=b.getTypedArrayFromDType(s.dtype,0),s}this.uploadToGPU(s.dataId)}let a=[{type:"float32",data:[NaN]}],i=t.concat(s).map(E=>E.shape),u="int32";i.map(E=>{a.push({type:u,data:E})});let l=b.computeStrides(s.shape);a.push({type:u,data:l}),e.size!=null&&a.push({type:u,data:[e.size]}),a.push({type:"uint32",data:e.dispatch}),o&&(a=[...a,...o]);let p=null,c=this.computePadding(a),m=c.byteLength;p=this.makeUniformsDataView(c);let f=t.map((E,$)=>{if(E.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(E.dataId),{dtype:this.tensorMap.get(E.dataId).dtype,shape:E.shape,name:e.variableNames[$]}}),d=f.map(E=>E.dtype).concat(s.dtype),h=f.map(E=>I.getBroadcastDims(E.shape,s.shape)),g=f.map(E=>b.arraysEqual(E.shape,s.shape)).join("_"),y=h.map(E=>E.join("_")).join(";"),T=zx(e,i,d,y,g),{bindGroupLayout:x,pipelineLayout:k}=this.getCachedOrCreateLayout(e.variableNames.length),v=this.getAndSavePipeline(T,()=>Ox(this.device,e,k,f,s)),N=this.activeTimers!=null,A=AW(this.device,x,t.map(E=>this.tensorToBinding(E)),this.tensorToBinding(s),p);this.ensureCommandEncoderReady();let F=this.getComputePass();if(N&&this.supportTimeQuery&&F.writeTimestamp(this.querySet,0),F.setPipeline(v),F.setBindGroup(0,A),F.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),N&&this.supportTimeQuery&&F.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(E=>{this.commandQueueOwnedIds.add(E.dataId)}),this.commandQueueOwnedIds.add(s.dataId),p){let E={byteSize:m,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:p.buffer};this.uniformDisposalQueue.push(E)}return G().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),N&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}runFromPixelsProgram(e,t,n,o,s){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:o},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let i=this.getComputePass(),u=this.activeTimers!=null;u&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,0),i.setPipeline(e.pipeline),i.setBindGroup(0,a),i.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),u&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(s),this.submitQueue(),u&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=Nle){return G().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&b.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Gm=dN;Gm.nextDataId=0;var LU={};Ye(LU,{WebGPUBackend:()=>Gm,webgpu_util:()=>hA});Vi.isBrowser()&&og()&&ju("webgpu",async()=>{G().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:G().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t={},n=e.features.has("timestamp-query");n?t={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let o=await e.requestDevice(t);return new Gm(o,n)},3);var at;(function(s){s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64"})(at||(at={}));var fl;(function(i){i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu"})(fl||(fl={}));var $U;function Dle(r){$U=r.wasm.cwrap(ks,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Ple(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n,m=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(s.dataId).id,d=0;if(a!=null){let F=t.dataIdMap.get(a.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);d=F.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=fl[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=u?o.shape[2]:o.shape[1],T=l?s.shape[1]:s.shape[2],x=As.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),k=t.makeOutput([...x,y,T],o.dtype),v=t.dataIdMap.get(k.dataId).id,N=new Uint8Array(new Int32Array(o.shape).buffer),A=new Uint8Array(new Int32Array(s.shape).buffer);return $U(m,N,o.shape.length,f,A,s.shape.length,u,l,g,d,h,c||0,v),k}var BU={kernelName:ks,backendName:"wasm",setupFunc:Dle,kernelFunc:Ple};function ht(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,u=a.dataIdMap.get(i.dataId).id,l=a.makeOutput(i.shape,e||i.dtype),p=a.dataIdMap.get(l.dataId).id;return b.sizeFromShape(l.shape)===0||t(u,at[i.dtype],p),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var OU=ht(ss);function Nt(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:u}=a,{a:l,b:p}=u,c=i.dataIdMap.get(l.dataId).id,m=i.dataIdMap.get(p.dataId).id,f=t??l.dtype,d=I.assertAndGetBroadcastShape(l.shape,p.shape),h=i.makeOutput(d,f);if(b.sizeFromShape(d)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),y=new Uint8Array(new Int32Array(p.shape).buffer),T=i.dataIdMap.get(h.dataId).id,x=()=>n(c,g,l.shape.length,m,y,p.shape.length,at[l.dtype],T);if(e&&l.dtype==="float32")return x(),h;let k=I.getBroadcastDims(l.shape,d),v=I.getBroadcastDims(p.shape,d),N=k.every((F,E)=>F===E),A=v.every((F,E)=>F===E);if(N&&A)return x(),h;throw new Error(`Broadcasting along outer dims is not yet supported for ${l.dtype} ${r}.`)}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var Fle=!0,zU=Nt(wn,Fle);var GU;function Mle(r){GU=r.wasm.cwrap(ro,null,["array","number","number","number"])}function Ele(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(b.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return GU(s,o.length,at[n.dtype],a),n}var WU={kernelName:ro,backendName:"wasm",setupFunc:Mle,kernelFunc:Ele};function Lp(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var UU={kernelName:Un,backendName:"wasm",kernelFunc:Lp};var KU;function Rle(r){KU=r.wasm.cwrap(Ko,null,["number","array","number","number","number","array","number"])}function bi(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=$le(e.x.shape,n.perm),a=!0;for(let d=0;d<s.length;d++)s[d]!==d&&(a=!1);let i=Lle(e.x.shape,n.perm),u={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let d=Lp({inputs:e,backend:t});return d.shape=i,d}let l=t.makeOutput(i,u.dtype),p=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(l.dataId).id,m=new Uint8Array(new Int32Array(s).buffer),f=new Uint8Array(new Int32Array(u.shape).buffer);return KU(p,f,u.shape.length,at[u.dtype],c,m,s.length),l}function Lle(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function $le(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var VU={kernelName:Ko,backendName:"wasm",kernelFunc:bi,setupFunc:Rle};function Tn(r,e,t){let n=r.shape,o=r.shape.length,s=b.parseAxisParam(e,n),a=s,i=I.getAxesPermutation(a,o),u=null,l=!1;if(i!=null){let p=new Array(o);for(let f=0;f<p.length;f++)p[f]=n[i[f]];a=I.getInnerMostAxes(a.length,o),u=bi({inputs:{x:r},attrs:{perm:i},backend:t});let c=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(u.dataId).id!==c&&(l=!0)}return{transposed:u,originalAxes:s,axes:a,inputWasTransposed:l}}var jU;function Ble(r){jU=r.wasm.cwrap(vi,null,["number, number, number"])}function Ole(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=Tn(a,o,e);if(f){let x=e.dataIdMap.get(p.dataId).id;l=p,u=x}let d=l.shape.length;I.assertAxesAreInnerMostDims("all",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;jU(u,y,x)}if(f&&e.disposeData(p.dataId),s){let x=I.expandShapeToKeepDim(T.shape,m);T.shape=x}return T}var HU={kernelName:vi,backendName:"wasm",setupFunc:Ble,kernelFunc:Ole};var qU;function zle(r){qU=r.wasm.cwrap(wi,null,["number, number, number"])}function Gle(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=Tn(a,o,e);if(f){let x=e.dataIdMap.get(p.dataId).id;l=p,u=x}let d=l.shape.length;I.assertAxesAreInnerMostDims("any",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;qU(u,y,x)}if(f&&e.disposeData(p.dataId),s){let x=I.expandShapeToKeepDim(T.shape,m);T.shape=x}return T}var XU={kernelName:wi,backendName:"wasm",setupFunc:zle,kernelFunc:Gle};var YU;function Wle(r){YU=r.wasm.cwrap(no,null,["number","number","number","number","number"])}function Ule(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,u=s,{transposed:l,axes:p,inputWasTransposed:c}=Tn(s,o,e);if(c){let y=e.dataIdMap.get(l.dataId).id;y!==a&&(u=l,i=y)}let m=u.shape.slice(0,-1),f=e.makeOutput(m,"int32"),d=e.dataIdMap.get(f.dataId).id,h=b.sizeFromShape(f.shape),g=u.shape[p[0]];return YU(i,at[u.dtype],h,g,d),c&&e.disposeData(l.dataId),f}var QU={kernelName:no,backendName:"wasm",kernelFunc:Ule,setupFunc:Wle};var ZU;function Kle(r){ZU=r.wasm.cwrap(oo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vle(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=t,p=I.computePool2DInfo(o.shape,a,i,1,u,l),c=p.filterHeight,m=p.filterWidth,f=p.padInfo.top,d=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,T=p.strideWidth,x=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let k=n.makeOutput(p.outShape,"float32"),v=n.dataIdMap.get(k.dataId).id;return ZU(s,o.shape[0],o.shape[1],o.shape[2],c,m,f,d,h,g,y,T,x,v),k}var JU={kernelName:oo,backendName:"wasm",setupFunc:Kle,kernelFunc:Vle};function hr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s);return b.assert(s===b.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var eK={kernelName:fs,backendName:"wasm",kernelFunc:hr};var tK;function jle(r){tK=r.wasm.cwrap(so,null,["number","array","number","number","array","number","number","number","number"])}function Hle(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],c=i?s.shape[l-1]:s.shape[l-2],m=a?o.shape[u-1]:o.shape[u-2],f=i?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(d),y=b.sizeFromShape(h),x=As.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);b.assert(p===c,()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let k=a?[g,p,m]:[g,m,p],v=i?[y,f,c]:[y,c,f],N=hr({inputs:{x:o},backend:t,attrs:{shape:k}}),A=hr({inputs:{x:s},backend:t,attrs:{shape:v}}),F=t.dataIdMap.get(N.dataId).id,E=t.dataIdMap.get(A.dataId).id,$=a?N.shape[2]:N.shape[1],U=i?A.shape[1]:A.shape[2],K=Math.max(g,y),B=t.makeOutput([K,$,U],N.dtype),V=t.dataIdMap.get(B.dataId).id,j=new Uint8Array(new Int32Array(N.shape).buffer),q=new Uint8Array(new Int32Array(A.shape).buffer);return tK(F,j,N.shape.length,E,q,A.shape.length,a,i,V),t.disposeData(N.dataId),t.disposeData(A.dataId),B.shape=x,B}var rK={kernelName:so,backendName:"wasm",setupFunc:jle,kernelFunc:Hle};function ku(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=kt.parseSliceParams(e,t,n),i=kt.isSliceContinous(e.shape,s,a),u=o.readSync(e.dataId),l=o.makeOutput(a,e.dtype),p=b.computeStrides(e.shape),c=o.dataIdMap.get(l.dataId);if(i){let d=kt.computeFlatOffset(s,p);return e.dtype==="string"?c.stringBytes=u.slice(d,d+b.sizeFromShape(a)):o.typedArrayFromHeap(l).set(u.subarray(d,d+b.sizeFromShape(a))),l}if(e.dtype==="string"){let d=kp(u,s,a,e.shape,e.dtype);return c.stringBytes=d,l}let m=o.typedArrayFromHeap(l),f=e.shape.length;if(f===2)qle(u,p[0],m,s,a);else if(f===3)Xle(u,p[0],p[1],m,s,a);else if(f===4)Yle(u,p[0],p[1],p[2],m,s,a);else{let d=kp(u,s,a,e.shape,e.dtype);m.set(d)}return l}function qle(r,e,t,n,o){let s=0,a=n[0],i=n[1],u=a+o[0];for(let l=a;l<u;l++){let p=l*e+i;t.set(r.subarray(p,p+o[1]),s),s+=o[1]}}function Xle(r,e,t,n,o,s){let a=0,i=o[0],u=o[1],l=o[2],p=i+s[0],c=u+s[1];for(let m=i;m<p;m++)for(let f=u;f<c;f++){let d=m*e+f*t+l;n.set(r.subarray(d,d+s[2]),a),a+=s[2]}}function Yle(r,e,t,n,o,s,a){let i=0,u=s[0],l=s[1],p=s[2],c=u+a[0],m=l+a[1],f=p+a[2],d=s[3];for(let h=u;h<c;h++)for(let g=l;g<m;g++)for(let y=p;y<f;y++){let T=h*e+g*t+y*n+d;o.set(r.subarray(T,T+a[3]),i),i+=a[3]}}var nK={kernelName:hs,backendName:"wasm",kernelFunc:ku};function Qle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n,i=s.reduce((y,T)=>y*T),u=I.getReshaped(o.shape,s,i),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,i),c=I.getSliceBeginCoords(a,s.length),m=I.getSliceSize(p,a,s.length),f=hr({inputs:{x:o},backend:t,attrs:{shape:u}}),d=bi({inputs:{x:f},backend:t,attrs:{perm:l}}),h=hr({inputs:{x:d},backend:t,attrs:{shape:p}}),g=ku({inputs:{x:h},backend:t,attrs:{begin:c,size:m}});return t.disposeData(f.dataId),t.disposeData(d.dataId),t.disposeData(f.dataId),g}var oK={kernelName:as,backendName:"wasm",kernelFunc:Qle};function Iu(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var sK={kernelName:Gn,backendName:"wasm",kernelFunc:Iu};var aK=ht(ao);var iK;function Zle(r){iK=r.wasm.cwrap(Wn,null,["number","number","number","number"])}function Jle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id;return iK(i,s,a,l),u}var uK={kernelName:Wn,backendName:"wasm",setupFunc:Zle,kernelFunc:Jle};function hN(r){let{inputs:e,backend:t}=r,n=b.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=I.computeOutShape(e.map(f=>f.shape),n),s=e.filter(f=>b.sizeFromShape(f.shape)>0);if(s.length===1)return Lp({inputs:{x:s[0]},backend:t});let a=t.makeOutput(o,e[0].dtype);if(b.sizeFromShape(o)===0)return a;let i=s.map(f=>f.shape);if(I.assertParamsConsistent(i,n),s[0].dtype==="string"){let f=s.map(x=>{let k=b.sizeFromShape(x.shape.slice(n));return hr({inputs:{x},backend:t,attrs:{shape:[-1,k]}})}),d=f.map(x=>({vals:t.readSync(x.dataId),shape:x.shape}));o=I.computeOutShape(f.map(x=>x.shape),1);let h=f[0].shape[0]===1,g=yp(d,o,e[0].dtype,h),y=I.computeOutShape(s.map(x=>x.shape),n);a.shape=y;let T=t.dataIdMap.get(a.dataId);return T.stringBytes=I.fromStringArrayToUint8(g),f.forEach(x=>t.disposeData(x.dataId)),a}let u=b.sizeFromShape(s[0].shape.slice(0,n)),l=0,p=s.map(f=>{let d=b.sizeFromShape(f.shape.slice(n));return l+=d,d}),c=s.map(f=>t.typedArrayFromHeap(f)),m=t.typedArrayFromHeap(a);for(let f=0;f<u;f++){let d=f*l;for(let h=0;h<c.length;h++){let g=p[h],y=f*g,T=c[h].subarray(y,y+g);m.set(T,d),d+=g}}return a}var lK={kernelName:is,backendName:"wasm",kernelFunc:hN};var pK;function epe(r){pK=r.wasm.cwrap(io,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function tpe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:c,dataFormat:m}=t,f=I.convertConv2DDataFormat(m),d=I.computeConv2DInfo(o.shape,s.shape,u,l,p,c,!1,f),h=d.filterHeight,g=d.filterWidth,y=d.padInfo.top,T=d.padInfo.right,x=d.padInfo.bottom,k=d.padInfo.left,v=d.dilationHeight,N=d.dilationWidth,A=d.strideHeight,F=d.strideWidth,E=d.inChannels,$=d.outChannels,U=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let K=n.makeOutput(d.outShape,"float32"),B=n.dataIdMap.get(K.dataId).id;return pK(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,y,T,x,k,U,v,N,A,F,E,$,B),K}var cK={kernelName:io,backendName:"wasm",setupFunc:epe,kernelFunc:tpe};var mK;function rpe(r){mK=r.wasm.cwrap(uo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function npe(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,inputShape:p}=n,c=1,m=I.convertConv2DDataFormat(u),f=I.computeConv2DInfo(p,s.shape,a,c,i,l,!1,m),{batchSize:d,filterHeight:h,filterWidth:g,inChannels:y,inHeight:T,inWidth:x,outChannels:k,outHeight:v,outWidth:N,strideHeight:A,strideWidth:F}=f,E=h-1-f.padInfo.top,$=g-1-f.padInfo.left,U=f.dataFormat==="channelsLast",K=b.computeStrides(f.inShape),B=b.computeStrides(o.shape),[V,j,q]=b.computeStrides(s.shape),J=K[0],Y=U?K[1]:K[2],Q=U?K[2]:1,oe=U?1:K[1],re=B[0],me=U?B[1]:B[2],ae=U?B[2]:1,xe=U?1:B[1],le=e.makeOutput(f.inShape,"float32"),ke=e.dataIdMap.get(le.dataId).id,Ne=e.dataIdMap.get(o.dataId).id,Be=e.dataIdMap.get(s.dataId).id;return mK(Ne,Be,d,h,g,T,x,y,v,N,k,A,F,E,$,V,j,q,J,Y,Q,oe,re,me,ae,xe,ke),le}var fK={kernelName:uo,backendName:"wasm",setupFunc:rpe,kernelFunc:npe};var dK=ht(lo);var hK=ht(po);var gN;(function(t){t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest"})(gN||(gN={}));var gK;function ope(r){gK=r.wasm.cwrap(Ys,null,["number","number","number","number","array","number","number","number","number","number"])}function spe(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:u,boxInd:l}=t,p=u.shape[0],[c,m]=a,f=[p,c,m,i.shape[3]],d=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=Iu({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),d=e.dataIdMap.get(h.dataId));let g=d.id,y=e.dataIdMap.get(u.dataId).id,T=e.dataIdMap.get(l.dataId).id,x=e.makeOutput(f,"float32"),k=e.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return gK(g,y,T,p,v,c,m,gN[o],s,k),h!=null&&e.disposeData(h.dataId),x}var bK={kernelName:Ys,backendName:"wasm",setupFunc:ope,kernelFunc:spe};var yK;function ape(r){yK=r.wasm.cwrap(Xs,null,["number","number","number","number","number","number"])}function ipe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([s],u),p=o;l!==null&&(p=bi({inputs:{x:o},attrs:{perm:l},backend:t}));let c=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumsum",[c],u);let m=t.makeOutput(p.shape,p.dtype),f=p.shape[c],d=t.dataIdMap.get(p.dataId).id,h=t.dataIdMap.get(m.dataId).id;yK(d,a?1:0,i?1:0,f,h,at[o.dtype]);let g=m;if(l!==null){let y=I.getUndoAxesPermutation(l);g=bi({inputs:{x:m},attrs:{perm:y},backend:t}),t.disposeData(p.dataId),t.disposeData(m.dataId)}return g}var xK={kernelName:Xs,backendName:"wasm",setupFunc:ape,kernelFunc:ipe};var TK;function upe(r){TK=r.wasm.cwrap(Qs,null,["number","number","number","array","number","array","array","number","number"])}function lpe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],c=u*s,m=l*s,f=p/(s*s),d=a==="NHWC"?[i,c,m,f]:[i,f,c,m],h=e.makeOutput(d,"float32"),y=e.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(d).buffer),k=new Uint8Array(new Int32Array(b.computeStrides(d)).buffer),v=e.dataIdMap.get(h.dataId).id;return TK(y,s,a==="NHWC"?1:0,T,o.shape.length-1,x,k,d.length,v),h}var kK={kernelName:Qs,backendName:"wasm",setupFunc:upe,kernelFunc:lpe};var IK;function ppe(r){IK=r.wasm.cwrap(co,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function cpe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:c}=t,m=l??[1,1],f=I.computeConv2DInfo(o.shape,s.shape,u,m,p,c,!0),d=f.filterHeight,h=f.filterWidth,g=f.padInfo.top,y=f.padInfo.right,T=f.padInfo.bottom,x=f.padInfo.left,k=f.dilationHeight,v=f.dilationWidth,N=f.strideHeight,A=f.strideWidth,F=f.inChannels,E=f.outChannels,$=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let U=n.makeOutput(f.outShape,"float32"),K=n.dataIdMap.get(U.dataId).id;return IK(a,o.shape[0],o.shape[1],o.shape[2],i,d,h,g,y,T,x,$,k,v,N,A,F,E,K),U}var CK={kernelName:co,backendName:"wasm",setupFunc:ppe,kernelFunc:cpe};var vK=ht(fo);var mpe=!1,wK=Nt(Zs,mpe,"bool");var SK=ht(ho,"float32");function Gx(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),hr({inputs:{x:o},backend:n,attrs:{shape:i}})}var _K={kernelName:us,backendName:"wasm",kernelFunc:Gx};function bN(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var AK={kernelName:ja,backendName:"wasm",kernelFunc:bN};var NK;function fpe(r){NK=r.wasm.cwrap(ea,null,["number","number","number","number","number","number"])}function dpe(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,u,l,p]=n.shape;return NK(s,i,u,l,p,a),o}var DK={kernelName:ea,backendName:"wasm",kernelFunc:dpe,setupFunc:fpe};var PK=ht(go);var hpe=!1,FK=Nt(bo,hpe);var MK;function gpe(r){MK=r.wasm.cwrap(yo,null,["number","number","number","number","number","number","number"])}function bpe(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:u,scale:l}=t,p=e.dataIdMap.get(s.dataId).id,c=e.dataIdMap.get(a.dataId).id,m=e.dataIdMap.get(i.dataId).id,f=u!=null?e.dataIdMap.get(u.dataId).id:0,d=l!=null?e.dataIdMap.get(l.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(b.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return MK(p,c,m,f,d,o,g),h}var EK={kernelName:yo,backendName:"wasm",setupFunc:gpe,kernelFunc:bpe};var RK;function ype(r){RK=r.wasm.cwrap(Is,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function xpe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dataFormat:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,p,l,m),g=fl[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,k=0;if(a!=null){let ae=n.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ae.shape}) does not match the number of output channels (${x})`);k=ae.id}let v=h.filterHeight,N=h.filterWidth,A=h.padInfo.top,F=h.padInfo.right,E=h.padInfo.bottom,$=h.padInfo.left,U=h.dilationHeight,K=h.dilationWidth,B=h.strideHeight,V=h.strideWidth,j=h.inChannels,q=h.padInfo.type==="SAME"?1:0,J=h.batchSize,Y=h.inHeight,Q=h.inWidth;if(c!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),re=n.dataIdMap.get(oe.dataId).id,me=i==null?0:n.dataIdMap.get(i.dataId).id;return RK(y,J,Y,Q,T,v,N,k,A,F,E,$,q,U,K,B,V,j,x,g,me,d||0,re),oe}var LK={kernelName:Is,backendName:"wasm",setupFunc:ype,kernelFunc:xpe};var $K;function Tpe(r){$K=r.wasm.cwrap(Cs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function kpe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dataFormat:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,p,l,m,!0),g=fl[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,k=0;if(a!=null){let ae=n.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ae.shape}) does not match the number of output channels (${x})`);k=ae.id}let v=h.filterHeight,N=h.filterWidth,A=h.padInfo.top,F=h.padInfo.right,E=h.padInfo.bottom,$=h.padInfo.left,U=h.dilationHeight,K=h.dilationWidth,B=h.strideHeight,V=h.strideWidth,j=h.inChannels,q=h.padInfo.type==="SAME"?1:0,J=h.batchSize,Y=h.inHeight,Q=h.inWidth;if(c!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),re=n.dataIdMap.get(oe.dataId).id,me=i==null?0:n.dataIdMap.get(i.dataId).id;return $K(y,J,Y,Q,T,v,N,k,A,F,E,$,q,U,K,B,V,j,x,g,me,d||0,re),oe}var BK={kernelName:Cs,backendName:"wasm",setupFunc:Tpe,kernelFunc:kpe};var OK;function Ipe(r){OK=r.wasm.cwrap(ta,null,["number","number","number","number","number","number","array","number"])}function Cpe(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,u]=cb.prepareAndValidate(n,o),l=e.makeOutput(s,n.dtype);if(a===0)return l;let p=o.shape,c=p[p.length-1],f=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),y=e.dataIdMap.get(l.dataId).id;return OK(f,at[n.dtype],h,a,c,i,g,y),l}var zK={kernelName:ta,backendName:"wasm",setupFunc:Ipe,kernelFunc:Cpe};var GK;function vpe(r){GK=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function wpe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=b.parseAxisParam(a,o.shape)[0],l=e.readSync(s.dataId),p=o.shape[u];for(let E=0;E<l.length;++E){let $=l[E];b.assert($<=p-1&&$>=0,()=>`GatherV2: the index value ${$} is not in [0, ${p-1}]`)}let c=I.segment_util.collectGatherOpShapeInfo(o,s,u,i),m=hr({inputs:{x:o},attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]},backend:e}),f=b.sizeFromShape(s.shape),d=hr({inputs:{x:s},attrs:{shape:[c.batchSize,f/c.batchSize]},backend:e}),h=[c.batchSize,c.outerSize,f/c.batchSize,c.sliceSize],g=e.makeOutput(h,o.dtype);if(b.sizeFromShape(o.shape)===0)return g;let y=m.shape.length-1,x=e.dataIdMap.get(m.dataId).id,v=e.dataIdMap.get(d.dataId).id,N=e.dataIdMap.get(g.dataId).id,A=new Uint8Array(new Int32Array(b.computeStrides(m.shape)).buffer),F=new Uint8Array(new Int32Array(b.computeStrides(h)).buffer);return GK(x,at[o.dtype],A,y,v,c.batchSize,F,N),e.disposeData(m.dataId),e.disposeData(d.dataId),g.shape=c.outputShape,g}var WK={kernelName:ls,backendName:"wasm",setupFunc:vpe,kernelFunc:wpe};var Spe=!1,UK=Nt(ra,Spe,"bool");var _pe=!1,KK=Nt(xo,_pe,"bool");var VK;function Ape(r){VK=r.wasm.cwrap(na,null,["number","number","number","number"])}function Npe(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(b.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;VK(o,at[e.dtype],t,a)}return s}var jK={kernelName:na,backendName:"wasm",setupFunc:Ape,kernelFunc:Npe};var Dpe=!1,HK=Nt(oa,Dpe,"bool");var Ppe=!1,qK=Nt(sa,Ppe,"bool");var XK=ht(To);var Fpe=!1,YK=Nt(aa,Fpe,"bool");var QK;function Mpe(r){QK=r.wasm.cwrap(ko,null,["number","number","number","number"])}function Epe(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=Tn(a,o,e);if(f){let x=e.dataIdMap.get(p.dataId).id;l=p,u=x}let d=l.shape.length;I.assertAxesAreInnerMostDims("max",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;QK(u,at[a.dtype],y,x)}if(f&&e.disposeData(p.dataId),s){let x=I.expandShapeToKeepDim(T.shape,m);T.shape=x}return T}var ZK={kernelName:ko,backendName:"wasm",setupFunc:Mpe,kernelFunc:Epe};var Rpe=!1,JK=Nt(Io,Rpe);var eV;function Lpe(r){eV=r.wasm.cwrap(Co,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $pe(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;b.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=t,p=I.computePool2DInfo(o.shape,a,i,1,u,l),c=p.filterHeight,m=p.filterWidth,f=p.padInfo.top,d=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,T=p.dilationWidth,x=p.strideHeight,k=p.strideWidth,v=p.inChannels,N=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let A=n.makeOutput(p.outShape,"float32"),F=n.dataIdMap.get(A.dataId).id;return eV(s,o.shape[0],o.shape[1],o.shape[2],c,m,f,d,h,g,y,T,x,k,v,N,F),A}var tV={kernelName:Co,backendName:"wasm",setupFunc:Lpe,kernelFunc:$pe};var rV;function Bpe(r){rV=r.wasm.cwrap(vo,null,["number, number, number"])}function Ope(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=Tn(a,o,e),d=c;if(f){let k=e.dataIdMap.get(p.dataId).id;k!==i&&(l=p,u=k,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("mean",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),y=b.sizeFromShape(g),T=l;l.dtype!=="float32"&&(T=Iu({backend:e,inputs:{x:l},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(T.dataId).id);let x=e.makeOutput(h,"float32");if(b.sizeFromShape(l.shape)!==0){let k=e.dataIdMap.get(x.dataId).id;rV(u,y,k)}if(f&&e.disposeData(p.dataId),s){let k=I.expandShapeToKeepDim(x.shape,m);x.shape=k}return l.dtype!=="float32"&&e.disposeData(T.dataId),x}var nV={kernelName:vo,backendName:"wasm",setupFunc:Bpe,kernelFunc:Ope};var oV;function zpe(r){oV=r.wasm.cwrap(wo,null,["number","number","number","number"])}function Gpe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=Tn(a,o,e);if(f){let x=e.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x)}let d=l.shape.length;I.assertAxesAreInnerMostDims("min",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),y=b.sizeFromShape(g),T=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;oV(u,at[a.dtype],y,x)}if(f&&e.disposeData(p.dataId),s){let x=I.expandShapeToKeepDim(T.shape,m);T.shape=x}return T}var sV={kernelName:wo,backendName:"wasm",setupFunc:zpe,kernelFunc:Gpe};var Wpe=!1,aV=Nt(So,Wpe);var yN;(function(t){t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric"})(yN||(yN={}));var iV;function Upe(r){iV=r.wasm.cwrap(_o,null,["number","array","number","number","array","array","number","number"])}function Kpe(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((d,h)=>d[0]+e.shape[h]+d[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),p=n.map(d=>d[0]),c=n.map(d=>d[1]),m=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(c).buffer);return iV(a,l,e.shape.length,at[e.dtype],m,f,yN[o],u),i}var uV={kernelName:_o,backendName:"wasm",kernelFunc:Kpe,setupFunc:Upe};var Vpe=!0,lV=Nt(Ao,Vpe);var pV=ht(ps);function Wm(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var cV;function jpe(r){cV=r.wasm.cwrap(ua,"number",["number","number","number","number","number"])}function Hpe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:u}=t,l=e.dataIdMap.get(i.dataId).id,p=e.dataIdMap.get(u.dataId).id,c=cV(l,p,s,o,a),{pSelectedIndices:m,selectedSize:f,pSelectedScores:d,pValidOutputs:h}=Wm(e,c);return e.wasm._free(d),e.wasm._free(h),e.makeOutput([f],"int32",m)}var mV={kernelName:ua,backendName:"wasm",setupFunc:jpe,kernelFunc:Hpe};var fV;function qpe(r){fV=r.wasm.cwrap(Bi,"number",["number","number","number","number","number","bool"])}function Xpe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,c=e.dataIdMap.get(l.dataId).id,m=fV(p,c,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Wm(e,m);e.wasm._free(h);let y=e.makeOutput([d],"int32",f),T=e.makeOutput([],"int32",g);return[y,T]}var dV={kernelName:Bi,backendName:"wasm",setupFunc:qpe,kernelFunc:Xpe};var hV;function Ype(r){hV=r.wasm.cwrap(la,"number",["number","number","number","number","number","number"])}function Qpe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,c=e.dataIdMap.get(l.dataId).id,m=hV(p,c,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Wm(e,m);e.wasm._free(g);let y=e.makeOutput([d],"int32",f),T=e.makeOutput([d],"float32",h);return[y,T]}var gV={kernelName:la,backendName:"wasm",setupFunc:Ype,kernelFunc:Qpe};var Zpe=!1,bV=Nt(ia,Zpe,"bool");var yV;function Jpe(r){yV=r.wasm.cwrap(pa,null,["number","number","number","number","number"])}function ece(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,u=t.makeOutput([...o.shape,s],"int32"),l=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(o.dataId).id;return yV(c,s,a,i,l),u}var xV={kernelName:pa,backendName:"wasm",setupFunc:Jpe,kernelFunc:ece};function tce(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var TV={kernelName:cs,backendName:"wasm",kernelFunc:tce};function rce(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Gx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let c=Gx({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(c),c}),l=hN({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeData(p.dataId)),l}var kV={kernelName:ms,backendName:"wasm",kernelFunc:rce};var IV;function nce(r){IV=r.wasm.cwrap(No,null,["number","array","number","number","array","array","number","number"])}function oce(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(b.sizeFromShape(e.shape)===0)return bN({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(e.shape).buffer),c=n.map(h=>h[0]),m=n.map(h=>h[1]),f=new Uint8Array(new Int32Array(c).buffer),d=new Uint8Array(new Int32Array(m).buffer);return IV(a,p,e.shape.length,at[e.dtype],f,d,o,l),i}var Wx={kernelName:No,backendName:"wasm",kernelFunc:oce,setupFunc:nce};var sce=!1,CV=Nt(Do,sce);var vV;function ace(r){vV=r.wasm.cwrap(Po,null,["number","number","number"])}function ice(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=s,u=n,l=u;u.dtype!=="float32"&&(l=Iu({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(l.dataId).id);let p=t.makeOutput(n.shape,"float32"),c=t.dataIdMap.get(p.dataId).id;return vV(i,a,c),u.dtype!=="float32"&&t.disposeData(l.dataId),p}var wV={kernelName:Po,backendName:"wasm",setupFunc:ace,kernelFunc:ice};var SV;function uce(r){SV=r.wasm.cwrap(ca,null,["number","number","number","number"])}function lce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=Tn(a,o,e),d=c;if(f){let x=e.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("prod",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),y=b.sizeFromShape(g),T=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;SV(u,y,at[T.dtype],x)}if(f&&e.disposeData(p.dataId),s){let x=I.expandShapeToKeepDim(T.shape,m);T.shape=x}return T}var _V={kernelName:ca,backendName:"wasm",setupFunc:uce,kernelFunc:lce};var pce=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=Tp(n,o,s,a),u=e.makeOutput([i.length],a);return e.typedArrayFromHeap(u).set(i),u},AV={kernelName:Ha,backendName:"wasm",kernelFunc:pce};var cce=!0,NV=Nt(mo,cce);var DV=ht(Fo);var PV=ht(Eo);var FV;function mce(r){FV=r.wasm.cwrap(Mo,null,["number","number","number","number","number","number","number","number","number","number"])}function fce(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,c,m,f]=o.shape,d=[p,u,l,f],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=Iu({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let y=h.id,T=e.makeOutput(d,"float32");if(b.sizeFromShape(o.shape)===0)return T;let x=e.dataIdMap.get(T.dataId).id;return FV(y,p,c,m,f,u,l,s?1:0,a?1:0,x),g!=null&&e.disposeData(g.dataId),T}var MV={kernelName:Mo,backendName:"wasm",setupFunc:mce,kernelFunc:fce};var EV;function dce(r){EV=r.wasm.cwrap(ma,null,["number","array","number","array","number","number"])}function hce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=b.parseAxisParam(s,o.shape);if(o.shape.length===0)return Lp({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),c=new Uint8Array(new Int32Array(o.shape).buffer);EV(u,p,a.length,c,o.shape.length,l);let m=hr({inputs:{x:i},attrs:{shape:o.shape},backend:t});return t.disposeData(i.dataId),m}var RV={kernelName:ma,backendName:"wasm",kernelFunc:hce,setupFunc:dce};var LV;function gce(r){LV=r.wasm.cwrap(Ta,null,["number","number","number","number","number","number","number","number","array","number","number"])}function bce(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(u.dataId).id,[c,m,f,d]=o.shape,[h,g]=I.getImageCenter(i,m,f),y=a===0,T=255,x=typeof a=="number"?[a,a,a,y?0:T]:[...a,T],k=new Uint8Array(new Int32Array(x).buffer);return LV(l,c,m,f,d,s,h,g,k,x.length,p),u}var $V={kernelName:Ta,backendName:"wasm",kernelFunc:bce,setupFunc:gce};var BV=ht(fa);var OV=ht(Ro);var zV;function yce(r){zV=r.wasm.cwrap(da,null,["number","number","number","number","number","number","array","number","number"])}function xce(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(b.sizeFromShape(a)===0)return i;let{sliceRank:u,numUpdates:l,sliceSize:p,strides:c,outputSize:m}=fb.calculateShapes(s,o,a),d=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(c).buffer),T=e.dataIdMap.get(i.dataId).id;return zV(d,g,at[s.dtype],u,l,p,y,m,T),i}var GV={kernelName:da,backendName:"wasm",setupFunc:yce,kernelFunc:xce};var WV;function Tce(r){WV=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function kce(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(l.dataId).id,c=n.shape.length,m=o.shape.length,f=c===0||c>1||m===1?1:b.sizeFromShape(o.shape.slice(1));return WV(a,i,u,f,p),l}var UV={kernelName:ds,backendName:"wasm",kernelFunc:kce,setupFunc:Tce};var KV;function Ice(r){KV=r.wasm.cwrap($o,null,["number","number"])}function Cce(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return b.sizeFromShape(o.shape)===0||KV(n,s),o}var VV={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Ice,kernelFunc:Cce};var jV=ht(Lo);var HV;function vce(r){HV=r.wasm.cwrap(zo,null,["number","number","number","number"])}function wce(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],u=b.sizeFromShape(t.shape)/i;return b.sizeFromShape(s.shape)===0||HV(o,a,i,u),s}var qV={kernelName:zo,backendName:"wasm",setupFunc:vce,kernelFunc:wce};function Sce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n,i=b.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let N=1+s.length;N<o.shape.length;++N)u.push([0,0]);let l=Wx.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(l.shape,s,i,!1),c=I.getPermuted(p.length,s.length,!1),m=I.getReshapedPermuted(l.shape,s,i,!1),h=hr({inputs:{x:l},backend:t,attrs:{shape:p}}),T=bi({inputs:{x:h},backend:t,attrs:{perm:c}}),v=hr({inputs:{x:T},backend:t,attrs:{shape:m}});return t.disposeData(l.dataId),t.disposeData(h.dataId),t.disposeData(T.dataId),v}var XV={kernelName:gs,backendName:"wasm",kernelFunc:Sce};function _ce(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=b.parseAxisParam(a,o.shape)[0],u=I.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(c=>{let m=[...p];m[i]=c;let f=ku({inputs:{x:o},attrs:{begin:l,size:m},backend:n});return l[i]+=c,f})}var YV={kernelName:bs,backendName:"wasm",kernelFunc:_ce};var QV=ht(Bo);var ZV=ht(Xa);var Ace=!0,JV=Nt(Go,Ace);var e4;function Nce(r){e4=r.wasm.cwrap(Ts,null,["number","number","number","number"])}function Dce(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),u=e.dataIdMap.get(i.dataId).id;return e4(a,o,at[s.dtype],u),i}var t4={kernelName:Ts,backendName:"wasm",setupFunc:Nce,kernelFunc:Dce};var r4;function Pce(r){r4=r.wasm.cwrap(ga,null,["number","array","number","array","array","array","array","array","number","number"])}function Fce(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:k}=kt.sliceInfo(o.shape,s,a,i,u,l,p,c,m),v;if(h)v=hr({inputs:{x:o},backend:e,attrs:{shape:d}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=kt.computeOutShape(T,x,k),A=ku({inputs:{x:o},backend:e,attrs:{begin:T,size:N}});v=hr({inputs:{x:A},backend:e,attrs:{shape:d}}),e.disposeData(A.dataId)}else{let N=e.makeOutput(f,"float32"),A=e.dataIdMap.get(o.dataId).id,F=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),E=new Uint8Array(new Int32Array(T).buffer),$=new Uint8Array(new Int32Array(x).buffer),U=new Uint8Array(new Int32Array(k).buffer),K=new Uint8Array(new Int32Array(f).buffer),B=new Uint8Array(new Int32Array(b.computeStrides(f)).buffer),V=e.dataIdMap.get(N.dataId).id;r4(A,F,o.shape.length,E,$,U,K,B,f.length,V),v=hr({inputs:{x:N},backend:e,attrs:{shape:d}}),e.disposeData(N.dataId)}return v}var n4={kernelName:ga,backendName:"wasm",setupFunc:Pce,kernelFunc:Fce};var Mce=!0,o4=Nt(Wo,Mce);var s4;function Ece(r){s4=r.wasm.cwrap(Oo,null,["number","number","number","number"])}function Rce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=Tn(a,o,e),d=c;if(f){let x=e.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("sum",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),y=b.sizeFromShape(g),T=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;s4(u,y,at[T.dtype],x)}if(f&&e.disposeData(p.dataId),s){let x=I.expandShapeToKeepDim(T.shape,m);T.shape=x}return T}var a4={kernelName:Oo,backendName:"wasm",setupFunc:Ece,kernelFunc:Rce};var i4=ht(ba);var u4=ht(Uo);var l4;function Lce(r){l4=r.wasm.cwrap(Sn,null,["number","array","number","array","number","number"])}function $ce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let m=0;m<i.length;m++)i[m]=o.shape[m]*a[m];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(i).buffer),p=t.makeOutput(i,o.dtype),c=t.dataIdMap.get(p.dataId).id;return l4(s,u,o.shape.length,l,i.length,at[p.dtype],c),p}var p4={kernelName:Sn,backendName:"wasm",setupFunc:Lce,kernelFunc:$ce};var c4;function Bce(r){c4=r.wasm.cwrap(ya,null,["number","array","number","number","number","bool","number","number"])}var Oce=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=e.makeOutput(u,n.dtype),p=e.dataIdMap.get(l.dataId).id,c=e.makeOutput(u,"int32"),m=e.dataIdMap.get(c.dataId).id;return c4(a,i,n.shape.length,at[n.dtype],o,s,p,m),[l,c]},m4={kernelName:ya,backendName:"wasm",setupFunc:Bce,kernelFunc:Oce};var f4;function zce(r){f4=r.wasm.cwrap(xa,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Gce(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],y=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),T=e.makeOutput(g,o.dtype),x=e.dataIdMap.get(T.dataId).id,v=e.dataIdMap.get(o.dataId).id,A=e.dataIdMap.get(s.dataId).id,F=a==="nearest"?1:2,E;switch(i){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return f4(v,A,s.shape[0]>1,p,d,h,f,m,c,y,o.shape.length-1,F,E,u,x),T}var d4={kernelName:xa,backendName:"wasm",setupFunc:zce,kernelFunc:Gce};function Wce(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,u=new Array(i-1),l=0;for(let f=0;f<i;f++)f!==s&&(u[l++]=o.shape[f]);let p=new Array(a),c=new Array(i).fill(0),m=o.shape.slice();m[s]=1;for(let f=0;f<p.length;f++)c[s]=f,p[f]=ku({inputs:{x:o},attrs:{begin:c,size:m},backend:t});return p.map(({dataId:f,dtype:d})=>({dataId:f,dtype:d,shape:u}))}var h4={kernelName:ys,backendName:"wasm",kernelFunc:Wce};function Uce(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var g4={kernelName:xs,backendName:"wasm",kernelFunc:Uce};var Kce=[OU,zU,WU,HU,XU,QU,JU,rK,oK,sK,aK,uK,lK,cK,fK,dK,hK,bK,xK,kK,CK,vK,wK,SK,_K,AK,DK,PK,FK,BU,EK,LK,BK,zK,WK,UK,KK,UU,jK,HK,qK,XK,YK,ZK,JK,tV,nV,sV,aV,uV,lV,pV,mV,dV,gV,bV,xV,TV,kV,Wx,CV,wV,_V,AV,NV,DV,PV,eK,MV,RV,$V,OV,BV,GV,UV,VV,jV,nK,qV,XV,YV,QV,ZV,JV,t4,n4,o4,a4,i4,u4,p4,m4,d4,VU,h4,g4];for(let r of Kce)Ui(r);var xN=G();xN.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));xN.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(xN.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var vN=kl(b4());var y4='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}';var T4=kl(x4());var Vx=class extends ns{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(C4),SN=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Wa(this,Vo())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}move(e,t,n,o,s){let a=this.dataIdNextNumber++;if(o==="string"){let p=t;this.dataIdMap.set(e,{id:a,stringBytes:p,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let i=b.sizeFromShape(n),u=i*b.bytesPerElement(o),l=this.wasm._malloc(u);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(a,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:o,stringBytes:s}=this.dataIdMap.get(e);if(n==="string")return s;let a=this.wasm.HEAPU8.slice(t,t+b.sizeFromShape(o)*b.bytesPerElement(n));return jce(a.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=b.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=b.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,a);case"int32":return new Int32Array(o,s,a);case"bool":return new Uint8Array(o,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Vce(r){return(e,t)=>(b.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function k4(r,e,t){if(jx!=null)return jx;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Tg!=null&&Tg[n]!=null?Tg[n]:t+n}async function I4(){let[r,e]=await Promise.all([G().getAsync("WASM_HAS_SIMD_SUPPORT"),G().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){let l=y4,p=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(p)}return i.endsWith(".wasm")?k4(r,e,xg??u):u+i},wN&&(o.instantiateWasm=Vce(k4(r,e,xg??"")));let s=!1;o.onAbort=()=>{if(s||kg)return;kg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&r&&jx==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+vN.default.toString()],{type:"text/javascript"}),a=(0,vN.default)(o)):a=(0,T4.default)(o),a.then(i=>{s=!0,kg=!1;let u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},t({wasm:i})})})}function jce(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var Hce=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],jx=null,xg=null,Tg={},kg=!1,wN=!1;function qce(r,e=!1){if(sI("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),kg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");jx=r,wN=e}function Xce(r,e=!1){if(kg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")xg=r;else{Tg=r;let t=Hce.filter(n=>Tg[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}wN=e}var C4=-1,SN=-1;function Yce(r){C4=r}function Qce(){if(SN===-1)throw new Error("WASM backend not initialized.");return SN}var Zce="0.0.0";var Jce=2;ju("wasm",async()=>{let{wasm:r}=await I4();return new Vx(r)},Jce);var dl="3.11.0-20211030",D8r={tfjs:dl,"tfjs-core":dl,"tfjs-data":dl,"tfjs-layers":dl,"tfjs-converter":dl,"tfjs-backend-cpu":dl,"tfjs-backend-webgl":dl,"tfjs-backend-wasm":dl};export{ss as Abs,Ii as Acos,Ci as Acosh,tp as AdadeltaOptimizer,rp as AdagradOptimizer,np as AdamOptimizer,op as AdamaxOptimizer,wn as Add,ro as AddN,vi as All,wi as Any,no as ArgMax,Va as ArgMin,Si as Asin,_i as Asinh,Ai as Atan,Di as Atan2,Ni as Atanh,oo as AvgPool,Nu as AvgPool3D,Qp as AvgPool3DGrad,Yp as AvgPoolGrad,Vx as BackendWasm,so as BatchMatMul,as as BatchToSpaceND,Zp as Bincount,Jp as BroadcastArgs,HN as BroadcastTo,Tv as Callback,AC as CallbackList,Gn as Cast,ao as Ceil,Wn as ClipByValue,Du as Complex,Pu as ComplexAbs,is as Concat,io as Conv2D,ec as Conv2DBackpropFilter,uo as Conv2DBackpropInput,Fu as Conv3D,tc as Conv3DBackpropFilterV2,rc as Conv3DBackpropInputV2,lo as Cos,po as Cosh,Ys as CropAndResize,Xs as Cumsum,DC as CustomCallback,Wa as DataStorage,nc as DenseBincount,Qs as DepthToSpace,co as DepthwiseConv2dNative,oc as DepthwiseConv2dNativeBackpropFilter,sc as DepthwiseConv2dNativeBackpropInput,ac as Diag,Mu as Dilation2D,af as Dilation2DBackpropFilter,sf as Dilation2DBackpropInput,Tk as ENV,kv as EarlyStopping,Eu as Einsum,fo as Elu,ic as EluGrad,qg as Environment,Zs as Equal,Pi as Erf,ho as Exp,us as ExpandDims,Js as Expm1,uc as FFT,ja as Fill,ea as FlipLeftRight,go as Floor,bo as FloorDiv,wl as FromPixels,yo as FusedBatchNorm,Is as FusedConv2D,Cs as FusedDepthwiseConv2D,hx as GPGPUContext,ta as GatherNd,ls as GatherV2,Qv as GraphModel,ra as Greater,xo as GreaterEqual,NC as History,lc as IFFT,Un as Identity,Ru as Imag,Mt as InputSpec,Fi as IsFinite,Mi as IsInf,Ei as IsNan,ns as KernelBackend,Lu as LRN,cc as LRNGrad,Yb as LayerVariable,Qo as LayersModel,na as LeakyRelu,oa as Less,sa as LessEqual,pc as LinSpace,To as Log,Ri as Log1p,qN as LogSoftmax,aa as LogicalAnd,Li as LogicalNot,vl as LogicalOr,Dh as MathBackendCPU,Hh as MathBackendWebGL,ko as Max,Co as MaxPool,$u as MaxPool3D,fc as MaxPool3DGrad,mc as MaxPoolGrad,dc as MaxPoolWithArgmax,Io as Maximum,vo as Mean,wo as Min,So as Minimum,_o as MirrorPad,$i as Mod,sp as MomentumOptimizer,hc as Multinomial,Ao as Multiply,ps as Neg,ua as NonMaxSuppressionV3,Bi as NonMaxSuppressionV4,la as NonMaxSuppressionV5,ia as NotEqual,CD as OP_SCOPE_SUFFIX,pa as OneHot,cs as OnesLike,Jr as Optimizer,oi as OptimizerConstructors,ms as Pack,No as PadV2,ame as Pool,Do as Pow,Po as Prelu,ca as Prod,ap as RMSPropOptimizer,Bs as RNN,Ha as Range,Dk as Rank,Bu as Real,mo as RealDiv,Oi as Reciprocal,or as Reduction,Fo as Relu,Eo as Relu6,fs as Reshape,Mo as ResizeBilinear,bc as ResizeBilinearGrad,qa as ResizeNearestNeighbor,gc as ResizeNearestNeighborGrad,ma as Reverse,Ta as RotateWithOffset,fa as Round,Ro as Rsqrt,au as SGDOptimizer,da as ScatterNd,ds as Select,zi as Selu,um as Sequential,$o as Sigmoid,Gi as Sign,Lo as Sin,ha as Sinh,hs as Slice,zo as Softmax,Wi as Softplus,gs as SpaceToBatchND,yc as SparseFillEmptyRows,xc as SparseReshape,Tc as SparseSegmentMean,kc as SparseSegmentSum,Ou as SparseToDense,bs as SplitV,Bo as Sqrt,Xa as Square,Go as SquaredDifference,Ts as Step,ga as StridedSlice,zu as StringNGrams,Ic as StringSplit,Cc as StringToHashBucketFast,Wo as Sub,Oo as Sum,hn as SymbolicTensor,ba as Tan,Uo as Tanh,Qe as Tensor,xt as TensorBuffer,Sn as Tile,ya as TopK,xa as Transform,Ko as Transpose,vc as Unique,ys as Unpack,Gu as UnsortedSegmentSum,Ku as Variable,xs as ZerosLike,ks as _FusedMatMul,zt as abs,aI as acos,iI as acosh,X as add,uI as addN,xf as all,Rc as any,Zi as argMax,lI as argMin,pI as asin,cI as asinh,mI as atan,fI as atan2,dI as atanh,Rl as avgPool,Tf as avgPool3d,k0 as backend,I as backend_util,qq as basicLSTMCell,Ja as batchNorm,yI as batchNorm2d,xI as batchNorm3d,TI as batchNorm4d,Ll as batchToSpaceND,kf as bincount,mLe as booleanMaskAsync,kI as broadcastArgs,$l as broadcastTo,As as broadcast_util,pb as browser,Ce as buffer,lJ as callbacks,Z as cast,II as ceil,Lr as clipByValue,_n as clone,jn as complex,lt as concat,CI as concat1d,vI as concat2d,wI as concat3d,SI as concat4d,BP as constraints,If as conv1d,Hn as conv2d,Cf as conv2dTranspose,vf as conv3d,_I as conv3dTranspose,hme as copyRegisteredKernels,Bl as cos,wf as cosh,Ab as cosineWindow,Sf as cumsum,pn as customGrad,nE as data,AI as denseBincount,sI as deprecationWarn,NI as depthToSpace,eu as depthwiseConv2d,cJ as deregisterOp,Vi as device_util,C6 as diag,DI as dilation2d,lbe as disableDeprecationWarnings,Ee as dispose,pbe as disposeVariables,pe as div,PI as divNoNan,D6 as dot,H0 as dropout,FI as einsum,tu as elu,ube as enableDebugMode,ibe as enableProdMode,q0 as enclosingPowerOfTwo,Vo as engine,G as env,Kr as equal,MI as erf,cr as exp,_r as expandDims,EI as expm1,Bc as eye,ql as fft,Ca as fill,gbe as findBackend,bbe as findBackendFactory,ru as floor,yf as floorDiv,AB as forceHalfFloat,Ds as fused,ei as gather,V0 as gatherND,cb as gather_util,dbe as getBackend,Ck as getGradient,lf as getKernel,Xg as getKernelsForBackend,Qce as getThreadsCount,N$ as gpgpu_util,t5 as grad,r5 as grads,nr as greater,Ho as greaterEqual,qu as ifft,Ol as imag,Pn as image,_$e as inTopKAsync,oF as initializers,OC as input,Ur as io,Wf as irfft,V6 as isFinite,H6 as isInf,RI as isNaN,Vt as keep,Tr as kernel_impls,OF as layers,zl as leakyRelu,_f as less,qo as lessEqual,R2 as linalg,LI as linspace,OJ as loadGraphModel,IQ as loadLayersModel,$I as localResponseNormalization,$r as log,Gl as log1p,u5 as logSigmoid,Af as logSoftmax,GI as logSumExp,jr as logicalAnd,Wl as logicalNot,Df as logicalOr,T5 as logicalXor,lVe as losses,je as matMul,n0 as math,Zr as max,Ul as maxPool,Pf as maxPool3d,WI as maxPoolWithArgmax,qn as maximum,Lt as mean,bf as memory,S5 as meshgrid,zF as metrics,Oc as min,nu as minimum,UI as mirrorPad,KI as mod,TQ as model,GF as models,zc as moments,BLe as movingAverage,R as mul,E5 as multiRNNCell,VI as multinomial,et as neg,pC as nextFrame,Sb as norm,ri as notEqual,Yi as oneHot,mr as ones,Ar as onesLike,_ as op,O5 as outerProduct,Nn as pad,W5 as pad1d,K5 as pad2d,j5 as pad3d,q5 as pad4d,J5 as pool,Dn as pow,Vl as prelu,Xk as print,Ff as prod,cbe as profile,o8 as rand,m8 as randomGamma,Ib as randomNormal,va as randomUniform,ou as range,fbe as ready,Hu as real,eC as reciprocal,ju as registerBackend,CQ as registerCallbackConstructor,XN as registerGradient,Ui as registerKernel,pJ as registerOp,WF as regularizers,Hr as relu,Ef as relu6,hbe as removeBackend,L as reshape,xr as reverse,k8 as reverse1d,C8 as reverse2d,w8 as reverse3d,_8 as reverse4d,Xl as rfft,Rf as round,Lf as rsqrt,ce as scalar,U0 as scatterND,fb as scatter_util,$f as selu,tC as separableConv2d,kQ as sequential,te as serialization,gq as setBackend,ybe as setPlatform,Yce as setThreadsCount,qce as setWasmPath,Xce as setWasmPaths,Kw as setWebGLContext,rC as setdiff1dAsync,wm as shared,ln as sigmoid,nC as sign,LKe as signal,Bf as sin,Of as sinh,Ue as slice,zf as slice1d,Cb as slice2d,Gf as slice3d,Wc as slice4d,kt as slice_util,Hl as softmax,ti as softplus,Kl as spaceToBatchND,Vf as sparse,_b as sparseToDense,PKe as spectral,Ir as split,$t as sqrt,Xe as square,Uf as squaredDifference,cn as squeeze,fr as stack,su as step,oC as stridedSlice,Lb as string,ue as sub,he as sum,Ki as sumOutType,sC as tan,Ji as tanh,Er as tensor,Wt as tensor1d,ni as tensor2d,Jk as tensor3d,J8 as tensor4d,eX as tensor5d,tX as tensor6d,_s as tensor_util,T0 as test_util,W as tidy,Vr as tile,mbe as time,aC as topk,ip as train,qe as transpose,Yl as truncatedNormal,vb as unique,dme as unregisterGradient,fme as unregisterKernel,iC as unsortedSegmentSum,Br as unstack,Kt as upcastType,b as util,n5 as valueAndGrad,o5 as valueAndGrads,uC as variable,yb as variableGrads,D8r as version,zJ as version_converter,hq as version_core,d9 as version_cpu,gd as version_layers,Zce as version_wasm,nne as version_webgl,Y6t as webgl,x$ as webgl_util,LU as webgpu,Gt as where,Kf as whereAsync,Tt as zeros,De as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
